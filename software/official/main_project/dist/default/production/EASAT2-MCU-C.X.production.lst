

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Jan 28 10:58:29 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 1.40
    72                           ; Generated 01/12/2016 GMT
    73                           ; 
    74                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F45K22 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	mediumconst
   107  007EF4                     __pmediumconst:
   108                           	opt stack 0
   109  007EF4  00                 	db	0
   110  007EF5                     _dpowers:
   111                           	opt stack 0
   112  007EF5  0001               	dw	1
   113  007EF7  0000               	dw	0
   114  007EF9  000A               	dw	10
   115  007EFB  0000               	dw	0
   116  007EFD  0064               	dw	100
   117  007EFF  0000               	dw	0
   118  007F01  03E8               	dw	1000
   119  007F03  0000               	dw	0
   120  007F05  2710               	dw	10000
   121  007F07  0000               	dw	0
   122  007F09  86A0               	dw	34464
   123  007F0B  0001               	dw	1
   124  007F0D  4240               	dw	16960
   125  007F0F  000F               	dw	15
   126  007F11  9680               	dw	38528
   127  007F13  0098               	dw	152
   128  007F15  E100               	dw	57600
   129  007F17  05F5               	dw	1525
   130  007F19  CA00               	dw	51712
   131  007F1B  3B9A               	dw	15258
   132  007F1D                     __end_of_dpowers:
   133                           	opt stack 0
   134  007F1D                     __npowers_:
   135                           	opt stack 0
   136  007F1D  00                 	db	0
   137  007F1E  80                 	db	128
   138  007F1F  3F                 	db	63
   139  007F20  CD                 	db	205
   140  007F21  CC                 	db	204
   141  007F22  3D                 	db	61
   142  007F23  D7                 	db	215
   143  007F24  23                 	db	35
   144  007F25  3C                 	db	60
   145  007F26  12                 	db	18
   146  007F27  83                 	db	131
   147  007F28  3A                 	db	58
   148  007F29  B7                 	db	183
   149  007F2A  D1                 	db	209
   150  007F2B  38                 	db	56
   151  007F2C  C6                 	db	198
   152  007F2D  27                 	db	39
   153  007F2E  37                 	db	55
   154  007F2F  38                 	db	56
   155  007F30  86                 	db	134
   156  007F31  35                 	db	53
   157  007F32  C0                 	db	192
   158  007F33  D6                 	db	214
   159  007F34  33                 	db	51
   160  007F35  CC                 	db	204
   161  007F36  2B                 	db	43
   162  007F37  32                 	db	50
   163  007F38  70                 	db	112
   164  007F39  89                 	db	137
   165  007F3A  30                 	db	48
   166  007F3B  E7                 	db	231
   167  007F3C  DB                 	db	219
   168  007F3D  2E                 	db	46
   169  007F3E  E5                 	db	229
   170  007F3F  3C                 	db	60
   171  007F40  1E                 	db	30
   172  007F41  42                 	db	66
   173  007F42  A2                 	db	162
   174  007F43  0D                 	db	13
   175  007F44                     __end_of__npowers_:
   176                           	opt stack 0
   177  007F44                     __powers_:
   178                           	opt stack 0
   179  007F44  00                 	db	0
   180  007F45  80                 	db	128
   181  007F46  3F                 	db	63
   182  007F47  00                 	db	0
   183  007F48  20                 	db	32
   184  007F49  41                 	db	65
   185  007F4A  00                 	db	0
   186  007F4B  C8                 	db	200
   187  007F4C  42                 	db	66
   188  007F4D  00                 	db	0
   189  007F4E  7A                 	db	122
   190  007F4F  44                 	db	68
   191  007F50  40                 	db	64
   192  007F51  1C                 	db	28
   193  007F52  46                 	db	70
   194  007F53  50                 	db	80
   195  007F54  C3                 	db	195
   196  007F55  47                 	db	71
   197  007F56  24                 	db	36
   198  007F57  74                 	db	116
   199  007F58  49                 	db	73
   200  007F59  97                 	db	151
   201  007F5A  18                 	db	24
   202  007F5B  4B                 	db	75
   203  007F5C  BC                 	db	188
   204  007F5D  BE                 	db	190
   205  007F5E  4C                 	db	76
   206  007F5F  6B                 	db	107
   207  007F60  6E                 	db	110
   208  007F61  4E                 	db	78
   209  007F62  03                 	db	3
   210  007F63  15                 	db	21
   211  007F64  50                 	db	80
   212  007F65  79                 	db	121
   213  007F66  AD                 	db	173
   214  007F67  60                 	db	96
   215  007F68  F3                 	db	243
   216  007F69  49                 	db	73
   217  007F6A  71                 	db	113
   218  007F6B                     __end_of__powers_:
   219                           	opt stack 0
   220  0000                     _ANSELAbits	set	3896
   221  0000                     _ANSELDbits	set	3899
   222  0000                     _VREFCON0bits	set	3906
   223  0000                     _ADRES	set	4035
   224  0000                     _ADCON0bits	set	4034
   225  0000                     _ADCON1	set	4033
   226  0000                     _ADCON2	set	4032
   227  0000                     _INTCONbits	set	4082
   228  0000                     _IPR1bits	set	3999
   229  0000                     _LATAbits	set	3977
   230  0000                     _LATDbits	set	3980
   231  0000                     _PIE1bits	set	3997
   232  0000                     _PIR1bits	set	3998
   233  0000                     _PORTAbits	set	3968
   234  0000                     _PORTDbits	set	3971
   235  0000                     _RCONbits	set	4048
   236  0000                     _T1CONbits	set	4045
   237  0000                     _TMR1H	set	4047
   238  0000                     _TMR1L	set	4046
   239  0000                     _TRISAbits	set	3986
   240  0000                     _TRISDbits	set	3989
   241  0000                     _TMR1IE	set	31976
   242  0000                     _TMR1IF	set	31984
   243  007F6B                     STR_2:
   244  007F6B  20                 	db	32
   245  007F6C  25                 	db	37
   246  007F6D  2E                 	db	46
   247  007F6E  31                 	db	49	;'1'
   248  007F6F  66                 	db	102	;'f'
   249  007F70  20                 	db	32
   250  007F71  25                 	db	37
   251  007F72  2E                 	db	46
   252  007F73  31                 	db	49	;'1'
   253  007F74  66                 	db	102	;'f'
   254  007F75  20                 	db	32
   255  007F76  25                 	db	37
   256  007F77  33                 	db	51	;'3'
   257  007F78  2E                 	db	46
   258  007F79  30                 	db	48	;'0'
   259  007F7A  64                 	db	100	;'d'
   260  007F7B  20                 	db	32
   261  007F7C  25                 	db	37
   262  007F7D  33                 	db	51	;'3'
   263  007F7E  2E                 	db	46
   264  007F7F  30                 	db	48	;'0'
   265  007F80  64                 	db	100	;'d'
   266  007F81  00                 	db	0
   267  007F82                     STR_39:
   268  007F82  2D                 	db	45
   269  007F83  2D                 	db	45
   270  007F84  2E                 	db	46
   271  007F85  2E                 	db	46
   272  007F86  2D                 	db	45
   273  007F87  2D                 	db	45
   274  007F88  00                 	db	0
   275  007F89                     STR_42:
   276  007F89  2E                 	db	46
   277  007F8A  2D                 	db	45
   278  007F8B  2E                 	db	46
   279  007F8C  2D                 	db	45
   280  007F8D  2E                 	db	46
   281  007F8E  2D                 	db	45
   282  007F8F  00                 	db	0
   283  007F90                     STR_43:
   284  007F90  2D                 	db	45
   285  007F91  2E                 	db	46
   286  007F92  2E                 	db	46
   287  007F93  2E                 	db	46
   288  007F94  2E                 	db	46
   289  007F95  2D                 	db	45
   290  007F96  00                 	db	0
   291  007F97                     STR_40:
   292  007F97  2E                 	db	46
   293  007F98  2E                 	db	46
   294  007F99  2D                 	db	45
   295  007F9A  2D                 	db	45
   296  007F9B  2E                 	db	46
   297  007F9C  2E                 	db	46
   298  007F9D  00                 	db	0
   299  007F9E                     STR_1:
   300  007F9E  45                 	db	69	;'E'
   301  007F9F  41                 	db	65	;'A'
   302  007FA0  53                 	db	83	;'S'
   303  007FA1  41                 	db	65	;'A'
   304  007FA2  54                 	db	84	;'T'
   305  007FA3  32                 	db	50	;'2'
   306  007FA4  00                 	db	0
   307  007FA5                     STR_29:
   308  007FA5  2D                 	db	45
   309  007FA6  2D                 	db	45
   310  007FA7  2D                 	db	45
   311  007FA8  2D                 	db	45
   312  007FA9  2D                 	db	45
   313  007FAA  00                 	db	0
   314  007FAB                     STR_30:
   315  007FAB  2E                 	db	46
   316  007FAC  2D                 	db	45
   317  007FAD  2D                 	db	45
   318  007FAE  2D                 	db	45
   319  007FAF  2D                 	db	45
   320  007FB0  00                 	db	0
   321  007FB1                     STR_31:
   322  007FB1  2E                 	db	46
   323  007FB2  2E                 	db	46
   324  007FB3  2D                 	db	45
   325  007FB4  2D                 	db	45
   326  007FB5  2D                 	db	45
   327  007FB6  00                 	db	0
   328  007FB7                     STR_32:
   329  007FB7  2E                 	db	46
   330  007FB8  2E                 	db	46
   331  007FB9  2E                 	db	46
   332  007FBA  2D                 	db	45
   333  007FBB  2D                 	db	45
   334  007FBC  00                 	db	0
   335  007FBD                     STR_38:
   336  007FBD  2D                 	db	45
   337  007FBE  2D                 	db	45
   338  007FBF  2D                 	db	45
   339  007FC0  2D                 	db	45
   340  007FC1  2E                 	db	46
   341  007FC2  00                 	db	0
   342  007FC3                     STR_41:
   343  007FC3  2D                 	db	45
   344  007FC4  2E                 	db	46
   345  007FC5  2E                 	db	46
   346  007FC6  2D                 	db	45
   347  007FC7  2E                 	db	46
   348  007FC8  00                 	db	0
   349  007FC9                     STR_37:
   350  007FC9  2D                 	db	45
   351  007FCA  2D                 	db	45
   352  007FCB  2D                 	db	45
   353  007FCC  2E                 	db	46
   354  007FCD  2E                 	db	46
   355  007FCE  00                 	db	0
   356  007FCF                     STR_36:
   357  007FCF  2D                 	db	45
   358  007FD0  2D                 	db	45
   359  007FD1  2E                 	db	46
   360  007FD2  2E                 	db	46
   361  007FD3  2E                 	db	46
   362  007FD4  00                 	db	0
   363  007FD5                     STR_35:
   364  007FD5  2D                 	db	45
   365  007FD6  2E                 	db	46
   366  007FD7  2E                 	db	46
   367  007FD8  2E                 	db	46
   368  007FD9  2E                 	db	46
   369  007FDA  00                 	db	0
   370  007FDB                     STR_34:
   371  007FDB  2E                 	db	46
   372  007FDC  2E                 	db	46
   373  007FDD  2E                 	db	46
   374  007FDE  2E                 	db	46
   375  007FDF  2E                 	db	46
   376  007FE0  00                 	db	0
   377  007FE1                     STR_27:
   378  007FE1  2D                 	db	45
   379  007FE2  2E                 	db	46
   380  007FE3  2D                 	db	45
   381  007FE4  2D                 	db	45
   382  007FE5  00                 	db	0
   383  007FE6                     STR_19:
   384  007FE6  2D                 	db	45
   385  007FE7  2D                 	db	45
   386  007FE8  2E                 	db	46
   387  007FE9  2D                 	db	45
   388  007FEA  00                 	db	0
   389  007FEB                     STR_26:
   390  007FEB  2D                 	db	45
   391  007FEC  2E                 	db	46
   392  007FED  2E                 	db	46
   393  007FEE  2D                 	db	45
   394  007FEF  00                 	db	0
   395  007FF0                     STR_18:
   396  007FF0  2E                 	db	46
   397  007FF1  2D                 	db	45
   398  007FF2  2D                 	db	45
   399  007FF3  2E                 	db	46
   400  007FF4  00                 	db	0
   401  007FF5                     STR_5:
   402  007FF5  2D                 	db	45
   403  007FF6  2E                 	db	46
   404  007FF7  2D                 	db	45
   405  007FF8  2E                 	db	46
   406  007FF9  00                 	db	0
   407  007FFA                     STR_14:
   408  007FFA  2E                 	db	46
   409  007FFB  2D                 	db	45
   410  007FFC  2E                 	db	46
   411  007FFD  2E                 	db	46
   412  007FFE  00                 	db	0
   413  0000                     
   414                           ; #config settings
   415  007FFF  00                 	db	0	; dummy byte at the end
   416  0000                     
   417                           	psect	cinit
   418  0034DE                     __pcinit:
   419                           	opt stack 0
   420  0034DE                     start_initialization:
   421                           	opt stack 0
   422  0034DE                     __initialization:
   423                           	opt stack 0
   424                           
   425                           ; Clear objects allocated to COMRAM (2 bytes)
   426  0034DE  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   427  0034E0  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   428  0034E2                     end_of_initialization:
   429                           	opt stack 0
   430  0034E2                     __end_of__initialization:
   431                           	opt stack 0
   432  0034E2  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   433  0034E4  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   434  0034E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   435  0034E8  6EF8               	movwf	tblptru,c
   436  0034EA  0100               	movlb	0
   437  0034EC  EF8D  F01A         	goto	_main	;jump to C main() function
   438                           tblptru	equ	0xFF8
   439                           
   440                           	psect	bssCOMRAM
   441  00003C                     __pbssCOMRAM:
   442                           	opt stack 0
   443  00003C                     _tmr1_interrupt_number:
   444                           	opt stack 0
   445  00003C                     	ds	2
   446                           tblptru	equ	0xFF8
   447                           
   448                           	psect	cstackBANK1
   449  000100                     __pcstackBANK1:
   450                           	opt stack 0
   451  000100                     util_beacon_transmission@BEACON_MESSAGE:
   452                           	opt stack 0
   453  000100                     util_getTemperature@bit_mem:
   454                           	opt stack 0
   455                           
   456                           ; 144 bytes @ 0x0
   457  000100                     	ds	128
   458  000180                     util_beacon_transmission@BEACON_BUFFER:
   459                           	opt stack 0
   460                           
   461                           ; 64 bytes @ 0x80
   462  000180                     	ds	16
   463  000190                     util_getTemperature@byte_mem:
   464                           	opt stack 0
   465                           
   466                           ; 18 bytes @ 0x90
   467  000190                     	ds	18
   468  0001A2                     util_getTemperature@num_bit:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0xA2
   472  0001A2                     	ds	2
   473  0001A4                     util_getTemperature@sign:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0xA4
   477  0001A4                     	ds	3
   478  0001A7                     _util_getTemperature$2078:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0xA7
   482  0001A7                     	ds	3
   483  0001AA                     _util_getTemperature$2079:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0xAA
   487  0001AA                     	ds	3
   488  0001AD                     _util_getTemperature$2080:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0xAD
   492  0001AD                     	ds	3
   493  0001B0                     _util_getTemperature$2081:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0xB0
   497  0001B0                     	ds	3
   498  0001B3                     util_getTemperature@shift_reg_bit0:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xB3
   502  0001B3                     	ds	2
   503  0001B5                     util_getTemperature@shift_reg_bit1:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0xB5
   507  0001B5                     	ds	2
   508  0001B7                     util_getTemperature@shift_reg_bit2:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xB7
   512  0001B7                     	ds	2
   513  0001B9                     util_getTemperature@shift_reg_bit3:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0xB9
   517  0001B9                     	ds	2
   518  0001BB                     util_getTemperature@shift_reg_bit4:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0xBB
   522  0001BB                     	ds	2
   523  0001BD                     util_getTemperature@shift_reg_bit5:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xBD
   527  0001BD                     	ds	2
   528  0001BF                     util_getTemperature@shift_reg_bit6:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xBF
   532  0001BF                     	ds	1
   533  0001C0                     util_beacon_transmission@i:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0xC0
   537  0001C0                     	ds	1
   538  0001C1                     util_getTemperature@shift_reg_bit7:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0xC1
   542  0001C1                     	ds	2
   543  0001C3                     util_getTemperature@shift_reg_bit_temp:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xC3
   547  0001C3                     	ds	2
   548  0001C5                     util_getTemperature@num_byte:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0xC5
   552  0001C5                     	ds	2
   553  0001C7                     util_getTemperature@bit_in_byte:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xC7
   557  0001C7                     	ds	2
   558  0001C9                     util_getTemperature@temperature:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0xC9
   562  0001C9                     	ds	3
   563  0001CC                     util_getTemperature@i:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0xCC
   567  0001CC                     	ds	2
   568                           tblptru	equ	0xFF8
   569                           
   570                           	psect	cstackBANK0
   571  000060                     __pcstackBANK0:
   572                           	opt stack 0
   573  000060                     ??___ftmul:
   574  000060                     util_onewire_read_byte@bit0:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x0
   578  000060                     	ds	2
   579  000062                     util_onewire_read_byte@bit1:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x2
   583  000062                     	ds	1
   584  000063                     ___ftmul@exp:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x3
   588  000063                     	ds	1
   589  000064                     util_onewire_read_byte@bit2:
   590                           	opt stack 0
   591  000064                     ___ftmul@f3_as_product:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x4
   595  000064                     	ds	2
   596  000066                     util_onewire_read_byte@bit3:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x6
   600  000066                     	ds	1
   601  000067                     ___ftmul@cntr:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x7
   605  000067                     	ds	1
   606  000068                     ___ftmul@sign:
   607                           	opt stack 0
   608  000068                     util_onewire_read_byte@bit4:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x8
   612  000068                     	ds	1
   613  000069                     ?_util_getBatteryVoltage:
   614                           	opt stack 0
   615  000069                     ?_fround:
   616                           	opt stack 0
   617  000069                     ?_scale:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x9
   621  000069                     	ds	1
   622  00006A                     util_onewire_read_byte@bit5:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xA
   626  00006A                     	ds	2
   627  00006C                     util_onewire_read_byte@bit6:
   628                           	opt stack 0
   629  00006C                     util_getBatteryVoltage@value:
   630                           	opt stack 0
   631  00006C                     _fround$2083:
   632                           	opt stack 0
   633  00006C                     _scale$2084:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0xC
   637  00006C                     	ds	2
   638  00006E                     util_onewire_read_byte@bit7:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xE
   642  00006E                     	ds	1
   643  00006F                     scale@scl:
   644                           	opt stack 0
   645  00006F                     util_getBatteryVoltage@voltage:
   646                           	opt stack 0
   647  00006F                     _fround$2082:
   648                           	opt stack 0
   649                           
   650                           ; 3 bytes @ 0xF
   651  00006F                     	ds	1
   652  000070                     ?___fttol:
   653                           	opt stack 0
   654  000070                     util_onewire_read_byte@value:
   655                           	opt stack 0
   656  000070                     ___fttol@f1:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x10
   660  000070                     	ds	2
   661  000072                     fround@prec:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x12
   665  000072                     	ds	1
   666  000073                     ?___ftadd:
   667                           	opt stack 0
   668  000073                     ___ftadd@f1:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0x13
   672  000073                     	ds	1
   673  000074                     ??___fttol:
   674                           
   675                           ; 1 bytes @ 0x14
   676  000074                     	ds	2
   677  000076                     ___ftadd@f2:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x16
   681  000076                     	ds	3
   682  000079                     ??___ftadd:
   683  000079                     ___fttol@sign1:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x19
   687  000079                     	ds	1
   688  00007A                     ___fttol@lval:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x1A
   692  00007A                     	ds	2
   693  00007C                     ___ftadd@sign:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x1C
   697  00007C                     	ds	1
   698  00007D                     ___ftadd@exp2:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x1D
   702  00007D                     	ds	1
   703  00007E                     ___ftadd@exp1:
   704                           	opt stack 0
   705  00007E                     ___fttol@exp1:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x1E
   709  00007E                     	ds	1
   710  00007F                     ?_util_getSolarCurrent:
   711                           	opt stack 0
   712  00007F                     ?_util_getBatteryCurrent:
   713                           	opt stack 0
   714  00007F                     ?_util_getTemperature:
   715                           	opt stack 0
   716  00007F                     ?___ftsub:
   717                           	opt stack 0
   718  00007F                     ___ftsub@f1:
   719                           	opt stack 0
   720                           
   721                           ; 3 bytes @ 0x1F
   722  00007F                     	ds	2
   723  000081                     util_getSolarCurrent@value:
   724                           	opt stack 0
   725  000081                     util_getBatteryCurrent@value:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x21
   729  000081                     	ds	1
   730  000082                     ??_util_getTemperature:
   731  000082                     ___ftsub@f2:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x22
   735  000082                     	ds	2
   736  000084                     util_getSolarCurrent@solarCurrent:
   737                           	opt stack 0
   738  000084                     util_getBatteryCurrent@batteryCurrent:
   739                           	opt stack 0
   740                           
   741                           ; 3 bytes @ 0x24
   742  000084                     	ds	1
   743  000085                     ?_sprintf:
   744                           	opt stack 0
   745  000085                     sprintf@sp:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x25
   749  000085                     	ds	2
   750  000087                     sprintf@f:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x27
   754  000087                     	ds	12
   755  000093                     ??_sprintf:
   756                           
   757                           ; 1 bytes @ 0x33
   758  000093                     	ds	6
   759  000099                     _sprintf$2085:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x39
   763  000099                     	ds	3
   764  00009C                     sprintf@ap:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x3C
   768  00009C                     	ds	2
   769  00009E                     sprintf@flag:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x3E
   773  00009E                     	ds	2
   774  0000A0                     sprintf@width:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x40
   778  0000A0                     	ds	2
   779  0000A2                     sprintf@tmpval:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x42
   783  0000A2                     	ds	4
   784  0000A6                     sprintf@val:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x46
   788  0000A6                     	ds	4
   789  0000AA                     sprintf@exp:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x4A
   793  0000AA                     	ds	2
   794  0000AC                     sprintf@fval:
   795                           	opt stack 0
   796                           
   797                           ; 3 bytes @ 0x4C
   798  0000AC                     	ds	3
   799  0000AF                     sprintf@prec:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x4F
   803  0000AF                     	ds	2
   804  0000B1                     sprintf@c:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x51
   808  0000B1                     	ds	1
   809  0000B2                     util_beacon_transmission@battery_voltage:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x52
   813  0000B2                     	ds	3
   814  0000B5                     util_beacon_transmission@solar_current:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x55
   818  0000B5                     	ds	2
   819  0000B7                     util_beacon_transmission@battery_current:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x57
   823  0000B7                     	ds	2
   824  0000B9                     util_beacon_transmission@temperature:
   825                           	opt stack 0
   826                           
   827                           ; 3 bytes @ 0x59
   828  0000B9                     	ds	3
   829  0000BC                     main_loop@temperature:
   830                           	opt stack 0
   831                           
   832                           ; 3 bytes @ 0x5C
   833  0000BC                     	ds	3
   834  0000BF                     main_loop@solar_current:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x5F
   838  0000BF                     	ds	2
   839  0000C1                     main_loop@battery_current:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x61
   843  0000C1                     	ds	2
   844  0000C3                     main_loop@battery_voltage:
   845                           	opt stack 0
   846                           
   847                           ; 3 bytes @ 0x63
   848  0000C3                     	ds	3
   849                           tblptru	equ	0xFF8
   850                           
   851                           	psect	cstackCOMRAM
   852  000001                     __pcstackCOMRAM:
   853                           	opt stack 0
   854  000001                     ??_high_priority_int:
   855  000001                     
   856                           ; 1 bytes @ 0x0
   857  000001                     	ds	15
   858  000010                     ??_low_priority_int:
   859                           
   860                           ; 1 bytes @ 0xF
   861  000010                     	ds	17
   862  000021                     ??_isdigit:
   863  000021                     ?_util_onewire_reset:
   864                           	opt stack 0
   865  000021                     ?_util_onewire_read_bit:
   866                           	opt stack 0
   867  000021                     ?_strlen:
   868                           	opt stack 0
   869  000021                     ?___awmod:
   870                           	opt stack 0
   871  000021                     ?___ftpack:
   872                           	opt stack 0
   873  000021                     ?___ftneg:
   874                           	opt stack 0
   875  000021                     ?__tdiv_to_l_:
   876                           	opt stack 0
   877  000021                     ?__div_to_l_:
   878                           	opt stack 0
   879  000021                     ?___lldiv:
   880                           	opt stack 0
   881  000021                     util_onewire_write_bit@bit_in:
   882                           	opt stack 0
   883  000021                     util_waits_delay_ms@ms:
   884                           	opt stack 0
   885  000021                     util_waits_delay_hundred_us@hun_us:
   886                           	opt stack 0
   887  000021                     ___awmod@dividend:
   888                           	opt stack 0
   889  000021                     memset@p1:
   890                           	opt stack 0
   891  000021                     strcat@to:
   892                           	opt stack 0
   893  000021                     strcpy@to:
   894                           	opt stack 0
   895  000021                     strlen@s:
   896                           	opt stack 0
   897  000021                     __div_to_l_@f1:
   898                           	opt stack 0
   899  000021                     ___ftpack@arg:
   900                           	opt stack 0
   901  000021                     __tdiv_to_l_@f1:
   902                           	opt stack 0
   903  000021                     ___ftge@ff1:
   904                           	opt stack 0
   905  000021                     ___ftneg@f1:
   906                           	opt stack 0
   907  000021                     ___lldiv@dividend:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x20
   911  000021                     	ds	1
   912  000022                     _isdigit$1739:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x21
   916  000022                     	ds	1
   917  000023                     ??_util_onewire_reset:
   918  000023                     ??_util_onewire_read_bit:
   919  000023                     ??_strlen:
   920  000023                     ??_util_waits_delay_ms:
   921  000023                     ??_util_waits_delay_hundred_us:
   922  000023                     isdigit@c:
   923                           	opt stack 0
   924  000023                     util_onewire_write_byte@value:
   925                           	opt stack 0
   926  000023                     ___awmod@divisor:
   927                           	opt stack 0
   928  000023                     memset@c:
   929                           	opt stack 0
   930  000023                     strcat@from:
   931                           	opt stack 0
   932  000023                     strcpy@from:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x22
   936  000023                     	ds	1
   937  000024                     ___ftpack@exp:
   938                           	opt stack 0
   939  000024                     util_onewire_reset@presence:
   940                           	opt stack 0
   941  000024                     util_onewire_read_bit@value:
   942                           	opt stack 0
   943  000024                     util_waits_delay_ms@i:
   944                           	opt stack 0
   945  000024                     util_waits_delay_hundred_us@i:
   946                           	opt stack 0
   947  000024                     __div_to_l_@f2:
   948                           	opt stack 0
   949  000024                     __tdiv_to_l_@f2:
   950                           	opt stack 0
   951  000024                     ___ftge@ff2:
   952                           	opt stack 0
   953                           
   954                           ; 3 bytes @ 0x23
   955  000024                     	ds	1
   956  000025                     ??_util_onewire_write_byte:
   957  000025                     ___awmod@counter:
   958                           	opt stack 0
   959  000025                     ___ftpack@sign:
   960                           	opt stack 0
   961  000025                     memset@n:
   962                           	opt stack 0
   963  000025                     strcat@cp:
   964                           	opt stack 0
   965  000025                     strcpy@cp:
   966                           	opt stack 0
   967  000025                     strlen@cp:
   968                           	opt stack 0
   969  000025                     ___lldiv@divisor:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x24
   973  000025                     	ds	1
   974  000026                     ??___ftpack:
   975  000026                     ?_util_onewire_read_byte:
   976                           	opt stack 0
   977  000026                     ___awmod@sign:
   978                           	opt stack 0
   979  000026                     util_transmit_dot@i:
   980                           	opt stack 0
   981  000026                     util_transmit_dash@i:
   982                           	opt stack 0
   983  000026                     util_waits_delay_secs@secs:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x25
   987  000026                     	ds	1
   988  000027                     ??__tdiv_to_l_:
   989  000027                     ??___ftge:
   990  000027                     ?___awdiv:
   991                           	opt stack 0
   992  000027                     ___awdiv@dividend:
   993                           	opt stack 0
   994  000027                     memset@p:
   995                           	opt stack 0
   996  000027                     __div_to_l_@quot:
   997                           	opt stack 0
   998                           
   999                           ; 4 bytes @ 0x26
  1000  000027                     	ds	1
  1001  000028                     ??_util_waits_delay_secs:
  1002  000028                     ??_util_onewire_read_byte:
  1003  000028                     util_onewire_write_byte@bit0:
  1004                           	opt stack 0
  1005  000028                     util_transmit_morse_sequence@morse_sequence:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x27
  1009  000028                     	ds	1
  1010  000029                     ?___awtoft:
  1011                           	opt stack 0
  1012  000029                     ?___lltoft:
  1013                           	opt stack 0
  1014  000029                     ?___lwtoft:
  1015                           	opt stack 0
  1016  000029                     util_waits_delay_secs@i:
  1017                           	opt stack 0
  1018  000029                     ___awdiv@divisor:
  1019                           	opt stack 0
  1020  000029                     ___awtoft@c:
  1021                           	opt stack 0
  1022  000029                     ___lwtoft@c:
  1023                           	opt stack 0
  1024  000029                     ___lldiv@quotient:
  1025                           	opt stack 0
  1026  000029                     ___lltoft@c:
  1027                           	opt stack 0
  1028                           
  1029                           ; 4 bytes @ 0x28
  1030  000029                     	ds	1
  1031  00002A                     ??_util_transmit_morse_sequence:
  1032  00002A                     util_onewire_write_byte@bit1:
  1033                           	opt stack 0
  1034  00002A                     __tdiv_to_l_@quot:
  1035                           	opt stack 0
  1036                           
  1037                           ; 4 bytes @ 0x29
  1038  00002A                     	ds	1
  1039  00002B                     ___awdiv@counter:
  1040                           	opt stack 0
  1041  00002B                     __div_to_l_@cntr:
  1042                           	opt stack 0
  1043  00002B                     util_waits_delay_secs@j:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x2A
  1047  00002B                     	ds	1
  1048  00002C                     ___awdiv@sign:
  1049                           	opt stack 0
  1050  00002C                     ___awtoft@sign:
  1051                           	opt stack 0
  1052  00002C                     __div_to_l_@exp1:
  1053                           	opt stack 0
  1054  00002C                     util_onewire_write_byte@bit2:
  1055                           	opt stack 0
  1056  00002C                     util_transmit_morse_sequence@i:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x2B
  1060  00002C                     	ds	1
  1061  00002D                     ??___lltoft:
  1062  00002D                     ?___ftdiv:
  1063                           	opt stack 0
  1064  00002D                     ___lldiv@counter:
  1065                           	opt stack 0
  1066  00002D                     util_waits_delay_mins@minutes:
  1067                           	opt stack 0
  1068  00002D                     ___awdiv@quotient:
  1069                           	opt stack 0
  1070  00002D                     ___ftdiv@f1:
  1071                           	opt stack 0
  1072                           
  1073                           ; 3 bytes @ 0x2C
  1074  00002D                     	ds	1
  1075  00002E                     ?___llmod:
  1076                           	opt stack 0
  1077  00002E                     util_transmit_letter@letter:
  1078                           	opt stack 0
  1079  00002E                     __tdiv_to_l_@cntr:
  1080                           	opt stack 0
  1081  00002E                     util_onewire_write_byte@bit3:
  1082                           	opt stack 0
  1083  00002E                     ___llmod@dividend:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x2D
  1087  00002E                     	ds	1
  1088  00002F                     ??_util_waits_delay_mins:
  1089  00002F                     ?___wmul:
  1090                           	opt stack 0
  1091  00002F                     __tdiv_to_l_@exp1:
  1092                           	opt stack 0
  1093  00002F                     ___wmul@multiplier:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x2E
  1097  00002F                     	ds	1
  1098  000030                     util_onewire_write_byte@bit4:
  1099                           	opt stack 0
  1100  000030                     util_waits_delay_mins@i:
  1101                           	opt stack 0
  1102  000030                     ___ftdiv@f2:
  1103                           	opt stack 0
  1104                           
  1105                           ; 3 bytes @ 0x2F
  1106  000030                     	ds	1
  1107  000031                     ___lltoft@exp:
  1108                           	opt stack 0
  1109  000031                     ___wmul@multiplicand:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x30
  1113  000031                     	ds	1
  1114  000032                     util_onewire_write_byte@bit5:
  1115                           	opt stack 0
  1116  000032                     util_waits_delay_hours@hours:
  1117                           	opt stack 0
  1118  000032                     ___llmod@divisor:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x31
  1122  000032                     	ds	1
  1123  000033                     ??___ftdiv:
  1124  000033                     ___wmul@product:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x32
  1128  000033                     	ds	1
  1129  000034                     ??_util_waits_delay_hours:
  1130  000034                     util_onewire_write_byte@bit6:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x33
  1134  000034                     	ds	1
  1135  000035                     ?___ftmul:
  1136                           	opt stack 0
  1137  000035                     util_waits_delay_hours@i:
  1138                           	opt stack 0
  1139  000035                     ___ftmul@f1:
  1140                           	opt stack 0
  1141                           
  1142                           ; 3 bytes @ 0x34
  1143  000035                     	ds	1
  1144  000036                     ___ftdiv@cntr:
  1145                           	opt stack 0
  1146  000036                     ___llmod@counter:
  1147                           	opt stack 0
  1148  000036                     util_onewire_write_byte@bit7:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x35
  1152  000036                     	ds	1
  1153  000037                     ___ftdiv@f3:
  1154                           	opt stack 0
  1155                           
  1156                           ; 3 bytes @ 0x36
  1157  000037                     	ds	1
  1158  000038                     ___ftmul@f2:
  1159                           	opt stack 0
  1160                           
  1161                           ; 3 bytes @ 0x37
  1162  000038                     	ds	2
  1163  00003A                     ___ftdiv@exp:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x39
  1167  00003A                     	ds	1
  1168  00003B                     ___ftdiv@sign:
  1169                           	opt stack 0
  1170                           
  1171                           ; 1 bytes @ 0x3A
  1172  00003B                     	ds	1
  1173  00003C                     tblptru	equ	0xFF8
  1174                           
  1175                           ; 1 bytes @ 0x3B
  1176 ;;
  1177 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1178 ;;
  1179 ;; *************** function _main *****************
  1180 ;; Defined at:
  1181 ;;		line 19 in file "easat2_main_mcu.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels required when called:    9
  1201 ;; This function calls:
  1202 ;;		_initialize
  1203 ;;		_main_loop
  1204 ;; This function is called by:
  1205 ;;		Startup code after reset
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text0
  1210  00351A                     __ptext0:
  1211                           	opt stack 0
  1212  00351A                     _main:
  1213                           	opt stack 22
  1214                           
  1215                           ;easat2_main_mcu.c: 22: initialize();
  1216                           
  1217                           ;incstack = 0
  1218  00351A  EC71  F016         	call	_initialize	;wreg free
  1219                           
  1220                           ;easat2_main_mcu.c: 25: main_loop();
  1221  00351E  ECB6  F016         	call	_main_loop	;wreg free
  1222  003522  EF53  F000         	goto	start
  1223  003526                     __end_of_main:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           
  1227 ;; *************** function _main_loop *****************
  1228 ;; Defined at:
  1229 ;;		line 31 in file "easat2_main_mcu.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  battery_volt    3   99[BANK0 ] float 
  1234 ;;  temperature     3   92[BANK0 ] float 
  1235 ;;  battery_curr    2   97[BANK0 ] int 
  1236 ;;  solar_curren    2   95[BANK0 ] int 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1246 ;;      Params:         0       0       0       0       0       0       0
  1247 ;;      Locals:         0      10       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0
  1249 ;;      Totals:         0      10       0       0       0       0       0
  1250 ;;Total ram usage:       10 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    8
  1253 ;; This function calls:
  1254 ;;		_util_beacon_transmission
  1255 ;;		_util_getBatteryCurrent
  1256 ;;		_util_getBatteryVoltage
  1257 ;;		_util_getSolarCurrent
  1258 ;;		_util_getTemperature
  1259 ;;		_util_waits_delay_hours
  1260 ;;		_util_waits_delay_mins
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text1
  1267  002D6C                     __ptext1:
  1268                           	opt stack 0
  1269  002D6C                     _main_loop:
  1270                           	opt stack 22
  1271  002D6C                     l24:
  1272  002D6C  0004               	clrwdt		;# 
  1273                           
  1274                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1275  002D6E  EC24  F015         	call	_util_getBatteryVoltage	;wreg free
  1276  002D72  C069  F0C3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1277  002D76  C06A  F0C4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1278  002D7A  C06B  F0C5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1279                           
  1280                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1281  002D7E  EC66  F014         	call	_util_getSolarCurrent	;wreg free
  1282  002D82  C07F  F0BF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1283  002D86  C080  F0C0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1284                           
  1285                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1286  002D8A  ECC5  F014         	call	_util_getBatteryCurrent	;wreg free
  1287  002D8E  C07F  F0C1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1288  002D92  C080  F0C2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1289                           
  1290                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1291  002D96  EC0C  F006         	call	_util_getTemperature	;wreg free
  1292  002D9A  C07F  F0BC         	movff	?_util_getTemperature,main_loop@temperature
  1293  002D9E  C080  F0BD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1294  002DA2  C081  F0BE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1295                           
  1296                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1297  002DA6  0100               	movlb	0	; () banked
  1298  002DA8  BFC5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1299  002DAA  D017               	goto	l4859
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1303  002DAC  C0C3  F0B2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1304  002DB0  C0C4  F0B3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1305  002DB4  C0C5  F0B4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1306  002DB8  C0BF  F0B5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1307  002DBC  C0C0  F0B6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1308  002DC0  C0C1  F0B7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1309  002DC4  C0C2  F0B8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1310  002DC8  C0BC  F0B9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1311  002DCC  C0BD  F0BA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1312  002DD0  C0BE  F0BB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1313  002DD4  EC7E  F013         	call	_util_beacon_transmission	;wreg free
  1314                           
  1315                           ;easat2_main_mcu.c: 62: } else {
  1316  002DD8  D006               	goto	l26
  1317  002DDA                     l4859:
  1318                           
  1319                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1320  002DDA  0E00               	movlw	0
  1321  002DDC  6E33               	movwf	util_waits_delay_hours@hours+1,c
  1322  002DDE  0E02               	movlw	2
  1323  002DE0  6E32               	movwf	util_waits_delay_hours@hours,c
  1324  002DE2  EC65  F019         	call	_util_waits_delay_hours	;wreg free
  1325  002DE6                     l26:
  1326                           
  1327                           ;easat2_main_mcu.c: 65: }
  1328                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1329  002DE6  0E00               	movlw	0
  1330  002DE8  6E2E               	movwf	util_waits_delay_mins@minutes+1,c
  1331  002DEA  0E03               	movlw	3
  1332  002DEC  6E2D               	movwf	util_waits_delay_mins@minutes,c
  1333  002DEE  EC7D  F019         	call	_util_waits_delay_mins	;wreg free
  1334                           
  1335                           ;easat2_main_mcu.c: 71: } while (1);
  1336  002DF2  D7BC               	goto	l24
  1337  002DF4                     __end_of_main_loop:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           
  1341 ;; *************** function _util_waits_delay_hours *****************
  1342 ;; Defined at:
  1343 ;;		line 17 in file "easat2_util_waits.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  hours           2   49[COMRAM] int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  i               2   52[COMRAM] int 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         2       0       0       0       0       0       0
  1358 ;;      Locals:         2       0       0       0       0       0       0
  1359 ;;      Temps:          1       0       0       0       0       0       0
  1360 ;;      Totals:         5       0       0       0       0       0       0
  1361 ;;Total ram usage:        5 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    5
  1364 ;; This function calls:
  1365 ;;		_util_waits_delay_mins
  1366 ;; This function is called by:
  1367 ;;		_main_loop
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text2
  1372  0032CA                     __ptext2:
  1373                           	opt stack 0
  1374  0032CA                     _util_waits_delay_hours:
  1375                           	opt stack 24
  1376                           
  1377                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1378                           
  1379                           ;incstack = 0
  1380  0032CA  0E00               	movlw	0
  1381  0032CC  6E36               	movwf	util_waits_delay_hours@i+1,c
  1382  0032CE  0E00               	movlw	0
  1383  0032D0  6E35               	movwf	util_waits_delay_hours@i,c
  1384  0032D2  D008               	goto	l4219
  1385  0032D4                     l4215:
  1386                           
  1387                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1388  0032D4  0E00               	movlw	0
  1389  0032D6  6E2E               	movwf	util_waits_delay_mins@minutes+1,c
  1390  0032D8  0E3C               	movlw	60
  1391  0032DA  6E2D               	movwf	util_waits_delay_mins@minutes,c
  1392  0032DC  EC7D  F019         	call	_util_waits_delay_mins	;wreg free
  1393  0032E0  4A35               	infsnz	util_waits_delay_hours@i,f,c
  1394  0032E2  2A36               	incf	util_waits_delay_hours@i+1,f,c
  1395  0032E4                     l4219:
  1396  0032E4  5032               	movf	util_waits_delay_hours@hours,w,c
  1397  0032E6  5C35               	subwf	util_waits_delay_hours@i,w,c
  1398  0032E8  5036               	movf	util_waits_delay_hours@i+1,w,c
  1399  0032EA  0A80               	xorlw	128
  1400  0032EC  6E34               	movwf	??_util_waits_delay_hours& (0+255),c
  1401  0032EE  5033               	movf	util_waits_delay_hours@hours+1,w,c
  1402  0032F0  0A80               	xorlw	128
  1403  0032F2  5834               	subwfb	??_util_waits_delay_hours& (0+255),w,c
  1404  0032F4  B0D8               	btfsc	status,0,c
  1405  0032F6  0012               	return	
  1406  0032F8  D7ED               	goto	l4215
  1407  0032FA                     __end_of_util_waits_delay_hours:
  1408                           	opt stack 0
  1409                           tblptru	equ	0xFF8
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _util_waits_delay_mins *****************
  1413 ;; Defined at:
  1414 ;;		line 24 in file "easat2_util_waits.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  minutes         2   44[COMRAM] int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  i               2   47[COMRAM] int 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1428 ;;      Params:         2       0       0       0       0       0       0
  1429 ;;      Locals:         2       0       0       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0       0       0
  1431 ;;      Totals:         5       0       0       0       0       0       0
  1432 ;;Total ram usage:        5 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    4
  1435 ;; This function calls:
  1436 ;;		_util_waits_delay_secs
  1437 ;; This function is called by:
  1438 ;;		_main_loop
  1439 ;;		_util_waits_delay_hours
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text3
  1444  0032FA                     __ptext3:
  1445                           	opt stack 0
  1446  0032FA                     _util_waits_delay_mins:
  1447                           	opt stack 25
  1448                           
  1449                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1450                           
  1451                           ;incstack = 0
  1452  0032FA  0E00               	movlw	0
  1453  0032FC  6E31               	movwf	util_waits_delay_mins@i+1,c
  1454  0032FE  0E00               	movlw	0
  1455  003300  6E30               	movwf	util_waits_delay_mins@i,c
  1456  003302  D008               	goto	l3445
  1457  003304                     l3441:
  1458                           
  1459                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1460  003304  0E00               	movlw	0
  1461  003306  6E27               	movwf	util_waits_delay_secs@secs+1,c
  1462  003308  0E3C               	movlw	60
  1463  00330A  6E26               	movwf	util_waits_delay_secs@secs,c
  1464  00330C  EC6D  F018         	call	_util_waits_delay_secs	;wreg free
  1465  003310  4A30               	infsnz	util_waits_delay_mins@i,f,c
  1466  003312  2A31               	incf	util_waits_delay_mins@i+1,f,c
  1467  003314                     l3445:
  1468  003314  502D               	movf	util_waits_delay_mins@minutes,w,c
  1469  003316  5C30               	subwf	util_waits_delay_mins@i,w,c
  1470  003318  5031               	movf	util_waits_delay_mins@i+1,w,c
  1471  00331A  0A80               	xorlw	128
  1472  00331C  6E2F               	movwf	??_util_waits_delay_mins& (0+255),c
  1473  00331E  502E               	movf	util_waits_delay_mins@minutes+1,w,c
  1474  003320  0A80               	xorlw	128
  1475  003322  582F               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1476  003324  B0D8               	btfsc	status,0,c
  1477  003326  0012               	return	
  1478  003328  D7ED               	goto	l3441
  1479  00332A                     __end_of_util_waits_delay_mins:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _util_getTemperature *****************
  1485 ;; Defined at:
  1486 ;;		line 118 in file "easat2_util_inputs.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  bit_mem       144    0[BANK1 ] int [72]
  1491 ;;  byte_mem       18  144[BANK1 ] int [9]
  1492 ;;  temperature     3  201[BANK1 ] float 
  1493 ;;  sign            3  164[BANK1 ] float 
  1494 ;;  i               2  204[BANK1 ] int 
  1495 ;;  bit_in_byte     2  199[BANK1 ] int 
  1496 ;;  num_byte        2  197[BANK1 ] int 
  1497 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1498 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1499 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1500 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1501 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1502 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1503 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1504 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1505 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1506 ;;  num_bit         2  162[BANK1 ] int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  3   31[BANK0 ] float 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         0       3       0       0       0       0       0
  1517 ;;      Locals:         0       0     206       0       0       0       0
  1518 ;;      Temps:          0       3       0       0       0       0       0
  1519 ;;      Totals:         0       6     206       0       0       0       0
  1520 ;;Total ram usage:      212 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    4
  1523 ;; This function calls:
  1524 ;;		___awtoft
  1525 ;;		___ftadd
  1526 ;;		___ftdiv
  1527 ;;		___ftmul
  1528 ;;		_util_onewire_read_byte
  1529 ;;		_util_onewire_reset
  1530 ;;		_util_onewire_write_byte
  1531 ;;		_util_waits_delay_secs
  1532 ;; This function is called by:
  1533 ;;		_main_loop
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text4
  1538  000C18                     __ptext4:
  1539                           	opt stack 0
  1540  000C18                     _util_getTemperature:
  1541                           	opt stack 25
  1542                           
  1543                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1544                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1545                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1546                           
  1547                           ;incstack = 0
  1548  000C18  0E00               	movlw	0
  1549  000C1A  0101               	movlb	1	; () banked
  1550  000C1C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1551  000C1E  0E00               	movlw	0
  1552  000C20  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1553                           
  1554                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1555  000C22  0E00               	movlw	0
  1556  000C24  0101               	movlb	1	; () banked
  1557  000C26  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1558  000C28  0E00               	movlw	0
  1559  000C2A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1560                           
  1561                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1562  000C2C  0E00               	movlw	0
  1563  000C2E  0101               	movlb	1	; () banked
  1564  000C30  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1565  000C32  0E00               	movlw	0
  1566  000C34  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1567                           
  1568                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1569  000C36  0E00               	movlw	0
  1570  000C38  0101               	movlb	1	; () banked
  1571  000C3A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1572  000C3C  0E00               	movlw	0
  1573  000C3E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1574                           
  1575                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1576  000C40  0E00               	movlw	0
  1577  000C42  0101               	movlb	1	; () banked
  1578  000C44  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1579  000C46  0E00               	movlw	0
  1580  000C48  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1581                           
  1582                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1583  000C4A  0E00               	movlw	0
  1584  000C4C  0101               	movlb	1	; () banked
  1585  000C4E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1586  000C50  0E00               	movlw	0
  1587  000C52  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1588                           
  1589                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1590  000C54  0E00               	movlw	0
  1591  000C56  0101               	movlb	1	; () banked
  1592  000C58  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1593  000C5A  0E00               	movlw	0
  1594  000C5C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1595                           
  1596                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1597  000C5E  0E00               	movlw	0
  1598  000C60  0101               	movlb	1	; () banked
  1599  000C62  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1600  000C64  0E00               	movlw	0
  1601  000C66  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1602                           
  1603                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1604  000C68  0E00               	movlw	0
  1605  000C6A  0101               	movlb	1	; () banked
  1606  000C6C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1607  000C6E  0E00               	movlw	0
  1608  000C70  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1609                           
  1610                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1611  000C72  0E00               	movlw	0
  1612  000C74  0101               	movlb	1	; () banked
  1613  000C76  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1614  000C78  0E00               	movlw	0
  1615  000C7A  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1616  000C7C  0E00               	movlw	0
  1617  000C7E  0101               	movlb	1	; () banked
  1618  000C80  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1619  000C82  0E00               	movlw	0
  1620  000C84  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1621  000C86  0E00               	movlw	0
  1622  000C88  0101               	movlb	1	; () banked
  1623  000C8A  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1624  000C8C  0E00               	movlw	0
  1625  000C8E  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1626                           
  1627                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1628  000C90  0E00               	movlw	0
  1629  000C92  0101               	movlb	1	; () banked
  1630  000C94  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1631  000C96  0E00               	movlw	0
  1632  000C98  0101               	movlb	1	; () banked
  1633  000C9A  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1634  000C9C  0E00               	movlw	0
  1635  000C9E  0101               	movlb	1	; () banked
  1636  000CA0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1637                           
  1638                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1639  000CA2  0E00               	movlw	0
  1640  000CA4  0101               	movlb	1	; () banked
  1641  000CA6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1642  000CA8  0E80               	movlw	128
  1643  000CAA  0101               	movlb	1	; () banked
  1644  000CAC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1645  000CAE  0E3F               	movlw	63
  1646  000CB0  0101               	movlb	1	; () banked
  1647  000CB2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1648                           
  1649                           ;easat2_util_inputs.c: 137: int i = 0;
  1650  000CB4  0E00               	movlw	0
  1651  000CB6  0101               	movlb	1	; () banked
  1652  000CB8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1653  000CBA  0E00               	movlw	0
  1654  000CBC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1658  000CBE  ECBA  F018         	call	_util_onewire_reset	;wreg free
  1659  000CC2  5021               	movf	?_util_onewire_reset,w,c
  1660  000CC4  1022               	iorwf	?_util_onewire_reset+1,w,c
  1661  000CC6  B4D8               	btfsc	status,2,c
  1662  000CC8  D00A               	goto	l4701
  1663  000CCA  0E33               	movlw	51
  1664  000CCC  0100               	movlb	0	; () banked
  1665  000CCE  6F7F               	movwf	?_util_getTemperature& (0+255),b
  1666  000CD0  0EC6               	movlw	198
  1667  000CD2  0100               	movlb	0	; () banked
  1668  000CD4  6F80               	movwf	(?_util_getTemperature+1)& (0+255),b
  1669  000CD6  0EC2               	movlw	194
  1670  000CD8  0100               	movlb	0	; () banked
  1671  000CDA  6F81               	movwf	(?_util_getTemperature+2)& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674  000CDC  0012               	return	
  1675  000CDE                     l4701:
  1676                           
  1677                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1678  000CDE  0E00               	movlw	0
  1679  000CE0  6E24               	movwf	util_onewire_write_byte@value+1,c
  1680  000CE2  0ECC               	movlw	204
  1681  000CE4  6E23               	movwf	util_onewire_write_byte@value,c
  1682  000CE6  ECC2  F00F         	call	_util_onewire_write_byte	;wreg free
  1683                           
  1684                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1685  000CEA  0E00               	movlw	0
  1686  000CEC  6E24               	movwf	util_onewire_write_byte@value+1,c
  1687  000CEE  0E44               	movlw	68
  1688  000CF0  6E23               	movwf	util_onewire_write_byte@value,c
  1689  000CF2  ECC2  F00F         	call	_util_onewire_write_byte	;wreg free
  1690                           
  1691                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1692  000CF6  8692               	bsf	3986,3,c	;volatile
  1693                           
  1694                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1695  000CF8  0E00               	movlw	0
  1696  000CFA  0101               	movlb	1	; () banked
  1697  000CFC  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1698  000CFE  0E00               	movlw	0
  1699  000D00  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1700  000D02  D009               	goto	l4711
  1701  000D04                     l4707:
  1702                           
  1703                           ; BSR set to: 1
  1704                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1705  000D04  0E00               	movlw	0
  1706  000D06  6E27               	movwf	util_waits_delay_secs@secs+1,c
  1707  000D08  0E01               	movlw	1
  1708  000D0A  6E26               	movwf	util_waits_delay_secs@secs,c
  1709  000D0C  EC6D  F018         	call	_util_waits_delay_secs	;wreg free
  1710  000D10  0101               	movlb	1	; () banked
  1711  000D12  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1712  000D14  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1713  000D16                     l4711:
  1714                           
  1715                           ; BSR set to: 1
  1716  000D16  0101               	movlb	1	; () banked
  1717  000D18  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1718  000D1A  D008               	goto	l4713
  1719  000D1C  0101               	movlb	1	; () banked
  1720  000D1E  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1721  000D20  E107               	bnz	l4715
  1722  000D22  0E05               	movlw	5
  1723  000D24  0101               	movlb	1	; () banked
  1724  000D26  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1725  000D28  B0D8               	btfsc	status,0,c
  1726  000D2A  D002               	goto	l4715
  1727  000D2C                     l4713:
  1728                           
  1729                           ; BSR set to: 1
  1730  000D2C  A680               	btfss	3968,3,c	;volatile
  1731  000D2E  D7EA               	goto	l4707
  1732  000D30                     l4715:
  1733                           
  1734                           ; BSR set to: 1
  1735                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1736  000D30  0E05               	movlw	5
  1737  000D32  0101               	movlb	1	; () banked
  1738  000D34  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1739  000D36  0101               	movlb	1	; () banked
  1740  000D38  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1741  000D3A  A4D8               	btfss	status,2,c
  1742  000D3C  D00A               	goto	l4721
  1743                           
  1744                           ; BSR set to: 1
  1745  000D3E  0E66               	movlw	102
  1746  000D40  0100               	movlb	0	; () banked
  1747  000D42  6F7F               	movwf	?_util_getTemperature& (0+255),b
  1748  000D44  0EC6               	movlw	198
  1749  000D46  0100               	movlb	0	; () banked
  1750  000D48  6F80               	movwf	(?_util_getTemperature+1)& (0+255),b
  1751  000D4A  0EC2               	movlw	194
  1752  000D4C  0100               	movlb	0	; () banked
  1753  000D4E  6F81               	movwf	(?_util_getTemperature+2)& (0+255),b
  1754                           
  1755                           ; BSR set to: 0
  1756  000D50  0012               	return	
  1757  000D52                     l4721:
  1758                           
  1759                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1760  000D52  ECBA  F018         	call	_util_onewire_reset	;wreg free
  1761  000D56  5021               	movf	?_util_onewire_reset,w,c
  1762  000D58  1022               	iorwf	?_util_onewire_reset+1,w,c
  1763  000D5A  B4D8               	btfsc	status,2,c
  1764  000D5C  D00A               	goto	l4727
  1765  000D5E  0E9A               	movlw	154
  1766  000D60  0100               	movlb	0	; () banked
  1767  000D62  6F7F               	movwf	?_util_getTemperature& (0+255),b
  1768  000D64  0EC6               	movlw	198
  1769  000D66  0100               	movlb	0	; () banked
  1770  000D68  6F80               	movwf	(?_util_getTemperature+1)& (0+255),b
  1771  000D6A  0EC2               	movlw	194
  1772  000D6C  0100               	movlb	0	; () banked
  1773  000D6E  6F81               	movwf	(?_util_getTemperature+2)& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776  000D70  0012               	return	
  1777  000D72                     l4727:
  1778                           
  1779                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1780  000D72  0E00               	movlw	0
  1781  000D74  6E24               	movwf	util_onewire_write_byte@value+1,c
  1782  000D76  0ECC               	movlw	204
  1783  000D78  6E23               	movwf	util_onewire_write_byte@value,c
  1784  000D7A  ECC2  F00F         	call	_util_onewire_write_byte	;wreg free
  1785                           
  1786                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  1787  000D7E  0E00               	movlw	0
  1788  000D80  6E24               	movwf	util_onewire_write_byte@value+1,c
  1789  000D82  0EBE               	movlw	190
  1790  000D84  6E23               	movwf	util_onewire_write_byte@value,c
  1791  000D86  ECC2  F00F         	call	_util_onewire_write_byte	;wreg free
  1792                           
  1793                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  1794  000D8A  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1795  000D8E  C026  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  1796  000D92  C027  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  1797                           
  1798                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  1799  000D96  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1800  000D9A  C026  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  1801  000D9E  C027  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  1802                           
  1803                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  1804  000DA2  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1805  000DA6  C026  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  1806  000DAA  C027  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  1807                           
  1808                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  1809  000DAE  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1810  000DB2  C026  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  1811  000DB6  C027  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  1812                           
  1813                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  1814  000DBA  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1815  000DBE  C026  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  1816  000DC2  C027  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  1817                           
  1818                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  1819  000DC6  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1820  000DCA  C026  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  1821  000DCE  C027  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  1822                           
  1823                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  1824  000DD2  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1825  000DD6  C026  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  1826  000DDA  C027  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  1827                           
  1828                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  1829  000DDE  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1830  000DE2  C026  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  1831  000DE6  C027  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  1832                           
  1833                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  1834  000DEA  EC73  F010         	call	_util_onewire_read_byte	;wreg free
  1835  000DEE  C026  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  1836  000DF2  C027  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  1837                           
  1838                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  1839  000DF6  0E00               	movlw	0
  1840  000DF8  0101               	movlb	1	; () banked
  1841  000DFA  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1842  000DFC  0E00               	movlw	0
  1843  000DFE  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1844  000E00                     l4731:
  1845                           
  1846                           ; BSR set to: 1
  1847  000E00  0101               	movlb	1	; () banked
  1848  000E02  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  1849  000E04  D008               	goto	l4735
  1850  000E06  0101               	movlb	1	; () banked
  1851  000E08  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  1852  000E0A  E14F               	bnz	l4753
  1853  000E0C  0E09               	movlw	9
  1854  000E0E  0101               	movlb	1	; () banked
  1855  000E10  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  1856  000E12  B0D8               	btfsc	status,0,c
  1857  000E14  D04A               	goto	l4753
  1858  000E16                     l4735:
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  1862  000E16  0E00               	movlw	0
  1863  000E18  0101               	movlb	1	; () banked
  1864  000E1A  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1865  000E1C  0E00               	movlw	0
  1866  000E1E  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1867  000E20                     l4737:
  1868                           
  1869                           ; BSR set to: 1
  1870  000E20  0101               	movlb	1	; () banked
  1871  000E22  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  1872  000E24  D008               	goto	l4741
  1873  000E26  0101               	movlb	1	; () banked
  1874  000E28  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  1875  000E2A  E13B               	bnz	l4749
  1876  000E2C  0E08               	movlw	8
  1877  000E2E  0101               	movlb	1	; () banked
  1878  000E30  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  1879  000E32  B0D8               	btfsc	status,0,c
  1880  000E34  D036               	goto	l4749
  1881  000E36                     l4741:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  1885  000E36  C1C7  F082         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  1886  000E3A  90D8               	bcf	status,0,c
  1887  000E3C  0101               	movlb	1	; () banked
  1888  000E3E  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  1889  000E40  6ED9               	movwf	fsr2l,c
  1890  000E42  0101               	movlb	1	; () banked
  1891  000E44  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  1892  000E46  6EDA               	movwf	fsr2h,c
  1893  000E48  0E90               	movlw	low util_getTemperature@byte_mem
  1894  000E4A  26D9               	addwf	fsr2l,f,c
  1895  000E4C  0E01               	movlw	high util_getTemperature@byte_mem
  1896  000E4E  22DA               	addwfc	fsr2h,f,c
  1897  000E50  CFDE F083          	movff	postinc2,??_util_getTemperature+1
  1898  000E54  CFDD F084          	movff	postdec2,??_util_getTemperature+2
  1899  000E58  0100               	movlb	0	; () banked
  1900  000E5A  2B82               	incf	??_util_getTemperature& (0+255),f,b
  1901  000E5C  D004               	goto	u4834
  1902  000E5E                     u4835:
  1903  000E5E  0100               	movlb	0	; () banked
  1904  000E60  3584               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  1905  000E62  3384               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  1906  000E64  3383               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  1907  000E66                     u4834:
  1908  000E66  0100               	movlb	0	; () banked
  1909  000E68  2F82               	decfsz	??_util_getTemperature& (0+255),f,b
  1910  000E6A  D7F9               	goto	u4835
  1911  000E6C  0E01               	movlw	1
  1912  000E6E  0100               	movlb	0	; () banked
  1913  000E70  1783               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  1914  000E72  0E00               	movlw	0
  1915  000E74  1784               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  1916  000E76  90D8               	bcf	status,0,c
  1917  000E78  0101               	movlb	1	; () banked
  1918  000E7A  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  1919  000E7C  6ED9               	movwf	fsr2l,c
  1920  000E7E  0101               	movlb	1	; () banked
  1921  000E80  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  1922  000E82  6EDA               	movwf	fsr2h,c
  1923  000E84  0E00               	movlw	low util_getTemperature@bit_mem
  1924  000E86  26D9               	addwf	fsr2l,f,c
  1925  000E88  0E01               	movlw	high util_getTemperature@bit_mem
  1926  000E8A  22DA               	addwfc	fsr2h,f,c
  1927  000E8C  C083  FFDE         	movff	??_util_getTemperature+1,postinc2
  1928  000E90  C084  FFDD         	movff	??_util_getTemperature+2,postdec2
  1929                           
  1930                           ; BSR set to: 1
  1931  000E94  0101               	movlb	1	; () banked
  1932  000E96  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  1933  000E98  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  1934                           
  1935                           ; BSR set to: 1
  1936  000E9A  0101               	movlb	1	; () banked
  1937  000E9C  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  1938  000E9E  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  1939  000EA0  D7BF               	goto	l4737
  1940  000EA2                     l4749:
  1941                           
  1942                           ; BSR set to: 1
  1943  000EA2  0101               	movlb	1	; () banked
  1944  000EA4  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  1945  000EA6  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  1946  000EA8  D7AB               	goto	l4731
  1947  000EAA                     l4753:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;easat2_util_inputs.c: 205: }
  1951                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  1952  000EAA  0E00               	movlw	0
  1953  000EAC  0101               	movlb	1	; () banked
  1954  000EAE  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1955  000EB0  0E00               	movlw	0
  1956  000EB2  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1957  000EB4                     l4755:
  1958                           
  1959                           ; BSR set to: 1
  1960  000EB4  0101               	movlb	1	; () banked
  1961  000EB6  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1962  000EB8  D008               	goto	l4759
  1963  000EBA  0101               	movlb	1	; () banked
  1964  000EBC  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1965  000EBE  E154               	bnz	l4781
  1966  000EC0  0E48               	movlw	72
  1967  000EC2  0101               	movlb	1	; () banked
  1968  000EC4  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1969  000EC6  B0D8               	btfsc	status,0,c
  1970  000EC8  D04F               	goto	l4781
  1971  000ECA                     l4759:
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  1975  000ECA  90D8               	bcf	status,0,c
  1976  000ECC  0101               	movlb	1	; () banked
  1977  000ECE  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  1978  000ED0  6ED9               	movwf	fsr2l,c
  1979  000ED2  0101               	movlb	1	; () banked
  1980  000ED4  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  1981  000ED6  6EDA               	movwf	fsr2h,c
  1982  000ED8  0E00               	movlw	low util_getTemperature@bit_mem
  1983  000EDA  26D9               	addwf	fsr2l,f,c
  1984  000EDC  0E01               	movlw	high util_getTemperature@bit_mem
  1985  000EDE  22DA               	addwfc	fsr2h,f,c
  1986  000EE0  CFDE F082          	movff	postinc2,??_util_getTemperature
  1987  000EE4  CFDD F083          	movff	postdec2,??_util_getTemperature+1
  1988  000EE8  0101               	movlb	1	; () banked
  1989  000EEA  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  1990  000EEC  0100               	movlb	0	; () banked
  1991  000EEE  1982               	xorwf	??_util_getTemperature& (0+255),w,b
  1992  000EF0  0101               	movlb	1	; () banked
  1993  000EF2  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1994  000EF4  0101               	movlb	1	; () banked
  1995  000EF6  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  1996  000EF8  0100               	movlb	0	; () banked
  1997  000EFA  1983               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  1998  000EFC  0101               	movlb	1	; () banked
  1999  000EFE  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2003  000F00  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2004  000F04  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2008  000F08  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2009  000F0C  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2013  000F10  0101               	movlb	1	; () banked
  2014  000F12  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2015  000F14  0101               	movlb	1	; () banked
  2016  000F16  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2017  000F18  0101               	movlb	1	; () banked
  2018  000F1A  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2019  000F1C  0101               	movlb	1	; () banked
  2020  000F1E  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2021  000F20  0101               	movlb	1	; () banked
  2022  000F22  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2023  000F24  0101               	movlb	1	; () banked
  2024  000F26  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2028  000F28  0101               	movlb	1	; () banked
  2029  000F2A  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2030  000F2C  0101               	movlb	1	; () banked
  2031  000F2E  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2032  000F30  0101               	movlb	1	; () banked
  2033  000F32  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2034  000F34  0101               	movlb	1	; () banked
  2035  000F36  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2036  000F38  0101               	movlb	1	; () banked
  2037  000F3A  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2038  000F3C  0101               	movlb	1	; () banked
  2039  000F3E  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2040                           
  2041                           ; BSR set to: 1
  2042                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2043  000F40  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2044  000F44  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2045                           
  2046                           ; BSR set to: 1
  2047                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2048  000F48  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2049  000F4C  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2053  000F50  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2054  000F54  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2055                           
  2056                           ; BSR set to: 1
  2057                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2058  000F58  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2059  000F5C  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2060                           
  2061                           ; BSR set to: 1
  2062  000F60  0101               	movlb	1	; () banked
  2063  000F62  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2064  000F64  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2065  000F66  D7A6               	goto	l4755
  2066  000F68                     l4781:
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;easat2_util_inputs.c: 225: }
  2070                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2071                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2072                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2073  000F68  0101               	movlb	1	; () banked
  2074  000F6A  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2075  000F6C  0101               	movlb	1	; () banked
  2076  000F6E  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2077  000F70  A4D8               	btfss	status,2,c
  2078  000F72  D02A               	goto	l4797
  2079                           
  2080                           ; BSR set to: 1
  2081  000F74  0101               	movlb	1	; () banked
  2082  000F76  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2083  000F78  0101               	movlb	1	; () banked
  2084  000F7A  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2085  000F7C  A4D8               	btfss	status,2,c
  2086  000F7E  D024               	goto	l4797
  2087                           
  2088                           ; BSR set to: 1
  2089  000F80  0101               	movlb	1	; () banked
  2090  000F82  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2091  000F84  0101               	movlb	1	; () banked
  2092  000F86  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2093  000F88  B4D8               	btfsc	status,2,c
  2094  000F8A  D006               	goto	l4789
  2095                           
  2096                           ; BSR set to: 1
  2097  000F8C  0101               	movlb	1	; () banked
  2098  000F8E  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2099  000F90  0101               	movlb	1	; () banked
  2100  000F92  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2101  000F94  A4D8               	btfss	status,2,c
  2102  000F96  D018               	goto	l4797
  2103  000F98                     l4789:
  2104                           
  2105                           ; BSR set to: 1
  2106  000F98  0101               	movlb	1	; () banked
  2107  000F9A  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2108  000F9C  0101               	movlb	1	; () banked
  2109  000F9E  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2110  000FA0  A4D8               	btfss	status,2,c
  2111  000FA2  D012               	goto	l4797
  2112                           
  2113                           ; BSR set to: 1
  2114  000FA4  0101               	movlb	1	; () banked
  2115  000FA6  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2116  000FA8  0101               	movlb	1	; () banked
  2117  000FAA  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2118  000FAC  B4D8               	btfsc	status,2,c
  2119  000FAE  D006               	goto	l4795
  2120                           
  2121                           ; BSR set to: 1
  2122  000FB0  0101               	movlb	1	; () banked
  2123  000FB2  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2124  000FB4  0101               	movlb	1	; () banked
  2125  000FB6  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2126  000FB8  A4D8               	btfss	status,2,c
  2127  000FBA  D006               	goto	l4797
  2128  000FBC                     l4795:
  2129                           
  2130                           ; BSR set to: 1
  2131  000FBC  0101               	movlb	1	; () banked
  2132  000FBE  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2133  000FC0  0101               	movlb	1	; () banked
  2134  000FC2  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2135  000FC4  B4D8               	btfsc	status,2,c
  2136  000FC6  D00A               	goto	l4801
  2137  000FC8                     l4797:
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;easat2_util_inputs.c: 232: return -99.7;
  2141  000FC8  0E66               	movlw	102
  2142  000FCA  0100               	movlb	0	; () banked
  2143  000FCC  6F7F               	movwf	?_util_getTemperature& (0+255),b
  2144  000FCE  0EC7               	movlw	199
  2145  000FD0  0100               	movlb	0	; () banked
  2146  000FD2  6F80               	movwf	(?_util_getTemperature+1)& (0+255),b
  2147  000FD4  0EC2               	movlw	194
  2148  000FD6  0100               	movlb	0	; () banked
  2149  000FD8  6F81               	movwf	(?_util_getTemperature+2)& (0+255),b
  2150                           
  2151                           ; BSR set to: 0
  2152  000FDA  0012               	return	
  2153  000FDC                     l4801:
  2154                           
  2155                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2156  000FDC  0101               	movlb	1	; () banked
  2157  000FDE  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2158  000FE0  0101               	movlb	1	; () banked
  2159  000FE2  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2160  000FE4  A4D8               	btfss	status,2,c
  2161  000FE6  D008               	goto	l4805
  2162                           
  2163                           ; BSR set to: 1
  2164  000FE8  0E00               	movlw	0
  2165  000FEA  0101               	movlb	1	; () banked
  2166  000FEC  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2167  000FEE  0E80               	movlw	128
  2168  000FF0  0101               	movlb	1	; () banked
  2169  000FF2  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2170  000FF4  0E3F               	movlw	63
  2171  000FF6  D007               	goto	L1
  2172  000FF8                     l4805:
  2173                           
  2174                           ; BSR set to: 1
  2175  000FF8  0E00               	movlw	0
  2176  000FFA  0101               	movlb	1	; () banked
  2177  000FFC  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2178  000FFE  0E80               	movlw	128
  2179  001000  0101               	movlb	1	; () banked
  2180  001002  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2181  001004  0EBF               	movlw	191
  2182  001006                     L1:
  2183  001006  0101               	movlb	1	; () banked
  2184  001008  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2188                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2189                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2190                           
  2191                           ; BSR set to: 1
  2192  00100A  0E00               	movlw	0
  2193  00100C  6E30               	movwf	___ftdiv@f2,c
  2194  00100E  0E00               	movlw	0
  2195  001010  6E31               	movwf	___ftdiv@f2+1,c
  2196  001012  0E41               	movlw	65
  2197  001014  6E32               	movwf	___ftdiv@f2+2,c
  2198  001016  C102  F029         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2199  00101A  C103  F02A         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2200  00101E  ECFC  F018         	call	___awtoft	;wreg free
  2201  001022  C029  F02D         	movff	?___awtoft,___ftdiv@f1
  2202  001026  C02A  F02E         	movff	?___awtoft+1,___ftdiv@f1+1
  2203  00102A  C02B  F02F         	movff	?___awtoft+2,___ftdiv@f1+2
  2204  00102E  ECF3  F013         	call	___ftdiv	;wreg free
  2205  001032  C02D  F076         	movff	?___ftdiv,___ftadd@f2
  2206  001036  C02E  F077         	movff	?___ftdiv+1,___ftadd@f2+1
  2207  00103A  C02F  F078         	movff	?___ftdiv+2,___ftadd@f2+2
  2208  00103E  0E00               	movlw	0
  2209  001040  6E30               	movwf	___ftdiv@f2,c
  2210  001042  0E80               	movlw	128
  2211  001044  6E31               	movwf	___ftdiv@f2+1,c
  2212  001046  0E41               	movlw	65
  2213  001048  6E32               	movwf	___ftdiv@f2+2,c
  2214  00104A  C100  F029         	movff	util_getTemperature@bit_mem,___awtoft@c
  2215  00104E  C101  F02A         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2216  001052  ECFC  F018         	call	___awtoft	;wreg free
  2217  001056  C029  F02D         	movff	?___awtoft,___ftdiv@f1
  2218  00105A  C02A  F02E         	movff	?___awtoft+1,___ftdiv@f1+1
  2219  00105E  C02B  F02F         	movff	?___awtoft+2,___ftdiv@f1+2
  2220  001062  ECF3  F013         	call	___ftdiv	;wreg free
  2221  001066  C02D  F073         	movff	?___ftdiv,___ftadd@f1
  2222  00106A  C02E  F074         	movff	?___ftdiv+1,___ftadd@f1+1
  2223  00106E  C02F  F075         	movff	?___ftdiv+2,___ftadd@f1+2
  2224  001072  EC67  F00D         	call	___ftadd	;wreg free
  2225  001076  C073  F1A7         	movff	?___ftadd,_util_getTemperature$2078
  2226  00107A  C074  F1A8         	movff	?___ftadd+1,_util_getTemperature$2078+1
  2227  00107E  C075  F1A9         	movff	?___ftadd+2,_util_getTemperature$2078+2
  2228                           
  2229                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2230                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2231                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2232  001082  0E00               	movlw	0
  2233  001084  6E30               	movwf	___ftdiv@f2,c
  2234  001086  0E80               	movlw	128
  2235  001088  6E31               	movwf	___ftdiv@f2+1,c
  2236  00108A  0E40               	movlw	64
  2237  00108C  6E32               	movwf	___ftdiv@f2+2,c
  2238  00108E  C104  F029         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2239  001092  C105  F02A         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2240  001096  ECFC  F018         	call	___awtoft	;wreg free
  2241  00109A  C029  F02D         	movff	?___awtoft,___ftdiv@f1
  2242  00109E  C02A  F02E         	movff	?___awtoft+1,___ftdiv@f1+1
  2243  0010A2  C02B  F02F         	movff	?___awtoft+2,___ftdiv@f1+2
  2244  0010A6  ECF3  F013         	call	___ftdiv	;wreg free
  2245  0010AA  C02D  F076         	movff	?___ftdiv,___ftadd@f2
  2246  0010AE  C02E  F077         	movff	?___ftdiv+1,___ftadd@f2+1
  2247  0010B2  C02F  F078         	movff	?___ftdiv+2,___ftadd@f2+2
  2248  0010B6  C1A7  F073         	movff	_util_getTemperature$2078,___ftadd@f1
  2249  0010BA  C1A8  F074         	movff	_util_getTemperature$2078+1,___ftadd@f1+1
  2250  0010BE  C1A9  F075         	movff	_util_getTemperature$2078+2,___ftadd@f1+2
  2251  0010C2  EC67  F00D         	call	___ftadd	;wreg free
  2252  0010C6  C073  F1AA         	movff	?___ftadd,_util_getTemperature$2079
  2253  0010CA  C074  F1AB         	movff	?___ftadd+1,_util_getTemperature$2079+1
  2254  0010CE  C075  F1AC         	movff	?___ftadd+2,_util_getTemperature$2079+2
  2255                           
  2256                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2257                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2258                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2259  0010D2  0E00               	movlw	0
  2260  0010D4  6E30               	movwf	___ftdiv@f2,c
  2261  0010D6  0E00               	movlw	0
  2262  0010D8  6E31               	movwf	___ftdiv@f2+1,c
  2263  0010DA  0E40               	movlw	64
  2264  0010DC  6E32               	movwf	___ftdiv@f2+2,c
  2265  0010DE  C106  F029         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2266  0010E2  C107  F02A         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2267  0010E6  ECFC  F018         	call	___awtoft	;wreg free
  2268  0010EA  C029  F02D         	movff	?___awtoft,___ftdiv@f1
  2269  0010EE  C02A  F02E         	movff	?___awtoft+1,___ftdiv@f1+1
  2270  0010F2  C02B  F02F         	movff	?___awtoft+2,___ftdiv@f1+2
  2271  0010F6  ECF3  F013         	call	___ftdiv	;wreg free
  2272  0010FA  C02D  F076         	movff	?___ftdiv,___ftadd@f2
  2273  0010FE  C02E  F077         	movff	?___ftdiv+1,___ftadd@f2+1
  2274  001102  C02F  F078         	movff	?___ftdiv+2,___ftadd@f2+2
  2275  001106  C1AA  F073         	movff	_util_getTemperature$2079,___ftadd@f1
  2276  00110A  C1AB  F074         	movff	_util_getTemperature$2079+1,___ftadd@f1+1
  2277  00110E  C1AC  F075         	movff	_util_getTemperature$2079+2,___ftadd@f1+2
  2278  001112  EC67  F00D         	call	___ftadd	;wreg free
  2279  001116  C073  F1AD         	movff	?___ftadd,_util_getTemperature$2080
  2280  00111A  C074  F1AE         	movff	?___ftadd+1,_util_getTemperature$2080+1
  2281  00111E  C075  F1AF         	movff	?___ftadd+2,_util_getTemperature$2080+2
  2282                           
  2283                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2284                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2285                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2286  001122  C108  F029         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2287  001126  C109  F02A         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2288  00112A  ECFC  F018         	call	___awtoft	;wreg free
  2289  00112E  C029  F076         	movff	?___awtoft,___ftadd@f2
  2290  001132  C02A  F077         	movff	?___awtoft+1,___ftadd@f2+1
  2291  001136  C02B  F078         	movff	?___awtoft+2,___ftadd@f2+2
  2292  00113A  C1AD  F073         	movff	_util_getTemperature$2080,___ftadd@f1
  2293  00113E  C1AE  F074         	movff	_util_getTemperature$2080+1,___ftadd@f1+1
  2294  001142  C1AF  F075         	movff	_util_getTemperature$2080+2,___ftadd@f1+2
  2295  001146  EC67  F00D         	call	___ftadd	;wreg free
  2296  00114A  C073  F1B0         	movff	?___ftadd,_util_getTemperature$2081
  2297  00114E  C074  F1B1         	movff	?___ftadd+1,_util_getTemperature$2081+1
  2298  001152  C075  F1B2         	movff	?___ftadd+2,_util_getTemperature$2081+2
  2299                           
  2300                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2301                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2302                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2303  001156  C1B0  F073         	movff	_util_getTemperature$2081,___ftadd@f1
  2304  00115A  C1B1  F074         	movff	_util_getTemperature$2081+1,___ftadd@f1+1
  2305  00115E  C1B2  F075         	movff	_util_getTemperature$2081+2,___ftadd@f1+2
  2306  001162  0E00               	movlw	0
  2307  001164  6E38               	movwf	___ftmul@f2,c
  2308  001166  0E00               	movlw	0
  2309  001168  6E39               	movwf	___ftmul@f2+1,c
  2310  00116A  0E40               	movlw	64
  2311  00116C  6E3A               	movwf	___ftmul@f2+2,c
  2312  00116E  C10A  F029         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2313  001172  C10B  F02A         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2314  001176  ECFC  F018         	call	___awtoft	;wreg free
  2315  00117A  C029  F035         	movff	?___awtoft,___ftmul@f1
  2316  00117E  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2317  001182  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2318  001186  EC54  F012         	call	___ftmul	;wreg free
  2319  00118A  C035  F076         	movff	?___ftmul,___ftadd@f2
  2320  00118E  C036  F077         	movff	?___ftmul+1,___ftadd@f2+1
  2321  001192  C037  F078         	movff	?___ftmul+2,___ftadd@f2+2
  2322  001196  EC67  F00D         	call	___ftadd	;wreg free
  2323  00119A  C073  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2324  00119E  C074  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2325  0011A2  C075  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2326                           
  2327                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2328                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2329                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2330                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2331  0011A6  0E00               	movlw	0
  2332  0011A8  6E38               	movwf	___ftmul@f2,c
  2333  0011AA  0E00               	movlw	0
  2334  0011AC  6E39               	movwf	___ftmul@f2+1,c
  2335  0011AE  0E41               	movlw	65
  2336  0011B0  6E3A               	movwf	___ftmul@f2+2,c
  2337  0011B2  C10E  F029         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2338  0011B6  C10F  F02A         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2339  0011BA  ECFC  F018         	call	___awtoft	;wreg free
  2340  0011BE  C029  F035         	movff	?___awtoft,___ftmul@f1
  2341  0011C2  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2342  0011C6  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2343  0011CA  EC54  F012         	call	___ftmul	;wreg free
  2344  0011CE  C035  F076         	movff	?___ftmul,___ftadd@f2
  2345  0011D2  C036  F077         	movff	?___ftmul+1,___ftadd@f2+1
  2346  0011D6  C037  F078         	movff	?___ftmul+2,___ftadd@f2+2
  2347  0011DA  0E00               	movlw	0
  2348  0011DC  6E38               	movwf	___ftmul@f2,c
  2349  0011DE  0E80               	movlw	128
  2350  0011E0  6E39               	movwf	___ftmul@f2+1,c
  2351  0011E2  0E40               	movlw	64
  2352  0011E4  6E3A               	movwf	___ftmul@f2+2,c
  2353  0011E6  C10C  F029         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2354  0011EA  C10D  F02A         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2355  0011EE  ECFC  F018         	call	___awtoft	;wreg free
  2356  0011F2  C029  F035         	movff	?___awtoft,___ftmul@f1
  2357  0011F6  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2358  0011FA  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2359  0011FE  EC54  F012         	call	___ftmul	;wreg free
  2360  001202  C035  F073         	movff	?___ftmul,___ftadd@f1
  2361  001206  C036  F074         	movff	?___ftmul+1,___ftadd@f1+1
  2362  00120A  C037  F075         	movff	?___ftmul+2,___ftadd@f1+2
  2363  00120E  EC67  F00D         	call	___ftadd	;wreg free
  2364  001212  C073  F1A7         	movff	?___ftadd,_util_getTemperature$2078
  2365  001216  C074  F1A8         	movff	?___ftadd+1,_util_getTemperature$2078+1
  2366  00121A  C075  F1A9         	movff	?___ftadd+2,_util_getTemperature$2078+2
  2367                           
  2368                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2369                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2370                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2371                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2372  00121E  0E00               	movlw	0
  2373  001220  6E38               	movwf	___ftmul@f2,c
  2374  001222  0E80               	movlw	128
  2375  001224  6E39               	movwf	___ftmul@f2+1,c
  2376  001226  0E41               	movlw	65
  2377  001228  6E3A               	movwf	___ftmul@f2+2,c
  2378  00122A  C110  F029         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2379  00122E  C111  F02A         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2380  001232  ECFC  F018         	call	___awtoft	;wreg free
  2381  001236  C029  F035         	movff	?___awtoft,___ftmul@f1
  2382  00123A  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2383  00123E  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2384  001242  EC54  F012         	call	___ftmul	;wreg free
  2385  001246  C035  F076         	movff	?___ftmul,___ftadd@f2
  2386  00124A  C036  F077         	movff	?___ftmul+1,___ftadd@f2+1
  2387  00124E  C037  F078         	movff	?___ftmul+2,___ftadd@f2+2
  2388  001252  C1A7  F073         	movff	_util_getTemperature$2078,___ftadd@f1
  2389  001256  C1A8  F074         	movff	_util_getTemperature$2078+1,___ftadd@f1+1
  2390  00125A  C1A9  F075         	movff	_util_getTemperature$2078+2,___ftadd@f1+2
  2391  00125E  EC67  F00D         	call	___ftadd	;wreg free
  2392  001262  C073  F1AA         	movff	?___ftadd,_util_getTemperature$2079
  2393  001266  C074  F1AB         	movff	?___ftadd+1,_util_getTemperature$2079+1
  2394  00126A  C075  F1AC         	movff	?___ftadd+2,_util_getTemperature$2079+2
  2395                           
  2396                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2397                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2398                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2399                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2400  00126E  0E00               	movlw	0
  2401  001270  6E38               	movwf	___ftmul@f2,c
  2402  001272  0E00               	movlw	0
  2403  001274  6E39               	movwf	___ftmul@f2+1,c
  2404  001276  0E42               	movlw	66
  2405  001278  6E3A               	movwf	___ftmul@f2+2,c
  2406  00127A  C112  F029         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2407  00127E  C113  F02A         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2408  001282  ECFC  F018         	call	___awtoft	;wreg free
  2409  001286  C029  F035         	movff	?___awtoft,___ftmul@f1
  2410  00128A  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2411  00128E  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2412  001292  EC54  F012         	call	___ftmul	;wreg free
  2413  001296  C035  F076         	movff	?___ftmul,___ftadd@f2
  2414  00129A  C036  F077         	movff	?___ftmul+1,___ftadd@f2+1
  2415  00129E  C037  F078         	movff	?___ftmul+2,___ftadd@f2+2
  2416  0012A2  C1AA  F073         	movff	_util_getTemperature$2079,___ftadd@f1
  2417  0012A6  C1AB  F074         	movff	_util_getTemperature$2079+1,___ftadd@f1+1
  2418  0012AA  C1AC  F075         	movff	_util_getTemperature$2079+2,___ftadd@f1+2
  2419  0012AE  EC67  F00D         	call	___ftadd	;wreg free
  2420  0012B2  C073  F1AD         	movff	?___ftadd,_util_getTemperature$2080
  2421  0012B6  C074  F1AE         	movff	?___ftadd+1,_util_getTemperature$2080+1
  2422  0012BA  C075  F1AF         	movff	?___ftadd+2,_util_getTemperature$2080+2
  2423                           
  2424                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2425                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2426                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2427                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2428  0012BE  0E00               	movlw	0
  2429  0012C0  6E38               	movwf	___ftmul@f2,c
  2430  0012C2  0E80               	movlw	128
  2431  0012C4  6E39               	movwf	___ftmul@f2+1,c
  2432  0012C6  0E42               	movlw	66
  2433  0012C8  6E3A               	movwf	___ftmul@f2+2,c
  2434  0012CA  C114  F029         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2435  0012CE  C115  F02A         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2436  0012D2  ECFC  F018         	call	___awtoft	;wreg free
  2437  0012D6  C029  F035         	movff	?___awtoft,___ftmul@f1
  2438  0012DA  C02A  F036         	movff	?___awtoft+1,___ftmul@f1+1
  2439  0012DE  C02B  F037         	movff	?___awtoft+2,___ftmul@f1+2
  2440  0012E2  EC54  F012         	call	___ftmul	;wreg free
  2441  0012E6  C035  F076         	movff	?___ftmul,___ftadd@f2
  2442  0012EA  C036  F077         	movff	?___ftmul+1,___ftadd@f2+1
  2443  0012EE  C037  F078         	movff	?___ftmul+2,___ftadd@f2+2
  2444  0012F2  C1AD  F073         	movff	_util_getTemperature$2080,___ftadd@f1
  2445  0012F6  C1AE  F074         	movff	_util_getTemperature$2080+1,___ftadd@f1+1
  2446  0012FA  C1AF  F075         	movff	_util_getTemperature$2080+2,___ftadd@f1+2
  2447  0012FE  EC67  F00D         	call	___ftadd	;wreg free
  2448  001302  C073  F1B0         	movff	?___ftadd,_util_getTemperature$2081
  2449  001306  C074  F1B1         	movff	?___ftadd+1,_util_getTemperature$2081+1
  2450  00130A  C075  F1B2         	movff	?___ftadd+2,_util_getTemperature$2081+2
  2451                           
  2452                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2453                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2454                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2455                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2456  00130E  C1B0  F073         	movff	_util_getTemperature$2081,___ftadd@f1
  2457  001312  C1B1  F074         	movff	_util_getTemperature$2081+1,___ftadd@f1+1
  2458  001316  C1B2  F075         	movff	_util_getTemperature$2081+2,___ftadd@f1+2
  2459  00131A  C1C9  F076         	movff	util_getTemperature@temperature,___ftadd@f2
  2460  00131E  C1CA  F077         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2461  001322  C1CB  F078         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2462  001326  EC67  F00D         	call	___ftadd	;wreg free
  2463  00132A  C073  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2464  00132E  C074  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2465  001332  C075  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2466                           
  2467                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2468  001336  C1C9  F035         	movff	util_getTemperature@temperature,___ftmul@f1
  2469  00133A  C1CA  F036         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2470  00133E  C1CB  F037         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2471  001342  C1A4  F038         	movff	util_getTemperature@sign,___ftmul@f2
  2472  001346  C1A5  F039         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2473  00134A  C1A6  F03A         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2474  00134E  EC54  F012         	call	___ftmul	;wreg free
  2475  001352  C035  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2476  001356  C036  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2477  00135A  C037  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2478                           
  2479                           ;easat2_util_inputs.c: 248: return temperature;
  2480  00135E  C1C9  F07F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2481  001362  C1CA  F080         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2482  001366  C1CB  F081         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2483  00136A  0012               	return	
  2484  00136C                     __end_of_util_getTemperature:
  2485                           	opt stack 0
  2486                           tblptru	equ	0xFF8
  2487                           postinc2	equ	0xFDE
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _util_waits_delay_secs *****************
  2494 ;; Defined at:
  2495 ;;		line 31 in file "easat2_util_waits.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  secs            2   37[COMRAM] int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  j               2   42[COMRAM] int 
  2500 ;;  i               2   40[COMRAM] int 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         2       0       0       0       0       0       0
  2511 ;;      Locals:         4       0       0       0       0       0       0
  2512 ;;      Temps:          1       0       0       0       0       0       0
  2513 ;;      Totals:         7       0       0       0       0       0       0
  2514 ;;Total ram usage:        7 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		_util_waits_delay_ms
  2519 ;; This function is called by:
  2520 ;;		_util_getTemperature
  2521 ;;		_util_waits_delay_mins
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text5
  2526  0030DA                     __ptext5:
  2527                           	opt stack 0
  2528  0030DA                     _util_waits_delay_secs:
  2529                           	opt stack 25
  2530                           
  2531                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2532                           
  2533                           ;incstack = 0
  2534  0030DA  0E00               	movlw	0
  2535  0030DC  6E2A               	movwf	util_waits_delay_secs@i+1,c
  2536  0030DE  0E00               	movlw	0
  2537  0030E0  6E29               	movwf	util_waits_delay_secs@i,c
  2538  0030E2  D017               	goto	l3073
  2539  0030E4                     l3059:
  2540                           
  2541                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2542  0030E4  0E00               	movlw	0
  2543  0030E6  6E2C               	movwf	util_waits_delay_secs@j+1,c
  2544  0030E8  0E00               	movlw	0
  2545  0030EA  6E2B               	movwf	util_waits_delay_secs@j,c
  2546  0030EC                     l3061:
  2547  0030EC  BE2C               	btfsc	util_waits_delay_secs@j+1,7,c
  2548  0030EE  D006               	goto	l3065
  2549  0030F0  502C               	movf	util_waits_delay_secs@j+1,w,c
  2550  0030F2  E10D               	bnz	l3071
  2551  0030F4  0E0A               	movlw	10
  2552  0030F6  5C2B               	subwf	util_waits_delay_secs@j,w,c
  2553  0030F8  B0D8               	btfsc	status,0,c
  2554  0030FA  D009               	goto	l3071
  2555  0030FC                     l3065:
  2556                           
  2557                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2558  0030FC  0E00               	movlw	0
  2559  0030FE  6E22               	movwf	util_waits_delay_ms@ms+1,c
  2560  003100  0E64               	movlw	100
  2561  003102  6E21               	movwf	util_waits_delay_ms@ms,c
  2562  003104  ECC5  F019         	call	_util_waits_delay_ms	;wreg free
  2563  003108  4A2B               	infsnz	util_waits_delay_secs@j,f,c
  2564  00310A  2A2C               	incf	util_waits_delay_secs@j+1,f,c
  2565  00310C  D7EF               	goto	l3061
  2566  00310E                     l3071:
  2567  00310E  4A29               	infsnz	util_waits_delay_secs@i,f,c
  2568  003110  2A2A               	incf	util_waits_delay_secs@i+1,f,c
  2569  003112                     l3073:
  2570  003112  5026               	movf	util_waits_delay_secs@secs,w,c
  2571  003114  5C29               	subwf	util_waits_delay_secs@i,w,c
  2572  003116  502A               	movf	util_waits_delay_secs@i+1,w,c
  2573  003118  0A80               	xorlw	128
  2574  00311A  6E28               	movwf	??_util_waits_delay_secs& (0+255),c
  2575  00311C  5027               	movf	util_waits_delay_secs@secs+1,w,c
  2576  00311E  0A80               	xorlw	128
  2577  003120  5828               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2578  003122  B0D8               	btfsc	status,0,c
  2579  003124  0012               	return	
  2580  003126  D7DE               	goto	l3059
  2581  003128                     __end_of_util_waits_delay_secs:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           postinc2	equ	0xFDE
  2585                           postdec2	equ	0xFDD
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function _util_onewire_write_byte *****************
  2591 ;; Defined at:
  2592 ;;		line 62 in file "easat2_util_onewire.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  value           2   34[COMRAM] int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  bit7            2   53[COMRAM] int 
  2597 ;;  bit6            2   51[COMRAM] int 
  2598 ;;  bit5            2   49[COMRAM] int 
  2599 ;;  bit4            2   47[COMRAM] int 
  2600 ;;  bit3            2   45[COMRAM] int 
  2601 ;;  bit2            2   43[COMRAM] int 
  2602 ;;  bit1            2   41[COMRAM] int 
  2603 ;;  bit0            2   39[COMRAM] int 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2613 ;;      Params:         2       0       0       0       0       0       0
  2614 ;;      Locals:        16       0       0       0       0       0       0
  2615 ;;      Temps:          3       0       0       0       0       0       0
  2616 ;;      Totals:        21       0       0       0       0       0       0
  2617 ;;Total ram usage:       21 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    3
  2620 ;; This function calls:
  2621 ;;		_util_onewire_write_bit
  2622 ;; This function is called by:
  2623 ;;		_util_getTemperature
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text6
  2628  001F84                     __ptext6:
  2629                           	opt stack 0
  2630  001F84                     _util_onewire_write_byte:
  2631                           	opt stack 25
  2632                           
  2633                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2634                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2635                           
  2636                           ;incstack = 0
  2637  001F84  0E01               	movlw	1
  2638  001F86  1423               	andwf	util_onewire_write_byte@value,w,c
  2639  001F88  6E28               	movwf	util_onewire_write_byte@bit0,c
  2640  001F8A  6A29               	clrf	util_onewire_write_byte@bit0+1,c
  2641                           
  2642                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2643  001F8C  3424               	rlcf	util_onewire_write_byte@value+1,w,c
  2644  001F8E  3024               	rrcf	util_onewire_write_byte@value+1,w,c
  2645  001F90  6E26               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2646  001F92  3023               	rrcf	util_onewire_write_byte@value,w,c
  2647  001F94  6E25               	movwf	??_util_onewire_write_byte& (0+255),c
  2648  001F96  0E01               	movlw	1
  2649  001F98  1425               	andwf	??_util_onewire_write_byte,w,c
  2650  001F9A  6E2A               	movwf	util_onewire_write_byte@bit1,c
  2651  001F9C  6A2B               	clrf	util_onewire_write_byte@bit1+1,c
  2652                           
  2653                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2654  001F9E  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2655  001FA2  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2656  001FA6  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2657  001FA8  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2658  001FAA  3225               	rrcf	??_util_onewire_write_byte,f,c
  2659  001FAC  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2660  001FAE  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2661  001FB0  3225               	rrcf	??_util_onewire_write_byte,f,c
  2662  001FB2  0E01               	movlw	1
  2663  001FB4  1425               	andwf	??_util_onewire_write_byte,w,c
  2664  001FB6  6E2C               	movwf	util_onewire_write_byte@bit2,c
  2665  001FB8  6A2D               	clrf	util_onewire_write_byte@bit2+1,c
  2666                           
  2667                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2668  001FBA  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2669  001FBE  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2670  001FC2  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2671  001FC4  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2672  001FC6  3225               	rrcf	??_util_onewire_write_byte,f,c
  2673  001FC8  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2674  001FCA  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2675  001FCC  3225               	rrcf	??_util_onewire_write_byte,f,c
  2676  001FCE  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2677  001FD0  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2678  001FD2  3225               	rrcf	??_util_onewire_write_byte,f,c
  2679  001FD4  0E01               	movlw	1
  2680  001FD6  1425               	andwf	??_util_onewire_write_byte,w,c
  2681  001FD8  6E2E               	movwf	util_onewire_write_byte@bit3,c
  2682  001FDA  6A2F               	clrf	util_onewire_write_byte@bit3+1,c
  2683                           
  2684                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2685  001FDC  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2686  001FE0  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2687  001FE4  0E04               	movlw	4
  2688  001FE6  6E27               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2689  001FE8                     u3165:
  2690  001FE8  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2691  001FEA  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2692  001FEC  3225               	rrcf	??_util_onewire_write_byte,f,c
  2693  001FEE  2E27               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2694  001FF0  D7FB               	goto	u3165
  2695  001FF2  0E01               	movlw	1
  2696  001FF4  1425               	andwf	??_util_onewire_write_byte,w,c
  2697  001FF6  6E30               	movwf	util_onewire_write_byte@bit4,c
  2698  001FF8  6A31               	clrf	util_onewire_write_byte@bit4+1,c
  2699                           
  2700                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2701  001FFA  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2702  001FFE  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2703  002002  0E05               	movlw	5
  2704  002004  6E27               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2705  002006                     u3175:
  2706  002006  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2707  002008  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2708  00200A  3225               	rrcf	??_util_onewire_write_byte,f,c
  2709  00200C  2E27               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2710  00200E  D7FB               	goto	u3175
  2711  002010  0E01               	movlw	1
  2712  002012  1425               	andwf	??_util_onewire_write_byte,w,c
  2713  002014  6E32               	movwf	util_onewire_write_byte@bit5,c
  2714  002016  6A33               	clrf	util_onewire_write_byte@bit5+1,c
  2715                           
  2716                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2717  002018  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2718  00201C  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2719  002020  0E06               	movlw	6
  2720  002022  6E27               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2721  002024                     u3185:
  2722  002024  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2723  002026  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2724  002028  3225               	rrcf	??_util_onewire_write_byte,f,c
  2725  00202A  2E27               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2726  00202C  D7FB               	goto	u3185
  2727  00202E  0E01               	movlw	1
  2728  002030  1425               	andwf	??_util_onewire_write_byte,w,c
  2729  002032  6E34               	movwf	util_onewire_write_byte@bit6,c
  2730  002034  6A35               	clrf	util_onewire_write_byte@bit6+1,c
  2731                           
  2732                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  2733  002036  C023  F025         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2734  00203A  C024  F026         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2735  00203E  0E07               	movlw	7
  2736  002040  6E27               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2737  002042                     u3195:
  2738  002042  3426               	rlcf	??_util_onewire_write_byte+1,w,c
  2739  002044  3226               	rrcf	??_util_onewire_write_byte+1,f,c
  2740  002046  3225               	rrcf	??_util_onewire_write_byte,f,c
  2741  002048  2E27               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2742  00204A  D7FB               	goto	u3195
  2743  00204C  0E01               	movlw	1
  2744  00204E  1425               	andwf	??_util_onewire_write_byte,w,c
  2745  002050  6E36               	movwf	util_onewire_write_byte@bit7,c
  2746  002052  6A37               	clrf	util_onewire_write_byte@bit7+1,c
  2747                           
  2748                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  2749  002054  C028  F021         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  2750  002058  C029  F022         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  2751  00205C  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2752                           
  2753                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2754  002060  D000               	nop2		;2 cycle nop
  2755  002062  D000               	nop2		;2 cycle nop
  2756  002064  F000               	nop	
  2757                           
  2758                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  2759  002066  C02A  F021         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  2760  00206A  C02B  F022         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  2761  00206E  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2762                           
  2763                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2764  002072  D000               	nop2		;2 cycle nop
  2765  002074  D000               	nop2		;2 cycle nop
  2766  002076  F000               	nop	
  2767                           
  2768                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  2769  002078  C02C  F021         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  2770  00207C  C02D  F022         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  2771  002080  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2772                           
  2773                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2774  002084  D000               	nop2		;2 cycle nop
  2775  002086  D000               	nop2		;2 cycle nop
  2776  002088  F000               	nop	
  2777                           
  2778                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  2779  00208A  C02E  F021         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  2780  00208E  C02F  F022         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  2781  002092  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2782                           
  2783                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2784  002096  D000               	nop2		;2 cycle nop
  2785  002098  D000               	nop2		;2 cycle nop
  2786  00209A  F000               	nop	
  2787                           
  2788                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  2789  00209C  C030  F021         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  2790  0020A0  C031  F022         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  2791  0020A4  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2792                           
  2793                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2794  0020A8  D000               	nop2		;2 cycle nop
  2795  0020AA  D000               	nop2		;2 cycle nop
  2796  0020AC  F000               	nop	
  2797                           
  2798                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  2799  0020AE  C032  F021         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  2800  0020B2  C033  F022         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  2801  0020B6  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2802                           
  2803                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2804  0020BA  D000               	nop2		;2 cycle nop
  2805  0020BC  D000               	nop2		;2 cycle nop
  2806  0020BE  F000               	nop	
  2807                           
  2808                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  2809  0020C0  C034  F021         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  2810  0020C4  C035  F022         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  2811  0020C8  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2812                           
  2813                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2814  0020CC  D000               	nop2		;2 cycle nop
  2815  0020CE  D000               	nop2		;2 cycle nop
  2816  0020D0  F000               	nop	
  2817                           
  2818                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  2819  0020D2  C036  F021         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  2820  0020D6  C037  F022         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  2821  0020DA  EC95  F019         	call	_util_onewire_write_bit	;wreg free
  2822                           
  2823                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2824  0020DE  D000               	nop2		;2 cycle nop
  2825  0020E0  D000               	nop2		;2 cycle nop
  2826  0020E2  F000               	nop	
  2827  0020E4  0012               	return		;funcret
  2828  0020E6                     __end_of_util_onewire_write_byte:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _util_onewire_write_bit *****************
  2838 ;; Defined at:
  2839 ;;		line 121 in file "easat2_util_onewire.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  bit_in          2   32[COMRAM] int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2853 ;;      Params:         2       0       0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    2
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_util_onewire_write_byte
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text7
  2868  00332A                     __ptext7:
  2869                           	opt stack 0
  2870  00332A                     _util_onewire_write_bit:
  2871                           	opt stack 25
  2872                           
  2873                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  2874                           
  2875                           ;incstack = 0
  2876  00332A  9692               	bcf	3986,3,c	;volatile
  2877                           
  2878                           ;easat2_util_onewire.c: 126: if (bit_in) {
  2879  00332C  5021               	movf	util_onewire_write_bit@bit_in,w,c
  2880  00332E  1022               	iorwf	util_onewire_write_bit@bit_in+1,w,c
  2881  003330  B4D8               	btfsc	status,2,c
  2882  003332  D009               	goto	l135
  2883                           
  2884                           ;easat2_util_onewire.c: 129: PORTAbits.RA3 = 0;
  2885  003334  9680               	bcf	3968,3,c	;volatile
  2886                           
  2887                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2888  003336  D000               	nop2		;2 cycle nop
  2889  003338  D000               	nop2		;2 cycle nop
  2890  00333A  F000               	nop	
  2891                           
  2892                           ;easat2_util_onewire.c: 136: PORTAbits.RA3 = 1;
  2893  00333C  8680               	bsf	3968,3,c	;volatile
  2894                           
  2895                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  2896  00333E  0E09               	movlw	9
  2897  003340                     u4997:
  2898  003340  2EE8               	decfsz	wreg,f,c
  2899  003342  D7FE               	bra	u4997
  2900                           
  2901                           ;easat2_util_onewire.c: 141: } else {
  2902  003344  0012               	return	
  2903  003346                     l135:
  2904                           
  2905                           ;easat2_util_onewire.c: 144: PORTAbits.RA3 = 0;
  2906  003346  9680               	bcf	3968,3,c	;volatile
  2907                           
  2908                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  2909  003348  0E0B               	movlw	11
  2910  00334A                     u5007:
  2911  00334A  2EE8               	decfsz	wreg,f,c
  2912  00334C  D7FE               	bra	u5007
  2913  00334E  D000               	nop2	
  2914                           
  2915                           ;easat2_util_onewire.c: 151: PORTAbits.RA3 = 1;
  2916  003350  8680               	bsf	3968,3,c	;volatile
  2917                           
  2918                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  2919  003352  D000               	nop2		;2 cycle nop
  2920  003354  D000               	nop2		;2 cycle nop
  2921  003356  F000               	nop	
  2922  003358  0012               	return	
  2923  00335A                     __end_of_util_onewire_write_bit:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           wreg	equ	0xFE8
  2927                           postinc2	equ	0xFDE
  2928                           postdec2	equ	0xFDD
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function _util_onewire_reset *****************
  2934 ;; Defined at:
  2935 ;;		line 18 in file "easat2_util_onewire.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  presence        2   35[COMRAM] int 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2   32[COMRAM] int 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2949 ;;      Params:         2       0       0       0       0       0       0
  2950 ;;      Locals:         2       0       0       0       0       0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0
  2952 ;;      Totals:         5       0       0       0       0       0       0
  2953 ;;Total ram usage:        5 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_util_getTemperature
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text8
  2964  003174                     __ptext8:
  2965                           	opt stack 0
  2966  003174                     _util_onewire_reset:
  2967                           	opt stack 26
  2968                           
  2969                           ;easat2_util_onewire.c: 20: int presence = 1;
  2970                           
  2971                           ;incstack = 0
  2972  003174  0E00               	movlw	0
  2973  003176  6E25               	movwf	util_onewire_reset@presence+1,c
  2974  003178  0E01               	movlw	1
  2975  00317A  6E24               	movwf	util_onewire_reset@presence,c
  2976                           
  2977                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  2978  00317C  9692               	bcf	3986,3,c	;volatile
  2979                           
  2980                           ;easat2_util_onewire.c: 25: PORTAbits.RA3 = 0;
  2981  00317E  9680               	bcf	3968,3,c	;volatile
  2982                           
  2983                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  2984  003180  0E5D               	movlw	93
  2985  003182                     u5017:
  2986  003182  2EE8               	decfsz	wreg,f,c
  2987  003184  D7FE               	bra	u5017
  2988  003186  F000               	nop	
  2989                           
  2990                           ;easat2_util_onewire.c: 32: PORTAbits.RA3 = 1;
  2991  003188  8680               	bsf	3968,3,c	;volatile
  2992                           
  2993                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  2994  00318A  0E0B               	movlw	11
  2995  00318C                     u5027:
  2996  00318C  2EE8               	decfsz	wreg,f,c
  2997  00318E  D7FE               	bra	u5027
  2998  003190  D000               	nop2	
  2999                           
  3000                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3001  003192  8692               	bsf	3986,3,c	;volatile
  3002                           
  3003                           ;easat2_util_onewire.c: 47: presence = PORTAbits.RA3;
  3004  003194  A680               	btfss	3968,3,c	;volatile
  3005  003196  D003               	goto	u3150
  3006  003198  6A23               	clrf	??_util_onewire_reset& (0+255),c
  3007  00319A  2A23               	incf	??_util_onewire_reset& (0+255),f,c
  3008  00319C  D001               	goto	u3158
  3009  00319E                     u3150:
  3010  00319E  6A23               	clrf	??_util_onewire_reset& (0+255),c
  3011  0031A0                     u3158:
  3012  0031A0  5023               	movf	??_util_onewire_reset,w,c
  3013  0031A2  6E24               	movwf	util_onewire_reset@presence,c
  3014  0031A4  6A25               	clrf	util_onewire_reset@presence+1,c
  3015                           
  3016                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3017  0031A6  0E46               	movlw	70
  3018  0031A8                     u5037:
  3019  0031A8  2EE8               	decfsz	wreg,f,c
  3020  0031AA  D7FE               	bra	u5037
  3021                           
  3022                           ;easat2_util_onewire.c: 56: return presence;
  3023  0031AC  C024  F021         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3024  0031B0  C025  F022         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3025  0031B4  0012               	return	
  3026  0031B6                     __end_of_util_onewire_reset:
  3027                           	opt stack 0
  3028                           tblptru	equ	0xFF8
  3029                           wreg	equ	0xFE8
  3030                           postinc2	equ	0xFDE
  3031                           postdec2	equ	0xFDD
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8
  3035                           
  3036 ;; *************** function _util_onewire_read_byte *****************
  3037 ;; Defined at:
  3038 ;;		line 96 in file "easat2_util_onewire.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  value           2   16[BANK0 ] int 
  3043 ;;  bit7            2   14[BANK0 ] int 
  3044 ;;  bit6            2   12[BANK0 ] int 
  3045 ;;  bit5            2   10[BANK0 ] int 
  3046 ;;  bit4            2    8[BANK0 ] int 
  3047 ;;  bit3            2    6[BANK0 ] int 
  3048 ;;  bit2            2    4[BANK0 ] int 
  3049 ;;  bit1            2    2[BANK0 ] int 
  3050 ;;  bit0            2    0[BANK0 ] int 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2   37[COMRAM] int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3060 ;;      Params:         2       0       0       0       0       0       0
  3061 ;;      Locals:         0      18       0       0       0       0       0
  3062 ;;      Temps:         14       0       0       0       0       0       0
  3063 ;;      Totals:        16      18       0       0       0       0       0
  3064 ;;Total ram usage:       34 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		_util_onewire_read_bit
  3069 ;; This function is called by:
  3070 ;;		_util_getTemperature
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text9
  3075  0020E6                     __ptext9:
  3076                           	opt stack 0
  3077  0020E6                     _util_onewire_read_byte:
  3078                           	opt stack 25
  3079                           
  3080                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3081                           ;easat2_util_onewire.c: 99: int value = 0;
  3082                           
  3083                           ;incstack = 0
  3084  0020E6  0E00               	movlw	0
  3085  0020E8  0100               	movlb	0	; () banked
  3086  0020EA  6F71               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3087  0020EC  0E00               	movlw	0
  3088  0020EE  6F70               	movwf	util_onewire_read_byte@value& (0+255),b
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3092  0020F0  8692               	bsf	3986,3,c	;volatile
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3096  0020F2  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3097  0020F6  C021  F060         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3098  0020FA  C022  F061         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3099                           
  3100                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3101  0020FE  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3102  002102  C021  F062         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3103  002106  C022  F063         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3104                           
  3105                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3106  00210A  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3107  00210E  C021  F064         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3108  002112  C022  F065         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3109                           
  3110                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3111  002116  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3112  00211A  C021  F066         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3113  00211E  C022  F067         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3114                           
  3115                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3116  002122  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3117  002126  C021  F068         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3118  00212A  C022  F069         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3119                           
  3120                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3121  00212E  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3122  002132  C021  F06A         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3123  002136  C022  F06B         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3124                           
  3125                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3126  00213A  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3127  00213E  C021  F06C         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3128  002142  C022  F06D         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3129                           
  3130                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3131  002146  EC4C  F019         	call	_util_onewire_read_bit	;wreg free
  3132  00214A  C021  F06E         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3133  00214E  C022  F06F         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3134                           
  3135                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3136                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3137  002152  C06E  F028         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3138  002156  C06F  F029         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3139  00215A  0E07               	movlw	7
  3140  00215C                     u3205:
  3141  00215C  90D8               	bcf	status,0,c
  3142  00215E  3628               	rlcf	??_util_onewire_read_byte,f,c
  3143  002160  3629               	rlcf	??_util_onewire_read_byte+1,f,c
  3144  002162  2EE8               	decfsz	wreg,f,c
  3145  002164  D7FB               	goto	u3205
  3146  002166  C06C  F02A         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3147  00216A  C06D  F02B         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3148  00216E  0E06               	movlw	6
  3149  002170                     u3215:
  3150  002170  90D8               	bcf	status,0,c
  3151  002172  362A               	rlcf	??_util_onewire_read_byte+2,f,c
  3152  002174  362B               	rlcf	??_util_onewire_read_byte+3,f,c
  3153  002176  2EE8               	decfsz	wreg,f,c
  3154  002178  D7FB               	goto	u3215
  3155  00217A  C06A  F02C         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3156  00217E  C06B  F02D         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3157  002182  0E05               	movlw	5
  3158  002184                     u3225:
  3159  002184  90D8               	bcf	status,0,c
  3160  002186  362C               	rlcf	??_util_onewire_read_byte+4,f,c
  3161  002188  362D               	rlcf	??_util_onewire_read_byte+5,f,c
  3162  00218A  2EE8               	decfsz	wreg,f,c
  3163  00218C  D7FB               	goto	u3225
  3164  00218E  C068  F02E         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3165  002192  C069  F02F         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3166  002196  3A2E               	swapf	??_util_onewire_read_byte+6,f,c
  3167  002198  3A2F               	swapf	??_util_onewire_read_byte+7,f,c
  3168  00219A  0EF0               	movlw	240
  3169  00219C  162F               	andwf	??_util_onewire_read_byte+7,f,c
  3170  00219E  502E               	movf	??_util_onewire_read_byte+6,w,c
  3171  0021A0  0B0F               	andlw	15
  3172  0021A2  122F               	iorwf	??_util_onewire_read_byte+7,f,c
  3173  0021A4  0EF0               	movlw	240
  3174  0021A6  162E               	andwf	??_util_onewire_read_byte+6,f,c
  3175  0021A8  C066  F030         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3176  0021AC  C067  F031         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3177  0021B0  90D8               	bcf	status,0,c
  3178  0021B2  3630               	rlcf	??_util_onewire_read_byte+8,f,c
  3179  0021B4  3631               	rlcf	??_util_onewire_read_byte+9,f,c
  3180  0021B6  90D8               	bcf	status,0,c
  3181  0021B8  3630               	rlcf	??_util_onewire_read_byte+8,f,c
  3182  0021BA  3631               	rlcf	??_util_onewire_read_byte+9,f,c
  3183  0021BC  90D8               	bcf	status,0,c
  3184  0021BE  3630               	rlcf	??_util_onewire_read_byte+8,f,c
  3185  0021C0  3631               	rlcf	??_util_onewire_read_byte+9,f,c
  3186  0021C2  C064  F032         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3187  0021C6  C065  F033         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3188  0021CA  90D8               	bcf	status,0,c
  3189  0021CC  3632               	rlcf	??_util_onewire_read_byte+10,f,c
  3190  0021CE  3633               	rlcf	??_util_onewire_read_byte+11,f,c
  3191  0021D0  90D8               	bcf	status,0,c
  3192  0021D2  3632               	rlcf	??_util_onewire_read_byte+10,f,c
  3193  0021D4  3633               	rlcf	??_util_onewire_read_byte+11,f,c
  3194  0021D6  C062  F034         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3195  0021DA  C063  F035         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3196  0021DE  90D8               	bcf	status,0,c
  3197  0021E0  3634               	rlcf	??_util_onewire_read_byte+12,f,c
  3198  0021E2  3635               	rlcf	??_util_onewire_read_byte+13,f,c
  3199  0021E4  5032               	movf	??_util_onewire_read_byte+10,w,c
  3200  0021E6  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3201  0021E8  5033               	movf	??_util_onewire_read_byte+11,w,c
  3202  0021EA  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3203  0021EC  5030               	movf	??_util_onewire_read_byte+8,w,c
  3204  0021EE  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3205  0021F0  5031               	movf	??_util_onewire_read_byte+9,w,c
  3206  0021F2  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3207  0021F4  502E               	movf	??_util_onewire_read_byte+6,w,c
  3208  0021F6  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3209  0021F8  502F               	movf	??_util_onewire_read_byte+7,w,c
  3210  0021FA  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3211  0021FC  502C               	movf	??_util_onewire_read_byte+4,w,c
  3212  0021FE  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3213  002200  502D               	movf	??_util_onewire_read_byte+5,w,c
  3214  002202  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3215  002204  502A               	movf	??_util_onewire_read_byte+2,w,c
  3216  002206  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3217  002208  502B               	movf	??_util_onewire_read_byte+3,w,c
  3218  00220A  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3219  00220C  5028               	movf	??_util_onewire_read_byte,w,c
  3220  00220E  2634               	addwf	??_util_onewire_read_byte+12,f,c
  3221  002210  5029               	movf	??_util_onewire_read_byte+1,w,c
  3222  002212  2235               	addwfc	??_util_onewire_read_byte+13,f,c
  3223  002214  0100               	movlb	0	; () banked
  3224  002216  5160               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3225  002218  2434               	addwf	??_util_onewire_read_byte+12,w,c
  3226  00221A  0100               	movlb	0	; () banked
  3227  00221C  6F70               	movwf	util_onewire_read_byte@value& (0+255),b
  3228  00221E  0100               	movlb	0	; () banked
  3229  002220  5161               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3230  002222  2035               	addwfc	??_util_onewire_read_byte+13,w,c
  3231  002224  0100               	movlb	0	; () banked
  3232  002226  6F71               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;easat2_util_onewire.c: 116: return value;
  3236  002228  C070  F026         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3237  00222C  C071  F027         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3238  002230  0012               	return	
  3239  002232                     __end_of_util_onewire_read_byte:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           wreg	equ	0xFE8
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           status	equ	0xFD8
  3248                           
  3249 ;; *************** function _util_onewire_read_bit *****************
  3250 ;; Defined at:
  3251 ;;		line 162 in file "easat2_util_onewire.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  value           2   35[COMRAM] int 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  2   32[COMRAM] int 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3265 ;;      Params:         2       0       0       0       0       0       0
  3266 ;;      Locals:         2       0       0       0       0       0       0
  3267 ;;      Temps:          1       0       0       0       0       0       0
  3268 ;;      Totals:         5       0       0       0       0       0       0
  3269 ;;Total ram usage:        5 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    2
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_util_onewire_read_byte
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text10
  3280  003298                     __ptext10:
  3281                           	opt stack 0
  3282  003298                     _util_onewire_read_bit:
  3283                           	opt stack 25
  3284                           
  3285                           ;easat2_util_onewire.c: 164: int value = 0;
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;incstack = 0
  3289  003298  0E00               	movlw	0
  3290  00329A  6E25               	movwf	util_onewire_read_bit@value+1,c
  3291  00329C  0E00               	movlw	0
  3292  00329E  6E24               	movwf	util_onewire_read_bit@value,c
  3293                           
  3294                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3295  0032A0  9692               	bcf	3986,3,c	;volatile
  3296                           
  3297                           ;easat2_util_onewire.c: 170: PORTAbits.RA3 = 0;
  3298  0032A2  9680               	bcf	3968,3,c	;volatile
  3299                           
  3300                           ;easat2_util_onewire.c: 176: PORTAbits.RA3 = 1;
  3301                           
  3302                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3303  0032A4  8680               	bsf	3968,3,c	;volatile
  3304                           
  3305                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3306  0032A6  D000               	nop2		;2 cycle nop
  3307                           
  3308                           ;easat2_util_onewire.c: 182: value = PORTAbits.RA3;
  3309  0032A8  A680               	btfss	3968,3,c	;volatile
  3310  0032AA  D003               	goto	u2670
  3311  0032AC  6A23               	clrf	??_util_onewire_read_bit& (0+255),c
  3312  0032AE  2A23               	incf	??_util_onewire_read_bit& (0+255),f,c
  3313  0032B0  D001               	goto	u2678
  3314  0032B2                     u2670:
  3315  0032B2  6A23               	clrf	??_util_onewire_read_bit& (0+255),c
  3316  0032B4                     u2678:
  3317  0032B4  5023               	movf	??_util_onewire_read_bit,w,c
  3318  0032B6  6E24               	movwf	util_onewire_read_bit@value,c
  3319  0032B8  6A25               	clrf	util_onewire_read_bit@value+1,c
  3320                           
  3321                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3322  0032BA  0E0A               	movlw	10
  3323  0032BC                     u5047:
  3324  0032BC  2EE8               	decfsz	wreg,f,c
  3325  0032BE  D7FE               	bra	u5047
  3326                           
  3327                           ;easat2_util_onewire.c: 187: return value;
  3328  0032C0  C024  F021         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3329  0032C4  C025  F022         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3330  0032C8  0012               	return	
  3331  0032CA                     __end_of_util_onewire_read_bit:
  3332                           	opt stack 0
  3333                           tblptru	equ	0xFF8
  3334                           wreg	equ	0xFE8
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function ___ftdiv *****************
  3342 ;; Defined at:
  3343 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  f1              3   44[COMRAM] float 
  3346 ;;  f2              3   47[COMRAM] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  f3              3   54[COMRAM] float 
  3349 ;;  sign            1   58[COMRAM] unsigned char 
  3350 ;;  exp             1   57[COMRAM] unsigned char 
  3351 ;;  cntr            1   53[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  3   44[COMRAM] float 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3361 ;;      Params:         6       0       0       0       0       0       0
  3362 ;;      Locals:         6       0       0       0       0       0       0
  3363 ;;      Temps:          3       0       0       0       0       0       0
  3364 ;;      Totals:        15       0       0       0       0       0       0
  3365 ;;Total ram usage:       15 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    3
  3368 ;; This function calls:
  3369 ;;		___ftpack
  3370 ;; This function is called by:
  3371 ;;		_util_getTemperature
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text11
  3376  0027E6                     __ptext11:
  3377                           	opt stack 0
  3378  0027E6                     ___ftdiv:
  3379                           	opt stack 25
  3380                           
  3381                           ;incstack = 0
  3382  0027E6  C02F  F033         	movff	___ftdiv@f1+2,??___ftdiv
  3383  0027EA  6A34               	clrf	(??___ftdiv+1)& (0+255),c
  3384  0027EC  6A35               	clrf	(??___ftdiv+2)& (0+255),c
  3385  0027EE  342E               	rlcf	___ftdiv@f1+1,w,c
  3386  0027F0  3633               	rlcf	??___ftdiv& (0+255),f,c
  3387  0027F2  E301               	bnc	u3771
  3388  0027F4  8034               	bsf	(??___ftdiv+1)& (0+255),0,c
  3389  0027F6                     u3771:
  3390  0027F6  5033               	movf	??___ftdiv,w,c
  3391  0027F8  6E3A               	movwf	___ftdiv@exp,c
  3392  0027FA  503A               	movf	___ftdiv@exp,w,c
  3393  0027FC  A4D8               	btfss	status,2,c
  3394  0027FE  D007               	goto	l3943
  3395  002800  0E00               	movlw	0
  3396  002802  6E2D               	movwf	?___ftdiv,c
  3397  002804  0E00               	movlw	0
  3398  002806  6E2E               	movwf	?___ftdiv+1,c
  3399  002808  0E00               	movlw	0
  3400  00280A  6E2F               	movwf	?___ftdiv+2,c
  3401  00280C  0012               	return	
  3402  00280E                     l3943:
  3403  00280E  C032  F033         	movff	___ftdiv@f2+2,??___ftdiv
  3404  002812  6A34               	clrf	(??___ftdiv+1)& (0+255),c
  3405  002814  6A35               	clrf	(??___ftdiv+2)& (0+255),c
  3406  002816  3431               	rlcf	___ftdiv@f2+1,w,c
  3407  002818  3633               	rlcf	??___ftdiv& (0+255),f,c
  3408  00281A  E301               	bnc	u3791
  3409  00281C  8034               	bsf	(??___ftdiv+1)& (0+255),0,c
  3410  00281E                     u3791:
  3411  00281E  5033               	movf	??___ftdiv,w,c
  3412  002820  6E3B               	movwf	___ftdiv@sign,c
  3413  002822  503B               	movf	___ftdiv@sign,w,c
  3414  002824  A4D8               	btfss	status,2,c
  3415  002826  D007               	goto	l3949
  3416  002828  0E00               	movlw	0
  3417  00282A  6E2D               	movwf	?___ftdiv,c
  3418  00282C  0E00               	movlw	0
  3419  00282E  6E2E               	movwf	?___ftdiv+1,c
  3420  002830  0E00               	movlw	0
  3421  002832  6E2F               	movwf	?___ftdiv+2,c
  3422  002834  0012               	return	
  3423  002836                     l3949:
  3424  002836  0E00               	movlw	0
  3425  002838  6E37               	movwf	___ftdiv@f3,c
  3426  00283A  0E00               	movlw	0
  3427  00283C  6E38               	movwf	___ftdiv@f3+1,c
  3428  00283E  0E00               	movlw	0
  3429  002840  6E39               	movwf	___ftdiv@f3+2,c
  3430  002842  503B               	movf	___ftdiv@sign,w,c
  3431  002844  0F89               	addlw	137
  3432  002846  5E3A               	subwf	___ftdiv@exp,f,c
  3433  002848  C02F  F03B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3434  00284C  5032               	movf	___ftdiv@f2+2,w,c
  3435  00284E  1A3B               	xorwf	___ftdiv@sign,f,c
  3436  002850  0E80               	movlw	128
  3437  002852  163B               	andwf	___ftdiv@sign,f,c
  3438  002854  8E2E               	bsf	___ftdiv@f1+1,7,c
  3439  002856  0EFF               	movlw	255
  3440  002858  162D               	andwf	___ftdiv@f1,f,c
  3441  00285A  0EFF               	movlw	255
  3442  00285C  162E               	andwf	___ftdiv@f1+1,f,c
  3443  00285E  0E00               	movlw	0
  3444  002860  162F               	andwf	___ftdiv@f1+2,f,c
  3445  002862  8E31               	bsf	___ftdiv@f2+1,7,c
  3446  002864  0EFF               	movlw	255
  3447  002866  1630               	andwf	___ftdiv@f2,f,c
  3448  002868  0EFF               	movlw	255
  3449  00286A  1631               	andwf	___ftdiv@f2+1,f,c
  3450  00286C  0E00               	movlw	0
  3451  00286E  1632               	andwf	___ftdiv@f2+2,f,c
  3452  002870  0E18               	movlw	24
  3453  002872  6E36               	movwf	___ftdiv@cntr,c
  3454  002874                     l3969:
  3455  002874  90D8               	bcf	status,0,c
  3456  002876  3637               	rlcf	___ftdiv@f3,f,c
  3457  002878  3638               	rlcf	___ftdiv@f3+1,f,c
  3458  00287A  3639               	rlcf	___ftdiv@f3+2,f,c
  3459  00287C  5030               	movf	___ftdiv@f2,w,c
  3460  00287E  5C2D               	subwf	___ftdiv@f1,w,c
  3461  002880  5031               	movf	___ftdiv@f2+1,w,c
  3462  002882  582E               	subwfb	___ftdiv@f1+1,w,c
  3463  002884  5032               	movf	___ftdiv@f2+2,w,c
  3464  002886  582F               	subwfb	___ftdiv@f1+2,w,c
  3465  002888  A0D8               	btfss	status,0,c
  3466  00288A  D007               	goto	l757
  3467  00288C  5030               	movf	___ftdiv@f2,w,c
  3468  00288E  5E2D               	subwf	___ftdiv@f1,f,c
  3469  002890  5031               	movf	___ftdiv@f2+1,w,c
  3470  002892  5A2E               	subwfb	___ftdiv@f1+1,f,c
  3471  002894  5032               	movf	___ftdiv@f2+2,w,c
  3472  002896  5A2F               	subwfb	___ftdiv@f1+2,f,c
  3473  002898  8037               	bsf	___ftdiv@f3,0,c
  3474  00289A                     l757:
  3475  00289A  90D8               	bcf	status,0,c
  3476  00289C  362D               	rlcf	___ftdiv@f1,f,c
  3477  00289E  362E               	rlcf	___ftdiv@f1+1,f,c
  3478  0028A0  362F               	rlcf	___ftdiv@f1+2,f,c
  3479  0028A2  2E36               	decfsz	___ftdiv@cntr,f,c
  3480  0028A4  D7E7               	goto	l3969
  3481  0028A6  C037  F021         	movff	___ftdiv@f3,___ftpack@arg
  3482  0028AA  C038  F022         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3483  0028AE  C039  F023         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3484  0028B2  C03A  F024         	movff	___ftdiv@exp,___ftpack@exp
  3485  0028B6  C03B  F025         	movff	___ftdiv@sign,___ftpack@sign
  3486  0028BA  EC7D  F015         	call	___ftpack	;wreg free
  3487  0028BE  C021  F02D         	movff	?___ftpack,?___ftdiv
  3488  0028C2  C022  F02E         	movff	?___ftpack+1,?___ftdiv+1
  3489  0028C6  C023  F02F         	movff	?___ftpack+2,?___ftdiv+2
  3490  0028CA  0012               	return	
  3491  0028CC                     __end_of___ftdiv:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           wreg	equ	0xFE8
  3495                           postinc2	equ	0xFDE
  3496                           postdec2	equ	0xFDD
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function ___awtoft *****************
  3502 ;; Defined at:
  3503 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  c               2   40[COMRAM] int 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  sign            1   43[COMRAM] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  3   40[COMRAM] float 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3517 ;;      Params:         3       0       0       0       0       0       0
  3518 ;;      Locals:         1       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0
  3520 ;;      Totals:         4       0       0       0       0       0       0
  3521 ;;Total ram usage:        4 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    3
  3524 ;; This function calls:
  3525 ;;		___ftpack
  3526 ;; This function is called by:
  3527 ;;		_util_getTemperature
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text12
  3532  0031F8                     __ptext12:
  3533                           	opt stack 0
  3534  0031F8                     ___awtoft:
  3535                           	opt stack 25
  3536                           
  3537                           ;incstack = 0
  3538  0031F8  0E00               	movlw	0
  3539  0031FA  6E2C               	movwf	___awtoft@sign,c
  3540  0031FC  AE2A               	btfss	___awtoft@c+1,7,c
  3541  0031FE  D006               	goto	l3991
  3542  003200  6C29               	negf	___awtoft@c,c
  3543  003202  1E2A               	comf	___awtoft@c+1,f,c
  3544  003204  B0D8               	btfsc	status,0,c
  3545  003206  2A2A               	incf	___awtoft@c+1,f,c
  3546  003208  0E01               	movlw	1
  3547  00320A  6E2C               	movwf	___awtoft@sign,c
  3548  00320C                     l3991:
  3549  00320C  C029  F021         	movff	___awtoft@c,___ftpack@arg
  3550  003210  C02A  F022         	movff	___awtoft@c+1,___ftpack@arg+1
  3551  003214  6A23               	clrf	___ftpack@arg+2,c
  3552  003216  0E8E               	movlw	142
  3553  003218  6E24               	movwf	___ftpack@exp,c
  3554  00321A  C02C  F025         	movff	___awtoft@sign,___ftpack@sign
  3555  00321E  EC7D  F015         	call	___ftpack	;wreg free
  3556  003222  C021  F029         	movff	?___ftpack,?___awtoft
  3557  003226  C022  F02A         	movff	?___ftpack+1,?___awtoft+1
  3558  00322A  C023  F02B         	movff	?___ftpack+2,?___awtoft+2
  3559  00322E  0012               	return	
  3560  003230                     __end_of___awtoft:
  3561                           	opt stack 0
  3562                           tblptru	equ	0xFF8
  3563                           wreg	equ	0xFE8
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _util_getSolarCurrent *****************
  3571 ;; Defined at:
  3572 ;;		line 52 in file "easat2_util_inputs.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  solarCurrent    3   36[BANK0 ] float 
  3577 ;;  value           3   33[BANK0 ] float 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2   31[BANK0 ] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       2       0       0       0       0       0
  3588 ;;      Locals:         0       6       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0
  3590 ;;      Totals:         0       8       0       0       0       0       0
  3591 ;;Total ram usage:        8 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    4
  3594 ;; This function calls:
  3595 ;;		___ftmul
  3596 ;;		___fttol
  3597 ;;		___lwtoft
  3598 ;; This function is called by:
  3599 ;;		_main_loop
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text13
  3604  0028CC                     __ptext13:
  3605                           	opt stack 0
  3606  0028CC                     _util_getSolarCurrent:
  3607                           	opt stack 25
  3608                           
  3609                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  3610                           
  3611                           ;incstack = 0
  3612  0028CC  0E00               	movlw	0
  3613  0028CE  0100               	movlb	0	; () banked
  3614  0028D0  6F81               	movwf	util_getSolarCurrent@value& (0+255),b
  3615  0028D2  0E00               	movlw	0
  3616  0028D4  0100               	movlb	0	; () banked
  3617  0028D6  6F82               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  3618  0028D8  0E00               	movlw	0
  3619  0028DA  0100               	movlb	0	; () banked
  3620  0028DC  6F83               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  3621  0028DE  0E00               	movlw	0
  3622  0028E0  0100               	movlb	0	; () banked
  3623  0028E2  6F84               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  3624  0028E4  0E00               	movlw	0
  3625  0028E6  0100               	movlb	0	; () banked
  3626  0028E8  6F85               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  3627  0028EA  0E00               	movlw	0
  3628  0028EC  0100               	movlb	0	; () banked
  3629  0028EE  6F86               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  3633  0028F0  84C2               	bsf	4034,2,c	;volatile
  3634  0028F2  96C2               	bcf	4034,3,c	;volatile
  3635  0028F4  98C2               	bcf	4034,4,c	;volatile
  3636  0028F6  9AC2               	bcf	4034,5,c	;volatile
  3637  0028F8  9CC2               	bcf	4034,6,c	;volatile
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  3641  0028FA  80C2               	bsf	4034,0,c	;volatile
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  3645  0028FC  9C9E               	bcf	3998,6,c	;volatile
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  3649  0028FE  82C2               	bsf	4034,1,c	;volatile
  3650  002900                     l78:
  3651  002900  AC9E               	btfss	3998,6,c	;volatile
  3652  002902  D7FE               	goto	l78
  3653                           
  3654                           ;easat2_util_inputs.c: 63: value = ADRES;
  3655  002904  CFC3 F029          	movff	4035,___lwtoft@c	;volatile
  3656  002908  CFC4 F02A          	movff	4036,___lwtoft@c+1	;volatile
  3657  00290C  EC2D  F01A         	call	___lwtoft	;wreg free
  3658  002910  C029  F081         	movff	?___lwtoft,util_getSolarCurrent@value
  3659  002914  C02A  F082         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  3660  002918  C02B  F083         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  3661                           
  3662                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  3663  00291C  9C9E               	bcf	3998,6,c	;volatile
  3664                           
  3665                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  3666  00291E  90C2               	bcf	4034,0,c	;volatile
  3667                           
  3668                           ;easat2_util_inputs.c: 73: solarCurrent = (1.024 / 1023.0) * value;
  3669  002920  C081  F035         	movff	util_getSolarCurrent@value,___ftmul@f1
  3670  002924  C082  F036         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  3671  002928  C083  F037         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  3672  00292C  0E33               	movlw	51
  3673  00292E  6E38               	movwf	___ftmul@f2,c
  3674  002930  0E83               	movlw	131
  3675  002932  6E39               	movwf	___ftmul@f2+1,c
  3676  002934  0E3A               	movlw	58
  3677  002936  6E3A               	movwf	___ftmul@f2+2,c
  3678  002938  EC54  F012         	call	___ftmul	;wreg free
  3679  00293C  C035  F084         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  3680  002940  C036  F085         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  3681  002944  C037  F086         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  3682                           
  3683                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  3684  002948  C084  F035         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  3685  00294C  C085  F036         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  3686  002950  C086  F037         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  3687  002954  0E00               	movlw	0
  3688  002956  6E38               	movwf	___ftmul@f2,c
  3689  002958  0E80               	movlw	128
  3690  00295A  6E39               	movwf	___ftmul@f2+1,c
  3691  00295C  0E3F               	movlw	63
  3692  00295E  6E3A               	movwf	___ftmul@f2+2,c
  3693  002960  EC54  F012         	call	___ftmul	;wreg free
  3694  002964  C035  F084         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  3695  002968  C036  F085         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  3696  00296C  C037  F086         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  3697                           
  3698                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  3699  002970  C084  F070         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  3700  002974  C085  F071         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  3701  002978  C086  F072         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  3702  00297C  EC19  F011         	call	___fttol	;wreg free
  3703  002980  C070  F07F         	movff	?___fttol,?_util_getSolarCurrent
  3704  002984  C071  F080         	movff	?___fttol+1,?_util_getSolarCurrent+1
  3705  002988  0012               	return	
  3706  00298A                     __end_of_util_getSolarCurrent:
  3707                           	opt stack 0
  3708                           tblptru	equ	0xFF8
  3709                           wreg	equ	0xFE8
  3710                           postinc2	equ	0xFDE
  3711                           postdec2	equ	0xFDD
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716 ;; *************** function _util_getBatteryVoltage *****************
  3717 ;; Defined at:
  3718 ;;		line 19 in file "easat2_util_inputs.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  voltage         3   15[BANK0 ] float 
  3723 ;;  value           3   12[BANK0 ] float 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  3    9[BANK0 ] float 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         0       3       0       0       0       0       0
  3734 ;;      Locals:         0       6       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0
  3736 ;;      Totals:         0       9       0       0       0       0       0
  3737 ;;Total ram usage:        9 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    4
  3740 ;; This function calls:
  3741 ;;		___ftmul
  3742 ;;		___lwtoft
  3743 ;; This function is called by:
  3744 ;;		_main_loop
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text14
  3749  002A48                     __ptext14:
  3750                           	opt stack 0
  3751  002A48                     _util_getBatteryVoltage:
  3752                           	opt stack 25
  3753                           
  3754                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  3755                           
  3756                           ;incstack = 0
  3757  002A48  0E00               	movlw	0
  3758  002A4A  0100               	movlb	0	; () banked
  3759  002A4C  6F6C               	movwf	util_getBatteryVoltage@value& (0+255),b
  3760  002A4E  0E00               	movlw	0
  3761  002A50  0100               	movlb	0	; () banked
  3762  002A52  6F6D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  3763  002A54  0E00               	movlw	0
  3764  002A56  0100               	movlb	0	; () banked
  3765  002A58  6F6E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  3766  002A5A  0E00               	movlw	0
  3767  002A5C  0100               	movlb	0	; () banked
  3768  002A5E  6F6F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  3769  002A60  0E00               	movlw	0
  3770  002A62  0100               	movlb	0	; () banked
  3771  002A64  6F70               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  3772  002A66  0E00               	movlw	0
  3773  002A68  0100               	movlb	0	; () banked
  3774  002A6A  6F71               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  3778  002A6C  94C2               	bcf	4034,2,c	;volatile
  3779  002A6E  96C2               	bcf	4034,3,c	;volatile
  3780  002A70  98C2               	bcf	4034,4,c	;volatile
  3781  002A72  9AC2               	bcf	4034,5,c	;volatile
  3782  002A74  9CC2               	bcf	4034,6,c	;volatile
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  3786  002A76  80C2               	bsf	4034,0,c	;volatile
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  3790  002A78  9C9E               	bcf	3998,6,c	;volatile
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  3794  002A7A  82C2               	bsf	4034,1,c	;volatile
  3795  002A7C                     l72:
  3796  002A7C  AC9E               	btfss	3998,6,c	;volatile
  3797  002A7E  D7FE               	goto	l72
  3798                           
  3799                           ;easat2_util_inputs.c: 30: value = ADRES;
  3800  002A80  CFC3 F029          	movff	4035,___lwtoft@c	;volatile
  3801  002A84  CFC4 F02A          	movff	4036,___lwtoft@c+1	;volatile
  3802  002A88  EC2D  F01A         	call	___lwtoft	;wreg free
  3803  002A8C  C029  F06C         	movff	?___lwtoft,util_getBatteryVoltage@value
  3804  002A90  C02A  F06D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  3805  002A94  C02B  F06E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  3806                           
  3807                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  3808  002A98  9C9E               	bcf	3998,6,c	;volatile
  3809                           
  3810                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  3811  002A9A  90C2               	bcf	4034,0,c	;volatile
  3812                           
  3813                           ;easat2_util_inputs.c: 40: voltage = (1.024 / 1023.0) * value;
  3814  002A9C  C06C  F035         	movff	util_getBatteryVoltage@value,___ftmul@f1
  3815  002AA0  C06D  F036         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  3816  002AA4  C06E  F037         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  3817  002AA8  0E33               	movlw	51
  3818  002AAA  6E38               	movwf	___ftmul@f2,c
  3819  002AAC  0E83               	movlw	131
  3820  002AAE  6E39               	movwf	___ftmul@f2+1,c
  3821  002AB0  0E3A               	movlw	58
  3822  002AB2  6E3A               	movwf	___ftmul@f2+2,c
  3823  002AB4  EC54  F012         	call	___ftmul	;wreg free
  3824  002AB8  C035  F06F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  3825  002ABC  C036  F070         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  3826  002AC0  C037  F071         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  3827                           
  3828                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  3829  002AC4  C06F  F035         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  3830  002AC8  C070  F036         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  3831  002ACC  C071  F037         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  3832  002AD0  0E66               	movlw	102
  3833  002AD2  6E38               	movwf	___ftmul@f2,c
  3834  002AD4  0EB6               	movlw	182
  3835  002AD6  6E39               	movwf	___ftmul@f2+1,c
  3836  002AD8  0E40               	movlw	64
  3837  002ADA  6E3A               	movwf	___ftmul@f2+2,c
  3838  002ADC  EC54  F012         	call	___ftmul	;wreg free
  3839  002AE0  C035  F06F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  3840  002AE4  C036  F070         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  3841  002AE8  C037  F071         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  3842                           
  3843                           ;easat2_util_inputs.c: 46: return voltage;
  3844  002AEC  C06F  F069         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  3845  002AF0  C070  F06A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  3846  002AF4  C071  F06B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  3847  002AF8  0012               	return	
  3848  002AFA                     __end_of_util_getBatteryVoltage:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           wreg	equ	0xFE8
  3852                           postinc2	equ	0xFDE
  3853                           postdec2	equ	0xFDD
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _util_getBatteryCurrent *****************
  3859 ;; Defined at:
  3860 ;;		line 85 in file "easat2_util_inputs.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  batteryCurre    3   36[BANK0 ] float 
  3865 ;;  value           3   33[BANK0 ] float 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2   31[BANK0 ] int 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3875 ;;      Params:         0       2       0       0       0       0       0
  3876 ;;      Locals:         0       6       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0
  3878 ;;      Totals:         0       8       0       0       0       0       0
  3879 ;;Total ram usage:        8 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    4
  3882 ;; This function calls:
  3883 ;;		___ftmul
  3884 ;;		___fttol
  3885 ;;		___lwtoft
  3886 ;; This function is called by:
  3887 ;;		_main_loop
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text15
  3892  00298A                     __ptext15:
  3893                           	opt stack 0
  3894  00298A                     _util_getBatteryCurrent:
  3895                           	opt stack 25
  3896                           
  3897                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  3898                           
  3899                           ;incstack = 0
  3900  00298A  0E00               	movlw	0
  3901  00298C  0100               	movlb	0	; () banked
  3902  00298E  6F81               	movwf	util_getBatteryCurrent@value& (0+255),b
  3903  002990  0E00               	movlw	0
  3904  002992  0100               	movlb	0	; () banked
  3905  002994  6F82               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  3906  002996  0E00               	movlw	0
  3907  002998  0100               	movlb	0	; () banked
  3908  00299A  6F83               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  3909  00299C  0E00               	movlw	0
  3910  00299E  0100               	movlb	0	; () banked
  3911  0029A0  6F84               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  3912  0029A2  0E00               	movlw	0
  3913  0029A4  0100               	movlb	0	; () banked
  3914  0029A6  6F85               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  3915  0029A8  0E00               	movlw	0
  3916  0029AA  0100               	movlb	0	; () banked
  3917  0029AC  6F86               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 2;
  3921  0029AE  94C2               	bcf	4034,2,c	;volatile
  3922  0029B0  86C2               	bsf	4034,3,c	;volatile
  3923  0029B2  98C2               	bcf	4034,4,c	;volatile
  3924  0029B4  9AC2               	bcf	4034,5,c	;volatile
  3925  0029B6  9CC2               	bcf	4034,6,c	;volatile
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  3929  0029B8  80C2               	bsf	4034,0,c	;volatile
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  3933  0029BA  9C9E               	bcf	3998,6,c	;volatile
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  3937  0029BC  82C2               	bsf	4034,1,c	;volatile
  3938  0029BE                     l84:
  3939  0029BE  AC9E               	btfss	3998,6,c	;volatile
  3940  0029C0  D7FE               	goto	l84
  3941                           
  3942                           ;easat2_util_inputs.c: 96: value = ADRES;
  3943  0029C2  CFC3 F029          	movff	4035,___lwtoft@c	;volatile
  3944  0029C6  CFC4 F02A          	movff	4036,___lwtoft@c+1	;volatile
  3945  0029CA  EC2D  F01A         	call	___lwtoft	;wreg free
  3946  0029CE  C029  F081         	movff	?___lwtoft,util_getBatteryCurrent@value
  3947  0029D2  C02A  F082         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  3948  0029D6  C02B  F083         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  3949                           
  3950                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  3951  0029DA  9C9E               	bcf	3998,6,c	;volatile
  3952                           
  3953                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  3954  0029DC  90C2               	bcf	4034,0,c	;volatile
  3955                           
  3956                           ;easat2_util_inputs.c: 106: batteryCurrent = (1.024 / 1023.0) * value;
  3957  0029DE  C081  F035         	movff	util_getBatteryCurrent@value,___ftmul@f1
  3958  0029E2  C082  F036         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  3959  0029E6  C083  F037         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  3960  0029EA  0E33               	movlw	51
  3961  0029EC  6E38               	movwf	___ftmul@f2,c
  3962  0029EE  0E83               	movlw	131
  3963  0029F0  6E39               	movwf	___ftmul@f2+1,c
  3964  0029F2  0E3A               	movlw	58
  3965  0029F4  6E3A               	movwf	___ftmul@f2+2,c
  3966  0029F6  EC54  F012         	call	___ftmul	;wreg free
  3967  0029FA  C035  F084         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  3968  0029FE  C036  F085         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  3969  002A02  C037  F086         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  3970                           
  3971                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  3972  002A06  C084  F035         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  3973  002A0A  C085  F036         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  3974  002A0E  C086  F037         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  3975  002A12  0E00               	movlw	0
  3976  002A14  6E38               	movwf	___ftmul@f2,c
  3977  002A16  0E80               	movlw	128
  3978  002A18  6E39               	movwf	___ftmul@f2+1,c
  3979  002A1A  0E3F               	movlw	63
  3980  002A1C  6E3A               	movwf	___ftmul@f2+2,c
  3981  002A1E  EC54  F012         	call	___ftmul	;wreg free
  3982  002A22  C035  F084         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  3983  002A26  C036  F085         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  3984  002A2A  C037  F086         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  3985                           
  3986                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  3987  002A2E  C084  F070         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  3988  002A32  C085  F071         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  3989  002A36  C086  F072         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  3990  002A3A  EC19  F011         	call	___fttol	;wreg free
  3991  002A3E  C070  F07F         	movff	?___fttol,?_util_getBatteryCurrent
  3992  002A42  C071  F080         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  3993  002A46  0012               	return	
  3994  002A48                     __end_of_util_getBatteryCurrent:
  3995                           	opt stack 0
  3996                           tblptru	equ	0xFF8
  3997                           wreg	equ	0xFE8
  3998                           postinc2	equ	0xFDE
  3999                           postdec2	equ	0xFDD
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function ___lwtoft *****************
  4005 ;; Defined at:
  4006 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  c               2   40[COMRAM] unsigned int 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  3   40[COMRAM] float 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4020 ;;      Params:         3       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0
  4023 ;;      Totals:         3       0       0       0       0       0       0
  4024 ;;Total ram usage:        3 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    3
  4027 ;; This function calls:
  4028 ;;		___ftpack
  4029 ;; This function is called by:
  4030 ;;		_util_getBatteryVoltage
  4031 ;;		_util_getSolarCurrent
  4032 ;;		_util_getBatteryCurrent
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text16
  4037  00345A                     __ptext16:
  4038                           	opt stack 0
  4039  00345A                     ___lwtoft:
  4040                           	opt stack 25
  4041                           
  4042                           ;incstack = 0
  4043  00345A  C029  F021         	movff	___lwtoft@c,___ftpack@arg
  4044  00345E  C02A  F022         	movff	___lwtoft@c+1,___ftpack@arg+1
  4045  003462  6A23               	clrf	___ftpack@arg+2,c
  4046  003464  0E8E               	movlw	142
  4047  003466  6E24               	movwf	___ftpack@exp,c
  4048  003468  0E00               	movlw	0
  4049  00346A  6E25               	movwf	___ftpack@sign,c
  4050  00346C  EC7D  F015         	call	___ftpack	;wreg free
  4051  003470  C021  F029         	movff	?___ftpack,?___lwtoft
  4052  003474  C022  F02A         	movff	?___ftpack+1,?___lwtoft+1
  4053  003478  C023  F02B         	movff	?___ftpack+2,?___lwtoft+2
  4054  00347C  0012               	return	
  4055  00347E                     __end_of___lwtoft:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           wreg	equ	0xFE8
  4059                           postinc2	equ	0xFDE
  4060                           postdec2	equ	0xFDD
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _util_beacon_transmission *****************
  4066 ;; Defined at:
  4067 ;;		line 21 in file "easat2_util_transmission.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  battery_volt    3   82[BANK0 ] float 
  4070 ;;  solar_curren    2   85[BANK0 ] int 
  4071 ;;  battery_curr    2   87[BANK0 ] int 
  4072 ;;  temperature     3   89[BANK0 ] float 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  i               2  192[BANK1 ] int 
  4075 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4076 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4086 ;;      Params:         0      10       0       0       0       0       0
  4087 ;;      Locals:         0       0     194       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0
  4089 ;;      Totals:         0      10     194       0       0       0       0
  4090 ;;Total ram usage:      204 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    7
  4093 ;; This function calls:
  4094 ;;		_memset
  4095 ;;		_sprintf
  4096 ;;		_strcat
  4097 ;;		_strcpy
  4098 ;;		_strlen
  4099 ;;		_util_transmit_letter
  4100 ;; This function is called by:
  4101 ;;		_main_loop
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text17
  4106  0026FC                     __ptext17:
  4107                           	opt stack 0
  4108  0026FC                     _util_beacon_transmission:
  4109                           	opt stack 22
  4110                           
  4111                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4112                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4113                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4114                           
  4115                           ;incstack = 0
  4116  0026FC  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4117  0026FE  6E21               	movwf	memset@p1,c
  4118  002700  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4119  002702  6E22               	movwf	memset@p1+1,c
  4120  002704  0E00               	movlw	0
  4121  002706  6E24               	movwf	memset@c+1,c
  4122  002708  0E00               	movlw	0
  4123  00270A  6E23               	movwf	memset@c,c
  4124  00270C  0E00               	movlw	0
  4125  00270E  6E26               	movwf	memset@n+1,c
  4126  002710  0E80               	movlw	128
  4127  002712  6E25               	movwf	memset@n,c
  4128  002714  ECF1  F019         	call	_memset	;wreg free
  4129                           
  4130                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4131  002718  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4132  00271A  6E21               	movwf	strcpy@to,c
  4133  00271C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4134  00271E  6E22               	movwf	strcpy@to+1,c
  4135  002720  0E9E               	movlw	low STR_1
  4136  002722  6E23               	movwf	strcpy@from,c
  4137  002724  0E7F               	movlw	high STR_1
  4138  002726  6E24               	movwf	strcpy@from+1,c
  4139  002728  ECAD  F019         	call	_strcpy	;wreg free
  4140                           
  4141                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4142  00272C  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4143  00272E  6E21               	movwf	memset@p1,c
  4144  002730  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4145  002732  6E22               	movwf	memset@p1+1,c
  4146  002734  0E00               	movlw	0
  4147  002736  6E24               	movwf	memset@c+1,c
  4148  002738  0E00               	movlw	0
  4149  00273A  6E23               	movwf	memset@c,c
  4150  00273C  0E00               	movlw	0
  4151  00273E  6E26               	movwf	memset@n+1,c
  4152  002740  0E40               	movlw	64
  4153  002742  6E25               	movwf	memset@n,c
  4154  002744  ECF1  F019         	call	_memset	;wreg free
  4155                           
  4156                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4157                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4158  002748  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4159  00274A  0100               	movlb	0	; () banked
  4160  00274C  6F85               	movwf	sprintf@sp& (0+255),b
  4161  00274E  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4162  002750  0100               	movlb	0	; () banked
  4163  002752  6F86               	movwf	(sprintf@sp+1)& (0+255),b
  4164  002754  0E6B               	movlw	low STR_2
  4165  002756  0100               	movlb	0	; () banked
  4166  002758  6F87               	movwf	sprintf@f& (0+255),b
  4167  00275A  0E7F               	movlw	high STR_2
  4168  00275C  0100               	movlb	0	; () banked
  4169  00275E  6F88               	movwf	(sprintf@f+1)& (0+255),b
  4170  002760  C0B9  F089         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4171  002764  C0BA  F08A         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4172  002768  C0BB  F08B         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4173  00276C  C0B2  F08C         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4174  002770  C0B3  F08D         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4175  002774  C0B4  F08E         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4176  002778  C0B5  F08F         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4177  00277C  C0B6  F090         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4178  002780  C0B7  F091         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4179  002784  C0B8  F092         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4180  002788  EC55  F000         	call	_sprintf	;wreg free
  4181                           
  4182                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4183  00278C  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4184  00278E  6E21               	movwf	strcat@to,c
  4185  002790  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4186  002792  6E22               	movwf	strcat@to+1,c
  4187  002794  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4188  002796  6E23               	movwf	strcat@from,c
  4189  002798  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4190  00279A  6E24               	movwf	strcat@from+1,c
  4191  00279C  ECDB  F018         	call	_strcat	;wreg free
  4192                           
  4193                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4194  0027A0  0E00               	movlw	0
  4195  0027A2  0101               	movlb	1	; () banked
  4196  0027A4  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4197  0027A6  0E00               	movlw	0
  4198  0027A8  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4199  0027AA  D00E               	goto	l4849
  4200  0027AC                     l4845:
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4204  0027AC  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4205  0027AE  0101               	movlb	1	; () banked
  4206  0027B0  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4207  0027B2  6ED9               	movwf	fsr2l,c
  4208  0027B4  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4209  0027B6  0101               	movlb	1	; () banked
  4210  0027B8  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4211  0027BA  6EDA               	movwf	fsr2h,c
  4212  0027BC  50DF               	movf	indf2,w,c
  4213  0027BE  ECC1  F00B         	call	_util_transmit_letter
  4214  0027C2  0101               	movlb	1	; () banked
  4215  0027C4  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4216  0027C6  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4217  0027C8                     l4849:
  4218                           
  4219                           ; BSR set to: 1
  4220  0027C8  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4221  0027CA  6E21               	movwf	strlen@s,c
  4222  0027CC  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4223  0027CE  6E22               	movwf	strlen@s+1,c
  4224  0027D0  EC44  F018         	call	_strlen	;wreg free
  4225  0027D4  5021               	movf	?_strlen,w,c
  4226  0027D6  0101               	movlb	1	; () banked
  4227  0027D8  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4228  0027DA  5022               	movf	?_strlen+1,w,c
  4229  0027DC  0101               	movlb	1	; () banked
  4230  0027DE  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4231  0027E0  B0D8               	btfsc	status,0,c
  4232  0027E2  0012               	return	
  4233  0027E4  D7E3               	goto	l4845
  4234  0027E6                     __end_of_util_beacon_transmission:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           wreg	equ	0xFE8
  4238                           indf2	equ	0xFDF
  4239                           postinc2	equ	0xFDE
  4240                           postdec2	equ	0xFDD
  4241                           fsr2h	equ	0xFDA
  4242                           fsr2l	equ	0xFD9
  4243                           status	equ	0xFD8
  4244                           
  4245 ;; *************** function _util_transmit_letter *****************
  4246 ;; Defined at:
  4247 ;;		line 52 in file "easat2_util_transmission.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  letter          1    wreg     unsigned char 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  letter          1   45[COMRAM] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4261 ;;      Params:         0       0       0       0       0       0       0
  4262 ;;      Locals:         1       0       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0
  4264 ;;      Totals:         1       0       0       0       0       0       0
  4265 ;;Total ram usage:        1 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    6
  4268 ;; This function calls:
  4269 ;;		_util_transmit_morse_sequence
  4270 ;;		_util_transmit_space_between_letters
  4271 ;;		_util_transmit_space_between_words
  4272 ;; This function is called by:
  4273 ;;		_util_beacon_transmission
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text18
  4278  001782                     __ptext18:
  4279                           	opt stack 0
  4280  001782                     _util_transmit_letter:
  4281                           	opt stack 22
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;incstack = 0
  4285                           ;util_transmit_letter@letter stored from wreg
  4286  001782  6E2E               	movwf	util_transmit_letter@letter,c
  4287                           
  4288                           ;easat2_util_transmission.c: 54: switch (letter) {
  4289  001784  D122               	goto	l3933
  4290  001786                     l3847:
  4291                           
  4292                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4293  001786  0EE8               	movlw	low (STR_19+2)
  4294  001788  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4295  00178A  0E7F               	movlw	high (STR_19+2)
  4296  00178C  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4297  00178E  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4298                           
  4299                           ;easat2_util_transmission.c: 61: break;
  4300  001792  D19A               	goto	l3935
  4301  001794                     l3849:
  4302                           
  4303                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4304  001794  0ED0               	movlw	low (STR_36+1)
  4305  001796  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4306  001798  0E7F               	movlw	high (STR_36+1)
  4307  00179A  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4308  00179C  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4309                           
  4310                           ;easat2_util_transmission.c: 64: break;
  4311  0017A0  D193               	goto	l3935
  4312  0017A2                     l3851:
  4313                           
  4314                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4315  0017A2  0EF5               	movlw	low STR_5
  4316  0017A4  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4317  0017A6  0E7F               	movlw	high STR_5
  4318  0017A8  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4319  0017AA  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4320                           
  4321                           ;easat2_util_transmission.c: 67: break;
  4322  0017AE  D18C               	goto	l3935
  4323  0017B0                     l3853:
  4324                           
  4325                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4326  0017B0  0ECB               	movlw	low (STR_37+2)
  4327  0017B2  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4328  0017B4  0E7F               	movlw	high (STR_37+2)
  4329  0017B6  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4330  0017B8  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4331                           
  4332                           ;easat2_util_transmission.c: 70: break;
  4333  0017BC  D185               	goto	l3935
  4334  0017BE                     l3855:
  4335                           
  4336                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4337  0017BE  0EC1               	movlw	low (STR_38+4)
  4338  0017C0  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4339  0017C2  0E7F               	movlw	high (STR_38+4)
  4340  0017C4  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4341  0017C6  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4342                           
  4343                           ;easat2_util_transmission.c: 73: break;
  4344  0017CA  D17E               	goto	l3935
  4345  0017CC                     l3857:
  4346                           
  4347                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4348  0017CC  0EC4               	movlw	low (STR_41+1)
  4349  0017CE  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4350  0017D0  0E7F               	movlw	high (STR_41+1)
  4351  0017D2  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4352  0017D4  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4353                           
  4354                           ;easat2_util_transmission.c: 76: break;
  4355  0017D8  D177               	goto	l3935
  4356  0017DA                     l3859:
  4357                           
  4358                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4359  0017DA  0EBF               	movlw	low (STR_38+2)
  4360  0017DC  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4361  0017DE  0E7F               	movlw	high (STR_38+2)
  4362  0017E0  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4363  0017E2  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4364                           
  4365                           ;easat2_util_transmission.c: 79: break;
  4366  0017E6  D170               	goto	l3935
  4367  0017E8                     l3861:
  4368                           
  4369                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4370  0017E8  0ED6               	movlw	low (STR_35+1)
  4371  0017EA  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4372  0017EC  0E7F               	movlw	high (STR_35+1)
  4373  0017EE  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4374  0017F0  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4375                           
  4376                           ;easat2_util_transmission.c: 82: break;
  4377  0017F4  D169               	goto	l3935
  4378  0017F6                     l3863:
  4379                           
  4380                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4381  0017F6  0ECC               	movlw	low (STR_37+3)
  4382  0017F8  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4383  0017FA  0E7F               	movlw	high (STR_37+3)
  4384  0017FC  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4385  0017FE  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4386                           
  4387                           ;easat2_util_transmission.c: 85: break;
  4388  001802  D162               	goto	l3935
  4389  001804                     l3865:
  4390                           
  4391                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4392  001804  0EB2               	movlw	low (STR_31+1)
  4393  001806  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4394  001808  0E7F               	movlw	high (STR_31+1)
  4395  00180A  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4396  00180C  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4397                           
  4398                           ;easat2_util_transmission.c: 88: break;
  4399  001810  D15B               	goto	l3935
  4400  001812                     l3867:
  4401                           
  4402                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4403  001812  0EE7               	movlw	low (STR_19+1)
  4404  001814  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4405  001816  0E7F               	movlw	high (STR_19+1)
  4406  001818  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4407  00181A  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4408                           
  4409                           ;easat2_util_transmission.c: 91: break;
  4410  00181E  D154               	goto	l3935
  4411  001820                     l3869:
  4412                           
  4413                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4414  001820  0EFA               	movlw	low STR_14
  4415  001822  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4416  001824  0E7F               	movlw	high STR_14
  4417  001826  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4418  001828  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4419                           
  4420                           ;easat2_util_transmission.c: 94: break;
  4421  00182C  D14D               	goto	l3935
  4422  00182E                     l3871:
  4423                           
  4424                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4425  00182E  0EA8               	movlw	low (STR_29+3)
  4426  001830  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4427  001832  0E7F               	movlw	high (STR_29+3)
  4428  001834  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4429  001836  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4430                           
  4431                           ;easat2_util_transmission.c: 97: break;
  4432  00183A  D146               	goto	l3935
  4433  00183C                     l3873:
  4434                           
  4435                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  4436  00183C  0EC0               	movlw	low (STR_38+3)
  4437  00183E  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4438  001840  0E7F               	movlw	high (STR_38+3)
  4439  001842  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4440  001844  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4441                           
  4442                           ;easat2_util_transmission.c: 100: break;
  4443  001848  D13F               	goto	l3935
  4444  00184A                     l3875:
  4445                           
  4446                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  4447  00184A  0EA7               	movlw	low (STR_29+2)
  4448  00184C  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4449  00184E  0E7F               	movlw	high (STR_29+2)
  4450  001850  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4451  001852  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4452                           
  4453                           ;easat2_util_transmission.c: 103: break;
  4454  001856  D138               	goto	l3935
  4455  001858                     l3877:
  4456                           
  4457                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  4458  001858  0EF0               	movlw	low STR_18
  4459  00185A  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4460  00185C  0E7F               	movlw	high STR_18
  4461  00185E  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4462  001860  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4463                           
  4464                           ;easat2_util_transmission.c: 106: break;
  4465  001864  D131               	goto	l3935
  4466  001866                     l3879:
  4467                           
  4468                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  4469  001866  0EE6               	movlw	low STR_19
  4470  001868  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4471  00186A  0E7F               	movlw	high STR_19
  4472  00186C  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4473  00186E  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4474                           
  4475                           ;easat2_util_transmission.c: 109: break;
  4476  001872  D12A               	goto	l3935
  4477  001874                     l3881:
  4478                           
  4479                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  4480  001874  0EF6               	movlw	low (STR_5+1)
  4481  001876  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4482  001878  0E7F               	movlw	high (STR_5+1)
  4483  00187A  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4484  00187C  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4485                           
  4486                           ;easat2_util_transmission.c: 112: break;
  4487  001880  D123               	goto	l3935
  4488  001882                     l3883:
  4489                           
  4490                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  4491  001882  0ED1               	movlw	low (STR_36+2)
  4492  001884  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4493  001886  0E7F               	movlw	high (STR_36+2)
  4494  001888  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4495  00188A  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4496                           
  4497                           ;easat2_util_transmission.c: 115: break;
  4498  00188E  D11C               	goto	l3935
  4499  001890                     l3885:
  4500                           
  4501                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  4502  001890  0EA9               	movlw	low (STR_29+4)
  4503  001892  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4504  001894  0E7F               	movlw	high (STR_29+4)
  4505  001896  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4506  001898  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4507                           
  4508                           ;easat2_util_transmission.c: 118: break;
  4509  00189C  D115               	goto	l3935
  4510  00189E                     l3887:
  4511                           
  4512                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  4513  00189E  0EEC               	movlw	low (STR_26+1)
  4514  0018A0  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4515  0018A2  0E7F               	movlw	high (STR_26+1)
  4516  0018A4  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4517  0018A6  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4518                           
  4519                           ;easat2_util_transmission.c: 121: break;
  4520  0018AA  D10E               	goto	l3935
  4521  0018AC                     l3889:
  4522                           
  4523                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  4524  0018AC  0E92               	movlw	low (STR_43+2)
  4525  0018AE  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4526  0018B0  0E7F               	movlw	high (STR_43+2)
  4527  0018B2  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4528  0018B4  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4529                           
  4530                           ;easat2_util_transmission.c: 124: break;
  4531  0018B8  D107               	goto	l3935
  4532  0018BA                     l3891:
  4533                           
  4534                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  4535  0018BA  0EE2               	movlw	low (STR_27+1)
  4536  0018BC  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4537  0018BE  0E7F               	movlw	high (STR_27+1)
  4538  0018C0  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4539  0018C2  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4540                           
  4541                           ;easat2_util_transmission.c: 127: break;
  4542  0018C6  D100               	goto	l3935
  4543  0018C8                     l3893:
  4544                           
  4545                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  4546  0018C8  0EEB               	movlw	low STR_26
  4547  0018CA  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4548  0018CC  0E7F               	movlw	high STR_26
  4549  0018CE  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4550  0018D0  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4551                           
  4552                           ;easat2_util_transmission.c: 130: break;
  4553  0018D4  D0F9               	goto	l3935
  4554  0018D6                     l3895:
  4555                           
  4556                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  4557  0018D6  0EE1               	movlw	low STR_27
  4558  0018D8  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4559  0018DA  0E7F               	movlw	high STR_27
  4560  0018DC  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4561  0018DE  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4562                           
  4563                           ;easat2_util_transmission.c: 133: break;
  4564  0018E2  D0F2               	goto	l3935
  4565  0018E4                     l3897:
  4566                           
  4567                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  4568  0018E4  0ECA               	movlw	low (STR_37+1)
  4569  0018E6  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4570  0018E8  0E7F               	movlw	high (STR_37+1)
  4571  0018EA  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4572  0018EC  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4573                           
  4574                           ;easat2_util_transmission.c: 136: break;
  4575  0018F0  D0EB               	goto	l3935
  4576  0018F2                     l3899:
  4577                           
  4578                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  4579  0018F2  0EA5               	movlw	low STR_29
  4580  0018F4  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4581  0018F6  0E7F               	movlw	high STR_29
  4582  0018F8  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4583  0018FA  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4584                           
  4585                           ;easat2_util_transmission.c: 139: break;
  4586  0018FE  D0E4               	goto	l3935
  4587  001900                     l3901:
  4588                           
  4589                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  4590  001900  0EAB               	movlw	low STR_30
  4591  001902  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4592  001904  0E7F               	movlw	high STR_30
  4593  001906  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4594  001908  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4595                           
  4596                           ;easat2_util_transmission.c: 142: break;
  4597  00190C  D0DD               	goto	l3935
  4598  00190E                     l3903:
  4599                           
  4600                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  4601  00190E  0EB1               	movlw	low STR_31
  4602  001910  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4603  001912  0E7F               	movlw	high STR_31
  4604  001914  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4605  001916  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4606                           
  4607                           ;easat2_util_transmission.c: 145: break;
  4608  00191A  D0D6               	goto	l3935
  4609  00191C                     l3905:
  4610                           
  4611                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  4612  00191C  0EB7               	movlw	low STR_32
  4613  00191E  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4614  001920  0E7F               	movlw	high STR_32
  4615  001922  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4616  001924  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4617                           
  4618                           ;easat2_util_transmission.c: 148: break;
  4619  001928  D0CF               	goto	l3935
  4620  00192A                     l3907:
  4621                           
  4622                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  4623  00192A  0E91               	movlw	low (STR_43+1)
  4624  00192C  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4625  00192E  0E7F               	movlw	high (STR_43+1)
  4626  001930  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4627  001932  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4628                           
  4629                           ;easat2_util_transmission.c: 151: break;
  4630  001936  D0C8               	goto	l3935
  4631  001938                     l3909:
  4632                           
  4633                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  4634  001938  0EDB               	movlw	low STR_34
  4635  00193A  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4636  00193C  0E7F               	movlw	high STR_34
  4637  00193E  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4638  001940  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4639                           
  4640                           ;easat2_util_transmission.c: 154: break;
  4641  001944  D0C1               	goto	l3935
  4642  001946                     l3911:
  4643                           
  4644                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  4645  001946  0ED5               	movlw	low STR_35
  4646  001948  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4647  00194A  0E7F               	movlw	high STR_35
  4648  00194C  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4649  00194E  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4650                           
  4651                           ;easat2_util_transmission.c: 157: break;
  4652  001952  D0BA               	goto	l3935
  4653  001954                     l3913:
  4654                           
  4655                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  4656  001954  0ECF               	movlw	low STR_36
  4657  001956  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4658  001958  0E7F               	movlw	high STR_36
  4659  00195A  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4660  00195C  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4661                           
  4662                           ;easat2_util_transmission.c: 160: break;
  4663  001960  D0B3               	goto	l3935
  4664  001962                     l3915:
  4665                           
  4666                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  4667  001962  0EC9               	movlw	low STR_37
  4668  001964  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4669  001966  0E7F               	movlw	high STR_37
  4670  001968  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4671  00196A  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4672                           
  4673                           ;easat2_util_transmission.c: 163: break;
  4674  00196E  D0AC               	goto	l3935
  4675  001970                     l3917:
  4676                           
  4677                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  4678  001970  0EBD               	movlw	low STR_38
  4679  001972  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4680  001974  0E7F               	movlw	high STR_38
  4681  001976  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4682  001978  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4683                           
  4684                           ;easat2_util_transmission.c: 166: break;
  4685  00197C  D0A5               	goto	l3935
  4686  00197E                     l3919:
  4687                           
  4688                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  4689  00197E  0E82               	movlw	low STR_39
  4690  001980  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4691  001982  0E7F               	movlw	high STR_39
  4692  001984  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4693  001986  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4694                           
  4695                           ;easat2_util_transmission.c: 169: break;
  4696  00198A  D09E               	goto	l3935
  4697  00198C                     l3921:
  4698                           
  4699                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  4700  00198C  0E97               	movlw	low STR_40
  4701  00198E  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4702  001990  0E7F               	movlw	high STR_40
  4703  001992  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4704  001994  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4705                           
  4706                           ;easat2_util_transmission.c: 172: break;
  4707  001998  D097               	goto	l3935
  4708  00199A                     l3923:
  4709                           
  4710                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  4711  00199A  0EC3               	movlw	low STR_41
  4712  00199C  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4713  00199E  0E7F               	movlw	high STR_41
  4714  0019A0  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4715  0019A2  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4716                           
  4717                           ;easat2_util_transmission.c: 175: break;
  4718  0019A6  D090               	goto	l3935
  4719  0019A8                     l3925:
  4720                           
  4721                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  4722  0019A8  0E89               	movlw	low STR_42
  4723  0019AA  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4724  0019AC  0E7F               	movlw	high STR_42
  4725  0019AE  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4726  0019B0  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4727                           
  4728                           ;easat2_util_transmission.c: 178: break;
  4729  0019B4  D089               	goto	l3935
  4730  0019B6                     l3927:
  4731                           
  4732                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  4733  0019B6  0E90               	movlw	low STR_43
  4734  0019B8  6E28               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4735  0019BA  0E7F               	movlw	high STR_43
  4736  0019BC  6E29               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4737  0019BE  ECE8  F017         	call	_util_transmit_morse_sequence	;wreg free
  4738                           
  4739                           ;easat2_util_transmission.c: 181: break;
  4740  0019C2  D082               	goto	l3935
  4741  0019C4                     l3929:
  4742                           
  4743                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  4744  0019C4  EC78  F01A         	call	_util_transmit_space_between_words	;wreg free
  4745                           
  4746                           ;easat2_util_transmission.c: 188: }
  4747                           
  4748                           ;easat2_util_transmission.c: 186: break;
  4749                           
  4750                           ;easat2_util_transmission.c: 185: default:
  4751                           
  4752                           ;easat2_util_transmission.c: 184: break;
  4753  0019C8  D07F               	goto	l3935
  4754  0019CA                     l3933:
  4755  0019CA  502E               	movf	util_transmit_letter@letter,w,c
  4756                           
  4757                           ; Switch size 1, requested type "space"
  4758                           ; Number of cases is 42, Range of values is 32 to 90
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte          127    64 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763  0019CC  0A20               	xorlw	32	; case 32
  4764  0019CE  B4D8               	btfsc	status,2,c
  4765  0019D0  D7F9               	goto	l3929
  4766  0019D2  0A0C               	xorlw	12	; case 44
  4767  0019D4  B4D8               	btfsc	status,2,c
  4768  0019D6  D7D3               	goto	l3919
  4769  0019D8  0A01               	xorlw	1	; case 45
  4770  0019DA  B4D8               	btfsc	status,2,c
  4771  0019DC  D7EC               	goto	l3927
  4772  0019DE  0A03               	xorlw	3	; case 46
  4773  0019E0  B4D8               	btfsc	status,2,c
  4774  0019E2  D7E2               	goto	l3925
  4775  0019E4  0A01               	xorlw	1	; case 47
  4776  0019E6  B4D8               	btfsc	status,2,c
  4777  0019E8  D7D8               	goto	l3923
  4778  0019EA  0A1F               	xorlw	31	; case 48
  4779  0019EC  B4D8               	btfsc	status,2,c
  4780  0019EE  D781               	goto	l3899
  4781  0019F0  0A01               	xorlw	1	; case 49
  4782  0019F2  B4D8               	btfsc	status,2,c
  4783  0019F4  D785               	goto	l3901
  4784  0019F6  0A03               	xorlw	3	; case 50
  4785  0019F8  B4D8               	btfsc	status,2,c
  4786  0019FA  D789               	goto	l3903
  4787  0019FC  0A01               	xorlw	1	; case 51
  4788  0019FE  B4D8               	btfsc	status,2,c
  4789  001A00  D78D               	goto	l3905
  4790  001A02  0A07               	xorlw	7	; case 52
  4791  001A04  B4D8               	btfsc	status,2,c
  4792  001A06  D791               	goto	l3907
  4793  001A08  0A01               	xorlw	1	; case 53
  4794  001A0A  B4D8               	btfsc	status,2,c
  4795  001A0C  D795               	goto	l3909
  4796  001A0E  0A03               	xorlw	3	; case 54
  4797  001A10  B4D8               	btfsc	status,2,c
  4798  001A12  D799               	goto	l3911
  4799  001A14  0A01               	xorlw	1	; case 55
  4800  001A16  B4D8               	btfsc	status,2,c
  4801  001A18  D79D               	goto	l3913
  4802  001A1A  0A0F               	xorlw	15	; case 56
  4803  001A1C  B4D8               	btfsc	status,2,c
  4804  001A1E  D7A1               	goto	l3915
  4805  001A20  0A01               	xorlw	1	; case 57
  4806  001A22  B4D8               	btfsc	status,2,c
  4807  001A24  D7A5               	goto	l3917
  4808  001A26  0A06               	xorlw	6	; case 63
  4809  001A28  B4D8               	btfsc	status,2,c
  4810  001A2A  D7B0               	goto	l3921
  4811  001A2C  0A7E               	xorlw	126	; case 65
  4812  001A2E  B4D8               	btfsc	status,2,c
  4813  001A30  D6AA               	goto	l3847
  4814  001A32  0A03               	xorlw	3	; case 66
  4815  001A34  B4D8               	btfsc	status,2,c
  4816  001A36  D6AE               	goto	l3849
  4817  001A38  0A01               	xorlw	1	; case 67
  4818  001A3A  B4D8               	btfsc	status,2,c
  4819  001A3C  D6B2               	goto	l3851
  4820  001A3E  0A07               	xorlw	7	; case 68
  4821  001A40  B4D8               	btfsc	status,2,c
  4822  001A42  D6B6               	goto	l3853
  4823  001A44  0A01               	xorlw	1	; case 69
  4824  001A46  B4D8               	btfsc	status,2,c
  4825  001A48  D6BA               	goto	l3855
  4826  001A4A  0A03               	xorlw	3	; case 70
  4827  001A4C  B4D8               	btfsc	status,2,c
  4828  001A4E  D6BE               	goto	l3857
  4829  001A50  0A01               	xorlw	1	; case 71
  4830  001A52  B4D8               	btfsc	status,2,c
  4831  001A54  D6C2               	goto	l3859
  4832  001A56  0A0F               	xorlw	15	; case 72
  4833  001A58  B4D8               	btfsc	status,2,c
  4834  001A5A  D6C6               	goto	l3861
  4835  001A5C  0A01               	xorlw	1	; case 73
  4836  001A5E  B4D8               	btfsc	status,2,c
  4837  001A60  D6CA               	goto	l3863
  4838  001A62  0A03               	xorlw	3	; case 74
  4839  001A64  B4D8               	btfsc	status,2,c
  4840  001A66  D6CE               	goto	l3865
  4841  001A68  0A01               	xorlw	1	; case 75
  4842  001A6A  B4D8               	btfsc	status,2,c
  4843  001A6C  D6D2               	goto	l3867
  4844  001A6E  0A07               	xorlw	7	; case 76
  4845  001A70  B4D8               	btfsc	status,2,c
  4846  001A72  D6D6               	goto	l3869
  4847  001A74  0A01               	xorlw	1	; case 77
  4848  001A76  B4D8               	btfsc	status,2,c
  4849  001A78  D6DA               	goto	l3871
  4850  001A7A  0A03               	xorlw	3	; case 78
  4851  001A7C  B4D8               	btfsc	status,2,c
  4852  001A7E  D6DE               	goto	l3873
  4853  001A80  0A01               	xorlw	1	; case 79
  4854  001A82  B4D8               	btfsc	status,2,c
  4855  001A84  D6E2               	goto	l3875
  4856  001A86  0A1F               	xorlw	31	; case 80
  4857  001A88  B4D8               	btfsc	status,2,c
  4858  001A8A  D6E6               	goto	l3877
  4859  001A8C  0A01               	xorlw	1	; case 81
  4860  001A8E  B4D8               	btfsc	status,2,c
  4861  001A90  D6EA               	goto	l3879
  4862  001A92  0A03               	xorlw	3	; case 82
  4863  001A94  B4D8               	btfsc	status,2,c
  4864  001A96  D6EE               	goto	l3881
  4865  001A98  0A01               	xorlw	1	; case 83
  4866  001A9A  B4D8               	btfsc	status,2,c
  4867  001A9C  D6F2               	goto	l3883
  4868  001A9E  0A07               	xorlw	7	; case 84
  4869  001AA0  B4D8               	btfsc	status,2,c
  4870  001AA2  D6F6               	goto	l3885
  4871  001AA4  0A01               	xorlw	1	; case 85
  4872  001AA6  B4D8               	btfsc	status,2,c
  4873  001AA8  D6FA               	goto	l3887
  4874  001AAA  0A03               	xorlw	3	; case 86
  4875  001AAC  B4D8               	btfsc	status,2,c
  4876  001AAE  D6FE               	goto	l3889
  4877  001AB0  0A01               	xorlw	1	; case 87
  4878  001AB2  B4D8               	btfsc	status,2,c
  4879  001AB4  D702               	goto	l3891
  4880  001AB6  0A0F               	xorlw	15	; case 88
  4881  001AB8  B4D8               	btfsc	status,2,c
  4882  001ABA  D706               	goto	l3893
  4883  001ABC  0A01               	xorlw	1	; case 89
  4884  001ABE  B4D8               	btfsc	status,2,c
  4885  001AC0  D70A               	goto	l3895
  4886  001AC2  0A03               	xorlw	3	; case 90
  4887  001AC4  B4D8               	btfsc	status,2,c
  4888  001AC6  D70E               	goto	l3897
  4889  001AC8                     l3935:
  4890                           
  4891                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  4892  001AC8  EC7F  F01A         	call	_util_transmit_space_between_letters	;wreg free
  4893  001ACC  0012               	return		;funcret
  4894  001ACE                     __end_of_util_transmit_letter:
  4895                           	opt stack 0
  4896                           tblptru	equ	0xFF8
  4897                           wreg	equ	0xFE8
  4898                           indf2	equ	0xFDF
  4899                           postinc2	equ	0xFDE
  4900                           postdec2	equ	0xFDD
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905 ;; *************** function _util_transmit_space_between_words *****************
  4906 ;; Defined at:
  4907 ;;		line 304 in file "easat2_util_transmission.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4921 ;;      Params:         0       0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		_util_waits_delay_ms
  4930 ;; This function is called by:
  4931 ;;		_util_transmit_letter
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text19
  4936  0034F0                     __ptext19:
  4937                           	opt stack 0
  4938  0034F0                     _util_transmit_space_between_words:
  4939                           	opt stack 24
  4940                           
  4941                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  4942                           
  4943                           ;incstack = 0
  4944  0034F0  0E02               	movlw	2
  4945  0034F2  6E22               	movwf	util_waits_delay_ms@ms+1,c
  4946  0034F4  0E0D               	movlw	13
  4947  0034F6  6E21               	movwf	util_waits_delay_ms@ms,c
  4948  0034F8  ECC5  F019         	call	_util_waits_delay_ms	;wreg free
  4949  0034FC  0012               	return		;funcret
  4950  0034FE                     __end_of_util_transmit_space_between_words:
  4951                           	opt stack 0
  4952                           tblptru	equ	0xFF8
  4953                           wreg	equ	0xFE8
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _util_transmit_space_between_letters *****************
  4962 ;; Defined at:
  4963 ;;		line 297 in file "easat2_util_transmission.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4977 ;;      Params:         0       0       0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    3
  4984 ;; This function calls:
  4985 ;;		_util_waits_delay_ms
  4986 ;; This function is called by:
  4987 ;;		_util_transmit_letter
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text20
  4992  0034FE                     __ptext20:
  4993                           	opt stack 0
  4994  0034FE                     _util_transmit_space_between_letters:
  4995                           	opt stack 24
  4996                           
  4997                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  4998                           
  4999                           ;incstack = 0
  5000  0034FE  0E00               	movlw	0
  5001  003500  6E22               	movwf	util_waits_delay_ms@ms+1,c
  5002  003502  0EE1               	movlw	225
  5003  003504  6E21               	movwf	util_waits_delay_ms@ms,c
  5004  003506  ECC5  F019         	call	_util_waits_delay_ms	;wreg free
  5005  00350A  0012               	return		;funcret
  5006  00350C                     __end_of_util_transmit_space_between_letters:
  5007                           	opt stack 0
  5008                           tblptru	equ	0xFF8
  5009                           wreg	equ	0xFE8
  5010                           indf2	equ	0xFDF
  5011                           postinc2	equ	0xFDE
  5012                           postdec2	equ	0xFDD
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _util_transmit_morse_sequence *****************
  5018 ;; Defined at:
  5019 ;;		line 201 in file "easat2_util_transmission.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  morse_sequen    2   39[COMRAM] PTR unsigned char 
  5022 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5023 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5024 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5025 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5026 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5027 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5028 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5029 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5030 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5031 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5032 ;;		 -> STR_3(3), 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  i               2   43[COMRAM] int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5044 ;;      Params:         2       0       0       0       0       0       0
  5045 ;;      Locals:         2       0       0       0       0       0       0
  5046 ;;      Temps:          2       0       0       0       0       0       0
  5047 ;;      Totals:         6       0       0       0       0       0       0
  5048 ;;Total ram usage:        6 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    5
  5051 ;; This function calls:
  5052 ;;		_strlen
  5053 ;;		_util_transmit_dash
  5054 ;;		_util_transmit_dot
  5055 ;;		_util_transmit_space_between_dots_dashes
  5056 ;; This function is called by:
  5057 ;;		_util_transmit_letter
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text21
  5062  002FD0                     __ptext21:
  5063                           	opt stack 0
  5064  002FD0                     _util_transmit_morse_sequence:
  5065                           	opt stack 22
  5066                           
  5067                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5068                           
  5069                           ;incstack = 0
  5070  002FD0  0E00               	movlw	0
  5071  002FD2  6E2D               	movwf	util_transmit_morse_sequence@i+1,c
  5072  002FD4  0E00               	movlw	0
  5073  002FD6  6E2C               	movwf	util_transmit_morse_sequence@i,c
  5074  002FD8  D01C               	goto	l3121
  5075  002FDA                     l3109:
  5076                           
  5077                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5078  002FDA  EC18  F019         	call	_util_transmit_dot	;wreg free
  5079                           
  5080                           ;easat2_util_transmission.c: 211: break;
  5081  002FDE  D015               	goto	l3117
  5082  002FE0                     l3111:
  5083                           
  5084                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5085  002FE0  EC32  F019         	call	_util_transmit_dash	;wreg free
  5086                           
  5087                           ;easat2_util_transmission.c: 217: }
  5088                           
  5089                           ;easat2_util_transmission.c: 216: break;
  5090                           
  5091                           ;easat2_util_transmission.c: 215: default:
  5092                           
  5093                           ;easat2_util_transmission.c: 214: break;
  5094  002FE4  D012               	goto	l3117
  5095  002FE6                     l3115:
  5096  002FE6  502C               	movf	util_transmit_morse_sequence@i,w,c
  5097  002FE8  2428               	addwf	util_transmit_morse_sequence@morse_sequence,w,c
  5098  002FEA  6E2A               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5099  002FEC  502D               	movf	util_transmit_morse_sequence@i+1,w,c
  5100  002FEE  2029               	addwfc	util_transmit_morse_sequence@morse_sequence+1,w,c
  5101  002FF0  6E2B               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5102  002FF2  C02A  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5103  002FF6  C02B  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5104  002FFA                     	if	0	;tblptru may be non-zero
  5105  002FFA                     	endif
  5106  002FFA                     	if	0	;tblptru may be non-zero
  5107  002FFA                     	endif
  5108  002FFA  0008               	tblrd		*
  5109  002FFC  50F5               	movf	tablat,w,c
  5110                           
  5111                           ; Switch size 1, requested type "space"
  5112                           ; Number of cases is 2, Range of values is 45 to 46
  5113                           ; switch strategies available:
  5114                           ; Name         Instructions Cycles
  5115                           ; simple_byte            7     4 (average)
  5116                           ;	Chosen strategy is simple_byte
  5117  002FFE  0A2D               	xorlw	45	; case 45
  5118  003000  B4D8               	btfsc	status,2,c
  5119  003002  D7EE               	goto	l3111
  5120  003004  0A03               	xorlw	3	; case 46
  5121  003006  B4D8               	btfsc	status,2,c
  5122  003008  D7E8               	goto	l3109
  5123  00300A                     l3117:
  5124                           
  5125                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5126  00300A  EC86  F01A         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5127  00300E  4A2C               	infsnz	util_transmit_morse_sequence@i,f,c
  5128  003010  2A2D               	incf	util_transmit_morse_sequence@i+1,f,c
  5129  003012                     l3121:
  5130  003012  C028  F021         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5131  003016  C029  F022         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5132  00301A  EC44  F018         	call	_strlen	;wreg free
  5133  00301E  5021               	movf	?_strlen,w,c
  5134  003020  5C2C               	subwf	util_transmit_morse_sequence@i,w,c
  5135  003022  5022               	movf	?_strlen+1,w,c
  5136  003024  582D               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5137  003026  B0D8               	btfsc	status,0,c
  5138  003028  0012               	return	
  5139  00302A  D7DD               	goto	l3115
  5140  00302C                     __end_of_util_transmit_morse_sequence:
  5141                           	opt stack 0
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           wreg	equ	0xFE8
  5147                           indf2	equ	0xFDF
  5148                           postinc2	equ	0xFDE
  5149                           postdec2	equ	0xFDD
  5150                           fsr2h	equ	0xFDA
  5151                           fsr2l	equ	0xFD9
  5152                           status	equ	0xFD8
  5153                           
  5154 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5155 ;; Defined at:
  5156 ;;		line 289 in file "easat2_util_transmission.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5170 ;;      Params:         0       0       0       0       0       0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0
  5173 ;;      Totals:         0       0       0       0       0       0       0
  5174 ;;Total ram usage:        0 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    3
  5177 ;; This function calls:
  5178 ;;		_util_waits_delay_ms
  5179 ;; This function is called by:
  5180 ;;		_util_transmit_morse_sequence
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text22
  5185  00350C                     __ptext22:
  5186                           	opt stack 0
  5187  00350C                     _util_transmit_space_between_dots_dashes:
  5188                           	opt stack 23
  5189                           
  5190                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5191                           
  5192                           ;incstack = 0
  5193  00350C  0E00               	movlw	0
  5194  00350E  6E22               	movwf	util_waits_delay_ms@ms+1,c
  5195  003510  0E4B               	movlw	75
  5196  003512  6E21               	movwf	util_waits_delay_ms@ms,c
  5197  003514  ECC5  F019         	call	_util_waits_delay_ms	;wreg free
  5198  003518  0012               	return		;funcret
  5199  00351A                     __end_of_util_transmit_space_between_dots_dashes:
  5200                           	opt stack 0
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           wreg	equ	0xFE8
  5206                           indf2	equ	0xFDF
  5207                           postinc2	equ	0xFDE
  5208                           postdec2	equ	0xFDD
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _util_transmit_dot *****************
  5214 ;; Defined at:
  5215 ;;		line 231 in file "easat2_util_transmission.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  i               2   37[COMRAM] int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5229 ;;      Params:         0       0       0       0       0       0       0
  5230 ;;      Locals:         2       0       0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0
  5232 ;;      Totals:         2       0       0       0       0       0       0
  5233 ;;Total ram usage:        2 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    4
  5236 ;; This function calls:
  5237 ;;		_util_transmit_buzzer_1ms_cycle
  5238 ;;		_util_waits_delay_ms
  5239 ;; This function is called by:
  5240 ;;		_util_transmit_morse_sequence
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text23
  5245  003230                     __ptext23:
  5246                           	opt stack 0
  5247  003230                     _util_transmit_dot:
  5248                           	opt stack 22
  5249                           
  5250                           ;easat2_util_transmission.c: 235: PORTDbits.RD1 = 1;
  5251                           
  5252                           ;incstack = 0
  5253  003230  8283               	bsf	3971,1,c	;volatile
  5254                           
  5255                           ;easat2_util_transmission.c: 236: PORTDbits.RD3 = 1;
  5256  003232  8683               	bsf	3971,3,c	;volatile
  5257                           
  5258                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5259  003234  0E00               	movlw	0
  5260  003236  6E27               	movwf	util_transmit_dot@i+1,c
  5261  003238  0E00               	movlw	0
  5262  00323A  6E26               	movwf	util_transmit_dot@i,c
  5263  00323C  BE27               	btfsc	util_transmit_dot@i+1,7,c
  5264  00323E  D006               	goto	l2827
  5265  003240  5027               	movf	util_transmit_dot@i+1,w,c
  5266  003242  E10D               	bnz	l276
  5267  003244  0E4B               	movlw	75
  5268  003246  5C26               	subwf	util_transmit_dot@i,w,c
  5269  003248  B0D8               	btfsc	status,0,c
  5270  00324A  D009               	goto	l276
  5271  00324C                     l2827:
  5272                           
  5273                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5274  00324C  EC51  F01A         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5275                           
  5276                           ;easat2_util_transmission.c: 246: else
  5277                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5278  003250  4A26               	infsnz	util_transmit_dot@i,f,c
  5279  003252  2A27               	incf	util_transmit_dot@i+1,f,c
  5280  003254  BE27               	btfsc	util_transmit_dot@i+1,7,c
  5281  003256  D7FA               	goto	l2827
  5282  003258  5027               	movf	util_transmit_dot@i+1,w,c
  5283  00325A  E101               	bnz	u2210
  5284  00325C  D7F3               	goto	L2
  5285  00325E                     u2210:
  5286  00325E                     l276:
  5287                           
  5288                           ;easat2_util_transmission.c: 249: }
  5289                           ;easat2_util_transmission.c: 251: PORTDbits.RD1 = 0;
  5290  00325E  9283               	bcf	3971,1,c	;volatile
  5291                           
  5292                           ;easat2_util_transmission.c: 252: PORTDbits.RD3 = 0;
  5293  003260  9683               	bcf	3971,3,c	;volatile
  5294  003262  0012               	return		;funcret
  5295  003264                     __end_of_util_transmit_dot:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           wreg	equ	0xFE8
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _util_transmit_dash *****************
  5310 ;; Defined at:
  5311 ;;		line 262 in file "easat2_util_transmission.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  i               2   37[COMRAM] int 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5325 ;;      Params:         0       0       0       0       0       0       0
  5326 ;;      Locals:         2       0       0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0
  5328 ;;      Totals:         2       0       0       0       0       0       0
  5329 ;;Total ram usage:        2 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    4
  5332 ;; This function calls:
  5333 ;;		_util_transmit_buzzer_1ms_cycle
  5334 ;;		_util_waits_delay_ms
  5335 ;; This function is called by:
  5336 ;;		_util_transmit_morse_sequence
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text24
  5341  003264                     __ptext24:
  5342                           	opt stack 0
  5343  003264                     _util_transmit_dash:
  5344                           	opt stack 22
  5345                           
  5346                           ;easat2_util_transmission.c: 266: PORTDbits.RD1 = 1;
  5347                           
  5348                           ;incstack = 0
  5349  003264  8283               	bsf	3971,1,c	;volatile
  5350                           
  5351                           ;easat2_util_transmission.c: 267: PORTDbits.RD3 = 1;
  5352  003266  8683               	bsf	3971,3,c	;volatile
  5353                           
  5354                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  5355  003268  0E00               	movlw	0
  5356  00326A  6E27               	movwf	util_transmit_dash@i+1,c
  5357  00326C  0E00               	movlw	0
  5358  00326E  6E26               	movwf	util_transmit_dash@i,c
  5359  003270  BE27               	btfsc	util_transmit_dash@i+1,7,c
  5360  003272  D006               	goto	l2843
  5361  003274  5027               	movf	util_transmit_dash@i+1,w,c
  5362  003276  E10D               	bnz	l283
  5363  003278  0EE1               	movlw	225
  5364  00327A  5C26               	subwf	util_transmit_dash@i,w,c
  5365  00327C  B0D8               	btfsc	status,0,c
  5366  00327E  D009               	goto	l283
  5367  003280                     l2843:
  5368                           
  5369                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  5370  003280  EC51  F01A         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5371                           
  5372                           ;easat2_util_transmission.c: 277: else
  5373                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  5374  003284  4A26               	infsnz	util_transmit_dash@i,f,c
  5375  003286  2A27               	incf	util_transmit_dash@i+1,f,c
  5376  003288  BE27               	btfsc	util_transmit_dash@i+1,7,c
  5377  00328A  D7FA               	goto	l2843
  5378  00328C  5027               	movf	util_transmit_dash@i+1,w,c
  5379  00328E  E101               	bnz	u2230
  5380  003290  D7F3               	goto	L3
  5381  003292                     u2230:
  5382  003292                     l283:
  5383                           
  5384                           ;easat2_util_transmission.c: 280: }
  5385                           ;easat2_util_transmission.c: 282: PORTDbits.RD1 = 0;
  5386  003292  9283               	bcf	3971,1,c	;volatile
  5387                           
  5388                           ;easat2_util_transmission.c: 283: PORTDbits.RD3 = 0;
  5389  003294  9683               	bcf	3971,3,c	;volatile
  5390  003296  0012               	return		;funcret
  5391  003298                     __end_of_util_transmit_dash:
  5392                           	opt stack 0
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           wreg	equ	0xFE8
  5398                           indf2	equ	0xFDF
  5399                           postinc2	equ	0xFDE
  5400                           postdec2	equ	0xFDD
  5401                           fsr2h	equ	0xFDA
  5402                           fsr2l	equ	0xFD9
  5403                           status	equ	0xFD8
  5404                           
  5405 ;; *************** function _util_waits_delay_ms *****************
  5406 ;; Defined at:
  5407 ;;		line 40 in file "easat2_util_waits.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  ms              2   32[COMRAM] int 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  i               2   35[COMRAM] int 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5421 ;;      Params:         2       0       0       0       0       0       0
  5422 ;;      Locals:         2       0       0       0       0       0       0
  5423 ;;      Temps:          1       0       0       0       0       0       0
  5424 ;;      Totals:         5       0       0       0       0       0       0
  5425 ;;Total ram usage:        5 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    2
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_util_transmit_dot
  5432 ;;		_util_transmit_dash
  5433 ;;		_util_transmit_space_between_dots_dashes
  5434 ;;		_util_transmit_space_between_letters
  5435 ;;		_util_transmit_space_between_words
  5436 ;;		_util_waits_delay_secs
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text25
  5441  00338A                     __ptext25:
  5442                           	opt stack 0
  5443  00338A                     _util_waits_delay_ms:
  5444                           	opt stack 25
  5445                           
  5446                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  5447                           
  5448                           ;incstack = 0
  5449  00338A  0E00               	movlw	0
  5450  00338C  6E25               	movwf	util_waits_delay_ms@i+1,c
  5451  00338E  0E00               	movlw	0
  5452  003390  6E24               	movwf	util_waits_delay_ms@i,c
  5453  003392  D006               	goto	l329
  5454  003394                     l2769:
  5455                           
  5456                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  5457  003394  0EA6               	movlw	166
  5458  003396                     u5057:
  5459  003396  2EE8               	decfsz	wreg,f,c
  5460  003398  D7FE               	bra	u5057
  5461  00339A  D000               	nop2	
  5462  00339C  4A24               	infsnz	util_waits_delay_ms@i,f,c
  5463  00339E  2A25               	incf	util_waits_delay_ms@i+1,f,c
  5464  0033A0                     l329:
  5465  0033A0  5021               	movf	util_waits_delay_ms@ms,w,c
  5466  0033A2  5C24               	subwf	util_waits_delay_ms@i,w,c
  5467  0033A4  5025               	movf	util_waits_delay_ms@i+1,w,c
  5468  0033A6  0A80               	xorlw	128
  5469  0033A8  6E23               	movwf	??_util_waits_delay_ms& (0+255),c
  5470  0033AA  5022               	movf	util_waits_delay_ms@ms+1,w,c
  5471  0033AC  0A80               	xorlw	128
  5472  0033AE  5823               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  5473  0033B0  B0D8               	btfsc	status,0,c
  5474  0033B2  0012               	return	
  5475  0033B4  D7EF               	goto	l2769
  5476  0033B6                     __end_of_util_waits_delay_ms:
  5477                           	opt stack 0
  5478                           tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           wreg	equ	0xFE8
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  5491 ;; Defined at:
  5492 ;;		line 310 in file "easat2_util_transmission.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5506 ;;      Params:         0       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    3
  5513 ;; This function calls:
  5514 ;;		_util_waits_delay_hundred_us
  5515 ;; This function is called by:
  5516 ;;		_util_transmit_dot
  5517 ;;		_util_transmit_dash
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text26
  5522  0034A2                     __ptext26:
  5523                           	opt stack 0
  5524  0034A2                     _util_transmit_buzzer_1ms_cycle:
  5525                           	opt stack 22
  5526                           
  5527                           ;easat2_util_transmission.c: 312: PORTDbits.RD2 = 1;
  5528                           
  5529                           ;incstack = 0
  5530  0034A2  8483               	bsf	3971,2,c	;volatile
  5531                           
  5532                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  5533  0034A4  0E00               	movlw	0
  5534  0034A6  6E22               	movwf	util_waits_delay_hundred_us@hun_us+1,c
  5535  0034A8  0E05               	movlw	5
  5536  0034AA  6E21               	movwf	util_waits_delay_hundred_us@hun_us,c
  5537  0034AC  ECDB  F019         	call	_util_waits_delay_hundred_us	;wreg free
  5538                           
  5539                           ;easat2_util_transmission.c: 314: PORTDbits.RD2 = 0;
  5540  0034B0  9483               	bcf	3971,2,c	;volatile
  5541                           
  5542                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  5543  0034B2  0E00               	movlw	0
  5544  0034B4  6E22               	movwf	util_waits_delay_hundred_us@hun_us+1,c
  5545  0034B6  0E05               	movlw	5
  5546  0034B8  6E21               	movwf	util_waits_delay_hundred_us@hun_us,c
  5547  0034BA  ECDB  F019         	call	_util_waits_delay_hundred_us	;wreg free
  5548  0034BE  0012               	return		;funcret
  5549  0034C0                     __end_of_util_transmit_buzzer_1ms_cycle:
  5550                           	opt stack 0
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           wreg	equ	0xFE8
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _util_waits_delay_hundred_us *****************
  5564 ;; Defined at:
  5565 ;;		line 47 in file "easat2_util_waits.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  hun_us          2   32[COMRAM] int 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  i               2   35[COMRAM] int 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5579 ;;      Params:         2       0       0       0       0       0       0
  5580 ;;      Locals:         2       0       0       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0       0       0
  5582 ;;      Totals:         5       0       0       0       0       0       0
  5583 ;;Total ram usage:        5 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    2
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_util_transmit_buzzer_1ms_cycle
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text27
  5594  0033B6                     __ptext27:
  5595                           	opt stack 0
  5596  0033B6                     _util_waits_delay_hundred_us:
  5597                           	opt stack 22
  5598                           
  5599                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  5600                           
  5601                           ;incstack = 0
  5602  0033B6  0E00               	movlw	0
  5603  0033B8  6E25               	movwf	util_waits_delay_hundred_us@i+1,c
  5604  0033BA  0E00               	movlw	0
  5605  0033BC  6E24               	movwf	util_waits_delay_hundred_us@i,c
  5606  0033BE  D006               	goto	l335
  5607  0033C0                     l2757:
  5608                           
  5609                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  5610  0033C0  0E10               	movlw	16
  5611  0033C2                     u5067:
  5612  0033C2  2EE8               	decfsz	wreg,f,c
  5613  0033C4  D7FE               	bra	u5067
  5614  0033C6  D000               	nop2	
  5615  0033C8  4A24               	infsnz	util_waits_delay_hundred_us@i,f,c
  5616  0033CA  2A25               	incf	util_waits_delay_hundred_us@i+1,f,c
  5617  0033CC                     l335:
  5618  0033CC  5021               	movf	util_waits_delay_hundred_us@hun_us,w,c
  5619  0033CE  5C24               	subwf	util_waits_delay_hundred_us@i,w,c
  5620  0033D0  5025               	movf	util_waits_delay_hundred_us@i+1,w,c
  5621  0033D2  0A80               	xorlw	128
  5622  0033D4  6E23               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  5623  0033D6  5022               	movf	util_waits_delay_hundred_us@hun_us+1,w,c
  5624  0033D8  0A80               	xorlw	128
  5625  0033DA  5823               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  5626  0033DC  B0D8               	btfsc	status,0,c
  5627  0033DE  0012               	return	
  5628  0033E0  D7EF               	goto	l2757
  5629  0033E2                     __end_of_util_waits_delay_hundred_us:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           wreg	equ	0xFE8
  5636                           indf2	equ	0xFDF
  5637                           postinc2	equ	0xFDE
  5638                           postdec2	equ	0xFDD
  5639                           fsr2h	equ	0xFDA
  5640                           fsr2l	equ	0xFD9
  5641                           status	equ	0xFD8
  5642                           
  5643 ;; *************** function _strlen *****************
  5644 ;; Defined at:
  5645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  s               2   32[COMRAM] PTR const unsigned char 
  5648 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5649 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5650 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5651 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5652 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5653 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5654 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5655 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5656 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5657 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5658 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  cp              2   36[COMRAM] PTR const unsigned char 
  5661 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5662 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5663 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5664 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5665 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5666 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5667 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5668 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5669 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5670 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5671 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2   32[COMRAM] unsigned int 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5681 ;;      Params:         2       0       0       0       0       0       0
  5682 ;;      Locals:         2       0       0       0       0       0       0
  5683 ;;      Temps:          2       0       0       0       0       0       0
  5684 ;;      Totals:         6       0       0       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    2
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_util_beacon_transmission
  5692 ;;		_util_transmit_morse_sequence
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text28
  5697  003088                     __ptext28:
  5698                           	opt stack 0
  5699  003088                     _strlen:
  5700                           	opt stack 24
  5701                           
  5702                           ;incstack = 0
  5703  003088  C021  F025         	movff	strlen@s,strlen@cp
  5704  00308C  C022  F026         	movff	strlen@s+1,strlen@cp+1
  5705  003090  D002               	goto	l2813
  5706  003092                     l2811:
  5707  003092  4A25               	infsnz	strlen@cp,f,c
  5708  003094  2A26               	incf	strlen@cp+1,f,c
  5709  003096                     l2813:
  5710  003096  C025  FFF6         	movff	strlen@cp,tblptrl
  5711  00309A  C026  FFF7         	movff	strlen@cp+1,tblptrh
  5712  00309E  6AF8               	clrf	tblptru,c
  5713  0030A0  0E05               	movlw	(high __ramtop+-1)
  5714  0030A2  64F7               	cpfsgt	tblptrh,c
  5715  0030A4  D003               	bra	u2187
  5716  0030A6  0008               	tblrd		*
  5717  0030A8  50F5               	movf	tablat,w,c
  5718  0030AA  D005               	bra	u2180
  5719  0030AC                     u2187:
  5720  0030AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5721  0030B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5722  0030B4  50EF               	movf	indf0,w,c
  5723  0030B6                     u2180:
  5724  0030B6  0900               	iorlw	0
  5725  0030B8  A4D8               	btfss	status,2,c
  5726  0030BA  D7EB               	goto	l2811
  5727  0030BC  C021  F023         	movff	strlen@s,??_strlen
  5728  0030C0  C022  F024         	movff	strlen@s+1,??_strlen+1
  5729  0030C4  1E23               	comf	??_strlen,f,c
  5730  0030C6  1E24               	comf	??_strlen+1,f,c
  5731  0030C8  4A23               	infsnz	??_strlen,f,c
  5732  0030CA  2A24               	incf	??_strlen+1,f,c
  5733  0030CC  5025               	movf	strlen@cp,w,c
  5734  0030CE  2423               	addwf	??_strlen,w,c
  5735  0030D0  6E21               	movwf	?_strlen,c
  5736  0030D2  5026               	movf	strlen@cp+1,w,c
  5737  0030D4  2024               	addwfc	??_strlen+1,w,c
  5738  0030D6  6E22               	movwf	?_strlen+1,c
  5739  0030D8  0012               	return	
  5740  0030DA                     __end_of_strlen:
  5741                           	opt stack 0
  5742                           tblptru	equ	0xFF8
  5743                           tblptrh	equ	0xFF7
  5744                           tblptrl	equ	0xFF6
  5745                           tablat	equ	0xFF5
  5746                           indf0	equ	0xFEF
  5747                           fsr0h	equ	0xFEA
  5748                           fsr0l	equ	0xFE9
  5749                           wreg	equ	0xFE8
  5750                           indf2	equ	0xFDF
  5751                           postinc2	equ	0xFDE
  5752                           postdec2	equ	0xFDD
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _strcpy *****************
  5758 ;; Defined at:
  5759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcpy.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  to              2   32[COMRAM] PTR unsigned char 
  5762 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  5763 ;;  from            2   34[COMRAM] PTR const unsigned char 
  5764 ;;		 -> STR_1(7), 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  cp              2   36[COMRAM] PTR unsigned char 
  5767 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2   32[COMRAM] PTR unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5777 ;;      Params:         4       0       0       0       0       0       0
  5778 ;;      Locals:         2       0       0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0
  5780 ;;      Totals:         6       0       0       0       0       0       0
  5781 ;;Total ram usage:        6 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    2
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_util_beacon_transmission
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text29
  5792  00335A                     __ptext29:
  5793                           	opt stack 0
  5794  00335A                     _strcpy:
  5795                           	opt stack 26
  5796                           
  5797                           ;incstack = 0
  5798  00335A  C021  F025         	movff	strcpy@to,strcpy@cp
  5799  00335E  C022  F026         	movff	strcpy@to+1,strcpy@cp+1
  5800  003362  D004               	goto	l3539
  5801  003364                     l3537:
  5802  003364  4A25               	infsnz	strcpy@cp,f,c
  5803  003366  2A26               	incf	strcpy@cp+1,f,c
  5804  003368  4A23               	infsnz	strcpy@from,f,c
  5805  00336A  2A24               	incf	strcpy@from+1,f,c
  5806  00336C                     l3539:
  5807  00336C  C023  FFF6         	movff	strcpy@from,tblptrl
  5808  003370  C024  FFF7         	movff	strcpy@from+1,tblptrh
  5809  003374                     	if	0	;tblptru may be non-zero
  5810  003374                     	endif
  5811  003374                     	if	0	;tblptru may be non-zero
  5812  003374                     	endif
  5813  003374  C025  FFD9         	movff	strcpy@cp,fsr2l
  5814  003378  C026  FFDA         	movff	strcpy@cp+1,fsr2h
  5815  00337C  0008               	tblrd		*
  5816  00337E  CFF5 FFDF          	movff	tablat,indf2
  5817  003382  50DF               	movf	indf2,w,c
  5818  003384  B4D8               	btfsc	status,2,c
  5819  003386  0012               	return	
  5820  003388  D7ED               	goto	l3537
  5821  00338A                     __end_of_strcpy:
  5822                           	opt stack 0
  5823                           tblptru	equ	0xFF8
  5824                           tblptrh	equ	0xFF7
  5825                           tblptrl	equ	0xFF6
  5826                           tablat	equ	0xFF5
  5827                           indf0	equ	0xFEF
  5828                           fsr0h	equ	0xFEA
  5829                           fsr0l	equ	0xFE9
  5830                           wreg	equ	0xFE8
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function _strcat *****************
  5839 ;; Defined at:
  5840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcat.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  to              2   32[COMRAM] PTR unsigned char 
  5843 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  5844 ;;  from            2   34[COMRAM] PTR const unsigned char 
  5845 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  cp              2   36[COMRAM] PTR unsigned char 
  5848 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  2   32[COMRAM] PTR unsigned char 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5858 ;;      Params:         4       0       0       0       0       0       0
  5859 ;;      Locals:         2       0       0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0
  5861 ;;      Totals:         6       0       0       0       0       0       0
  5862 ;;Total ram usage:        6 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    2
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_util_beacon_transmission
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text30
  5873  0031B6                     __ptext30:
  5874                           	opt stack 0
  5875  0031B6                     _strcat:
  5876                           	opt stack 26
  5877                           
  5878                           ;incstack = 0
  5879  0031B6  C021  F025         	movff	strcat@to,strcat@cp
  5880  0031BA  C022  F026         	movff	strcat@to+1,strcat@cp+1
  5881  0031BE  D002               	goto	l3839
  5882  0031C0                     l3837:
  5883  0031C0  4A25               	infsnz	strcat@cp,f,c
  5884  0031C2  2A26               	incf	strcat@cp+1,f,c
  5885  0031C4                     l3839:
  5886  0031C4  C025  FFD9         	movff	strcat@cp,fsr2l
  5887  0031C8  C026  FFDA         	movff	strcat@cp+1,fsr2h
  5888  0031CC  50DF               	movf	indf2,w,c
  5889  0031CE  B4D8               	btfsc	status,2,c
  5890  0031D0  D005               	goto	l3843
  5891  0031D2  D7F6               	goto	l3837
  5892  0031D4                     l3841:
  5893  0031D4  4A25               	infsnz	strcat@cp,f,c
  5894  0031D6  2A26               	incf	strcat@cp+1,f,c
  5895  0031D8  4A23               	infsnz	strcat@from,f,c
  5896  0031DA  2A24               	incf	strcat@from+1,f,c
  5897  0031DC                     l3843:
  5898  0031DC  C023  FFD9         	movff	strcat@from,fsr2l
  5899  0031E0  C024  FFDA         	movff	strcat@from+1,fsr2h
  5900  0031E4  C025  FFE1         	movff	strcat@cp,fsr1l
  5901  0031E8  C026  FFE2         	movff	strcat@cp+1,fsr1h
  5902  0031EC  CFDF FFE7          	movff	indf2,indf1
  5903  0031F0  50E7               	movf	indf1,w,c
  5904  0031F2  B4D8               	btfsc	status,2,c
  5905  0031F4  0012               	return	
  5906  0031F6  D7EE               	goto	l3841
  5907  0031F8                     __end_of_strcat:
  5908                           	opt stack 0
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           indf0	equ	0xFEF
  5914                           fsr0h	equ	0xFEA
  5915                           fsr0l	equ	0xFE9
  5916                           wreg	equ	0xFE8
  5917                           indf1	equ	0xFE7
  5918                           fsr1h	equ	0xFE2
  5919                           fsr1l	equ	0xFE1
  5920                           indf2	equ	0xFDF
  5921                           postinc2	equ	0xFDE
  5922                           postdec2	equ	0xFDD
  5923                           fsr2h	equ	0xFDA
  5924                           fsr2l	equ	0xFD9
  5925                           status	equ	0xFD8
  5926                           
  5927 ;; *************** function _sprintf *****************
  5928 ;; Defined at:
  5929 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  sp              2   37[BANK0 ] PTR unsigned char 
  5932 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  5933 ;;  f               2   39[BANK0 ] PTR const unsigned char 
  5934 ;;		 -> STR_2(23), 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  val             4   70[BANK0 ] unsigned long 
  5937 ;;  tmpval          4   66[BANK0 ] struct .
  5938 ;;  fval            3   76[BANK0 ] struct .
  5939 ;;  cp              3    0        PTR const unsigned char 
  5940 ;;  prec            2   79[BANK0 ] int 
  5941 ;;  exp             2   74[BANK0 ] int 
  5942 ;;  width           2   64[BANK0 ] int 
  5943 ;;  flag            2   62[BANK0 ] unsigned short 
  5944 ;;  ap              2   60[BANK0 ] PTR void [1]
  5945 ;;		 -> ?_sprintf(2), 
  5946 ;;  len             2    0        unsigned int 
  5947 ;;  c               1   81[BANK0 ] char 
  5948 ;;  d               1    0        unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2   37[BANK0 ] int 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5958 ;;      Params:         0      14       0       0       0       0       0
  5959 ;;      Locals:         0      25       0       0       0       0       0
  5960 ;;      Temps:          0       6       0       0       0       0       0
  5961 ;;      Totals:         0      45       0       0       0       0       0
  5962 ;;Total ram usage:       45 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    5
  5965 ;; This function calls:
  5966 ;;		___awdiv
  5967 ;;		___ftadd
  5968 ;;		___ftge
  5969 ;;		___ftmul
  5970 ;;		___ftneg
  5971 ;;		___ftsub
  5972 ;;		___fttol
  5973 ;;		___lldiv
  5974 ;;		___llmod
  5975 ;;		___lltoft
  5976 ;;		___wmul
  5977 ;;		__div_to_l_
  5978 ;;		__tdiv_to_l_
  5979 ;;		_fround
  5980 ;;		_isdigit
  5981 ;;		_scale
  5982 ;; This function is called by:
  5983 ;;		_util_beacon_transmission
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text31
  5988  0000AA                     __ptext31:
  5989                           	opt stack 0
  5990  0000AA                     _sprintf:
  5991                           	opt stack 23
  5992                           
  5993                           ;doprnt.c: 494: va_list ap;
  5994                           ;doprnt.c: 499: signed char c;
  5995                           ;doprnt.c: 501: int width;
  5996                           ;doprnt.c: 504: int prec;
  5997                           ;doprnt.c: 508: unsigned short flag;
  5998                           ;doprnt.c: 515: char d;
  5999                           ;doprnt.c: 516: double fval;
  6000                           ;doprnt.c: 517: int exp;
  6001                           ;doprnt.c: 523: union {
  6002                           ;doprnt.c: 524: unsigned long vd;
  6003                           ;doprnt.c: 525: double integ;
  6004                           ;doprnt.c: 526: } tmpval;
  6005                           ;doprnt.c: 528: unsigned long val;
  6006                           ;doprnt.c: 529: unsigned len;
  6007                           ;doprnt.c: 530: const char * cp;
  6008                           ;doprnt.c: 533: *ap = __va_start();
  6009                           
  6010                           ;incstack = 0
  6011  0000AA  0E89               	movlw	low (?_sprintf+4)
  6012  0000AC  0100               	movlb	0	; () banked
  6013  0000AE  6F9C               	movwf	sprintf@ap& (0+255),b
  6014  0000B0  0E00               	movlw	high (?_sprintf+4)
  6015  0000B2  0100               	movlb	0	; () banked
  6016  0000B4  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  6017                           
  6018                           ;doprnt.c: 536: while(c = *f++) {
  6019  0000B6  EFF6  F005         	goto	l4631
  6020  0000BA                     l4345:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;doprnt.c: 538: if(c != '%')
  6024  0000BA  0E25               	movlw	37
  6025  0000BC  0100               	movlb	0	; () banked
  6026  0000BE  19B1               	xorwf	sprintf@c& (0+255),w,b
  6027  0000C0  B4D8               	btfsc	status,2,c
  6028  0000C2  D00B               	goto	l4351
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;doprnt.c: 540: {
  6032                           ;doprnt.c: 541: ((*sp++ = (c)));
  6033  0000C4  C085  FFD9         	movff	sprintf@sp,fsr2l
  6034  0000C8  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  6035  0000CC  C0B1  FFDF         	movff	sprintf@c,indf2
  6036                           
  6037                           ; BSR set to: 0
  6038  0000D0  0100               	movlb	0	; () banked
  6039  0000D2  4B85               	infsnz	sprintf@sp& (0+255),f,b
  6040  0000D4  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  6041                           
  6042                           ;doprnt.c: 542: continue;
  6043  0000D6  EFF6  F005         	goto	l4631
  6044  0000DA                     l4351:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;doprnt.c: 543: }
  6048                           ;doprnt.c: 546: width = 0;
  6049  0000DA  0E00               	movlw	0
  6050  0000DC  0100               	movlb	0	; () banked
  6051  0000DE  6FA1               	movwf	(sprintf@width+1)& (0+255),b
  6052  0000E0  0E00               	movlw	0
  6053  0000E2  6FA0               	movwf	sprintf@width& (0+255),b
  6054                           
  6055                           ;doprnt.c: 548: flag = 0;
  6056  0000E4  0E00               	movlw	0
  6057  0000E6  0100               	movlb	0	; () banked
  6058  0000E8  6F9F               	movwf	(sprintf@flag+1)& (0+255),b
  6059  0000EA  0E00               	movlw	0
  6060  0000EC  6F9E               	movwf	sprintf@flag& (0+255),b
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6064  0000EE  C087  FFF6         	movff	sprintf@f,tblptrl
  6065  0000F2  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6066  0000F6                     	if	0	;tblptru may be non-zero
  6067  0000F6                     	endif
  6068  0000F6                     	if	0	;tblptru may be non-zero
  6069  0000F6                     	endif
  6070  0000F6  0008               	tblrd		*
  6071  0000F8  50F5               	movf	tablat,w,c
  6072  0000FA  EC60  F01A         	call	_isdigit
  6073  0000FE  A0D8               	btfss	status,0,c
  6074  000100  D03F               	goto	l4365
  6075                           
  6076                           ;doprnt.c: 598: width = 0;
  6077  000102  0E00               	movlw	0
  6078  000104  0100               	movlb	0	; () banked
  6079  000106  6FA1               	movwf	(sprintf@width+1)& (0+255),b
  6080  000108  0E00               	movlw	0
  6081  00010A  6FA0               	movwf	sprintf@width& (0+255),b
  6082  00010C                     l4357:
  6083                           
  6084                           ;doprnt.c: 600: width *= 10;
  6085  00010C  C0A0  F02F         	movff	sprintf@width,___wmul@multiplier
  6086  000110  C0A1  F030         	movff	sprintf@width+1,___wmul@multiplier+1
  6087  000114  0E00               	movlw	0
  6088  000116  6E32               	movwf	___wmul@multiplicand+1,c
  6089  000118  0E0A               	movlw	10
  6090  00011A  6E31               	movwf	___wmul@multiplicand,c
  6091  00011C  EC07  F01A         	call	___wmul	;wreg free
  6092  000120  C02F  F0A0         	movff	?___wmul,sprintf@width
  6093  000124  C030  F0A1         	movff	?___wmul+1,sprintf@width+1
  6094                           
  6095                           ;doprnt.c: 601: width += *f++ - '0';
  6096  000128  0ED0               	movlw	208
  6097  00012A  0100               	movlb	0	; () banked
  6098  00012C  6F93               	movwf	??_sprintf& (0+255),b
  6099  00012E  0EFF               	movlw	255
  6100  000130  0100               	movlb	0	; () banked
  6101  000132  6F94               	movwf	(??_sprintf+1)& (0+255),b
  6102  000134  C087  FFF6         	movff	sprintf@f,tblptrl
  6103  000138  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6104  00013C                     	if	0	;tblptru may be non-zero
  6105  00013C                     	endif
  6106  00013C                     	if	0	;tblptru may be non-zero
  6107  00013C                     	endif
  6108  00013C  0008               	tblrd		*
  6109  00013E  50F5               	movf	tablat,w,c
  6110  000140  0100               	movlb	0	; () banked
  6111  000142  6F95               	movwf	(??_sprintf+2)& (0+255),b
  6112  000144  6B96               	clrf	(??_sprintf+3)& (0+255),b
  6113  000146  0100               	movlb	0	; () banked
  6114  000148  5193               	movf	??_sprintf& (0+255),w,b
  6115  00014A  0100               	movlb	0	; () banked
  6116  00014C  2795               	addwf	(??_sprintf+2)& (0+255),f,b
  6117  00014E  0100               	movlb	0	; () banked
  6118  000150  5194               	movf	(??_sprintf+1)& (0+255),w,b
  6119  000152  0100               	movlb	0	; () banked
  6120  000154  2396               	addwfc	(??_sprintf+3)& (0+255),f,b
  6121  000156  0100               	movlb	0	; () banked
  6122  000158  5195               	movf	(??_sprintf+2)& (0+255),w,b
  6123  00015A  0100               	movlb	0	; () banked
  6124  00015C  27A0               	addwf	sprintf@width& (0+255),f,b
  6125  00015E  0100               	movlb	0	; () banked
  6126  000160  5196               	movf	(??_sprintf+3)& (0+255),w,b
  6127  000162  0100               	movlb	0	; () banked
  6128  000164  23A1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6129                           
  6130                           ; BSR set to: 0
  6131  000166  0100               	movlb	0	; () banked
  6132  000168  4B87               	infsnz	sprintf@f& (0+255),f,b
  6133  00016A  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6137  00016C  C087  FFF6         	movff	sprintf@f,tblptrl
  6138  000170  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6139  000174                     	if	0	;tblptru may be non-zero
  6140  000174                     	endif
  6141  000174                     	if	0	;tblptru may be non-zero
  6142  000174                     	endif
  6143  000174  0008               	tblrd		*
  6144  000176  50F5               	movf	tablat,w,c
  6145  000178  EC60  F01A         	call	_isdigit
  6146  00017C  B0D8               	btfsc	status,0,c
  6147  00017E  D7C6               	goto	l4357
  6148  000180                     l4365:
  6149                           
  6150                           ;doprnt.c: 608: }
  6151                           ;doprnt.c: 611: if(*f == '.') {
  6152  000180  C087  FFF6         	movff	sprintf@f,tblptrl
  6153  000184  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6154  000188                     	if	0	;tblptru may be non-zero
  6155  000188                     	endif
  6156  000188                     	if	0	;tblptru may be non-zero
  6157  000188                     	endif
  6158  000188  0008               	tblrd		*
  6159  00018A  50F5               	movf	tablat,w,c
  6160  00018C  0A2E               	xorlw	46
  6161  00018E  A4D8               	btfss	status,2,c
  6162  000190  D034               	goto	l4377
  6163                           
  6164                           ;doprnt.c: 612: flag |= 0x4000;
  6165  000192  0100               	movlb	0	; () banked
  6166  000194  8D9F               	bsf	(sprintf@flag+1)& (0+255),6,b
  6167                           
  6168                           ;doprnt.c: 613: f++;
  6169  000196  0100               	movlb	0	; () banked
  6170  000198  4B87               	infsnz	sprintf@f& (0+255),f,b
  6171  00019A  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;doprnt.c: 620: {
  6175                           ;doprnt.c: 621: prec = 0;
  6176  00019C  0E00               	movlw	0
  6177  00019E  0100               	movlb	0	; () banked
  6178  0001A0  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
  6179  0001A2  0E00               	movlw	0
  6180  0001A4  6FAF               	movwf	sprintf@prec& (0+255),b
  6181                           
  6182                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6183  0001A6  D01E               	goto	l4375
  6184  0001A8                     l4371:
  6185                           
  6186                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6187  0001A8  C0AF  F02F         	movff	sprintf@prec,___wmul@multiplier
  6188  0001AC  C0B0  F030         	movff	sprintf@prec+1,___wmul@multiplier+1
  6189  0001B0  0E00               	movlw	0
  6190  0001B2  6E32               	movwf	___wmul@multiplicand+1,c
  6191  0001B4  0E0A               	movlw	10
  6192  0001B6  6E31               	movwf	___wmul@multiplicand,c
  6193  0001B8  EC07  F01A         	call	___wmul	;wreg free
  6194  0001BC  C087  FFF6         	movff	sprintf@f,tblptrl
  6195  0001C0  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6196  0001C4                     	if	0	;tblptru may be non-zero
  6197  0001C4                     	endif
  6198  0001C4                     	if	0	;tblptru may be non-zero
  6199  0001C4                     	endif
  6200  0001C4  0008               	tblrd		*
  6201  0001C6  50F5               	movf	tablat,w,c
  6202  0001C8  262F               	addwf	?___wmul,f,c
  6203  0001CA  0E00               	movlw	0
  6204  0001CC  2230               	addwfc	?___wmul+1,f,c
  6205  0001CE  0ED0               	movlw	208
  6206  0001D0  242F               	addwf	?___wmul,w,c
  6207  0001D2  0100               	movlb	0	; () banked
  6208  0001D4  6FAF               	movwf	sprintf@prec& (0+255),b
  6209  0001D6  0EFF               	movlw	255
  6210  0001D8  2030               	addwfc	?___wmul+1,w,c
  6211  0001DA  0100               	movlb	0	; () banked
  6212  0001DC  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
  6213                           
  6214                           ; BSR set to: 0
  6215  0001DE  0100               	movlb	0	; () banked
  6216  0001E0  4B87               	infsnz	sprintf@f& (0+255),f,b
  6217  0001E2  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  6218  0001E4                     l4375:
  6219                           
  6220                           ; BSR set to: 0
  6221  0001E4  C087  FFF6         	movff	sprintf@f,tblptrl
  6222  0001E8  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6223  0001EC                     	if	0	;tblptru may be non-zero
  6224  0001EC                     	endif
  6225  0001EC                     	if	0	;tblptru may be non-zero
  6226  0001EC                     	endif
  6227  0001EC  0008               	tblrd		*
  6228  0001EE  50F5               	movf	tablat,w,c
  6229  0001F0  EC60  F01A         	call	_isdigit
  6230  0001F4  A0D8               	btfss	status,0,c
  6231  0001F6  D00C               	goto	l4385
  6232  0001F8  D7D7               	goto	l4371
  6233  0001FA                     l4377:
  6234                           
  6235                           ;doprnt.c: 626: prec = 0;
  6236  0001FA  0E00               	movlw	0
  6237  0001FC  0100               	movlb	0	; () banked
  6238  0001FE  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
  6239  000200  0E00               	movlw	0
  6240  000202  6FAF               	movwf	sprintf@prec& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;doprnt.c: 628: flag |= 0x1000;
  6244  000204  0100               	movlb	0	; () banked
  6245  000206  899F               	bsf	(sprintf@flag+1)& (0+255),4,b
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;doprnt.c: 630: }
  6249                           ;doprnt.c: 635: switch(c = *f++) {
  6250  000208  D003               	goto	l4385
  6251  00020A                     l4381:
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;doprnt.c: 663: flag |= 0x400;
  6255  00020A  0100               	movlb	0	; () banked
  6256  00020C  859F               	bsf	(sprintf@flag+1)& (0+255),2,b
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;doprnt.c: 698: case 'i':
  6260                           ;doprnt.c: 699: break;
  6261                           
  6262                           ; BSR set to: 0
  6263                           
  6264                           ;doprnt.c: 697: case 'd':
  6265                           
  6266                           ;doprnt.c: 664: break;
  6267  00020E  D01A               	goto	l4387
  6268  000210                     l4385:
  6269  000210  C087  FFF6         	movff	sprintf@f,tblptrl
  6270  000214  C088  FFF7         	movff	sprintf@f+1,tblptrh
  6271  000218  0100               	movlb	0	; () banked
  6272  00021A  4B87               	infsnz	sprintf@f& (0+255),f,b
  6273  00021C  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  6274  00021E                     	if	0	;tblptru may be non-zero
  6275  00021E                     	endif
  6276  00021E                     	if	0	;tblptru may be non-zero
  6277  00021E                     	endif
  6278  00021E  0008               	tblrd		*
  6279  000220  CFF5 F0B1          	movff	tablat,sprintf@c
  6280  000224  0100               	movlb	0	; () banked
  6281  000226  51B1               	movf	sprintf@c& (0+255),w,b
  6282                           
  6283                           ; Switch size 1, requested type "space"
  6284                           ; Number of cases is 4, Range of values is 0 to 105
  6285                           ; switch strategies available:
  6286                           ; Name         Instructions Cycles
  6287                           ; simple_byte           13     7 (average)
  6288                           ;	Chosen strategy is simple_byte
  6289  000228  0A00               	xorlw	0	; case 0
  6290  00022A  B4D8               	btfsc	status,2,c
  6291  00022C  EF05  F006         	goto	l4633
  6292  000230  0A64               	xorlw	100	; case 100
  6293  000232  B4D8               	btfsc	status,2,c
  6294  000234  D007               	goto	l4387
  6295  000236  0A02               	xorlw	2	; case 102
  6296  000238  B4D8               	btfsc	status,2,c
  6297  00023A  D7E7               	goto	l4381
  6298  00023C  0A0F               	xorlw	15	; case 105
  6299  00023E  A4D8               	btfss	status,2,c
  6300  000240  EFF6  F005         	goto	l4631
  6301  000244                     l4387:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;doprnt.c: 825: if(flag & (0x700)) {
  6305  000244  0E07               	movlw	7
  6306  000246  0100               	movlb	0	; () banked
  6307  000248  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  6308  00024A  B4D8               	btfsc	status,2,c
  6309  00024C  D369               	goto	l4551
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;doprnt.c: 827: if(flag & 0x1000)
  6313  00024E  0100               	movlb	0	; () banked
  6314  000250  A99F               	btfss	(sprintf@flag+1)& (0+255),4,b
  6315  000252  D005               	goto	l4393
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;doprnt.c: 829: prec = 6;
  6319  000254  0E00               	movlw	0
  6320  000256  0100               	movlb	0	; () banked
  6321  000258  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
  6322  00025A  0E06               	movlw	6
  6323  00025C  6FAF               	movwf	sprintf@prec& (0+255),b
  6324  00025E                     l4393:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6328  00025E  C09C  FFD9         	movff	sprintf@ap,fsr2l
  6329  000262  C09D  FFDA         	movff	sprintf@ap+1,fsr2h
  6330  000266  CFDE F0AC          	movff	postinc2,sprintf@fval
  6331  00026A  CFDE F0AD          	movff	postinc2,sprintf@fval+1
  6332  00026E  CFDD F0AE          	movff	postdec2,sprintf@fval+2
  6333                           
  6334                           ; BSR set to: 0
  6335  000272  0E03               	movlw	3
  6336  000274  0100               	movlb	0	; () banked
  6337  000276  279C               	addwf	sprintf@ap& (0+255),f,b
  6338  000278  0E00               	movlw	0
  6339  00027A  239D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;doprnt.c: 831: if(fval < 0.0) {
  6343  00027C  0100               	movlb	0	; () banked
  6344  00027E  AFAE               	btfss	(sprintf@fval+2)& (0+255),7,b
  6345  000280  D011               	goto	l4403
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;doprnt.c: 832: fval = -fval;
  6349  000282  C0AC  F021         	movff	sprintf@fval,___ftneg@f1
  6350  000286  C0AD  F022         	movff	sprintf@fval+1,___ftneg@f1+1
  6351  00028A  C0AE  F023         	movff	sprintf@fval+2,___ftneg@f1+2
  6352  00028E  EC3F  F01A         	call	___ftneg	;wreg free
  6353  000292  C021  F0AC         	movff	?___ftneg,sprintf@fval
  6354  000296  C022  F0AD         	movff	?___ftneg+1,sprintf@fval+1
  6355  00029A  C023  F0AE         	movff	?___ftneg+2,sprintf@fval+2
  6356                           
  6357                           ;doprnt.c: 833: flag |= 0x03;
  6358  00029E  0E03               	movlw	3
  6359  0002A0  0100               	movlb	0	; () banked
  6360  0002A2  139E               	iorwf	sprintf@flag& (0+255),f,b
  6361  0002A4                     l4403:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;doprnt.c: 834: }
  6365                           ;doprnt.c: 835: exp = 0;
  6366  0002A4  0E00               	movlw	0
  6367  0002A6  0100               	movlb	0	; () banked
  6368  0002A8  6FAB               	movwf	(sprintf@exp+1)& (0+255),b
  6369  0002AA  0E00               	movlw	0
  6370  0002AC  6FAA               	movwf	sprintf@exp& (0+255),b
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;doprnt.c: 836: if( fval!=0) {
  6374  0002AE  0100               	movlb	0	; () banked
  6375  0002B0  51AC               	movf	sprintf@fval& (0+255),w,b
  6376  0002B2  0100               	movlb	0	; () banked
  6377  0002B4  11AD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6378  0002B6  0100               	movlb	0	; () banked
  6379  0002B8  11AE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6380  0002BA  B4D8               	btfsc	status,2,c
  6381  0002BC  D091               	goto	l4431
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6385  0002BE  0E82               	movlw	130
  6386  0002C0  0100               	movlb	0	; () banked
  6387  0002C2  6F93               	movwf	??_sprintf& (0+255),b
  6388  0002C4  0EFF               	movlw	255
  6389  0002C6  0100               	movlb	0	; () banked
  6390  0002C8  6F94               	movwf	(??_sprintf+1)& (0+255),b
  6391  0002CA  C0AC  F095         	movff	sprintf@fval,??_sprintf+2
  6392  0002CE  C0AD  F096         	movff	sprintf@fval+1,??_sprintf+3
  6393  0002D2  C0AE  F097         	movff	sprintf@fval+2,??_sprintf+4
  6394  0002D6  C0AF  F098         	movff	sprintf@fval+3,??_sprintf+5
  6395  0002DA  0E10               	movlw	16
  6396  0002DC  D006               	goto	u4320
  6397  0002DE                     u4325:
  6398  0002DE  0100               	movlb	0	; () banked
  6399  0002E0  90D8               	bcf	status,0,c
  6400  0002E2  3398               	rrcf	(??_sprintf+5)& (0+255),f,b
  6401  0002E4  3397               	rrcf	(??_sprintf+4)& (0+255),f,b
  6402  0002E6  3396               	rrcf	(??_sprintf+3)& (0+255),f,b
  6403  0002E8  3395               	rrcf	(??_sprintf+2)& (0+255),f,b
  6404  0002EA                     u4320:
  6405  0002EA  2EE8               	decfsz	wreg,f,c
  6406  0002EC  D7F8               	goto	u4325
  6407  0002EE  0100               	movlb	0	; () banked
  6408  0002F0  5195               	movf	(??_sprintf+2)& (0+255),w,b
  6409  0002F2  0100               	movlb	0	; () banked
  6410  0002F4  2593               	addwf	??_sprintf& (0+255),w,b
  6411  0002F6  0100               	movlb	0	; () banked
  6412  0002F8  6FAA               	movwf	sprintf@exp& (0+255),b
  6413  0002FA  0E00               	movlw	0
  6414  0002FC  0100               	movlb	0	; () banked
  6415  0002FE  2194               	addwfc	(??_sprintf+1)& (0+255),w,b
  6416  000300  0100               	movlb	0	; () banked
  6417  000302  6FAB               	movwf	(sprintf@exp+1)& (0+255),b
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;doprnt.c: 838: exp--;
  6421  000304  0100               	movlb	0	; () banked
  6422  000306  07AA               	decf	sprintf@exp& (0+255),f,b
  6423  000308  A0D8               	btfss	status,0,c
  6424  00030A  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;doprnt.c: 839: exp *= 3;
  6428  00030C  C0AA  F02F         	movff	sprintf@exp,___wmul@multiplier
  6429  000310  C0AB  F030         	movff	sprintf@exp+1,___wmul@multiplier+1
  6430  000314  0E00               	movlw	0
  6431  000316  6E32               	movwf	___wmul@multiplicand+1,c
  6432  000318  0E03               	movlw	3
  6433  00031A  6E31               	movwf	___wmul@multiplicand,c
  6434  00031C  EC07  F01A         	call	___wmul	;wreg free
  6435  000320  C02F  F0AA         	movff	?___wmul,sprintf@exp
  6436  000324  C030  F0AB         	movff	?___wmul+1,sprintf@exp+1
  6437                           
  6438                           ;doprnt.c: 840: exp /= 10;
  6439  000328  C0AA  F027         	movff	sprintf@exp,___awdiv@dividend
  6440  00032C  C0AB  F028         	movff	sprintf@exp+1,___awdiv@dividend+1
  6441  000330  0E00               	movlw	0
  6442  000332  6E2A               	movwf	___awdiv@divisor+1,c
  6443  000334  0E0A               	movlw	10
  6444  000336  6E29               	movwf	___awdiv@divisor,c
  6445  000338  ECFA  F016         	call	___awdiv	;wreg free
  6446  00033C  C027  F0AA         	movff	?___awdiv,sprintf@exp
  6447  000340  C028  F0AB         	movff	?___awdiv+1,sprintf@exp+1
  6448                           
  6449                           ;doprnt.c: 841: if(exp < 0)
  6450  000344  0100               	movlb	0	; () banked
  6451  000346  AFAB               	btfss	(sprintf@exp+1)& (0+255),7,b
  6452  000348  D004               	goto	l4419
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;doprnt.c: 842: exp--;
  6456  00034A  0100               	movlb	0	; () banked
  6457  00034C  07AA               	decf	sprintf@exp& (0+255),f,b
  6458  00034E  A0D8               	btfss	status,0,c
  6459  000350  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6460  000352                     l4419:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6464  000352  0100               	movlb	0	; () banked
  6465  000354  51AA               	movf	sprintf@exp& (0+255),w,b
  6466  000356  0800               	sublw	0
  6467  000358  ECB6  F009         	call	_scale
  6468  00035C  C069  F0A2         	movff	?_scale,sprintf@tmpval
  6469  000360  C06A  F0A3         	movff	?_scale+1,sprintf@tmpval+1
  6470  000364  C06B  F0A4         	movff	?_scale+2,sprintf@tmpval+2
  6471                           
  6472                           ;doprnt.c: 847: tmpval.integ *= fval;
  6473  000368  C0A2  F035         	movff	sprintf@tmpval,___ftmul@f1
  6474  00036C  C0A3  F036         	movff	sprintf@tmpval+1,___ftmul@f1+1
  6475  000370  C0A4  F037         	movff	sprintf@tmpval+2,___ftmul@f1+2
  6476  000374  C0AC  F038         	movff	sprintf@fval,___ftmul@f2
  6477  000378  C0AD  F039         	movff	sprintf@fval+1,___ftmul@f2+1
  6478  00037C  C0AE  F03A         	movff	sprintf@fval+2,___ftmul@f2+2
  6479  000380  EC54  F012         	call	___ftmul	;wreg free
  6480  000384  C035  F0A2         	movff	?___ftmul,sprintf@tmpval
  6481  000388  C036  F0A3         	movff	?___ftmul+1,sprintf@tmpval+1
  6482  00038C  C037  F0A4         	movff	?___ftmul+2,sprintf@tmpval+2
  6483                           
  6484                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6485  000390  C0A2  F021         	movff	sprintf@tmpval,___ftge@ff1
  6486  000394  C0A3  F022         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6487  000398  C0A4  F023         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6488  00039C  0E00               	movlw	0
  6489  00039E  6E24               	movwf	___ftge@ff2,c
  6490  0003A0  0E80               	movlw	128
  6491  0003A2  6E25               	movwf	___ftge@ff2+1,c
  6492  0003A4  0E3F               	movlw	63
  6493  0003A6  6E26               	movwf	___ftge@ff2+2,c
  6494  0003A8  EC29  F016         	call	___ftge	;wreg free
  6495  0003AC  B0D8               	btfsc	status,0,c
  6496  0003AE  D005               	goto	l4427
  6497                           
  6498                           ;doprnt.c: 849: exp--;
  6499  0003B0  0100               	movlb	0	; () banked
  6500  0003B2  07AA               	decf	sprintf@exp& (0+255),f,b
  6501  0003B4  A0D8               	btfss	status,0,c
  6502  0003B6  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6503  0003B8  D013               	goto	l4431
  6504  0003BA                     l4427:
  6505                           
  6506                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6507  0003BA  C0A2  F021         	movff	sprintf@tmpval,___ftge@ff1
  6508  0003BE  C0A3  F022         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6509  0003C2  C0A4  F023         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6510  0003C6  0E00               	movlw	0
  6511  0003C8  6E24               	movwf	___ftge@ff2,c
  6512  0003CA  0E20               	movlw	32
  6513  0003CC  6E25               	movwf	___ftge@ff2+1,c
  6514  0003CE  0E41               	movlw	65
  6515  0003D0  6E26               	movwf	___ftge@ff2+2,c
  6516  0003D2  EC29  F016         	call	___ftge	;wreg free
  6517  0003D6  A0D8               	btfss	status,0,c
  6518  0003D8  D003               	goto	l4431
  6519                           
  6520                           ;doprnt.c: 851: exp++;
  6521  0003DA  0100               	movlb	0	; () banked
  6522  0003DC  4BAA               	infsnz	sprintf@exp& (0+255),f,b
  6523  0003DE  2BAB               	incf	(sprintf@exp+1)& (0+255),f,b
  6524  0003E0                     l4431:
  6525                           
  6526                           ;doprnt.c: 852: }
  6527                           ;doprnt.c: 1112: if(prec <= 12)
  6528  0003E0  0100               	movlb	0	; () banked
  6529  0003E2  BFB0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6530  0003E4  D008               	goto	l4433
  6531  0003E6  0100               	movlb	0	; () banked
  6532  0003E8  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  6533  0003EA  E11D               	bnz	l4435
  6534  0003EC  0E0D               	movlw	13
  6535  0003EE  0100               	movlb	0	; () banked
  6536  0003F0  5DAF               	subwf	sprintf@prec& (0+255),w,b
  6537  0003F2  B0D8               	btfsc	status,0,c
  6538  0003F4  D018               	goto	l4435
  6539  0003F6                     l4433:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;doprnt.c: 1113: fval += fround(prec);
  6543  0003F6  C0AC  F073         	movff	sprintf@fval,___ftadd@f1
  6544  0003FA  C0AD  F074         	movff	sprintf@fval+1,___ftadd@f1+1
  6545  0003FE  C0AE  F075         	movff	sprintf@fval+2,___ftadd@f1+2
  6546  000402  0100               	movlb	0	; () banked
  6547  000404  51AF               	movf	sprintf@prec& (0+255),w,b
  6548  000406  EC9B  F00E         	call	_fround
  6549  00040A  C069  F076         	movff	?_fround,___ftadd@f2
  6550  00040E  C06A  F077         	movff	?_fround+1,___ftadd@f2+1
  6551  000412  C06B  F078         	movff	?_fround+2,___ftadd@f2+2
  6552  000416  EC67  F00D         	call	___ftadd	;wreg free
  6553  00041A  C073  F0AC         	movff	?___ftadd,sprintf@fval
  6554  00041E  C074  F0AD         	movff	?___ftadd+1,sprintf@fval+1
  6555  000422  C075  F0AE         	movff	?___ftadd+2,sprintf@fval+2
  6556  000426                     l4435:
  6557                           
  6558                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6559  000426  0100               	movlb	0	; () banked
  6560  000428  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6561  00042A  D008               	goto	l4437
  6562  00042C  0100               	movlb	0	; () banked
  6563  00042E  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  6564  000430  E12A               	bnz	l4443
  6565  000432  0E0A               	movlw	10
  6566  000434  0100               	movlb	0	; () banked
  6567  000436  5DAA               	subwf	sprintf@exp& (0+255),w,b
  6568  000438  B0D8               	btfsc	status,0,c
  6569  00043A  D025               	goto	l4443
  6570  00043C                     l4437:
  6571                           
  6572                           ; BSR set to: 0
  6573  00043C  0100               	movlb	0	; () banked
  6574  00043E  51AC               	movf	sprintf@fval& (0+255),w,b
  6575  000440  0100               	movlb	0	; () banked
  6576  000442  11AD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6577  000444  0100               	movlb	0	; () banked
  6578  000446  11AE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6579  000448  B4D8               	btfsc	status,2,c
  6580  00044A  D05F               	goto	l4457
  6581                           
  6582                           ; BSR set to: 0
  6583  00044C  C0AC  F070         	movff	sprintf@fval,___fttol@f1
  6584  000450  C0AD  F071         	movff	sprintf@fval+1,___fttol@f1+1
  6585  000454  C0AE  F072         	movff	sprintf@fval+2,___fttol@f1+2
  6586  000458  EC19  F011         	call	___fttol	;wreg free
  6587  00045C  0100               	movlb	0	; () banked
  6588  00045E  5170               	movf	?___fttol& (0+255),w,b
  6589  000460  0100               	movlb	0	; () banked
  6590  000462  1171               	iorwf	(?___fttol+1)& (0+255),w,b
  6591  000464  0100               	movlb	0	; () banked
  6592  000466  1172               	iorwf	(?___fttol+2)& (0+255),w,b
  6593  000468  0100               	movlb	0	; () banked
  6594  00046A  1173               	iorwf	(?___fttol+3)& (0+255),w,b
  6595  00046C  A4D8               	btfss	status,2,c
  6596  00046E  D04D               	goto	l4457
  6597                           
  6598                           ; BSR set to: 0
  6599  000470  0100               	movlb	0	; () banked
  6600  000472  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6601  000474  D04A               	goto	l4457
  6602  000476  0100               	movlb	0	; () banked
  6603  000478  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  6604  00047A  E105               	bnz	l4443
  6605  00047C  0E02               	movlw	2
  6606  00047E  0100               	movlb	0	; () banked
  6607  000480  5DAA               	subwf	sprintf@exp& (0+255),w,b
  6608  000482  A0D8               	btfss	status,0,c
  6609  000484  D042               	goto	l4457
  6610  000486                     l4443:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6614  000486  C0A2  F021         	movff	sprintf@tmpval,___ftge@ff1
  6615  00048A  C0A3  F022         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6616  00048E  C0A4  F023         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6617  000492  0E70               	movlw	112
  6618  000494  6E24               	movwf	___ftge@ff2,c
  6619  000496  0E89               	movlw	137
  6620  000498  6E25               	movwf	___ftge@ff2+1,c
  6621  00049A  0E40               	movlw	64
  6622  00049C  6E26               	movwf	___ftge@ff2+2,c
  6623  00049E  EC29  F016         	call	___ftge	;wreg free
  6624  0004A2  B0D8               	btfsc	status,0,c
  6625  0004A4  D003               	goto	l4447
  6626                           
  6627                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6628  0004A6  0100               	movlb	0	; () banked
  6629  0004A8  0EF7               	movlw	247
  6630  0004AA  D002               	goto	L4
  6631  0004AC                     l4447:
  6632                           
  6633                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6634  0004AC  0100               	movlb	0	; () banked
  6635  0004AE  0EF8               	movlw	248
  6636  0004B0                     L4:
  6637  0004B0  27AA               	addwf	sprintf@exp& (0+255),f,b
  6638  0004B2  0EFF               	movlw	255
  6639  0004B4  23AB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;doprnt.c: 1124: }
  6643                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6644                           
  6645                           ; BSR set to: 0
  6646  0004B6  0100               	movlb	0	; () banked
  6647  0004B8  51AA               	movf	sprintf@exp& (0+255),w,b
  6648  0004BA  ECB6  F009         	call	_scale
  6649  0004BE  C069  F0A2         	movff	?_scale,sprintf@tmpval
  6650  0004C2  C06A  F0A3         	movff	?_scale+1,sprintf@tmpval+1
  6651  0004C6  C06B  F0A4         	movff	?_scale+2,sprintf@tmpval+2
  6652                           
  6653                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6654  0004CA  C0AC  F021         	movff	sprintf@fval,__tdiv_to_l_@f1
  6655  0004CE  C0AD  F022         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  6656  0004D2  C0AE  F023         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  6657  0004D6  C0A2  F024         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  6658  0004DA  C0A3  F025         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  6659  0004DE  C0A4  F026         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  6660  0004E2  ECBB  F011         	call	__tdiv_to_l_	;wreg free
  6661  0004E6  C021  F0A6         	movff	?__tdiv_to_l_,sprintf@val
  6662  0004EA  C022  F0A7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  6663  0004EE  C023  F0A8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  6664  0004F2  C024  F0A9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  6665                           
  6666                           ;doprnt.c: 1129: fval = 0.0;
  6667  0004F6  0E00               	movlw	0
  6668  0004F8  0100               	movlb	0	; () banked
  6669  0004FA  6FAC               	movwf	sprintf@fval& (0+255),b
  6670  0004FC  0E00               	movlw	0
  6671  0004FE  0100               	movlb	0	; () banked
  6672  000500  6FAD               	movwf	(sprintf@fval+1)& (0+255),b
  6673  000502  0E00               	movlw	0
  6674  000504  0100               	movlb	0	; () banked
  6675  000506  6FAE               	movwf	(sprintf@fval+2)& (0+255),b
  6676                           
  6677                           ;doprnt.c: 1130: } else {
  6678  000508  D033               	goto	l4461
  6679  00050A                     l4457:
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6683  00050A  C0AC  F070         	movff	sprintf@fval,___fttol@f1
  6684  00050E  C0AD  F071         	movff	sprintf@fval+1,___fttol@f1+1
  6685  000512  C0AE  F072         	movff	sprintf@fval+2,___fttol@f1+2
  6686  000516  EC19  F011         	call	___fttol	;wreg free
  6687  00051A  C070  F0A6         	movff	?___fttol,sprintf@val
  6688  00051E  C071  F0A7         	movff	?___fttol+1,sprintf@val+1
  6689  000522  C072  F0A8         	movff	?___fttol+2,sprintf@val+2
  6690  000526  C073  F0A9         	movff	?___fttol+3,sprintf@val+3
  6691                           
  6692                           ;doprnt.c: 1132: fval -= (double)val;
  6693  00052A  C0AC  F07F         	movff	sprintf@fval,___ftsub@f1
  6694  00052E  C0AD  F080         	movff	sprintf@fval+1,___ftsub@f1+1
  6695  000532  C0AE  F081         	movff	sprintf@fval+2,___ftsub@f1+2
  6696  000536  C0A6  F029         	movff	sprintf@val,___lltoft@c
  6697  00053A  C0A7  F02A         	movff	sprintf@val+1,___lltoft@c+1
  6698  00053E  C0A8  F02B         	movff	sprintf@val+2,___lltoft@c+2
  6699  000542  C0A9  F02C         	movff	sprintf@val+3,___lltoft@c+3
  6700  000546  EC16  F018         	call	___lltoft	;wreg free
  6701  00054A  C029  F082         	movff	?___lltoft,___ftsub@f2
  6702  00054E  C02A  F083         	movff	?___lltoft+1,___ftsub@f2+1
  6703  000552  C02B  F084         	movff	?___lltoft+2,___ftsub@f2+2
  6704  000556  EC94  F018         	call	___ftsub	;wreg free
  6705  00055A  C07F  F0AC         	movff	?___ftsub,sprintf@fval
  6706  00055E  C080  F0AD         	movff	?___ftsub+1,sprintf@fval+1
  6707  000562  C081  F0AE         	movff	?___ftsub+2,sprintf@fval+2
  6708                           
  6709                           ;doprnt.c: 1133: exp = 0;
  6710  000566  0E00               	movlw	0
  6711  000568  0100               	movlb	0	; () banked
  6712  00056A  6FAB               	movwf	(sprintf@exp+1)& (0+255),b
  6713  00056C  0E00               	movlw	0
  6714  00056E  6FAA               	movwf	sprintf@exp& (0+255),b
  6715  000570                     l4461:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;doprnt.c: 1134: }
  6719                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6720  000570  0E01               	movlw	1
  6721  000572  0100               	movlb	0	; () banked
  6722  000574  6FB1               	movwf	sprintf@c& (0+255),b
  6723  000576                     l4463:
  6724                           
  6725                           ; BSR set to: 0
  6726  000576  0E0A               	movlw	10
  6727  000578  0100               	movlb	0	; () banked
  6728  00057A  19B1               	xorwf	sprintf@c& (0+255),w,b
  6729  00057C  B4D8               	btfsc	status,2,c
  6730  00057E  D01E               	goto	l4475
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;doprnt.c: 1137: if(val < dpowers[c])
  6734                           
  6735                           ; BSR set to: 0
  6736                           
  6737                           ; BSR set to: 0
  6738  000580  0100               	movlb	0	; () banked
  6739  000582  51B1               	movf	sprintf@c& (0+255),w,b
  6740  000584  0D04               	mullw	4
  6741  000586  0EF5               	movlw	low _dpowers
  6742  000588  24F3               	addwf	prodl,w,c
  6743  00058A  6EF6               	movwf	tblptrl,c
  6744  00058C  0E7E               	movlw	high _dpowers
  6745  00058E  20F4               	addwfc	prodh,w,c
  6746  000590  6EF7               	movwf	tblptrh,c
  6747  000592                     	if	0	;There are less than 3 active tblptr bytes
  6748  000592                     	endif
  6749  000592  0009               	tblrd		*+
  6750  000594  50F5               	movf	tablat,w,c
  6751  000596  0100               	movlb	0	; () banked
  6752  000598  5DA6               	subwf	sprintf@val& (0+255),w,b
  6753  00059A  0009               	tblrd		*+
  6754  00059C  50F5               	movf	tablat,w,c
  6755  00059E  0100               	movlb	0	; () banked
  6756  0005A0  59A7               	subwfb	(sprintf@val+1)& (0+255),w,b
  6757  0005A2  0009               	tblrd		*+
  6758  0005A4  50F5               	movf	tablat,w,c
  6759  0005A6  0100               	movlb	0	; () banked
  6760  0005A8  59A8               	subwfb	(sprintf@val+2)& (0+255),w,b
  6761  0005AA  0009               	tblrd		*+
  6762  0005AC  50F5               	movf	tablat,w,c
  6763  0005AE  0100               	movlb	0	; () banked
  6764  0005B0  59A9               	subwfb	(sprintf@val+3)& (0+255),w,b
  6765  0005B2  A0D8               	btfss	status,0,c
  6766  0005B4  D003               	goto	l4475
  6767                           
  6768                           ; BSR set to: 0
  6769                           
  6770                           ; BSR set to: 0
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;doprnt.c: 1138: break;
  6774  0005B6  0100               	movlb	0	; () banked
  6775  0005B8  2BB1               	incf	sprintf@c& (0+255),f,b
  6776  0005BA  D7DD               	goto	l4463
  6777  0005BC                     l4475:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;doprnt.c: 1142: width -= prec + c + exp;
  6781  0005BC  C0B1  F093         	movff	sprintf@c,??_sprintf
  6782  0005C0  0100               	movlb	0	; () banked
  6783  0005C2  6B94               	clrf	(??_sprintf+1)& (0+255),b
  6784  0005C4  BF93               	btfsc	??_sprintf& (0+255),7,b
  6785  0005C6  0794               	decf	(??_sprintf+1)& (0+255),f,b
  6786  0005C8  0100               	movlb	0	; () banked
  6787  0005CA  51AF               	movf	sprintf@prec& (0+255),w,b
  6788  0005CC  0100               	movlb	0	; () banked
  6789  0005CE  2793               	addwf	??_sprintf& (0+255),f,b
  6790  0005D0  0100               	movlb	0	; () banked
  6791  0005D2  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  6792  0005D4  0100               	movlb	0	; () banked
  6793  0005D6  2394               	addwfc	(??_sprintf+1)& (0+255),f,b
  6794  0005D8  0100               	movlb	0	; () banked
  6795  0005DA  51AA               	movf	sprintf@exp& (0+255),w,b
  6796  0005DC  0100               	movlb	0	; () banked
  6797  0005DE  2793               	addwf	??_sprintf& (0+255),f,b
  6798  0005E0  0100               	movlb	0	; () banked
  6799  0005E2  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  6800  0005E4  0100               	movlb	0	; () banked
  6801  0005E6  2394               	addwfc	(??_sprintf+1)& (0+255),f,b
  6802  0005E8  0100               	movlb	0	; () banked
  6803  0005EA  5193               	movf	??_sprintf& (0+255),w,b
  6804  0005EC  0100               	movlb	0	; () banked
  6805  0005EE  5FA0               	subwf	sprintf@width& (0+255),f,b
  6806  0005F0  0100               	movlb	0	; () banked
  6807  0005F2  5194               	movf	(??_sprintf+1)& (0+255),w,b
  6808  0005F4  0100               	movlb	0	; () banked
  6809  0005F6  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
  6810                           
  6811                           ;doprnt.c: 1143: if(
  6812                           ;doprnt.c: 1147: prec)
  6813  0005F8  0100               	movlb	0	; () banked
  6814  0005FA  51AF               	movf	sprintf@prec& (0+255),w,b
  6815  0005FC  0100               	movlb	0	; () banked
  6816  0005FE  11B0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6817  000600  B4D8               	btfsc	status,2,c
  6818  000602  D004               	goto	l4479
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;doprnt.c: 1148: width--;
  6822  000604  0100               	movlb	0	; () banked
  6823  000606  07A0               	decf	sprintf@width& (0+255),f,b
  6824  000608  A0D8               	btfss	status,0,c
  6825  00060A  07A1               	decf	(sprintf@width+1)& (0+255),f,b
  6826  00060C                     l4479:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;doprnt.c: 1149: if(flag & 0x03)
  6830  00060C  0E03               	movlw	3
  6831  00060E  0100               	movlb	0	; () banked
  6832  000610  159E               	andwf	sprintf@flag& (0+255),w,b
  6833  000612  0100               	movlb	0	; () banked
  6834  000614  6F93               	movwf	??_sprintf& (0+255),b
  6835  000616  0E00               	movlw	0
  6836  000618  0100               	movlb	0	; () banked
  6837  00061A  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  6838  00061C  0100               	movlb	0	; () banked
  6839  00061E  6F94               	movwf	(??_sprintf+1)& (0+255),b
  6840  000620  0100               	movlb	0	; () banked
  6841  000622  5193               	movf	??_sprintf& (0+255),w,b
  6842  000624  0100               	movlb	0	; () banked
  6843  000626  1194               	iorwf	(??_sprintf+1)& (0+255),w,b
  6844  000628  B4D8               	btfsc	status,2,c
  6845  00062A  D00E               	goto	l4489
  6846  00062C  D009               	goto	l4487
  6847  00062E                     l4483:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  6851  00062E  C085  FFD9         	movff	sprintf@sp,fsr2l
  6852  000632  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  6853  000636  0E20               	movlw	32
  6854  000638  6EDF               	movwf	indf2,c
  6855                           
  6856                           ; BSR set to: 0
  6857  00063A  0100               	movlb	0	; () banked
  6858  00063C  4B85               	infsnz	sprintf@sp& (0+255),f,b
  6859  00063E  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  6860  000640                     l4487:
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;doprnt.c: 1182: width--;
  6864  000640  0100               	movlb	0	; () banked
  6865  000642  07A0               	decf	sprintf@width& (0+255),f,b
  6866  000644  A0D8               	btfss	status,0,c
  6867  000646  07A1               	decf	(sprintf@width+1)& (0+255),f,b
  6868  000648                     l4489:
  6869                           
  6870                           ; BSR set to: 0
  6871  000648  0100               	movlb	0	; () banked
  6872  00064A  BFA1               	btfsc	(sprintf@width+1)& (0+255),7,b
  6873  00064C  D007               	goto	l4491
  6874  00064E  0100               	movlb	0	; () banked
  6875  000650  51A1               	movf	(sprintf@width+1)& (0+255),w,b
  6876  000652  E1ED               	bnz	l4483
  6877  000654  0100               	movlb	0	; () banked
  6878  000656  05A0               	decf	sprintf@width& (0+255),w,b
  6879  000658  B0D8               	btfsc	status,0,c
  6880  00065A  D7E9               	goto	l4483
  6881  00065C                     l4491:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;doprnt.c: 1183: }
  6885                           ;doprnt.c: 1188: if(flag & 0x03)
  6886  00065C  0E03               	movlw	3
  6887  00065E  0100               	movlb	0	; () banked
  6888  000660  159E               	andwf	sprintf@flag& (0+255),w,b
  6889  000662  0100               	movlb	0	; () banked
  6890  000664  6F93               	movwf	??_sprintf& (0+255),b
  6891  000666  0E00               	movlw	0
  6892  000668  0100               	movlb	0	; () banked
  6893  00066A  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  6894  00066C  0100               	movlb	0	; () banked
  6895  00066E  6F94               	movwf	(??_sprintf+1)& (0+255),b
  6896  000670  0100               	movlb	0	; () banked
  6897  000672  5193               	movf	??_sprintf& (0+255),w,b
  6898  000674  0100               	movlb	0	; () banked
  6899  000676  1194               	iorwf	(??_sprintf+1)& (0+255),w,b
  6900  000678  B4D8               	btfsc	status,2,c
  6901  00067A  D054               	goto	l4505
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6905  00067C  C085  FFD9         	movff	sprintf@sp,fsr2l
  6906  000680  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  6907  000684  0E2D               	movlw	45
  6908  000686  D04C               	goto	L5
  6909  000688                     l4495:
  6910                           
  6911                           ; BSR set to: 0
  6912  000688  0100               	movlb	0	; () banked
  6913  00068A  4B85               	infsnz	sprintf@sp& (0+255),f,b
  6914  00068C  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;doprnt.c: 1195: }
  6918                           ;doprnt.c: 1196: while(c--) {
  6919  00068E  D04A               	goto	l4505
  6920  000690                     l4497:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;doprnt.c: 1200: {
  6924                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6925  000690  C0A6  F021         	movff	sprintf@val,___lldiv@dividend
  6926  000694  C0A7  F022         	movff	sprintf@val+1,___lldiv@dividend+1
  6927  000698  C0A8  F023         	movff	sprintf@val+2,___lldiv@dividend+2
  6928  00069C  C0A9  F024         	movff	sprintf@val+3,___lldiv@dividend+3
  6929  0006A0  0100               	movlb	0	; () banked
  6930  0006A2  51B1               	movf	sprintf@c& (0+255),w,b
  6931  0006A4  0D04               	mullw	4
  6932  0006A6  0EF5               	movlw	low _dpowers
  6933  0006A8  24F3               	addwf	prodl,w,c
  6934  0006AA  6EF6               	movwf	tblptrl,c
  6935  0006AC  0E7E               	movlw	high _dpowers
  6936  0006AE  20F4               	addwfc	prodh,w,c
  6937  0006B0  6EF7               	movwf	tblptrh,c
  6938  0006B2                     	if	0	;There are less than 3 active tblptr bytes
  6939  0006B2                     	endif
  6940  0006B2  0009               	tblrd		*+
  6941  0006B4  CFF5 F025          	movff	tablat,___lldiv@divisor
  6942  0006B8  0009               	tblrd		*+
  6943  0006BA  CFF5 F026          	movff	tablat,___lldiv@divisor+1
  6944  0006BE  0009               	tblrd		*+
  6945  0006C0  CFF5 F027          	movff	tablat,___lldiv@divisor+2
  6946  0006C4  000A               	tblrd		*-
  6947  0006C6  CFF5 F028          	movff	tablat,___lldiv@divisor+3
  6948  0006CA  EC3C  F017         	call	___lldiv	;wreg free
  6949  0006CE  C021  F0A2         	movff	?___lldiv,sprintf@tmpval
  6950  0006D2  C022  F0A3         	movff	?___lldiv+1,sprintf@tmpval+1
  6951  0006D6  C023  F0A4         	movff	?___lldiv+2,sprintf@tmpval+2
  6952  0006DA  C024  F0A5         	movff	?___lldiv+3,sprintf@tmpval+3
  6953                           
  6954                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6955  0006DE  C0A2  F02E         	movff	sprintf@tmpval,___llmod@dividend
  6956  0006E2  C0A3  F02F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6957  0006E6  C0A4  F030         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6958  0006EA  C0A5  F031         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6959  0006EE  0E0A               	movlw	10
  6960  0006F0  6E32               	movwf	___llmod@divisor,c
  6961  0006F2  0E00               	movlw	0
  6962  0006F4  6E33               	movwf	___llmod@divisor+1,c
  6963  0006F6  0E00               	movlw	0
  6964  0006F8  6E34               	movwf	___llmod@divisor+2,c
  6965  0006FA  0E00               	movlw	0
  6966  0006FC  6E35               	movwf	___llmod@divisor+3,c
  6967  0006FE  ECB5  F017         	call	___llmod	;wreg free
  6968  000702  C02E  F0A2         	movff	?___llmod,sprintf@tmpval
  6969  000706  C02F  F0A3         	movff	?___llmod+1,sprintf@tmpval+1
  6970  00070A  C030  F0A4         	movff	?___llmod+2,sprintf@tmpval+2
  6971  00070E  C031  F0A5         	movff	?___llmod+3,sprintf@tmpval+3
  6972                           
  6973                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6974  000712  0100               	movlb	0	; () banked
  6975  000714  51A2               	movf	sprintf@tmpval& (0+255),w,b
  6976  000716  0F30               	addlw	48
  6977  000718  C085  FFD9         	movff	sprintf@sp,fsr2l
  6978  00071C  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  6979  000720                     L5:
  6980  000720  6EDF               	movwf	indf2,c
  6981  000722  D7B2               	goto	l4495
  6982  000724                     l4505:
  6983                           
  6984                           ; BSR set to: 0
  6985  000724  0100               	movlb	0	; () banked
  6986  000726  07B1               	decf	sprintf@c& (0+255),f,b
  6987  000728  0100               	movlb	0	; () banked
  6988  00072A  29B1               	incf	sprintf@c& (0+255),w,b
  6989  00072C  B4D8               	btfsc	status,2,c
  6990  00072E  D00E               	goto	l4513
  6991  000730  D7AF               	goto	l4497
  6992  000732                     l4507:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6996  000732  C085  FFD9         	movff	sprintf@sp,fsr2l
  6997  000736  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  6998  00073A  0E30               	movlw	48
  6999  00073C  6EDF               	movwf	indf2,c
  7000                           
  7001                           ; BSR set to: 0
  7002  00073E  0100               	movlb	0	; () banked
  7003  000740  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7004  000742  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;doprnt.c: 1209: exp--;
  7008  000744  0100               	movlb	0	; () banked
  7009  000746  07AA               	decf	sprintf@exp& (0+255),f,b
  7010  000748  A0D8               	btfss	status,0,c
  7011  00074A  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  7012  00074C                     l4513:
  7013                           
  7014                           ; BSR set to: 0
  7015  00074C  0100               	movlb	0	; () banked
  7016  00074E  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7017  000750  D007               	goto	l4515
  7018  000752  0100               	movlb	0	; () banked
  7019  000754  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  7020  000756  E1ED               	bnz	l4507
  7021  000758  0100               	movlb	0	; () banked
  7022  00075A  05AA               	decf	sprintf@exp& (0+255),w,b
  7023  00075C  B0D8               	btfsc	status,0,c
  7024  00075E  D7E9               	goto	l4507
  7025  000760                     l4515:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;doprnt.c: 1210: }
  7029                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7030  000760  0100               	movlb	0	; () banked
  7031  000762  BFB0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7032  000764  D00C               	goto	l426
  7033  000766  0100               	movlb	0	; () banked
  7034  000768  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  7035  00076A  E105               	bnz	u4510
  7036  00076C  0E09               	movlw	9
  7037  00076E  0100               	movlb	0	; () banked
  7038  000770  5DAF               	subwf	sprintf@prec& (0+255),w,b
  7039  000772  A0D8               	btfss	status,0,c
  7040  000774  D004               	goto	l426
  7041  000776                     u4510:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7045  000776  0E08               	movlw	8
  7046  000778  0100               	movlb	0	; () banked
  7047  00077A  6FB1               	movwf	sprintf@c& (0+255),b
  7048  00077C  D002               	goto	l4519
  7049  00077E                     l426:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;doprnt.c: 1213: else
  7053                           ;doprnt.c: 1214: c = prec;
  7054  00077E  C0AF  F0B1         	movff	sprintf@prec,sprintf@c
  7055  000782                     l4519:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;doprnt.c: 1215: prec -= c;
  7059  000782  0100               	movlb	0	; () banked
  7060  000784  51B1               	movf	sprintf@c& (0+255),w,b
  7061  000786  0100               	movlb	0	; () banked
  7062  000788  5FAF               	subwf	sprintf@prec& (0+255),f,b
  7063  00078A  0E00               	movlw	0
  7064  00078C  0100               	movlb	0	; () banked
  7065  00078E  BFB1               	btfsc	sprintf@c& (0+255),7,b
  7066  000790  0EFF               	movlw	255
  7067  000792  0100               	movlb	0	; () banked
  7068  000794  5BB0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;doprnt.c: 1219: if(c)
  7072  000796  0100               	movlb	0	; () banked
  7073  000798  51B1               	movf	sprintf@c& (0+255),w,b
  7074  00079A  0100               	movlb	0	; () banked
  7075  00079C  B4D8               	btfsc	status,2,c
  7076  00079E  D009               	goto	l4527
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7080  0007A0  C085  FFD9         	movff	sprintf@sp,fsr2l
  7081  0007A4  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7082  0007A8  0E2E               	movlw	46
  7083  0007AA  6EDF               	movwf	indf2,c
  7084                           
  7085                           ; BSR set to: 0
  7086  0007AC  0100               	movlb	0	; () banked
  7087  0007AE  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7088  0007B0  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7089  0007B2                     l4527:
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7093  0007B2  0100               	movlb	0	; () banked
  7094  0007B4  51B1               	movf	sprintf@c& (0+255),w,b
  7095  0007B6  ECB6  F009         	call	_scale
  7096  0007BA  C069  F099         	movff	?_scale,_sprintf$2085
  7097  0007BE  C06A  F09A         	movff	?_scale+1,_sprintf$2085+1
  7098  0007C2  C06B  F09B         	movff	?_scale+2,_sprintf$2085+2
  7099                           
  7100                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7101  0007C6  C0AC  F038         	movff	sprintf@fval,___ftmul@f2
  7102  0007CA  C0AD  F039         	movff	sprintf@fval+1,___ftmul@f2+1
  7103  0007CE  C0AE  F03A         	movff	sprintf@fval+2,___ftmul@f2+2
  7104  0007D2  C099  F035         	movff	_sprintf$2085,___ftmul@f1
  7105  0007D6  C09A  F036         	movff	_sprintf$2085+1,___ftmul@f1+1
  7106  0007DA  C09B  F037         	movff	_sprintf$2085+2,___ftmul@f1+2
  7107  0007DE  EC54  F012         	call	___ftmul	;wreg free
  7108  0007E2  C035  F070         	movff	?___ftmul,___fttol@f1
  7109  0007E6  C036  F071         	movff	?___ftmul+1,___fttol@f1+1
  7110  0007EA  C037  F072         	movff	?___ftmul+2,___fttol@f1+2
  7111  0007EE  EC19  F011         	call	___fttol	;wreg free
  7112  0007F2  C070  F0A6         	movff	?___fttol,sprintf@val
  7113  0007F6  C071  F0A7         	movff	?___fttol+1,sprintf@val+1
  7114  0007FA  C072  F0A8         	movff	?___fttol+2,sprintf@val+2
  7115  0007FE  C073  F0A9         	movff	?___fttol+3,sprintf@val+3
  7116                           
  7117                           ;doprnt.c: 1228: while(c--) {
  7118  000802  D073               	goto	l4541
  7119  000804                     l4531:
  7120                           
  7121                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7122  000804  C0A6  F021         	movff	sprintf@val,___lldiv@dividend
  7123  000808  C0A7  F022         	movff	sprintf@val+1,___lldiv@dividend+1
  7124  00080C  C0A8  F023         	movff	sprintf@val+2,___lldiv@dividend+2
  7125  000810  C0A9  F024         	movff	sprintf@val+3,___lldiv@dividend+3
  7126  000814  0100               	movlb	0	; () banked
  7127  000816  51B1               	movf	sprintf@c& (0+255),w,b
  7128  000818  0D04               	mullw	4
  7129  00081A  0EF5               	movlw	low _dpowers
  7130  00081C  24F3               	addwf	prodl,w,c
  7131  00081E  6EF6               	movwf	tblptrl,c
  7132  000820  0E7E               	movlw	high _dpowers
  7133  000822  20F4               	addwfc	prodh,w,c
  7134  000824  6EF7               	movwf	tblptrh,c
  7135  000826                     	if	0	;There are less than 3 active tblptr bytes
  7136  000826                     	endif
  7137  000826  0009               	tblrd		*+
  7138  000828  CFF5 F025          	movff	tablat,___lldiv@divisor
  7139  00082C  0009               	tblrd		*+
  7140  00082E  CFF5 F026          	movff	tablat,___lldiv@divisor+1
  7141  000832  0009               	tblrd		*+
  7142  000834  CFF5 F027          	movff	tablat,___lldiv@divisor+2
  7143  000838  000A               	tblrd		*-
  7144  00083A  CFF5 F028          	movff	tablat,___lldiv@divisor+3
  7145  00083E  EC3C  F017         	call	___lldiv	;wreg free
  7146  000842  C021  F0A2         	movff	?___lldiv,sprintf@tmpval
  7147  000846  C022  F0A3         	movff	?___lldiv+1,sprintf@tmpval+1
  7148  00084A  C023  F0A4         	movff	?___lldiv+2,sprintf@tmpval+2
  7149  00084E  C024  F0A5         	movff	?___lldiv+3,sprintf@tmpval+3
  7150                           
  7151                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7152  000852  C0A2  F02E         	movff	sprintf@tmpval,___llmod@dividend
  7153  000856  C0A3  F02F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7154  00085A  C0A4  F030         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7155  00085E  C0A5  F031         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7156  000862  0E0A               	movlw	10
  7157  000864  6E32               	movwf	___llmod@divisor,c
  7158  000866  0E00               	movlw	0
  7159  000868  6E33               	movwf	___llmod@divisor+1,c
  7160  00086A  0E00               	movlw	0
  7161  00086C  6E34               	movwf	___llmod@divisor+2,c
  7162  00086E  0E00               	movlw	0
  7163  000870  6E35               	movwf	___llmod@divisor+3,c
  7164  000872  ECB5  F017         	call	___llmod	;wreg free
  7165  000876  C02E  F0A2         	movff	?___llmod,sprintf@tmpval
  7166  00087A  C02F  F0A3         	movff	?___llmod+1,sprintf@tmpval+1
  7167  00087E  C030  F0A4         	movff	?___llmod+2,sprintf@tmpval+2
  7168  000882  C031  F0A5         	movff	?___llmod+3,sprintf@tmpval+3
  7169                           
  7170                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7171  000886  0100               	movlb	0	; () banked
  7172  000888  51A2               	movf	sprintf@tmpval& (0+255),w,b
  7173  00088A  0F30               	addlw	48
  7174  00088C  C085  FFD9         	movff	sprintf@sp,fsr2l
  7175  000890  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7176  000894  6EDF               	movwf	indf2,c
  7177                           
  7178                           ; BSR set to: 0
  7179  000896  0100               	movlb	0	; () banked
  7180  000898  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7181  00089A  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;doprnt.c: 1232: val %= dpowers[c];
  7185  00089C  C0A6  F02E         	movff	sprintf@val,___llmod@dividend
  7186  0008A0  C0A7  F02F         	movff	sprintf@val+1,___llmod@dividend+1
  7187  0008A4  C0A8  F030         	movff	sprintf@val+2,___llmod@dividend+2
  7188  0008A8  C0A9  F031         	movff	sprintf@val+3,___llmod@dividend+3
  7189  0008AC  0100               	movlb	0	; () banked
  7190  0008AE  51B1               	movf	sprintf@c& (0+255),w,b
  7191  0008B0  0D04               	mullw	4
  7192  0008B2  0EF5               	movlw	low _dpowers
  7193  0008B4  24F3               	addwf	prodl,w,c
  7194  0008B6  6EF6               	movwf	tblptrl,c
  7195  0008B8  0E7E               	movlw	high _dpowers
  7196  0008BA  20F4               	addwfc	prodh,w,c
  7197  0008BC  6EF7               	movwf	tblptrh,c
  7198  0008BE                     	if	0	;There are less than 3 active tblptr bytes
  7199  0008BE                     	endif
  7200  0008BE  0009               	tblrd		*+
  7201  0008C0  CFF5 F032          	movff	tablat,___llmod@divisor
  7202  0008C4  0009               	tblrd		*+
  7203  0008C6  CFF5 F033          	movff	tablat,___llmod@divisor+1
  7204  0008CA  0009               	tblrd		*+
  7205  0008CC  CFF5 F034          	movff	tablat,___llmod@divisor+2
  7206  0008D0  000A               	tblrd		*-
  7207  0008D2  CFF5 F035          	movff	tablat,___llmod@divisor+3
  7208  0008D6  ECB5  F017         	call	___llmod	;wreg free
  7209  0008DA  C02E  F0A6         	movff	?___llmod,sprintf@val
  7210  0008DE  C02F  F0A7         	movff	?___llmod+1,sprintf@val+1
  7211  0008E2  C030  F0A8         	movff	?___llmod+2,sprintf@val+2
  7212  0008E6  C031  F0A9         	movff	?___llmod+3,sprintf@val+3
  7213  0008EA                     l4541:
  7214  0008EA  0100               	movlb	0	; () banked
  7215  0008EC  07B1               	decf	sprintf@c& (0+255),f,b
  7216  0008EE  0100               	movlb	0	; () banked
  7217  0008F0  29B1               	incf	sprintf@c& (0+255),w,b
  7218  0008F2  B4D8               	btfsc	status,2,c
  7219  0008F4  D00E               	goto	l4549
  7220  0008F6  D786               	goto	l4531
  7221  0008F8                     l4543:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7225  0008F8  C085  FFD9         	movff	sprintf@sp,fsr2l
  7226  0008FC  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7227  000900  0E30               	movlw	48
  7228  000902  6EDF               	movwf	indf2,c
  7229                           
  7230                           ; BSR set to: 0
  7231  000904  0100               	movlb	0	; () banked
  7232  000906  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7233  000908  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;doprnt.c: 1237: prec--;
  7237  00090A  0100               	movlb	0	; () banked
  7238  00090C  07AF               	decf	sprintf@prec& (0+255),f,b
  7239  00090E  A0D8               	btfss	status,0,c
  7240  000910  07B0               	decf	(sprintf@prec+1)& (0+255),f,b
  7241  000912                     l4549:
  7242                           
  7243                           ; BSR set to: 0
  7244  000912  0100               	movlb	0	; () banked
  7245  000914  51AF               	movf	sprintf@prec& (0+255),w,b
  7246  000916  0100               	movlb	0	; () banked
  7247  000918  11B0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7248  00091A  B4D8               	btfsc	status,2,c
  7249  00091C  D167               	goto	l4631
  7250  00091E  D7EC               	goto	l4543
  7251  000920                     l4551:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;doprnt.c: 1246: }
  7255                           ;doprnt.c: 1253: {
  7256                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7257  000920  C09C  FFD9         	movff	sprintf@ap,fsr2l
  7258  000924  C09D  FFDA         	movff	sprintf@ap+1,fsr2h
  7259  000928  CFDE F0A6          	movff	postinc2,sprintf@val
  7260  00092C  CFDD F0A7          	movff	postdec2,sprintf@val+1
  7261  000930  0100               	movlb	0	; () banked
  7262  000932  0E00               	movlw	0
  7263  000934  BFA7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7264  000936  0EFF               	movlw	-1
  7265  000938  6FA8               	movwf	(sprintf@val+2)& (0+255),b
  7266  00093A  6FA9               	movwf	(sprintf@val+3)& (0+255),b
  7267                           
  7268                           ; BSR set to: 0
  7269  00093C  0E02               	movlw	2
  7270  00093E  0100               	movlb	0	; () banked
  7271  000940  279C               	addwf	sprintf@ap& (0+255),f,b
  7272  000942  0E00               	movlw	0
  7273  000944  239D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;doprnt.c: 1261: if((long)val < 0) {
  7277  000946  0100               	movlb	0	; () banked
  7278  000948  AFA9               	btfss	(sprintf@val+3)& (0+255),7,b
  7279  00094A  D00C               	goto	l4561
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;doprnt.c: 1262: flag |= 0x03;
  7283  00094C  0E03               	movlw	3
  7284  00094E  0100               	movlb	0	; () banked
  7285  000950  139E               	iorwf	sprintf@flag& (0+255),f,b
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;doprnt.c: 1263: val = -val;
  7289  000952  0100               	movlb	0	; () banked
  7290  000954  1FA9               	comf	(sprintf@val+3)& (0+255),f,b
  7291  000956  1FA8               	comf	(sprintf@val+2)& (0+255),f,b
  7292  000958  1FA7               	comf	(sprintf@val+1)& (0+255),f,b
  7293  00095A  6DA6               	negf	sprintf@val& (0+255),b
  7294  00095C  0E00               	movlw	0
  7295  00095E  23A7               	addwfc	(sprintf@val+1)& (0+255),f,b
  7296  000960  23A8               	addwfc	(sprintf@val+2)& (0+255),f,b
  7297  000962  23A9               	addwfc	(sprintf@val+3)& (0+255),f,b
  7298  000964                     l4561:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;doprnt.c: 1264: }
  7302                           ;doprnt.c: 1266: }
  7303                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7304  000964  0100               	movlb	0	; () banked
  7305  000966  51AF               	movf	sprintf@prec& (0+255),w,b
  7306  000968  0100               	movlb	0	; () banked
  7307  00096A  11B0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7308  00096C  A4D8               	btfss	status,2,c
  7309  00096E  D00D               	goto	l4567
  7310                           
  7311                           ; BSR set to: 0
  7312  000970  0100               	movlb	0	; () banked
  7313  000972  51A6               	movf	sprintf@val& (0+255),w,b
  7314  000974  0100               	movlb	0	; () banked
  7315  000976  11A7               	iorwf	(sprintf@val+1)& (0+255),w,b
  7316  000978  0100               	movlb	0	; () banked
  7317  00097A  11A8               	iorwf	(sprintf@val+2)& (0+255),w,b
  7318  00097C  0100               	movlb	0	; () banked
  7319  00097E  11A9               	iorwf	(sprintf@val+3)& (0+255),w,b
  7320  000980  A4D8               	btfss	status,2,c
  7321  000982  D003               	goto	l4567
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;doprnt.c: 1291: prec++;
  7325  000984  0100               	movlb	0	; () banked
  7326  000986  4BAF               	infsnz	sprintf@prec& (0+255),f,b
  7327  000988  2BB0               	incf	(sprintf@prec+1)& (0+255),f,b
  7328  00098A                     l4567:
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7332  00098A  0E01               	movlw	1
  7333  00098C  0100               	movlb	0	; () banked
  7334  00098E  6FB1               	movwf	sprintf@c& (0+255),b
  7335  000990                     l4569:
  7336                           
  7337                           ; BSR set to: 0
  7338  000990  0E0A               	movlw	10
  7339  000992  0100               	movlb	0	; () banked
  7340  000994  19B1               	xorwf	sprintf@c& (0+255),w,b
  7341  000996  B4D8               	btfsc	status,2,c
  7342  000998  D01E               	goto	l4581
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;doprnt.c: 1306: if(val < dpowers[c])
  7346                           
  7347                           ; BSR set to: 0
  7348                           
  7349                           ; BSR set to: 0
  7350  00099A  0100               	movlb	0	; () banked
  7351  00099C  51B1               	movf	sprintf@c& (0+255),w,b
  7352  00099E  0D04               	mullw	4
  7353  0009A0  0EF5               	movlw	low _dpowers
  7354  0009A2  24F3               	addwf	prodl,w,c
  7355  0009A4  6EF6               	movwf	tblptrl,c
  7356  0009A6  0E7E               	movlw	high _dpowers
  7357  0009A8  20F4               	addwfc	prodh,w,c
  7358  0009AA  6EF7               	movwf	tblptrh,c
  7359  0009AC                     	if	0	;There are less than 3 active tblptr bytes
  7360  0009AC                     	endif
  7361  0009AC  0009               	tblrd		*+
  7362  0009AE  50F5               	movf	tablat,w,c
  7363  0009B0  0100               	movlb	0	; () banked
  7364  0009B2  5DA6               	subwf	sprintf@val& (0+255),w,b
  7365  0009B4  0009               	tblrd		*+
  7366  0009B6  50F5               	movf	tablat,w,c
  7367  0009B8  0100               	movlb	0	; () banked
  7368  0009BA  59A7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7369  0009BC  0009               	tblrd		*+
  7370  0009BE  50F5               	movf	tablat,w,c
  7371  0009C0  0100               	movlb	0	; () banked
  7372  0009C2  59A8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7373  0009C4  0009               	tblrd		*+
  7374  0009C6  50F5               	movf	tablat,w,c
  7375  0009C8  0100               	movlb	0	; () banked
  7376  0009CA  59A9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7377  0009CC  A0D8               	btfss	status,0,c
  7378  0009CE  D003               	goto	l4581
  7379                           
  7380                           ; BSR set to: 0
  7381                           
  7382                           ; BSR set to: 0
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;doprnt.c: 1307: break;
  7386  0009D0  0100               	movlb	0	; () banked
  7387  0009D2  2BB1               	incf	sprintf@c& (0+255),f,b
  7388  0009D4  D7DD               	goto	l4569
  7389  0009D6                     l4581:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;doprnt.c: 1339: if(c < prec)
  7393  0009D6  0E80               	movlw	128
  7394  0009D8  0100               	movlb	0	; () banked
  7395  0009DA  BFB1               	btfsc	sprintf@c& (0+255),7,b
  7396  0009DC  0E7F               	movlw	127
  7397  0009DE  0100               	movlb	0	; () banked
  7398  0009E0  6F93               	movwf	??_sprintf& (0+255),b
  7399  0009E2  0100               	movlb	0	; () banked
  7400  0009E4  51AF               	movf	sprintf@prec& (0+255),w,b
  7401  0009E6  0100               	movlb	0	; () banked
  7402  0009E8  5DB1               	subwf	sprintf@c& (0+255),w,b
  7403  0009EA  0100               	movlb	0	; () banked
  7404  0009EC  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  7405  0009EE  0A80               	xorlw	128
  7406  0009F0  0100               	movlb	0	; () banked
  7407  0009F2  5993               	subwfb	??_sprintf& (0+255),w,b
  7408  0009F4  B0D8               	btfsc	status,0,c
  7409  0009F6  D003               	goto	l4585
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;doprnt.c: 1340: c = prec;
  7413  0009F8  C0AF  F0B1         	movff	sprintf@prec,sprintf@c
  7414  0009FC  D018               	goto	l4589
  7415  0009FE                     l4585:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;doprnt.c: 1341: else if(prec < c)
  7419  0009FE  0100               	movlb	0	; () banked
  7420  000A00  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  7421  000A02  0A80               	xorlw	128
  7422  000A04  0100               	movlb	0	; () banked
  7423  000A06  6F93               	movwf	??_sprintf& (0+255),b
  7424  000A08  0100               	movlb	0	; () banked
  7425  000A0A  51B1               	movf	sprintf@c& (0+255),w,b
  7426  000A0C  0100               	movlb	0	; () banked
  7427  000A0E  5DAF               	subwf	sprintf@prec& (0+255),w,b
  7428  000A10  0E80               	movlw	128
  7429  000A12  0100               	movlb	0	; () banked
  7430  000A14  BFB1               	btfsc	sprintf@c& (0+255),7,b
  7431  000A16  0E7F               	movlw	127
  7432  000A18  0100               	movlb	0	; () banked
  7433  000A1A  5993               	subwfb	??_sprintf& (0+255),w,b
  7434  000A1C  B0D8               	btfsc	status,0,c
  7435  000A1E  D007               	goto	l4589
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;doprnt.c: 1342: prec = c;
  7439  000A20  0100               	movlb	0	; () banked
  7440  000A22  51B1               	movf	sprintf@c& (0+255),w,b
  7441  000A24  0100               	movlb	0	; () banked
  7442  000A26  6FAF               	movwf	sprintf@prec& (0+255),b
  7443  000A28  6BB0               	clrf	(sprintf@prec+1)& (0+255),b
  7444  000A2A  BFAF               	btfsc	sprintf@prec& (0+255),7,b
  7445  000A2C  07B0               	decf	(sprintf@prec+1)& (0+255),f,b
  7446  000A2E                     l4589:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7450  000A2E  0100               	movlb	0	; () banked
  7451  000A30  51A0               	movf	sprintf@width& (0+255),w,b
  7452  000A32  0100               	movlb	0	; () banked
  7453  000A34  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
  7454  000A36  B4D8               	btfsc	status,2,c
  7455  000A38  D014               	goto	l4595
  7456                           
  7457                           ; BSR set to: 0
  7458  000A3A  0E03               	movlw	3
  7459  000A3C  0100               	movlb	0	; () banked
  7460  000A3E  159E               	andwf	sprintf@flag& (0+255),w,b
  7461  000A40  0100               	movlb	0	; () banked
  7462  000A42  6F93               	movwf	??_sprintf& (0+255),b
  7463  000A44  0E00               	movlw	0
  7464  000A46  0100               	movlb	0	; () banked
  7465  000A48  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7466  000A4A  0100               	movlb	0	; () banked
  7467  000A4C  6F94               	movwf	(??_sprintf+1)& (0+255),b
  7468  000A4E  0100               	movlb	0	; () banked
  7469  000A50  5193               	movf	??_sprintf& (0+255),w,b
  7470  000A52  0100               	movlb	0	; () banked
  7471  000A54  1194               	iorwf	(??_sprintf+1)& (0+255),w,b
  7472  000A56  B4D8               	btfsc	status,2,c
  7473  000A58  D004               	goto	l4595
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;doprnt.c: 1346: width--;
  7477  000A5A  0100               	movlb	0	; () banked
  7478  000A5C  07A0               	decf	sprintf@width& (0+255),f,b
  7479  000A5E  A0D8               	btfss	status,0,c
  7480  000A60  07A1               	decf	(sprintf@width+1)& (0+255),f,b
  7481  000A62                     l4595:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;doprnt.c: 1348: if(flag & 0x4000) {
  7485  000A62  0100               	movlb	0	; () banked
  7486  000A64  AD9F               	btfss	(sprintf@flag+1)& (0+255),6,b
  7487  000A66  D01E               	goto	l4603
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;doprnt.c: 1349: if(width > prec)
  7491  000A68  0100               	movlb	0	; () banked
  7492  000A6A  51A0               	movf	sprintf@width& (0+255),w,b
  7493  000A6C  0100               	movlb	0	; () banked
  7494  000A6E  5DAF               	subwf	sprintf@prec& (0+255),w,b
  7495  000A70  0100               	movlb	0	; () banked
  7496  000A72  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  7497  000A74  0A80               	xorlw	128
  7498  000A76  0100               	movlb	0	; () banked
  7499  000A78  6F93               	movwf	??_sprintf& (0+255),b
  7500  000A7A  0100               	movlb	0	; () banked
  7501  000A7C  51A1               	movf	(sprintf@width+1)& (0+255),w,b
  7502  000A7E  0A80               	xorlw	128
  7503  000A80  0100               	movlb	0	; () banked
  7504  000A82  5993               	subwfb	??_sprintf& (0+255),w,b
  7505  000A84  B0D8               	btfsc	status,0,c
  7506  000A86  D009               	goto	l4601
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;doprnt.c: 1350: width -= prec;
  7510  000A88  0100               	movlb	0	; () banked
  7511  000A8A  51AF               	movf	sprintf@prec& (0+255),w,b
  7512  000A8C  0100               	movlb	0	; () banked
  7513  000A8E  5FA0               	subwf	sprintf@width& (0+255),f,b
  7514  000A90  0100               	movlb	0	; () banked
  7515  000A92  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
  7516  000A94  0100               	movlb	0	; () banked
  7517  000A96  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7518  000A98  D005               	goto	l4603
  7519  000A9A                     l4601:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;doprnt.c: 1351: else
  7523                           ;doprnt.c: 1352: width = 0;
  7524  000A9A  0E00               	movlw	0
  7525  000A9C  0100               	movlb	0	; () banked
  7526  000A9E  6FA1               	movwf	(sprintf@width+1)& (0+255),b
  7527  000AA0  0E00               	movlw	0
  7528  000AA2  6FA0               	movwf	sprintf@width& (0+255),b
  7529  000AA4                     l4603:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;doprnt.c: 1353: }
  7533                           ;doprnt.c: 1381: if(width > c)
  7534  000AA4  0E80               	movlw	128
  7535  000AA6  0100               	movlb	0	; () banked
  7536  000AA8  BFB1               	btfsc	sprintf@c& (0+255),7,b
  7537  000AAA  0E7F               	movlw	127
  7538  000AAC  0100               	movlb	0	; () banked
  7539  000AAE  6F93               	movwf	??_sprintf& (0+255),b
  7540  000AB0  0100               	movlb	0	; () banked
  7541  000AB2  51A0               	movf	sprintf@width& (0+255),w,b
  7542  000AB4  0100               	movlb	0	; () banked
  7543  000AB6  5DB1               	subwf	sprintf@c& (0+255),w,b
  7544  000AB8  0100               	movlb	0	; () banked
  7545  000ABA  51A1               	movf	(sprintf@width+1)& (0+255),w,b
  7546  000ABC  0A80               	xorlw	128
  7547  000ABE  0100               	movlb	0	; () banked
  7548  000AC0  5993               	subwfb	??_sprintf& (0+255),w,b
  7549  000AC2  B0D8               	btfsc	status,0,c
  7550  000AC4  D00B               	goto	l4607
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;doprnt.c: 1382: width -= c;
  7554  000AC6  0100               	movlb	0	; () banked
  7555  000AC8  51B1               	movf	sprintf@c& (0+255),w,b
  7556  000ACA  0100               	movlb	0	; () banked
  7557  000ACC  5FA0               	subwf	sprintf@width& (0+255),f,b
  7558  000ACE  0E00               	movlw	0
  7559  000AD0  0100               	movlb	0	; () banked
  7560  000AD2  BFB1               	btfsc	sprintf@c& (0+255),7,b
  7561  000AD4  0EFF               	movlw	255
  7562  000AD6  0100               	movlb	0	; () banked
  7563  000AD8  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7564  000ADA  D005               	goto	l4609
  7565  000ADC                     l4607:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;doprnt.c: 1383: else
  7569                           ;doprnt.c: 1384: width = 0;
  7570  000ADC  0E00               	movlw	0
  7571  000ADE  0100               	movlb	0	; () banked
  7572  000AE0  6FA1               	movwf	(sprintf@width+1)& (0+255),b
  7573  000AE2  0E00               	movlw	0
  7574  000AE4  6FA0               	movwf	sprintf@width& (0+255),b
  7575  000AE6                     l4609:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;doprnt.c: 1422: {
  7579                           ;doprnt.c: 1424: if(width
  7580                           ;doprnt.c: 1428: )
  7581  000AE6  0100               	movlb	0	; () banked
  7582  000AE8  51A0               	movf	sprintf@width& (0+255),w,b
  7583  000AEA  0100               	movlb	0	; () banked
  7584  000AEC  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
  7585  000AEE  B4D8               	btfsc	status,2,c
  7586  000AF0  D013               	goto	l4617
  7587  000AF2                     l4611:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7591  000AF2  C085  FFD9         	movff	sprintf@sp,fsr2l
  7592  000AF6  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7593  000AFA  0E20               	movlw	32
  7594  000AFC  6EDF               	movwf	indf2,c
  7595                           
  7596                           ; BSR set to: 0
  7597  000AFE  0100               	movlb	0	; () banked
  7598  000B00  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7599  000B02  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 1431: while(--width);
  7603  000B04  0100               	movlb	0	; () banked
  7604  000B06  07A0               	decf	sprintf@width& (0+255),f,b
  7605  000B08  A0D8               	btfss	status,0,c
  7606  000B0A  07A1               	decf	(sprintf@width+1)& (0+255),f,b
  7607  000B0C  0100               	movlb	0	; () banked
  7608  000B0E  51A0               	movf	sprintf@width& (0+255),w,b
  7609  000B10  0100               	movlb	0	; () banked
  7610  000B12  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
  7611  000B14  A4D8               	btfss	status,2,c
  7612  000B16  D7ED               	goto	l4611
  7613  000B18                     l4617:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;doprnt.c: 1438: if(flag & 0x03)
  7617  000B18  0E03               	movlw	3
  7618  000B1A  0100               	movlb	0	; () banked
  7619  000B1C  159E               	andwf	sprintf@flag& (0+255),w,b
  7620  000B1E  0100               	movlb	0	; () banked
  7621  000B20  6F93               	movwf	??_sprintf& (0+255),b
  7622  000B22  0E00               	movlw	0
  7623  000B24  0100               	movlb	0	; () banked
  7624  000B26  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7625  000B28  0100               	movlb	0	; () banked
  7626  000B2A  6F94               	movwf	(??_sprintf+1)& (0+255),b
  7627  000B2C  0100               	movlb	0	; () banked
  7628  000B2E  5193               	movf	??_sprintf& (0+255),w,b
  7629  000B30  0100               	movlb	0	; () banked
  7630  000B32  1194               	iorwf	(??_sprintf+1)& (0+255),w,b
  7631  000B34  B4D8               	btfsc	status,2,c
  7632  000B36  D04F               	goto	l4629
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7636  000B38  C085  FFD9         	movff	sprintf@sp,fsr2l
  7637  000B3C  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7638  000B40  0E2D               	movlw	45
  7639  000B42  6EDF               	movwf	indf2,c
  7640  000B44  D045               	goto	l4627
  7641  000B46                     l4623:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;doprnt.c: 1478: {
  7645                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7646  000B46  C0AF  F093         	movff	sprintf@prec,??_sprintf
  7647  000B4A  C0B0  F094         	movff	sprintf@prec+1,??_sprintf+1
  7648  000B4E  0100               	movlb	0	; () banked
  7649  000B50  90D8               	bcf	status,0,c
  7650  000B52  3793               	rlcf	??_sprintf& (0+255),f,b
  7651  000B54  3794               	rlcf	(??_sprintf+1)& (0+255),f,b
  7652  000B56  0100               	movlb	0	; () banked
  7653  000B58  90D8               	bcf	status,0,c
  7654  000B5A  3793               	rlcf	??_sprintf& (0+255),f,b
  7655  000B5C  3794               	rlcf	(??_sprintf+1)& (0+255),f,b
  7656  000B5E  0EF5               	movlw	low _dpowers
  7657  000B60  0100               	movlb	0	; () banked
  7658  000B62  2593               	addwf	??_sprintf& (0+255),w,b
  7659  000B64  6EF6               	movwf	tblptrl,c
  7660  000B66  0E7E               	movlw	high _dpowers
  7661  000B68  2194               	addwfc	(??_sprintf+1)& (0+255),w,b
  7662  000B6A  6EF7               	movwf	tblptrh,c
  7663  000B6C                     	if	0	;There are less than 3 active tblptr bytes
  7664  000B6C                     	endif
  7665  000B6C  0009               	tblrd		*+
  7666  000B6E  CFF5 F025          	movff	tablat,___lldiv@divisor
  7667  000B72  0009               	tblrd		*+
  7668  000B74  CFF5 F026          	movff	tablat,___lldiv@divisor+1
  7669  000B78  0009               	tblrd		*+
  7670  000B7A  CFF5 F027          	movff	tablat,___lldiv@divisor+2
  7671  000B7E  000A               	tblrd		*-
  7672  000B80  CFF5 F028          	movff	tablat,___lldiv@divisor+3
  7673  000B84  C0A6  F021         	movff	sprintf@val,___lldiv@dividend
  7674  000B88  C0A7  F022         	movff	sprintf@val+1,___lldiv@dividend+1
  7675  000B8C  C0A8  F023         	movff	sprintf@val+2,___lldiv@dividend+2
  7676  000B90  C0A9  F024         	movff	sprintf@val+3,___lldiv@dividend+3
  7677  000B94  EC3C  F017         	call	___lldiv	;wreg free
  7678  000B98  C021  F02E         	movff	?___lldiv,___llmod@dividend
  7679  000B9C  C022  F02F         	movff	?___lldiv+1,___llmod@dividend+1
  7680  000BA0  C023  F030         	movff	?___lldiv+2,___llmod@dividend+2
  7681  000BA4  C024  F031         	movff	?___lldiv+3,___llmod@dividend+3
  7682  000BA8  0E0A               	movlw	10
  7683  000BAA  6E32               	movwf	___llmod@divisor,c
  7684  000BAC  0E00               	movlw	0
  7685  000BAE  6E33               	movwf	___llmod@divisor+1,c
  7686  000BB0  0E00               	movlw	0
  7687  000BB2  6E34               	movwf	___llmod@divisor+2,c
  7688  000BB4  0E00               	movlw	0
  7689  000BB6  6E35               	movwf	___llmod@divisor+3,c
  7690  000BB8  ECB5  F017         	call	___llmod	;wreg free
  7691  000BBC  502E               	movf	?___llmod,w,c
  7692  000BBE  0F30               	addlw	48
  7693  000BC0  0100               	movlb	0	; () banked
  7694  000BC2  6FB1               	movwf	sprintf@c& (0+255),b
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;doprnt.c: 1523: }
  7698                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7699  000BC4  C085  FFD9         	movff	sprintf@sp,fsr2l
  7700  000BC8  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7701  000BCC  C0B1  FFDF         	movff	sprintf@c,indf2
  7702  000BD0                     l4627:
  7703                           
  7704                           ; BSR set to: 0
  7705  000BD0  0100               	movlb	0	; () banked
  7706  000BD2  4B85               	infsnz	sprintf@sp& (0+255),f,b
  7707  000BD4  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  7708  000BD6                     l4629:
  7709                           
  7710                           ; BSR set to: 0
  7711  000BD6  0100               	movlb	0	; () banked
  7712  000BD8  07AF               	decf	sprintf@prec& (0+255),f,b
  7713  000BDA  A0D8               	btfss	status,0,c
  7714  000BDC  07B0               	decf	(sprintf@prec+1)& (0+255),f,b
  7715  000BDE  0100               	movlb	0	; () banked
  7716  000BE0  29AF               	incf	sprintf@prec& (0+255),w,b
  7717  000BE2  E1B1               	bnz	l4623
  7718  000BE4  0100               	movlb	0	; () banked
  7719  000BE6  29B0               	incf	(sprintf@prec+1)& (0+255),w,b
  7720  000BE8  A4D8               	btfss	status,2,c
  7721  000BEA  D7AD               	goto	l4623
  7722  000BEC                     l4631:
  7723                           
  7724                           ; BSR set to: 0
  7725  000BEC  C087  FFF6         	movff	sprintf@f,tblptrl
  7726  000BF0  C088  FFF7         	movff	sprintf@f+1,tblptrh
  7727  000BF4  0100               	movlb	0	; () banked
  7728  000BF6  4B87               	infsnz	sprintf@f& (0+255),f,b
  7729  000BF8  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  7730  000BFA                     	if	0	;tblptru may be non-zero
  7731  000BFA                     	endif
  7732  000BFA                     	if	0	;tblptru may be non-zero
  7733  000BFA                     	endif
  7734  000BFA  0008               	tblrd		*
  7735  000BFC  CFF5 F0B1          	movff	tablat,sprintf@c
  7736  000C00  0100               	movlb	0	; () banked
  7737  000C02  51B1               	movf	sprintf@c& (0+255),w,b
  7738  000C04  A4D8               	btfss	status,2,c
  7739  000C06  EF5D  F000         	goto	l4345
  7740  000C0A                     l4633:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;doprnt.c: 1538: *sp = 0;
  7744  000C0A  C085  FFD9         	movff	sprintf@sp,fsr2l
  7745  000C0E  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  7746  000C12  0E00               	movlw	0
  7747  000C14  6EDF               	movwf	indf2,c
  7748  000C16  0012               	return	
  7749  000C18                     __end_of_sprintf:
  7750                           	opt stack 0
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           prodh	equ	0xFF4
  7756                           prodl	equ	0xFF3
  7757                           indf0	equ	0xFEF
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           indf1	equ	0xFE7
  7762                           fsr1h	equ	0xFE2
  7763                           fsr1l	equ	0xFE1
  7764                           indf2	equ	0xFDF
  7765                           postinc2	equ	0xFDE
  7766                           postdec2	equ	0xFDD
  7767                           fsr2h	equ	0xFDA
  7768                           fsr2l	equ	0xFD9
  7769                           status	equ	0xFD8
  7770                           
  7771 ;; *************** function _scale *****************
  7772 ;; Defined at:
  7773 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  scl             1    wreg     char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  scl             1   15[BANK0 ] char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  3    9[BANK0 ] char 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7787 ;;      Params:         0       3       0       0       0       0       0
  7788 ;;      Locals:         0       4       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0
  7790 ;;      Totals:         0       7       0       0       0       0       0
  7791 ;;Total ram usage:        7 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    4
  7794 ;; This function calls:
  7795 ;;		___awdiv
  7796 ;;		___awmod
  7797 ;;		___ftmul
  7798 ;;		___wmul
  7799 ;; This function is called by:
  7800 ;;		_sprintf
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text32
  7805  00136C                     __ptext32:
  7806                           	opt stack 0
  7807  00136C                     _scale:
  7808                           	opt stack 23
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;incstack = 0
  7812                           ;scale@scl stored from wreg
  7813  00136C  0100               	movlb	0	; () banked
  7814  00136E  6F6F               	movwf	scale@scl& (0+255),b
  7815                           
  7816                           ;doprnt.c: 428: if(scl < 0) {
  7817  001370  0100               	movlb	0	; () banked
  7818  001372  AF6F               	btfss	scale@scl& (0+255),7,b
  7819  001374  D104               	goto	l4325
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;doprnt.c: 429: scl = -scl;
  7823  001376  0100               	movlb	0	; () banked
  7824  001378  6D6F               	negf	scale@scl& (0+255),b
  7825                           
  7826                           ;doprnt.c: 430: if(scl>=110)
  7827  00137A  0100               	movlb	0	; () banked
  7828  00137C  516F               	movf	scale@scl& (0+255),w,b
  7829  00137E  0A80               	xorlw	128
  7830  001380  0F12               	addlw	-238
  7831  001382  A0D8               	btfss	status,0,c
  7832  001384  D094               	goto	l4315
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7836  001386  0E00               	movlw	0
  7837  001388  6E32               	movwf	___wmul@multiplicand+1,c
  7838  00138A  0E03               	movlw	3
  7839  00138C  6E31               	movwf	___wmul@multiplicand,c
  7840  00138E  0E00               	movlw	0
  7841  001390  6E2A               	movwf	___awdiv@divisor+1,c
  7842  001392  0E0A               	movlw	10
  7843  001394  6E29               	movwf	___awdiv@divisor,c
  7844  001396  0E00               	movlw	0
  7845  001398  6E24               	movwf	___awmod@divisor+1,c
  7846  00139A  0E64               	movlw	100
  7847  00139C  6E23               	movwf	___awmod@divisor,c
  7848  00139E  0100               	movlb	0	; () banked
  7849  0013A0  516F               	movf	scale@scl& (0+255),w,b
  7850  0013A2  6E21               	movwf	___awmod@dividend,c
  7851  0013A4  6A22               	clrf	___awmod@dividend+1,c
  7852  0013A6  BE21               	btfsc	___awmod@dividend,7,c
  7853  0013A8  0622               	decf	___awmod@dividend+1,f,c
  7854  0013AA  EC7D  F017         	call	___awmod	;wreg free
  7855  0013AE  C021  F027         	movff	?___awmod,___awdiv@dividend
  7856  0013B2  C022  F028         	movff	?___awmod+1,___awdiv@dividend+1
  7857  0013B6  ECFA  F016         	call	___awdiv	;wreg free
  7858  0013BA  0E09               	movlw	9
  7859  0013BC  2427               	addwf	?___awdiv,w,c
  7860  0013BE  6E2F               	movwf	___wmul@multiplier,c
  7861  0013C0  0E00               	movlw	0
  7862  0013C2  2028               	addwfc	?___awdiv+1,w,c
  7863  0013C4  6E30               	movwf	___wmul@multiplier+1,c
  7864  0013C6  EC07  F01A         	call	___wmul	;wreg free
  7865  0013CA  0E1D               	movlw	low __npowers_
  7866  0013CC  242F               	addwf	?___wmul,w,c
  7867  0013CE  6EF6               	movwf	tblptrl,c
  7868  0013D0  0E7F               	movlw	high __npowers_
  7869  0013D2  2030               	addwfc	?___wmul+1,w,c
  7870  0013D4  6EF7               	movwf	tblptrh,c
  7871  0013D6                     	if	0	;There are less than 3 active tblptr bytes
  7872  0013D6                     	endif
  7873  0013D6  0009               	tblrd		*+
  7874  0013D8  CFF5 F038          	movff	tablat,___ftmul@f2
  7875  0013DC  0009               	tblrd		*+
  7876  0013DE  CFF5 F039          	movff	tablat,___ftmul@f2+1
  7877  0013E2  000A               	tblrd		*-
  7878  0013E4  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  7879  0013E8  0E00               	movlw	0
  7880  0013EA  6E2A               	movwf	___awdiv@divisor+1,c
  7881  0013EC  0E64               	movlw	100
  7882  0013EE  6E29               	movwf	___awdiv@divisor,c
  7883  0013F0  0100               	movlb	0	; () banked
  7884  0013F2  516F               	movf	scale@scl& (0+255),w,b
  7885  0013F4  6E27               	movwf	___awdiv@dividend,c
  7886  0013F6  6A28               	clrf	___awdiv@dividend+1,c
  7887  0013F8  BE27               	btfsc	___awdiv@dividend,7,c
  7888  0013FA  0628               	decf	___awdiv@dividend+1,f,c
  7889  0013FC  ECFA  F016         	call	___awdiv	;wreg free
  7890  001400  0E12               	movlw	18
  7891  001402  2427               	addwf	?___awdiv,w,c
  7892  001404  6E2F               	movwf	___wmul@multiplier,c
  7893  001406  0E00               	movlw	0
  7894  001408  2028               	addwfc	?___awdiv+1,w,c
  7895  00140A  6E30               	movwf	___wmul@multiplier+1,c
  7896  00140C  0E00               	movlw	0
  7897  00140E  6E32               	movwf	___wmul@multiplicand+1,c
  7898  001410  0E03               	movlw	3
  7899  001412  6E31               	movwf	___wmul@multiplicand,c
  7900  001414  EC07  F01A         	call	___wmul	;wreg free
  7901  001418  0E1D               	movlw	low __npowers_
  7902  00141A  242F               	addwf	?___wmul,w,c
  7903  00141C  6EF6               	movwf	tblptrl,c
  7904  00141E  0E7F               	movlw	high __npowers_
  7905  001420  2030               	addwfc	?___wmul+1,w,c
  7906  001422  6EF7               	movwf	tblptrh,c
  7907  001424                     	if	0	;There are less than 3 active tblptr bytes
  7908  001424                     	endif
  7909  001424  0009               	tblrd		*+
  7910  001426  CFF5 F035          	movff	tablat,___ftmul@f1
  7911  00142A  0009               	tblrd		*+
  7912  00142C  CFF5 F036          	movff	tablat,___ftmul@f1+1
  7913  001430  000A               	tblrd		*-
  7914  001432  CFF5 F037          	movff	tablat,___ftmul@f1+2
  7915  001436  EC54  F012         	call	___ftmul	;wreg free
  7916  00143A  C035  F06C         	movff	?___ftmul,_scale$2084
  7917  00143E  C036  F06D         	movff	?___ftmul+1,_scale$2084+1
  7918  001442  C037  F06E         	movff	?___ftmul+2,_scale$2084+2
  7919                           
  7920                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7921  001446  C06C  F035         	movff	_scale$2084,___ftmul@f1
  7922  00144A  C06D  F036         	movff	_scale$2084+1,___ftmul@f1+1
  7923  00144E  C06E  F037         	movff	_scale$2084+2,___ftmul@f1+2
  7924  001452  0E00               	movlw	0
  7925  001454  6E32               	movwf	___wmul@multiplicand+1,c
  7926  001456  0E03               	movlw	3
  7927  001458  6E31               	movwf	___wmul@multiplicand,c
  7928  00145A  0E00               	movlw	0
  7929  00145C  6E24               	movwf	___awmod@divisor+1,c
  7930  00145E  0E0A               	movlw	10
  7931  001460  6E23               	movwf	___awmod@divisor,c
  7932  001462  0100               	movlb	0	; () banked
  7933  001464  516F               	movf	scale@scl& (0+255),w,b
  7934  001466  6E21               	movwf	___awmod@dividend,c
  7935  001468  6A22               	clrf	___awmod@dividend+1,c
  7936  00146A  BE21               	btfsc	___awmod@dividend,7,c
  7937  00146C  0622               	decf	___awmod@dividend+1,f,c
  7938  00146E  EC7D  F017         	call	___awmod	;wreg free
  7939  001472  C021  F02F         	movff	?___awmod,___wmul@multiplier
  7940  001476  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  7941  00147A  EC07  F01A         	call	___wmul	;wreg free
  7942  00147E  0E1D               	movlw	low __npowers_
  7943  001480  242F               	addwf	?___wmul,w,c
  7944  001482  6EF6               	movwf	tblptrl,c
  7945  001484  0E7F               	movlw	high __npowers_
  7946  001486  2030               	addwfc	?___wmul+1,w,c
  7947  001488  6EF7               	movwf	tblptrh,c
  7948  00148A                     	if	0	;There are less than 3 active tblptr bytes
  7949  00148A                     	endif
  7950  00148A  0009               	tblrd		*+
  7951  00148C  CFF5 F038          	movff	tablat,___ftmul@f2
  7952  001490  0009               	tblrd		*+
  7953  001492  CFF5 F039          	movff	tablat,___ftmul@f2+1
  7954  001496  000A               	tblrd		*-
  7955  001498  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  7956  00149C  EC54  F012         	call	___ftmul	;wreg free
  7957  0014A0  C035  F069         	movff	?___ftmul,?_scale
  7958  0014A4  C036  F06A         	movff	?___ftmul+1,?_scale+1
  7959  0014A8  C037  F06B         	movff	?___ftmul+2,?_scale+2
  7960  0014AC  0012               	return	
  7961  0014AE                     l4315:
  7962                           
  7963                           ;doprnt.c: 432: else if(scl > 10)
  7964  0014AE  0100               	movlb	0	; () banked
  7965  0014B0  516F               	movf	scale@scl& (0+255),w,b
  7966  0014B2  0A80               	xorlw	128
  7967  0014B4  0F75               	addlw	-139
  7968  0014B6  A0D8               	btfss	status,0,c
  7969  0014B8  D04F               	goto	l4321
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7973  0014BA  0E00               	movlw	0
  7974  0014BC  6E2A               	movwf	___awdiv@divisor+1,c
  7975  0014BE  0E0A               	movlw	10
  7976  0014C0  6E29               	movwf	___awdiv@divisor,c
  7977  0014C2  0100               	movlb	0	; () banked
  7978  0014C4  516F               	movf	scale@scl& (0+255),w,b
  7979  0014C6  6E27               	movwf	___awdiv@dividend,c
  7980  0014C8  6A28               	clrf	___awdiv@dividend+1,c
  7981  0014CA  BE27               	btfsc	___awdiv@dividend,7,c
  7982  0014CC  0628               	decf	___awdiv@dividend+1,f,c
  7983  0014CE  ECFA  F016         	call	___awdiv	;wreg free
  7984  0014D2  0E09               	movlw	9
  7985  0014D4  2427               	addwf	?___awdiv,w,c
  7986  0014D6  6E2F               	movwf	___wmul@multiplier,c
  7987  0014D8  0E00               	movlw	0
  7988  0014DA  2028               	addwfc	?___awdiv+1,w,c
  7989  0014DC  6E30               	movwf	___wmul@multiplier+1,c
  7990  0014DE  0E00               	movlw	0
  7991  0014E0  6E32               	movwf	___wmul@multiplicand+1,c
  7992  0014E2  0E03               	movlw	3
  7993  0014E4  6E31               	movwf	___wmul@multiplicand,c
  7994  0014E6  EC07  F01A         	call	___wmul	;wreg free
  7995  0014EA  0E1D               	movlw	low __npowers_
  7996  0014EC  242F               	addwf	?___wmul,w,c
  7997  0014EE  6EF6               	movwf	tblptrl,c
  7998  0014F0  0E7F               	movlw	high __npowers_
  7999  0014F2  2030               	addwfc	?___wmul+1,w,c
  8000  0014F4  6EF7               	movwf	tblptrh,c
  8001  0014F6                     	if	0	;There are less than 3 active tblptr bytes
  8002  0014F6                     	endif
  8003  0014F6  0009               	tblrd		*+
  8004  0014F8  CFF5 F035          	movff	tablat,___ftmul@f1
  8005  0014FC  0009               	tblrd		*+
  8006  0014FE  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8007  001502  000A               	tblrd		*-
  8008  001504  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8009  001508  0E00               	movlw	0
  8010  00150A  6E32               	movwf	___wmul@multiplicand+1,c
  8011  00150C  0E03               	movlw	3
  8012  00150E  6E31               	movwf	___wmul@multiplicand,c
  8013  001510  0E00               	movlw	0
  8014  001512  6E24               	movwf	___awmod@divisor+1,c
  8015  001514  0E0A               	movlw	10
  8016  001516  6E23               	movwf	___awmod@divisor,c
  8017  001518  0100               	movlb	0	; () banked
  8018  00151A  516F               	movf	scale@scl& (0+255),w,b
  8019  00151C  6E21               	movwf	___awmod@dividend,c
  8020  00151E  6A22               	clrf	___awmod@dividend+1,c
  8021  001520  BE21               	btfsc	___awmod@dividend,7,c
  8022  001522  0622               	decf	___awmod@dividend+1,f,c
  8023  001524  EC7D  F017         	call	___awmod	;wreg free
  8024  001528  C021  F02F         	movff	?___awmod,___wmul@multiplier
  8025  00152C  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  8026  001530  EC07  F01A         	call	___wmul	;wreg free
  8027  001534  0E1D               	movlw	low __npowers_
  8028  001536  242F               	addwf	?___wmul,w,c
  8029  001538  6EF6               	movwf	tblptrl,c
  8030  00153A  0E7F               	movlw	high __npowers_
  8031  00153C  2030               	addwfc	?___wmul+1,w,c
  8032  00153E  6EF7               	movwf	tblptrh,c
  8033  001540                     	if	0	;There are less than 3 active tblptr bytes
  8034  001540                     	endif
  8035  001540  0009               	tblrd		*+
  8036  001542  CFF5 F038          	movff	tablat,___ftmul@f2
  8037  001546  0009               	tblrd		*+
  8038  001548  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8039  00154C  000A               	tblrd		*-
  8040  00154E  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8041  001552  EC54  F012         	call	___ftmul	;wreg free
  8042  001556  D7A4               	goto	L6
  8043  001558                     l4321:
  8044                           
  8045                           ;doprnt.c: 434: return _npowers_[scl];
  8046  001558  0100               	movlb	0	; () banked
  8047  00155A  516F               	movf	scale@scl& (0+255),w,b
  8048  00155C  0D03               	mullw	3
  8049  00155E  0E1D               	movlw	low __npowers_
  8050  001560  24F3               	addwf	prodl,w,c
  8051  001562  6EF6               	movwf	tblptrl,c
  8052  001564  0E7F               	movlw	high __npowers_
  8053  001566  20F4               	addwfc	prodh,w,c
  8054  001568  6EF7               	movwf	tblptrh,c
  8055  00156A                     	if	0	;There are less than 3 active tblptr bytes
  8056  00156A                     	endif
  8057  00156A  0009               	tblrd		*+
  8058  00156C  CFF5 F069          	movff	tablat,?_scale
  8059  001570  0009               	tblrd		*+
  8060  001572  CFF5 F06A          	movff	tablat,?_scale+1
  8061  001576  000A               	tblrd		*-
  8062  001578  CFF5 F06B          	movff	tablat,?_scale+2
  8063                           
  8064                           ; BSR set to: 0
  8065  00157C  0012               	return	
  8066  00157E                     l4325:
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;doprnt.c: 435: }
  8070                           ;doprnt.c: 436: if(scl>=110)
  8071  00157E  0100               	movlb	0	; () banked
  8072  001580  516F               	movf	scale@scl& (0+255),w,b
  8073  001582  0A80               	xorlw	128
  8074  001584  0F12               	addlw	-238
  8075  001586  A0D8               	btfss	status,0,c
  8076  001588  D094               	goto	l4333
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8080  00158A  0E00               	movlw	0
  8081  00158C  6E32               	movwf	___wmul@multiplicand+1,c
  8082  00158E  0E03               	movlw	3
  8083  001590  6E31               	movwf	___wmul@multiplicand,c
  8084  001592  0E00               	movlw	0
  8085  001594  6E2A               	movwf	___awdiv@divisor+1,c
  8086  001596  0E0A               	movlw	10
  8087  001598  6E29               	movwf	___awdiv@divisor,c
  8088  00159A  0E00               	movlw	0
  8089  00159C  6E24               	movwf	___awmod@divisor+1,c
  8090  00159E  0E64               	movlw	100
  8091  0015A0  6E23               	movwf	___awmod@divisor,c
  8092  0015A2  0100               	movlb	0	; () banked
  8093  0015A4  516F               	movf	scale@scl& (0+255),w,b
  8094  0015A6  6E21               	movwf	___awmod@dividend,c
  8095  0015A8  6A22               	clrf	___awmod@dividend+1,c
  8096  0015AA  BE21               	btfsc	___awmod@dividend,7,c
  8097  0015AC  0622               	decf	___awmod@dividend+1,f,c
  8098  0015AE  EC7D  F017         	call	___awmod	;wreg free
  8099  0015B2  C021  F027         	movff	?___awmod,___awdiv@dividend
  8100  0015B6  C022  F028         	movff	?___awmod+1,___awdiv@dividend+1
  8101  0015BA  ECFA  F016         	call	___awdiv	;wreg free
  8102  0015BE  0E09               	movlw	9
  8103  0015C0  2427               	addwf	?___awdiv,w,c
  8104  0015C2  6E2F               	movwf	___wmul@multiplier,c
  8105  0015C4  0E00               	movlw	0
  8106  0015C6  2028               	addwfc	?___awdiv+1,w,c
  8107  0015C8  6E30               	movwf	___wmul@multiplier+1,c
  8108  0015CA  EC07  F01A         	call	___wmul	;wreg free
  8109  0015CE  0E44               	movlw	low __powers_
  8110  0015D0  242F               	addwf	?___wmul,w,c
  8111  0015D2  6EF6               	movwf	tblptrl,c
  8112  0015D4  0E7F               	movlw	high __powers_
  8113  0015D6  2030               	addwfc	?___wmul+1,w,c
  8114  0015D8  6EF7               	movwf	tblptrh,c
  8115  0015DA                     	if	0	;There are less than 3 active tblptr bytes
  8116  0015DA                     	endif
  8117  0015DA  0009               	tblrd		*+
  8118  0015DC  CFF5 F038          	movff	tablat,___ftmul@f2
  8119  0015E0  0009               	tblrd		*+
  8120  0015E2  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8121  0015E6  000A               	tblrd		*-
  8122  0015E8  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8123  0015EC  0E00               	movlw	0
  8124  0015EE  6E2A               	movwf	___awdiv@divisor+1,c
  8125  0015F0  0E64               	movlw	100
  8126  0015F2  6E29               	movwf	___awdiv@divisor,c
  8127  0015F4  0100               	movlb	0	; () banked
  8128  0015F6  516F               	movf	scale@scl& (0+255),w,b
  8129  0015F8  6E27               	movwf	___awdiv@dividend,c
  8130  0015FA  6A28               	clrf	___awdiv@dividend+1,c
  8131  0015FC  BE27               	btfsc	___awdiv@dividend,7,c
  8132  0015FE  0628               	decf	___awdiv@dividend+1,f,c
  8133  001600  ECFA  F016         	call	___awdiv	;wreg free
  8134  001604  0E12               	movlw	18
  8135  001606  2427               	addwf	?___awdiv,w,c
  8136  001608  6E2F               	movwf	___wmul@multiplier,c
  8137  00160A  0E00               	movlw	0
  8138  00160C  2028               	addwfc	?___awdiv+1,w,c
  8139  00160E  6E30               	movwf	___wmul@multiplier+1,c
  8140  001610  0E00               	movlw	0
  8141  001612  6E32               	movwf	___wmul@multiplicand+1,c
  8142  001614  0E03               	movlw	3
  8143  001616  6E31               	movwf	___wmul@multiplicand,c
  8144  001618  EC07  F01A         	call	___wmul	;wreg free
  8145  00161C  0E44               	movlw	low __powers_
  8146  00161E  242F               	addwf	?___wmul,w,c
  8147  001620  6EF6               	movwf	tblptrl,c
  8148  001622  0E7F               	movlw	high __powers_
  8149  001624  2030               	addwfc	?___wmul+1,w,c
  8150  001626  6EF7               	movwf	tblptrh,c
  8151  001628                     	if	0	;There are less than 3 active tblptr bytes
  8152  001628                     	endif
  8153  001628  0009               	tblrd		*+
  8154  00162A  CFF5 F035          	movff	tablat,___ftmul@f1
  8155  00162E  0009               	tblrd		*+
  8156  001630  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8157  001634  000A               	tblrd		*-
  8158  001636  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8159  00163A  EC54  F012         	call	___ftmul	;wreg free
  8160  00163E  C035  F06C         	movff	?___ftmul,_scale$2084
  8161  001642  C036  F06D         	movff	?___ftmul+1,_scale$2084+1
  8162  001646  C037  F06E         	movff	?___ftmul+2,_scale$2084+2
  8163                           
  8164                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8165  00164A  C06C  F035         	movff	_scale$2084,___ftmul@f1
  8166  00164E  C06D  F036         	movff	_scale$2084+1,___ftmul@f1+1
  8167  001652  C06E  F037         	movff	_scale$2084+2,___ftmul@f1+2
  8168  001656  0E00               	movlw	0
  8169  001658  6E32               	movwf	___wmul@multiplicand+1,c
  8170  00165A  0E03               	movlw	3
  8171  00165C  6E31               	movwf	___wmul@multiplicand,c
  8172  00165E  0E00               	movlw	0
  8173  001660  6E24               	movwf	___awmod@divisor+1,c
  8174  001662  0E0A               	movlw	10
  8175  001664  6E23               	movwf	___awmod@divisor,c
  8176  001666  0100               	movlb	0	; () banked
  8177  001668  516F               	movf	scale@scl& (0+255),w,b
  8178  00166A  6E21               	movwf	___awmod@dividend,c
  8179  00166C  6A22               	clrf	___awmod@dividend+1,c
  8180  00166E  BE21               	btfsc	___awmod@dividend,7,c
  8181  001670  0622               	decf	___awmod@dividend+1,f,c
  8182  001672  EC7D  F017         	call	___awmod	;wreg free
  8183  001676  C021  F02F         	movff	?___awmod,___wmul@multiplier
  8184  00167A  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  8185  00167E  EC07  F01A         	call	___wmul	;wreg free
  8186  001682  0E44               	movlw	low __powers_
  8187  001684  242F               	addwf	?___wmul,w,c
  8188  001686  6EF6               	movwf	tblptrl,c
  8189  001688  0E7F               	movlw	high __powers_
  8190  00168A  2030               	addwfc	?___wmul+1,w,c
  8191  00168C  6EF7               	movwf	tblptrh,c
  8192  00168E                     	if	0	;There are less than 3 active tblptr bytes
  8193  00168E                     	endif
  8194  00168E  0009               	tblrd		*+
  8195  001690  CFF5 F038          	movff	tablat,___ftmul@f2
  8196  001694  0009               	tblrd		*+
  8197  001696  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8198  00169A  000A               	tblrd		*-
  8199  00169C  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8200  0016A0  EC54  F012         	call	___ftmul	;wreg free
  8201  0016A4  C035  F069         	movff	?___ftmul,?_scale
  8202  0016A8  C036  F06A         	movff	?___ftmul+1,?_scale+1
  8203  0016AC  C037  F06B         	movff	?___ftmul+2,?_scale+2
  8204  0016B0  0012               	return	
  8205  0016B2                     l4333:
  8206                           
  8207                           ;doprnt.c: 438: else if(scl > 10)
  8208  0016B2  0100               	movlb	0	; () banked
  8209  0016B4  516F               	movf	scale@scl& (0+255),w,b
  8210  0016B6  0A80               	xorlw	128
  8211  0016B8  0F75               	addlw	-139
  8212  0016BA  A0D8               	btfss	status,0,c
  8213  0016BC  D04F               	goto	l4339
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8217  0016BE  0E00               	movlw	0
  8218  0016C0  6E2A               	movwf	___awdiv@divisor+1,c
  8219  0016C2  0E0A               	movlw	10
  8220  0016C4  6E29               	movwf	___awdiv@divisor,c
  8221  0016C6  0100               	movlb	0	; () banked
  8222  0016C8  516F               	movf	scale@scl& (0+255),w,b
  8223  0016CA  6E27               	movwf	___awdiv@dividend,c
  8224  0016CC  6A28               	clrf	___awdiv@dividend+1,c
  8225  0016CE  BE27               	btfsc	___awdiv@dividend,7,c
  8226  0016D0  0628               	decf	___awdiv@dividend+1,f,c
  8227  0016D2  ECFA  F016         	call	___awdiv	;wreg free
  8228  0016D6  0E09               	movlw	9
  8229  0016D8  2427               	addwf	?___awdiv,w,c
  8230  0016DA  6E2F               	movwf	___wmul@multiplier,c
  8231  0016DC  0E00               	movlw	0
  8232  0016DE  2028               	addwfc	?___awdiv+1,w,c
  8233  0016E0  6E30               	movwf	___wmul@multiplier+1,c
  8234  0016E2  0E00               	movlw	0
  8235  0016E4  6E32               	movwf	___wmul@multiplicand+1,c
  8236  0016E6  0E03               	movlw	3
  8237  0016E8  6E31               	movwf	___wmul@multiplicand,c
  8238  0016EA  EC07  F01A         	call	___wmul	;wreg free
  8239  0016EE  0E44               	movlw	low __powers_
  8240  0016F0  242F               	addwf	?___wmul,w,c
  8241  0016F2  6EF6               	movwf	tblptrl,c
  8242  0016F4  0E7F               	movlw	high __powers_
  8243  0016F6  2030               	addwfc	?___wmul+1,w,c
  8244  0016F8  6EF7               	movwf	tblptrh,c
  8245  0016FA                     	if	0	;There are less than 3 active tblptr bytes
  8246  0016FA                     	endif
  8247  0016FA  0009               	tblrd		*+
  8248  0016FC  CFF5 F035          	movff	tablat,___ftmul@f1
  8249  001700  0009               	tblrd		*+
  8250  001702  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8251  001706  000A               	tblrd		*-
  8252  001708  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8253  00170C  0E00               	movlw	0
  8254  00170E  6E32               	movwf	___wmul@multiplicand+1,c
  8255  001710  0E03               	movlw	3
  8256  001712  6E31               	movwf	___wmul@multiplicand,c
  8257  001714  0E00               	movlw	0
  8258  001716  6E24               	movwf	___awmod@divisor+1,c
  8259  001718  0E0A               	movlw	10
  8260  00171A  6E23               	movwf	___awmod@divisor,c
  8261  00171C  0100               	movlb	0	; () banked
  8262  00171E  516F               	movf	scale@scl& (0+255),w,b
  8263  001720  6E21               	movwf	___awmod@dividend,c
  8264  001722  6A22               	clrf	___awmod@dividend+1,c
  8265  001724  BE21               	btfsc	___awmod@dividend,7,c
  8266  001726  0622               	decf	___awmod@dividend+1,f,c
  8267  001728  EC7D  F017         	call	___awmod	;wreg free
  8268  00172C  C021  F02F         	movff	?___awmod,___wmul@multiplier
  8269  001730  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  8270  001734  EC07  F01A         	call	___wmul	;wreg free
  8271  001738  0E44               	movlw	low __powers_
  8272  00173A  242F               	addwf	?___wmul,w,c
  8273  00173C  6EF6               	movwf	tblptrl,c
  8274  00173E  0E7F               	movlw	high __powers_
  8275  001740  2030               	addwfc	?___wmul+1,w,c
  8276  001742  6EF7               	movwf	tblptrh,c
  8277  001744                     	if	0	;There are less than 3 active tblptr bytes
  8278  001744                     	endif
  8279  001744  0009               	tblrd		*+
  8280  001746  CFF5 F038          	movff	tablat,___ftmul@f2
  8281  00174A  0009               	tblrd		*+
  8282  00174C  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8283  001750  000A               	tblrd		*-
  8284  001752  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8285  001756  EC54  F012         	call	___ftmul	;wreg free
  8286  00175A  D7A4               	goto	L7
  8287  00175C                     l4339:
  8288                           
  8289                           ;doprnt.c: 440: return _powers_[scl];
  8290  00175C  0100               	movlb	0	; () banked
  8291  00175E  516F               	movf	scale@scl& (0+255),w,b
  8292  001760  0D03               	mullw	3
  8293  001762  0E44               	movlw	low __powers_
  8294  001764  24F3               	addwf	prodl,w,c
  8295  001766  6EF6               	movwf	tblptrl,c
  8296  001768  0E7F               	movlw	high __powers_
  8297  00176A  20F4               	addwfc	prodh,w,c
  8298  00176C  6EF7               	movwf	tblptrh,c
  8299  00176E                     	if	0	;There are less than 3 active tblptr bytes
  8300  00176E                     	endif
  8301  00176E  0009               	tblrd		*+
  8302  001770  CFF5 F069          	movff	tablat,?_scale
  8303  001774  0009               	tblrd		*+
  8304  001776  CFF5 F06A          	movff	tablat,?_scale+1
  8305  00177A  000A               	tblrd		*-
  8306  00177C  CFF5 F06B          	movff	tablat,?_scale+2
  8307  001780  0012               	return	
  8308  001782                     __end_of_scale:
  8309                           	opt stack 0
  8310                           tblptru	equ	0xFF8
  8311                           tblptrh	equ	0xFF7
  8312                           tblptrl	equ	0xFF6
  8313                           tablat	equ	0xFF5
  8314                           prodh	equ	0xFF4
  8315                           prodl	equ	0xFF3
  8316                           indf0	equ	0xFEF
  8317                           fsr0h	equ	0xFEA
  8318                           fsr0l	equ	0xFE9
  8319                           wreg	equ	0xFE8
  8320                           indf1	equ	0xFE7
  8321                           fsr1h	equ	0xFE2
  8322                           fsr1l	equ	0xFE1
  8323                           indf2	equ	0xFDF
  8324                           postinc2	equ	0xFDE
  8325                           postdec2	equ	0xFDD
  8326                           fsr2h	equ	0xFDA
  8327                           fsr2l	equ	0xFD9
  8328                           status	equ	0xFD8
  8329                           
  8330 ;; *************** function _isdigit *****************
  8331 ;; Defined at:
  8332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  c               1    wreg     unsigned char 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  c               1   34[COMRAM] unsigned char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;		None               void
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8346 ;;      Params:         0       0       0       0       0       0       0
  8347 ;;      Locals:         2       0       0       0       0       0       0
  8348 ;;      Temps:          1       0       0       0       0       0       0
  8349 ;;      Totals:         3       0       0       0       0       0       0
  8350 ;;Total ram usage:        3 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    2
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text33
  8361  0034C0                     __ptext33:
  8362                           	opt stack 0
  8363  0034C0                     _isdigit:
  8364                           	opt stack 25
  8365                           
  8366                           ;incstack = 0
  8367                           ;isdigit@c stored from wreg
  8368  0034C0  6E23               	movwf	isdigit@c,c
  8369  0034C2  0E00               	movlw	0
  8370  0034C4  6E22               	movwf	_isdigit$1739,c
  8371  0034C6  0E3A               	movlw	58
  8372  0034C8  6023               	cpfslt	isdigit@c,c
  8373  0034CA  D005               	goto	l3195
  8374  0034CC  0E2F               	movlw	47
  8375  0034CE  6423               	cpfsgt	isdigit@c,c
  8376  0034D0  D002               	goto	l3195
  8377  0034D2  0E01               	movlw	1
  8378  0034D4  6E22               	movwf	_isdigit$1739,c
  8379  0034D6                     l3195:
  8380  0034D6  C022  F021         	movff	_isdigit$1739,??_isdigit
  8381  0034DA  3021               	rrcf	??_isdigit,w,c
  8382  0034DC  0012               	return	
  8383  0034DE                     __end_of_isdigit:
  8384                           	opt stack 0
  8385                           tblptru	equ	0xFF8
  8386                           tblptrh	equ	0xFF7
  8387                           tblptrl	equ	0xFF6
  8388                           tablat	equ	0xFF5
  8389                           prodh	equ	0xFF4
  8390                           prodl	equ	0xFF3
  8391                           indf0	equ	0xFEF
  8392                           fsr0h	equ	0xFEA
  8393                           fsr0l	equ	0xFE9
  8394                           wreg	equ	0xFE8
  8395                           indf1	equ	0xFE7
  8396                           fsr1h	equ	0xFE2
  8397                           fsr1l	equ	0xFE1
  8398                           indf2	equ	0xFDF
  8399                           postinc2	equ	0xFDE
  8400                           postdec2	equ	0xFDD
  8401                           fsr2h	equ	0xFDA
  8402                           fsr2l	equ	0xFD9
  8403                           status	equ	0xFD8
  8404                           
  8405 ;; *************** function _fround *****************
  8406 ;; Defined at:
  8407 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  prec            1    wreg     unsigned char 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  prec            1   18[BANK0 ] unsigned char 
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  3    9[BANK0 ] unsigned char 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8421 ;;      Params:         0       3       0       0       0       0       0
  8422 ;;      Locals:         0       7       0       0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0       0       0
  8424 ;;      Totals:         0      10       0       0       0       0       0
  8425 ;;Total ram usage:       10 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    4
  8428 ;; This function calls:
  8429 ;;		___awdiv
  8430 ;;		___awmod
  8431 ;;		___ftmul
  8432 ;;		___wmul
  8433 ;; This function is called by:
  8434 ;;		_sprintf
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text34
  8439  001D36                     __ptext34:
  8440                           	opt stack 0
  8441  001D36                     _fround:
  8442                           	opt stack 23
  8443                           
  8444                           ;incstack = 0
  8445                           ;fround@prec stored from wreg
  8446  001D36  0100               	movlb	0	; () banked
  8447  001D38  6F72               	movwf	fround@prec& (0+255),b
  8448                           
  8449                           ;doprnt.c: 413: if(prec>=110)
  8450  001D3A  0E6D               	movlw	109
  8451  001D3C  0100               	movlb	0	; () banked
  8452  001D3E  6572               	cpfsgt	fround@prec& (0+255),b
  8453  001D40  D09F               	goto	l4293
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8457  001D42  0E00               	movlw	0
  8458  001D44  6E32               	movwf	___wmul@multiplicand+1,c
  8459  001D46  0E03               	movlw	3
  8460  001D48  6E31               	movwf	___wmul@multiplicand,c
  8461  001D4A  0E00               	movlw	0
  8462  001D4C  6E2A               	movwf	___awdiv@divisor+1,c
  8463  001D4E  0E0A               	movlw	10
  8464  001D50  6E29               	movwf	___awdiv@divisor,c
  8465  001D52  0E00               	movlw	0
  8466  001D54  6E24               	movwf	___awmod@divisor+1,c
  8467  001D56  0E64               	movlw	100
  8468  001D58  6E23               	movwf	___awmod@divisor,c
  8469  001D5A  C072  F021         	movff	fround@prec,___awmod@dividend
  8470  001D5E  6A22               	clrf	___awmod@dividend+1,c
  8471  001D60  EC7D  F017         	call	___awmod	;wreg free
  8472  001D64  C021  F027         	movff	?___awmod,___awdiv@dividend
  8473  001D68  C022  F028         	movff	?___awmod+1,___awdiv@dividend+1
  8474  001D6C  ECFA  F016         	call	___awdiv	;wreg free
  8475  001D70  0E09               	movlw	9
  8476  001D72  2427               	addwf	?___awdiv,w,c
  8477  001D74  6E2F               	movwf	___wmul@multiplier,c
  8478  001D76  0E00               	movlw	0
  8479  001D78  2028               	addwfc	?___awdiv+1,w,c
  8480  001D7A  6E30               	movwf	___wmul@multiplier+1,c
  8481  001D7C  EC07  F01A         	call	___wmul	;wreg free
  8482  001D80  0E1D               	movlw	low __npowers_
  8483  001D82  242F               	addwf	?___wmul,w,c
  8484  001D84  6EF6               	movwf	tblptrl,c
  8485  001D86  0E7F               	movlw	high __npowers_
  8486  001D88  2030               	addwfc	?___wmul+1,w,c
  8487  001D8A  6EF7               	movwf	tblptrh,c
  8488  001D8C                     	if	0	;There are less than 3 active tblptr bytes
  8489  001D8C                     	endif
  8490  001D8C  0009               	tblrd		*+
  8491  001D8E  CFF5 F038          	movff	tablat,___ftmul@f2
  8492  001D92  0009               	tblrd		*+
  8493  001D94  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8494  001D98  000A               	tblrd		*-
  8495  001D9A  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8496  001D9E  0E00               	movlw	0
  8497  001DA0  6E2A               	movwf	___awdiv@divisor+1,c
  8498  001DA2  0E64               	movlw	100
  8499  001DA4  6E29               	movwf	___awdiv@divisor,c
  8500  001DA6  C072  F027         	movff	fround@prec,___awdiv@dividend
  8501  001DAA  6A28               	clrf	___awdiv@dividend+1,c
  8502  001DAC  ECFA  F016         	call	___awdiv	;wreg free
  8503  001DB0  0E12               	movlw	18
  8504  001DB2  2427               	addwf	?___awdiv,w,c
  8505  001DB4  6E2F               	movwf	___wmul@multiplier,c
  8506  001DB6  0E00               	movlw	0
  8507  001DB8  2028               	addwfc	?___awdiv+1,w,c
  8508  001DBA  6E30               	movwf	___wmul@multiplier+1,c
  8509  001DBC  0E00               	movlw	0
  8510  001DBE  6E32               	movwf	___wmul@multiplicand+1,c
  8511  001DC0  0E03               	movlw	3
  8512  001DC2  6E31               	movwf	___wmul@multiplicand,c
  8513  001DC4  EC07  F01A         	call	___wmul	;wreg free
  8514  001DC8  0E1D               	movlw	low __npowers_
  8515  001DCA  242F               	addwf	?___wmul,w,c
  8516  001DCC  6EF6               	movwf	tblptrl,c
  8517  001DCE  0E7F               	movlw	high __npowers_
  8518  001DD0  2030               	addwfc	?___wmul+1,w,c
  8519  001DD2  6EF7               	movwf	tblptrh,c
  8520  001DD4                     	if	0	;There are less than 3 active tblptr bytes
  8521  001DD4                     	endif
  8522  001DD4  0009               	tblrd		*+
  8523  001DD6  CFF5 F035          	movff	tablat,___ftmul@f1
  8524  001DDA  0009               	tblrd		*+
  8525  001DDC  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8526  001DE0  000A               	tblrd		*-
  8527  001DE2  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8528  001DE6  EC54  F012         	call	___ftmul	;wreg free
  8529  001DEA  C035  F06F         	movff	?___ftmul,_fround$2082
  8530  001DEE  C036  F070         	movff	?___ftmul+1,_fround$2082+1
  8531  001DF2  C037  F071         	movff	?___ftmul+2,_fround$2082+2
  8532                           
  8533                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8534  001DF6  0E00               	movlw	0
  8535  001DF8  6E32               	movwf	___wmul@multiplicand+1,c
  8536  001DFA  0E03               	movlw	3
  8537  001DFC  6E31               	movwf	___wmul@multiplicand,c
  8538  001DFE  0E00               	movlw	0
  8539  001E00  6E24               	movwf	___awmod@divisor+1,c
  8540  001E02  0E0A               	movlw	10
  8541  001E04  6E23               	movwf	___awmod@divisor,c
  8542  001E06  C072  F021         	movff	fround@prec,___awmod@dividend
  8543  001E0A  6A22               	clrf	___awmod@dividend+1,c
  8544  001E0C  EC7D  F017         	call	___awmod	;wreg free
  8545  001E10  C021  F02F         	movff	?___awmod,___wmul@multiplier
  8546  001E14  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  8547  001E18  EC07  F01A         	call	___wmul	;wreg free
  8548  001E1C  0E1D               	movlw	low __npowers_
  8549  001E1E  242F               	addwf	?___wmul,w,c
  8550  001E20  6EF6               	movwf	tblptrl,c
  8551  001E22  0E7F               	movlw	high __npowers_
  8552  001E24  2030               	addwfc	?___wmul+1,w,c
  8553  001E26  6EF7               	movwf	tblptrh,c
  8554  001E28                     	if	0	;There are less than 3 active tblptr bytes
  8555  001E28                     	endif
  8556  001E28  0009               	tblrd		*+
  8557  001E2A  CFF5 F038          	movff	tablat,___ftmul@f2
  8558  001E2E  0009               	tblrd		*+
  8559  001E30  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8560  001E34  000A               	tblrd		*-
  8561  001E36  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8562  001E3A  C06F  F035         	movff	_fround$2082,___ftmul@f1
  8563  001E3E  C070  F036         	movff	_fround$2082+1,___ftmul@f1+1
  8564  001E42  C071  F037         	movff	_fround$2082+2,___ftmul@f1+2
  8565  001E46  EC54  F012         	call	___ftmul	;wreg free
  8566  001E4A  C035  F06C         	movff	?___ftmul,_fround$2083
  8567  001E4E  C036  F06D         	movff	?___ftmul+1,_fround$2083+1
  8568  001E52  C037  F06E         	movff	?___ftmul+2,_fround$2083+2
  8569                           
  8570                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8571  001E56  C06C  F035         	movff	_fround$2083,___ftmul@f1
  8572  001E5A  C06D  F036         	movff	_fround$2083+1,___ftmul@f1+1
  8573  001E5E  C06E  F037         	movff	_fround$2083+2,___ftmul@f1+2
  8574  001E62  0E00               	movlw	0
  8575  001E64  6E38               	movwf	___ftmul@f2,c
  8576  001E66  0E00               	movlw	0
  8577  001E68  6E39               	movwf	___ftmul@f2+1,c
  8578  001E6A  0E3F               	movlw	63
  8579  001E6C  6E3A               	movwf	___ftmul@f2+2,c
  8580  001E6E  EC54  F012         	call	___ftmul	;wreg free
  8581  001E72  C035  F069         	movff	?___ftmul,?_fround
  8582  001E76  C036  F06A         	movff	?___ftmul+1,?_fround+1
  8583  001E7A  C037  F06B         	movff	?___ftmul+2,?_fround+2
  8584  001E7E  0012               	return	
  8585  001E80                     l4293:
  8586                           
  8587                           ;doprnt.c: 415: else if(prec > 10)
  8588  001E80  0E0A               	movlw	10
  8589  001E82  0100               	movlb	0	; () banked
  8590  001E84  6572               	cpfsgt	fround@prec& (0+255),b
  8591  001E86  D05D               	goto	l4301
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8595  001E88  0E00               	movlw	0
  8596  001E8A  6E32               	movwf	___wmul@multiplicand+1,c
  8597  001E8C  0E03               	movlw	3
  8598  001E8E  6E31               	movwf	___wmul@multiplicand,c
  8599  001E90  0E00               	movlw	0
  8600  001E92  6E24               	movwf	___awmod@divisor+1,c
  8601  001E94  0E0A               	movlw	10
  8602  001E96  6E23               	movwf	___awmod@divisor,c
  8603  001E98  C072  F021         	movff	fround@prec,___awmod@dividend
  8604  001E9C  6A22               	clrf	___awmod@dividend+1,c
  8605  001E9E  EC7D  F017         	call	___awmod	;wreg free
  8606  001EA2  C021  F02F         	movff	?___awmod,___wmul@multiplier
  8607  001EA6  C022  F030         	movff	?___awmod+1,___wmul@multiplier+1
  8608  001EAA  EC07  F01A         	call	___wmul	;wreg free
  8609  001EAE  0E1D               	movlw	low __npowers_
  8610  001EB0  242F               	addwf	?___wmul,w,c
  8611  001EB2  6EF6               	movwf	tblptrl,c
  8612  001EB4  0E7F               	movlw	high __npowers_
  8613  001EB6  2030               	addwfc	?___wmul+1,w,c
  8614  001EB8  6EF7               	movwf	tblptrh,c
  8615  001EBA                     	if	0	;There are less than 3 active tblptr bytes
  8616  001EBA                     	endif
  8617  001EBA  0009               	tblrd		*+
  8618  001EBC  CFF5 F038          	movff	tablat,___ftmul@f2
  8619  001EC0  0009               	tblrd		*+
  8620  001EC2  CFF5 F039          	movff	tablat,___ftmul@f2+1
  8621  001EC6  000A               	tblrd		*-
  8622  001EC8  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  8623  001ECC  0E00               	movlw	0
  8624  001ECE  6E2A               	movwf	___awdiv@divisor+1,c
  8625  001ED0  0E0A               	movlw	10
  8626  001ED2  6E29               	movwf	___awdiv@divisor,c
  8627  001ED4  C072  F027         	movff	fround@prec,___awdiv@dividend
  8628  001ED8  6A28               	clrf	___awdiv@dividend+1,c
  8629  001EDA  ECFA  F016         	call	___awdiv	;wreg free
  8630  001EDE  0E09               	movlw	9
  8631  001EE0  2427               	addwf	?___awdiv,w,c
  8632  001EE2  6E2F               	movwf	___wmul@multiplier,c
  8633  001EE4  0E00               	movlw	0
  8634  001EE6  2028               	addwfc	?___awdiv+1,w,c
  8635  001EE8  6E30               	movwf	___wmul@multiplier+1,c
  8636  001EEA  0E00               	movlw	0
  8637  001EEC  6E32               	movwf	___wmul@multiplicand+1,c
  8638  001EEE  0E03               	movlw	3
  8639  001EF0  6E31               	movwf	___wmul@multiplicand,c
  8640  001EF2  EC07  F01A         	call	___wmul	;wreg free
  8641  001EF6  0E1D               	movlw	low __npowers_
  8642  001EF8  242F               	addwf	?___wmul,w,c
  8643  001EFA  6EF6               	movwf	tblptrl,c
  8644  001EFC  0E7F               	movlw	high __npowers_
  8645  001EFE  2030               	addwfc	?___wmul+1,w,c
  8646  001F00  6EF7               	movwf	tblptrh,c
  8647  001F02                     	if	0	;There are less than 3 active tblptr bytes
  8648  001F02                     	endif
  8649  001F02  0009               	tblrd		*+
  8650  001F04  CFF5 F035          	movff	tablat,___ftmul@f1
  8651  001F08  0009               	tblrd		*+
  8652  001F0A  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8653  001F0E  000A               	tblrd		*-
  8654  001F10  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8655  001F14  EC54  F012         	call	___ftmul	;wreg free
  8656  001F18  C035  F06F         	movff	?___ftmul,_fround$2082
  8657  001F1C  C036  F070         	movff	?___ftmul+1,_fround$2082+1
  8658  001F20  C037  F071         	movff	?___ftmul+2,_fround$2082+2
  8659                           
  8660                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8661  001F24  C06F  F035         	movff	_fround$2082,___ftmul@f1
  8662  001F28  C070  F036         	movff	_fround$2082+1,___ftmul@f1+1
  8663  001F2C  C071  F037         	movff	_fround$2082+2,___ftmul@f1+2
  8664  001F30  0E00               	movlw	0
  8665  001F32  6E38               	movwf	___ftmul@f2,c
  8666  001F34  0E00               	movlw	0
  8667  001F36  6E39               	movwf	___ftmul@f2+1,c
  8668  001F38  0E3F               	movlw	63
  8669  001F3A  6E3A               	movwf	___ftmul@f2+2,c
  8670  001F3C  EC54  F012         	call	___ftmul	;wreg free
  8671  001F40  D798               	goto	L8
  8672  001F42                     l4301:
  8673                           
  8674                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8675  001F42  0100               	movlb	0	; () banked
  8676  001F44  5172               	movf	fround@prec& (0+255),w,b
  8677  001F46  0D03               	mullw	3
  8678  001F48  0E1D               	movlw	low __npowers_
  8679  001F4A  24F3               	addwf	prodl,w,c
  8680  001F4C  6EF6               	movwf	tblptrl,c
  8681  001F4E  0E7F               	movlw	high __npowers_
  8682  001F50  20F4               	addwfc	prodh,w,c
  8683  001F52  6EF7               	movwf	tblptrh,c
  8684  001F54                     	if	0	;There are less than 3 active tblptr bytes
  8685  001F54                     	endif
  8686  001F54  0009               	tblrd		*+
  8687  001F56  CFF5 F035          	movff	tablat,___ftmul@f1
  8688  001F5A  0009               	tblrd		*+
  8689  001F5C  CFF5 F036          	movff	tablat,___ftmul@f1+1
  8690  001F60  000A               	tblrd		*-
  8691  001F62  CFF5 F037          	movff	tablat,___ftmul@f1+2
  8692  001F66  0E00               	movlw	0
  8693  001F68  6E38               	movwf	___ftmul@f2,c
  8694  001F6A  0E00               	movlw	0
  8695  001F6C  6E39               	movwf	___ftmul@f2+1,c
  8696  001F6E  0E3F               	movlw	63
  8697  001F70  6E3A               	movwf	___ftmul@f2+2,c
  8698  001F72  EC54  F012         	call	___ftmul	;wreg free
  8699  001F76  C035  F069         	movff	?___ftmul,?_fround
  8700  001F7A  C036  F06A         	movff	?___ftmul+1,?_fround+1
  8701  001F7E  C037  F06B         	movff	?___ftmul+2,?_fround+2
  8702  001F82  0012               	return	
  8703  001F84                     __end_of_fround:
  8704                           	opt stack 0
  8705                           tblptru	equ	0xFF8
  8706                           tblptrh	equ	0xFF7
  8707                           tblptrl	equ	0xFF6
  8708                           tablat	equ	0xFF5
  8709                           prodh	equ	0xFF4
  8710                           prodl	equ	0xFF3
  8711                           indf0	equ	0xFEF
  8712                           fsr0h	equ	0xFEA
  8713                           fsr0l	equ	0xFE9
  8714                           wreg	equ	0xFE8
  8715                           indf1	equ	0xFE7
  8716                           fsr1h	equ	0xFE2
  8717                           fsr1l	equ	0xFE1
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           fsr2h	equ	0xFDA
  8722                           fsr2l	equ	0xFD9
  8723                           status	equ	0xFD8
  8724                           
  8725 ;; *************** function ___wmul *****************
  8726 ;; Defined at:
  8727 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  multiplier      2   46[COMRAM] unsigned int 
  8730 ;;  multiplicand    2   48[COMRAM] unsigned int 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  product         2   50[COMRAM] unsigned int 
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  2   46[COMRAM] unsigned int 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0, prodl, prodh
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8742 ;;      Params:         4       0       0       0       0       0       0
  8743 ;;      Locals:         2       0       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0
  8745 ;;      Totals:         6       0       0       0       0       0       0
  8746 ;;Total ram usage:        6 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    2
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_fround
  8753 ;;		_scale
  8754 ;;		_sprintf
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text35
  8759  00340E                     __ptext35:
  8760                           	opt stack 0
  8761  00340E                     ___wmul:
  8762                           	opt stack 24
  8763                           
  8764                           ;incstack = 0
  8765  00340E  502F               	movf	___wmul@multiplier,w,c
  8766  003410  0231               	mulwf	___wmul@multiplicand,c
  8767  003412  CFF3 F033          	movff	prodl,___wmul@product
  8768  003416  CFF4 F034          	movff	prodh,___wmul@product+1
  8769  00341A  502F               	movf	___wmul@multiplier,w,c
  8770  00341C  0232               	mulwf	___wmul@multiplicand+1,c
  8771  00341E  50F3               	movf	prodl,w,c
  8772  003420  2634               	addwf	___wmul@product+1,f,c
  8773  003422  5030               	movf	___wmul@multiplier+1,w,c
  8774  003424  0231               	mulwf	___wmul@multiplicand,c
  8775  003426  50F3               	movf	prodl,w,c
  8776  003428  2634               	addwf	___wmul@product+1,f,c
  8777  00342A  C033  F02F         	movff	___wmul@product,?___wmul
  8778  00342E  C034  F030         	movff	___wmul@product+1,?___wmul+1
  8779  003432  0012               	return	
  8780  003434                     __end_of___wmul:
  8781                           	opt stack 0
  8782                           tblptru	equ	0xFF8
  8783                           tblptrh	equ	0xFF7
  8784                           tblptrl	equ	0xFF6
  8785                           tablat	equ	0xFF5
  8786                           prodh	equ	0xFF4
  8787                           prodl	equ	0xFF3
  8788                           indf0	equ	0xFEF
  8789                           fsr0h	equ	0xFEA
  8790                           fsr0l	equ	0xFE9
  8791                           wreg	equ	0xFE8
  8792                           indf1	equ	0xFE7
  8793                           fsr1h	equ	0xFE2
  8794                           fsr1l	equ	0xFE1
  8795                           indf2	equ	0xFDF
  8796                           postinc2	equ	0xFDE
  8797                           postdec2	equ	0xFDD
  8798                           fsr2h	equ	0xFDA
  8799                           fsr2l	equ	0xFD9
  8800                           status	equ	0xFD8
  8801                           
  8802 ;; *************** function ___ftmul *****************
  8803 ;; Defined at:
  8804 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  f1              3   52[COMRAM] float 
  8807 ;;  f2              3   55[COMRAM] float 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  8810 ;;  sign            1    8[BANK0 ] unsigned char 
  8811 ;;  cntr            1    7[BANK0 ] unsigned char 
  8812 ;;  exp             1    3[BANK0 ] unsigned char 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  3   52[COMRAM] float 
  8815 ;; Registers used:
  8816 ;;		wreg, status,2, status,0, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8822 ;;      Params:         6       0       0       0       0       0       0
  8823 ;;      Locals:         0       6       0       0       0       0       0
  8824 ;;      Temps:          0       3       0       0       0       0       0
  8825 ;;      Totals:         6       9       0       0       0       0       0
  8826 ;;Total ram usage:       15 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    3
  8829 ;; This function calls:
  8830 ;;		___ftpack
  8831 ;; This function is called by:
  8832 ;;		_util_getBatteryVoltage
  8833 ;;		_util_getSolarCurrent
  8834 ;;		_util_getBatteryCurrent
  8835 ;;		_util_getTemperature
  8836 ;;		_fround
  8837 ;;		_scale
  8838 ;;		_sprintf
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text36
  8843  0024A8                     __ptext36:
  8844                           	opt stack 0
  8845  0024A8                     ___ftmul:
  8846                           	opt stack 25
  8847                           
  8848                           ;incstack = 0
  8849  0024A8  C037  F060         	movff	___ftmul@f1+2,??___ftmul
  8850  0024AC  0100               	movlb	0	; () banked
  8851  0024AE  6B61               	clrf	(??___ftmul+1)& (0+255),b
  8852  0024B0  6B62               	clrf	(??___ftmul+2)& (0+255),b
  8853  0024B2  3436               	rlcf	___ftmul@f1+1,w,c
  8854  0024B4  0100               	movlb	0	; () banked
  8855  0024B6  3760               	rlcf	??___ftmul& (0+255),f,b
  8856  0024B8  E301               	bnc	u4101
  8857  0024BA  8161               	bsf	(??___ftmul+1)& (0+255),0,b
  8858  0024BC                     u4101:
  8859  0024BC  0100               	movlb	0	; () banked
  8860  0024BE  5160               	movf	??___ftmul& (0+255),w,b
  8861  0024C0  0100               	movlb	0	; () banked
  8862  0024C2  6F63               	movwf	___ftmul@exp& (0+255),b
  8863  0024C4  0100               	movlb	0	; () banked
  8864  0024C6  5163               	movf	___ftmul@exp& (0+255),w,b
  8865  0024C8  A4D8               	btfss	status,2,c
  8866  0024CA  D007               	goto	l4241
  8867                           
  8868                           ; BSR set to: 0
  8869  0024CC  0E00               	movlw	0
  8870  0024CE  6E35               	movwf	?___ftmul,c
  8871  0024D0  0E00               	movlw	0
  8872  0024D2  6E36               	movwf	?___ftmul+1,c
  8873  0024D4  0E00               	movlw	0
  8874  0024D6  6E37               	movwf	?___ftmul+2,c
  8875                           
  8876                           ; BSR set to: 0
  8877  0024D8  0012               	return	
  8878  0024DA                     l4241:
  8879                           
  8880                           ; BSR set to: 0
  8881  0024DA  C03A  F060         	movff	___ftmul@f2+2,??___ftmul
  8882  0024DE  0100               	movlb	0	; () banked
  8883  0024E0  6B61               	clrf	(??___ftmul+1)& (0+255),b
  8884  0024E2  6B62               	clrf	(??___ftmul+2)& (0+255),b
  8885  0024E4  3439               	rlcf	___ftmul@f2+1,w,c
  8886  0024E6  0100               	movlb	0	; () banked
  8887  0024E8  3760               	rlcf	??___ftmul& (0+255),f,b
  8888  0024EA  E301               	bnc	u4121
  8889  0024EC  8161               	bsf	(??___ftmul+1)& (0+255),0,b
  8890  0024EE                     u4121:
  8891  0024EE  0100               	movlb	0	; () banked
  8892  0024F0  5160               	movf	??___ftmul& (0+255),w,b
  8893  0024F2  0100               	movlb	0	; () banked
  8894  0024F4  6F68               	movwf	___ftmul@sign& (0+255),b
  8895  0024F6  0100               	movlb	0	; () banked
  8896  0024F8  5168               	movf	___ftmul@sign& (0+255),w,b
  8897  0024FA  A4D8               	btfss	status,2,c
  8898  0024FC  D007               	goto	l4247
  8899                           
  8900                           ; BSR set to: 0
  8901  0024FE  0E00               	movlw	0
  8902  002500  6E35               	movwf	?___ftmul,c
  8903  002502  0E00               	movlw	0
  8904  002504  6E36               	movwf	?___ftmul+1,c
  8905  002506  0E00               	movlw	0
  8906  002508  6E37               	movwf	?___ftmul+2,c
  8907                           
  8908                           ; BSR set to: 0
  8909  00250A  0012               	return	
  8910  00250C                     l4247:
  8911                           
  8912                           ; BSR set to: 0
  8913  00250C  0100               	movlb	0	; () banked
  8914  00250E  5168               	movf	___ftmul@sign& (0+255),w,b
  8915  002510  0F7B               	addlw	123
  8916  002512  0100               	movlb	0	; () banked
  8917  002514  2763               	addwf	___ftmul@exp& (0+255),f,b
  8918                           
  8919                           ; BSR set to: 0
  8920  002516  C037  F068         	movff	___ftmul@f1+2,___ftmul@sign
  8921  00251A  503A               	movf	___ftmul@f2+2,w,c
  8922  00251C  0100               	movlb	0	; () banked
  8923  00251E  1B68               	xorwf	___ftmul@sign& (0+255),f,b
  8924  002520  0E80               	movlw	128
  8925  002522  0100               	movlb	0	; () banked
  8926  002524  1768               	andwf	___ftmul@sign& (0+255),f,b
  8927                           
  8928                           ; BSR set to: 0
  8929  002526  8E36               	bsf	___ftmul@f1+1,7,c
  8930                           
  8931                           ; BSR set to: 0
  8932  002528  8E39               	bsf	___ftmul@f2+1,7,c
  8933                           
  8934                           ; BSR set to: 0
  8935  00252A  0EFF               	movlw	255
  8936  00252C  1638               	andwf	___ftmul@f2,f,c
  8937  00252E  0EFF               	movlw	255
  8938  002530  1639               	andwf	___ftmul@f2+1,f,c
  8939  002532  0E00               	movlw	0
  8940  002534  163A               	andwf	___ftmul@f2+2,f,c
  8941                           
  8942                           ; BSR set to: 0
  8943  002536  0E00               	movlw	0
  8944  002538  0100               	movlb	0	; () banked
  8945  00253A  6F64               	movwf	___ftmul@f3_as_product& (0+255),b
  8946  00253C  0E00               	movlw	0
  8947  00253E  0100               	movlb	0	; () banked
  8948  002540  6F65               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8949  002542  0E00               	movlw	0
  8950  002544  0100               	movlb	0	; () banked
  8951  002546  6F66               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8952                           
  8953                           ; BSR set to: 0
  8954  002548  0E07               	movlw	7
  8955  00254A  0100               	movlb	0	; () banked
  8956  00254C  6F67               	movwf	___ftmul@cntr& (0+255),b
  8957  00254E                     l4261:
  8958                           
  8959                           ; BSR set to: 0
  8960  00254E  A035               	btfss	___ftmul@f1,0,c
  8961  002550  D009               	goto	l4265
  8962                           
  8963                           ; BSR set to: 0
  8964  002552  5038               	movf	___ftmul@f2,w,c
  8965  002554  0100               	movlb	0	; () banked
  8966  002556  2764               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8967  002558  5039               	movf	___ftmul@f2+1,w,c
  8968  00255A  0100               	movlb	0	; () banked
  8969  00255C  2365               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8970  00255E  503A               	movf	___ftmul@f2+2,w,c
  8971  002560  0100               	movlb	0	; () banked
  8972  002562  2366               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8973  002564                     l4265:
  8974                           
  8975                           ; BSR set to: 0
  8976  002564  90D8               	bcf	status,0,c
  8977  002566  3237               	rrcf	___ftmul@f1+2,f,c
  8978  002568  3236               	rrcf	___ftmul@f1+1,f,c
  8979  00256A  3235               	rrcf	___ftmul@f1,f,c
  8980  00256C  90D8               	bcf	status,0,c
  8981  00256E  3638               	rlcf	___ftmul@f2,f,c
  8982  002570  3639               	rlcf	___ftmul@f2+1,f,c
  8983  002572  363A               	rlcf	___ftmul@f2+2,f,c
  8984                           
  8985                           ; BSR set to: 0
  8986  002574  0100               	movlb	0	; () banked
  8987  002576  2F67               	decfsz	___ftmul@cntr& (0+255),f,b
  8988  002578  D7EA               	goto	l4261
  8989                           
  8990                           ; BSR set to: 0
  8991                           
  8992                           ; BSR set to: 0
  8993  00257A  0E09               	movlw	9
  8994  00257C  0100               	movlb	0	; () banked
  8995  00257E  6F67               	movwf	___ftmul@cntr& (0+255),b
  8996  002580                     l4271:
  8997                           
  8998                           ; BSR set to: 0
  8999  002580  A035               	btfss	___ftmul@f1,0,c
  9000  002582  D009               	goto	l4275
  9001                           
  9002                           ; BSR set to: 0
  9003  002584  5038               	movf	___ftmul@f2,w,c
  9004  002586  0100               	movlb	0	; () banked
  9005  002588  2764               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9006  00258A  5039               	movf	___ftmul@f2+1,w,c
  9007  00258C  0100               	movlb	0	; () banked
  9008  00258E  2365               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9009  002590  503A               	movf	___ftmul@f2+2,w,c
  9010  002592  0100               	movlb	0	; () banked
  9011  002594  2366               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9012  002596                     l4275:
  9013                           
  9014                           ; BSR set to: 0
  9015  002596  90D8               	bcf	status,0,c
  9016  002598  3237               	rrcf	___ftmul@f1+2,f,c
  9017  00259A  3236               	rrcf	___ftmul@f1+1,f,c
  9018  00259C  3235               	rrcf	___ftmul@f1,f,c
  9019  00259E  0100               	movlb	0	; () banked
  9020  0025A0  90D8               	bcf	status,0,c
  9021  0025A2  3366               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9022  0025A4  3365               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9023  0025A6  3364               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9024                           
  9025                           ; BSR set to: 0
  9026  0025A8  0100               	movlb	0	; () banked
  9027  0025AA  2F67               	decfsz	___ftmul@cntr& (0+255),f,b
  9028  0025AC  D7E9               	goto	l4271
  9029                           
  9030                           ; BSR set to: 0
  9031                           
  9032                           ; BSR set to: 0
  9033  0025AE  C064  F021         	movff	___ftmul@f3_as_product,___ftpack@arg
  9034  0025B2  C065  F022         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9035  0025B6  C066  F023         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9036  0025BA  C063  F024         	movff	___ftmul@exp,___ftpack@exp
  9037  0025BE  C068  F025         	movff	___ftmul@sign,___ftpack@sign
  9038  0025C2  EC7D  F015         	call	___ftpack	;wreg free
  9039  0025C6  C021  F035         	movff	?___ftpack,?___ftmul
  9040  0025CA  C022  F036         	movff	?___ftpack+1,?___ftmul+1
  9041  0025CE  C023  F037         	movff	?___ftpack+2,?___ftmul+2
  9042  0025D2  0012               	return	
  9043  0025D4                     __end_of___ftmul:
  9044                           	opt stack 0
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           prodh	equ	0xFF4
  9050                           prodl	equ	0xFF3
  9051                           indf0	equ	0xFEF
  9052                           fsr0h	equ	0xFEA
  9053                           fsr0l	equ	0xFE9
  9054                           wreg	equ	0xFE8
  9055                           indf1	equ	0xFE7
  9056                           fsr1h	equ	0xFE2
  9057                           fsr1l	equ	0xFE1
  9058                           indf2	equ	0xFDF
  9059                           postinc2	equ	0xFDE
  9060                           postdec2	equ	0xFDD
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function ___awmod *****************
  9066 ;; Defined at:
  9067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  dividend        2   32[COMRAM] int 
  9070 ;;  divisor         2   34[COMRAM] int 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  sign            1   37[COMRAM] unsigned char 
  9073 ;;  counter         1   36[COMRAM] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  2   32[COMRAM] int 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9083 ;;      Params:         4       0       0       0       0       0       0
  9084 ;;      Locals:         2       0       0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0
  9086 ;;      Totals:         6       0       0       0       0       0       0
  9087 ;;Total ram usage:        6 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    2
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_fround
  9094 ;;		_scale
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text37
  9099  002EFA                     __ptext37:
  9100                           	opt stack 0
  9101  002EFA                     ___awmod:
  9102                           	opt stack 24
  9103                           
  9104                           ;incstack = 0
  9105  002EFA  0E00               	movlw	0
  9106  002EFC  6E26               	movwf	___awmod@sign,c
  9107  002EFE  AE22               	btfss	___awmod@dividend+1,7,c
  9108  002F00  D006               	goto	l3029
  9109  002F02  6C21               	negf	___awmod@dividend,c
  9110  002F04  1E22               	comf	___awmod@dividend+1,f,c
  9111  002F06  B0D8               	btfsc	status,0,c
  9112  002F08  2A22               	incf	___awmod@dividend+1,f,c
  9113  002F0A  0E01               	movlw	1
  9114  002F0C  6E26               	movwf	___awmod@sign,c
  9115  002F0E                     l3029:
  9116  002F0E  AE24               	btfss	___awmod@divisor+1,7,c
  9117  002F10  D004               	goto	l3033
  9118  002F12  6C23               	negf	___awmod@divisor,c
  9119  002F14  1E24               	comf	___awmod@divisor+1,f,c
  9120  002F16  B0D8               	btfsc	status,0,c
  9121  002F18  2A24               	incf	___awmod@divisor+1,f,c
  9122  002F1A                     l3033:
  9123  002F1A  5023               	movf	___awmod@divisor,w,c
  9124  002F1C  1024               	iorwf	___awmod@divisor+1,w,c
  9125  002F1E  B4D8               	btfsc	status,2,c
  9126  002F20  D018               	goto	l3049
  9127  002F22  0E01               	movlw	1
  9128  002F24  6E25               	movwf	___awmod@counter,c
  9129  002F26  D004               	goto	l3039
  9130  002F28                     l3037:
  9131  002F28  90D8               	bcf	status,0,c
  9132  002F2A  3623               	rlcf	___awmod@divisor,f,c
  9133  002F2C  3624               	rlcf	___awmod@divisor+1,f,c
  9134  002F2E  2A25               	incf	___awmod@counter,f,c
  9135  002F30                     l3039:
  9136  002F30  AE24               	btfss	___awmod@divisor+1,7,c
  9137  002F32  D7FA               	goto	l3037
  9138  002F34                     l3041:
  9139  002F34  5023               	movf	___awmod@divisor,w,c
  9140  002F36  5C21               	subwf	___awmod@dividend,w,c
  9141  002F38  5024               	movf	___awmod@divisor+1,w,c
  9142  002F3A  5822               	subwfb	___awmod@dividend+1,w,c
  9143  002F3C  A0D8               	btfss	status,0,c
  9144  002F3E  D004               	goto	l3045
  9145  002F40  5023               	movf	___awmod@divisor,w,c
  9146  002F42  5E21               	subwf	___awmod@dividend,f,c
  9147  002F44  5024               	movf	___awmod@divisor+1,w,c
  9148  002F46  5A22               	subwfb	___awmod@dividend+1,f,c
  9149  002F48                     l3045:
  9150  002F48  90D8               	bcf	status,0,c
  9151  002F4A  3224               	rrcf	___awmod@divisor+1,f,c
  9152  002F4C  3223               	rrcf	___awmod@divisor,f,c
  9153  002F4E  2E25               	decfsz	___awmod@counter,f,c
  9154  002F50  D7F1               	goto	l3041
  9155  002F52                     l3049:
  9156  002F52  5026               	movf	___awmod@sign,w,c
  9157  002F54  B4D8               	btfsc	status,2,c
  9158  002F56  D004               	goto	l3053
  9159  002F58  6C21               	negf	___awmod@dividend,c
  9160  002F5A  1E22               	comf	___awmod@dividend+1,f,c
  9161  002F5C  B0D8               	btfsc	status,0,c
  9162  002F5E  2A22               	incf	___awmod@dividend+1,f,c
  9163  002F60                     l3053:
  9164  002F60  C021  F021         	movff	___awmod@dividend,?___awmod
  9165  002F64  C022  F022         	movff	___awmod@dividend+1,?___awmod+1
  9166  002F68  0012               	return	
  9167  002F6A                     __end_of___awmod:
  9168                           	opt stack 0
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           indf0	equ	0xFEF
  9176                           fsr0h	equ	0xFEA
  9177                           fsr0l	equ	0xFE9
  9178                           wreg	equ	0xFE8
  9179                           indf1	equ	0xFE7
  9180                           fsr1h	equ	0xFE2
  9181                           fsr1l	equ	0xFE1
  9182                           indf2	equ	0xFDF
  9183                           postinc2	equ	0xFDE
  9184                           postdec2	equ	0xFDD
  9185                           fsr2h	equ	0xFDA
  9186                           fsr2l	equ	0xFD9
  9187                           status	equ	0xFD8
  9188                           
  9189 ;; *************** function ___awdiv *****************
  9190 ;; Defined at:
  9191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  dividend        2   38[COMRAM] int 
  9194 ;;  divisor         2   40[COMRAM] int 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  quotient        2   44[COMRAM] int 
  9197 ;;  sign            1   43[COMRAM] unsigned char 
  9198 ;;  counter         1   42[COMRAM] unsigned char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  2   38[COMRAM] int 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9208 ;;      Params:         4       0       0       0       0       0       0
  9209 ;;      Locals:         4       0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0
  9211 ;;      Totals:         8       0       0       0       0       0       0
  9212 ;;Total ram usage:        8 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    2
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_fround
  9219 ;;		_scale
  9220 ;;		_sprintf
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text38
  9225  002DF4                     __ptext38:
  9226                           	opt stack 0
  9227  002DF4                     ___awdiv:
  9228                           	opt stack 24
  9229                           
  9230                           ;incstack = 0
  9231  002DF4  0E00               	movlw	0
  9232  002DF6  6E2C               	movwf	___awdiv@sign,c
  9233  002DF8  AE2A               	btfss	___awdiv@divisor+1,7,c
  9234  002DFA  D006               	goto	l2985
  9235  002DFC  6C29               	negf	___awdiv@divisor,c
  9236  002DFE  1E2A               	comf	___awdiv@divisor+1,f,c
  9237  002E00  B0D8               	btfsc	status,0,c
  9238  002E02  2A2A               	incf	___awdiv@divisor+1,f,c
  9239  002E04  0E01               	movlw	1
  9240  002E06  6E2C               	movwf	___awdiv@sign,c
  9241  002E08                     l2985:
  9242  002E08  AE28               	btfss	___awdiv@dividend+1,7,c
  9243  002E0A  D006               	goto	l2991
  9244  002E0C  6C27               	negf	___awdiv@dividend,c
  9245  002E0E  1E28               	comf	___awdiv@dividend+1,f,c
  9246  002E10  B0D8               	btfsc	status,0,c
  9247  002E12  2A28               	incf	___awdiv@dividend+1,f,c
  9248  002E14  0E01               	movlw	1
  9249  002E16  1A2C               	xorwf	___awdiv@sign,f,c
  9250  002E18                     l2991:
  9251  002E18  0E00               	movlw	0
  9252  002E1A  6E2E               	movwf	___awdiv@quotient+1,c
  9253  002E1C  0E00               	movlw	0
  9254  002E1E  6E2D               	movwf	___awdiv@quotient,c
  9255  002E20  5029               	movf	___awdiv@divisor,w,c
  9256  002E22  102A               	iorwf	___awdiv@divisor+1,w,c
  9257  002E24  B4D8               	btfsc	status,2,c
  9258  002E26  D01C               	goto	l3013
  9259  002E28  0E01               	movlw	1
  9260  002E2A  6E2B               	movwf	___awdiv@counter,c
  9261  002E2C  D004               	goto	l2999
  9262  002E2E                     l2997:
  9263  002E2E  90D8               	bcf	status,0,c
  9264  002E30  3629               	rlcf	___awdiv@divisor,f,c
  9265  002E32  362A               	rlcf	___awdiv@divisor+1,f,c
  9266  002E34  2A2B               	incf	___awdiv@counter,f,c
  9267  002E36                     l2999:
  9268  002E36  AE2A               	btfss	___awdiv@divisor+1,7,c
  9269  002E38  D7FA               	goto	l2997
  9270  002E3A                     l3001:
  9271  002E3A  90D8               	bcf	status,0,c
  9272  002E3C  362D               	rlcf	___awdiv@quotient,f,c
  9273  002E3E  362E               	rlcf	___awdiv@quotient+1,f,c
  9274  002E40  5029               	movf	___awdiv@divisor,w,c
  9275  002E42  5C27               	subwf	___awdiv@dividend,w,c
  9276  002E44  502A               	movf	___awdiv@divisor+1,w,c
  9277  002E46  5828               	subwfb	___awdiv@dividend+1,w,c
  9278  002E48  A0D8               	btfss	status,0,c
  9279  002E4A  D005               	goto	l3009
  9280  002E4C  5029               	movf	___awdiv@divisor,w,c
  9281  002E4E  5E27               	subwf	___awdiv@dividend,f,c
  9282  002E50  502A               	movf	___awdiv@divisor+1,w,c
  9283  002E52  5A28               	subwfb	___awdiv@dividend+1,f,c
  9284  002E54  802D               	bsf	___awdiv@quotient,0,c
  9285  002E56                     l3009:
  9286  002E56  90D8               	bcf	status,0,c
  9287  002E58  322A               	rrcf	___awdiv@divisor+1,f,c
  9288  002E5A  3229               	rrcf	___awdiv@divisor,f,c
  9289  002E5C  2E2B               	decfsz	___awdiv@counter,f,c
  9290  002E5E  D7ED               	goto	l3001
  9291  002E60                     l3013:
  9292  002E60  502C               	movf	___awdiv@sign,w,c
  9293  002E62  B4D8               	btfsc	status,2,c
  9294  002E64  D004               	goto	l3017
  9295  002E66  6C2D               	negf	___awdiv@quotient,c
  9296  002E68  1E2E               	comf	___awdiv@quotient+1,f,c
  9297  002E6A  B0D8               	btfsc	status,0,c
  9298  002E6C  2A2E               	incf	___awdiv@quotient+1,f,c
  9299  002E6E                     l3017:
  9300  002E6E  C02D  F027         	movff	___awdiv@quotient,?___awdiv
  9301  002E72  C02E  F028         	movff	___awdiv@quotient+1,?___awdiv+1
  9302  002E76  0012               	return	
  9303  002E78                     __end_of___awdiv:
  9304                           	opt stack 0
  9305                           tblptru	equ	0xFF8
  9306                           tblptrh	equ	0xFF7
  9307                           tblptrl	equ	0xFF6
  9308                           tablat	equ	0xFF5
  9309                           prodh	equ	0xFF4
  9310                           prodl	equ	0xFF3
  9311                           indf0	equ	0xFEF
  9312                           fsr0h	equ	0xFEA
  9313                           fsr0l	equ	0xFE9
  9314                           wreg	equ	0xFE8
  9315                           indf1	equ	0xFE7
  9316                           fsr1h	equ	0xFE2
  9317                           fsr1l	equ	0xFE1
  9318                           indf2	equ	0xFDF
  9319                           postinc2	equ	0xFDE
  9320                           postdec2	equ	0xFDD
  9321                           fsr2h	equ	0xFDA
  9322                           fsr2l	equ	0xFD9
  9323                           status	equ	0xFD8
  9324                           
  9325 ;; *************** function __tdiv_to_l_ *****************
  9326 ;; Defined at:
  9327 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  f1              3   32[COMRAM] float 
  9330 ;;  f2              3   35[COMRAM] float 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  quot            4   41[COMRAM] unsigned long 
  9333 ;;  exp1            1   46[COMRAM] unsigned char 
  9334 ;;  cntr            1   45[COMRAM] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  4   32[COMRAM] unsigned long 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9344 ;;      Params:         6       0       0       0       0       0       0
  9345 ;;      Locals:         6       0       0       0       0       0       0
  9346 ;;      Temps:          3       0       0       0       0       0       0
  9347 ;;      Totals:        15       0       0       0       0       0       0
  9348 ;;Total ram usage:       15 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    2
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_sprintf
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text39
  9359  002376                     __ptext39:
  9360                           	opt stack 0
  9361  002376                     __tdiv_to_l_:
  9362                           	opt stack 25
  9363                           
  9364                           ;incstack = 0
  9365  002376  C023  F027         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9366  00237A  6A28               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9367  00237C  6A29               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9368  00237E  3422               	rlcf	__tdiv_to_l_@f1+1,w,c
  9369  002380  3627               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9370  002382  E301               	bnc	u2781
  9371  002384  8028               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9372  002386                     u2781:
  9373  002386  5027               	movf	??__tdiv_to_l_,w,c
  9374  002388  6E2F               	movwf	__tdiv_to_l_@exp1,c
  9375  00238A  502F               	movf	__tdiv_to_l_@exp1,w,c
  9376  00238C  A4D8               	btfss	status,2,c
  9377  00238E  D009               	goto	l3205
  9378  002390  0E00               	movlw	0
  9379  002392  6E21               	movwf	?__tdiv_to_l_,c
  9380  002394  0E00               	movlw	0
  9381  002396  6E22               	movwf	?__tdiv_to_l_+1,c
  9382  002398  0E00               	movlw	0
  9383  00239A  6E23               	movwf	?__tdiv_to_l_+2,c
  9384  00239C  0E00               	movlw	0
  9385  00239E  6E24               	movwf	?__tdiv_to_l_+3,c
  9386  0023A0  0012               	return	
  9387  0023A2                     l3205:
  9388  0023A2  C026  F027         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9389  0023A6  6A28               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9390  0023A8  6A29               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9391  0023AA  3425               	rlcf	__tdiv_to_l_@f2+1,w,c
  9392  0023AC  3627               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9393  0023AE  E301               	bnc	u2801
  9394  0023B0  8028               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9395  0023B2                     u2801:
  9396  0023B2  5027               	movf	??__tdiv_to_l_,w,c
  9397  0023B4  6E2E               	movwf	__tdiv_to_l_@cntr,c
  9398  0023B6  502E               	movf	__tdiv_to_l_@cntr,w,c
  9399  0023B8  A4D8               	btfss	status,2,c
  9400  0023BA  D009               	goto	l3211
  9401  0023BC  0E00               	movlw	0
  9402  0023BE  6E21               	movwf	?__tdiv_to_l_,c
  9403  0023C0  0E00               	movlw	0
  9404  0023C2  6E22               	movwf	?__tdiv_to_l_+1,c
  9405  0023C4  0E00               	movlw	0
  9406  0023C6  6E23               	movwf	?__tdiv_to_l_+2,c
  9407  0023C8  0E00               	movlw	0
  9408  0023CA  6E24               	movwf	?__tdiv_to_l_+3,c
  9409  0023CC  0012               	return	
  9410  0023CE                     l3211:
  9411  0023CE  8E22               	bsf	__tdiv_to_l_@f1+1,7,c
  9412  0023D0  0EFF               	movlw	255
  9413  0023D2  1621               	andwf	__tdiv_to_l_@f1,f,c
  9414  0023D4  0EFF               	movlw	255
  9415  0023D6  1622               	andwf	__tdiv_to_l_@f1+1,f,c
  9416  0023D8  0E00               	movlw	0
  9417  0023DA  1623               	andwf	__tdiv_to_l_@f1+2,f,c
  9418  0023DC  8E25               	bsf	__tdiv_to_l_@f2+1,7,c
  9419  0023DE  0EFF               	movlw	255
  9420  0023E0  1624               	andwf	__tdiv_to_l_@f2,f,c
  9421  0023E2  0EFF               	movlw	255
  9422  0023E4  1625               	andwf	__tdiv_to_l_@f2+1,f,c
  9423  0023E6  0E00               	movlw	0
  9424  0023E8  1626               	andwf	__tdiv_to_l_@f2+2,f,c
  9425  0023EA  0E00               	movlw	0
  9426  0023EC  6E2A               	movwf	__tdiv_to_l_@quot,c
  9427  0023EE  0E00               	movlw	0
  9428  0023F0  6E2B               	movwf	__tdiv_to_l_@quot+1,c
  9429  0023F2  0E00               	movlw	0
  9430  0023F4  6E2C               	movwf	__tdiv_to_l_@quot+2,c
  9431  0023F6  0E00               	movlw	0
  9432  0023F8  6E2D               	movwf	__tdiv_to_l_@quot+3,c
  9433  0023FA  0E7F               	movlw	127
  9434  0023FC  5E2F               	subwf	__tdiv_to_l_@exp1,f,c
  9435  0023FE  502E               	movf	__tdiv_to_l_@cntr,w,c
  9436  002400  0F98               	addlw	152
  9437  002402  5E2F               	subwf	__tdiv_to_l_@exp1,f,c
  9438  002404  0E18               	movlw	24
  9439  002406  6E2E               	movwf	__tdiv_to_l_@cntr,c
  9440  002408                     l764:
  9441  002408  90D8               	bcf	status,0,c
  9442  00240A  362A               	rlcf	__tdiv_to_l_@quot,f,c
  9443  00240C  362B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9444  00240E  362C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9445  002410  362D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9446  002412  5024               	movf	__tdiv_to_l_@f2,w,c
  9447  002414  5C21               	subwf	__tdiv_to_l_@f1,w,c
  9448  002416  5025               	movf	__tdiv_to_l_@f2+1,w,c
  9449  002418  5822               	subwfb	__tdiv_to_l_@f1+1,w,c
  9450  00241A  5026               	movf	__tdiv_to_l_@f2+2,w,c
  9451  00241C  5823               	subwfb	__tdiv_to_l_@f1+2,w,c
  9452  00241E  A0D8               	btfss	status,0,c
  9453  002420  D007               	goto	l765
  9454  002422  5024               	movf	__tdiv_to_l_@f2,w,c
  9455  002424  5E21               	subwf	__tdiv_to_l_@f1,f,c
  9456  002426  5025               	movf	__tdiv_to_l_@f2+1,w,c
  9457  002428  5A22               	subwfb	__tdiv_to_l_@f1+1,f,c
  9458  00242A  5026               	movf	__tdiv_to_l_@f2+2,w,c
  9459  00242C  5A23               	subwfb	__tdiv_to_l_@f1+2,f,c
  9460  00242E  802A               	bsf	__tdiv_to_l_@quot,0,c
  9461  002430                     l765:
  9462  002430  90D8               	bcf	status,0,c
  9463  002432  3621               	rlcf	__tdiv_to_l_@f1,f,c
  9464  002434  3622               	rlcf	__tdiv_to_l_@f1+1,f,c
  9465  002436  3623               	rlcf	__tdiv_to_l_@f1+2,f,c
  9466  002438  2E2E               	decfsz	__tdiv_to_l_@cntr,f,c
  9467  00243A  D7E6               	goto	l764
  9468  00243C  AE2F               	btfss	__tdiv_to_l_@exp1,7,c
  9469  00243E  D016               	goto	l3245
  9470  002440  502F               	movf	__tdiv_to_l_@exp1,w,c
  9471  002442  0A80               	xorlw	128
  9472  002444  0F97               	addlw	151
  9473  002446  B0D8               	btfsc	status,0,c
  9474  002448  D009               	goto	l3241
  9475  00244A  0E00               	movlw	0
  9476  00244C  6E21               	movwf	?__tdiv_to_l_,c
  9477  00244E  0E00               	movlw	0
  9478  002450  6E22               	movwf	?__tdiv_to_l_+1,c
  9479  002452  0E00               	movlw	0
  9480  002454  6E23               	movwf	?__tdiv_to_l_+2,c
  9481  002456  0E00               	movlw	0
  9482  002458  6E24               	movwf	?__tdiv_to_l_+3,c
  9483  00245A  0012               	return	
  9484  00245C                     l3241:
  9485  00245C  90D8               	bcf	status,0,c
  9486  00245E  322D               	rrcf	__tdiv_to_l_@quot+3,f,c
  9487  002460  322C               	rrcf	__tdiv_to_l_@quot+2,f,c
  9488  002462  322B               	rrcf	__tdiv_to_l_@quot+1,f,c
  9489  002464  322A               	rrcf	__tdiv_to_l_@quot,f,c
  9490  002466  3E2F               	incfsz	__tdiv_to_l_@exp1,f,c
  9491  002468  D7F9               	goto	l3241
  9492  00246A  D015               	goto	l771
  9493  00246C                     l3245:
  9494  00246C  0E17               	movlw	23
  9495  00246E  642F               	cpfsgt	__tdiv_to_l_@exp1,c
  9496  002470  D00F               	goto	l3253
  9497  002472  0E00               	movlw	0
  9498  002474  6E21               	movwf	?__tdiv_to_l_,c
  9499  002476  0E00               	movlw	0
  9500  002478  6E22               	movwf	?__tdiv_to_l_+1,c
  9501  00247A  0E00               	movlw	0
  9502  00247C  6E23               	movwf	?__tdiv_to_l_+2,c
  9503  00247E  0E00               	movlw	0
  9504  002480  6E24               	movwf	?__tdiv_to_l_+3,c
  9505  002482  0012               	return	
  9506  002484                     l3251:
  9507  002484  90D8               	bcf	status,0,c
  9508  002486  362A               	rlcf	__tdiv_to_l_@quot,f,c
  9509  002488  362B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9510  00248A  362C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9511  00248C  362D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9512  00248E  062F               	decf	__tdiv_to_l_@exp1,f,c
  9513  002490                     l3253:
  9514  002490  502F               	movf	__tdiv_to_l_@exp1,w,c
  9515  002492  A4D8               	btfss	status,2,c
  9516  002494  D7F7               	goto	l3251
  9517  002496                     l771:
  9518  002496  C02A  F021         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9519  00249A  C02B  F022         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9520  00249E  C02C  F023         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9521  0024A2  C02D  F024         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9522  0024A6  0012               	return		;funcret
  9523  0024A8                     __end_of__tdiv_to_l_:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodh	equ	0xFF4
  9530                           prodl	equ	0xFF3
  9531                           indf0	equ	0xFEF
  9532                           fsr0h	equ	0xFEA
  9533                           fsr0l	equ	0xFE9
  9534                           wreg	equ	0xFE8
  9535                           indf1	equ	0xFE7
  9536                           fsr1h	equ	0xFE2
  9537                           fsr1l	equ	0xFE1
  9538                           indf2	equ	0xFDF
  9539                           postinc2	equ	0xFDE
  9540                           postdec2	equ	0xFDD
  9541                           fsr2h	equ	0xFDA
  9542                           fsr2l	equ	0xFD9
  9543                           status	equ	0xFD8
  9544                           
  9545 ;; *************** function __div_to_l_ *****************
  9546 ;; Defined at:
  9547 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  f1              3   32[COMRAM] unsigned long 
  9550 ;;  f2              3   35[COMRAM] unsigned long 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  quot            4   38[COMRAM] unsigned long 
  9553 ;;  exp1            1   43[COMRAM] unsigned char 
  9554 ;;  cntr            1   42[COMRAM] unsigned char 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  4   32[COMRAM] unsigned long 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9564 ;;      Params:         6       0       0       0       0       0       0
  9565 ;;      Locals:         6       0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0
  9567 ;;      Totals:        12       0       0       0       0       0       0
  9568 ;;Total ram usage:       12 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    2
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_sprintf
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text40
  9579  0025D4                     __ptext40:
  9580                           	opt stack 0
  9581  0025D4                     __div_to_l_:
  9582                           	opt stack 25
  9583                           
  9584                           ;incstack = 0
  9585  0025D4  3423               	rlcf	__div_to_l_@f1+2,w,c
  9586  0025D6  3424               	rlcf	__div_to_l_@f1+3,w,c
  9587  0025D8  6E2C               	movwf	__div_to_l_@exp1,c
  9588  0025DA  502C               	movf	__div_to_l_@exp1,w,c
  9589  0025DC  A4D8               	btfss	status,2,c
  9590  0025DE  D009               	goto	l3261
  9591  0025E0  0E00               	movlw	0
  9592  0025E2  6E21               	movwf	?__div_to_l_,c
  9593  0025E4  0E00               	movlw	0
  9594  0025E6  6E22               	movwf	?__div_to_l_+1,c
  9595  0025E8  0E00               	movlw	0
  9596  0025EA  6E23               	movwf	?__div_to_l_+2,c
  9597  0025EC  0E00               	movlw	0
  9598  0025EE  6E24               	movwf	?__div_to_l_+3,c
  9599  0025F0  0012               	return	
  9600  0025F2                     l3261:
  9601  0025F2  3426               	rlcf	__div_to_l_@f2+2,w,c
  9602  0025F4  3427               	rlcf	__div_to_l_@f2+3,w,c
  9603  0025F6  6E2B               	movwf	__div_to_l_@cntr,c
  9604  0025F8  502B               	movf	__div_to_l_@cntr,w,c
  9605  0025FA  A4D8               	btfss	status,2,c
  9606  0025FC  D009               	goto	l3267
  9607  0025FE  0E00               	movlw	0
  9608  002600  6E21               	movwf	?__div_to_l_,c
  9609  002602  0E00               	movlw	0
  9610  002604  6E22               	movwf	?__div_to_l_+1,c
  9611  002606  0E00               	movlw	0
  9612  002608  6E23               	movwf	?__div_to_l_+2,c
  9613  00260A  0E00               	movlw	0
  9614  00260C  6E24               	movwf	?__div_to_l_+3,c
  9615  00260E  0012               	return	
  9616  002610                     l3267:
  9617  002610  8E23               	bsf	__div_to_l_@f1+2,7,c
  9618  002612  0EFF               	movlw	255
  9619  002614  1621               	andwf	__div_to_l_@f1,f,c
  9620  002616  0EFF               	movlw	255
  9621  002618  1622               	andwf	__div_to_l_@f1+1,f,c
  9622  00261A  0EFF               	movlw	255
  9623  00261C  1623               	andwf	__div_to_l_@f1+2,f,c
  9624  00261E  0E00               	movlw	0
  9625  002620  1624               	andwf	__div_to_l_@f1+3,f,c
  9626  002622  8E26               	bsf	__div_to_l_@f2+2,7,c
  9627  002624  0EFF               	movlw	255
  9628  002626  1624               	andwf	__div_to_l_@f2,f,c
  9629  002628  0EFF               	movlw	255
  9630  00262A  1625               	andwf	__div_to_l_@f2+1,f,c
  9631  00262C  0EFF               	movlw	255
  9632  00262E  1626               	andwf	__div_to_l_@f2+2,f,c
  9633  002630  0E00               	movlw	0
  9634  002632  1627               	andwf	__div_to_l_@f2+3,f,c
  9635  002634  0E00               	movlw	0
  9636  002636  6E27               	movwf	__div_to_l_@quot,c
  9637  002638  0E00               	movlw	0
  9638  00263A  6E28               	movwf	__div_to_l_@quot+1,c
  9639  00263C  0E00               	movlw	0
  9640  00263E  6E29               	movwf	__div_to_l_@quot+2,c
  9641  002640  0E00               	movlw	0
  9642  002642  6E2A               	movwf	__div_to_l_@quot+3,c
  9643  002644  0E7F               	movlw	127
  9644  002646  5E2C               	subwf	__div_to_l_@exp1,f,c
  9645  002648  502B               	movf	__div_to_l_@cntr,w,c
  9646  00264A  0FA0               	addlw	160
  9647  00264C  5E2C               	subwf	__div_to_l_@exp1,f,c
  9648  00264E  0E20               	movlw	32
  9649  002650  6E2B               	movwf	__div_to_l_@cntr,c
  9650  002652                     l3281:
  9651  002652  90D8               	bcf	status,0,c
  9652  002654  3627               	rlcf	__div_to_l_@quot,f,c
  9653  002656  3628               	rlcf	__div_to_l_@quot+1,f,c
  9654  002658  3629               	rlcf	__div_to_l_@quot+2,f,c
  9655  00265A  362A               	rlcf	__div_to_l_@quot+3,f,c
  9656  00265C  5024               	movf	__div_to_l_@f2,w,c
  9657  00265E  5C21               	subwf	__div_to_l_@f1,w,c
  9658  002660  5025               	movf	__div_to_l_@f2+1,w,c
  9659  002662  5822               	subwfb	__div_to_l_@f1+1,w,c
  9660  002664  5026               	movf	__div_to_l_@f2+2,w,c
  9661  002666  5823               	subwfb	__div_to_l_@f1+2,w,c
  9662  002668  5027               	movf	__div_to_l_@f2+3,w,c
  9663  00266A  5824               	subwfb	__div_to_l_@f1+3,w,c
  9664  00266C  A0D8               	btfss	status,0,c
  9665  00266E  D009               	goto	l3289
  9666  002670  5024               	movf	__div_to_l_@f2,w,c
  9667  002672  5E21               	subwf	__div_to_l_@f1,f,c
  9668  002674  5025               	movf	__div_to_l_@f2+1,w,c
  9669  002676  5A22               	subwfb	__div_to_l_@f1+1,f,c
  9670  002678  5026               	movf	__div_to_l_@f2+2,w,c
  9671  00267A  5A23               	subwfb	__div_to_l_@f1+2,f,c
  9672  00267C  5027               	movf	__div_to_l_@f2+3,w,c
  9673  00267E  5A24               	subwfb	__div_to_l_@f1+3,f,c
  9674  002680  8027               	bsf	__div_to_l_@quot,0,c
  9675  002682                     l3289:
  9676  002682  90D8               	bcf	status,0,c
  9677  002684  3621               	rlcf	__div_to_l_@f1,f,c
  9678  002686  3622               	rlcf	__div_to_l_@f1+1,f,c
  9679  002688  3623               	rlcf	__div_to_l_@f1+2,f,c
  9680  00268A  3624               	rlcf	__div_to_l_@f1+3,f,c
  9681  00268C  2E2B               	decfsz	__div_to_l_@cntr,f,c
  9682  00268E  D7E1               	goto	l3281
  9683  002690  AE2C               	btfss	__div_to_l_@exp1,7,c
  9684  002692  D016               	goto	l3305
  9685  002694  502C               	movf	__div_to_l_@exp1,w,c
  9686  002696  0A80               	xorlw	128
  9687  002698  0F9F               	addlw	159
  9688  00269A  B0D8               	btfsc	status,0,c
  9689  00269C  D009               	goto	l3301
  9690  00269E  0E00               	movlw	0
  9691  0026A0  6E21               	movwf	?__div_to_l_,c
  9692  0026A2  0E00               	movlw	0
  9693  0026A4  6E22               	movwf	?__div_to_l_+1,c
  9694  0026A6  0E00               	movlw	0
  9695  0026A8  6E23               	movwf	?__div_to_l_+2,c
  9696  0026AA  0E00               	movlw	0
  9697  0026AC  6E24               	movwf	?__div_to_l_+3,c
  9698  0026AE  0012               	return	
  9699  0026B0                     l3301:
  9700  0026B0  90D8               	bcf	status,0,c
  9701  0026B2  322A               	rrcf	__div_to_l_@quot+3,f,c
  9702  0026B4  3229               	rrcf	__div_to_l_@quot+2,f,c
  9703  0026B6  3228               	rrcf	__div_to_l_@quot+1,f,c
  9704  0026B8  3227               	rrcf	__div_to_l_@quot,f,c
  9705  0026BA  3E2C               	incfsz	__div_to_l_@exp1,f,c
  9706  0026BC  D7F9               	goto	l3301
  9707  0026BE  D015               	goto	l667
  9708  0026C0                     l3305:
  9709  0026C0  0E1F               	movlw	31
  9710  0026C2  642C               	cpfsgt	__div_to_l_@exp1,c
  9711  0026C4  D00F               	goto	l3313
  9712  0026C6  0E00               	movlw	0
  9713  0026C8  6E21               	movwf	?__div_to_l_,c
  9714  0026CA  0E00               	movlw	0
  9715  0026CC  6E22               	movwf	?__div_to_l_+1,c
  9716  0026CE  0E00               	movlw	0
  9717  0026D0  6E23               	movwf	?__div_to_l_+2,c
  9718  0026D2  0E00               	movlw	0
  9719  0026D4  6E24               	movwf	?__div_to_l_+3,c
  9720  0026D6  0012               	return	
  9721  0026D8                     l3311:
  9722  0026D8  90D8               	bcf	status,0,c
  9723  0026DA  3627               	rlcf	__div_to_l_@quot,f,c
  9724  0026DC  3628               	rlcf	__div_to_l_@quot+1,f,c
  9725  0026DE  3629               	rlcf	__div_to_l_@quot+2,f,c
  9726  0026E0  362A               	rlcf	__div_to_l_@quot+3,f,c
  9727  0026E2  062C               	decf	__div_to_l_@exp1,f,c
  9728  0026E4                     l3313:
  9729  0026E4  502C               	movf	__div_to_l_@exp1,w,c
  9730  0026E6  A4D8               	btfss	status,2,c
  9731  0026E8  D7F7               	goto	l3311
  9732  0026EA                     l667:
  9733  0026EA  C027  F021         	movff	__div_to_l_@quot,?__div_to_l_
  9734  0026EE  C028  F022         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9735  0026F2  C029  F023         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9736  0026F6  C02A  F024         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9737  0026FA  0012               	return		;funcret
  9738  0026FC                     __end_of__div_to_l_:
  9739                           	opt stack 0
  9740                           tblptru	equ	0xFF8
  9741                           tblptrh	equ	0xFF7
  9742                           tblptrl	equ	0xFF6
  9743                           tablat	equ	0xFF5
  9744                           prodh	equ	0xFF4
  9745                           prodl	equ	0xFF3
  9746                           indf0	equ	0xFEF
  9747                           fsr0h	equ	0xFEA
  9748                           fsr0l	equ	0xFE9
  9749                           wreg	equ	0xFE8
  9750                           indf1	equ	0xFE7
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           indf2	equ	0xFDF
  9754                           postinc2	equ	0xFDE
  9755                           postdec2	equ	0xFDD
  9756                           fsr2h	equ	0xFDA
  9757                           fsr2l	equ	0xFD9
  9758                           status	equ	0xFD8
  9759                           
  9760 ;; *************** function ___lltoft *****************
  9761 ;; Defined at:
  9762 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  c               4   40[COMRAM] unsigned long 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  exp             1   48[COMRAM] unsigned char 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  3   40[COMRAM] float 
  9769 ;; Registers used:
  9770 ;;		wreg, status,2, status,0, cstack
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9776 ;;      Params:         4       0       0       0       0       0       0
  9777 ;;      Locals:         1       0       0       0       0       0       0
  9778 ;;      Temps:          4       0       0       0       0       0       0
  9779 ;;      Totals:         9       0       0       0       0       0       0
  9780 ;;Total ram usage:        9 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:    3
  9783 ;; This function calls:
  9784 ;;		___ftpack
  9785 ;; This function is called by:
  9786 ;;		_sprintf
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text41
  9791  00302C                     __ptext41:
  9792                           	opt stack 0
  9793  00302C                     ___lltoft:
  9794                           	opt stack 24
  9795                           
  9796                           ;incstack = 0
  9797  00302C  0E8E               	movlw	142
  9798  00302E  6E31               	movwf	___lltoft@exp,c
  9799  003030  D006               	goto	l3433
  9800  003032                     l3431:
  9801  003032  90D8               	bcf	status,0,c
  9802  003034  322C               	rrcf	___lltoft@c+3,f,c
  9803  003036  322B               	rrcf	___lltoft@c+2,f,c
  9804  003038  322A               	rrcf	___lltoft@c+1,f,c
  9805  00303A  3229               	rrcf	___lltoft@c,f,c
  9806  00303C  2A31               	incf	___lltoft@exp,f,c
  9807  00303E                     l3433:
  9808  00303E  0E00               	movlw	0
  9809  003040  1429               	andwf	___lltoft@c,w,c
  9810  003042  6E2D               	movwf	??___lltoft& (0+255),c
  9811  003044  0E00               	movlw	0
  9812  003046  142A               	andwf	___lltoft@c+1,w,c
  9813  003048  6E2E               	movwf	(??___lltoft+1)& (0+255),c
  9814  00304A  0E00               	movlw	0
  9815  00304C  142B               	andwf	___lltoft@c+2,w,c
  9816  00304E  6E2F               	movwf	(??___lltoft+2)& (0+255),c
  9817  003050  0EFF               	movlw	255
  9818  003052  142C               	andwf	___lltoft@c+3,w,c
  9819  003054  6E30               	movwf	(??___lltoft+3)& (0+255),c
  9820  003056  502D               	movf	??___lltoft,w,c
  9821  003058  102E               	iorwf	??___lltoft+1,w,c
  9822  00305A  102F               	iorwf	??___lltoft+2,w,c
  9823  00305C  1030               	iorwf	??___lltoft+3,w,c
  9824  00305E  A4D8               	btfss	status,2,c
  9825  003060  D7E8               	goto	l3431
  9826  003062  C029  F021         	movff	___lltoft@c,___ftpack@arg
  9827  003066  C02A  F022         	movff	___lltoft@c+1,___ftpack@arg+1
  9828  00306A  C02B  F023         	movff	___lltoft@c+2,___ftpack@arg+2
  9829  00306E  C031  F024         	movff	___lltoft@exp,___ftpack@exp
  9830  003072  0E00               	movlw	0
  9831  003074  6E25               	movwf	___ftpack@sign,c
  9832  003076  EC7D  F015         	call	___ftpack	;wreg free
  9833  00307A  C021  F029         	movff	?___ftpack,?___lltoft
  9834  00307E  C022  F02A         	movff	?___ftpack+1,?___lltoft+1
  9835  003082  C023  F02B         	movff	?___ftpack+2,?___lltoft+2
  9836  003086  0012               	return	
  9837  003088                     __end_of___lltoft:
  9838                           	opt stack 0
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           indf0	equ	0xFEF
  9846                           fsr0h	equ	0xFEA
  9847                           fsr0l	equ	0xFE9
  9848                           wreg	equ	0xFE8
  9849                           indf1	equ	0xFE7
  9850                           fsr1h	equ	0xFE2
  9851                           fsr1l	equ	0xFE1
  9852                           indf2	equ	0xFDF
  9853                           postinc2	equ	0xFDE
  9854                           postdec2	equ	0xFDD
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function ___llmod *****************
  9860 ;; Defined at:
  9861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  dividend        4   45[COMRAM] unsigned long 
  9864 ;;  divisor         4   49[COMRAM] unsigned long 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  counter         1   53[COMRAM] unsigned char 
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  4   45[COMRAM] unsigned long 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9876 ;;      Params:         8       0       0       0       0       0       0
  9877 ;;      Locals:         1       0       0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0
  9879 ;;      Totals:         9       0       0       0       0       0       0
  9880 ;;Total ram usage:        9 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:    2
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_sprintf
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text42
  9891  002F6A                     __ptext42:
  9892                           	opt stack 0
  9893  002F6A                     ___llmod:
  9894                           	opt stack 25
  9895                           
  9896                           ;incstack = 0
  9897  002F6A  5032               	movf	___llmod@divisor,w,c
  9898  002F6C  1033               	iorwf	___llmod@divisor+1,w,c
  9899  002F6E  1034               	iorwf	___llmod@divisor+2,w,c
  9900  002F70  1035               	iorwf	___llmod@divisor+3,w,c
  9901  002F72  B4D8               	btfsc	status,2,c
  9902  002F74  D024               	goto	l856
  9903  002F76  0E01               	movlw	1
  9904  002F78  6E36               	movwf	___llmod@counter,c
  9905  002F7A  D006               	goto	l3419
  9906  002F7C                     l3417:
  9907  002F7C  90D8               	bcf	status,0,c
  9908  002F7E  3632               	rlcf	___llmod@divisor,f,c
  9909  002F80  3633               	rlcf	___llmod@divisor+1,f,c
  9910  002F82  3634               	rlcf	___llmod@divisor+2,f,c
  9911  002F84  3635               	rlcf	___llmod@divisor+3,f,c
  9912  002F86  2A36               	incf	___llmod@counter,f,c
  9913  002F88                     l3419:
  9914  002F88  AE35               	btfss	___llmod@divisor+3,7,c
  9915  002F8A  D7F8               	goto	l3417
  9916  002F8C                     l3421:
  9917  002F8C  5032               	movf	___llmod@divisor,w,c
  9918  002F8E  5C2E               	subwf	___llmod@dividend,w,c
  9919  002F90  5033               	movf	___llmod@divisor+1,w,c
  9920  002F92  582F               	subwfb	___llmod@dividend+1,w,c
  9921  002F94  5034               	movf	___llmod@divisor+2,w,c
  9922  002F96  5830               	subwfb	___llmod@dividend+2,w,c
  9923  002F98  5035               	movf	___llmod@divisor+3,w,c
  9924  002F9A  5831               	subwfb	___llmod@dividend+3,w,c
  9925  002F9C  A0D8               	btfss	status,0,c
  9926  002F9E  D008               	goto	l3425
  9927  002FA0  5032               	movf	___llmod@divisor,w,c
  9928  002FA2  5E2E               	subwf	___llmod@dividend,f,c
  9929  002FA4  5033               	movf	___llmod@divisor+1,w,c
  9930  002FA6  5A2F               	subwfb	___llmod@dividend+1,f,c
  9931  002FA8  5034               	movf	___llmod@divisor+2,w,c
  9932  002FAA  5A30               	subwfb	___llmod@dividend+2,f,c
  9933  002FAC  5035               	movf	___llmod@divisor+3,w,c
  9934  002FAE  5A31               	subwfb	___llmod@dividend+3,f,c
  9935  002FB0                     l3425:
  9936  002FB0  90D8               	bcf	status,0,c
  9937  002FB2  3235               	rrcf	___llmod@divisor+3,f,c
  9938  002FB4  3234               	rrcf	___llmod@divisor+2,f,c
  9939  002FB6  3233               	rrcf	___llmod@divisor+1,f,c
  9940  002FB8  3232               	rrcf	___llmod@divisor,f,c
  9941  002FBA  2E36               	decfsz	___llmod@counter,f,c
  9942  002FBC  D7E7               	goto	l3421
  9943  002FBE                     l856:
  9944  002FBE  C02E  F02E         	movff	___llmod@dividend,?___llmod
  9945  002FC2  C02F  F02F         	movff	___llmod@dividend+1,?___llmod+1
  9946  002FC6  C030  F030         	movff	___llmod@dividend+2,?___llmod+2
  9947  002FCA  C031  F031         	movff	___llmod@dividend+3,?___llmod+3
  9948  002FCE  0012               	return		;funcret
  9949  002FD0                     __end_of___llmod:
  9950                           	opt stack 0
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           indf0	equ	0xFEF
  9958                           fsr0h	equ	0xFEA
  9959                           fsr0l	equ	0xFE9
  9960                           wreg	equ	0xFE8
  9961                           indf1	equ	0xFE7
  9962                           fsr1h	equ	0xFE2
  9963                           fsr1l	equ	0xFE1
  9964                           indf2	equ	0xFDF
  9965                           postinc2	equ	0xFDE
  9966                           postdec2	equ	0xFDD
  9967                           fsr2h	equ	0xFDA
  9968                           fsr2l	equ	0xFD9
  9969                           status	equ	0xFD8
  9970                           
  9971 ;; *************** function ___lldiv *****************
  9972 ;; Defined at:
  9973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  dividend        4   32[COMRAM] unsigned long 
  9976 ;;  divisor         4   36[COMRAM] unsigned long 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  quotient        4   40[COMRAM] unsigned long 
  9979 ;;  counter         1   44[COMRAM] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  4   32[COMRAM] unsigned long 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9989 ;;      Params:         8       0       0       0       0       0       0
  9990 ;;      Locals:         5       0       0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0
  9992 ;;      Totals:        13       0       0       0       0       0       0
  9993 ;;Total ram usage:       13 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    2
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_sprintf
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text43
 10004  002E78                     __ptext43:
 10005                           	opt stack 0
 10006  002E78                     ___lldiv:
 10007                           	opt stack 25
 10008                           
 10009                           ;incstack = 0
 10010  002E78  0E00               	movlw	0
 10011  002E7A  6E29               	movwf	___lldiv@quotient,c
 10012  002E7C  0E00               	movlw	0
 10013  002E7E  6E2A               	movwf	___lldiv@quotient+1,c
 10014  002E80  0E00               	movlw	0
 10015  002E82  6E2B               	movwf	___lldiv@quotient+2,c
 10016  002E84  0E00               	movlw	0
 10017  002E86  6E2C               	movwf	___lldiv@quotient+3,c
 10018  002E88  5025               	movf	___lldiv@divisor,w,c
 10019  002E8A  1026               	iorwf	___lldiv@divisor+1,w,c
 10020  002E8C  1027               	iorwf	___lldiv@divisor+2,w,c
 10021  002E8E  1028               	iorwf	___lldiv@divisor+3,w,c
 10022  002E90  B4D8               	btfsc	status,2,c
 10023  002E92  D02A               	goto	l846
 10024  002E94  0E01               	movlw	1
 10025  002E96  6E2D               	movwf	___lldiv@counter,c
 10026  002E98  D006               	goto	l3399
 10027  002E9A                     l3397:
 10028  002E9A  90D8               	bcf	status,0,c
 10029  002E9C  3625               	rlcf	___lldiv@divisor,f,c
 10030  002E9E  3626               	rlcf	___lldiv@divisor+1,f,c
 10031  002EA0  3627               	rlcf	___lldiv@divisor+2,f,c
 10032  002EA2  3628               	rlcf	___lldiv@divisor+3,f,c
 10033  002EA4  2A2D               	incf	___lldiv@counter,f,c
 10034  002EA6                     l3399:
 10035  002EA6  AE28               	btfss	___lldiv@divisor+3,7,c
 10036  002EA8  D7F8               	goto	l3397
 10037  002EAA                     l3401:
 10038  002EAA  90D8               	bcf	status,0,c
 10039  002EAC  3629               	rlcf	___lldiv@quotient,f,c
 10040  002EAE  362A               	rlcf	___lldiv@quotient+1,f,c
 10041  002EB0  362B               	rlcf	___lldiv@quotient+2,f,c
 10042  002EB2  362C               	rlcf	___lldiv@quotient+3,f,c
 10043  002EB4  5025               	movf	___lldiv@divisor,w,c
 10044  002EB6  5C21               	subwf	___lldiv@dividend,w,c
 10045  002EB8  5026               	movf	___lldiv@divisor+1,w,c
 10046  002EBA  5822               	subwfb	___lldiv@dividend+1,w,c
 10047  002EBC  5027               	movf	___lldiv@divisor+2,w,c
 10048  002EBE  5823               	subwfb	___lldiv@dividend+2,w,c
 10049  002EC0  5028               	movf	___lldiv@divisor+3,w,c
 10050  002EC2  5824               	subwfb	___lldiv@dividend+3,w,c
 10051  002EC4  A0D8               	btfss	status,0,c
 10052  002EC6  D009               	goto	l3409
 10053  002EC8  5025               	movf	___lldiv@divisor,w,c
 10054  002ECA  5E21               	subwf	___lldiv@dividend,f,c
 10055  002ECC  5026               	movf	___lldiv@divisor+1,w,c
 10056  002ECE  5A22               	subwfb	___lldiv@dividend+1,f,c
 10057  002ED0  5027               	movf	___lldiv@divisor+2,w,c
 10058  002ED2  5A23               	subwfb	___lldiv@dividend+2,f,c
 10059  002ED4  5028               	movf	___lldiv@divisor+3,w,c
 10060  002ED6  5A24               	subwfb	___lldiv@dividend+3,f,c
 10061  002ED8  8029               	bsf	___lldiv@quotient,0,c
 10062  002EDA                     l3409:
 10063  002EDA  90D8               	bcf	status,0,c
 10064  002EDC  3228               	rrcf	___lldiv@divisor+3,f,c
 10065  002EDE  3227               	rrcf	___lldiv@divisor+2,f,c
 10066  002EE0  3226               	rrcf	___lldiv@divisor+1,f,c
 10067  002EE2  3225               	rrcf	___lldiv@divisor,f,c
 10068  002EE4  2E2D               	decfsz	___lldiv@counter,f,c
 10069  002EE6  D7E1               	goto	l3401
 10070  002EE8                     l846:
 10071  002EE8  C029  F021         	movff	___lldiv@quotient,?___lldiv
 10072  002EEC  C02A  F022         	movff	___lldiv@quotient+1,?___lldiv+1
 10073  002EF0  C02B  F023         	movff	___lldiv@quotient+2,?___lldiv+2
 10074  002EF4  C02C  F024         	movff	___lldiv@quotient+3,?___lldiv+3
 10075  002EF8  0012               	return		;funcret
 10076  002EFA                     __end_of___lldiv:
 10077                           	opt stack 0
 10078                           tblptru	equ	0xFF8
 10079                           tblptrh	equ	0xFF7
 10080                           tblptrl	equ	0xFF6
 10081                           tablat	equ	0xFF5
 10082                           prodh	equ	0xFF4
 10083                           prodl	equ	0xFF3
 10084                           indf0	equ	0xFEF
 10085                           fsr0h	equ	0xFEA
 10086                           fsr0l	equ	0xFE9
 10087                           wreg	equ	0xFE8
 10088                           indf1	equ	0xFE7
 10089                           fsr1h	equ	0xFE2
 10090                           fsr1l	equ	0xFE1
 10091                           indf2	equ	0xFDF
 10092                           postinc2	equ	0xFDE
 10093                           postdec2	equ	0xFDD
 10094                           fsr2h	equ	0xFDA
 10095                           fsr2l	equ	0xFD9
 10096                           status	equ	0xFD8
 10097                           
 10098 ;; *************** function ___fttol *****************
 10099 ;; Defined at:
 10100 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  f1              3   16[BANK0 ] float 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  lval            4   26[BANK0 ] unsigned long 
 10105 ;;  exp1            1   30[BANK0 ] unsigned char 
 10106 ;;  sign1           1   25[BANK0 ] unsigned char 
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  4   16[BANK0 ] long 
 10109 ;; Registers used:
 10110 ;;		wreg, status,2, status,0
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10116 ;;      Params:         0       4       0       0       0       0       0
 10117 ;;      Locals:         0       6       0       0       0       0       0
 10118 ;;      Temps:          0       5       0       0       0       0       0
 10119 ;;      Totals:         0      15       0       0       0       0       0
 10120 ;;Total ram usage:       15 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; Hardware stack levels required when called:    2
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_util_getSolarCurrent
 10127 ;;		_util_getBatteryCurrent
 10128 ;;		_sprintf
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text44
 10133  002232                     __ptext44:
 10134                           	opt stack 0
 10135  002232                     ___fttol:
 10136                           	opt stack 26
 10137                           
 10138                           ;incstack = 0
 10139  002232  C072  F074         	movff	___fttol@f1+2,??___fttol
 10140  002236  0100               	movlb	0	; () banked
 10141  002238  6B75               	clrf	(??___fttol+1)& (0+255),b
 10142  00223A  6B76               	clrf	(??___fttol+2)& (0+255),b
 10143  00223C  0100               	movlb	0	; () banked
 10144  00223E  3571               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10145  002240  0100               	movlb	0	; () banked
 10146  002242  3774               	rlcf	??___fttol& (0+255),f,b
 10147  002244  E301               	bnc	u2991
 10148  002246  8175               	bsf	(??___fttol+1)& (0+255),0,b
 10149  002248                     u2991:
 10150  002248  0100               	movlb	0	; () banked
 10151  00224A  5174               	movf	??___fttol& (0+255),w,b
 10152  00224C  0100               	movlb	0	; () banked
 10153  00224E  6F7E               	movwf	___fttol@exp1& (0+255),b
 10154  002250  0100               	movlb	0	; () banked
 10155  002252  517E               	movf	___fttol@exp1& (0+255),w,b
 10156  002254  A4D8               	btfss	status,2,c
 10157  002256  D00A               	goto	l3351
 10158                           
 10159                           ; BSR set to: 0
 10160  002258  0E00               	movlw	0
 10161  00225A  0100               	movlb	0	; () banked
 10162  00225C  6F70               	movwf	?___fttol& (0+255),b
 10163  00225E  0E00               	movlw	0
 10164  002260  6F71               	movwf	(?___fttol+1)& (0+255),b
 10165  002262  0E00               	movlw	0
 10166  002264  6F72               	movwf	(?___fttol+2)& (0+255),b
 10167  002266  0E00               	movlw	0
 10168  002268  6F73               	movwf	(?___fttol+3)& (0+255),b
 10169                           
 10170                           ; BSR set to: 0
 10171  00226A  0012               	return	
 10172  00226C                     l3351:
 10173                           
 10174                           ; BSR set to: 0
 10175  00226C  0E17               	movlw	23
 10176  00226E  0100               	movlb	0	; () banked
 10177  002270  6F74               	movwf	??___fttol& (0+255),b
 10178  002272  C070  F075         	movff	___fttol@f1,??___fttol+1
 10179  002276  C071  F076         	movff	___fttol@f1+1,??___fttol+2
 10180  00227A  C072  F077         	movff	___fttol@f1+2,??___fttol+3
 10181  00227E  0100               	movlb	0	; () banked
 10182  002280  2974               	incf	??___fttol& (0+255),w,b
 10183  002282  0100               	movlb	0	; () banked
 10184  002284  6F78               	movwf	(??___fttol+4)& (0+255),b
 10185  002286  D005               	goto	u3010
 10186  002288                     u3015:
 10187  002288  0100               	movlb	0	; () banked
 10188  00228A  90D8               	bcf	status,0,c
 10189  00228C  3377               	rrcf	(??___fttol+3)& (0+255),f,b
 10190  00228E  3376               	rrcf	(??___fttol+2)& (0+255),f,b
 10191  002290  3375               	rrcf	(??___fttol+1)& (0+255),f,b
 10192  002292                     u3010:
 10193  002292  0100               	movlb	0	; () banked
 10194  002294  2F78               	decfsz	(??___fttol+4)& (0+255),f,b
 10195  002296  D7F8               	goto	u3015
 10196  002298  0100               	movlb	0	; () banked
 10197  00229A  5175               	movf	(??___fttol+1)& (0+255),w,b
 10198  00229C  0100               	movlb	0	; () banked
 10199  00229E  6F79               	movwf	___fttol@sign1& (0+255),b
 10200                           
 10201                           ; BSR set to: 0
 10202  0022A0  0100               	movlb	0	; () banked
 10203  0022A2  8F71               	bsf	(___fttol@f1+1)& (0+255),7,b
 10204                           
 10205                           ; BSR set to: 0
 10206  0022A4  0EFF               	movlw	255
 10207  0022A6  0100               	movlb	0	; () banked
 10208  0022A8  1770               	andwf	___fttol@f1& (0+255),f,b
 10209  0022AA  0EFF               	movlw	255
 10210  0022AC  0100               	movlb	0	; () banked
 10211  0022AE  1771               	andwf	(___fttol@f1+1)& (0+255),f,b
 10212  0022B0  0E00               	movlw	0
 10213  0022B2  0100               	movlb	0	; () banked
 10214  0022B4  1772               	andwf	(___fttol@f1+2)& (0+255),f,b
 10215                           
 10216                           ; BSR set to: 0
 10217  0022B6  0100               	movlb	0	; () banked
 10218  0022B8  5170               	movf	___fttol@f1& (0+255),w,b
 10219  0022BA  0100               	movlb	0	; () banked
 10220  0022BC  6F7A               	movwf	___fttol@lval& (0+255),b
 10221  0022BE  0100               	movlb	0	; () banked
 10222  0022C0  5171               	movf	(___fttol@f1+1)& (0+255),w,b
 10223  0022C2  0100               	movlb	0	; () banked
 10224  0022C4  6F7B               	movwf	(___fttol@lval+1)& (0+255),b
 10225  0022C6  0100               	movlb	0	; () banked
 10226  0022C8  5172               	movf	(___fttol@f1+2)& (0+255),w,b
 10227  0022CA  0100               	movlb	0	; () banked
 10228  0022CC  6F7C               	movwf	(___fttol@lval+2)& (0+255),b
 10229  0022CE  0100               	movlb	0	; () banked
 10230  0022D0  6B7D               	clrf	(___fttol@lval+3)& (0+255),b
 10231                           
 10232                           ; BSR set to: 0
 10233  0022D2  0E8E               	movlw	142
 10234  0022D4  0100               	movlb	0	; () banked
 10235  0022D6  5F7E               	subwf	___fttol@exp1& (0+255),f,b
 10236                           
 10237                           ; BSR set to: 0
 10238  0022D8  0100               	movlb	0	; () banked
 10239  0022DA  AF7E               	btfss	___fttol@exp1& (0+255),7,b
 10240  0022DC  D01A               	goto	l3373
 10241                           
 10242                           ; BSR set to: 0
 10243  0022DE  0100               	movlb	0	; () banked
 10244  0022E0  517E               	movf	___fttol@exp1& (0+255),w,b
 10245  0022E2  0A80               	xorlw	128
 10246  0022E4  0F8F               	addlw	143
 10247  0022E6  B0D8               	btfsc	status,0,c
 10248  0022E8  D00A               	goto	l3369
 10249                           
 10250                           ; BSR set to: 0
 10251  0022EA  0E00               	movlw	0
 10252  0022EC  0100               	movlb	0	; () banked
 10253  0022EE  6F70               	movwf	?___fttol& (0+255),b
 10254  0022F0  0E00               	movlw	0
 10255  0022F2  6F71               	movwf	(?___fttol+1)& (0+255),b
 10256  0022F4  0E00               	movlw	0
 10257  0022F6  6F72               	movwf	(?___fttol+2)& (0+255),b
 10258  0022F8  0E00               	movlw	0
 10259  0022FA  6F73               	movwf	(?___fttol+3)& (0+255),b
 10260                           
 10261                           ; BSR set to: 0
 10262  0022FC  0012               	return	
 10263  0022FE                     l3369:
 10264                           
 10265                           ; BSR set to: 0
 10266  0022FE  0100               	movlb	0	; () banked
 10267  002300  90D8               	bcf	status,0,c
 10268  002302  337D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 10269  002304  337C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 10270  002306  337B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 10271  002308  337A               	rrcf	___fttol@lval& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  00230A  0100               	movlb	0	; () banked
 10275  00230C  3F7E               	incfsz	___fttol@exp1& (0+255),f,b
 10276  00230E  D7F7               	goto	l3369
 10277                           
 10278                           ; BSR set to: 0
 10279  002310  D01B               	goto	l3383
 10280  002312                     l3373:
 10281                           
 10282                           ; BSR set to: 0
 10283  002312  0E17               	movlw	23
 10284  002314  0100               	movlb	0	; () banked
 10285  002316  657E               	cpfsgt	___fttol@exp1& (0+255),b
 10286  002318  D012               	goto	l3381
 10287                           
 10288                           ; BSR set to: 0
 10289  00231A  0E00               	movlw	0
 10290  00231C  0100               	movlb	0	; () banked
 10291  00231E  6F70               	movwf	?___fttol& (0+255),b
 10292  002320  0E00               	movlw	0
 10293  002322  6F71               	movwf	(?___fttol+1)& (0+255),b
 10294  002324  0E00               	movlw	0
 10295  002326  6F72               	movwf	(?___fttol+2)& (0+255),b
 10296  002328  0E00               	movlw	0
 10297  00232A  6F73               	movwf	(?___fttol+3)& (0+255),b
 10298                           
 10299                           ; BSR set to: 0
 10300  00232C  0012               	return	
 10301  00232E                     l3379:
 10302                           
 10303                           ; BSR set to: 0
 10304  00232E  0100               	movlb	0	; () banked
 10305  002330  90D8               	bcf	status,0,c
 10306  002332  377A               	rlcf	___fttol@lval& (0+255),f,b
 10307  002334  377B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10308  002336  377C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10309  002338  377D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10310  00233A  0100               	movlb	0	; () banked
 10311  00233C  077E               	decf	___fttol@exp1& (0+255),f,b
 10312  00233E                     l3381:
 10313                           
 10314                           ; BSR set to: 0
 10315  00233E  0100               	movlb	0	; () banked
 10316  002340  517E               	movf	___fttol@exp1& (0+255),w,b
 10317  002342  0100               	movlb	0	; () banked
 10318  002344  A4D8               	btfss	status,2,c
 10319  002346  D7F3               	goto	l3379
 10320  002348                     l3383:
 10321                           
 10322                           ; BSR set to: 0
 10323  002348  0100               	movlb	0	; () banked
 10324  00234A  5179               	movf	___fttol@sign1& (0+255),w,b
 10325  00234C  0100               	movlb	0	; () banked
 10326  00234E  B4D8               	btfsc	status,2,c
 10327  002350  D009               	goto	l3387
 10328                           
 10329                           ; BSR set to: 0
 10330  002352  0100               	movlb	0	; () banked
 10331  002354  1F7D               	comf	(___fttol@lval+3)& (0+255),f,b
 10332  002356  1F7C               	comf	(___fttol@lval+2)& (0+255),f,b
 10333  002358  1F7B               	comf	(___fttol@lval+1)& (0+255),f,b
 10334  00235A  6D7A               	negf	___fttol@lval& (0+255),b
 10335  00235C  0E00               	movlw	0
 10336  00235E  237B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10337  002360  237C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10338  002362  237D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10339  002364                     l3387:
 10340                           
 10341                           ; BSR set to: 0
 10342  002364  C07A  F070         	movff	___fttol@lval,?___fttol
 10343  002368  C07B  F071         	movff	___fttol@lval+1,?___fttol+1
 10344  00236C  C07C  F072         	movff	___fttol@lval+2,?___fttol+2
 10345  002370  C07D  F073         	movff	___fttol@lval+3,?___fttol+3
 10346  002374  0012               	return	
 10347  002376                     __end_of___fttol:
 10348                           	opt stack 0
 10349                           tblptru	equ	0xFF8
 10350                           tblptrh	equ	0xFF7
 10351                           tblptrl	equ	0xFF6
 10352                           tablat	equ	0xFF5
 10353                           prodh	equ	0xFF4
 10354                           prodl	equ	0xFF3
 10355                           indf0	equ	0xFEF
 10356                           fsr0h	equ	0xFEA
 10357                           fsr0l	equ	0xFE9
 10358                           wreg	equ	0xFE8
 10359                           indf1	equ	0xFE7
 10360                           fsr1h	equ	0xFE2
 10361                           fsr1l	equ	0xFE1
 10362                           indf2	equ	0xFDF
 10363                           postinc2	equ	0xFDE
 10364                           postdec2	equ	0xFDD
 10365                           fsr2h	equ	0xFDA
 10366                           fsr2l	equ	0xFD9
 10367                           status	equ	0xFD8
 10368                           
 10369 ;; *************** function ___ftsub *****************
 10370 ;; Defined at:
 10371 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  f1              3   31[BANK0 ] float 
 10374 ;;  f2              3   34[BANK0 ] float 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  3   31[BANK0 ] float 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10386 ;;      Params:         0       6       0       0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0
 10389 ;;      Totals:         0       6       0       0       0       0       0
 10390 ;;Total ram usage:        6 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    4
 10393 ;; This function calls:
 10394 ;;		___ftadd
 10395 ;; This function is called by:
 10396 ;;		_sprintf
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text45
 10401  003128                     __ptext45:
 10402                           	opt stack 0
 10403  003128                     ___ftsub:
 10404                           	opt stack 23
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;incstack = 0
 10408  003128  0100               	movlb	0	; () banked
 10409  00312A  5182               	movf	___ftsub@f2& (0+255),w,b
 10410  00312C  0100               	movlb	0	; () banked
 10411  00312E  1183               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10412  003130  0100               	movlb	0	; () banked
 10413  003132  1184               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10414  003134  B4D8               	btfsc	status,2,c
 10415  003136  D009               	goto	l3319
 10416                           
 10417                           ; BSR set to: 0
 10418  003138  0E00               	movlw	0
 10419  00313A  0100               	movlb	0	; () banked
 10420  00313C  1B82               	xorwf	___ftsub@f2& (0+255),f,b
 10421  00313E  0E00               	movlw	0
 10422  003140  0100               	movlb	0	; () banked
 10423  003142  1B83               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10424  003144  0E80               	movlw	128
 10425  003146  0100               	movlb	0	; () banked
 10426  003148  1B84               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10427  00314A                     l3319:
 10428                           
 10429                           ; BSR set to: 0
 10430  00314A  C07F  F073         	movff	___ftsub@f1,___ftadd@f1
 10431  00314E  C080  F074         	movff	___ftsub@f1+1,___ftadd@f1+1
 10432  003152  C081  F075         	movff	___ftsub@f1+2,___ftadd@f1+2
 10433  003156  C082  F076         	movff	___ftsub@f2,___ftadd@f2
 10434  00315A  C083  F077         	movff	___ftsub@f2+1,___ftadd@f2+1
 10435  00315E  C084  F078         	movff	___ftsub@f2+2,___ftadd@f2+2
 10436  003162  EC67  F00D         	call	___ftadd	;wreg free
 10437  003166  C073  F07F         	movff	?___ftadd,?___ftsub
 10438  00316A  C074  F080         	movff	?___ftadd+1,?___ftsub+1
 10439  00316E  C075  F081         	movff	?___ftadd+2,?___ftsub+2
 10440  003172  0012               	return	
 10441  003174                     __end_of___ftsub:
 10442                           	opt stack 0
 10443                           tblptru	equ	0xFF8
 10444                           tblptrh	equ	0xFF7
 10445                           tblptrl	equ	0xFF6
 10446                           tablat	equ	0xFF5
 10447                           prodh	equ	0xFF4
 10448                           prodl	equ	0xFF3
 10449                           indf0	equ	0xFEF
 10450                           fsr0h	equ	0xFEA
 10451                           fsr0l	equ	0xFE9
 10452                           wreg	equ	0xFE8
 10453                           indf1	equ	0xFE7
 10454                           fsr1h	equ	0xFE2
 10455                           fsr1l	equ	0xFE1
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           postdec2	equ	0xFDD
 10459                           fsr2h	equ	0xFDA
 10460                           fsr2l	equ	0xFD9
 10461                           status	equ	0xFD8
 10462                           
 10463 ;; *************** function ___ftadd *****************
 10464 ;; Defined at:
 10465 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;  f1              3   19[BANK0 ] float 
 10468 ;;  f2              3   22[BANK0 ] float 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  exp1            1   30[BANK0 ] unsigned char 
 10471 ;;  exp2            1   29[BANK0 ] unsigned char 
 10472 ;;  sign            1   28[BANK0 ] unsigned char 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  3   19[BANK0 ] float 
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0, cstack
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10482 ;;      Params:         0       6       0       0       0       0       0
 10483 ;;      Locals:         0       3       0       0       0       0       0
 10484 ;;      Temps:          0       3       0       0       0       0       0
 10485 ;;      Totals:         0      12       0       0       0       0       0
 10486 ;;Total ram usage:       12 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; Hardware stack levels required when called:    3
 10489 ;; This function calls:
 10490 ;;		___ftpack
 10491 ;; This function is called by:
 10492 ;;		_util_getTemperature
 10493 ;;		_sprintf
 10494 ;;		___ftsub
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text46
 10499  001ACE                     __ptext46:
 10500                           	opt stack 0
 10501  001ACE                     ___ftadd:
 10502                           	opt stack 25
 10503                           
 10504                           ;incstack = 0
 10505  001ACE  C075  F079         	movff	___ftadd@f1+2,??___ftadd
 10506  001AD2  0100               	movlb	0	; () banked
 10507  001AD4  6B7A               	clrf	(??___ftadd+1)& (0+255),b
 10508  001AD6  6B7B               	clrf	(??___ftadd+2)& (0+255),b
 10509  001AD8  0100               	movlb	0	; () banked
 10510  001ADA  3574               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10511  001ADC  0100               	movlb	0	; () banked
 10512  001ADE  3779               	rlcf	??___ftadd& (0+255),f,b
 10513  001AE0  E301               	bnc	u2241
 10514  001AE2  817A               	bsf	(??___ftadd+1)& (0+255),0,b
 10515  001AE4                     u2241:
 10516  001AE4  0100               	movlb	0	; () banked
 10517  001AE6  5179               	movf	??___ftadd& (0+255),w,b
 10518  001AE8  0100               	movlb	0	; () banked
 10519  001AEA  6F7E               	movwf	___ftadd@exp1& (0+255),b
 10520  001AEC  C078  F079         	movff	___ftadd@f2+2,??___ftadd
 10521  001AF0  0100               	movlb	0	; () banked
 10522  001AF2  6B7A               	clrf	(??___ftadd+1)& (0+255),b
 10523  001AF4  6B7B               	clrf	(??___ftadd+2)& (0+255),b
 10524  001AF6  0100               	movlb	0	; () banked
 10525  001AF8  3577               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10526  001AFA  0100               	movlb	0	; () banked
 10527  001AFC  3779               	rlcf	??___ftadd& (0+255),f,b
 10528  001AFE  E301               	bnc	u2251
 10529  001B00  817A               	bsf	(??___ftadd+1)& (0+255),0,b
 10530  001B02                     u2251:
 10531  001B02  0100               	movlb	0	; () banked
 10532  001B04  5179               	movf	??___ftadd& (0+255),w,b
 10533  001B06  0100               	movlb	0	; () banked
 10534  001B08  6F7D               	movwf	___ftadd@exp2& (0+255),b
 10535                           
 10536                           ; BSR set to: 0
 10537  001B0A  0100               	movlb	0	; () banked
 10538  001B0C  517E               	movf	___ftadd@exp1& (0+255),w,b
 10539  001B0E  0100               	movlb	0	; () banked
 10540  001B10  B4D8               	btfsc	status,2,c
 10541  001B12  D011               	goto	l722
 10542                           
 10543                           ; BSR set to: 0
 10544  001B14  0100               	movlb	0	; () banked
 10545  001B16  517D               	movf	___ftadd@exp2& (0+255),w,b
 10546  001B18  0100               	movlb	0	; () banked
 10547  001B1A  5D7E               	subwf	___ftadd@exp1& (0+255),w,b
 10548  001B1C  B0D8               	btfsc	status,0,c
 10549  001B1E  D012               	goto	l2867
 10550                           
 10551                           ; BSR set to: 0
 10552  001B20  0100               	movlb	0	; () banked
 10553  001B22  517E               	movf	___ftadd@exp1& (0+255),w,b
 10554  001B24  0800               	sublw	0
 10555  001B26  0100               	movlb	0	; () banked
 10556  001B28  257D               	addwf	___ftadd@exp2& (0+255),w,b
 10557  001B2A  0100               	movlb	0	; () banked
 10558  001B2C  6F79               	movwf	??___ftadd& (0+255),b
 10559  001B2E  0E18               	movlw	24
 10560  001B30  0100               	movlb	0	; () banked
 10561  001B32  6579               	cpfsgt	??___ftadd& (0+255),b
 10562  001B34  D007               	goto	l2867
 10563  001B36                     l722:
 10564                           
 10565                           ; BSR set to: 0
 10566  001B36  C076  F073         	movff	___ftadd@f2,?___ftadd
 10567  001B3A  C077  F074         	movff	___ftadd@f2+1,?___ftadd+1
 10568  001B3E  C078  F075         	movff	___ftadd@f2+2,?___ftadd+2
 10569  001B42  0012               	return	
 10570  001B44                     l2867:
 10571                           
 10572                           ; BSR set to: 0
 10573  001B44  0100               	movlb	0	; () banked
 10574  001B46  517D               	movf	___ftadd@exp2& (0+255),w,b
 10575  001B48  0100               	movlb	0	; () banked
 10576  001B4A  B4D8               	btfsc	status,2,c
 10577  001B4C  D011               	goto	l726
 10578                           
 10579                           ; BSR set to: 0
 10580  001B4E  0100               	movlb	0	; () banked
 10581  001B50  517E               	movf	___ftadd@exp1& (0+255),w,b
 10582  001B52  0100               	movlb	0	; () banked
 10583  001B54  5D7D               	subwf	___ftadd@exp2& (0+255),w,b
 10584  001B56  B0D8               	btfsc	status,0,c
 10585  001B58  D012               	goto	l2873
 10586                           
 10587                           ; BSR set to: 0
 10588  001B5A  0100               	movlb	0	; () banked
 10589  001B5C  517D               	movf	___ftadd@exp2& (0+255),w,b
 10590  001B5E  0800               	sublw	0
 10591  001B60  0100               	movlb	0	; () banked
 10592  001B62  257E               	addwf	___ftadd@exp1& (0+255),w,b
 10593  001B64  0100               	movlb	0	; () banked
 10594  001B66  6F79               	movwf	??___ftadd& (0+255),b
 10595  001B68  0E18               	movlw	24
 10596  001B6A  0100               	movlb	0	; () banked
 10597  001B6C  6579               	cpfsgt	??___ftadd& (0+255),b
 10598  001B6E  D007               	goto	l2873
 10599  001B70                     l726:
 10600                           
 10601                           ; BSR set to: 0
 10602  001B70  C073  F073         	movff	___ftadd@f1,?___ftadd
 10603  001B74  C074  F074         	movff	___ftadd@f1+1,?___ftadd+1
 10604  001B78  C075  F075         	movff	___ftadd@f1+2,?___ftadd+2
 10605  001B7C  0012               	return	
 10606  001B7E                     l2873:
 10607                           
 10608                           ; BSR set to: 0
 10609  001B7E  0E06               	movlw	6
 10610  001B80  0100               	movlb	0	; () banked
 10611  001B82  6F7C               	movwf	___ftadd@sign& (0+255),b
 10612                           
 10613                           ; BSR set to: 0
 10614  001B84  0100               	movlb	0	; () banked
 10615  001B86  AF75               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10616  001B88  D002               	goto	l2879
 10617                           
 10618                           ; BSR set to: 0
 10619  001B8A  0100               	movlb	0	; () banked
 10620  001B8C  8F7C               	bsf	___ftadd@sign& (0+255),7,b
 10621  001B8E                     l2879:
 10622                           
 10623                           ; BSR set to: 0
 10624  001B8E  0100               	movlb	0	; () banked
 10625  001B90  AF78               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10626  001B92  D002               	goto	l728
 10627                           
 10628                           ; BSR set to: 0
 10629  001B94  0100               	movlb	0	; () banked
 10630  001B96  8D7C               	bsf	___ftadd@sign& (0+255),6,b
 10631  001B98                     l728:
 10632                           
 10633                           ; BSR set to: 0
 10634  001B98  0100               	movlb	0	; () banked
 10635  001B9A  8F74               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10636                           
 10637                           ; BSR set to: 0
 10638  001B9C  0EFF               	movlw	255
 10639  001B9E  0100               	movlb	0	; () banked
 10640  001BA0  1773               	andwf	___ftadd@f1& (0+255),f,b
 10641  001BA2  0EFF               	movlw	255
 10642  001BA4  0100               	movlb	0	; () banked
 10643  001BA6  1774               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10644  001BA8  0E00               	movlw	0
 10645  001BAA  0100               	movlb	0	; () banked
 10646  001BAC  1775               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10647  001BAE  0100               	movlb	0	; () banked
 10648  001BB0  8F77               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10649                           
 10650                           ; BSR set to: 0
 10651  001BB2  0EFF               	movlw	255
 10652  001BB4  0100               	movlb	0	; () banked
 10653  001BB6  1776               	andwf	___ftadd@f2& (0+255),f,b
 10654  001BB8  0EFF               	movlw	255
 10655  001BBA  0100               	movlb	0	; () banked
 10656  001BBC  1777               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10657  001BBE  0E00               	movlw	0
 10658  001BC0  0100               	movlb	0	; () banked
 10659  001BC2  1778               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10660                           
 10661                           ; BSR set to: 0
 10662  001BC4  0100               	movlb	0	; () banked
 10663  001BC6  517D               	movf	___ftadd@exp2& (0+255),w,b
 10664  001BC8  0100               	movlb	0	; () banked
 10665  001BCA  5D7E               	subwf	___ftadd@exp1& (0+255),w,b
 10666  001BCC  B0D8               	btfsc	status,0,c
 10667  001BCE  D025               	goto	l2899
 10668  001BD0                     l2889:
 10669                           
 10670                           ; BSR set to: 0
 10671  001BD0  0100               	movlb	0	; () banked
 10672  001BD2  90D8               	bcf	status,0,c
 10673  001BD4  3776               	rlcf	___ftadd@f2& (0+255),f,b
 10674  001BD6  3777               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10675  001BD8  3778               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10676  001BDA  0100               	movlb	0	; () banked
 10677  001BDC  077D               	decf	___ftadd@exp2& (0+255),f,b
 10678                           
 10679                           ; BSR set to: 0
 10680  001BDE  0100               	movlb	0	; () banked
 10681  001BE0  517E               	movf	___ftadd@exp1& (0+255),w,b
 10682  001BE2  0100               	movlb	0	; () banked
 10683  001BE4  197D               	xorwf	___ftadd@exp2& (0+255),w,b
 10684  001BE6  B4D8               	btfsc	status,2,c
 10685  001BE8  D011               	goto	l2897
 10686                           
 10687                           ; BSR set to: 0
 10688  001BEA  0100               	movlb	0	; () banked
 10689  001BEC  077C               	decf	___ftadd@sign& (0+255),f,b
 10690  001BEE  C07C  F079         	movff	___ftadd@sign,??___ftadd
 10691  001BF2  0E07               	movlw	7
 10692  001BF4  0100               	movlb	0	; () banked
 10693  001BF6  1779               	andwf	??___ftadd& (0+255),f,b
 10694  001BF8  B4D8               	btfsc	status,2,c
 10695  001BFA  D008               	goto	l2897
 10696  001BFC  D7E9               	goto	l2889
 10697  001BFE                     l2895:
 10698                           
 10699                           ; BSR set to: 0
 10700  001BFE  0100               	movlb	0	; () banked
 10701  001C00  90D8               	bcf	status,0,c
 10702  001C02  3375               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10703  001C04  3374               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10704  001C06  3373               	rrcf	___ftadd@f1& (0+255),f,b
 10705  001C08  0100               	movlb	0	; () banked
 10706  001C0A  2B7E               	incf	___ftadd@exp1& (0+255),f,b
 10707  001C0C                     l2897:
 10708                           
 10709                           ; BSR set to: 0
 10710  001C0C  0100               	movlb	0	; () banked
 10711  001C0E  517D               	movf	___ftadd@exp2& (0+255),w,b
 10712  001C10  0100               	movlb	0	; () banked
 10713  001C12  197E               	xorwf	___ftadd@exp1& (0+255),w,b
 10714  001C14  B4D8               	btfsc	status,2,c
 10715  001C16  D02B               	goto	l737
 10716  001C18  D7F2               	goto	l2895
 10717  001C1A                     l2899:
 10718                           
 10719                           ; BSR set to: 0
 10720  001C1A  0100               	movlb	0	; () banked
 10721  001C1C  517E               	movf	___ftadd@exp1& (0+255),w,b
 10722  001C1E  0100               	movlb	0	; () banked
 10723  001C20  5D7D               	subwf	___ftadd@exp2& (0+255),w,b
 10724  001C22  B0D8               	btfsc	status,0,c
 10725  001C24  D024               	goto	l737
 10726  001C26                     l2901:
 10727                           
 10728                           ; BSR set to: 0
 10729  001C26  0100               	movlb	0	; () banked
 10730  001C28  90D8               	bcf	status,0,c
 10731  001C2A  3773               	rlcf	___ftadd@f1& (0+255),f,b
 10732  001C2C  3774               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10733  001C2E  3775               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10734  001C30  0100               	movlb	0	; () banked
 10735  001C32  077E               	decf	___ftadd@exp1& (0+255),f,b
 10736                           
 10737                           ; BSR set to: 0
 10738  001C34  0100               	movlb	0	; () banked
 10739  001C36  517E               	movf	___ftadd@exp1& (0+255),w,b
 10740  001C38  0100               	movlb	0	; () banked
 10741  001C3A  197D               	xorwf	___ftadd@exp2& (0+255),w,b
 10742  001C3C  B4D8               	btfsc	status,2,c
 10743  001C3E  D011               	goto	l2909
 10744                           
 10745                           ; BSR set to: 0
 10746  001C40  0100               	movlb	0	; () banked
 10747  001C42  077C               	decf	___ftadd@sign& (0+255),f,b
 10748  001C44  C07C  F079         	movff	___ftadd@sign,??___ftadd
 10749  001C48  0E07               	movlw	7
 10750  001C4A  0100               	movlb	0	; () banked
 10751  001C4C  1779               	andwf	??___ftadd& (0+255),f,b
 10752  001C4E  B4D8               	btfsc	status,2,c
 10753  001C50  D008               	goto	l2909
 10754  001C52  D7E9               	goto	l2901
 10755  001C54                     l2907:
 10756                           
 10757                           ; BSR set to: 0
 10758  001C54  0100               	movlb	0	; () banked
 10759  001C56  90D8               	bcf	status,0,c
 10760  001C58  3378               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10761  001C5A  3377               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10762  001C5C  3376               	rrcf	___ftadd@f2& (0+255),f,b
 10763  001C5E  0100               	movlb	0	; () banked
 10764  001C60  2B7D               	incf	___ftadd@exp2& (0+255),f,b
 10765  001C62                     l2909:
 10766                           
 10767                           ; BSR set to: 0
 10768  001C62  0100               	movlb	0	; () banked
 10769  001C64  517D               	movf	___ftadd@exp2& (0+255),w,b
 10770  001C66  0100               	movlb	0	; () banked
 10771  001C68  197E               	xorwf	___ftadd@exp1& (0+255),w,b
 10772  001C6A  A4D8               	btfss	status,2,c
 10773  001C6C  D7F3               	goto	l2907
 10774  001C6E                     l737:
 10775                           
 10776                           ; BSR set to: 0
 10777  001C6E  0100               	movlb	0	; () banked
 10778  001C70  AF7C               	btfss	___ftadd@sign& (0+255),7,b
 10779  001C72  D012               	goto	l746
 10780                           
 10781                           ; BSR set to: 0
 10782  001C74  0EFF               	movlw	255
 10783  001C76  0100               	movlb	0	; () banked
 10784  001C78  1B73               	xorwf	___ftadd@f1& (0+255),f,b
 10785  001C7A  0EFF               	movlw	255
 10786  001C7C  0100               	movlb	0	; () banked
 10787  001C7E  1B74               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10788  001C80  0EFF               	movlw	255
 10789  001C82  0100               	movlb	0	; () banked
 10790  001C84  1B75               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10791  001C86  0E01               	movlw	1
 10792  001C88  0100               	movlb	0	; () banked
 10793  001C8A  2773               	addwf	___ftadd@f1& (0+255),f,b
 10794  001C8C  0E00               	movlw	0
 10795  001C8E  0100               	movlb	0	; () banked
 10796  001C90  2374               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10797  001C92  0E00               	movlw	0
 10798  001C94  0100               	movlb	0	; () banked
 10799  001C96  2375               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10800  001C98                     l746:
 10801                           
 10802                           ; BSR set to: 0
 10803  001C98  0100               	movlb	0	; () banked
 10804  001C9A  AD7C               	btfss	___ftadd@sign& (0+255),6,b
 10805  001C9C  D012               	goto	l2915
 10806                           
 10807                           ; BSR set to: 0
 10808  001C9E  0EFF               	movlw	255
 10809  001CA0  0100               	movlb	0	; () banked
 10810  001CA2  1B76               	xorwf	___ftadd@f2& (0+255),f,b
 10811  001CA4  0EFF               	movlw	255
 10812  001CA6  0100               	movlb	0	; () banked
 10813  001CA8  1B77               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10814  001CAA  0EFF               	movlw	255
 10815  001CAC  0100               	movlb	0	; () banked
 10816  001CAE  1B78               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10817  001CB0  0E01               	movlw	1
 10818  001CB2  0100               	movlb	0	; () banked
 10819  001CB4  2776               	addwf	___ftadd@f2& (0+255),f,b
 10820  001CB6  0E00               	movlw	0
 10821  001CB8  0100               	movlb	0	; () banked
 10822  001CBA  2377               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10823  001CBC  0E00               	movlw	0
 10824  001CBE  0100               	movlb	0	; () banked
 10825  001CC0  2378               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10826  001CC2                     l2915:
 10827                           
 10828                           ; BSR set to: 0
 10829  001CC2  0E00               	movlw	0
 10830  001CC4  0100               	movlb	0	; () banked
 10831  001CC6  6F7C               	movwf	___ftadd@sign& (0+255),b
 10832                           
 10833                           ; BSR set to: 0
 10834  001CC8  0100               	movlb	0	; () banked
 10835  001CCA  5173               	movf	___ftadd@f1& (0+255),w,b
 10836  001CCC  0100               	movlb	0	; () banked
 10837  001CCE  2776               	addwf	___ftadd@f2& (0+255),f,b
 10838  001CD0  0100               	movlb	0	; () banked
 10839  001CD2  5174               	movf	(___ftadd@f1+1)& (0+255),w,b
 10840  001CD4  0100               	movlb	0	; () banked
 10841  001CD6  2377               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10842  001CD8  0100               	movlb	0	; () banked
 10843  001CDA  5175               	movf	(___ftadd@f1+2)& (0+255),w,b
 10844  001CDC  0100               	movlb	0	; () banked
 10845  001CDE  2378               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10846                           
 10847                           ; BSR set to: 0
 10848  001CE0  0100               	movlb	0	; () banked
 10849  001CE2  AF78               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10850  001CE4  D015               	goto	l2925
 10851                           
 10852                           ; BSR set to: 0
 10853  001CE6  0EFF               	movlw	255
 10854  001CE8  0100               	movlb	0	; () banked
 10855  001CEA  1B76               	xorwf	___ftadd@f2& (0+255),f,b
 10856  001CEC  0EFF               	movlw	255
 10857  001CEE  0100               	movlb	0	; () banked
 10858  001CF0  1B77               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10859  001CF2  0EFF               	movlw	255
 10860  001CF4  0100               	movlb	0	; () banked
 10861  001CF6  1B78               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10862  001CF8  0E01               	movlw	1
 10863  001CFA  0100               	movlb	0	; () banked
 10864  001CFC  2776               	addwf	___ftadd@f2& (0+255),f,b
 10865  001CFE  0E00               	movlw	0
 10866  001D00  0100               	movlb	0	; () banked
 10867  001D02  2377               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10868  001D04  0E00               	movlw	0
 10869  001D06  0100               	movlb	0	; () banked
 10870  001D08  2378               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10871                           
 10872                           ; BSR set to: 0
 10873  001D0A  0E01               	movlw	1
 10874  001D0C  0100               	movlb	0	; () banked
 10875  001D0E  6F7C               	movwf	___ftadd@sign& (0+255),b
 10876  001D10                     l2925:
 10877                           
 10878                           ; BSR set to: 0
 10879  001D10  C076  F021         	movff	___ftadd@f2,___ftpack@arg
 10880  001D14  C077  F022         	movff	___ftadd@f2+1,___ftpack@arg+1
 10881  001D18  C078  F023         	movff	___ftadd@f2+2,___ftpack@arg+2
 10882  001D1C  C07E  F024         	movff	___ftadd@exp1,___ftpack@exp
 10883  001D20  C07C  F025         	movff	___ftadd@sign,___ftpack@sign
 10884  001D24  EC7D  F015         	call	___ftpack	;wreg free
 10885  001D28  C021  F073         	movff	?___ftpack,?___ftadd
 10886  001D2C  C022  F074         	movff	?___ftpack+1,?___ftadd+1
 10887  001D30  C023  F075         	movff	?___ftpack+2,?___ftadd+2
 10888  001D34  0012               	return	
 10889  001D36                     __end_of___ftadd:
 10890                           	opt stack 0
 10891                           tblptru	equ	0xFF8
 10892                           tblptrh	equ	0xFF7
 10893                           tblptrl	equ	0xFF6
 10894                           tablat	equ	0xFF5
 10895                           prodh	equ	0xFF4
 10896                           prodl	equ	0xFF3
 10897                           indf0	equ	0xFEF
 10898                           fsr0h	equ	0xFEA
 10899                           fsr0l	equ	0xFE9
 10900                           wreg	equ	0xFE8
 10901                           indf1	equ	0xFE7
 10902                           fsr1h	equ	0xFE2
 10903                           fsr1l	equ	0xFE1
 10904                           indf2	equ	0xFDF
 10905                           postinc2	equ	0xFDE
 10906                           postdec2	equ	0xFDD
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function ___ftpack *****************
 10912 ;; Defined at:
 10913 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  arg             3   32[COMRAM] unsigned um
 10916 ;;  exp             1   35[COMRAM] unsigned char 
 10917 ;;  sign            1   36[COMRAM] unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;		None
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  3   32[COMRAM] float 
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10929 ;;      Params:         5       0       0       0       0       0       0
 10930 ;;      Locals:         0       0       0       0       0       0       0
 10931 ;;      Temps:          3       0       0       0       0       0       0
 10932 ;;      Totals:         8       0       0       0       0       0       0
 10933 ;;Total ram usage:        8 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:    2
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		___awtoft
 10940 ;;		___ftadd
 10941 ;;		___ftdiv
 10942 ;;		___ftmul
 10943 ;;		___lltoft
 10944 ;;		___lwtoft
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text47
 10949  002AFA                     __ptext47:
 10950                           	opt stack 0
 10951  002AFA                     ___ftpack:
 10952                           	opt stack 25
 10953                           
 10954                           ;incstack = 0
 10955  002AFA  5024               	movf	___ftpack@exp,w,c
 10956  002AFC  B4D8               	btfsc	status,2,c
 10957  002AFE  D005               	goto	l2777
 10958  002B00  5021               	movf	___ftpack@arg,w,c
 10959  002B02  1022               	iorwf	___ftpack@arg+1,w,c
 10960  002B04  1023               	iorwf	___ftpack@arg+2,w,c
 10961  002B06  A4D8               	btfss	status,2,c
 10962  002B08  D00C               	goto	l2783
 10963  002B0A                     l2777:
 10964  002B0A  0E00               	movlw	0
 10965  002B0C  6E21               	movwf	?___ftpack,c
 10966  002B0E  0E00               	movlw	0
 10967  002B10  6E22               	movwf	?___ftpack+1,c
 10968  002B12  0E00               	movlw	0
 10969  002B14  6E23               	movwf	?___ftpack+2,c
 10970  002B16  0012               	return	
 10971  002B18                     l2781:
 10972  002B18  2A24               	incf	___ftpack@exp,f,c
 10973  002B1A  90D8               	bcf	status,0,c
 10974  002B1C  3223               	rrcf	___ftpack@arg+2,f,c
 10975  002B1E  3222               	rrcf	___ftpack@arg+1,f,c
 10976  002B20  3221               	rrcf	___ftpack@arg,f,c
 10977  002B22                     l2783:
 10978  002B22  0E00               	movlw	0
 10979  002B24  1421               	andwf	___ftpack@arg,w,c
 10980  002B26  6E26               	movwf	??___ftpack& (0+255),c
 10981  002B28  0E00               	movlw	0
 10982  002B2A  1422               	andwf	___ftpack@arg+1,w,c
 10983  002B2C  6E27               	movwf	(??___ftpack+1)& (0+255),c
 10984  002B2E  0EFE               	movlw	254
 10985  002B30  1423               	andwf	___ftpack@arg+2,w,c
 10986  002B32  6E28               	movwf	(??___ftpack+2)& (0+255),c
 10987  002B34  5026               	movf	??___ftpack,w,c
 10988  002B36  1027               	iorwf	??___ftpack+1,w,c
 10989  002B38  1028               	iorwf	??___ftpack+2,w,c
 10990  002B3A  B4D8               	btfsc	status,2,c
 10991  002B3C  D00C               	goto	l2789
 10992  002B3E  D7EC               	goto	l2781
 10993  002B40                     l2785:
 10994  002B40  2A24               	incf	___ftpack@exp,f,c
 10995  002B42  0E01               	movlw	1
 10996  002B44  2621               	addwf	___ftpack@arg,f,c
 10997  002B46  0E00               	movlw	0
 10998  002B48  2222               	addwfc	___ftpack@arg+1,f,c
 10999  002B4A  0E00               	movlw	0
 11000  002B4C  2223               	addwfc	___ftpack@arg+2,f,c
 11001  002B4E  90D8               	bcf	status,0,c
 11002  002B50  3223               	rrcf	___ftpack@arg+2,f,c
 11003  002B52  3222               	rrcf	___ftpack@arg+1,f,c
 11004  002B54  3221               	rrcf	___ftpack@arg,f,c
 11005  002B56                     l2789:
 11006  002B56  0E00               	movlw	0
 11007  002B58  1421               	andwf	___ftpack@arg,w,c
 11008  002B5A  6E26               	movwf	??___ftpack& (0+255),c
 11009  002B5C  0E00               	movlw	0
 11010  002B5E  1422               	andwf	___ftpack@arg+1,w,c
 11011  002B60  6E27               	movwf	(??___ftpack+1)& (0+255),c
 11012  002B62  0EFF               	movlw	255
 11013  002B64  1423               	andwf	___ftpack@arg+2,w,c
 11014  002B66  6E28               	movwf	(??___ftpack+2)& (0+255),c
 11015  002B68  5026               	movf	??___ftpack,w,c
 11016  002B6A  1027               	iorwf	??___ftpack+1,w,c
 11017  002B6C  1028               	iorwf	??___ftpack+2,w,c
 11018  002B6E  B4D8               	btfsc	status,2,c
 11019  002B70  D006               	goto	l2793
 11020  002B72  D7E6               	goto	l2785
 11021  002B74                     l2791:
 11022  002B74  0624               	decf	___ftpack@exp,f,c
 11023  002B76  90D8               	bcf	status,0,c
 11024  002B78  3621               	rlcf	___ftpack@arg,f,c
 11025  002B7A  3622               	rlcf	___ftpack@arg+1,f,c
 11026  002B7C  3623               	rlcf	___ftpack@arg+2,f,c
 11027  002B7E                     l2793:
 11028  002B7E  BE22               	btfsc	___ftpack@arg+1,7,c
 11029  002B80  D003               	goto	l699
 11030  002B82  0E02               	movlw	2
 11031  002B84  6024               	cpfslt	___ftpack@exp,c
 11032  002B86  D7F6               	goto	l2791
 11033  002B88                     l699:
 11034  002B88  A024               	btfss	___ftpack@exp,0,c
 11035  002B8A  9E22               	bcf	___ftpack@arg+1,7,c
 11036  002B8C  90D8               	bcf	status,0,c
 11037  002B8E  3224               	rrcf	___ftpack@exp,f,c
 11038  002B90  5024               	movf	___ftpack@exp,w,c
 11039  002B92  1223               	iorwf	___ftpack@arg+2,f,c
 11040  002B94  5025               	movf	___ftpack@sign,w,c
 11041  002B96  A4D8               	btfss	status,2,c
 11042  002B98  8E23               	bsf	___ftpack@arg+2,7,c
 11043  002B9A  C021  F021         	movff	___ftpack@arg,?___ftpack
 11044  002B9E  C022  F022         	movff	___ftpack@arg+1,?___ftpack+1
 11045  002BA2  C023  F023         	movff	___ftpack@arg+2,?___ftpack+2
 11046  002BA6  0012               	return	
 11047  002BA8                     __end_of___ftpack:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           indf0	equ	0xFEF
 11056                           fsr0h	equ	0xFEA
 11057                           fsr0l	equ	0xFE9
 11058                           wreg	equ	0xFE8
 11059                           indf1	equ	0xFE7
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function ___ftneg *****************
 11070 ;; Defined at:
 11071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;  f1              3   32[COMRAM] float 
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  3   32[COMRAM] float 
 11078 ;; Registers used:
 11079 ;;		wreg, status,2, status,0
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11085 ;;      Params:         3       0       0       0       0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0
 11088 ;;      Totals:         3       0       0       0       0       0       0
 11089 ;;Total ram usage:        3 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; Hardware stack levels required when called:    2
 11092 ;; This function calls:
 11093 ;;		Nothing
 11094 ;; This function is called by:
 11095 ;;		_sprintf
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text48
 11100  00347E                     __ptext48:
 11101                           	opt stack 0
 11102  00347E                     ___ftneg:
 11103                           	opt stack 25
 11104                           
 11105                           ;incstack = 0
 11106  00347E  5021               	movf	___ftneg@f1,w,c
 11107  003480  1022               	iorwf	___ftneg@f1+1,w,c
 11108  003482  1023               	iorwf	___ftneg@f1+2,w,c
 11109  003484  B4D8               	btfsc	status,2,c
 11110  003486  D006               	goto	l796
 11111  003488  0E00               	movlw	0
 11112  00348A  1A21               	xorwf	___ftneg@f1,f,c
 11113  00348C  0E00               	movlw	0
 11114  00348E  1A22               	xorwf	___ftneg@f1+1,f,c
 11115  003490  0E80               	movlw	128
 11116  003492  1A23               	xorwf	___ftneg@f1+2,f,c
 11117  003494                     l796:
 11118  003494  C021  F021         	movff	___ftneg@f1,?___ftneg
 11119  003498  C022  F022         	movff	___ftneg@f1+1,?___ftneg+1
 11120  00349C  C023  F023         	movff	___ftneg@f1+2,?___ftneg+2
 11121  0034A0  0012               	return		;funcret
 11122  0034A2                     __end_of___ftneg:
 11123                           	opt stack 0
 11124                           tblptru	equ	0xFF8
 11125                           tblptrh	equ	0xFF7
 11126                           tblptrl	equ	0xFF6
 11127                           tablat	equ	0xFF5
 11128                           prodh	equ	0xFF4
 11129                           prodl	equ	0xFF3
 11130                           indf0	equ	0xFEF
 11131                           fsr0h	equ	0xFEA
 11132                           fsr0l	equ	0xFE9
 11133                           wreg	equ	0xFE8
 11134                           indf1	equ	0xFE7
 11135                           fsr1h	equ	0xFE2
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           postdec2	equ	0xFDD
 11140                           fsr2h	equ	0xFDA
 11141                           fsr2l	equ	0xFD9
 11142                           status	equ	0xFD8
 11143                           
 11144 ;; *************** function ___ftge *****************
 11145 ;; Defined at:
 11146 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  ff1             3   32[COMRAM] float 
 11149 ;;  ff2             3   35[COMRAM] float 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;		None               void
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11161 ;;      Params:         6       0       0       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0
 11163 ;;      Temps:          3       0       0       0       0       0       0
 11164 ;;      Totals:         9       0       0       0       0       0       0
 11165 ;;Total ram usage:        9 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    2
 11168 ;; This function calls:
 11169 ;;		Nothing
 11170 ;; This function is called by:
 11171 ;;		_sprintf
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text49
 11176  002C52                     __ptext49:
 11177                           	opt stack 0
 11178  002C52                     ___ftge:
 11179                           	opt stack 25
 11180                           
 11181                           ;incstack = 0
 11182  002C52  AE23               	btfss	___ftge@ff1+2,7,c
 11183  002C54  D016               	goto	l3327
 11184  002C56  C021  F027         	movff	___ftge@ff1,??___ftge
 11185  002C5A  C022  F028         	movff	___ftge@ff1+1,??___ftge+1
 11186  002C5E  C023  F029         	movff	___ftge@ff1+2,??___ftge+2
 11187  002C62  1E27               	comf	??___ftge,f,c
 11188  002C64  1E28               	comf	??___ftge+1,f,c
 11189  002C66  1E29               	comf	??___ftge+2,f,c
 11190  002C68  2A27               	incf	??___ftge,f,c
 11191  002C6A  0E00               	movlw	0
 11192  002C6C  2228               	addwfc	??___ftge+1,f,c
 11193  002C6E  2229               	addwfc	??___ftge+2,f,c
 11194  002C70  0E00               	movlw	0
 11195  002C72  2427               	addwf	??___ftge,w,c
 11196  002C74  6E21               	movwf	___ftge@ff1,c
 11197  002C76  0E00               	movlw	0
 11198  002C78  2028               	addwfc	??___ftge+1,w,c
 11199  002C7A  6E22               	movwf	___ftge@ff1+1,c
 11200  002C7C  0E80               	movlw	128
 11201  002C7E  2029               	addwfc	??___ftge+2,w,c
 11202  002C80  6E23               	movwf	___ftge@ff1+2,c
 11203  002C82                     l3327:
 11204  002C82  AE26               	btfss	___ftge@ff2+2,7,c
 11205  002C84  D016               	goto	l3331
 11206  002C86  C024  F027         	movff	___ftge@ff2,??___ftge
 11207  002C8A  C025  F028         	movff	___ftge@ff2+1,??___ftge+1
 11208  002C8E  C026  F029         	movff	___ftge@ff2+2,??___ftge+2
 11209  002C92  1E27               	comf	??___ftge,f,c
 11210  002C94  1E28               	comf	??___ftge+1,f,c
 11211  002C96  1E29               	comf	??___ftge+2,f,c
 11212  002C98  2A27               	incf	??___ftge,f,c
 11213  002C9A  0E00               	movlw	0
 11214  002C9C  2228               	addwfc	??___ftge+1,f,c
 11215  002C9E  2229               	addwfc	??___ftge+2,f,c
 11216  002CA0  0E00               	movlw	0
 11217  002CA2  2427               	addwf	??___ftge,w,c
 11218  002CA4  6E24               	movwf	___ftge@ff2,c
 11219  002CA6  0E00               	movlw	0
 11220  002CA8  2028               	addwfc	??___ftge+1,w,c
 11221  002CAA  6E25               	movwf	___ftge@ff2+1,c
 11222  002CAC  0E80               	movlw	128
 11223  002CAE  2029               	addwfc	??___ftge+2,w,c
 11224  002CB0  6E26               	movwf	___ftge@ff2+2,c
 11225  002CB2                     l3331:
 11226  002CB2  0E00               	movlw	0
 11227  002CB4  1A21               	xorwf	___ftge@ff1,f,c
 11228  002CB6  0E00               	movlw	0
 11229  002CB8  1A22               	xorwf	___ftge@ff1+1,f,c
 11230  002CBA  0E80               	movlw	128
 11231  002CBC  1A23               	xorwf	___ftge@ff1+2,f,c
 11232  002CBE  0E00               	movlw	0
 11233  002CC0  1A24               	xorwf	___ftge@ff2,f,c
 11234  002CC2  0E00               	movlw	0
 11235  002CC4  1A25               	xorwf	___ftge@ff2+1,f,c
 11236  002CC6  0E80               	movlw	128
 11237  002CC8  1A26               	xorwf	___ftge@ff2+2,f,c
 11238  002CCA  5024               	movf	___ftge@ff2,w,c
 11239  002CCC  5C21               	subwf	___ftge@ff1,w,c
 11240  002CCE  5025               	movf	___ftge@ff2+1,w,c
 11241  002CD0  5822               	subwfb	___ftge@ff1+1,w,c
 11242  002CD2  5026               	movf	___ftge@ff2+2,w,c
 11243  002CD4  5823               	subwfb	___ftge@ff1+2,w,c
 11244  002CD6  B0D8               	btfsc	status,0,c
 11245  002CD8  D002               	goto	l3337
 11246  002CDA  90D8               	bcf	status,0,c
 11247  002CDC  0012               	return	
 11248  002CDE                     l3337:
 11249  002CDE  80D8               	bsf	status,0,c
 11250  002CE0  0012               	return	
 11251  002CE2                     __end_of___ftge:
 11252                           	opt stack 0
 11253                           tblptru	equ	0xFF8
 11254                           tblptrh	equ	0xFF7
 11255                           tblptrl	equ	0xFF6
 11256                           tablat	equ	0xFF5
 11257                           prodh	equ	0xFF4
 11258                           prodl	equ	0xFF3
 11259                           indf0	equ	0xFEF
 11260                           fsr0h	equ	0xFEA
 11261                           fsr0l	equ	0xFE9
 11262                           wreg	equ	0xFE8
 11263                           indf1	equ	0xFE7
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _memset *****************
 11274 ;; Defined at:
 11275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  p1              2   32[COMRAM] PTR void 
 11278 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 11279 ;;  c               2   34[COMRAM] int 
 11280 ;;  n               2   36[COMRAM] unsigned int 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;  p               2   38[COMRAM] PTR unsigned char 
 11283 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  2   32[COMRAM] PTR void 
 11286 ;; Registers used:
 11287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11293 ;;      Params:         6       0       0       0       0       0       0
 11294 ;;      Locals:         2       0       0       0       0       0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0
 11296 ;;      Totals:         8       0       0       0       0       0       0
 11297 ;;Total ram usage:        8 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; Hardware stack levels required when called:    2
 11300 ;; This function calls:
 11301 ;;		Nothing
 11302 ;; This function is called by:
 11303 ;;		_util_beacon_transmission
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text50
 11308  0033E2                     __ptext50:
 11309                           	opt stack 0
 11310  0033E2                     _memset:
 11311                           	opt stack 26
 11312                           
 11313                           ;incstack = 0
 11314  0033E2  C021  F027         	movff	memset@p1,memset@p
 11315  0033E6  C022  F028         	movff	memset@p1+1,memset@p+1
 11316  0033EA  D008               	goto	l3533
 11317  0033EC                     l3529:
 11318  0033EC  C027  FFD9         	movff	memset@p,fsr2l
 11319  0033F0  C028  FFDA         	movff	memset@p+1,fsr2h
 11320  0033F4  C023  FFDF         	movff	memset@c,indf2
 11321  0033F8  4A27               	infsnz	memset@p,f,c
 11322  0033FA  2A28               	incf	memset@p+1,f,c
 11323  0033FC                     l3533:
 11324  0033FC  0625               	decf	memset@n,f,c
 11325  0033FE  A0D8               	btfss	status,0,c
 11326  003400  0626               	decf	memset@n+1,f,c
 11327  003402  2825               	incf	memset@n,w,c
 11328  003404  E1F3               	bnz	l3529
 11329  003406  2826               	incf	memset@n+1,w,c
 11330  003408  B4D8               	btfsc	status,2,c
 11331  00340A  0012               	return	
 11332  00340C  D7EF               	goto	l3529
 11333  00340E                     __end_of_memset:
 11334                           	opt stack 0
 11335                           tblptru	equ	0xFF8
 11336                           tblptrh	equ	0xFF7
 11337                           tblptrl	equ	0xFF6
 11338                           tablat	equ	0xFF5
 11339                           prodh	equ	0xFF4
 11340                           prodl	equ	0xFF3
 11341                           indf0	equ	0xFEF
 11342                           fsr0h	equ	0xFEA
 11343                           fsr0l	equ	0xFE9
 11344                           wreg	equ	0xFE8
 11345                           indf1	equ	0xFE7
 11346                           fsr1h	equ	0xFE2
 11347                           fsr1l	equ	0xFE1
 11348                           indf2	equ	0xFDF
 11349                           postinc2	equ	0xFDE
 11350                           postdec2	equ	0xFDD
 11351                           fsr2h	equ	0xFDA
 11352                           fsr2l	equ	0xFD9
 11353                           status	equ	0xFD8
 11354                           
 11355 ;; *************** function _initialize *****************
 11356 ;; Defined at:
 11357 ;;		line 17 in file "easat2_util_initialize.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11371 ;;      Params:         0       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    3
 11378 ;; This function calls:
 11379 ;;		_util_timer1_initialize
 11380 ;; This function is called by:
 11381 ;;		_main
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text51
 11386  002CE2                     __ptext51:
 11387                           	opt stack 0
 11388  002CE2                     _initialize:
 11389                           	opt stack 27
 11390                           
 11391                           ;easat2_util_initialize.c: 26: VREFCON0bits.FVREN = 1;
 11392                           
 11393                           ;incstack = 0
 11394  002CE2  010F               	movlb	15	; () banked
 11395  002CE4  8F42               	bsf	66,7,b	;volatile
 11396                           
 11397                           ;easat2_util_initialize.c: 27: VREFCON0bits.FVRS0 = 1;
 11398  002CE6  010F               	movlb	15	; () banked
 11399  002CE8  8942               	bsf	66,4,b	;volatile
 11400                           
 11401                           ;easat2_util_initialize.c: 28: VREFCON0bits.FVRS1 = 0;
 11402  002CEA  010F               	movlb	15	; () banked
 11403  002CEC  9B42               	bcf	66,5,b	;volatile
 11404                           
 11405                           ;easat2_util_initialize.c: 30: VREFCON0bits.FVRST = 1;
 11406  002CEE  010F               	movlb	15	; () banked
 11407  002CF0  8D42               	bsf	66,6,b	;volatile
 11408                           
 11409                           ; BSR set to: 15
 11410                           ;easat2_util_initialize.c: 35: ADCON1 = 0x08;
 11411  002CF2  0E08               	movlw	8
 11412  002CF4  6EC1               	movwf	4033,c	;volatile
 11413                           
 11414                           ;easat2_util_initialize.c: 36: ADCON2 = 0xAF;
 11415  002CF6  0EAF               	movlw	175
 11416  002CF8  6EC0               	movwf	4032,c	;volatile
 11417                           
 11418                           ; BSR set to: 15
 11419                           ;easat2_util_initialize.c: 40: TRISAbits.TRISA0 = 1;
 11420  002CFA  8092               	bsf	3986,0,c	;volatile
 11421                           
 11422                           ; BSR set to: 15
 11423                           ;easat2_util_initialize.c: 41: TRISAbits.TRISA1 = 1;
 11424  002CFC  8292               	bsf	3986,1,c	;volatile
 11425                           
 11426                           ; BSR set to: 15
 11427                           ;easat2_util_initialize.c: 42: TRISAbits.TRISA2 = 1;
 11428  002CFE  8492               	bsf	3986,2,c	;volatile
 11429                           
 11430                           ; BSR set to: 15
 11431                           ;easat2_util_initialize.c: 43: TRISAbits.TRISA3 = 1;
 11432  002D00  8692               	bsf	3986,3,c	;volatile
 11433                           
 11434                           ; BSR set to: 15
 11435                           ;easat2_util_initialize.c: 44: TRISAbits.TRISA4 = 1;
 11436  002D02  8892               	bsf	3986,4,c	;volatile
 11437                           
 11438                           ; BSR set to: 15
 11439                           ;easat2_util_initialize.c: 45: TRISAbits.TRISA5 = 1;
 11440  002D04  8A92               	bsf	3986,5,c	;volatile
 11441                           
 11442                           ; BSR set to: 15
 11443                           ;easat2_util_initialize.c: 52: ANSELAbits.ANSA0 = 1;
 11444  002D06  010F               	movlb	15	; () banked
 11445  002D08  8138               	bsf	56,0,b	;volatile
 11446                           
 11447                           ; BSR set to: 15
 11448                           ;easat2_util_initialize.c: 53: ANSELAbits.ANSA1 = 1;
 11449  002D0A  010F               	movlb	15	; () banked
 11450  002D0C  8338               	bsf	56,1,b	;volatile
 11451                           
 11452                           ; BSR set to: 15
 11453                           ;easat2_util_initialize.c: 54: ANSELAbits.ANSA2 = 1;
 11454  002D0E  010F               	movlb	15	; () banked
 11455  002D10  8538               	bsf	56,2,b	;volatile
 11456                           
 11457                           ; BSR set to: 15
 11458                           ;easat2_util_initialize.c: 55: ANSELAbits.ANSA3 = 0;
 11459  002D12  010F               	movlb	15	; () banked
 11460  002D14  9738               	bcf	56,3,b	;volatile
 11461                           
 11462                           ; BSR set to: 15
 11463                           ;easat2_util_initialize.c: 57: ANSELAbits.ANSA5 = 1;
 11464  002D16  010F               	movlb	15	; () banked
 11465  002D18  8B38               	bsf	56,5,b	;volatile
 11466                           
 11467                           ; BSR set to: 15
 11468                           ;easat2_util_initialize.c: 61: LATAbits.LATA0 = 0;
 11469  002D1A  9089               	bcf	3977,0,c	;volatile
 11470                           
 11471                           ; BSR set to: 15
 11472                           ;easat2_util_initialize.c: 62: LATAbits.LATA1 = 0;
 11473  002D1C  9289               	bcf	3977,1,c	;volatile
 11474                           
 11475                           ; BSR set to: 15
 11476                           ;easat2_util_initialize.c: 63: LATAbits.LATA2 = 0;
 11477  002D1E  9489               	bcf	3977,2,c	;volatile
 11478                           
 11479                           ; BSR set to: 15
 11480                           ;easat2_util_initialize.c: 64: LATAbits.LATA3 = 0;
 11481  002D20  9689               	bcf	3977,3,c	;volatile
 11482                           
 11483                           ; BSR set to: 15
 11484                           ;easat2_util_initialize.c: 65: LATAbits.LATA4 = 0;
 11485  002D22  9889               	bcf	3977,4,c	;volatile
 11486                           
 11487                           ; BSR set to: 15
 11488                           ;easat2_util_initialize.c: 66: LATAbits.LATA5 = 0;
 11489  002D24  9A89               	bcf	3977,5,c	;volatile
 11490                           
 11491                           ; BSR set to: 15
 11492                           ;easat2_util_initialize.c: 73: TRISDbits.TRISD0 = 0;
 11493  002D26  9095               	bcf	3989,0,c	;volatile
 11494                           
 11495                           ; BSR set to: 15
 11496                           ;easat2_util_initialize.c: 74: TRISDbits.TRISD1 = 0;
 11497  002D28  9295               	bcf	3989,1,c	;volatile
 11498                           
 11499                           ; BSR set to: 15
 11500                           ;easat2_util_initialize.c: 75: TRISDbits.TRISD2 = 0;
 11501  002D2A  9495               	bcf	3989,2,c	;volatile
 11502                           
 11503                           ; BSR set to: 15
 11504                           ;easat2_util_initialize.c: 76: TRISDbits.TRISD3 = 0;
 11505  002D2C  9695               	bcf	3989,3,c	;volatile
 11506                           
 11507                           ; BSR set to: 15
 11508                           ;easat2_util_initialize.c: 77: TRISDbits.TRISD4 = 0;
 11509  002D2E  9895               	bcf	3989,4,c	;volatile
 11510                           
 11511                           ; BSR set to: 15
 11512                           ;easat2_util_initialize.c: 78: TRISDbits.TRISD5 = 0;
 11513  002D30  9A95               	bcf	3989,5,c	;volatile
 11514                           
 11515                           ; BSR set to: 15
 11516                           ;easat2_util_initialize.c: 79: TRISDbits.TRISD6 = 0;
 11517  002D32  9C95               	bcf	3989,6,c	;volatile
 11518                           
 11519                           ; BSR set to: 15
 11520                           ;easat2_util_initialize.c: 80: TRISDbits.TRISD7 = 0;
 11521  002D34  9E95               	bcf	3989,7,c	;volatile
 11522                           
 11523                           ; BSR set to: 15
 11524                           ;easat2_util_initialize.c: 84: ANSELDbits.ANSD0 = 0;
 11525  002D36  010F               	movlb	15	; () banked
 11526  002D38  913B               	bcf	59,0,b	;volatile
 11527                           
 11528                           ; BSR set to: 15
 11529                           ;easat2_util_initialize.c: 85: ANSELDbits.ANSD1 = 0;
 11530  002D3A  010F               	movlb	15	; () banked
 11531  002D3C  933B               	bcf	59,1,b	;volatile
 11532                           
 11533                           ; BSR set to: 15
 11534                           ;easat2_util_initialize.c: 86: ANSELDbits.ANSD2 = 0;
 11535  002D3E  010F               	movlb	15	; () banked
 11536  002D40  953B               	bcf	59,2,b	;volatile
 11537                           
 11538                           ; BSR set to: 15
 11539                           ;easat2_util_initialize.c: 87: ANSELDbits.ANSD3 = 0;
 11540  002D42  010F               	movlb	15	; () banked
 11541  002D44  973B               	bcf	59,3,b	;volatile
 11542                           
 11543                           ; BSR set to: 15
 11544                           ;easat2_util_initialize.c: 88: ANSELDbits.ANSD4 = 0;
 11545  002D46  010F               	movlb	15	; () banked
 11546  002D48  993B               	bcf	59,4,b	;volatile
 11547                           
 11548                           ; BSR set to: 15
 11549                           ;easat2_util_initialize.c: 89: ANSELDbits.ANSD5 = 0;
 11550  002D4A  010F               	movlb	15	; () banked
 11551  002D4C  9B3B               	bcf	59,5,b	;volatile
 11552                           
 11553                           ; BSR set to: 15
 11554                           ;easat2_util_initialize.c: 90: ANSELDbits.ANSD6 = 0;
 11555  002D4E  010F               	movlb	15	; () banked
 11556  002D50  9D3B               	bcf	59,6,b	;volatile
 11557                           
 11558                           ; BSR set to: 15
 11559                           ;easat2_util_initialize.c: 91: ANSELDbits.ANSD7 = 0;
 11560  002D52  010F               	movlb	15	; () banked
 11561  002D54  9F3B               	bcf	59,7,b	;volatile
 11562                           
 11563                           ; BSR set to: 15
 11564                           ;easat2_util_initialize.c: 95: LATDbits.LATD0 = 0;
 11565  002D56  908C               	bcf	3980,0,c	;volatile
 11566                           
 11567                           ; BSR set to: 15
 11568                           ;easat2_util_initialize.c: 96: LATDbits.LATD1 = 0;
 11569  002D58  928C               	bcf	3980,1,c	;volatile
 11570                           
 11571                           ; BSR set to: 15
 11572                           ;easat2_util_initialize.c: 97: LATDbits.LATD2 = 0;
 11573  002D5A  948C               	bcf	3980,2,c	;volatile
 11574                           
 11575                           ; BSR set to: 15
 11576                           ;easat2_util_initialize.c: 98: LATDbits.LATD3 = 0;
 11577  002D5C  968C               	bcf	3980,3,c	;volatile
 11578                           
 11579                           ; BSR set to: 15
 11580                           ;easat2_util_initialize.c: 99: LATDbits.LATD4 = 0;
 11581  002D5E  988C               	bcf	3980,4,c	;volatile
 11582                           
 11583                           ; BSR set to: 15
 11584                           ;easat2_util_initialize.c: 100: LATDbits.LATD5 = 0;
 11585  002D60  9A8C               	bcf	3980,5,c	;volatile
 11586                           
 11587                           ; BSR set to: 15
 11588                           ;easat2_util_initialize.c: 101: LATDbits.LATD6 = 0;
 11589  002D62  9C8C               	bcf	3980,6,c	;volatile
 11590                           
 11591                           ; BSR set to: 15
 11592                           ;easat2_util_initialize.c: 102: LATDbits.LATD7 = 0;
 11593  002D64  9E8C               	bcf	3980,7,c	;volatile
 11594                           
 11595                           ; BSR set to: 15
 11596                           ;easat2_util_initialize.c: 106: util_timer1_initialize();
 11597  002D66  EC1A  F01A         	call	_util_timer1_initialize	;wreg free
 11598  002D6A  0012               	return		;funcret
 11599  002D6C                     __end_of_initialize:
 11600                           	opt stack 0
 11601                           tblptru	equ	0xFF8
 11602                           tblptrh	equ	0xFF7
 11603                           tblptrl	equ	0xFF6
 11604                           tablat	equ	0xFF5
 11605                           prodh	equ	0xFF4
 11606                           prodl	equ	0xFF3
 11607                           indf0	equ	0xFEF
 11608                           fsr0h	equ	0xFEA
 11609                           fsr0l	equ	0xFE9
 11610                           wreg	equ	0xFE8
 11611                           indf1	equ	0xFE7
 11612                           fsr1h	equ	0xFE2
 11613                           fsr1l	equ	0xFE1
 11614                           indf2	equ	0xFDF
 11615                           postinc2	equ	0xFDE
 11616                           postdec2	equ	0xFDD
 11617                           fsr2h	equ	0xFDA
 11618                           fsr2l	equ	0xFD9
 11619                           status	equ	0xFD8
 11620                           
 11621 ;; *************** function _util_timer1_initialize *****************
 11622 ;; Defined at:
 11623 ;;		line 19 in file "easat2_util_timer.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11637 ;;      Params:         0       0       0       0       0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0
 11640 ;;      Totals:         0       0       0       0       0       0       0
 11641 ;;Total ram usage:        0 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:    2
 11644 ;; This function calls:
 11645 ;;		Nothing
 11646 ;; This function is called by:
 11647 ;;		_initialize
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text52
 11652  003434                     __ptext52:
 11653                           	opt stack 0
 11654  003434                     _util_timer1_initialize:
 11655                           	opt stack 27
 11656                           
 11657                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 11658                           
 11659                           ;incstack = 0
 11660  003434  8ED0               	bsf	4048,7,c	;volatile
 11661                           
 11662                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 11663  003436  90CD               	bcf	4045,0,c	;volatile
 11664                           
 11665                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 11666  003438  9CCD               	bcf	4045,6,c	;volatile
 11667                           
 11668                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 11669  00343A  9ECD               	bcf	4045,7,c	;volatile
 11670                           
 11671                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 11672  00343C  9ACD               	bcf	4045,5,c	;volatile
 11673                           
 11674                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 11675  00343E  98CD               	bcf	4045,4,c	;volatile
 11676                           
 11677                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 11678  003440  96CD               	bcf	4045,3,c	;volatile
 11679                           
 11680                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 11681  003442  82CD               	bsf	4045,1,c	;volatile
 11682                           
 11683                           ;easat2_util_timer.c: 53: TMR1H = 0x3C;
 11684  003444  0E3C               	movlw	60
 11685  003446  6ECF               	movwf	4047,c	;volatile
 11686                           
 11687                           ;easat2_util_timer.c: 54: TMR1L = 0xAF;
 11688  003448  0EAF               	movlw	175
 11689  00344A  6ECE               	movwf	4046,c	;volatile
 11690                           
 11691                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 11692  00344C  809D               	bsf	3997,0,c	;volatile
 11693                           
 11694                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 11695  00344E  809F               	bsf	3999,0,c	;volatile
 11696                           
 11697                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 11698  003450  909E               	bcf	3998,0,c	;volatile
 11699                           
 11700                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 11701  003452  80CD               	bsf	4045,0,c	;volatile
 11702                           
 11703                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 11704  003454  9CF2               	bcf	intcon,6,c	;volatile
 11705                           
 11706                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 11707  003456  8EF2               	bsf	intcon,7,c	;volatile
 11708  003458  0012               	return		;funcret
 11709  00345A                     __end_of_util_timer1_initialize:
 11710                           	opt stack 0
 11711                           tblptru	equ	0xFF8
 11712                           tblptrh	equ	0xFF7
 11713                           tblptrl	equ	0xFF6
 11714                           tablat	equ	0xFF5
 11715                           prodh	equ	0xFF4
 11716                           prodl	equ	0xFF3
 11717                           intcon	equ	0xFF2
 11718                           indf0	equ	0xFEF
 11719                           fsr0h	equ	0xFEA
 11720                           fsr0l	equ	0xFE9
 11721                           wreg	equ	0xFE8
 11722                           indf1	equ	0xFE7
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           postdec2	equ	0xFDD
 11728                           fsr2h	equ	0xFDA
 11729                           fsr2l	equ	0xFD9
 11730                           status	equ	0xFD8
 11731                           
 11732 ;; *************** function _low_priority_int *****************
 11733 ;; Defined at:
 11734 ;;		line 116 in file "easat2_util_timer.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;		None
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;		None
 11739 ;; Return value:  Size  Location     Type
 11740 ;;                  1    wreg      void 
 11741 ;; Registers used:
 11742 ;;		None
 11743 ;; Tracked objects:
 11744 ;;		On entry : 0/0
 11745 ;;		On exit  : 0/0
 11746 ;;		Unchanged: 0/0
 11747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11748 ;;      Params:         0       0       0       0       0       0       0
 11749 ;;      Locals:         0       0       0       0       0       0       0
 11750 ;;      Temps:         17       0       0       0       0       0       0
 11751 ;;      Totals:        17       0       0       0       0       0       0
 11752 ;;Total ram usage:       17 bytes
 11753 ;; Hardware stack levels used:    1
 11754 ;; Hardware stack levels required when called:    1
 11755 ;; This function calls:
 11756 ;;		Nothing
 11757 ;; This function is called by:
 11758 ;;		Interrupt level 1
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	intcodelo
 11763  000018                     __pintcodelo:
 11764                           	opt stack 0
 11765  000018                     _low_priority_int:
 11766                           	opt stack 22
 11767                           
 11768                           ;incstack = 0
 11769  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11770  00001A  CFD8 F010          	movff	status,??_low_priority_int
 11771  00001E  CFE8 F011          	movff	wreg,??_low_priority_int+1
 11772  000022  CFE0 F012          	movff	bsr,??_low_priority_int+2
 11773  000026  CFFA F013          	movff	pclath,??_low_priority_int+3
 11774  00002A  CFFB F014          	movff	pclatu,??_low_priority_int+4
 11775  00002E  CFE9 F015          	movff	fsr0l,??_low_priority_int+5
 11776  000032  CFEA F016          	movff	fsr0h,??_low_priority_int+6
 11777  000036  CFE1 F017          	movff	fsr1l,??_low_priority_int+7
 11778  00003A  CFE2 F018          	movff	fsr1h,??_low_priority_int+8
 11779  00003E  CFD9 F019          	movff	fsr2l,??_low_priority_int+9
 11780  000042  CFDA F01A          	movff	fsr2h,??_low_priority_int+10
 11781  000046  CFF3 F01B          	movff	prodl,??_low_priority_int+11
 11782  00004A  CFF4 F01C          	movff	prodh,??_low_priority_int+12
 11783  00004E  CFF6 F01D          	movff	tblptrl,??_low_priority_int+13
 11784  000052  CFF7 F01E          	movff	tblptrh,??_low_priority_int+14
 11785  000056  CFF8 F01F          	movff	tblptru,??_low_priority_int+15
 11786  00005A  CFF5 F020          	movff	tablat,??_low_priority_int+16
 11787  00005E  C020  FFF5         	movff	??_low_priority_int+16,tablat
 11788  000062  C01F  FFF8         	movff	??_low_priority_int+15,tblptru
 11789  000066  C01E  FFF7         	movff	??_low_priority_int+14,tblptrh
 11790  00006A  C01D  FFF6         	movff	??_low_priority_int+13,tblptrl
 11791  00006E  C01C  FFF4         	movff	??_low_priority_int+12,prodh
 11792  000072  C01B  FFF3         	movff	??_low_priority_int+11,prodl
 11793  000076  C01A  FFDA         	movff	??_low_priority_int+10,fsr2h
 11794  00007A  C019  FFD9         	movff	??_low_priority_int+9,fsr2l
 11795  00007E  C018  FFE2         	movff	??_low_priority_int+8,fsr1h
 11796  000082  C017  FFE1         	movff	??_low_priority_int+7,fsr1l
 11797  000086  C016  FFEA         	movff	??_low_priority_int+6,fsr0h
 11798  00008A  C015  FFE9         	movff	??_low_priority_int+5,fsr0l
 11799  00008E  C014  FFFB         	movff	??_low_priority_int+4,pclatu
 11800  000092  C013  FFFA         	movff	??_low_priority_int+3,pclath
 11801  000096  C012  FFE0         	movff	??_low_priority_int+2,bsr
 11802  00009A  C011  FFE8         	movff	??_low_priority_int+1,wreg
 11803  00009E  C010  FFD8         	movff	??_low_priority_int,status
 11804  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11805  0000A4  0010               	retfie	
 11806  0000A6                     __end_of_low_priority_int:
 11807                           	opt stack 0
 11808                           pclatu	equ	0xFFB
 11809                           pclath	equ	0xFFA
 11810                           tblptru	equ	0xFF8
 11811                           tblptrh	equ	0xFF7
 11812                           tblptrl	equ	0xFF6
 11813                           tablat	equ	0xFF5
 11814                           prodh	equ	0xFF4
 11815                           prodl	equ	0xFF3
 11816                           intcon	equ	0xFF2
 11817                           indf0	equ	0xFEF
 11818                           fsr0h	equ	0xFEA
 11819                           fsr0l	equ	0xFE9
 11820                           wreg	equ	0xFE8
 11821                           indf1	equ	0xFE7
 11822                           fsr1h	equ	0xFE2
 11823                           fsr1l	equ	0xFE1
 11824                           bsr	equ	0xFE0
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           fsr2h	equ	0xFDA
 11829                           fsr2l	equ	0xFD9
 11830                           status	equ	0xFD8
 11831                           
 11832 ;; *************** function _high_priority_int *****************
 11833 ;; Defined at:
 11834 ;;		line 74 in file "easat2_util_timer.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;		None
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;		None
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  1    wreg      void 
 11841 ;; Registers used:
 11842 ;;		wreg, status,2, status,0
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11848 ;;      Params:         0       0       0       0       0       0       0
 11849 ;;      Locals:         0       0       0       0       0       0       0
 11850 ;;      Temps:         15       0       0       0       0       0       0
 11851 ;;      Totals:        15       0       0       0       0       0       0
 11852 ;;Total ram usage:       15 bytes
 11853 ;; Hardware stack levels used:    1
 11854 ;; This function calls:
 11855 ;;		Nothing
 11856 ;; This function is called by:
 11857 ;;		Interrupt level 2
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	intcode
 11862  000008                     __pintcode:
 11863                           	opt stack 0
 11864  000008                     _high_priority_int:
 11865                           	opt stack 22
 11866                           
 11867                           ;incstack = 0
 11868  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11869  00000A  EFD4  F015         	goto	int_func
 11870                           pclatu	equ	0xFFB
 11871                           pclath	equ	0xFFA
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           indf0	equ	0xFEF
 11880                           fsr0h	equ	0xFEA
 11881                           fsr0l	equ	0xFE9
 11882                           wreg	equ	0xFE8
 11883                           indf1	equ	0xFE7
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           bsr	equ	0xFE0
 11887                           indf2	equ	0xFDF
 11888                           postinc2	equ	0xFDE
 11889                           postdec2	equ	0xFDD
 11890                           fsr2h	equ	0xFDA
 11891                           fsr2l	equ	0xFD9
 11892                           status	equ	0xFD8
 11893                           
 11894                           	psect	intcode_body
 11895  002BA8                     __pintcode_body:
 11896                           	opt stack 22
 11897  002BA8                     int_func:
 11898                           	opt stack 22
 11899  002BA8  CFFA F002          	movff	pclath,??_high_priority_int+1
 11900  002BAC  CFFB F003          	movff	pclatu,??_high_priority_int+2
 11901  002BB0  CFE9 F004          	movff	fsr0l,??_high_priority_int+3
 11902  002BB4  CFEA F005          	movff	fsr0h,??_high_priority_int+4
 11903  002BB8  CFE1 F006          	movff	fsr1l,??_high_priority_int+5
 11904  002BBC  CFE2 F007          	movff	fsr1h,??_high_priority_int+6
 11905  002BC0  CFD9 F008          	movff	fsr2l,??_high_priority_int+7
 11906  002BC4  CFDA F009          	movff	fsr2h,??_high_priority_int+8
 11907  002BC8  CFF3 F00A          	movff	prodl,??_high_priority_int+9
 11908  002BCC  CFF4 F00B          	movff	prodh,??_high_priority_int+10
 11909  002BD0  CFF6 F00C          	movff	tblptrl,??_high_priority_int+11
 11910  002BD4  CFF7 F00D          	movff	tblptrh,??_high_priority_int+12
 11911  002BD8  CFF8 F00E          	movff	tblptru,??_high_priority_int+13
 11912  002BDC  CFF5 F00F          	movff	tablat,??_high_priority_int+14
 11913                           
 11914                           ;easat2_util_timer.c: 79: if (TMR1IE && TMR1IF) {
 11915  002BE0  B09D               	btfsc	3997,0,c	;volatile
 11916  002BE2  A09E               	btfss	3998,0,c	;volatile
 11917  002BE4  D018               	goto	i2l172
 11918                           
 11919                           ;easat2_util_timer.c: 83: tmr1_interrupt_number++;
 11920  002BE6  4A3C               	infsnz	_tmr1_interrupt_number,f,c
 11921  002BE8  2A3D               	incf	_tmr1_interrupt_number+1,f,c
 11922                           
 11923                           ;easat2_util_timer.c: 87: if (tmr1_interrupt_number == 5) {
 11924  002BEA  0E05               	movlw	5
 11925  002BEC  183C               	xorwf	_tmr1_interrupt_number,w,c
 11926  002BEE  103D               	iorwf	_tmr1_interrupt_number+1,w,c
 11927  002BF0  A4D8               	btfss	status,2,c
 11928  002BF2  D010               	goto	i2l2749
 11929                           
 11930                           ;easat2_util_timer.c: 90: PORTDbits.RD4 = !PORTDbits.RD4;
 11931  002BF4  B883               	btfsc	3971,4,c	;volatile
 11932  002BF6  D003               	goto	i2u206_40
 11933  002BF8  6A01               	clrf	??_high_priority_int& (0+255),c
 11934  002BFA  2A01               	incf	??_high_priority_int& (0+255),f,c
 11935  002BFC  D001               	goto	i2u207_48
 11936  002BFE                     i2u206_40:
 11937  002BFE  6A01               	clrf	??_high_priority_int& (0+255),c
 11938  002C00                     i2u207_48:
 11939  002C00  3A01               	swapf	??_high_priority_int,f,c
 11940  002C02  5083               	movf	3971,w,c	;volatile
 11941  002C04  1801               	xorwf	??_high_priority_int,w,c
 11942  002C06  0BEF               	andlw	-17
 11943  002C08  1801               	xorwf	??_high_priority_int,w,c
 11944  002C0A  6E83               	movwf	3971,c	;volatile
 11945                           
 11946                           ;easat2_util_timer.c: 92: tmr1_interrupt_number = 0;
 11947  002C0C  0E00               	movlw	0
 11948  002C0E  6E3D               	movwf	_tmr1_interrupt_number+1,c
 11949  002C10  0E00               	movlw	0
 11950  002C12  6E3C               	movwf	_tmr1_interrupt_number,c
 11951  002C14                     i2l2749:
 11952                           
 11953                           ;easat2_util_timer.c: 94: }
 11954                           ;easat2_util_timer.c: 107: TMR1IF=0;
 11955  002C14  909E               	bcf	3998,0,c	;volatile
 11956  002C16                     i2l172:
 11957  002C16  C00F  FFF5         	movff	??_high_priority_int+14,tablat
 11958  002C1A  C00E  FFF8         	movff	??_high_priority_int+13,tblptru
 11959  002C1E  C00D  FFF7         	movff	??_high_priority_int+12,tblptrh
 11960  002C22  C00C  FFF6         	movff	??_high_priority_int+11,tblptrl
 11961  002C26  C00B  FFF4         	movff	??_high_priority_int+10,prodh
 11962  002C2A  C00A  FFF3         	movff	??_high_priority_int+9,prodl
 11963  002C2E  C009  FFDA         	movff	??_high_priority_int+8,fsr2h
 11964  002C32  C008  FFD9         	movff	??_high_priority_int+7,fsr2l
 11965  002C36  C007  FFE2         	movff	??_high_priority_int+6,fsr1h
 11966  002C3A  C006  FFE1         	movff	??_high_priority_int+5,fsr1l
 11967  002C3E  C005  FFEA         	movff	??_high_priority_int+4,fsr0h
 11968  002C42  C004  FFE9         	movff	??_high_priority_int+3,fsr0l
 11969  002C46  C003  FFFB         	movff	??_high_priority_int+2,pclatu
 11970  002C4A  C002  FFFA         	movff	??_high_priority_int+1,pclath
 11971  002C4E  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11972  002C50  0011               	retfie		f
 11973  002C52                     __end_of_high_priority_int:
 11974                           	opt stack 0
 11975                           pclatu	equ	0xFFB
 11976                           pclath	equ	0xFFA
 11977                           tblptru	equ	0xFF8
 11978                           tblptrh	equ	0xFF7
 11979                           tblptrl	equ	0xFF6
 11980                           tablat	equ	0xFF5
 11981                           prodh	equ	0xFF4
 11982                           prodl	equ	0xFF3
 11983                           intcon	equ	0xFF2
 11984                           indf0	equ	0xFEF
 11985                           fsr0h	equ	0xFEA
 11986                           fsr0l	equ	0xFE9
 11987                           wreg	equ	0xFE8
 11988                           indf1	equ	0xFE7
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           bsr	equ	0xFE0
 11992                           indf2	equ	0xFDF
 11993                           postinc2	equ	0xFDE
 11994                           postdec2	equ	0xFDD
 11995                           fsr2h	equ	0xFDA
 11996                           fsr2l	equ	0xFD9
 11997                           status	equ	0xFD8
 11998                           pclatu	equ	0xFFB
 11999                           pclath	equ	0xFFA
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           indf0	equ	0xFEF
 12008                           fsr0h	equ	0xFEA
 12009                           fsr0l	equ	0xFE9
 12010                           wreg	equ	0xFE8
 12011                           indf1	equ	0xFE7
 12012                           fsr1h	equ	0xFE2
 12013                           fsr1l	equ	0xFE1
 12014                           bsr	equ	0xFE0
 12015                           indf2	equ	0xFDF
 12016                           postinc2	equ	0xFDE
 12017                           postdec2	equ	0xFDD
 12018                           fsr2h	equ	0xFDA
 12019                           fsr2l	equ	0xFD9
 12020                           status	equ	0xFD8
 12021                           
 12022                           	psect	rparam
 12023  0000                     pclatu	equ	0xFFB
 12024                           pclath	equ	0xFFA
 12025                           tblptru	equ	0xFF8
 12026                           tblptrh	equ	0xFF7
 12027                           tblptrl	equ	0xFF6
 12028                           tablat	equ	0xFF5
 12029                           prodh	equ	0xFF4
 12030                           prodl	equ	0xFF3
 12031                           intcon	equ	0xFF2
 12032                           indf0	equ	0xFEF
 12033                           fsr0h	equ	0xFEA
 12034                           fsr0l	equ	0xFE9
 12035                           wreg	equ	0xFE8
 12036                           indf1	equ	0xFE7
 12037                           fsr1h	equ	0xFE2
 12038                           fsr1l	equ	0xFE1
 12039                           bsr	equ	0xFE0
 12040                           indf2	equ	0xFDF
 12041                           postinc2	equ	0xFDE
 12042                           postdec2	equ	0xFDD
 12043                           fsr2h	equ	0xFDA
 12044                           fsr2l	equ	0xFD9
 12045                           status	equ	0xFD8
 12046                           
 12047                           	psect	temp
 12048  00003E                     btemp:
 12049                           	opt stack 0
 12050  00003E                     	ds	1
 12051  0000                     int$flags	set	btemp
 12052                           pclatu	equ	0xFFB
 12053                           pclath	equ	0xFFA
 12054                           tblptru	equ	0xFF8
 12055                           tblptrh	equ	0xFF7
 12056                           tblptrl	equ	0xFF6
 12057                           tablat	equ	0xFF5
 12058                           prodh	equ	0xFF4
 12059                           prodl	equ	0xFF3
 12060                           intcon	equ	0xFF2
 12061                           indf0	equ	0xFEF
 12062                           fsr0h	equ	0xFEA
 12063                           fsr0l	equ	0xFE9
 12064                           wreg	equ	0xFE8
 12065                           indf1	equ	0xFE7
 12066                           fsr1h	equ	0xFE2
 12067                           fsr1l	equ	0xFE1
 12068                           bsr	equ	0xFE0
 12069                           indf2	equ	0xFDF
 12070                           postinc2	equ	0xFDE
 12071                           postdec2	equ	0xFDD
 12072                           fsr2h	equ	0xFDA
 12073                           fsr2l	equ	0xFD9
 12074                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      61
    BANK0           160    102     102
    BANK1           256    206     206
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftdiv
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_getTemperature->___ftadd
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    _util_beacon_transmission->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  117115
                         _initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  117115
                                             92 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2     934
                                             49 COMRAM     5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2     824
                                             44 COMRAM     5     3      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   22127
                                             31 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     650
                                             37 COMRAM     7     5      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1150
                                             34 COMRAM    21    19      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     534
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      24
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     232
                                             37 COMRAM    16    14      2
                                              0 BANK0     18    18      0
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      24
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3042
                                             44 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2943
                                             40 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2    9950
                                             31 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3    9378
                                              9 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2    9950
                                             31 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2362
                                             40 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   63785
                                             82 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    5544
                                             45 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     430
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     430
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    4662
                                             39 COMRAM     6     4      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     430
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     650
                                             37 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     650
                                             37 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     430
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     174
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     174
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     218
                                             32 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   56258
                                             37 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   13096
                                              9 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             32 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   12817
                                              9 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2463
                                             46 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6908
                                             52 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1448
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1580
                                             38 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     431
                                             32 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     574
                                             32 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2281
                                             40 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     671
                                             45 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     546
                                             32 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             16 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4923
                                             31 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4626
                                             19 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                             32 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     109
                                             32 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     520
                                             32 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     480
                                             32 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                             15 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     66      66       4       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      3D       1       64.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     171       9        0.0%
DATA                 0      0     171      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Jan 28 10:58:29 2017

                     util_onewire_read_byte@value 0070                              util_getTemperature@i 01CC  
                                              l24 2D6C                                                l26 2DE6  
                                              l72 2A7C                                                l84 29BE  
                                              l78 2900                                      ___awdiv@sign 002C  
                                              bsr 000FE0                               ___wmul@multiplicand 0031  
                __end_of_util_beacon_transmission 27E6                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 007E  
                                    ___ftadd@exp2 007D                                      ___ftadd@sign 007C  
                                             l135 3346                                               l335 33CC  
                                             l329 33A0                                               l426 077E  
                                             l283 3292                                               l276 325E  
                                             l722 1B36                                               l726 1B70  
                                             l728 1B98                                               l737 1C6E  
                                             l746 1C98                                               l667 26EA  
                                             l771 2496                                               l764 2408  
                                             l765 2430                                               l757 289A  
                                             l846 2EE8                                               l856 2FBE  
                                             l699 2B88                                               l796 3494  
                         ??_util_onewire_read_bit 0023                                      __CFG_CPB$OFF 000000  
                                    __CFG_CPD$OFF 000000                       __end_of_util_getTemperature 136C  
                 __size_of_util_timer1_initialize 0026                                      ___awmod@sign 0026  
                  ??_util_transmit_morse_sequence 002A                                               wreg 000FE8  
                                    __CFG_FOSC$XT 000000                                      __CFG_LVP$OFF 000000  
      util_transmit_morse_sequence@morse_sequence 0028                                      ___ftdiv@cntr 0036  
                                    ___ftdiv@sign 003B                                              l3001 2E3A  
                                            l3013 2E60                                              l3111 2FE0  
                                            l3017 2E6E                                              l3009 2E56  
                                            l3041 2F34                                              l3033 2F1A  
                                            l3121 3012                                              l3211 23CE  
                                            l3115 2FE6                                              l3301 26B0  
                                            l3205 23A2                                              l3053 2F60  
                                            l3045 2F48                                              l3037 2F28  
                                            l3029 2F0E                                              l3117 300A  
                                            l3109 2FDA                                              l3061 30EC  
                                            l3311 26D8                                              l3039 2F30  
                                            l3071 310E                                              l3401 2EAA  
                                            l3313 26E4                                              l3305 26C0  
                                            l3241 245C                                              l3049 2F52  
                                            l3065 30FC                                              l3073 3112  
                                            l3331 2CB2                                              l3251 2484  
                                            l3059 30E4                                              l3421 2F8C  
                                            l3261 25F2                                              l3253 2490  
                                            l3245 246C                                              l4301 1F42  
                                            l3327 2C82                                              l3319 314A  
                                            l3351 226C                                              l3431 3032  
                                            l4215 32D4                                              l3337 2CDE  
                                            l3409 2EDA                                              l3425 2FB0  
                                            l3417 2F7C                                              l3433 303E  
                                            l3281 2652                                              l4241 24DA  
                                            l4321 1558                                              l3441 3304  
                                            l3419 2F88                                              l3267 2610  
                                            l3195 34D6                                              l4315 14AE  
                                            l4403 02A4                                              l2811 3092  
                                            l4219 32E4                                              l3533 33FC  
                                            l2901 1C26                                              l3381 233E  
                                            l3373 2312                                              l4261 254E  
                                            l4333 16B2                                              l4325 157E  
                                            l2813 3096                                              l3445 3314  
                                            l3383 2348                                              l4271 2580  
                                            l4247 250C                                              l4431 03E0  
                                            l4351 00DA                                              l3529 33EC  
                                            l3369 22FE                                              l3289 2682  
                                            l4265 2564                                              l4601 0A9A  
                                            l4513 074C                                              l4505 0724  
                                            l4433 03F6                                              l4345 00BA  
                                            l3537 3364                                              l2915 1CC2  
                                            l2907 1C54                                              l3387 2364  
                                            l3379 232E                                              l4275 2596  
                                            l4339 175C                                              l4611 0AF2  
                                            l4603 0AA4                                              l4531 0804  
                                            l4515 0760                                              l4507 0732  
                                            l4443 0486                                              l4435 0426  
                                            l4427 03BA                                              l4419 0352  
                                            l4371 01A8                                              l3539 336C  
                                            l2843 3280                                              l2827 324C  
                                            l2781 2B18                                              l2925 1D10  
                                            l2909 1C62                                              l3397 2E9A  
                                            l4293 1E80                                              l4541 08EA  
                                            l4461 0570                                              l4437 043C  
                                            l4381 020A                                              l4357 010C  
                                            l4365 0180                                              l2757 33C0  
                                            l3901 1900                                              l4701 0CDE  
                                            l2791 2B74                                              l2783 2B22  
                                            l3399 2EA6                                              l4623 0B46  
                                            l4607 0ADC                                              l4543 08F8  
                                            l4527 07B2                                              l4519 0782  
                                            l4463 0576                                              l4447 04AC  
                                            l4551 0920                                              l4375 01E4  
                                            l4631 0BEC                                              l3911 1946  
                                            l3903 190E                                              l4711 0D16  
                                            l2793 2B7E                                              l2785 2B40  
                                            l2777 2B0A                                              l2873 1B7E  
                                            l4617 0B18                                              l4609 0AE6  
                                            l4561 0964                                              l4457 050A  
                                            l4393 025E                                              l4633 0C0A  
                                            l4385 0210                                              l4377 01FA  
                                            l3841 31D4                                              l2769 3394  
                                            l3921 198C                                              l3913 1954  
                                            l3905 191C                                              l4801 0FDC  
                                            l4721 0D52                                              l4713 0D2C  
                                            l2867 1B44                                              l4627 0BD0  
                                            l4491 065C                                              l4483 062E  
                                            l4475 05BC                                              l4387 0244  
                                            l3843 31DC                                              l3923 199A  
                                            l3915 1962                                              l3907 192A  
                                            l3851 17A2                                              l4731 0E00  
                                            l4715 0D30                                              l4707 0D04  
                                            l2789 2B56                                              l4629 0BD6  
                                            l4581 09D6                                              l4549 0912  
                                            l3837 31C0                                              l3925 19A8  
                                            l3917 1970                                              l3909 1938  
                                            l3861 17E8                                              l3853 17B0  
                                            l3933 19CA                                              l4805 0FF8  
                                            l4741 0E36                                              l2895 1BFE  
                                            l2879 1B8E                                              l2991 2E18  
                                            l4567 098A                                              l4495 0688  
                                            l4487 0640                                              l4479 060C  
                                            l3839 31C4                                              l3927 19B6  
                                            l3919 197E                                              l3871 182E  
                                            l3863 17F6                                              l3855 17BE  
                                            l3935 1AC8                                              l3847 1786  
                                            l3943 280E                                              l4735 0E16  
                                            l4727 0D72                                              l2897 1C0C  
                                            l2889 1BD0                                              l2985 2E08  
                                            l4585 09FE                                              l4569 0990  
                                            l4497 0690                                              l4489 0648  
                                            l3929 19C4                                              l3881 1874  
                                            l3873 183C                                              l3865 1804  
                                            l3857 17CC                                              l3849 1794  
                                            l4737 0E20                                              l4753 0EAA  
                                            l2899 1C1A                                              l4595 0A62  
                                            l3891 18BA                                              l3883 1882  
                                            l3875 184A                                              l3867 1812  
                                            l3859 17DA                                              l4755 0EB4  
                                            l2997 2E2E                                              l4589 0A2E  
                                            l3893 18C8                                              l3885 1890  
                                            l3877 1858                                              l3869 1820  
                                            l4845 27AC                                              l3949 2836  
                                            l4781 0F68                                              l4749 0EA2  
                                            l2999 2E36                                              l3895 18D6  
                                            l3887 189E                                              l3879 1866  
                                            l3991 320C                                              l4759 0ECA  
                                            l3897 18E4                                              l3889 18AC  
                                            l4849 27C8                                              l3969 2874  
                                            l3899 18F2                                              l4795 0FBC  
                                            l4859 2DDA                                              l4789 0F98  
                                            l4797 0FC8                                              STR_1 7F9E  
                                            STR_2 7F6B                                              STR_3 7FE8  
                                            STR_4 7FD0                                              STR_5 7FF5  
                                            STR_6 7FCB                                              STR_7 7FC1  
                                            STR_8 7FC4                                              STR_9 7FBF  
                                            u3010 2292                                              u2210 325E  
                                            u2230 3292                                              u3015 2288  
                                            u2241 1AE4                                              u2251 1B02  
                                            u2180 30B6                                              u4101 24BC  
                                            u3205 215C                                              u3150 319E  
                                            u3215 2170                                              u4121 24EE  
                                            u3225 2184                                              u2187 30AC  
                                            u3165 1FE8                                              u3158 31A0  
                                            u5007 334A                                              u3175 2006  
                                            u4320 02EA                                              u2801 23B2  
                                            u5017 3182                                              u3185 2024  
                                            u5027 318C                                              u3195 2042  
                                            u4325 02DE                                              u5037 31A8  
                                            u4510 0776                                              u2670 32B2  
                                            u5047 32BC                                              u5057 3396  
                                            u5067 33C2                                              u2781 2386  
                                            u2678 32B4                                              u3771 27F6  
                                            u2991 2248                                              u3791 281E  
                                            u4834 0E66                                              u4835 0E5E  
                        ??_util_onewire_read_byte 0028                                              u4997 3340  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 351A                                      ___ftpack@arg 0021  
                                    ___ftpack@exp 0024                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 003E                                     __CFG_BORV$190 000000  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
 __end_of_util_transmit_space_between_dots_dashes 351A  __size_of_util_transmit_space_between_dots_dashes 000E  
       ??_util_transmit_space_between_dots_dashes 0026          ?_util_transmit_space_between_dots_dashes 0001  
         _util_transmit_space_between_dots_dashes 350C                                      _sprintf$2085 0099  
                                    ___ftmul@cntr 0067                                      ___param_bank 000000  
                                    ___ftmul@sign 0068                                      ___fttol@exp1 007E  
                                    ___fttol@lval 007A                                _util_transmit_dash 3264  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
             __end_of_util_waits_delay_hundred_us 33E2                       _util_waits_delay_hundred_us 33B6  
                                 __end_of___awdiv 2E78                                             _ADRES 000FC3  
                                 __end_of___ftadd 1D36                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 2F6A  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 28CC                                   __end_of___ftneg 34A2  
                                 __end_of___lldiv 2EFA                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 25D4                                   ___awdiv@divisor 0029  
                                 __end_of___llmod 2FD0                                   __end_of___ftsub 3174  
                                 __end_of___fttol 2376                       __size_of_util_onewire_reset 0042  
                                           i2l172 2C16                                     __CFG_WDTEN$ON 000000  
                                 ___awdiv@counter 002B                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                               ?_util_transmit_dash 0001  
                              ??_low_priority_int 0010                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0031  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                      __end_of_util_getSolarCurrent 298A  
                                   __CFG_WRTB$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                                   ___awtoft@sign 002C                                   __end_of_dpowers 7F1D  
                                           _scale 136C                                   __end_of_isdigit 34DE  
                              __CFG_MCLRE$EXTMCLR 000000                                     ___ftpack@sign 0025  
                        ??_util_onewire_write_bit 0023                         util_waits_delay_secs@secs 0026  
                                  __CFG_BOREN$OFF 000000                                             pclath 000FFA  
                                           tablat 000FF5                                             status 000FD8  
                     __end_of_util_waits_delay_ms 33B6                                   __end_of_sprintf 0C18  
                          _util_timer1_initialize 3434                              ??_util_transmit_dash 0026  
                         util_waits_delay_hours@i 0035                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 34DE                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3526                      __end_of_util_transmit_letter 1ACE  
                                          ??_main 003C                                     ___fttol@sign1 0079  
                                   __activetblptr 000002                              __size_of__tdiv_to_l_ 0132  
                      util_onewire_read_bit@value 0024                         util_getSolarCurrent@value 0081  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                ___llmod@dividend 002E                                            ?_scale 0069  
                                ___awdiv@dividend 0027                                  __end_of___awtoft 3230  
                                __end_of___ftpack 2BA8                                  __end_of___lltoft 3088  
                                          i2l2749 2C14                                  __end_of___lwtoft 347E  
                 __size_of_util_onewire_read_byte 014C                 __size_of_util_beacon_transmission 00EA  
                                          _TMR1IE 007CE8                                            _TMR1IF 007CF0  
                       ?_util_beacon_transmission 00B2                                    __CFG_XINST$OFF 000000  
                                __end_of__powers_ 7F6B                          ?_util_onewire_write_byte 0023  
                                          ___ftge 2C52                        util_onewire_read_byte@bit0 0060  
                      util_onewire_read_byte@bit1 0062                        util_onewire_read_byte@bit2 0064  
                      util_onewire_read_byte@bit3 0066                        util_onewire_read_byte@bit4 0068  
                      util_onewire_read_byte@bit5 006A                        util_onewire_read_byte@bit6 006C  
                      util_onewire_read_byte@bit7 006E                           ??_util_waits_delay_mins 002F  
                         ??_util_waits_delay_secs 0028                                            ___wmul 340E  
                                       ??___awdiv 002B                                         ??___ftadd 0079  
                                  __CFG_STVREN$ON 000000                                         ??___awmod 0025  
                                       ??___ftdiv 0033                                         ??___ftneg 0024  
                                       ??___lldiv 0029                                         ??___ftmul 0060  
                                       ??___llmod 0036                                         ??___ftsub 003C  
                                       ??___fttol 0074                       util_onewire_write_byte@bit0 0028  
                     util_onewire_write_byte@bit1 002A                       util_onewire_write_byte@bit2 002C  
                     util_onewire_write_byte@bit3 002E                       util_onewire_write_byte@bit4 0030  
                     util_onewire_write_byte@bit5 0032                       util_onewire_write_byte@bit6 0034  
                     util_onewire_write_byte@bit7 0036                                            _memset 33E2  
                                          _fround 1D36                                  ___awdiv@quotient 002D  
                                 ___awmod@divisor 0023                                   ___awmod@counter 0025  
                     util_waits_delay_hours@hours 0032                                            _strcat 31B6  
                                          _strcpy 335A                                            _strlen 3088  
                           ___ftmul@f3_as_product 0064                                         ??_isdigit 0021  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 0093                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 003B                   __size_of_util_onewire_write_bit 0030  
                                      __accesstop 0060                           __end_of__initialization 34E2  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 0073  
                                      ___ftadd@f2 0076                                        ___ftge@ff1 0021  
                                      ___ftge@ff2 0024                                     ___rparam_used 000001  
                                      ___ftdiv@f1 002D                                        ___ftdiv@f2 0030  
                                      ___ftdiv@f3 0037                          ??_util_getBatteryVoltage 003B  
                                      ___ftneg@f1 0021                                        ___awtoft@c 0029  
                                      ___ftmul@f1 0035                                        ___ftmul@f2 0038  
                                      ___ftsub@f1 007F                                        ___ftsub@f2 0082  
                                      ___fttol@f1 0070                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 28CC                                        ___lltoft@c 0029  
                        main_loop@battery_current 00C1                                     __end_of_scale 1782  
                          _util_onewire_read_byte 20E6                                        ___lwtoft@c 0029  
                                      __div_to_l_ 25D4                          main_loop@battery_voltage 00C3  
                  __size_of_util_onewire_read_bit 0032                     __end_of_util_onewire_read_bit 32CA  
                                 __div_to_l_@exp1 002C                                   __div_to_l_@cntr 002B  
                                         ??_scale 003B                                   __div_to_l_@quot 0027  
                                    sprintf@width 00A0         __end_of_util_transmit_space_between_words 34FE  
      __size_of_util_transmit_space_between_words 000E               ??_util_transmit_space_between_words 0026  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 34F0  
                              __size_of_main_loop 0088                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1782                                     __div_to_l_@f1 0021  
                                   __div_to_l_@f2 0024                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 007F                                           ?___ftge 0021  
                    util_onewire_write_bit@bit_in 0021                                           ?___wmul 002F  
                              __CFG_CCP3MX$PORTB5 000000                            _util_onewire_write_bit 332A  
                                         ?_memset 0021                                           ?_fround 0069  
                                       ?___awtoft 0029                                         ?___ftpack 0021  
                               _high_priority_int 0008                                         ?___lltoft 0029  
                                         ?_strcat 0021                                           ?_strcpy 0021  
                                         ?_strlen 0021                                         ?___lwtoft 0029  
                              ?_high_priority_int 0001                               ??_high_priority_int 0001  
                    __size_of_util_getTemperature 0754                           ?_util_timer1_initialize 0001  
                           ?_util_transmit_letter 0001              __size_of_util_waits_delay_hundred_us 002C  
                 __size_of_util_getBatteryCurrent 00BE                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 0024                      util_waits_delay_mins@minutes 002D  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F44  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00B2  
                                      _scale$2084 006C              __end_of_util_transmit_morse_sequence 302C  
           __size_of_util_transmit_morse_sequence 005C                      _util_transmit_morse_sequence 2FD0  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 350C      __size_of_util_transmit_space_between_letters 000E  
           ??_util_transmit_space_between_letters 0026              ?_util_transmit_space_between_letters 0001  
             _util_transmit_space_between_letters 34FE                                   __size_of___ftge 0090  
                                         ___awdiv 2DF4                                           ___ftadd 1ACE  
                                         ___awmod 2EFA                                           ___ftdiv 27E6  
                                         ___ftneg 347E                                           ___lldiv 2E78  
                                 __size_of___wmul 0026                                           ___ftmul 24A8  
                        ??_util_waits_delay_hours 0034                                           ___llmod 2F6A  
                                         ___ftsub 3128                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2232                         __end_of_high_priority_int 2C52  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 31B6  
                               __end_of_main_loop 2DF4                                           __pcinit 34DE  
                                      ??___awtoft 002C                                        ??___ftpack 0026  
                                 __size_of_memset 002C                                   __size_of_fround 024E  
                                         __ramtop 0600                                        _initialize 2CE2  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 002D  
                                         __ptext0 351A                                           __ptext1 2D6C  
                                         __ptext2 32CA                                           __ptext3 32FA  
                                         __ptext4 0C18                                           __ptext5 30DA  
                                         __ptext6 1F84                                           __ptext7 332A  
                                         __ptext8 3174                                           __ptext9 20E6  
                                      ??___lwtoft 002C                                   __size_of_strcat 0042  
                                 __size_of_strcpy 0030                                   __size_of_strlen 0052  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0021  
                                         _dpowers 7EF5                       util_getTemperature@num_byte 01C5  
                                         _isdigit 34C0                                  ___awmod@dividend 0021  
                    util_onewire_write_byte@value 0023                  ??_util_transmit_buzzer_1ms_cycle 0026  
                 ?_util_transmit_buzzer_1ms_cycle 0001                    __end_of_util_timer1_initialize 345A  
                            main_loop@temperature 00BC                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 002C                                    __pintcode_body 2BA8  
                            end_of_initialization 34E2                      util_waits_delay_hundred_us@i 0024  
                                         memset@c 0023                                           memset@n 0025  
                                         memset@p 0027                                     __Lmediumconst 7EF4  
                                         int_func 2BA8                       __size_of_util_transmit_dash 0034  
                                 ___lldiv@divisor 0025                            ??_util_getSolarCurrent 003B  
                                 ___lldiv@counter 002D                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 002C                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00B5                    __size_of_util_waits_delay_mins 0030  
                                  __tdiv_to_l_@f1 0021                                    __tdiv_to_l_@f2 0024  
                  __size_of_util_waits_delay_secs 004E                     __end_of_util_waits_delay_mins 332A  
                          _util_getBatteryCurrent 298A                     __end_of_util_waits_delay_secs 3128  
                                         strlen@s 0021                                     ??__tdiv_to_l_ 0027  
                                       _PORTAbits 000F80                                         _PORTDbits 000F83  
                          _util_getBatteryVoltage 2A48                  __size_of_util_onewire_write_byte 0162  
                        _util_getTemperature$2080 01AD                          _util_getTemperature$2081 01B0  
                        _util_getTemperature$2078 01A7                          _util_getTemperature$2079 01AA  
                                       _TRISAbits 000F92                                         _TRISDbits 000F95  
                          ??_util_transmit_letter 002E                                       ___ftdiv@exp 003A  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 0128  
                                     ___ftmul@exp 0063                           ?_util_onewire_read_byte 0026  
                               _util_transmit_dot 3230                        __size_of_high_priority_int 2C4A  
                                  __end_of___ftge 2CE2                   __size_of_util_waits_delay_hours 0030  
                                  __end_of___wmul 3434                                ?_util_transmit_dot 0001  
                                     ?_initialize 0001                                    __end_of_memset 340E  
                                  __end_of_fround 1F84                                    __end_of_strcat 31F8  
                                  __end_of_strcpy 338A                                    __end_of_strlen 30DA  
               util_waits_delay_hundred_us@hun_us 0021                               start_initialization 34DE  
                             ??_util_transmit_dot 0026                            util_waits_delay_mins@i 0030  
                          util_waits_delay_secs@i 0029                            util_waits_delay_secs@j 002B  
                             __end_of__tdiv_to_l_ 24A8                          _util_beacon_transmission 26FC  
             util_beacon_transmission@temperature 00B9                                  _low_priority_int 0018  
                                 ___llmod@divisor 0032                                   ___llmod@counter 0036  
                             util_transmit_dash@i 0026                    __end_of_util_onewire_read_byte 2232  
                       __end_of_util_transmit_dot 3264                           ?_util_onewire_write_bit 0021  
                                        ??___ftge 0027                                          ??___wmul 0033  
                             _util_getTemperature 0C18                                          ??_memset 0027  
                                        ??_fround 003B                                     sprintf@tmpval 00A2  
                                        ??_strcat 0025                                          ??_strcpy 0025  
                                        ??_strlen 0023                      ?_util_waits_delay_hundred_us 0021  
                                      fround@prec 0072                                 __size_of___awtoft 0038  
                               __size_of___ftpack 00AE                                 __size_of___lltoft 005C  
                                     __pbssCOMRAM 003C                                 __size_of___lwtoft 0024  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$1739 0022                             _util_onewire_read_bit 3298  
                            ?_util_getTemperature 007F                            _util_waits_delay_hours 32CA  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 009E  
                                     sprintf@fval 00AC             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00AF                               __size_of_initialize 008A  
                  __end_of_util_onewire_write_bit 335A                                         __pintcode 0008  
                                   __pmediumconst 7EF4                                          ?___awdiv 0027  
                                        ?___ftadd 0073                                          ?___awmod 0021  
                                        ?___ftdiv 002D                                          ?___ftneg 0021  
                                        ?___lldiv 0021                                          ?___ftmul 0035  
                                        ?___llmod 002E                                          ?___ftsub 007F  
                                       __npowers_ 7F1D                                          ?___fttol 0070  
                                     __pintcodelo 0018                                  __CFG_PRICLKEN$ON 000000  
                                     __tdiv_to_l_ 2376                                      ??__div_to_l_ 0027  
                         _util_onewire_write_byte 1F84                                          ?_isdigit 0001  
                                       _main_loop 2D6C                     ??_util_waits_delay_hundred_us 0023  
                             _util_waits_delay_ms 338A                             ??_util_getTemperature 0082  
                              _util_onewire_reset 3174                                          ?_sprintf 0085  
                                  __size_of_scale 0416                       util_getBatteryVoltage@value 006C  
                                  ___wmul@product 0033                                          _LATAbits 000F89  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0021  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                                        i2u206_40 2BFE                        __size_of_util_transmit_dot 0034  
                                        i2u207_48 2C00                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 26FC            __end_of_util_transmit_buzzer_1ms_cycle 34C0  
         __size_of_util_transmit_buzzer_1ms_cycle 001E                    _util_transmit_buzzer_1ms_cycle 34A2  
                         ?_util_getBatteryCurrent 007F                                          _RCONbits 000FD0  
                                __CFG_WDTPS$32768 000000                              ?_util_waits_delay_ms 0021  
         util_beacon_transmission@battery_current 00B7                           ?_util_getBatteryVoltage 0069  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 002F  
                            ??_util_onewire_reset 0023                        util_transmit_letter@letter 002E  
                                      ?_main_loop 0001           util_beacon_transmission@battery_voltage 00B2  
                          ?_util_onewire_read_bit 0021                       util_getBatteryCurrent@value 0081  
                           util_waits_delay_ms@ms 0021                        __end_of_util_transmit_dash 3298  
                  __end_of_util_getBatteryCurrent 2A48                                          __Hrparam 0000  
                              util_transmit_dot@i 0026                                          __Lrparam 0000  
                           ??_util_waits_delay_ms 0023                     __size_of_util_getSolarCurrent 00BE  
                               __CFG_P2BMX$PORTC0 000000                    __end_of_util_getBatteryVoltage 2AFA  
                                __size_of___awdiv 0084                                  __size_of___ftadd 0268  
                                __size_of___awmod 0070                                  __size_of___ftdiv 00E6  
                                __size_of___ftneg 0024                                  __size_of___lldiv 0082  
                                __size_of___ftmul 012C                         ??_util_onewire_write_byte 0025  
                                __size_of___llmod 0066                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                                      ??_initialize 0021  
                                        ___awtoft 31F8                                          ___ftpack 2AFA  
                                     _fround$2082 006F                                       _fround$2083 006C  
                        __end_of_low_priority_int 00A6                                          ___lltoft 302C  
                      ??_util_beacon_transmission 003C                             _util_waits_delay_mins 32FA  
                           _util_waits_delay_secs 30DA                                        _ANSELAbits 000F38  
                                        ___lwtoft 345A                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00AA                                        sprintf@val 00A6  
                                      strcat@from 0023                                  __size_of_isdigit 001E  
                                        __ptext10 3298                                          __ptext11 27E6  
                                        __ptext20 34FE                                          __ptext12 31F8  
                                        __ptext21 2FD0                                          __ptext13 28CC  
                                        __ptext30 31B6                                          __ptext22 350C  
                                        __ptext14 2A48                                          __ptext31 00AA  
                                        __ptext23 3230                                          __ptext15 298A  
                                        __ptext40 25D4                                          __ptext32 136C  
                                        __ptext24 3264                                          __ptext16 345A  
                                        __ptext41 302C                                          __ptext33 34C0  
                                        __ptext25 338A                                          __ptext17 26FC  
                                        __ptext50 33E2                                          __ptext42 2F6A  
                                        __ptext34 1D36                                          __ptext26 34A2  
                                        __ptext18 1782                                          __ptext51 2CE2  
                                        __ptext43 2E78                                          __ptext35 340E  
                                        __ptext27 33B6                                          __ptext19 34F0  
                                        __ptext52 3434                                          __ptext44 2232  
                                        __ptext36 24A8                                          __ptext28 3088  
                                        __ptext45 3128                                          __ptext37 2EFA  
                                        __ptext29 335A                                          __ptext46 1ACE  
                                        __ptext38 2DF4                                          __ptext47 2AFA  
                                        __ptext39 2376                                          __ptext48 347E  
                                        __ptext49 2C52                                          __powers_ 7F44  
                                __size_of_sprintf 0B6E                                        strcpy@from 0023  
                   __size_of_util_transmit_letter 034C                  util_getSolarCurrent@solarCurrent 0084  
                                   __size_of_main 000C                        util_onewire_reset@presence 0024  
                              __end_of_initialize 2D6C                                          int$flags 003E  
                   ?_util_transmit_morse_sequence 0028                     util_getBatteryVoltage@voltage 006F  
                           _tmr1_interrupt_number 003C                          ??_util_timer1_initialize 0021  
                                     ??_main_loop 003C                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0032                                          isdigit@c 0023  
                                        memset@p1 0021                            main_loop@solar_current 00BF  
                                        scale@scl 006F                   __end_of_util_onewire_write_byte 20E6  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 009C                                  __tdiv_to_l_@exp1 002F  
                                __tdiv_to_l_@cntr 002E                                         sprintf@sp 0085  
                                __tdiv_to_l_@quot 002A                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 0021                            ?_util_waits_delay_mins 002D  
                          ?_util_waits_delay_secs 0026                                      ?__tdiv_to_l_ 0021  
                                        sprintf@c 00B1                                          sprintf@f 0087  
                                        strcat@cp 0025                                          strcat@to 0021  
                  __end_of_util_waits_delay_hours 32FA                                  ___lldiv@quotient 0029  
                                        strcpy@cp 0025                                          strlen@cp 0025  
                                        strcpy@to 0021                                 __CFG_T3CMX$PORTB5 000000  
            util_getBatteryCurrent@batteryCurrent 0084  
