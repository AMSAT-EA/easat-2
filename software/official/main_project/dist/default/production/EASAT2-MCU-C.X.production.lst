

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Oct 01 16:20:55 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 1.41
    82                           ; Generated 25/01/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F45K22 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  004044                     __pidataCOMRAM:
   118                           	opt stack 0
   119                           
   120                           ;initializer for high_priority_int@noise_avg_value
   121  004044  00                 	db	0
   122  004045  7D                 	db	125
   123  004046  00                 	db	0
   124                           
   125                           ;initializer for high_priority_int@activation_threshold
   126  004047  7D00               	dw	32000
   127                           
   128                           	psect	mediumconst
   129  007ED4                     __pmediumconst:
   130                           	opt stack 0
   131  007ED4  00                 	db	0
   132  007ED5                     _dpowers:
   133                           	opt stack 0
   134  007ED5  0001               	dw	1
   135  007ED7  0000               	dw	0
   136  007ED9  000A               	dw	10
   137  007EDB  0000               	dw	0
   138  007EDD  0064               	dw	100
   139  007EDF  0000               	dw	0
   140  007EE1  03E8               	dw	1000
   141  007EE3  0000               	dw	0
   142  007EE5  2710               	dw	10000
   143  007EE7  0000               	dw	0
   144  007EE9  86A0               	dw	34464
   145  007EEB  0001               	dw	1
   146  007EED  4240               	dw	16960
   147  007EEF  000F               	dw	15
   148  007EF1  9680               	dw	38528
   149  007EF3  0098               	dw	152
   150  007EF5  E100               	dw	57600
   151  007EF7  05F5               	dw	1525
   152  007EF9  CA00               	dw	51712
   153  007EFB  3B9A               	dw	15258
   154  007EFD                     __end_of_dpowers:
   155                           	opt stack 0
   156  007EFD                     __powers_:
   157                           	opt stack 0
   158  007EFD  00                 	db	0
   159  007EFE  80                 	db	128
   160  007EFF  3F                 	db	63
   161  007F00  00                 	db	0
   162  007F01  20                 	db	32
   163  007F02  41                 	db	65
   164  007F03  00                 	db	0
   165  007F04  C8                 	db	200
   166  007F05  42                 	db	66
   167  007F06  00                 	db	0
   168  007F07  7A                 	db	122
   169  007F08  44                 	db	68
   170  007F09  40                 	db	64
   171  007F0A  1C                 	db	28
   172  007F0B  46                 	db	70
   173  007F0C  50                 	db	80
   174  007F0D  C3                 	db	195
   175  007F0E  47                 	db	71
   176  007F0F  24                 	db	36
   177  007F10  74                 	db	116
   178  007F11  49                 	db	73
   179  007F12  97                 	db	151
   180  007F13  18                 	db	24
   181  007F14  4B                 	db	75
   182  007F15  BC                 	db	188
   183  007F16  BE                 	db	190
   184  007F17  4C                 	db	76
   185  007F18  6B                 	db	107
   186  007F19  6E                 	db	110
   187  007F1A  4E                 	db	78
   188  007F1B  03                 	db	3
   189  007F1C  15                 	db	21
   190  007F1D  50                 	db	80
   191  007F1E  79                 	db	121
   192  007F1F  AD                 	db	173
   193  007F20  60                 	db	96
   194  007F21  F3                 	db	243
   195  007F22  49                 	db	73
   196  007F23  71                 	db	113
   197  007F24                     __end_of__powers_:
   198                           	opt stack 0
   199  007F24                     __npowers_:
   200                           	opt stack 0
   201  007F24  00                 	db	0
   202  007F25  80                 	db	128
   203  007F26  3F                 	db	63
   204  007F27  CD                 	db	205
   205  007F28  CC                 	db	204
   206  007F29  3D                 	db	61
   207  007F2A  D7                 	db	215
   208  007F2B  23                 	db	35
   209  007F2C  3C                 	db	60
   210  007F2D  12                 	db	18
   211  007F2E  83                 	db	131
   212  007F2F  3A                 	db	58
   213  007F30  B7                 	db	183
   214  007F31  D1                 	db	209
   215  007F32  38                 	db	56
   216  007F33  C6                 	db	198
   217  007F34  27                 	db	39
   218  007F35  37                 	db	55
   219  007F36  38                 	db	56
   220  007F37  86                 	db	134
   221  007F38  35                 	db	53
   222  007F39  C0                 	db	192
   223  007F3A  D6                 	db	214
   224  007F3B  33                 	db	51
   225  007F3C  CC                 	db	204
   226  007F3D  2B                 	db	43
   227  007F3E  32                 	db	50
   228  007F3F  70                 	db	112
   229  007F40  89                 	db	137
   230  007F41  30                 	db	48
   231  007F42  E7                 	db	231
   232  007F43  DB                 	db	219
   233  007F44  2E                 	db	46
   234  007F45  E5                 	db	229
   235  007F46  3C                 	db	60
   236  007F47  1E                 	db	30
   237  007F48  42                 	db	66
   238  007F49  A2                 	db	162
   239  007F4A  0D                 	db	13
   240  007F4B                     __end_of__npowers_:
   241                           	opt stack 0
   242  007F4B                     golay_weight@F87:
   243                           	opt stack 0
   244  007F4B  00                 	db	0
   245  007F4C  01                 	db	1
   246  007F4D  01                 	db	1
   247  007F4E  02                 	db	2
   248  007F4F  01                 	db	1
   249  007F50  02                 	db	2
   250  007F51  02                 	db	2
   251  007F52  03                 	db	3
   252  007F53  01                 	db	1
   253  007F54  02                 	db	2
   254  007F55  02                 	db	2
   255  007F56  03                 	db	3
   256  007F57  02                 	db	2
   257  007F58  03                 	db	3
   258  007F59  03                 	db	3
   259  007F5A  04                 	db	4
   260  007F5B                     __end_ofgolay_weight@F87:
   261                           	opt stack 0
   262  0000                     _CCPTMRS0bits	set	3913
   263  0000                     _ANSELDbits	set	3899
   264  0000                     _ANSELBbits	set	3897
   265  0000                     _ANSELAbits	set	3896
   266  0000                     _VREFCON0bits	set	3906
   267  0000                     _ADRES	set	4035
   268  0000                     _PORTBbits	set	3969
   269  0000                     _TMR2	set	4028
   270  0000                     _IPR1bits	set	3999
   271  0000                     _PIE1bits	set	3997
   272  0000                     _TMR1L	set	4046
   273  0000                     _TMR1H	set	4047
   274  0000                     _T1CONbits	set	4045
   275  0000                     _RCONbits	set	4048
   276  0000                     _T2CONbits	set	4026
   277  0000                     _CCPR2L	set	3943
   278  0000                     _PSTR2CONbits	set	3939
   279  0000                     _CCP2CONbits	set	3942
   280  0000                     _PR2	set	4027
   281  0000                     _PORTAbits	set	3968
   282  0000                     _INTCONbits	set	4082
   283  0000                     _PIR1bits	set	3998
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _LATDbits	set	3980
   286  0000                     _TRISDbits	set	3989
   287  0000                     _LATBbits	set	3978
   288  0000                     _TRISBbits	set	3987
   289  0000                     _WPUB	set	3937
   290  0000                     _LATAbits	set	3977
   291  0000                     _TRISAbits	set	3986
   292  0000                     _ADCON2	set	4032
   293  0000                     _ADCON1	set	4033
   294  0000                     _PORTDbits	set	3971
   295  0000                     _RBPU	set	32655
   296  007F5B                     STR_2:
   297  007F5B  20                 	db	32
   298  007F5C  25                 	db	37
   299  007F5D  2E                 	db	46
   300  007F5E  31                 	db	49	;'1'
   301  007F5F  66                 	db	102	;'f'
   302  007F60  20                 	db	32
   303  007F61  25                 	db	37
   304  007F62  2E                 	db	46
   305  007F63  31                 	db	49	;'1'
   306  007F64  66                 	db	102	;'f'
   307  007F65  20                 	db	32
   308  007F66  25                 	db	37
   309  007F67  33                 	db	51	;'3'
   310  007F68  2E                 	db	46
   311  007F69  30                 	db	48	;'0'
   312  007F6A  64                 	db	100	;'d'
   313  007F6B  20                 	db	32
   314  007F6C  25                 	db	37
   315  007F6D  33                 	db	51	;'3'
   316  007F6E  2E                 	db	46
   317  007F6F  30                 	db	48	;'0'
   318  007F70  64                 	db	100	;'d'
   319  007F71  00                 	db	0
   320  007F72  45                 	db	69	;'E'
   321  007F73  41                 	db	65	;'A'
   322  007F74  53                 	db	83	;'S'
   323  007F75  41                 	db	65	;'A'
   324  007F76  54                 	db	84	;'T'
   325  007F77  32                 	db	50	;'2'
   326  007F78  20                 	db	32
   327  007F79  41                 	db	65	;'A'
   328  007F7A  43                 	db	67	;'C'
   329  007F7B  4B                 	db	75	;'K'
   330  007F7C  00                 	db	0
   331  007F7D                     STR_41:
   332  007F7D  2D                 	db	45
   333  007F7E  2D                 	db	45
   334  007F7F  2E                 	db	46
   335  007F80  2E                 	db	46
   336  007F81  2D                 	db	45
   337  007F82  2D                 	db	45
   338  007F83  00                 	db	0
   339  007F84                     STR_44:
   340  007F84  2E                 	db	46
   341  007F85  2D                 	db	45
   342  007F86  2E                 	db	46
   343  007F87  2D                 	db	45
   344  007F88  2E                 	db	46
   345  007F89  2D                 	db	45
   346  007F8A  00                 	db	0
   347  007F8B                     STR_45:
   348  007F8B  2D                 	db	45
   349  007F8C  2E                 	db	46
   350  007F8D  2E                 	db	46
   351  007F8E  2E                 	db	46
   352  007F8F  2E                 	db	46
   353  007F90  2D                 	db	45
   354  007F91  00                 	db	0
   355  007F92                     STR_42:
   356  007F92  2E                 	db	46
   357  007F93  2E                 	db	46
   358  007F94  2D                 	db	45
   359  007F95  2D                 	db	45
   360  007F96  2E                 	db	46
   361  007F97  2E                 	db	46
   362  007F98  00                 	db	0
   363  007F99                     STR_1:
   364  007F99  45                 	db	69	;'E'
   365  007F9A  41                 	db	65	;'A'
   366  007F9B  53                 	db	83	;'S'
   367  007F9C  41                 	db	65	;'A'
   368  007F9D  54                 	db	84	;'T'
   369  007F9E  32                 	db	50	;'2'
   370  007F9F  00                 	db	0
   371  007FA0                     STR_31:
   372  007FA0  2D                 	db	45
   373  007FA1  2D                 	db	45
   374  007FA2  2D                 	db	45
   375  007FA3  2D                 	db	45
   376  007FA4  2D                 	db	45
   377  007FA5  00                 	db	0
   378  007FA6                     STR_32:
   379  007FA6  2E                 	db	46
   380  007FA7  2D                 	db	45
   381  007FA8  2D                 	db	45
   382  007FA9  2D                 	db	45
   383  007FAA  2D                 	db	45
   384  007FAB  00                 	db	0
   385  007FAC                     STR_33:
   386  007FAC  2E                 	db	46
   387  007FAD  2E                 	db	46
   388  007FAE  2D                 	db	45
   389  007FAF  2D                 	db	45
   390  007FB0  2D                 	db	45
   391  007FB1  00                 	db	0
   392  007FB2                     STR_34:
   393  007FB2  2E                 	db	46
   394  007FB3  2E                 	db	46
   395  007FB4  2E                 	db	46
   396  007FB5  2D                 	db	45
   397  007FB6  2D                 	db	45
   398  007FB7  00                 	db	0
   399  007FB8                     STR_40:
   400  007FB8  2D                 	db	45
   401  007FB9  2D                 	db	45
   402  007FBA  2D                 	db	45
   403  007FBB  2D                 	db	45
   404  007FBC  2E                 	db	46
   405  007FBD  00                 	db	0
   406  007FBE                     STR_43:
   407  007FBE  2D                 	db	45
   408  007FBF  2E                 	db	46
   409  007FC0  2E                 	db	46
   410  007FC1  2D                 	db	45
   411  007FC2  2E                 	db	46
   412  007FC3  00                 	db	0
   413  007FC4                     STR_39:
   414  007FC4  2D                 	db	45
   415  007FC5  2D                 	db	45
   416  007FC6  2D                 	db	45
   417  007FC7  2E                 	db	46
   418  007FC8  2E                 	db	46
   419  007FC9  00                 	db	0
   420  007FCA                     STR_38:
   421  007FCA  2D                 	db	45
   422  007FCB  2D                 	db	45
   423  007FCC  2E                 	db	46
   424  007FCD  2E                 	db	46
   425  007FCE  2E                 	db	46
   426  007FCF  00                 	db	0
   427  007FD0                     STR_37:
   428  007FD0  2D                 	db	45
   429  007FD1  2E                 	db	46
   430  007FD2  2E                 	db	46
   431  007FD3  2E                 	db	46
   432  007FD4  2E                 	db	46
   433  007FD5  00                 	db	0
   434  007FD6                     STR_36:
   435  007FD6  2E                 	db	46
   436  007FD7  2E                 	db	46
   437  007FD8  2E                 	db	46
   438  007FD9  2E                 	db	46
   439  007FDA  2E                 	db	46
   440  007FDB  00                 	db	0
   441  007FDC                     STR_29:
   442  007FDC  2D                 	db	45
   443  007FDD  2E                 	db	46
   444  007FDE  2D                 	db	45
   445  007FDF  2D                 	db	45
   446  007FE0  00                 	db	0
   447  007FE1                     STR_21:
   448  007FE1  2D                 	db	45
   449  007FE2  2D                 	db	45
   450  007FE3  2E                 	db	46
   451  007FE4  2D                 	db	45
   452  007FE5  00                 	db	0
   453  007FE6                     STR_28:
   454  007FE6  2D                 	db	45
   455  007FE7  2E                 	db	46
   456  007FE8  2E                 	db	46
   457  007FE9  2D                 	db	45
   458  007FEA  00                 	db	0
   459  007FEB                     STR_20:
   460  007FEB  2E                 	db	46
   461  007FEC  2D                 	db	45
   462  007FED  2D                 	db	45
   463  007FEE  2E                 	db	46
   464  007FEF  00                 	db	0
   465  007FF0                     STR_7:
   466  007FF0  2D                 	db	45
   467  007FF1  2E                 	db	46
   468  007FF2  2D                 	db	45
   469  007FF3  2E                 	db	46
   470  007FF4  00                 	db	0
   471  007FF5                     STR_16:
   472  007FF5  2E                 	db	46
   473  007FF6  2D                 	db	45
   474  007FF7  2E                 	db	46
   475  007FF8  2E                 	db	46
   476  007FF9  00                 	db	0
   477  007FFA  30                 	db	48	;'0'
   478  007FFB  00                 	db	0
   479  007FFC  31                 	db	49	;'1'
   480  007FFD  00                 	db	0
   481  0000                     
   482                           ; #config settings
   483  007FFE  00                 	db	0	; dummy byte at the end
   484  0000                     
   485                           	psect	cinit
   486  003B86                     __pcinit:
   487                           	opt stack 0
   488  003B86                     start_initialization:
   489                           	opt stack 0
   490  003B86                     __initialization:
   491                           	opt stack 0
   492                           
   493                           ; Initialize objects allocated to COMRAM (5 bytes)
   494                           ; load TBLPTR registers with __pidataCOMRAM
   495  003B86  0E44               	movlw	low __pidataCOMRAM
   496  003B88  6EF6               	movwf	tblptrl,c
   497  003B8A  0E40               	movlw	high __pidataCOMRAM
   498  003B8C  6EF7               	movwf	tblptrh,c
   499  003B8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   500  003B90  6EF8               	movwf	tblptru,c
   501  003B92  EE00  F041         	lfsr	0,__pdataCOMRAM
   502  003B96  EE10 F005          	lfsr	1,5
   503  003B9A                     copy_data0:
   504  003B9A  0009               	tblrd		*+
   505  003B9C  CFF5 FFEE          	movff	tablat,postinc0
   506  003BA0  50E5               	movf	postdec1,w,c
   507  003BA2  50E1               	movf	fsr1l,w,c
   508  003BA4  E1FA               	bnz	copy_data0
   509                           
   510                           ; Clear objects allocated to BANK2 (256 bytes)
   511  003BA6  EE02  F000         	lfsr	0,__pbssBANK2
   512  003BAA  EE11 F000          	lfsr	1,256
   513  003BAE                     clear_0:
   514  003BAE  6AEE               	clrf	postinc0,c
   515  003BB0  50E5               	movf	postdec1,w,c
   516  003BB2  50E1               	movf	fsr1l,w,c
   517  003BB4  E1FC               	bnz	clear_0
   518  003BB6  50E2               	movf	fsr1h,w,c
   519  003BB8  E1FA               	bnz	clear_0
   520                           
   521                           ; Clear objects allocated to COMRAM (31 bytes)
   522  003BBA  EE00  F022         	lfsr	0,__pbssCOMRAM
   523  003BBE  0E1F               	movlw	31
   524  003BC0                     clear_1:
   525  003BC0  6AEE               	clrf	postinc0,c
   526  003BC2  06E8               	decf	wreg,f,c
   527  003BC4  E1FD               	bnz	clear_1
   528  003BC6                     end_of_initialization:
   529                           	opt stack 0
   530  003BC6                     __end_of__initialization:
   531                           	opt stack 0
   532  003BC6  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   533  003BC8  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   534  003BCA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   535  003BCC  6EF8               	movwf	tblptru,c
   536  003BCE  0100               	movlb	0
   537  003BD0  EF14  F020         	goto	_main	;jump to C main() function
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	bssCOMRAM
   549  000022                     __pbssCOMRAM:
   550                           	opt stack 0
   551  000022                     _global_command_buffer:
   552                           	opt stack 0
   553  000022                     	ds	4
   554  000026                     high_priority_int@num_bits_received:
   555                           	opt stack 0
   556  000026                     	ds	2
   557  000028                     high_priority_int@bit_to_process:
   558                           	opt stack 0
   559  000028                     	ds	2
   560  00002A                     high_priority_int@decoder_status:
   561                           	opt stack 0
   562  00002A                     	ds	2
   563  00002C                     	ds	2
   564  00002E                     high_priority_int@current_signal_level:
   565                           	opt stack 0
   566  00002E                     	ds	2
   567  000030                     high_priority_int@previous_signal_level:
   568                           	opt stack 0
   569  000030                     	ds	2
   570  000032                     high_priority_int@valid_samples:
   571                           	opt stack 0
   572  000032                     	ds	2
   573  000034                     high_priority_int@total_add:
   574                           	opt stack 0
   575  000034                     	ds	2
   576  000036                     high_priority_int@cycles_transmitter_active:
   577                           	opt stack 0
   578  000036                     	ds	2
   579  000038                     high_priority_int@times_threshold_exceeded:
   580                           	opt stack 0
   581  000038                     	ds	2
   582  00003A                     high_priority_int@sample_position:
   583                           	opt stack 0
   584  00003A                     	ds	2
   585  00003C                     high_priority_int@tmr1_interrupt_number:
   586                           	opt stack 0
   587  00003C                     	ds	2
   588  00003E                     _global_command_pending_check:
   589                           	opt stack 0
   590  00003E                     	ds	2
   591  000040                     high_priority_int@is_transmitter_active:
   592                           	opt stack 0
   593  000040                     	ds	1
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1h	equ	0xFE2
   602                           fsr1l	equ	0xFE1
   603                           
   604                           	psect	dataCOMRAM
   605  000041                     __pdataCOMRAM:
   606                           	opt stack 0
   607  000041                     high_priority_int@noise_avg_value:
   608                           	opt stack 0
   609  000041                     	ds	3
   610  000044                     high_priority_int@activation_threshold:
   611                           	opt stack 0
   612  000044                     	ds	2
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1h	equ	0xFE2
   621                           fsr1l	equ	0xFE1
   622                           
   623                           	psect	bssBANK2
   624  000200                     __pbssBANK2:
   625                           	opt stack 0
   626  000200                     high_priority_int@samples:
   627                           	opt stack 0
   628  000200                     	ds	256
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1h	equ	0xFE2
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	cstackBANK1
   640  000100                     __pcstackBANK1:
   641                           	opt stack 0
   642  000100                     util_beacon_transmission@BEACON_MESSAGE:
   643                           	opt stack 0
   644  000100                     util_getTemperature@bit_mem:
   645                           	opt stack 0
   646                           
   647                           ; 144 bytes @ 0x0
   648  000100                     	ds	128
   649  000180                     util_beacon_transmission@BEACON_BUFFER:
   650                           	opt stack 0
   651                           
   652                           ; 64 bytes @ 0x80
   653  000180                     	ds	16
   654  000190                     util_getTemperature@byte_mem:
   655                           	opt stack 0
   656                           
   657                           ; 18 bytes @ 0x90
   658  000190                     	ds	18
   659  0001A2                     util_getTemperature@num_bit:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xA2
   663  0001A2                     	ds	2
   664  0001A4                     util_getTemperature@sign:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0xA4
   668  0001A4                     	ds	3
   669  0001A7                     _util_getTemperature$2956:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0xA7
   673  0001A7                     	ds	3
   674  0001AA                     _util_getTemperature$2957:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0xAA
   678  0001AA                     	ds	3
   679  0001AD                     _util_getTemperature$2958:
   680                           	opt stack 0
   681                           
   682                           ; 3 bytes @ 0xAD
   683  0001AD                     	ds	3
   684  0001B0                     _util_getTemperature$2959:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0xB0
   688  0001B0                     	ds	3
   689  0001B3                     util_getTemperature@shift_reg_bit0:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0xB3
   693  0001B3                     	ds	2
   694  0001B5                     util_getTemperature@shift_reg_bit1:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xB5
   698  0001B5                     	ds	2
   699  0001B7                     util_getTemperature@shift_reg_bit2:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0xB7
   703  0001B7                     	ds	2
   704  0001B9                     util_getTemperature@shift_reg_bit3:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0xB9
   708  0001B9                     	ds	2
   709  0001BB                     util_getTemperature@shift_reg_bit4:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0xBB
   713  0001BB                     	ds	2
   714  0001BD                     util_getTemperature@shift_reg_bit5:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0xBD
   718  0001BD                     	ds	2
   719  0001BF                     util_getTemperature@shift_reg_bit6:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0xBF
   723  0001BF                     	ds	1
   724  0001C0                     util_beacon_transmission@i:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0xC0
   728  0001C0                     	ds	1
   729  0001C1                     util_getTemperature@shift_reg_bit7:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0xC1
   733  0001C1                     	ds	2
   734  0001C3                     util_getTemperature@shift_reg_bit_temp:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0xC3
   738  0001C3                     	ds	2
   739  0001C5                     util_getTemperature@num_byte:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0xC5
   743  0001C5                     	ds	2
   744  0001C7                     util_getTemperature@bit_in_byte:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0xC7
   748  0001C7                     	ds	2
   749  0001C9                     util_getTemperature@temperature:
   750                           	opt stack 0
   751                           
   752                           ; 3 bytes @ 0xC9
   753  0001C9                     	ds	3
   754  0001CC                     util_getTemperature@i:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0xCC
   758  0001CC                     	ds	2
   759  0001CE                     main_loop@temperature:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0xCE
   763  0001CE                     	ds	3
   764  0001D1                     main_loop@solar_current:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0xD1
   768  0001D1                     	ds	2
   769  0001D3                     main_loop@battery_current:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0xD3
   773  0001D3                     	ds	2
   774  0001D5                     main_loop@battery_voltage:
   775                           	opt stack 0
   776                           
   777                           ; 3 bytes @ 0xD5
   778  0001D5                     	ds	3
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1h	equ	0xFE2
   787                           fsr1l	equ	0xFE1
   788                           
   789                           	psect	cstackBANK0
   790  000060                     __pcstackBANK0:
   791                           	opt stack 0
   792  000060                     ??_low_priority_int:
   793                           
   794                           ; 1 bytes @ 0x0
   795  000060                     	ds	17
   796  000071                     ??_util_onewire_read_byte:
   797  000071                     ??_util_transmit_morse_sequence:
   798  000071                     ??__tdiv_to_l_:
   799  000071                     ??___ftge:
   800  000071                     ?___awdiv:
   801                           	opt stack 0
   802  000071                     ?___awtoft:
   803                           	opt stack 0
   804  000071                     ?___lltoft:
   805                           	opt stack 0
   806  000071                     ?___lwtoft:
   807                           	opt stack 0
   808  000071                     util_onewire_write_byte@bit0:
   809                           	opt stack 0
   810  000071                     util_waits_delay_secs@i:
   811                           	opt stack 0
   812  000071                     ___awdiv@dividend:
   813                           	opt stack 0
   814  000071                     ___awtoft@c:
   815                           	opt stack 0
   816  000071                     ___lwtoft@c:
   817                           	opt stack 0
   818  000071                     __div_to_l_@quot:
   819                           	opt stack 0
   820  000071                     ___lldiv@quotient:
   821                           	opt stack 0
   822  000071                     ___lltoft@c:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x11
   826  000071                     	ds	2
   827  000073                     util_onewire_write_byte@bit1:
   828                           	opt stack 0
   829  000073                     util_transmit_morse_sequence@i:
   830                           	opt stack 0
   831  000073                     util_waits_delay_secs@j:
   832                           	opt stack 0
   833  000073                     ___awdiv@divisor:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x13
   837  000073                     	ds	1
   838  000074                     ___awtoft@sign:
   839                           	opt stack 0
   840  000074                     __tdiv_to_l_@quot:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x14
   844  000074                     	ds	1
   845  000075                     ??___lltoft:
   846  000075                     ?___ftdiv:
   847                           	opt stack 0
   848  000075                     util_transmit_letter@letter:
   849                           	opt stack 0
   850  000075                     ___awdiv@counter:
   851                           	opt stack 0
   852  000075                     __div_to_l_@cntr:
   853                           	opt stack 0
   854  000075                     ___lldiv@counter:
   855                           	opt stack 0
   856  000075                     util_onewire_write_byte@bit2:
   857                           	opt stack 0
   858  000075                     util_waits_delay_mins@minutes:
   859                           	opt stack 0
   860  000075                     ___ftdiv@f1:
   861                           	opt stack 0
   862                           
   863                           ; 3 bytes @ 0x15
   864  000075                     	ds	1
   865  000076                     ?___llmod:
   866                           	opt stack 0
   867  000076                     ___awdiv@sign:
   868                           	opt stack 0
   869  000076                     __div_to_l_@exp1:
   870                           	opt stack 0
   871  000076                     ___llmod@dividend:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x16
   875  000076                     	ds	1
   876  000077                     ??_util_waits_delay_mins:
   877  000077                     util_onewire_write_byte@bit3:
   878                           	opt stack 0
   879  000077                     ___awdiv@quotient:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x17
   883  000077                     	ds	1
   884  000078                     __tdiv_to_l_@cntr:
   885                           	opt stack 0
   886  000078                     util_waits_delay_mins@i:
   887                           	opt stack 0
   888  000078                     ___ftdiv@f2:
   889                           	opt stack 0
   890                           
   891                           ; 3 bytes @ 0x18
   892  000078                     	ds	1
   893  000079                     ?___wmul:
   894                           	opt stack 0
   895  000079                     __tdiv_to_l_@exp1:
   896                           	opt stack 0
   897  000079                     ___lltoft@exp:
   898                           	opt stack 0
   899  000079                     util_onewire_write_byte@bit4:
   900                           	opt stack 0
   901  000079                     ___wmul@multiplier:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x19
   905  000079                     	ds	1
   906  00007A                     util_waits_delay_hours@hours:
   907                           	opt stack 0
   908  00007A                     ___llmod@divisor:
   909                           	opt stack 0
   910                           
   911                           ; 4 bytes @ 0x1A
   912  00007A                     	ds	1
   913  00007B                     ??___ftdiv:
   914  00007B                     util_onewire_write_byte@bit5:
   915                           	opt stack 0
   916  00007B                     ___wmul@multiplicand:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x1B
   920  00007B                     	ds	1
   921  00007C                     ??_util_waits_delay_hours:
   922                           
   923                           ; 1 bytes @ 0x1C
   924  00007C                     	ds	1
   925  00007D                     ?___ftmul:
   926                           	opt stack 0
   927  00007D                     util_onewire_write_byte@bit6:
   928                           	opt stack 0
   929  00007D                     util_waits_delay_hours@i:
   930                           	opt stack 0
   931  00007D                     ___ftmul@f1:
   932                           	opt stack 0
   933                           
   934                           ; 3 bytes @ 0x1D
   935  00007D                     	ds	1
   936  00007E                     ___ftdiv@cntr:
   937                           	opt stack 0
   938  00007E                     ___llmod@counter:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x1E
   942  00007E                     	ds	1
   943  00007F                     util_onewire_write_byte@bit7:
   944                           	opt stack 0
   945  00007F                     util_onewire_read_byte@bit0:
   946                           	opt stack 0
   947  00007F                     ___ftdiv@f3:
   948                           	opt stack 0
   949                           
   950                           ; 3 bytes @ 0x1F
   951  00007F                     	ds	1
   952  000080                     ___ftmul@f2:
   953                           	opt stack 0
   954                           
   955                           ; 3 bytes @ 0x20
   956  000080                     	ds	1
   957  000081                     util_onewire_read_byte@bit1:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x21
   961  000081                     	ds	1
   962  000082                     ___ftdiv@exp:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x22
   966  000082                     	ds	1
   967  000083                     ??___ftmul:
   968  000083                     ___ftdiv@sign:
   969                           	opt stack 0
   970  000083                     util_onewire_read_byte@bit2:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x23
   974  000083                     	ds	2
   975  000085                     util_onewire_read_byte@bit3:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x25
   979  000085                     	ds	1
   980  000086                     ___ftmul@exp:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x26
   984  000086                     	ds	1
   985  000087                     util_onewire_read_byte@bit4:
   986                           	opt stack 0
   987  000087                     ___ftmul@f3_as_product:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x27
   991  000087                     	ds	2
   992  000089                     util_onewire_read_byte@bit5:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x29
   996  000089                     	ds	1
   997  00008A                     ___ftmul@cntr:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x2A
  1001  00008A                     	ds	1
  1002  00008B                     ___ftmul@sign:
  1003                           	opt stack 0
  1004  00008B                     util_onewire_read_byte@bit6:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x2B
  1008  00008B                     	ds	1
  1009  00008C                     ?_util_getBatteryVoltage:
  1010                           	opt stack 0
  1011  00008C                     ?_fround:
  1012                           	opt stack 0
  1013  00008C                     ?_scale:
  1014                           	opt stack 0
  1015                           
  1016                           ; 3 bytes @ 0x2C
  1017  00008C                     	ds	1
  1018  00008D                     util_onewire_read_byte@bit7:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x2D
  1022  00008D                     	ds	2
  1023  00008F                     util_onewire_read_byte@value:
  1024                           	opt stack 0
  1025  00008F                     util_getBatteryVoltage@value:
  1026                           	opt stack 0
  1027  00008F                     _fround$2961:
  1028                           	opt stack 0
  1029  00008F                     _scale$2962:
  1030                           	opt stack 0
  1031                           
  1032                           ; 3 bytes @ 0x2F
  1033  00008F                     	ds	3
  1034  000092                     scale@scl:
  1035                           	opt stack 0
  1036  000092                     util_getBatteryVoltage@voltage:
  1037                           	opt stack 0
  1038  000092                     _fround$2960:
  1039                           	opt stack 0
  1040                           
  1041                           ; 3 bytes @ 0x32
  1042  000092                     	ds	1
  1043  000093                     ?___fttol:
  1044                           	opt stack 0
  1045  000093                     ___fttol@f1:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x33
  1049  000093                     	ds	2
  1050  000095                     fround@prec:
  1051                           	opt stack 0
  1052                           
  1053                           ; 1 bytes @ 0x35
  1054  000095                     	ds	1
  1055  000096                     ?___ftadd:
  1056                           	opt stack 0
  1057  000096                     ___ftadd@f1:
  1058                           	opt stack 0
  1059                           
  1060                           ; 3 bytes @ 0x36
  1061  000096                     	ds	1
  1062  000097                     ??___fttol:
  1063                           
  1064                           ; 1 bytes @ 0x37
  1065  000097                     	ds	2
  1066  000099                     ___ftadd@f2:
  1067                           	opt stack 0
  1068                           
  1069                           ; 3 bytes @ 0x39
  1070  000099                     	ds	3
  1071  00009C                     ??___ftadd:
  1072  00009C                     ___fttol@sign1:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x3C
  1076  00009C                     	ds	1
  1077  00009D                     ___fttol@lval:
  1078                           	opt stack 0
  1079                           
  1080                           ; 4 bytes @ 0x3D
  1081  00009D                     	ds	2
  1082  00009F                     ___ftadd@sign:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0x3F
  1086  00009F                     	ds	1
  1087  0000A0                     ___ftadd@exp2:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x40
  1091  0000A0                     	ds	1
  1092  0000A1                     ___ftadd@exp1:
  1093                           	opt stack 0
  1094  0000A1                     ___fttol@exp1:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x41
  1098  0000A1                     	ds	1
  1099  0000A2                     ?_util_getSolarCurrent:
  1100                           	opt stack 0
  1101  0000A2                     ?_util_getBatteryCurrent:
  1102                           	opt stack 0
  1103  0000A2                     ?_util_getTemperature:
  1104                           	opt stack 0
  1105  0000A2                     ?___ftsub:
  1106                           	opt stack 0
  1107  0000A2                     ___ftsub@f1:
  1108                           	opt stack 0
  1109                           
  1110                           ; 3 bytes @ 0x42
  1111  0000A2                     	ds	2
  1112  0000A4                     util_getSolarCurrent@value:
  1113                           	opt stack 0
  1114  0000A4                     util_getBatteryCurrent@value:
  1115                           	opt stack 0
  1116                           
  1117                           ; 3 bytes @ 0x44
  1118  0000A4                     	ds	1
  1119  0000A5                     ??_util_getTemperature:
  1120  0000A5                     ___ftsub@f2:
  1121                           	opt stack 0
  1122                           
  1123                           ; 3 bytes @ 0x45
  1124  0000A5                     	ds	2
  1125  0000A7                     util_getSolarCurrent@solarCurrent:
  1126                           	opt stack 0
  1127  0000A7                     util_getBatteryCurrent@batteryCurrent:
  1128                           	opt stack 0
  1129                           
  1130                           ; 3 bytes @ 0x47
  1131  0000A7                     	ds	1
  1132  0000A8                     ?__doprnt:
  1133                           	opt stack 0
  1134  0000A8                     __doprnt@pb:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x48
  1138  0000A8                     	ds	2
  1139  0000AA                     __doprnt@f:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x4A
  1143  0000AA                     	ds	2
  1144  0000AC                     __doprnt@ap:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x4C
  1148  0000AC                     	ds	2
  1149  0000AE                     ??__doprnt:
  1150                           
  1151                           ; 1 bytes @ 0x4E
  1152  0000AE                     	ds	6
  1153  0000B4                     __doprnt$2963:
  1154                           	opt stack 0
  1155                           
  1156                           ; 3 bytes @ 0x54
  1157  0000B4                     	ds	3
  1158  0000B7                     __doprnt@flag:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x57
  1162  0000B7                     	ds	2
  1163  0000B9                     __doprnt@width:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x59
  1167  0000B9                     	ds	2
  1168  0000BB                     __doprnt@val:
  1169                           	opt stack 0
  1170                           
  1171                           ; 4 bytes @ 0x5B
  1172  0000BB                     	ds	4
  1173  0000BF                     __doprnt@exp:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x5F
  1177  0000BF                     	ds	2
  1178  0000C1                     __doprnt@tmpval:
  1179                           	opt stack 0
  1180                           
  1181                           ; 4 bytes @ 0x61
  1182  0000C1                     	ds	4
  1183  0000C5                     __doprnt@fval:
  1184                           	opt stack 0
  1185                           
  1186                           ; 3 bytes @ 0x65
  1187  0000C5                     	ds	3
  1188  0000C8                     __doprnt@prec:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x68
  1192  0000C8                     	ds	2
  1193  0000CA                     __doprnt@c:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0x6A
  1197  0000CA                     	ds	1
  1198  0000CB                     ?_sprintf:
  1199                           	opt stack 0
  1200  0000CB                     sprintf@wh:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x6B
  1204  0000CB                     	ds	2
  1205  0000CD                     sprintf@f:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x6D
  1209  0000CD                     	ds	12
  1210  0000D9                     sprintf@ap:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x79
  1214  0000D9                     	ds	2
  1215  0000DB                     sprintf@pb:
  1216                           	opt stack 0
  1217                           
  1218                           ; 4 bytes @ 0x7B
  1219  0000DB                     	ds	4
  1220  0000DF                     util_beacon_transmission@battery_voltage:
  1221                           	opt stack 0
  1222                           
  1223                           ; 3 bytes @ 0x7F
  1224  0000DF                     	ds	3
  1225  0000E2                     util_beacon_transmission@solar_current:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x82
  1229  0000E2                     	ds	2
  1230  0000E4                     util_beacon_transmission@battery_current:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x84
  1234  0000E4                     	ds	2
  1235  0000E6                     util_beacon_transmission@temperature:
  1236                           	opt stack 0
  1237                           
  1238                           ; 3 bytes @ 0x86
  1239  0000E6                     	ds	3
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1h	equ	0xFE2
  1248                           fsr1l	equ	0xFE1
  1249                           
  1250                           	psect	cstackCOMRAM
  1251  000001                     __pcstackCOMRAM:
  1252                           	opt stack 0
  1253  000001                     ??_high_priority_int:
  1254  000001                     
  1255                           ; 1 bytes @ 0x0
  1256  000001                     	ds	19
  1257  000014                     high_priority_int@oldest_sample:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x13
  1261  000014                     	ds	2
  1262  000016                     high_priority_int@received_bit:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x15
  1266  000016                     	ds	2
  1267  000018                     high_priority_int@sample:
  1268                           	opt stack 0
  1269                           
  1270                           ; 2 bytes @ 0x17
  1271  000018                     	ds	2
  1272  00001A                     ??_init_watchdogs_initialize:
  1273  00001A                     ??_isdigit:
  1274  00001A                     ?_util_onewire_reset:
  1275                           	opt stack 0
  1276  00001A                     ?_util_onewire_read_bit:
  1277                           	opt stack 0
  1278  00001A                     ?_strlen:
  1279                           	opt stack 0
  1280  00001A                     ?___awmod:
  1281                           	opt stack 0
  1282  00001A                     ?___ftpack:
  1283                           	opt stack 0
  1284  00001A                     ?___ftneg:
  1285                           	opt stack 0
  1286  00001A                     ?__tdiv_to_l_:
  1287                           	opt stack 0
  1288  00001A                     ?__div_to_l_:
  1289                           	opt stack 0
  1290  00001A                     ?___lldiv:
  1291                           	opt stack 0
  1292  00001A                     func_command_management@decoded_command:
  1293                           	opt stack 0
  1294  00001A                     util_onewire_write_bit@bit_in:
  1295                           	opt stack 0
  1296  00001A                     util_waits_delay_ms@ms:
  1297                           	opt stack 0
  1298  00001A                     ___awmod@dividend:
  1299                           	opt stack 0
  1300  00001A                     memset@p1:
  1301                           	opt stack 0
  1302  00001A                     strcat@to:
  1303                           	opt stack 0
  1304  00001A                     strcpy@to:
  1305                           	opt stack 0
  1306  00001A                     strlen@s:
  1307                           	opt stack 0
  1308  00001A                     __div_to_l_@f1:
  1309                           	opt stack 0
  1310  00001A                     ___ftpack@arg:
  1311                           	opt stack 0
  1312  00001A                     __tdiv_to_l_@f1:
  1313                           	opt stack 0
  1314  00001A                     ___ftge@ff1:
  1315                           	opt stack 0
  1316  00001A                     ___ftneg@f1:
  1317                           	opt stack 0
  1318  00001A                     ___lldiv@dividend:
  1319                           	opt stack 0
  1320                           
  1321                           ; 4 bytes @ 0x19
  1322  00001A                     	ds	1
  1323  00001B                     _isdigit$2522:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0x1A
  1327  00001B                     	ds	1
  1328  00001C                     ??_util_onewire_reset:
  1329  00001C                     ??_util_onewire_read_bit:
  1330  00001C                     ??_strlen:
  1331  00001C                     ??_util_waits_delay_ms:
  1332  00001C                     isdigit@c:
  1333                           	opt stack 0
  1334  00001C                     func_command_management@decoded_command_value:
  1335                           	opt stack 0
  1336  00001C                     util_onewire_write_byte@value:
  1337                           	opt stack 0
  1338  00001C                     ___awmod@divisor:
  1339                           	opt stack 0
  1340  00001C                     memset@c:
  1341                           	opt stack 0
  1342  00001C                     strcat@from:
  1343                           	opt stack 0
  1344  00001C                     strcpy@from:
  1345                           	opt stack 0
  1346                           
  1347                           ; 2 bytes @ 0x1B
  1348  00001C                     	ds	1
  1349  00001D                     ___ftpack@exp:
  1350                           	opt stack 0
  1351  00001D                     util_onewire_reset@presence:
  1352                           	opt stack 0
  1353  00001D                     util_onewire_read_bit@value:
  1354                           	opt stack 0
  1355  00001D                     util_waits_delay_ms@i:
  1356                           	opt stack 0
  1357  00001D                     __div_to_l_@f2:
  1358                           	opt stack 0
  1359  00001D                     __tdiv_to_l_@f2:
  1360                           	opt stack 0
  1361  00001D                     ___ftge@ff2:
  1362                           	opt stack 0
  1363                           
  1364                           ; 3 bytes @ 0x1C
  1365  00001D                     	ds	1
  1366  00001E                     ??_util_onewire_write_byte:
  1367  00001E                     ___awmod@counter:
  1368                           	opt stack 0
  1369  00001E                     ___ftpack@sign:
  1370                           	opt stack 0
  1371  00001E                     memset@n:
  1372                           	opt stack 0
  1373  00001E                     strcat@cp:
  1374                           	opt stack 0
  1375  00001E                     strcpy@cp:
  1376                           	opt stack 0
  1377  00001E                     strlen@cp:
  1378                           	opt stack 0
  1379  00001E                     func_command_management@candidate_command:
  1380                           	opt stack 0
  1381  00001E                     ___lldiv@divisor:
  1382                           	opt stack 0
  1383                           
  1384                           ; 4 bytes @ 0x1D
  1385  00001E                     	ds	1
  1386  00001F                     ??___ftpack:
  1387  00001F                     ?_util_onewire_read_byte:
  1388                           	opt stack 0
  1389  00001F                     ___awmod@sign:
  1390                           	opt stack 0
  1391  00001F                     util_waits_delay_secs@secs:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x1E
  1395  00001F                     	ds	1
  1396  000020                     util_transmit_morse_sequence@morse_sequence:
  1397                           	opt stack 0
  1398  000020                     ___wmul@product:
  1399                           	opt stack 0
  1400  000020                     memset@p:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x1F
  1404  000020                     	ds	1
  1405  000021                     ??_util_waits_delay_secs:
  1406                           
  1407                           ; 1 bytes @ 0x20
  1408  000021                     	ds	1
  1409  000022                     tblptru	equ	0xFF8
  1410                           tblptrh	equ	0xFF7
  1411                           tblptrl	equ	0xFF6
  1412                           tablat	equ	0xFF5
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           postdec1	equ	0xFE5
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           
  1419                           ; 1 bytes @ 0x21
  1420 ;;
  1421 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1422 ;;
  1423 ;; *************** function _main *****************
  1424 ;; Defined at:
  1425 ;;		line 20 in file "easat2_main_mcu.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels required when called:    9
  1445 ;; This function calls:
  1446 ;;		_init_initialize
  1447 ;;		_main_loop
  1448 ;; This function is called by:
  1449 ;;		Startup code after reset
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text0
  1454  004028                     __ptext0:
  1455                           	opt stack 0
  1456  004028                     _main:
  1457                           	opt stack 22
  1458                           
  1459                           ;easat2_main_mcu.c: 23: init_initialize();
  1460                           
  1461                           ;incstack = 0
  1462  004028  ECF4  F01F         	call	_init_initialize	;wreg free
  1463                           
  1464                           ;easat2_main_mcu.c: 26: main_loop();
  1465  00402C  EC06  F01C         	call	_main_loop	;wreg free
  1466  004030  EF53  F000         	goto	start
  1467  004034                     __end_of_main:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1h	equ	0xFE2
  1477                           fsr1l	equ	0xFE1
  1478                           
  1479 ;; *************** function _main_loop *****************
  1480 ;; Defined at:
  1481 ;;		line 32 in file "easat2_main_mcu.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  battery_volt    3  213[BANK1 ] float 
  1486 ;;  temperature     3  206[BANK1 ] float 
  1487 ;;  battery_curr    2  211[BANK1 ] int 
  1488 ;;  solar_curren    2  209[BANK1 ] int 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1498 ;;      Params:         0       0       0       0       0       0       0
  1499 ;;      Locals:         0       0      10       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0
  1501 ;;      Totals:         0       0      10       0       0       0       0
  1502 ;;Total ram usage:       10 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    8
  1505 ;; This function calls:
  1506 ;;		_func_command_management
  1507 ;;		_init_watchdogs_initialize
  1508 ;;		_util_beacon_transmission
  1509 ;;		_util_getBatteryCurrent
  1510 ;;		_util_getBatteryVoltage
  1511 ;;		_util_getSolarCurrent
  1512 ;;		_util_getTemperature
  1513 ;;		_util_waits_delay_hours
  1514 ;;		_util_waits_delay_mins
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text1
  1521  00380C                     __ptext1:
  1522                           	opt stack 0
  1523  00380C                     _main_loop:
  1524                           	opt stack 22
  1525  00380C                     
  1526                           ;easat2_main_mcu.c: 42: init_watchdogs_initialize();
  1527  00380C  ECBE  F01F         	call	_init_watchdogs_initialize	;wreg free
  1528                           
  1529                           ;easat2_main_mcu.c: 45: func_command_management();
  1530  003810  ECB3  F01E         	call	_func_command_management	;wreg free
  1531                           
  1532                           ;easat2_main_mcu.c: 50: battery_voltage = util_getBatteryVoltage();
  1533  003814  ECF6  F019         	call	_util_getBatteryVoltage	;wreg free
  1534  003818  C08C  F1D5         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1535  00381C  C08D  F1D6         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1536  003820  C08E  F1D7         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1537                           
  1538                           ;easat2_main_mcu.c: 53: solar_current = util_getSolarCurrent();
  1539  003824  EC2C  F019         	call	_util_getSolarCurrent	;wreg free
  1540  003828  C0A2  F1D1         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1541  00382C  C0A3  F1D2         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1542                           
  1543                           ;easat2_main_mcu.c: 56: battery_current = util_getBatteryCurrent();
  1544  003830  EC91  F019         	call	_util_getBatteryCurrent	;wreg free
  1545  003834  C0A2  F1D3         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1546  003838  C0A3  F1D4         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1547                           
  1548                           ;easat2_main_mcu.c: 59: temperature = util_getTemperature();
  1549  00383C  ECF8  F007         	call	_util_getTemperature	;wreg free
  1550  003840  C0A2  F1CE         	movff	?_util_getTemperature,main_loop@temperature
  1551  003844  C0A3  F1CF         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1552  003848  C0A4  F1D0         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1553                           
  1554                           ;easat2_main_mcu.c: 63: if (battery_voltage >= 0) {
  1555  00384C  0101               	movlb	1	; () banked
  1556  00384E  BFD7               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1557  003850  D017               	goto	l6666
  1558                           
  1559                           ; BSR set to: 1
  1560                           ;easat2_main_mcu.c: 64: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1561  003852  C1D5  F0DF         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1562  003856  C1D6  F0E0         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1563  00385A  C1D7  F0E1         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1564  00385E  C1D1  F0E2         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1565  003862  C1D2  F0E3         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1566  003866  C1D3  F0E4         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1567  00386A  C1D4  F0E5         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1568  00386E  C1CE  F0E6         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1569  003872  C1CF  F0E7         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1570  003876  C1D0  F0E8         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1571  00387A  ECB7  F018         	call	_util_beacon_transmission	;wreg free
  1572                           
  1573                           ;easat2_main_mcu.c: 65: } else {
  1574  00387E  D007               	goto	l104
  1575  003880                     l6666:
  1576                           
  1577                           ;easat2_main_mcu.c: 67: util_waits_delay_hours(2);
  1578  003880  0E00               	movlw	0
  1579  003882  0100               	movlb	0	; () banked
  1580  003884  6F7B               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1581  003886  0E02               	movlw	2
  1582  003888  6F7A               	movwf	util_waits_delay_hours@hours& (0+255),b
  1583  00388A  EC10  F01E         	call	_util_waits_delay_hours	;wreg free
  1584  00388E                     l104:
  1585                           
  1586                           ;easat2_main_mcu.c: 68: }
  1587                           ;easat2_main_mcu.c: 71: util_waits_delay_mins(3);
  1588  00388E  0E00               	movlw	0
  1589  003890  0100               	movlb	0	; () banked
  1590  003892  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1591  003894  0E03               	movlw	3
  1592  003896  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1593  003898  EC73  F01E         	call	_util_waits_delay_mins	;wreg free
  1594                           
  1595                           ;easat2_main_mcu.c: 74: } while (1);
  1596  00389C  D7B7               	goto	l6658
  1597  00389E                     __end_of_main_loop:
  1598                           	opt stack 0
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           postdec1	equ	0xFE5
  1606                           fsr1h	equ	0xFE2
  1607                           fsr1l	equ	0xFE1
  1608                           
  1609 ;; *************** function _util_waits_delay_hours *****************
  1610 ;; Defined at:
  1611 ;;		line 17 in file "easat2_util_waits.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  hours           2   26[BANK0 ] int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  i               2   29[BANK0 ] int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       2       0       0       0       0       0
  1626 ;;      Locals:         0       2       0       0       0       0       0
  1627 ;;      Temps:          0       1       0       0       0       0       0
  1628 ;;      Totals:         0       5       0       0       0       0       0
  1629 ;;Total ram usage:        5 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    5
  1632 ;; This function calls:
  1633 ;;		_util_waits_delay_mins
  1634 ;; This function is called by:
  1635 ;;		_main_loop
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text2
  1640  003C20                     __ptext2:
  1641                           	opt stack 0
  1642  003C20                     _util_waits_delay_hours:
  1643                           	opt stack 24
  1644                           
  1645                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1646                           
  1647                           ;incstack = 0
  1648  003C20  0E00               	movlw	0
  1649  003C22  0100               	movlb	0	; () banked
  1650  003C24  6F7E               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1651  003C26  0E00               	movlw	0
  1652  003C28  6F7D               	movwf	util_waits_delay_hours@i& (0+255),b
  1653  003C2A  D00A               	goto	l6646
  1654  003C2C                     l6642:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1658  003C2C  0E00               	movlw	0
  1659  003C2E  0100               	movlb	0	; () banked
  1660  003C30  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1661  003C32  0E3C               	movlw	60
  1662  003C34  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1663  003C36  EC73  F01E         	call	_util_waits_delay_mins	;wreg free
  1664  003C3A  0100               	movlb	0	; () banked
  1665  003C3C  4B7D               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1666  003C3E  2B7E               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1667  003C40                     l6646:
  1668                           
  1669                           ; BSR set to: 0
  1670  003C40  0100               	movlb	0	; () banked
  1671  003C42  517A               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1672  003C44  0100               	movlb	0	; () banked
  1673  003C46  5D7D               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1674  003C48  0100               	movlb	0	; () banked
  1675  003C4A  517E               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1676  003C4C  0A80               	xorlw	128
  1677  003C4E  0100               	movlb	0	; () banked
  1678  003C50  6F7C               	movwf	??_util_waits_delay_hours& (0+255),b
  1679  003C52  0100               	movlb	0	; () banked
  1680  003C54  517B               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1681  003C56  0A80               	xorlw	128
  1682  003C58  0100               	movlb	0	; () banked
  1683  003C5A  597C               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1684  003C5C  B0D8               	btfsc	status,0,c
  1685  003C5E  0012               	return	
  1686  003C60  D7E5               	goto	l6642
  1687  003C62                     __end_of_util_waits_delay_hours:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           postdec1	equ	0xFE5
  1696                           fsr1h	equ	0xFE2
  1697                           fsr1l	equ	0xFE1
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _util_waits_delay_mins *****************
  1701 ;; Defined at:
  1702 ;;		line 24 in file "easat2_util_waits.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  minutes         2   21[BANK0 ] int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  i               2   24[BANK0 ] int 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       2       0       0       0       0       0
  1717 ;;      Locals:         0       2       0       0       0       0       0
  1718 ;;      Temps:          0       1       0       0       0       0       0
  1719 ;;      Totals:         0       5       0       0       0       0       0
  1720 ;;Total ram usage:        5 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_util_waits_delay_secs
  1725 ;; This function is called by:
  1726 ;;		_main_loop
  1727 ;;		_util_waits_delay_hours
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text3
  1732  003CE6                     __ptext3:
  1733                           	opt stack 0
  1734  003CE6                     _util_waits_delay_mins:
  1735                           	opt stack 25
  1736                           
  1737                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;incstack = 0
  1741  003CE6  0E00               	movlw	0
  1742  003CE8  0100               	movlb	0	; () banked
  1743  003CEA  6F79               	movwf	(util_waits_delay_mins@i+1)& (0+255),b
  1744  003CEC  0E00               	movlw	0
  1745  003CEE  6F78               	movwf	util_waits_delay_mins@i& (0+255),b
  1746  003CF0  D009               	goto	l6144
  1747  003CF2                     l6140:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1751  003CF2  0E00               	movlw	0
  1752  003CF4  6E20               	movwf	util_waits_delay_secs@secs+1,c
  1753  003CF6  0E3C               	movlw	60
  1754  003CF8  6E1F               	movwf	util_waits_delay_secs@secs,c
  1755  003CFA  EC41  F01D         	call	_util_waits_delay_secs	;wreg free
  1756  003CFE  0100               	movlb	0	; () banked
  1757  003D00  4B78               	infsnz	util_waits_delay_mins@i& (0+255),f,b
  1758  003D02  2B79               	incf	(util_waits_delay_mins@i+1)& (0+255),f,b
  1759  003D04                     l6144:
  1760                           
  1761                           ; BSR set to: 0
  1762  003D04  0100               	movlb	0	; () banked
  1763  003D06  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1764  003D08  0100               	movlb	0	; () banked
  1765  003D0A  5D78               	subwf	util_waits_delay_mins@i& (0+255),w,b
  1766  003D0C  0100               	movlb	0	; () banked
  1767  003D0E  5179               	movf	(util_waits_delay_mins@i+1)& (0+255),w,b
  1768  003D10  0A80               	xorlw	128
  1769  003D12  0100               	movlb	0	; () banked
  1770  003D14  6F77               	movwf	??_util_waits_delay_mins& (0+255),b
  1771  003D16  0100               	movlb	0	; () banked
  1772  003D18  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1773  003D1A  0A80               	xorlw	128
  1774  003D1C  0100               	movlb	0	; () banked
  1775  003D1E  5977               	subwfb	??_util_waits_delay_mins& (0+255),w,b
  1776  003D20  B0D8               	btfsc	status,0,c
  1777  003D22  0012               	return	
  1778  003D24  D7E6               	goto	l6140
  1779  003D26                     __end_of_util_waits_delay_mins:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           status	equ	0xFD8
  1791                           
  1792 ;; *************** function _util_getTemperature *****************
  1793 ;; Defined at:
  1794 ;;		line 118 in file "easat2_util_inputs.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  bit_mem       144    0[BANK1 ] int [72]
  1799 ;;  byte_mem       18  144[BANK1 ] int [9]
  1800 ;;  temperature     3  201[BANK1 ] float 
  1801 ;;  sign            3  164[BANK1 ] float 
  1802 ;;  i               2  204[BANK1 ] int 
  1803 ;;  bit_in_byte     2  199[BANK1 ] int 
  1804 ;;  num_byte        2  197[BANK1 ] int 
  1805 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1806 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1807 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1808 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1809 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1810 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1811 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1812 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1813 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1814 ;;  num_bit         2  162[BANK1 ] int 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  3   66[BANK0 ] float 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         0       3       0       0       0       0       0
  1825 ;;      Locals:         0       0     206       0       0       0       0
  1826 ;;      Temps:          0       3       0       0       0       0       0
  1827 ;;      Totals:         0       6     206       0       0       0       0
  1828 ;;Total ram usage:      212 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		___awtoft
  1833 ;;		___ftadd
  1834 ;;		___ftdiv
  1835 ;;		___ftmul
  1836 ;;		_util_onewire_read_byte
  1837 ;;		_util_onewire_reset
  1838 ;;		_util_onewire_write_byte
  1839 ;;		_util_waits_delay_secs
  1840 ;; This function is called by:
  1841 ;;		_main_loop
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text4
  1846  000FF0                     __ptext4:
  1847                           	opt stack 0
  1848  000FF0                     _util_getTemperature:
  1849                           	opt stack 25
  1850                           
  1851                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1852                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1853                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;incstack = 0
  1857  000FF0  0E00               	movlw	0
  1858  000FF2  0101               	movlb	1	; () banked
  1859  000FF4  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1860  000FF6  0E00               	movlw	0
  1861  000FF8  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1862                           
  1863                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1864  000FFA  0E00               	movlw	0
  1865  000FFC  0101               	movlb	1	; () banked
  1866  000FFE  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1867  001000  0E00               	movlw	0
  1868  001002  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1869                           
  1870                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1871  001004  0E00               	movlw	0
  1872  001006  0101               	movlb	1	; () banked
  1873  001008  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1874  00100A  0E00               	movlw	0
  1875  00100C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1876                           
  1877                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1878  00100E  0E00               	movlw	0
  1879  001010  0101               	movlb	1	; () banked
  1880  001012  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1881  001014  0E00               	movlw	0
  1882  001016  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1883                           
  1884                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1885  001018  0E00               	movlw	0
  1886  00101A  0101               	movlb	1	; () banked
  1887  00101C  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1888  00101E  0E00               	movlw	0
  1889  001020  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1890                           
  1891                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1892  001022  0E00               	movlw	0
  1893  001024  0101               	movlb	1	; () banked
  1894  001026  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1895  001028  0E00               	movlw	0
  1896  00102A  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1897                           
  1898                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1899  00102C  0E00               	movlw	0
  1900  00102E  0101               	movlb	1	; () banked
  1901  001030  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1902  001032  0E00               	movlw	0
  1903  001034  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1904                           
  1905                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1906  001036  0E00               	movlw	0
  1907  001038  0101               	movlb	1	; () banked
  1908  00103A  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1909  00103C  0E00               	movlw	0
  1910  00103E  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1911                           
  1912                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1913  001040  0E00               	movlw	0
  1914  001042  0101               	movlb	1	; () banked
  1915  001044  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1916  001046  0E00               	movlw	0
  1917  001048  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1918                           
  1919                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1920  00104A  0E00               	movlw	0
  1921  00104C  0101               	movlb	1	; () banked
  1922  00104E  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1923  001050  0E00               	movlw	0
  1924  001052  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1925  001054  0E00               	movlw	0
  1926  001056  0101               	movlb	1	; () banked
  1927  001058  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1928  00105A  0E00               	movlw	0
  1929  00105C  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1930  00105E  0E00               	movlw	0
  1931  001060  0101               	movlb	1	; () banked
  1932  001062  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1933  001064  0E00               	movlw	0
  1934  001066  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1935                           
  1936                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1937  001068  0E00               	movlw	0
  1938  00106A  0101               	movlb	1	; () banked
  1939  00106C  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1940  00106E  0E00               	movlw	0
  1941  001070  0101               	movlb	1	; () banked
  1942  001072  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1943  001074  0E00               	movlw	0
  1944  001076  0101               	movlb	1	; () banked
  1945  001078  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1946                           
  1947                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1948  00107A  0E00               	movlw	0
  1949  00107C  0101               	movlb	1	; () banked
  1950  00107E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1951  001080  0E80               	movlw	128
  1952  001082  0101               	movlb	1	; () banked
  1953  001084  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1954  001086  0E3F               	movlw	63
  1955  001088  0101               	movlb	1	; () banked
  1956  00108A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1957                           
  1958                           ;easat2_util_inputs.c: 137: int i = 0;
  1959  00108C  0E00               	movlw	0
  1960  00108E  0101               	movlb	1	; () banked
  1961  001090  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1962  001092  0E00               	movlw	0
  1963  001094  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;easat2_util_inputs.c: 143: INTCONbits.GIE = 0;
  1967  001096  9EF2               	bcf	intcon,7,c	;volatile
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;easat2_util_inputs.c: 151: if (util_onewire_reset()) return -99.1;
  1971  001098  EC31  F01E         	call	_util_onewire_reset	;wreg free
  1972  00109C  501A               	movf	?_util_onewire_reset,w,c
  1973  00109E  101B               	iorwf	?_util_onewire_reset+1,w,c
  1974  0010A0  B4D8               	btfsc	status,2,c
  1975  0010A2  D00A               	goto	l6486
  1976  0010A4  0E33               	movlw	51
  1977  0010A6  0100               	movlb	0	; () banked
  1978  0010A8  6FA2               	movwf	?_util_getTemperature& (0+255),b
  1979  0010AA  0EC6               	movlw	198
  1980  0010AC  0100               	movlb	0	; () banked
  1981  0010AE  6FA3               	movwf	(?_util_getTemperature+1)& (0+255),b
  1982  0010B0  0EC2               	movlw	194
  1983  0010B2  0100               	movlb	0	; () banked
  1984  0010B4  6FA4               	movwf	(?_util_getTemperature+2)& (0+255),b
  1985                           
  1986                           ; BSR set to: 0
  1987  0010B6  0012               	return	
  1988  0010B8                     l6486:
  1989                           
  1990                           ;easat2_util_inputs.c: 154: util_onewire_write_byte(0xCC);
  1991  0010B8  0E00               	movlw	0
  1992  0010BA  6E1D               	movwf	util_onewire_write_byte@value+1,c
  1993  0010BC  0ECC               	movlw	204
  1994  0010BE  6E1C               	movwf	util_onewire_write_byte@value,c
  1995  0010C0  ECA2  F014         	call	_util_onewire_write_byte	;wreg free
  1996                           
  1997                           ;easat2_util_inputs.c: 157: util_onewire_write_byte(0x44);
  1998  0010C4  0E00               	movlw	0
  1999  0010C6  6E1D               	movwf	util_onewire_write_byte@value+1,c
  2000  0010C8  0E44               	movlw	68
  2001  0010CA  6E1C               	movwf	util_onewire_write_byte@value,c
  2002  0010CC  ECA2  F014         	call	_util_onewire_write_byte	;wreg free
  2003                           
  2004                           ;easat2_util_inputs.c: 162: TRISAbits.TRISA3 = 1;
  2005  0010D0  8692               	bsf	3986,3,c	;volatile
  2006                           
  2007                           ;easat2_util_inputs.c: 164: INTCONbits.GIE = 1;
  2008  0010D2  8EF2               	bsf	intcon,7,c	;volatile
  2009                           
  2010                           ;easat2_util_inputs.c: 168: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  2011  0010D4  0E00               	movlw	0
  2012  0010D6  0101               	movlb	1	; () banked
  2013  0010D8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2014  0010DA  0E00               	movlw	0
  2015  0010DC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2016  0010DE  D009               	goto	l6498
  2017  0010E0                     l6494:
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;easat2_util_inputs.c: 169: util_waits_delay_secs(1);
  2021  0010E0  0E00               	movlw	0
  2022  0010E2  6E20               	movwf	util_waits_delay_secs@secs+1,c
  2023  0010E4  0E01               	movlw	1
  2024  0010E6  6E1F               	movwf	util_waits_delay_secs@secs,c
  2025  0010E8  EC41  F01D         	call	_util_waits_delay_secs	;wreg free
  2026  0010EC  0101               	movlb	1	; () banked
  2027  0010EE  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2028  0010F0  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2029  0010F2                     l6498:
  2030                           
  2031                           ; BSR set to: 1
  2032  0010F2  0101               	movlb	1	; () banked
  2033  0010F4  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2034  0010F6  D008               	goto	l6500
  2035  0010F8  0101               	movlb	1	; () banked
  2036  0010FA  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2037  0010FC  E107               	bnz	l6502
  2038  0010FE  0E05               	movlw	5
  2039  001100  0101               	movlb	1	; () banked
  2040  001102  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2041  001104  B0D8               	btfsc	status,0,c
  2042  001106  D002               	goto	l6502
  2043  001108                     l6500:
  2044                           
  2045                           ; BSR set to: 1
  2046  001108  A680               	btfss	3968,3,c	;volatile
  2047  00110A  D7EA               	goto	l6494
  2048  00110C                     l6502:
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;easat2_util_inputs.c: 171: if (i == 5) return -99.2;
  2052  00110C  0E05               	movlw	5
  2053  00110E  0101               	movlb	1	; () banked
  2054  001110  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  2055  001112  0101               	movlb	1	; () banked
  2056  001114  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  2057  001116  A4D8               	btfss	status,2,c
  2058  001118  D00A               	goto	l175
  2059                           
  2060                           ; BSR set to: 1
  2061  00111A  0E66               	movlw	102
  2062  00111C  0100               	movlb	0	; () banked
  2063  00111E  6FA2               	movwf	?_util_getTemperature& (0+255),b
  2064  001120  0EC6               	movlw	198
  2065  001122  0100               	movlb	0	; () banked
  2066  001124  6FA3               	movwf	(?_util_getTemperature+1)& (0+255),b
  2067  001126  0EC2               	movlw	194
  2068  001128  0100               	movlb	0	; () banked
  2069  00112A  6FA4               	movwf	(?_util_getTemperature+2)& (0+255),b
  2070                           
  2071                           ; BSR set to: 0
  2072  00112C  0012               	return	
  2073  00112E                     l175:
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;easat2_util_inputs.c: 175: INTCONbits.GIE = 0;
  2077  00112E  9EF2               	bcf	intcon,7,c	;volatile
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;easat2_util_inputs.c: 181: if (util_onewire_reset()) return -99.3;
  2081  001130  EC31  F01E         	call	_util_onewire_reset	;wreg free
  2082  001134  501A               	movf	?_util_onewire_reset,w,c
  2083  001136  101B               	iorwf	?_util_onewire_reset+1,w,c
  2084  001138  B4D8               	btfsc	status,2,c
  2085  00113A  D00A               	goto	l6514
  2086  00113C  0E9A               	movlw	154
  2087  00113E  0100               	movlb	0	; () banked
  2088  001140  6FA2               	movwf	?_util_getTemperature& (0+255),b
  2089  001142  0EC6               	movlw	198
  2090  001144  0100               	movlb	0	; () banked
  2091  001146  6FA3               	movwf	(?_util_getTemperature+1)& (0+255),b
  2092  001148  0EC2               	movlw	194
  2093  00114A  0100               	movlb	0	; () banked
  2094  00114C  6FA4               	movwf	(?_util_getTemperature+2)& (0+255),b
  2095                           
  2096                           ; BSR set to: 0
  2097  00114E  0012               	return	
  2098  001150                     l6514:
  2099                           
  2100                           ;easat2_util_inputs.c: 184: util_onewire_write_byte(0xCC);
  2101  001150  0E00               	movlw	0
  2102  001152  6E1D               	movwf	util_onewire_write_byte@value+1,c
  2103  001154  0ECC               	movlw	204
  2104  001156  6E1C               	movwf	util_onewire_write_byte@value,c
  2105  001158  ECA2  F014         	call	_util_onewire_write_byte	;wreg free
  2106                           
  2107                           ;easat2_util_inputs.c: 187: util_onewire_write_byte(0xBE);
  2108  00115C  0E00               	movlw	0
  2109  00115E  6E1D               	movwf	util_onewire_write_byte@value+1,c
  2110  001160  0EBE               	movlw	190
  2111  001162  6E1C               	movwf	util_onewire_write_byte@value,c
  2112  001164  ECA2  F014         	call	_util_onewire_write_byte	;wreg free
  2113                           
  2114                           ;easat2_util_inputs.c: 198: byte_mem[0] = util_onewire_read_byte();
  2115  001168  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2116  00116C  C01F  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2117  001170  C020  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2118                           
  2119                           ;easat2_util_inputs.c: 200: byte_mem[1] = util_onewire_read_byte();
  2120  001174  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2121  001178  C01F  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2122  00117C  C020  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2123                           
  2124                           ;easat2_util_inputs.c: 202: byte_mem[2] = util_onewire_read_byte();
  2125  001180  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2126  001184  C01F  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2127  001188  C020  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2128                           
  2129                           ;easat2_util_inputs.c: 204: byte_mem[3] = util_onewire_read_byte();
  2130  00118C  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2131  001190  C01F  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2132  001194  C020  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2133                           
  2134                           ;easat2_util_inputs.c: 206: byte_mem[4] = util_onewire_read_byte();
  2135  001198  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2136  00119C  C01F  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2137  0011A0  C020  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2138                           
  2139                           ;easat2_util_inputs.c: 208: byte_mem[5] = util_onewire_read_byte();
  2140  0011A4  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2141  0011A8  C01F  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2142  0011AC  C020  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2143                           
  2144                           ;easat2_util_inputs.c: 210: byte_mem[6] = util_onewire_read_byte();
  2145  0011B0  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2146  0011B4  C01F  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2147  0011B8  C020  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2148                           
  2149                           ;easat2_util_inputs.c: 212: byte_mem[7] = util_onewire_read_byte();
  2150  0011BC  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2151  0011C0  C01F  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2152  0011C4  C020  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2153                           
  2154                           ;easat2_util_inputs.c: 214: byte_mem[8] = util_onewire_read_byte();
  2155  0011C8  ECD8  F013         	call	_util_onewire_read_byte	;wreg free
  2156  0011CC  C01F  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2157  0011D0  C020  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2158                           
  2159                           ;easat2_util_inputs.c: 218: INTCONbits.GIE = 1;
  2160  0011D4  8EF2               	bsf	intcon,7,c	;volatile
  2161                           
  2162                           ;easat2_util_inputs.c: 224: for (num_byte = 0; num_byte < 9; num_byte++) {
  2163  0011D6  0E00               	movlw	0
  2164  0011D8  0101               	movlb	1	; () banked
  2165  0011DA  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2166  0011DC  0E00               	movlw	0
  2167  0011DE  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2168  0011E0                     l6520:
  2169                           
  2170                           ; BSR set to: 1
  2171  0011E0  0101               	movlb	1	; () banked
  2172  0011E2  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2173  0011E4  D008               	goto	l6524
  2174  0011E6  0101               	movlb	1	; () banked
  2175  0011E8  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2176  0011EA  E14F               	bnz	l6542
  2177  0011EC  0E09               	movlw	9
  2178  0011EE  0101               	movlb	1	; () banked
  2179  0011F0  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2180  0011F2  B0D8               	btfsc	status,0,c
  2181  0011F4  D04A               	goto	l6542
  2182  0011F6                     l6524:
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;easat2_util_inputs.c: 225: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2186  0011F6  0E00               	movlw	0
  2187  0011F8  0101               	movlb	1	; () banked
  2188  0011FA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2189  0011FC  0E00               	movlw	0
  2190  0011FE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2191  001200                     l6526:
  2192                           
  2193                           ; BSR set to: 1
  2194  001200  0101               	movlb	1	; () banked
  2195  001202  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2196  001204  D008               	goto	l6530
  2197  001206  0101               	movlb	1	; () banked
  2198  001208  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2199  00120A  E13B               	bnz	l6538
  2200  00120C  0E08               	movlw	8
  2201  00120E  0101               	movlb	1	; () banked
  2202  001210  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2203  001212  B0D8               	btfsc	status,0,c
  2204  001214  D036               	goto	l6538
  2205  001216                     l6530:
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;easat2_util_inputs.c: 226: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2209  001216  C1C7  F0A5         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2210  00121A  90D8               	bcf	status,0,c
  2211  00121C  0101               	movlb	1	; () banked
  2212  00121E  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2213  001220  6ED9               	movwf	fsr2l,c
  2214  001222  0101               	movlb	1	; () banked
  2215  001224  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2216  001226  6EDA               	movwf	fsr2h,c
  2217  001228  0E90               	movlw	low util_getTemperature@byte_mem
  2218  00122A  26D9               	addwf	fsr2l,f,c
  2219  00122C  0E01               	movlw	high util_getTemperature@byte_mem
  2220  00122E  22DA               	addwfc	fsr2h,f,c
  2221  001230  CFDE F0A6          	movff	postinc2,??_util_getTemperature+1
  2222  001234  CFDD F0A7          	movff	postdec2,??_util_getTemperature+2
  2223  001238  0100               	movlb	0	; () banked
  2224  00123A  2BA5               	incf	??_util_getTemperature& (0+255),f,b
  2225  00123C  D004               	goto	u7464
  2226  00123E                     u7465:
  2227  00123E  0100               	movlb	0	; () banked
  2228  001240  35A7               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2229  001242  33A7               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2230  001244  33A6               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2231  001246                     u7464:
  2232  001246  0100               	movlb	0	; () banked
  2233  001248  2FA5               	decfsz	??_util_getTemperature& (0+255),f,b
  2234  00124A  D7F9               	goto	u7465
  2235  00124C  0E01               	movlw	1
  2236  00124E  0100               	movlb	0	; () banked
  2237  001250  17A6               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2238  001252  0E00               	movlw	0
  2239  001254  17A7               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2240  001256  90D8               	bcf	status,0,c
  2241  001258  0101               	movlb	1	; () banked
  2242  00125A  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2243  00125C  6ED9               	movwf	fsr2l,c
  2244  00125E  0101               	movlb	1	; () banked
  2245  001260  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2246  001262  6EDA               	movwf	fsr2h,c
  2247  001264  0E00               	movlw	low util_getTemperature@bit_mem
  2248  001266  26D9               	addwf	fsr2l,f,c
  2249  001268  0E01               	movlw	high util_getTemperature@bit_mem
  2250  00126A  22DA               	addwfc	fsr2h,f,c
  2251  00126C  C0A6  FFDE         	movff	??_util_getTemperature+1,postinc2
  2252  001270  C0A7  FFDD         	movff	??_util_getTemperature+2,postdec2
  2253                           
  2254                           ; BSR set to: 1
  2255  001274  0101               	movlb	1	; () banked
  2256  001276  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2257  001278  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2258                           
  2259                           ; BSR set to: 1
  2260  00127A  0101               	movlb	1	; () banked
  2261  00127C  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2262  00127E  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2263  001280  D7BF               	goto	l6526
  2264  001282                     l6538:
  2265                           
  2266                           ; BSR set to: 1
  2267  001282  0101               	movlb	1	; () banked
  2268  001284  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2269  001286  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2270  001288  D7AB               	goto	l6520
  2271  00128A                     l6542:
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;easat2_util_inputs.c: 227: }
  2275                           ;easat2_util_inputs.c: 231: for (i = 0; i < (9*8); i++) {
  2276  00128A  0E00               	movlw	0
  2277  00128C  0101               	movlb	1	; () banked
  2278  00128E  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2279  001290  0E00               	movlw	0
  2280  001292  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2281  001294                     l6544:
  2282                           
  2283                           ; BSR set to: 1
  2284  001294  0101               	movlb	1	; () banked
  2285  001296  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2286  001298  D008               	goto	l6548
  2287  00129A  0101               	movlb	1	; () banked
  2288  00129C  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2289  00129E  E154               	bnz	l6570
  2290  0012A0  0E48               	movlw	72
  2291  0012A2  0101               	movlb	1	; () banked
  2292  0012A4  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2293  0012A6  B0D8               	btfsc	status,0,c
  2294  0012A8  D04F               	goto	l6570
  2295  0012AA                     l6548:
  2296                           
  2297                           ; BSR set to: 1
  2298                           ;easat2_util_inputs.c: 236: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2299  0012AA  90D8               	bcf	status,0,c
  2300  0012AC  0101               	movlb	1	; () banked
  2301  0012AE  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2302  0012B0  6ED9               	movwf	fsr2l,c
  2303  0012B2  0101               	movlb	1	; () banked
  2304  0012B4  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2305  0012B6  6EDA               	movwf	fsr2h,c
  2306  0012B8  0E00               	movlw	low util_getTemperature@bit_mem
  2307  0012BA  26D9               	addwf	fsr2l,f,c
  2308  0012BC  0E01               	movlw	high util_getTemperature@bit_mem
  2309  0012BE  22DA               	addwfc	fsr2h,f,c
  2310  0012C0  CFDE F0A5          	movff	postinc2,??_util_getTemperature
  2311  0012C4  CFDD F0A6          	movff	postdec2,??_util_getTemperature+1
  2312  0012C8  0101               	movlb	1	; () banked
  2313  0012CA  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2314  0012CC  0100               	movlb	0	; () banked
  2315  0012CE  19A5               	xorwf	??_util_getTemperature& (0+255),w,b
  2316  0012D0  0101               	movlb	1	; () banked
  2317  0012D2  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2318  0012D4  0101               	movlb	1	; () banked
  2319  0012D6  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2320  0012D8  0100               	movlb	0	; () banked
  2321  0012DA  19A6               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2322  0012DC  0101               	movlb	1	; () banked
  2323  0012DE  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;easat2_util_inputs.c: 238: shift_reg_bit0 = shift_reg_bit1;
  2327  0012E0  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2328  0012E4  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;easat2_util_inputs.c: 239: shift_reg_bit1 = shift_reg_bit2;
  2332  0012E8  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2333  0012EC  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;easat2_util_inputs.c: 240: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2337  0012F0  0101               	movlb	1	; () banked
  2338  0012F2  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2339  0012F4  0101               	movlb	1	; () banked
  2340  0012F6  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2341  0012F8  0101               	movlb	1	; () banked
  2342  0012FA  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2343  0012FC  0101               	movlb	1	; () banked
  2344  0012FE  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2345  001300  0101               	movlb	1	; () banked
  2346  001302  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2347  001304  0101               	movlb	1	; () banked
  2348  001306  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;easat2_util_inputs.c: 241: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2352  001308  0101               	movlb	1	; () banked
  2353  00130A  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2354  00130C  0101               	movlb	1	; () banked
  2355  00130E  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2356  001310  0101               	movlb	1	; () banked
  2357  001312  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2358  001314  0101               	movlb	1	; () banked
  2359  001316  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2360  001318  0101               	movlb	1	; () banked
  2361  00131A  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2362  00131C  0101               	movlb	1	; () banked
  2363  00131E  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;easat2_util_inputs.c: 242: shift_reg_bit4 = shift_reg_bit5;
  2367  001320  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2368  001324  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;easat2_util_inputs.c: 243: shift_reg_bit5 = shift_reg_bit6;
  2372  001328  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2373  00132C  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;easat2_util_inputs.c: 244: shift_reg_bit6 = shift_reg_bit7;
  2377  001330  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2378  001334  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;easat2_util_inputs.c: 245: shift_reg_bit7 = shift_reg_bit_temp;
  2382  001338  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2383  00133C  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2384                           
  2385                           ; BSR set to: 1
  2386  001340  0101               	movlb	1	; () banked
  2387  001342  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2388  001344  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2389  001346  D7A6               	goto	l6544
  2390  001348                     l6570:
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;easat2_util_inputs.c: 247: }
  2394                           ;easat2_util_inputs.c: 251: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2395                           ;easat2_util_inputs.c: 252: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2396                           ;easat2_util_inputs.c: 253: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2397  001348  0101               	movlb	1	; () banked
  2398  00134A  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2399  00134C  0101               	movlb	1	; () banked
  2400  00134E  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2401  001350  A4D8               	btfss	status,2,c
  2402  001352  D02A               	goto	l6586
  2403                           
  2404                           ; BSR set to: 1
  2405  001354  0101               	movlb	1	; () banked
  2406  001356  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2407  001358  0101               	movlb	1	; () banked
  2408  00135A  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2409  00135C  A4D8               	btfss	status,2,c
  2410  00135E  D024               	goto	l6586
  2411                           
  2412                           ; BSR set to: 1
  2413  001360  0101               	movlb	1	; () banked
  2414  001362  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2415  001364  0101               	movlb	1	; () banked
  2416  001366  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2417  001368  B4D8               	btfsc	status,2,c
  2418  00136A  D006               	goto	l6578
  2419                           
  2420                           ; BSR set to: 1
  2421  00136C  0101               	movlb	1	; () banked
  2422  00136E  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2423  001370  0101               	movlb	1	; () banked
  2424  001372  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2425  001374  A4D8               	btfss	status,2,c
  2426  001376  D018               	goto	l6586
  2427  001378                     l6578:
  2428                           
  2429                           ; BSR set to: 1
  2430  001378  0101               	movlb	1	; () banked
  2431  00137A  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2432  00137C  0101               	movlb	1	; () banked
  2433  00137E  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2434  001380  A4D8               	btfss	status,2,c
  2435  001382  D012               	goto	l6586
  2436                           
  2437                           ; BSR set to: 1
  2438  001384  0101               	movlb	1	; () banked
  2439  001386  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2440  001388  0101               	movlb	1	; () banked
  2441  00138A  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2442  00138C  B4D8               	btfsc	status,2,c
  2443  00138E  D006               	goto	l6584
  2444                           
  2445                           ; BSR set to: 1
  2446  001390  0101               	movlb	1	; () banked
  2447  001392  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2448  001394  0101               	movlb	1	; () banked
  2449  001396  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2450  001398  A4D8               	btfss	status,2,c
  2451  00139A  D006               	goto	l6586
  2452  00139C                     l6584:
  2453                           
  2454                           ; BSR set to: 1
  2455  00139C  0101               	movlb	1	; () banked
  2456  00139E  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2457  0013A0  0101               	movlb	1	; () banked
  2458  0013A2  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2459  0013A4  B4D8               	btfsc	status,2,c
  2460  0013A6  D00A               	goto	l6590
  2461  0013A8                     l6586:
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;easat2_util_inputs.c: 254: return -99.7;
  2465  0013A8  0E66               	movlw	102
  2466  0013AA  0100               	movlb	0	; () banked
  2467  0013AC  6FA2               	movwf	?_util_getTemperature& (0+255),b
  2468  0013AE  0EC7               	movlw	199
  2469  0013B0  0100               	movlb	0	; () banked
  2470  0013B2  6FA3               	movwf	(?_util_getTemperature+1)& (0+255),b
  2471  0013B4  0EC2               	movlw	194
  2472  0013B6  0100               	movlb	0	; () banked
  2473  0013B8  6FA4               	movwf	(?_util_getTemperature+2)& (0+255),b
  2474                           
  2475                           ; BSR set to: 0
  2476  0013BA  0012               	return	
  2477  0013BC                     l6590:
  2478                           
  2479                           ;easat2_util_inputs.c: 258: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2480  0013BC  0101               	movlb	1	; () banked
  2481  0013BE  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2482  0013C0  0101               	movlb	1	; () banked
  2483  0013C2  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2484  0013C4  A4D8               	btfss	status,2,c
  2485  0013C6  D008               	goto	l6594
  2486                           
  2487                           ; BSR set to: 1
  2488  0013C8  0E00               	movlw	0
  2489  0013CA  0101               	movlb	1	; () banked
  2490  0013CC  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2491  0013CE  0E80               	movlw	128
  2492  0013D0  0101               	movlb	1	; () banked
  2493  0013D2  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2494  0013D4  0E3F               	movlw	63
  2495  0013D6  D007               	goto	L1
  2496  0013D8                     l6594:
  2497                           
  2498                           ; BSR set to: 1
  2499  0013D8  0E00               	movlw	0
  2500  0013DA  0101               	movlb	1	; () banked
  2501  0013DC  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2502  0013DE  0E80               	movlw	128
  2503  0013E0  0101               	movlb	1	; () banked
  2504  0013E2  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2505  0013E4  0EBF               	movlw	191
  2506  0013E6                     L1:
  2507  0013E6  0101               	movlb	1	; () banked
  2508  0013E8  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2512                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2513                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2514                           
  2515                           ; BSR set to: 1
  2516  0013EA  0E00               	movlw	0
  2517  0013EC  0100               	movlb	0	; () banked
  2518  0013EE  6F78               	movwf	___ftdiv@f2& (0+255),b
  2519  0013F0  0E00               	movlw	0
  2520  0013F2  0100               	movlb	0	; () banked
  2521  0013F4  6F79               	movwf	(___ftdiv@f2+1)& (0+255),b
  2522  0013F6  0E41               	movlw	65
  2523  0013F8  0100               	movlb	0	; () banked
  2524  0013FA  6F7A               	movwf	(___ftdiv@f2+2)& (0+255),b
  2525  0013FC  C102  F071         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2526  001400  C103  F072         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2527  001404  EC93  F01E         	call	___awtoft	;wreg free
  2528  001408  C071  F075         	movff	?___awtoft,___ftdiv@f1
  2529  00140C  C072  F076         	movff	?___awtoft+1,___ftdiv@f1+1
  2530  001410  C073  F077         	movff	?___awtoft+2,___ftdiv@f1+2
  2531  001414  EC6F  F017         	call	___ftdiv	;wreg free
  2532  001418  C075  F099         	movff	?___ftdiv,___ftadd@f2
  2533  00141C  C076  F09A         	movff	?___ftdiv+1,___ftadd@f2+1
  2534  001420  C077  F09B         	movff	?___ftdiv+2,___ftadd@f2+2
  2535  001424  0E00               	movlw	0
  2536  001426  0100               	movlb	0	; () banked
  2537  001428  6F78               	movwf	___ftdiv@f2& (0+255),b
  2538  00142A  0E80               	movlw	128
  2539  00142C  0100               	movlb	0	; () banked
  2540  00142E  6F79               	movwf	(___ftdiv@f2+1)& (0+255),b
  2541  001430  0E41               	movlw	65
  2542  001432  0100               	movlb	0	; () banked
  2543  001434  6F7A               	movwf	(___ftdiv@f2+2)& (0+255),b
  2544  001436  C100  F071         	movff	util_getTemperature@bit_mem,___awtoft@c
  2545  00143A  C101  F072         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2546  00143E  EC93  F01E         	call	___awtoft	;wreg free
  2547  001442  C071  F075         	movff	?___awtoft,___ftdiv@f1
  2548  001446  C072  F076         	movff	?___awtoft+1,___ftdiv@f1+1
  2549  00144A  C073  F077         	movff	?___awtoft+2,___ftdiv@f1+2
  2550  00144E  EC6F  F017         	call	___ftdiv	;wreg free
  2551  001452  C075  F096         	movff	?___ftdiv,___ftadd@f1
  2552  001456  C076  F097         	movff	?___ftdiv+1,___ftadd@f1+1
  2553  00145A  C077  F098         	movff	?___ftdiv+2,___ftadd@f1+2
  2554  00145E  ECA4  F012         	call	___ftadd	;wreg free
  2555  001462  C096  F1A7         	movff	?___ftadd,_util_getTemperature$2956
  2556  001466  C097  F1A8         	movff	?___ftadd+1,_util_getTemperature$2956+1
  2557  00146A  C098  F1A9         	movff	?___ftadd+2,_util_getTemperature$2956+2
  2558                           
  2559                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2560                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2561                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2562  00146E  0E00               	movlw	0
  2563  001470  0100               	movlb	0	; () banked
  2564  001472  6F78               	movwf	___ftdiv@f2& (0+255),b
  2565  001474  0E80               	movlw	128
  2566  001476  0100               	movlb	0	; () banked
  2567  001478  6F79               	movwf	(___ftdiv@f2+1)& (0+255),b
  2568  00147A  0E40               	movlw	64
  2569  00147C  0100               	movlb	0	; () banked
  2570  00147E  6F7A               	movwf	(___ftdiv@f2+2)& (0+255),b
  2571  001480  C104  F071         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2572  001484  C105  F072         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2573  001488  EC93  F01E         	call	___awtoft	;wreg free
  2574  00148C  C071  F075         	movff	?___awtoft,___ftdiv@f1
  2575  001490  C072  F076         	movff	?___awtoft+1,___ftdiv@f1+1
  2576  001494  C073  F077         	movff	?___awtoft+2,___ftdiv@f1+2
  2577  001498  EC6F  F017         	call	___ftdiv	;wreg free
  2578  00149C  C075  F099         	movff	?___ftdiv,___ftadd@f2
  2579  0014A0  C076  F09A         	movff	?___ftdiv+1,___ftadd@f2+1
  2580  0014A4  C077  F09B         	movff	?___ftdiv+2,___ftadd@f2+2
  2581  0014A8  C1A7  F096         	movff	_util_getTemperature$2956,___ftadd@f1
  2582  0014AC  C1A8  F097         	movff	_util_getTemperature$2956+1,___ftadd@f1+1
  2583  0014B0  C1A9  F098         	movff	_util_getTemperature$2956+2,___ftadd@f1+2
  2584  0014B4  ECA4  F012         	call	___ftadd	;wreg free
  2585  0014B8  C096  F1AA         	movff	?___ftadd,_util_getTemperature$2957
  2586  0014BC  C097  F1AB         	movff	?___ftadd+1,_util_getTemperature$2957+1
  2587  0014C0  C098  F1AC         	movff	?___ftadd+2,_util_getTemperature$2957+2
  2588                           
  2589                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2590                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2591                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2592  0014C4  0E00               	movlw	0
  2593  0014C6  0100               	movlb	0	; () banked
  2594  0014C8  6F78               	movwf	___ftdiv@f2& (0+255),b
  2595  0014CA  0E00               	movlw	0
  2596  0014CC  0100               	movlb	0	; () banked
  2597  0014CE  6F79               	movwf	(___ftdiv@f2+1)& (0+255),b
  2598  0014D0  0E40               	movlw	64
  2599  0014D2  0100               	movlb	0	; () banked
  2600  0014D4  6F7A               	movwf	(___ftdiv@f2+2)& (0+255),b
  2601  0014D6  C106  F071         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2602  0014DA  C107  F072         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2603  0014DE  EC93  F01E         	call	___awtoft	;wreg free
  2604  0014E2  C071  F075         	movff	?___awtoft,___ftdiv@f1
  2605  0014E6  C072  F076         	movff	?___awtoft+1,___ftdiv@f1+1
  2606  0014EA  C073  F077         	movff	?___awtoft+2,___ftdiv@f1+2
  2607  0014EE  EC6F  F017         	call	___ftdiv	;wreg free
  2608  0014F2  C075  F099         	movff	?___ftdiv,___ftadd@f2
  2609  0014F6  C076  F09A         	movff	?___ftdiv+1,___ftadd@f2+1
  2610  0014FA  C077  F09B         	movff	?___ftdiv+2,___ftadd@f2+2
  2611  0014FE  C1AA  F096         	movff	_util_getTemperature$2957,___ftadd@f1
  2612  001502  C1AB  F097         	movff	_util_getTemperature$2957+1,___ftadd@f1+1
  2613  001506  C1AC  F098         	movff	_util_getTemperature$2957+2,___ftadd@f1+2
  2614  00150A  ECA4  F012         	call	___ftadd	;wreg free
  2615  00150E  C096  F1AD         	movff	?___ftadd,_util_getTemperature$2958
  2616  001512  C097  F1AE         	movff	?___ftadd+1,_util_getTemperature$2958+1
  2617  001516  C098  F1AF         	movff	?___ftadd+2,_util_getTemperature$2958+2
  2618                           
  2619                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2620                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2621                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2622  00151A  C108  F071         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2623  00151E  C109  F072         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2624  001522  EC93  F01E         	call	___awtoft	;wreg free
  2625  001526  C071  F099         	movff	?___awtoft,___ftadd@f2
  2626  00152A  C072  F09A         	movff	?___awtoft+1,___ftadd@f2+1
  2627  00152E  C073  F09B         	movff	?___awtoft+2,___ftadd@f2+2
  2628  001532  C1AD  F096         	movff	_util_getTemperature$2958,___ftadd@f1
  2629  001536  C1AE  F097         	movff	_util_getTemperature$2958+1,___ftadd@f1+1
  2630  00153A  C1AF  F098         	movff	_util_getTemperature$2958+2,___ftadd@f1+2
  2631  00153E  ECA4  F012         	call	___ftadd	;wreg free
  2632  001542  C096  F1B0         	movff	?___ftadd,_util_getTemperature$2959
  2633  001546  C097  F1B1         	movff	?___ftadd+1,_util_getTemperature$2959+1
  2634  00154A  C098  F1B2         	movff	?___ftadd+2,_util_getTemperature$2959+2
  2635                           
  2636                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2637                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2638                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2639  00154E  C1B0  F096         	movff	_util_getTemperature$2959,___ftadd@f1
  2640  001552  C1B1  F097         	movff	_util_getTemperature$2959+1,___ftadd@f1+1
  2641  001556  C1B2  F098         	movff	_util_getTemperature$2959+2,___ftadd@f1+2
  2642  00155A  0E00               	movlw	0
  2643  00155C  0100               	movlb	0	; () banked
  2644  00155E  6F80               	movwf	___ftmul@f2& (0+255),b
  2645  001560  0E00               	movlw	0
  2646  001562  0100               	movlb	0	; () banked
  2647  001564  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2648  001566  0E40               	movlw	64
  2649  001568  0100               	movlb	0	; () banked
  2650  00156A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2651  00156C  C10A  F071         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2652  001570  C10B  F072         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2653  001574  EC93  F01E         	call	___awtoft	;wreg free
  2654  001578  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2655  00157C  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2656  001580  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2657  001584  EC17  F016         	call	___ftmul	;wreg free
  2658  001588  C07D  F099         	movff	?___ftmul,___ftadd@f2
  2659  00158C  C07E  F09A         	movff	?___ftmul+1,___ftadd@f2+1
  2660  001590  C07F  F09B         	movff	?___ftmul+2,___ftadd@f2+2
  2661  001594  ECA4  F012         	call	___ftadd	;wreg free
  2662  001598  C096  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2663  00159C  C097  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2664  0015A0  C098  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2665                           
  2666                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2667                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2668                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2669                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2670  0015A4  0E00               	movlw	0
  2671  0015A6  0100               	movlb	0	; () banked
  2672  0015A8  6F80               	movwf	___ftmul@f2& (0+255),b
  2673  0015AA  0E00               	movlw	0
  2674  0015AC  0100               	movlb	0	; () banked
  2675  0015AE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2676  0015B0  0E41               	movlw	65
  2677  0015B2  0100               	movlb	0	; () banked
  2678  0015B4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2679  0015B6  C10E  F071         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2680  0015BA  C10F  F072         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2681  0015BE  EC93  F01E         	call	___awtoft	;wreg free
  2682  0015C2  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2683  0015C6  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2684  0015CA  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2685  0015CE  EC17  F016         	call	___ftmul	;wreg free
  2686  0015D2  C07D  F099         	movff	?___ftmul,___ftadd@f2
  2687  0015D6  C07E  F09A         	movff	?___ftmul+1,___ftadd@f2+1
  2688  0015DA  C07F  F09B         	movff	?___ftmul+2,___ftadd@f2+2
  2689  0015DE  0E00               	movlw	0
  2690  0015E0  0100               	movlb	0	; () banked
  2691  0015E2  6F80               	movwf	___ftmul@f2& (0+255),b
  2692  0015E4  0E80               	movlw	128
  2693  0015E6  0100               	movlb	0	; () banked
  2694  0015E8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2695  0015EA  0E40               	movlw	64
  2696  0015EC  0100               	movlb	0	; () banked
  2697  0015EE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2698  0015F0  C10C  F071         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2699  0015F4  C10D  F072         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2700  0015F8  EC93  F01E         	call	___awtoft	;wreg free
  2701  0015FC  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2702  001600  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2703  001604  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2704  001608  EC17  F016         	call	___ftmul	;wreg free
  2705  00160C  C07D  F096         	movff	?___ftmul,___ftadd@f1
  2706  001610  C07E  F097         	movff	?___ftmul+1,___ftadd@f1+1
  2707  001614  C07F  F098         	movff	?___ftmul+2,___ftadd@f1+2
  2708  001618  ECA4  F012         	call	___ftadd	;wreg free
  2709  00161C  C096  F1A7         	movff	?___ftadd,_util_getTemperature$2956
  2710  001620  C097  F1A8         	movff	?___ftadd+1,_util_getTemperature$2956+1
  2711  001624  C098  F1A9         	movff	?___ftadd+2,_util_getTemperature$2956+2
  2712                           
  2713                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2714                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2715                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2716                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2717  001628  0E00               	movlw	0
  2718  00162A  0100               	movlb	0	; () banked
  2719  00162C  6F80               	movwf	___ftmul@f2& (0+255),b
  2720  00162E  0E80               	movlw	128
  2721  001630  0100               	movlb	0	; () banked
  2722  001632  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2723  001634  0E41               	movlw	65
  2724  001636  0100               	movlb	0	; () banked
  2725  001638  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2726  00163A  C110  F071         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2727  00163E  C111  F072         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2728  001642  EC93  F01E         	call	___awtoft	;wreg free
  2729  001646  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2730  00164A  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2731  00164E  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2732  001652  EC17  F016         	call	___ftmul	;wreg free
  2733  001656  C07D  F099         	movff	?___ftmul,___ftadd@f2
  2734  00165A  C07E  F09A         	movff	?___ftmul+1,___ftadd@f2+1
  2735  00165E  C07F  F09B         	movff	?___ftmul+2,___ftadd@f2+2
  2736  001662  C1A7  F096         	movff	_util_getTemperature$2956,___ftadd@f1
  2737  001666  C1A8  F097         	movff	_util_getTemperature$2956+1,___ftadd@f1+1
  2738  00166A  C1A9  F098         	movff	_util_getTemperature$2956+2,___ftadd@f1+2
  2739  00166E  ECA4  F012         	call	___ftadd	;wreg free
  2740  001672  C096  F1AA         	movff	?___ftadd,_util_getTemperature$2957
  2741  001676  C097  F1AB         	movff	?___ftadd+1,_util_getTemperature$2957+1
  2742  00167A  C098  F1AC         	movff	?___ftadd+2,_util_getTemperature$2957+2
  2743                           
  2744                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2745                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2746                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2747                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2748  00167E  0E00               	movlw	0
  2749  001680  0100               	movlb	0	; () banked
  2750  001682  6F80               	movwf	___ftmul@f2& (0+255),b
  2751  001684  0E00               	movlw	0
  2752  001686  0100               	movlb	0	; () banked
  2753  001688  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2754  00168A  0E42               	movlw	66
  2755  00168C  0100               	movlb	0	; () banked
  2756  00168E  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2757  001690  C112  F071         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2758  001694  C113  F072         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2759  001698  EC93  F01E         	call	___awtoft	;wreg free
  2760  00169C  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2761  0016A0  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2762  0016A4  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2763  0016A8  EC17  F016         	call	___ftmul	;wreg free
  2764  0016AC  C07D  F099         	movff	?___ftmul,___ftadd@f2
  2765  0016B0  C07E  F09A         	movff	?___ftmul+1,___ftadd@f2+1
  2766  0016B4  C07F  F09B         	movff	?___ftmul+2,___ftadd@f2+2
  2767  0016B8  C1AA  F096         	movff	_util_getTemperature$2957,___ftadd@f1
  2768  0016BC  C1AB  F097         	movff	_util_getTemperature$2957+1,___ftadd@f1+1
  2769  0016C0  C1AC  F098         	movff	_util_getTemperature$2957+2,___ftadd@f1+2
  2770  0016C4  ECA4  F012         	call	___ftadd	;wreg free
  2771  0016C8  C096  F1AD         	movff	?___ftadd,_util_getTemperature$2958
  2772  0016CC  C097  F1AE         	movff	?___ftadd+1,_util_getTemperature$2958+1
  2773  0016D0  C098  F1AF         	movff	?___ftadd+2,_util_getTemperature$2958+2
  2774                           
  2775                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2776                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2777                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2778                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2779  0016D4  0E00               	movlw	0
  2780  0016D6  0100               	movlb	0	; () banked
  2781  0016D8  6F80               	movwf	___ftmul@f2& (0+255),b
  2782  0016DA  0E80               	movlw	128
  2783  0016DC  0100               	movlb	0	; () banked
  2784  0016DE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2785  0016E0  0E42               	movlw	66
  2786  0016E2  0100               	movlb	0	; () banked
  2787  0016E4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2788  0016E6  C114  F071         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2789  0016EA  C115  F072         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2790  0016EE  EC93  F01E         	call	___awtoft	;wreg free
  2791  0016F2  C071  F07D         	movff	?___awtoft,___ftmul@f1
  2792  0016F6  C072  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2793  0016FA  C073  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2794  0016FE  EC17  F016         	call	___ftmul	;wreg free
  2795  001702  C07D  F099         	movff	?___ftmul,___ftadd@f2
  2796  001706  C07E  F09A         	movff	?___ftmul+1,___ftadd@f2+1
  2797  00170A  C07F  F09B         	movff	?___ftmul+2,___ftadd@f2+2
  2798  00170E  C1AD  F096         	movff	_util_getTemperature$2958,___ftadd@f1
  2799  001712  C1AE  F097         	movff	_util_getTemperature$2958+1,___ftadd@f1+1
  2800  001716  C1AF  F098         	movff	_util_getTemperature$2958+2,___ftadd@f1+2
  2801  00171A  ECA4  F012         	call	___ftadd	;wreg free
  2802  00171E  C096  F1B0         	movff	?___ftadd,_util_getTemperature$2959
  2803  001722  C097  F1B1         	movff	?___ftadd+1,_util_getTemperature$2959+1
  2804  001726  C098  F1B2         	movff	?___ftadd+2,_util_getTemperature$2959+2
  2805                           
  2806                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2807                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2808                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2809                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2810  00172A  C1B0  F096         	movff	_util_getTemperature$2959,___ftadd@f1
  2811  00172E  C1B1  F097         	movff	_util_getTemperature$2959+1,___ftadd@f1+1
  2812  001732  C1B2  F098         	movff	_util_getTemperature$2959+2,___ftadd@f1+2
  2813  001736  C1C9  F099         	movff	util_getTemperature@temperature,___ftadd@f2
  2814  00173A  C1CA  F09A         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2815  00173E  C1CB  F09B         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2816  001742  ECA4  F012         	call	___ftadd	;wreg free
  2817  001746  C096  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2818  00174A  C097  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2819  00174E  C098  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2820                           
  2821                           ;easat2_util_inputs.c: 268: temperature = temperature * sign;
  2822  001752  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2823  001756  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2824  00175A  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2825  00175E  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2826  001762  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2827  001766  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2828  00176A  EC17  F016         	call	___ftmul	;wreg free
  2829  00176E  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2830  001772  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2831  001776  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2832                           
  2833                           ;easat2_util_inputs.c: 270: return temperature;
  2834  00177A  C1C9  F0A2         	movff	util_getTemperature@temperature,?_util_getTemperature
  2835  00177E  C1CA  F0A3         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2836  001782  C1CB  F0A4         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2837  001786  0012               	return	
  2838  001788                     __end_of_util_getTemperature:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           intcon	equ	0xFF2
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           postdec1	equ	0xFE5
  2848                           fsr1h	equ	0xFE2
  2849                           fsr1l	equ	0xFE1
  2850                           postinc2	equ	0xFDE
  2851                           postdec2	equ	0xFDD
  2852                           fsr2h	equ	0xFDA
  2853                           fsr2l	equ	0xFD9
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function _util_waits_delay_secs *****************
  2857 ;; Defined at:
  2858 ;;		line 31 in file "easat2_util_waits.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  secs            2   30[COMRAM] int 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  j               2   19[BANK0 ] int 
  2863 ;;  i               2   17[BANK0 ] int 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2873 ;;      Params:         2       0       0       0       0       0       0
  2874 ;;      Locals:         0       4       0       0       0       0       0
  2875 ;;      Temps:          1       0       0       0       0       0       0
  2876 ;;      Totals:         3       4       0       0       0       0       0
  2877 ;;Total ram usage:        7 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    3
  2880 ;; This function calls:
  2881 ;;		_util_waits_delay_ms
  2882 ;; This function is called by:
  2883 ;;		_util_getTemperature
  2884 ;;		_util_waits_delay_mins
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text5
  2889  003A82                     __ptext5:
  2890                           	opt stack 0
  2891  003A82                     _util_waits_delay_secs:
  2892                           	opt stack 25
  2893                           
  2894                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2895                           
  2896                           ;incstack = 0
  2897  003A82  0E00               	movlw	0
  2898  003A84  0100               	movlb	0	; () banked
  2899  003A86  6F72               	movwf	(util_waits_delay_secs@i+1)& (0+255),b
  2900  003A88  0E00               	movlw	0
  2901  003A8A  6F71               	movwf	util_waits_delay_secs@i& (0+255),b
  2902  003A8C  D01D               	goto	l5754
  2903  003A8E                     l5740:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2907  003A8E  0E00               	movlw	0
  2908  003A90  0100               	movlb	0	; () banked
  2909  003A92  6F74               	movwf	(util_waits_delay_secs@j+1)& (0+255),b
  2910  003A94  0E00               	movlw	0
  2911  003A96  6F73               	movwf	util_waits_delay_secs@j& (0+255),b
  2912  003A98                     l5742:
  2913                           
  2914                           ; BSR set to: 0
  2915  003A98  0100               	movlb	0	; () banked
  2916  003A9A  BF74               	btfsc	(util_waits_delay_secs@j+1)& (0+255),7,b
  2917  003A9C  D008               	goto	l5746
  2918  003A9E  0100               	movlb	0	; () banked
  2919  003AA0  5174               	movf	(util_waits_delay_secs@j+1)& (0+255),w,b
  2920  003AA2  E10F               	bnz	l5752
  2921  003AA4  0E0A               	movlw	10
  2922  003AA6  0100               	movlb	0	; () banked
  2923  003AA8  5D73               	subwf	util_waits_delay_secs@j& (0+255),w,b
  2924  003AAA  B0D8               	btfsc	status,0,c
  2925  003AAC  D00A               	goto	l5752
  2926  003AAE                     l5746:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2930  003AAE  0E00               	movlw	0
  2931  003AB0  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  2932  003AB2  0E64               	movlw	100
  2933  003AB4  6E1A               	movwf	util_waits_delay_ms@ms,c
  2934  003AB6  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  2935  003ABA  0100               	movlb	0	; () banked
  2936  003ABC  4B73               	infsnz	util_waits_delay_secs@j& (0+255),f,b
  2937  003ABE  2B74               	incf	(util_waits_delay_secs@j+1)& (0+255),f,b
  2938  003AC0  D7EB               	goto	l5742
  2939  003AC2                     l5752:
  2940                           
  2941                           ; BSR set to: 0
  2942  003AC2  0100               	movlb	0	; () banked
  2943  003AC4  4B71               	infsnz	util_waits_delay_secs@i& (0+255),f,b
  2944  003AC6  2B72               	incf	(util_waits_delay_secs@i+1)& (0+255),f,b
  2945  003AC8                     l5754:
  2946                           
  2947                           ; BSR set to: 0
  2948  003AC8  501F               	movf	util_waits_delay_secs@secs,w,c
  2949  003ACA  0100               	movlb	0	; () banked
  2950  003ACC  5D71               	subwf	util_waits_delay_secs@i& (0+255),w,b
  2951  003ACE  0100               	movlb	0	; () banked
  2952  003AD0  5172               	movf	(util_waits_delay_secs@i+1)& (0+255),w,b
  2953  003AD2  0A80               	xorlw	128
  2954  003AD4  6E21               	movwf	??_util_waits_delay_secs& (0+255),c
  2955  003AD6  5020               	movf	util_waits_delay_secs@secs+1,w,c
  2956  003AD8  0A80               	xorlw	128
  2957  003ADA  5821               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2958  003ADC  B0D8               	btfsc	status,0,c
  2959  003ADE  0012               	return	
  2960  003AE0  D7D6               	goto	l5740
  2961  003AE2                     __end_of_util_waits_delay_secs:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           intcon	equ	0xFF2
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           postdec1	equ	0xFE5
  2971                           fsr1h	equ	0xFE2
  2972                           fsr1l	equ	0xFE1
  2973                           postinc2	equ	0xFDE
  2974                           postdec2	equ	0xFDD
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _util_onewire_write_byte *****************
  2980 ;; Defined at:
  2981 ;;		line 62 in file "easat2_util_onewire.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  value           2   27[COMRAM] int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  bit7            2   31[BANK0 ] int 
  2986 ;;  bit6            2   29[BANK0 ] int 
  2987 ;;  bit5            2   27[BANK0 ] int 
  2988 ;;  bit4            2   25[BANK0 ] int 
  2989 ;;  bit3            2   23[BANK0 ] int 
  2990 ;;  bit2            2   21[BANK0 ] int 
  2991 ;;  bit1            2   19[BANK0 ] int 
  2992 ;;  bit0            2   17[BANK0 ] int 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3002 ;;      Params:         2       0       0       0       0       0       0
  3003 ;;      Locals:         0      16       0       0       0       0       0
  3004 ;;      Temps:          3       0       0       0       0       0       0
  3005 ;;      Totals:         5      16       0       0       0       0       0
  3006 ;;Total ram usage:       21 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    3
  3009 ;; This function calls:
  3010 ;;		_util_onewire_write_bit
  3011 ;; This function is called by:
  3012 ;;		_util_getTemperature
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text6
  3017  002944                     __ptext6:
  3018                           	opt stack 0
  3019  002944                     _util_onewire_write_byte:
  3020                           	opt stack 25
  3021                           
  3022                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3023                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;incstack = 0
  3027  002944  0E01               	movlw	1
  3028  002946  141C               	andwf	util_onewire_write_byte@value,w,c
  3029  002948  0100               	movlb	0	; () banked
  3030  00294A  6F71               	movwf	util_onewire_write_byte@bit0& (0+255),b
  3031  00294C  0100               	movlb	0	; () banked
  3032  00294E  6B72               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  3033                           
  3034                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  3035  002950  341D               	rlcf	util_onewire_write_byte@value+1,w,c
  3036  002952  301D               	rrcf	util_onewire_write_byte@value+1,w,c
  3037  002954  6E1F               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  3038  002956  301C               	rrcf	util_onewire_write_byte@value,w,c
  3039  002958  6E1E               	movwf	??_util_onewire_write_byte& (0+255),c
  3040  00295A  0E01               	movlw	1
  3041  00295C  141E               	andwf	??_util_onewire_write_byte,w,c
  3042  00295E  0100               	movlb	0	; () banked
  3043  002960  6F73               	movwf	util_onewire_write_byte@bit1& (0+255),b
  3044  002962  0100               	movlb	0	; () banked
  3045  002964  6B74               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  3046                           
  3047                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  3048  002966  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3049  00296A  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3050  00296E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3051  002970  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3052  002972  321E               	rrcf	??_util_onewire_write_byte,f,c
  3053  002974  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3054  002976  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3055  002978  321E               	rrcf	??_util_onewire_write_byte,f,c
  3056  00297A  0E01               	movlw	1
  3057  00297C  141E               	andwf	??_util_onewire_write_byte,w,c
  3058  00297E  0100               	movlb	0	; () banked
  3059  002980  6F75               	movwf	util_onewire_write_byte@bit2& (0+255),b
  3060  002982  0100               	movlb	0	; () banked
  3061  002984  6B76               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  3062                           
  3063                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  3064  002986  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3065  00298A  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3066  00298E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3067  002990  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3068  002992  321E               	rrcf	??_util_onewire_write_byte,f,c
  3069  002994  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3070  002996  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3071  002998  321E               	rrcf	??_util_onewire_write_byte,f,c
  3072  00299A  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3073  00299C  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3074  00299E  321E               	rrcf	??_util_onewire_write_byte,f,c
  3075  0029A0  0E01               	movlw	1
  3076  0029A2  141E               	andwf	??_util_onewire_write_byte,w,c
  3077  0029A4  0100               	movlb	0	; () banked
  3078  0029A6  6F77               	movwf	util_onewire_write_byte@bit3& (0+255),b
  3079  0029A8  0100               	movlb	0	; () banked
  3080  0029AA  6B78               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  3081                           
  3082                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  3083  0029AC  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3084  0029B0  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3085  0029B4  0E04               	movlw	4
  3086  0029B6  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3087  0029B8                     u7165:
  3088  0029B8  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3089  0029BA  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3090  0029BC  321E               	rrcf	??_util_onewire_write_byte,f,c
  3091  0029BE  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3092  0029C0  D7FB               	goto	u7165
  3093  0029C2  0E01               	movlw	1
  3094  0029C4  141E               	andwf	??_util_onewire_write_byte,w,c
  3095  0029C6  0100               	movlb	0	; () banked
  3096  0029C8  6F79               	movwf	util_onewire_write_byte@bit4& (0+255),b
  3097  0029CA  0100               	movlb	0	; () banked
  3098  0029CC  6B7A               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  3099                           
  3100                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  3101  0029CE  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3102  0029D2  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3103  0029D6  0E05               	movlw	5
  3104  0029D8  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3105  0029DA                     u7175:
  3106  0029DA  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3107  0029DC  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3108  0029DE  321E               	rrcf	??_util_onewire_write_byte,f,c
  3109  0029E0  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3110  0029E2  D7FB               	goto	u7175
  3111  0029E4  0E01               	movlw	1
  3112  0029E6  141E               	andwf	??_util_onewire_write_byte,w,c
  3113  0029E8  0100               	movlb	0	; () banked
  3114  0029EA  6F7B               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3115  0029EC  0100               	movlb	0	; () banked
  3116  0029EE  6B7C               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3117                           
  3118                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3119  0029F0  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3120  0029F4  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3121  0029F8  0E06               	movlw	6
  3122  0029FA  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3123  0029FC                     u7185:
  3124  0029FC  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3125  0029FE  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3126  002A00  321E               	rrcf	??_util_onewire_write_byte,f,c
  3127  002A02  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3128  002A04  D7FB               	goto	u7185
  3129  002A06  0E01               	movlw	1
  3130  002A08  141E               	andwf	??_util_onewire_write_byte,w,c
  3131  002A0A  0100               	movlb	0	; () banked
  3132  002A0C  6F7D               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3133  002A0E  0100               	movlb	0	; () banked
  3134  002A10  6B7E               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3135                           
  3136                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3137  002A12  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3138  002A16  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3139  002A1A  0E07               	movlw	7
  3140  002A1C  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3141  002A1E                     u7195:
  3142  002A1E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3143  002A20  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3144  002A22  321E               	rrcf	??_util_onewire_write_byte,f,c
  3145  002A24  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3146  002A26  D7FB               	goto	u7195
  3147  002A28  0E01               	movlw	1
  3148  002A2A  141E               	andwf	??_util_onewire_write_byte,w,c
  3149  002A2C  0100               	movlb	0	; () banked
  3150  002A2E  6F7F               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3151  002A30  0100               	movlb	0	; () banked
  3152  002A32  6B80               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3156  002A34  C071  F01A         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3157  002A38  C072  F01B         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3158  002A3C  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3159                           
  3160                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3161  002A40  D000               	nop2		;2 cycle nop
  3162  002A42  D000               	nop2		;2 cycle nop
  3163  002A44  F000               	nop	
  3164                           
  3165                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3166  002A46  C073  F01A         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3167  002A4A  C074  F01B         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3168  002A4E  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3169                           
  3170                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3171  002A52  D000               	nop2		;2 cycle nop
  3172  002A54  D000               	nop2		;2 cycle nop
  3173  002A56  F000               	nop	
  3174                           
  3175                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3176  002A58  C075  F01A         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3177  002A5C  C076  F01B         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3178  002A60  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3179                           
  3180                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3181  002A64  D000               	nop2		;2 cycle nop
  3182  002A66  D000               	nop2		;2 cycle nop
  3183  002A68  F000               	nop	
  3184                           
  3185                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3186  002A6A  C077  F01A         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3187  002A6E  C078  F01B         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3188  002A72  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3189                           
  3190                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3191  002A76  D000               	nop2		;2 cycle nop
  3192  002A78  D000               	nop2		;2 cycle nop
  3193  002A7A  F000               	nop	
  3194                           
  3195                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3196  002A7C  C079  F01A         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3197  002A80  C07A  F01B         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3198  002A84  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3199                           
  3200                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3201  002A88  D000               	nop2		;2 cycle nop
  3202  002A8A  D000               	nop2		;2 cycle nop
  3203  002A8C  F000               	nop	
  3204                           
  3205                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3206  002A8E  C07B  F01A         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3207  002A92  C07C  F01B         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3208  002A96  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3209                           
  3210                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3211  002A9A  D000               	nop2		;2 cycle nop
  3212  002A9C  D000               	nop2		;2 cycle nop
  3213  002A9E  F000               	nop	
  3214                           
  3215                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3216  002AA0  C07D  F01A         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3217  002AA4  C07E  F01B         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3218  002AA8  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3219                           
  3220                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3221  002AAC  D000               	nop2		;2 cycle nop
  3222  002AAE  D000               	nop2		;2 cycle nop
  3223  002AB0  F000               	nop	
  3224                           
  3225                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3226  002AB2  C07F  F01A         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3227  002AB6  C080  F01B         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3228  002ABA  EC1C  F01F         	call	_util_onewire_write_bit	;wreg free
  3229                           
  3230                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3231  002ABE  D000               	nop2		;2 cycle nop
  3232  002AC0  D000               	nop2		;2 cycle nop
  3233  002AC2  F000               	nop	
  3234  002AC4  0012               	return		;funcret
  3235  002AC6                     __end_of_util_onewire_write_byte:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           postdec1	equ	0xFE5
  3245                           fsr1h	equ	0xFE2
  3246                           fsr1l	equ	0xFE1
  3247                           postinc2	equ	0xFDE
  3248                           postdec2	equ	0xFDD
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _util_onewire_write_bit *****************
  3254 ;; Defined at:
  3255 ;;		line 121 in file "easat2_util_onewire.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  bit_in          2   25[COMRAM] int 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3269 ;;      Params:         2       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_util_onewire_write_byte
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text7
  3284  003E38                     __ptext7:
  3285                           	opt stack 0
  3286  003E38                     _util_onewire_write_bit:
  3287                           	opt stack 25
  3288                           
  3289                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3290                           
  3291                           ;incstack = 0
  3292  003E38  9692               	bcf	3986,3,c	;volatile
  3293                           
  3294                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3295  003E3A  501A               	movf	util_onewire_write_bit@bit_in,w,c
  3296  003E3C  101B               	iorwf	util_onewire_write_bit@bit_in+1,w,c
  3297  003E3E  B4D8               	btfsc	status,2,c
  3298  003E40  D009               	goto	l213
  3299                           
  3300                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3301  003E42  9680               	bcf	3968,3,c	;volatile
  3302                           
  3303                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3304  003E44  D000               	nop2		;2 cycle nop
  3305  003E46  D000               	nop2		;2 cycle nop
  3306  003E48  F000               	nop	
  3307                           
  3308                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3309  003E4A  8680               	bsf	3968,3,c	;volatile
  3310                           
  3311                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3312  003E4C  0E09               	movlw	9
  3313  003E4E                     u7647:
  3314  003E4E  2EE8               	decfsz	wreg,f,c
  3315  003E50  D7FE               	bra	u7647
  3316                           
  3317                           ;easat2_util_onewire.c: 141: } else {
  3318  003E52  0012               	return	
  3319  003E54                     l213:
  3320                           
  3321                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3322  003E54  9680               	bcf	3968,3,c	;volatile
  3323                           
  3324                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3325  003E56  0E0B               	movlw	11
  3326  003E58                     u7657:
  3327  003E58  2EE8               	decfsz	wreg,f,c
  3328  003E5A  D7FE               	bra	u7657
  3329  003E5C  D000               	nop2	
  3330                           
  3331                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3332  003E5E  8680               	bsf	3968,3,c	;volatile
  3333                           
  3334                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3335  003E60  D000               	nop2		;2 cycle nop
  3336  003E62  D000               	nop2		;2 cycle nop
  3337  003E64  F000               	nop	
  3338  003E66  0012               	return	
  3339  003E68                     __end_of_util_onewire_write_bit:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           fsr1h	equ	0xFE2
  3350                           fsr1l	equ	0xFE1
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _util_onewire_reset *****************
  3358 ;; Defined at:
  3359 ;;		line 18 in file "easat2_util_onewire.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;		None
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  presence        2   28[COMRAM] int 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2   25[COMRAM] int 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3373 ;;      Params:         2       0       0       0       0       0       0
  3374 ;;      Locals:         2       0       0       0       0       0       0
  3375 ;;      Temps:          1       0       0       0       0       0       0
  3376 ;;      Totals:         5       0       0       0       0       0       0
  3377 ;;Total ram usage:        5 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    2
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_util_getTemperature
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text8
  3388  003C62                     __ptext8:
  3389                           	opt stack 0
  3390  003C62                     _util_onewire_reset:
  3391                           	opt stack 26
  3392                           
  3393                           ;easat2_util_onewire.c: 20: int presence = 1;
  3394                           
  3395                           ;incstack = 0
  3396  003C62  0E00               	movlw	0
  3397  003C64  6E1E               	movwf	util_onewire_reset@presence+1,c
  3398  003C66  0E01               	movlw	1
  3399  003C68  6E1D               	movwf	util_onewire_reset@presence,c
  3400                           
  3401                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3402  003C6A  9692               	bcf	3986,3,c	;volatile
  3403                           
  3404                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3405  003C6C  9680               	bcf	3968,3,c	;volatile
  3406                           
  3407                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3408  003C6E  0E5D               	movlw	93
  3409  003C70                     u7667:
  3410  003C70  2EE8               	decfsz	wreg,f,c
  3411  003C72  D7FE               	bra	u7667
  3412  003C74  F000               	nop	
  3413                           
  3414                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3415  003C76  8680               	bsf	3968,3,c	;volatile
  3416                           
  3417                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3418  003C78  0E0B               	movlw	11
  3419  003C7A                     u7677:
  3420  003C7A  2EE8               	decfsz	wreg,f,c
  3421  003C7C  D7FE               	bra	u7677
  3422  003C7E  D000               	nop2	
  3423                           
  3424                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3425  003C80  8692               	bsf	3986,3,c	;volatile
  3426                           
  3427                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3428  003C82  A680               	btfss	3968,3,c	;volatile
  3429  003C84  D003               	goto	u7150
  3430  003C86  6A1C               	clrf	??_util_onewire_reset& (0+255),c
  3431  003C88  2A1C               	incf	??_util_onewire_reset& (0+255),f,c
  3432  003C8A  D001               	goto	u7158
  3433  003C8C                     u7150:
  3434  003C8C  6A1C               	clrf	??_util_onewire_reset& (0+255),c
  3435  003C8E                     u7158:
  3436  003C8E  501C               	movf	??_util_onewire_reset,w,c
  3437  003C90  6E1D               	movwf	util_onewire_reset@presence,c
  3438  003C92  6A1E               	clrf	util_onewire_reset@presence+1,c
  3439                           
  3440                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3441  003C94  0E46               	movlw	70
  3442  003C96                     u7687:
  3443  003C96  2EE8               	decfsz	wreg,f,c
  3444  003C98  D7FE               	bra	u7687
  3445                           
  3446                           ;easat2_util_onewire.c: 56: return presence;
  3447  003C9A  C01D  F01A         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3448  003C9E  C01E  F01B         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3449  003CA2  0012               	return	
  3450  003CA4                     __end_of_util_onewire_reset:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           postdec1	equ	0xFE5
  3460                           fsr1h	equ	0xFE2
  3461                           fsr1l	equ	0xFE1
  3462                           postinc2	equ	0xFDE
  3463                           postdec2	equ	0xFDD
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _util_onewire_read_byte *****************
  3469 ;; Defined at:
  3470 ;;		line 96 in file "easat2_util_onewire.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  value           2   47[BANK0 ] int 
  3475 ;;  bit7            2   45[BANK0 ] int 
  3476 ;;  bit6            2   43[BANK0 ] int 
  3477 ;;  bit5            2   41[BANK0 ] int 
  3478 ;;  bit4            2   39[BANK0 ] int 
  3479 ;;  bit3            2   37[BANK0 ] int 
  3480 ;;  bit2            2   35[BANK0 ] int 
  3481 ;;  bit1            2   33[BANK0 ] int 
  3482 ;;  bit0            2   31[BANK0 ] int 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  2   30[COMRAM] int 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3492 ;;      Params:         2       0       0       0       0       0       0
  3493 ;;      Locals:         0      18       0       0       0       0       0
  3494 ;;      Temps:          0      14       0       0       0       0       0
  3495 ;;      Totals:         2      32       0       0       0       0       0
  3496 ;;Total ram usage:       34 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    3
  3499 ;; This function calls:
  3500 ;;		_util_onewire_read_bit
  3501 ;; This function is called by:
  3502 ;;		_util_getTemperature
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text9
  3507  0027B0                     __ptext9:
  3508                           	opt stack 0
  3509  0027B0                     _util_onewire_read_byte:
  3510                           	opt stack 25
  3511                           
  3512                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3513                           ;easat2_util_onewire.c: 99: int value = 0;
  3514                           
  3515                           ;incstack = 0
  3516  0027B0  0E00               	movlw	0
  3517  0027B2  0100               	movlb	0	; () banked
  3518  0027B4  6F90               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3519  0027B6  0E00               	movlw	0
  3520  0027B8  6F8F               	movwf	util_onewire_read_byte@value& (0+255),b
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3524  0027BA  8692               	bsf	3986,3,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3528  0027BC  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3529  0027C0  C01A  F07F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3530  0027C4  C01B  F080         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3531                           
  3532                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3533  0027C8  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3534  0027CC  C01A  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3535  0027D0  C01B  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3536                           
  3537                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3538  0027D4  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3539  0027D8  C01A  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3540  0027DC  C01B  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3541                           
  3542                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3543  0027E0  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3544  0027E4  C01A  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3545  0027E8  C01B  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3546                           
  3547                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3548  0027EC  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3549  0027F0  C01A  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3550  0027F4  C01B  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3551                           
  3552                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3553  0027F8  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3554  0027FC  C01A  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3555  002800  C01B  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3556                           
  3557                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3558  002804  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3559  002808  C01A  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3560  00280C  C01B  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3561                           
  3562                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3563  002810  ECEA  F01E         	call	_util_onewire_read_bit	;wreg free
  3564  002814  C01A  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3565  002818  C01B  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3566                           
  3567                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3568                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3569  00281C  C08D  F071         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3570  002820  C08E  F072         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3571  002824  0E07               	movlw	7
  3572  002826                     u7205:
  3573  002826  90D8               	bcf	status,0,c
  3574  002828  0100               	movlb	0	; () banked
  3575  00282A  3771               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3576  00282C  3772               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3577  00282E  2EE8               	decfsz	wreg,f,c
  3578  002830  D7FA               	goto	u7205
  3579  002832  C08B  F073         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3580  002836  C08C  F074         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3581  00283A  0E06               	movlw	6
  3582  00283C                     u7215:
  3583  00283C  90D8               	bcf	status,0,c
  3584  00283E  0100               	movlb	0	; () banked
  3585  002840  3773               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3586  002842  3774               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3587  002844  2EE8               	decfsz	wreg,f,c
  3588  002846  D7FA               	goto	u7215
  3589  002848  C089  F075         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3590  00284C  C08A  F076         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3591  002850  0E05               	movlw	5
  3592  002852                     u7225:
  3593  002852  90D8               	bcf	status,0,c
  3594  002854  0100               	movlb	0	; () banked
  3595  002856  3775               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3596  002858  3776               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3597  00285A  2EE8               	decfsz	wreg,f,c
  3598  00285C  D7FA               	goto	u7225
  3599  00285E  C087  F077         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3600  002862  C088  F078         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3601  002866  0100               	movlb	0	; () banked
  3602  002868  3B77               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3603  00286A  3B78               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3604  00286C  0EF0               	movlw	240
  3605  00286E  1778               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3606  002870  5177               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3607  002872  0B0F               	andlw	15
  3608  002874  1378               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3609  002876  0EF0               	movlw	240
  3610  002878  1777               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3611  00287A  C085  F079         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3612  00287E  C086  F07A         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3613  002882  0100               	movlb	0	; () banked
  3614  002884  90D8               	bcf	status,0,c
  3615  002886  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3616  002888  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3617  00288A  0100               	movlb	0	; () banked
  3618  00288C  90D8               	bcf	status,0,c
  3619  00288E  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3620  002890  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3621  002892  0100               	movlb	0	; () banked
  3622  002894  90D8               	bcf	status,0,c
  3623  002896  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3624  002898  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3625  00289A  C083  F07B         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3626  00289E  C084  F07C         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3627  0028A2  0100               	movlb	0	; () banked
  3628  0028A4  90D8               	bcf	status,0,c
  3629  0028A6  377B               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3630  0028A8  377C               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3631  0028AA  0100               	movlb	0	; () banked
  3632  0028AC  90D8               	bcf	status,0,c
  3633  0028AE  377B               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3634  0028B0  377C               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3635  0028B2  C081  F07D         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3636  0028B6  C082  F07E         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3637  0028BA  90D8               	bcf	status,0,c
  3638  0028BC  0100               	movlb	0	; () banked
  3639  0028BE  377D               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3640  0028C0  377E               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3641  0028C2  0100               	movlb	0	; () banked
  3642  0028C4  517B               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3643  0028C6  0100               	movlb	0	; () banked
  3644  0028C8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3645  0028CA  0100               	movlb	0	; () banked
  3646  0028CC  517C               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3647  0028CE  0100               	movlb	0	; () banked
  3648  0028D0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3649  0028D2  0100               	movlb	0	; () banked
  3650  0028D4  5179               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3651  0028D6  0100               	movlb	0	; () banked
  3652  0028D8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3653  0028DA  0100               	movlb	0	; () banked
  3654  0028DC  517A               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3655  0028DE  0100               	movlb	0	; () banked
  3656  0028E0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3657  0028E2  0100               	movlb	0	; () banked
  3658  0028E4  5177               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3659  0028E6  0100               	movlb	0	; () banked
  3660  0028E8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3661  0028EA  0100               	movlb	0	; () banked
  3662  0028EC  5178               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3663  0028EE  0100               	movlb	0	; () banked
  3664  0028F0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3665  0028F2  0100               	movlb	0	; () banked
  3666  0028F4  5175               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3667  0028F6  0100               	movlb	0	; () banked
  3668  0028F8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3669  0028FA  0100               	movlb	0	; () banked
  3670  0028FC  5176               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3671  0028FE  0100               	movlb	0	; () banked
  3672  002900  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3673  002902  0100               	movlb	0	; () banked
  3674  002904  5173               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3675  002906  0100               	movlb	0	; () banked
  3676  002908  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3677  00290A  0100               	movlb	0	; () banked
  3678  00290C  5174               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3679  00290E  0100               	movlb	0	; () banked
  3680  002910  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3681  002912  0100               	movlb	0	; () banked
  3682  002914  5171               	movf	??_util_onewire_read_byte& (0+255),w,b
  3683  002916  0100               	movlb	0	; () banked
  3684  002918  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3685  00291A  0100               	movlb	0	; () banked
  3686  00291C  5172               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3687  00291E  0100               	movlb	0	; () banked
  3688  002920  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3689  002922  0100               	movlb	0	; () banked
  3690  002924  517F               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3691  002926  0100               	movlb	0	; () banked
  3692  002928  257D               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3693  00292A  0100               	movlb	0	; () banked
  3694  00292C  6F8F               	movwf	util_onewire_read_byte@value& (0+255),b
  3695  00292E  0100               	movlb	0	; () banked
  3696  002930  5180               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3697  002932  0100               	movlb	0	; () banked
  3698  002934  217E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3699  002936  0100               	movlb	0	; () banked
  3700  002938  6F90               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;easat2_util_onewire.c: 116: return value;
  3704  00293A  C08F  F01F         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3705  00293E  C090  F020         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3706  002942  0012               	return	
  3707  002944                     __end_of_util_onewire_read_byte:
  3708                           	opt stack 0
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           intcon	equ	0xFF2
  3714                           postinc0	equ	0xFEE
  3715                           wreg	equ	0xFE8
  3716                           postdec1	equ	0xFE5
  3717                           fsr1h	equ	0xFE2
  3718                           fsr1l	equ	0xFE1
  3719                           postinc2	equ	0xFDE
  3720                           postdec2	equ	0xFDD
  3721                           fsr2h	equ	0xFDA
  3722                           fsr2l	equ	0xFD9
  3723                           status	equ	0xFD8
  3724                           
  3725 ;; *************** function _util_onewire_read_bit *****************
  3726 ;; Defined at:
  3727 ;;		line 162 in file "easat2_util_onewire.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  value           2   28[COMRAM] int 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2   25[COMRAM] int 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3741 ;;      Params:         2       0       0       0       0       0       0
  3742 ;;      Locals:         2       0       0       0       0       0       0
  3743 ;;      Temps:          1       0       0       0       0       0       0
  3744 ;;      Totals:         5       0       0       0       0       0       0
  3745 ;;Total ram usage:        5 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_util_onewire_read_byte
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text10
  3756  003DD4                     __ptext10:
  3757                           	opt stack 0
  3758  003DD4                     _util_onewire_read_bit:
  3759                           	opt stack 25
  3760                           
  3761                           ;easat2_util_onewire.c: 164: int value = 0;
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;incstack = 0
  3765  003DD4  0E00               	movlw	0
  3766  003DD6  6E1E               	movwf	util_onewire_read_bit@value+1,c
  3767  003DD8  0E00               	movlw	0
  3768  003DDA  6E1D               	movwf	util_onewire_read_bit@value,c
  3769                           
  3770                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3771  003DDC  9692               	bcf	3986,3,c	;volatile
  3772                           
  3773                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3774  003DDE  9680               	bcf	3968,3,c	;volatile
  3775                           
  3776                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3777                           
  3778                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3779  003DE0  8680               	bsf	3968,3,c	;volatile
  3780                           
  3781                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3782  003DE2  D000               	nop2		;2 cycle nop
  3783                           
  3784                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3785  003DE4  A680               	btfss	3968,3,c	;volatile
  3786  003DE6  D003               	goto	u6400
  3787  003DE8  6A1C               	clrf	??_util_onewire_read_bit& (0+255),c
  3788  003DEA  2A1C               	incf	??_util_onewire_read_bit& (0+255),f,c
  3789  003DEC  D001               	goto	u6408
  3790  003DEE                     u6400:
  3791  003DEE  6A1C               	clrf	??_util_onewire_read_bit& (0+255),c
  3792  003DF0                     u6408:
  3793  003DF0  501C               	movf	??_util_onewire_read_bit,w,c
  3794  003DF2  6E1D               	movwf	util_onewire_read_bit@value,c
  3795  003DF4  6A1E               	clrf	util_onewire_read_bit@value+1,c
  3796                           
  3797                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3798  003DF6  0E0A               	movlw	10
  3799  003DF8                     u7697:
  3800  003DF8  2EE8               	decfsz	wreg,f,c
  3801  003DFA  D7FE               	bra	u7697
  3802                           
  3803                           ;easat2_util_onewire.c: 187: return value;
  3804  003DFC  C01D  F01A         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3805  003E00  C01E  F01B         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3806  003E04  0012               	return	
  3807  003E06                     __end_of_util_onewire_read_bit:
  3808                           	opt stack 0
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           intcon	equ	0xFF2
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec1	equ	0xFE5
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function ___ftdiv *****************
  3826 ;; Defined at:
  3827 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  f1              3   21[BANK0 ] float 
  3830 ;;  f2              3   24[BANK0 ] float 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  f3              3   31[BANK0 ] float 
  3833 ;;  sign            1   35[BANK0 ] unsigned char 
  3834 ;;  exp             1   34[BANK0 ] unsigned char 
  3835 ;;  cntr            1   30[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  3   21[BANK0 ] float 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3845 ;;      Params:         0       6       0       0       0       0       0
  3846 ;;      Locals:         0       6       0       0       0       0       0
  3847 ;;      Temps:          0       3       0       0       0       0       0
  3848 ;;      Totals:         0      15       0       0       0       0       0
  3849 ;;Total ram usage:       15 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    3
  3852 ;; This function calls:
  3853 ;;		___ftpack
  3854 ;; This function is called by:
  3855 ;;		_util_getTemperature
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text11
  3860  002EDE                     __ptext11:
  3861                           	opt stack 0
  3862  002EDE                     ___ftdiv:
  3863                           	opt stack 25
  3864                           
  3865                           ;incstack = 0
  3866  002EDE  C077  F07B         	movff	___ftdiv@f1+2,??___ftdiv
  3867  002EE2  0100               	movlb	0	; () banked
  3868  002EE4  6B7C               	clrf	(??___ftdiv+1)& (0+255),b
  3869  002EE6  6B7D               	clrf	(??___ftdiv+2)& (0+255),b
  3870  002EE8  0100               	movlb	0	; () banked
  3871  002EEA  3576               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3872  002EEC  0100               	movlb	0	; () banked
  3873  002EEE  377B               	rlcf	??___ftdiv& (0+255),f,b
  3874  002EF0  E301               	bnc	u7271
  3875  002EF2  817C               	bsf	(??___ftdiv+1)& (0+255),0,b
  3876  002EF4                     u7271:
  3877  002EF4  0100               	movlb	0	; () banked
  3878  002EF6  517B               	movf	??___ftdiv& (0+255),w,b
  3879  002EF8  0100               	movlb	0	; () banked
  3880  002EFA  6F82               	movwf	___ftdiv@exp& (0+255),b
  3881  002EFC  0100               	movlb	0	; () banked
  3882  002EFE  5182               	movf	___ftdiv@exp& (0+255),w,b
  3883  002F00  A4D8               	btfss	status,2,c
  3884  002F02  D00A               	goto	l6356
  3885                           
  3886                           ; BSR set to: 0
  3887  002F04  0E00               	movlw	0
  3888  002F06  0100               	movlb	0	; () banked
  3889  002F08  6F75               	movwf	?___ftdiv& (0+255),b
  3890  002F0A  0E00               	movlw	0
  3891  002F0C  0100               	movlb	0	; () banked
  3892  002F0E  6F76               	movwf	(?___ftdiv+1)& (0+255),b
  3893  002F10  0E00               	movlw	0
  3894  002F12  0100               	movlb	0	; () banked
  3895  002F14  6F77               	movwf	(?___ftdiv+2)& (0+255),b
  3896                           
  3897                           ; BSR set to: 0
  3898  002F16  0012               	return	
  3899  002F18                     l6356:
  3900                           
  3901                           ; BSR set to: 0
  3902  002F18  C07A  F07B         	movff	___ftdiv@f2+2,??___ftdiv
  3903  002F1C  0100               	movlb	0	; () banked
  3904  002F1E  6B7C               	clrf	(??___ftdiv+1)& (0+255),b
  3905  002F20  6B7D               	clrf	(??___ftdiv+2)& (0+255),b
  3906  002F22  0100               	movlb	0	; () banked
  3907  002F24  3579               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3908  002F26  0100               	movlb	0	; () banked
  3909  002F28  377B               	rlcf	??___ftdiv& (0+255),f,b
  3910  002F2A  E301               	bnc	u7291
  3911  002F2C  817C               	bsf	(??___ftdiv+1)& (0+255),0,b
  3912  002F2E                     u7291:
  3913  002F2E  0100               	movlb	0	; () banked
  3914  002F30  517B               	movf	??___ftdiv& (0+255),w,b
  3915  002F32  0100               	movlb	0	; () banked
  3916  002F34  6F83               	movwf	___ftdiv@sign& (0+255),b
  3917  002F36  0100               	movlb	0	; () banked
  3918  002F38  5183               	movf	___ftdiv@sign& (0+255),w,b
  3919  002F3A  A4D8               	btfss	status,2,c
  3920  002F3C  D00A               	goto	l6362
  3921                           
  3922                           ; BSR set to: 0
  3923  002F3E  0E00               	movlw	0
  3924  002F40  0100               	movlb	0	; () banked
  3925  002F42  6F75               	movwf	?___ftdiv& (0+255),b
  3926  002F44  0E00               	movlw	0
  3927  002F46  0100               	movlb	0	; () banked
  3928  002F48  6F76               	movwf	(?___ftdiv+1)& (0+255),b
  3929  002F4A  0E00               	movlw	0
  3930  002F4C  0100               	movlb	0	; () banked
  3931  002F4E  6F77               	movwf	(?___ftdiv+2)& (0+255),b
  3932                           
  3933                           ; BSR set to: 0
  3934  002F50  0012               	return	
  3935  002F52                     l6362:
  3936                           
  3937                           ; BSR set to: 0
  3938  002F52  0E00               	movlw	0
  3939  002F54  0100               	movlb	0	; () banked
  3940  002F56  6F7F               	movwf	___ftdiv@f3& (0+255),b
  3941  002F58  0E00               	movlw	0
  3942  002F5A  0100               	movlb	0	; () banked
  3943  002F5C  6F80               	movwf	(___ftdiv@f3+1)& (0+255),b
  3944  002F5E  0E00               	movlw	0
  3945  002F60  0100               	movlb	0	; () banked
  3946  002F62  6F81               	movwf	(___ftdiv@f3+2)& (0+255),b
  3947                           
  3948                           ; BSR set to: 0
  3949  002F64  0100               	movlb	0	; () banked
  3950  002F66  5183               	movf	___ftdiv@sign& (0+255),w,b
  3951  002F68  0F89               	addlw	137
  3952  002F6A  0100               	movlb	0	; () banked
  3953  002F6C  5F82               	subwf	___ftdiv@exp& (0+255),f,b
  3954                           
  3955                           ; BSR set to: 0
  3956  002F6E  C077  F083         	movff	___ftdiv@f1+2,___ftdiv@sign
  3957                           
  3958                           ; BSR set to: 0
  3959  002F72  0100               	movlb	0	; () banked
  3960  002F74  517A               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3961  002F76  0100               	movlb	0	; () banked
  3962  002F78  1B83               	xorwf	___ftdiv@sign& (0+255),f,b
  3963                           
  3964                           ; BSR set to: 0
  3965  002F7A  0E80               	movlw	128
  3966  002F7C  0100               	movlb	0	; () banked
  3967  002F7E  1783               	andwf	___ftdiv@sign& (0+255),f,b
  3968                           
  3969                           ; BSR set to: 0
  3970  002F80  0100               	movlb	0	; () banked
  3971  002F82  8F76               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3972                           
  3973                           ; BSR set to: 0
  3974  002F84  0EFF               	movlw	255
  3975  002F86  0100               	movlb	0	; () banked
  3976  002F88  1775               	andwf	___ftdiv@f1& (0+255),f,b
  3977  002F8A  0EFF               	movlw	255
  3978  002F8C  0100               	movlb	0	; () banked
  3979  002F8E  1776               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3980  002F90  0E00               	movlw	0
  3981  002F92  0100               	movlb	0	; () banked
  3982  002F94  1777               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3983                           
  3984                           ; BSR set to: 0
  3985  002F96  0100               	movlb	0	; () banked
  3986  002F98  8F79               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3987                           
  3988                           ; BSR set to: 0
  3989  002F9A  0EFF               	movlw	255
  3990  002F9C  0100               	movlb	0	; () banked
  3991  002F9E  1778               	andwf	___ftdiv@f2& (0+255),f,b
  3992  002FA0  0EFF               	movlw	255
  3993  002FA2  0100               	movlb	0	; () banked
  3994  002FA4  1779               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3995  002FA6  0E00               	movlw	0
  3996  002FA8  0100               	movlb	0	; () banked
  3997  002FAA  177A               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3998                           
  3999                           ; BSR set to: 0
  4000  002FAC  0E18               	movlw	24
  4001  002FAE  0100               	movlb	0	; () banked
  4002  002FB0  6F7E               	movwf	___ftdiv@cntr& (0+255),b
  4003  002FB2                     l6382:
  4004                           
  4005                           ; BSR set to: 0
  4006  002FB2  0100               	movlb	0	; () banked
  4007  002FB4  90D8               	bcf	status,0,c
  4008  002FB6  377F               	rlcf	___ftdiv@f3& (0+255),f,b
  4009  002FB8  3780               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4010  002FBA  3781               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4011                           
  4012                           ; BSR set to: 0
  4013  002FBC  0100               	movlb	0	; () banked
  4014  002FBE  5178               	movf	___ftdiv@f2& (0+255),w,b
  4015  002FC0  0100               	movlb	0	; () banked
  4016  002FC2  5D75               	subwf	___ftdiv@f1& (0+255),w,b
  4017  002FC4  0100               	movlb	0	; () banked
  4018  002FC6  5179               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4019  002FC8  0100               	movlb	0	; () banked
  4020  002FCA  5976               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4021  002FCC  0100               	movlb	0	; () banked
  4022  002FCE  517A               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4023  002FD0  0100               	movlb	0	; () banked
  4024  002FD2  5977               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4025  002FD4  A0D8               	btfss	status,0,c
  4026  002FD6  D00E               	goto	l1029
  4027                           
  4028                           ; BSR set to: 0
  4029  002FD8  0100               	movlb	0	; () banked
  4030  002FDA  5178               	movf	___ftdiv@f2& (0+255),w,b
  4031  002FDC  0100               	movlb	0	; () banked
  4032  002FDE  5F75               	subwf	___ftdiv@f1& (0+255),f,b
  4033  002FE0  0100               	movlb	0	; () banked
  4034  002FE2  5179               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4035  002FE4  0100               	movlb	0	; () banked
  4036  002FE6  5B76               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4037  002FE8  0100               	movlb	0	; () banked
  4038  002FEA  517A               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4039  002FEC  0100               	movlb	0	; () banked
  4040  002FEE  5B77               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4041                           
  4042                           ; BSR set to: 0
  4043  002FF0  0100               	movlb	0	; () banked
  4044  002FF2  817F               	bsf	___ftdiv@f3& (0+255),0,b
  4045  002FF4                     l1029:
  4046                           
  4047                           ; BSR set to: 0
  4048  002FF4  0100               	movlb	0	; () banked
  4049  002FF6  90D8               	bcf	status,0,c
  4050  002FF8  3775               	rlcf	___ftdiv@f1& (0+255),f,b
  4051  002FFA  3776               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4052  002FFC  3777               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4053                           
  4054                           ; BSR set to: 0
  4055  002FFE  0100               	movlb	0	; () banked
  4056  003000  2F7E               	decfsz	___ftdiv@cntr& (0+255),f,b
  4057  003002  D7D7               	goto	l6382
  4058                           
  4059                           ; BSR set to: 0
  4060                           
  4061                           ; BSR set to: 0
  4062  003004  C07F  F01A         	movff	___ftdiv@f3,___ftpack@arg
  4063  003008  C080  F01B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4064  00300C  C081  F01C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4065  003010  C082  F01D         	movff	___ftdiv@exp,___ftpack@exp
  4066  003014  C083  F01E         	movff	___ftdiv@sign,___ftpack@sign
  4067  003018  EC12  F01B         	call	___ftpack	;wreg free
  4068  00301C  C01A  F075         	movff	?___ftpack,?___ftdiv
  4069  003020  C01B  F076         	movff	?___ftpack+1,?___ftdiv+1
  4070  003024  C01C  F077         	movff	?___ftpack+2,?___ftdiv+2
  4071  003028  0012               	return	
  4072  00302A                     __end_of___ftdiv:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function ___awtoft *****************
  4091 ;; Defined at:
  4092 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  c               2   17[BANK0 ] int 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  sign            1   20[BANK0 ] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  3   17[BANK0 ] float 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4106 ;;      Params:         0       3       0       0       0       0       0
  4107 ;;      Locals:         0       1       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0
  4109 ;;      Totals:         0       4       0       0       0       0       0
  4110 ;;Total ram usage:        4 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    3
  4113 ;; This function calls:
  4114 ;;		___ftpack
  4115 ;; This function is called by:
  4116 ;;		_util_getTemperature
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text12
  4121  003D26                     __ptext12:
  4122                           	opt stack 0
  4123  003D26                     ___awtoft:
  4124                           	opt stack 25
  4125                           
  4126                           ;incstack = 0
  4127  003D26  0E00               	movlw	0
  4128  003D28  0100               	movlb	0	; () banked
  4129  003D2A  6F74               	movwf	___awtoft@sign& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132  003D2C  0100               	movlb	0	; () banked
  4133  003D2E  AF72               	btfss	(___awtoft@c+1)& (0+255),7,b
  4134  003D30  D008               	goto	l6404
  4135                           
  4136                           ; BSR set to: 0
  4137  003D32  0100               	movlb	0	; () banked
  4138  003D34  6D71               	negf	___awtoft@c& (0+255),b
  4139  003D36  1F72               	comf	(___awtoft@c+1)& (0+255),f,b
  4140  003D38  B0D8               	btfsc	status,0,c
  4141  003D3A  2B72               	incf	(___awtoft@c+1)& (0+255),f,b
  4142                           
  4143                           ; BSR set to: 0
  4144  003D3C  0E01               	movlw	1
  4145  003D3E  0100               	movlb	0	; () banked
  4146  003D40  6F74               	movwf	___awtoft@sign& (0+255),b
  4147  003D42                     l6404:
  4148                           
  4149                           ; BSR set to: 0
  4150  003D42  C071  F01A         	movff	___awtoft@c,___ftpack@arg
  4151  003D46  C072  F01B         	movff	___awtoft@c+1,___ftpack@arg+1
  4152  003D4A  6A1C               	clrf	___ftpack@arg+2,c
  4153  003D4C  0E8E               	movlw	142
  4154  003D4E  6E1D               	movwf	___ftpack@exp,c
  4155  003D50  C074  F01E         	movff	___awtoft@sign,___ftpack@sign
  4156  003D54  EC12  F01B         	call	___ftpack	;wreg free
  4157  003D58  C01A  F071         	movff	?___ftpack,?___awtoft
  4158  003D5C  C01B  F072         	movff	?___ftpack+1,?___awtoft+1
  4159  003D60  C01C  F073         	movff	?___ftpack+2,?___awtoft+2
  4160  003D64  0012               	return	
  4161  003D66                     __end_of___awtoft:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           intcon	equ	0xFF2
  4168                           postinc0	equ	0xFEE
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           fsr1h	equ	0xFE2
  4172                           fsr1l	equ	0xFE1
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _util_getSolarCurrent *****************
  4180 ;; Defined at:
  4181 ;;		line 52 in file "easat2_util_inputs.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  solarCurrent    3   71[BANK0 ] float 
  4186 ;;  value           3   68[BANK0 ] float 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   66[BANK0 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4196 ;;      Params:         0       2       0       0       0       0       0
  4197 ;;      Locals:         0       6       0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0
  4199 ;;      Totals:         0       8       0       0       0       0       0
  4200 ;;Total ram usage:        8 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    4
  4203 ;; This function calls:
  4204 ;;		___ftmul
  4205 ;;		___fttol
  4206 ;;		___lwtoft
  4207 ;; This function is called by:
  4208 ;;		_main_loop
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text13
  4213  003258                     __ptext13:
  4214                           	opt stack 0
  4215  003258                     _util_getSolarCurrent:
  4216                           	opt stack 25
  4217                           
  4218                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4219                           
  4220                           ;incstack = 0
  4221  003258  0E00               	movlw	0
  4222  00325A  0100               	movlb	0	; () banked
  4223  00325C  6FA4               	movwf	util_getSolarCurrent@value& (0+255),b
  4224  00325E  0E00               	movlw	0
  4225  003260  0100               	movlb	0	; () banked
  4226  003262  6FA5               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4227  003264  0E00               	movlw	0
  4228  003266  0100               	movlb	0	; () banked
  4229  003268  6FA6               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4230  00326A  0E00               	movlw	0
  4231  00326C  0100               	movlb	0	; () banked
  4232  00326E  6FA7               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4233  003270  0E00               	movlw	0
  4234  003272  0100               	movlb	0	; () banked
  4235  003274  6FA8               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4236  003276  0E00               	movlw	0
  4237  003278  0100               	movlb	0	; () banked
  4238  00327A  6FA9               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4242  00327C  84C2               	bsf	4034,2,c	;volatile
  4243  00327E  96C2               	bcf	4034,3,c	;volatile
  4244  003280  98C2               	bcf	4034,4,c	;volatile
  4245  003282  9AC2               	bcf	4034,5,c	;volatile
  4246  003284  9CC2               	bcf	4034,6,c	;volatile
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4250  003286  80C2               	bsf	4034,0,c	;volatile
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4254  003288  9C9E               	bcf	3998,6,c	;volatile
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4258  00328A  82C2               	bsf	4034,1,c	;volatile
  4259  00328C                     l156:
  4260  00328C  AC9E               	btfss	3998,6,c	;volatile
  4261  00328E  D7FE               	goto	l156
  4262                           
  4263                           ;easat2_util_inputs.c: 63: value = ADRES;
  4264  003290  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4265  003294  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4266  003298  EC8B  F01F         	call	___lwtoft	;wreg free
  4267  00329C  C071  F0A4         	movff	?___lwtoft,util_getSolarCurrent@value
  4268  0032A0  C072  F0A5         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4269  0032A4  C073  F0A6         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4270                           
  4271                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4272  0032A8  9C9E               	bcf	3998,6,c	;volatile
  4273                           
  4274                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4275  0032AA  90C2               	bcf	4034,0,c	;volatile
  4276                           
  4277                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4278  0032AC  C0A4  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4279  0032B0  C0A5  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4280  0032B4  C0A6  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4281  0032B8  0E33               	movlw	51
  4282  0032BA  0100               	movlb	0	; () banked
  4283  0032BC  6F80               	movwf	___ftmul@f2& (0+255),b
  4284  0032BE  0E03               	movlw	3
  4285  0032C0  0100               	movlb	0	; () banked
  4286  0032C2  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4287  0032C4  0E3B               	movlw	59
  4288  0032C6  0100               	movlb	0	; () banked
  4289  0032C8  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4290  0032CA  EC17  F016         	call	___ftmul	;wreg free
  4291  0032CE  C07D  F0A7         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4292  0032D2  C07E  F0A8         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4293  0032D6  C07F  F0A9         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4294                           
  4295                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4296  0032DA  C0A7  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4297  0032DE  C0A8  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4298  0032E2  C0A9  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4299  0032E6  0E00               	movlw	0
  4300  0032E8  0100               	movlb	0	; () banked
  4301  0032EA  6F80               	movwf	___ftmul@f2& (0+255),b
  4302  0032EC  0E80               	movlw	128
  4303  0032EE  0100               	movlb	0	; () banked
  4304  0032F0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4305  0032F2  0E3F               	movlw	63
  4306  0032F4  0100               	movlb	0	; () banked
  4307  0032F6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4308  0032F8  EC17  F016         	call	___ftmul	;wreg free
  4309  0032FC  C07D  F0A7         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4310  003300  C07E  F0A8         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4311  003304  C07F  F0A9         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4312                           
  4313                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4314  003308  C0A7  F093         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4315  00330C  C0A8  F094         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4316  003310  C0A9  F095         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4317  003314  EC15  F018         	call	___fttol	;wreg free
  4318  003318  C093  F0A2         	movff	?___fttol,?_util_getSolarCurrent
  4319  00331C  C094  F0A3         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4320  003320  0012               	return	
  4321  003322                     __end_of_util_getSolarCurrent:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           intcon	equ	0xFF2
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           postinc2	equ	0xFDE
  4334                           postdec2	equ	0xFDD
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function _util_getBatteryVoltage *****************
  4340 ;; Defined at:
  4341 ;;		line 19 in file "easat2_util_inputs.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  voltage         3   50[BANK0 ] float 
  4346 ;;  value           3   47[BANK0 ] float 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  3   44[BANK0 ] float 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4356 ;;      Params:         0       3       0       0       0       0       0
  4357 ;;      Locals:         0       6       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0
  4359 ;;      Totals:         0       9       0       0       0       0       0
  4360 ;;Total ram usage:        9 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    4
  4363 ;; This function calls:
  4364 ;;		___ftmul
  4365 ;;		___lwtoft
  4366 ;; This function is called by:
  4367 ;;		_main_loop
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text14
  4372  0033EC                     __ptext14:
  4373                           	opt stack 0
  4374  0033EC                     _util_getBatteryVoltage:
  4375                           	opt stack 25
  4376                           
  4377                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4378                           
  4379                           ;incstack = 0
  4380  0033EC  0E00               	movlw	0
  4381  0033EE  0100               	movlb	0	; () banked
  4382  0033F0  6F8F               	movwf	util_getBatteryVoltage@value& (0+255),b
  4383  0033F2  0E00               	movlw	0
  4384  0033F4  0100               	movlb	0	; () banked
  4385  0033F6  6F90               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4386  0033F8  0E00               	movlw	0
  4387  0033FA  0100               	movlb	0	; () banked
  4388  0033FC  6F91               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4389  0033FE  0E00               	movlw	0
  4390  003400  0100               	movlb	0	; () banked
  4391  003402  6F92               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4392  003404  0E00               	movlw	0
  4393  003406  0100               	movlb	0	; () banked
  4394  003408  6F93               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4395  00340A  0E00               	movlw	0
  4396  00340C  0100               	movlb	0	; () banked
  4397  00340E  6F94               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4401  003410  94C2               	bcf	4034,2,c	;volatile
  4402  003412  96C2               	bcf	4034,3,c	;volatile
  4403  003414  98C2               	bcf	4034,4,c	;volatile
  4404  003416  9AC2               	bcf	4034,5,c	;volatile
  4405  003418  9CC2               	bcf	4034,6,c	;volatile
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4409  00341A  80C2               	bsf	4034,0,c	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4413  00341C  9C9E               	bcf	3998,6,c	;volatile
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4417  00341E  82C2               	bsf	4034,1,c	;volatile
  4418  003420                     l150:
  4419  003420  AC9E               	btfss	3998,6,c	;volatile
  4420  003422  D7FE               	goto	l150
  4421                           
  4422                           ;easat2_util_inputs.c: 30: value = ADRES;
  4423  003424  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4424  003428  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4425  00342C  EC8B  F01F         	call	___lwtoft	;wreg free
  4426  003430  C071  F08F         	movff	?___lwtoft,util_getBatteryVoltage@value
  4427  003434  C072  F090         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4428  003438  C073  F091         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4429                           
  4430                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4431  00343C  9C9E               	bcf	3998,6,c	;volatile
  4432                           
  4433                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4434  00343E  90C2               	bcf	4034,0,c	;volatile
  4435                           
  4436                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4437  003440  C08F  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4438  003444  C090  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4439  003448  C091  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4440  00344C  0E33               	movlw	51
  4441  00344E  0100               	movlb	0	; () banked
  4442  003450  6F80               	movwf	___ftmul@f2& (0+255),b
  4443  003452  0E03               	movlw	3
  4444  003454  0100               	movlb	0	; () banked
  4445  003456  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4446  003458  0E3B               	movlw	59
  4447  00345A  0100               	movlb	0	; () banked
  4448  00345C  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4449  00345E  EC17  F016         	call	___ftmul	;wreg free
  4450  003462  C07D  F092         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4451  003466  C07E  F093         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4452  00346A  C07F  F094         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4453                           
  4454                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4455  00346E  C092  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4456  003472  C093  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4457  003476  C094  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4458  00347A  0E66               	movlw	102
  4459  00347C  0100               	movlb	0	; () banked
  4460  00347E  6F80               	movwf	___ftmul@f2& (0+255),b
  4461  003480  0EB6               	movlw	182
  4462  003482  0100               	movlb	0	; () banked
  4463  003484  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4464  003486  0E40               	movlw	64
  4465  003488  0100               	movlb	0	; () banked
  4466  00348A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4467  00348C  EC17  F016         	call	___ftmul	;wreg free
  4468  003490  C07D  F092         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4469  003494  C07E  F093         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4470  003498  C07F  F094         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4471                           
  4472                           ;easat2_util_inputs.c: 46: return voltage;
  4473  00349C  C092  F08C         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4474  0034A0  C093  F08D         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4475  0034A4  C094  F08E         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4476  0034A8  0012               	return	
  4477  0034AA                     __end_of_util_getBatteryVoltage:
  4478                           	opt stack 0
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           postdec1	equ	0xFE5
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           postinc2	equ	0xFDE
  4490                           postdec2	equ	0xFDD
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           status	equ	0xFD8
  4494                           
  4495 ;; *************** function _util_getBatteryCurrent *****************
  4496 ;; Defined at:
  4497 ;;		line 85 in file "easat2_util_inputs.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  batteryCurre    3   71[BANK0 ] float 
  4502 ;;  value           3   68[BANK0 ] float 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  2   66[BANK0 ] int 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4512 ;;      Params:         0       2       0       0       0       0       0
  4513 ;;      Locals:         0       6       0       0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0
  4515 ;;      Totals:         0       8       0       0       0       0       0
  4516 ;;Total ram usage:        8 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    4
  4519 ;; This function calls:
  4520 ;;		___ftmul
  4521 ;;		___fttol
  4522 ;;		___lwtoft
  4523 ;; This function is called by:
  4524 ;;		_main_loop
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text15
  4529  003322                     __ptext15:
  4530                           	opt stack 0
  4531  003322                     _util_getBatteryCurrent:
  4532                           	opt stack 25
  4533                           
  4534                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4535                           
  4536                           ;incstack = 0
  4537  003322  0E00               	movlw	0
  4538  003324  0100               	movlb	0	; () banked
  4539  003326  6FA4               	movwf	util_getBatteryCurrent@value& (0+255),b
  4540  003328  0E00               	movlw	0
  4541  00332A  0100               	movlb	0	; () banked
  4542  00332C  6FA5               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4543  00332E  0E00               	movlw	0
  4544  003330  0100               	movlb	0	; () banked
  4545  003332  6FA6               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4546  003334  0E00               	movlw	0
  4547  003336  0100               	movlb	0	; () banked
  4548  003338  6FA7               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4549  00333A  0E00               	movlw	0
  4550  00333C  0100               	movlb	0	; () banked
  4551  00333E  6FA8               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4552  003340  0E00               	movlw	0
  4553  003342  0100               	movlb	0	; () banked
  4554  003344  6FA9               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4558  003346  94C2               	bcf	4034,2,c	;volatile
  4559  003348  96C2               	bcf	4034,3,c	;volatile
  4560  00334A  88C2               	bsf	4034,4,c	;volatile
  4561  00334C  8AC2               	bsf	4034,5,c	;volatile
  4562  00334E  9CC2               	bcf	4034,6,c	;volatile
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4566  003350  80C2               	bsf	4034,0,c	;volatile
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4570  003352  9C9E               	bcf	3998,6,c	;volatile
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4574  003354  82C2               	bsf	4034,1,c	;volatile
  4575  003356                     l162:
  4576  003356  AC9E               	btfss	3998,6,c	;volatile
  4577  003358  D7FE               	goto	l162
  4578                           
  4579                           ;easat2_util_inputs.c: 96: value = ADRES;
  4580  00335A  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4581  00335E  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4582  003362  EC8B  F01F         	call	___lwtoft	;wreg free
  4583  003366  C071  F0A4         	movff	?___lwtoft,util_getBatteryCurrent@value
  4584  00336A  C072  F0A5         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4585  00336E  C073  F0A6         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4586                           
  4587                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4588  003372  9C9E               	bcf	3998,6,c	;volatile
  4589                           
  4590                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4591  003374  90C2               	bcf	4034,0,c	;volatile
  4592                           
  4593                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4594  003376  C0A4  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4595  00337A  C0A5  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4596  00337E  C0A6  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4597  003382  0E33               	movlw	51
  4598  003384  0100               	movlb	0	; () banked
  4599  003386  6F80               	movwf	___ftmul@f2& (0+255),b
  4600  003388  0E03               	movlw	3
  4601  00338A  0100               	movlb	0	; () banked
  4602  00338C  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4603  00338E  0E3B               	movlw	59
  4604  003390  0100               	movlb	0	; () banked
  4605  003392  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4606  003394  EC17  F016         	call	___ftmul	;wreg free
  4607  003398  C07D  F0A7         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4608  00339C  C07E  F0A8         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4609  0033A0  C07F  F0A9         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4610                           
  4611                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4612  0033A4  C0A7  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4613  0033A8  C0A8  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4614  0033AC  C0A9  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4615  0033B0  0E00               	movlw	0
  4616  0033B2  0100               	movlb	0	; () banked
  4617  0033B4  6F80               	movwf	___ftmul@f2& (0+255),b
  4618  0033B6  0E80               	movlw	128
  4619  0033B8  0100               	movlb	0	; () banked
  4620  0033BA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4621  0033BC  0E3F               	movlw	63
  4622  0033BE  0100               	movlb	0	; () banked
  4623  0033C0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4624  0033C2  EC17  F016         	call	___ftmul	;wreg free
  4625  0033C6  C07D  F0A7         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4626  0033CA  C07E  F0A8         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4627  0033CE  C07F  F0A9         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4628                           
  4629                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4630  0033D2  C0A7  F093         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4631  0033D6  C0A8  F094         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4632  0033DA  C0A9  F095         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4633  0033DE  EC15  F018         	call	___fttol	;wreg free
  4634  0033E2  C093  F0A2         	movff	?___fttol,?_util_getBatteryCurrent
  4635  0033E6  C094  F0A3         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4636  0033EA  0012               	return	
  4637  0033EC                     __end_of_util_getBatteryCurrent:
  4638                           	opt stack 0
  4639                           tblptru	equ	0xFF8
  4640                           tblptrh	equ	0xFF7
  4641                           tblptrl	equ	0xFF6
  4642                           tablat	equ	0xFF5
  4643                           intcon	equ	0xFF2
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           postinc2	equ	0xFDE
  4650                           postdec2	equ	0xFDD
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function ___lwtoft *****************
  4656 ;; Defined at:
  4657 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  c               2   17[BANK0 ] unsigned int 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  3   17[BANK0 ] float 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4671 ;;      Params:         0       3       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0
  4674 ;;      Totals:         0       3       0       0       0       0       0
  4675 ;;Total ram usage:        3 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    3
  4678 ;; This function calls:
  4679 ;;		___ftpack
  4680 ;; This function is called by:
  4681 ;;		_util_getBatteryVoltage
  4682 ;;		_util_getSolarCurrent
  4683 ;;		_util_getBatteryCurrent
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text16
  4688  003F16                     __ptext16:
  4689                           	opt stack 0
  4690  003F16                     ___lwtoft:
  4691                           	opt stack 25
  4692                           
  4693                           ;incstack = 0
  4694  003F16  C071  F01A         	movff	___lwtoft@c,___ftpack@arg
  4695  003F1A  C072  F01B         	movff	___lwtoft@c+1,___ftpack@arg+1
  4696  003F1E  6A1C               	clrf	___ftpack@arg+2,c
  4697  003F20  0E8E               	movlw	142
  4698  003F22  6E1D               	movwf	___ftpack@exp,c
  4699  003F24  0E00               	movlw	0
  4700  003F26  6E1E               	movwf	___ftpack@sign,c
  4701  003F28  EC12  F01B         	call	___ftpack	;wreg free
  4702  003F2C  C01A  F071         	movff	?___ftpack,?___lwtoft
  4703  003F30  C01B  F072         	movff	?___ftpack+1,?___lwtoft+1
  4704  003F34  C01C  F073         	movff	?___ftpack+2,?___lwtoft+2
  4705  003F38  0012               	return	
  4706  003F3A                     __end_of___lwtoft:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           intcon	equ	0xFF2
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           postdec1	equ	0xFE5
  4716                           fsr1h	equ	0xFE2
  4717                           fsr1l	equ	0xFE1
  4718                           postinc2	equ	0xFDE
  4719                           postdec2	equ	0xFDD
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _util_beacon_transmission *****************
  4725 ;; Defined at:
  4726 ;;		line 22 in file "easat2_util_transmission.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  battery_volt    3  127[BANK0 ] float 
  4729 ;;  solar_curren    2  130[BANK0 ] int 
  4730 ;;  battery_curr    2  132[BANK0 ] int 
  4731 ;;  temperature     3  134[BANK0 ] float 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  i               2  192[BANK1 ] int 
  4734 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4735 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4745 ;;      Params:         0      10       0       0       0       0       0
  4746 ;;      Locals:         0       0     194       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0
  4748 ;;      Totals:         0      10     194       0       0       0       0
  4749 ;;Total ram usage:      204 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    7
  4752 ;; This function calls:
  4753 ;;		_memset
  4754 ;;		_sprintf
  4755 ;;		_strcat
  4756 ;;		_strcpy
  4757 ;;		_strlen
  4758 ;;		_util_transmit_letter
  4759 ;; This function is called by:
  4760 ;;		_main_loop
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text17
  4765  00316E                     __ptext17:
  4766                           	opt stack 0
  4767  00316E                     _util_beacon_transmission:
  4768                           	opt stack 22
  4769                           
  4770                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4771                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4772                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4773                           
  4774                           ;incstack = 0
  4775  00316E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4776  003170  6E1A               	movwf	memset@p1,c
  4777  003172  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4778  003174  6E1B               	movwf	memset@p1+1,c
  4779  003176  0E00               	movlw	0
  4780  003178  6E1D               	movwf	memset@c+1,c
  4781  00317A  0E00               	movlw	0
  4782  00317C  6E1C               	movwf	memset@c,c
  4783  00317E  0E00               	movlw	0
  4784  003180  6E1F               	movwf	memset@n+1,c
  4785  003182  0E80               	movlw	128
  4786  003184  6E1E               	movwf	memset@n,c
  4787  003186  EC62  F01F         	call	_memset	;wreg free
  4788                           
  4789                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4790  00318A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4791  00318C  6E1A               	movwf	strcpy@to,c
  4792  00318E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4793  003190  6E1B               	movwf	strcpy@to+1,c
  4794  003192  0E99               	movlw	low STR_1
  4795  003194  6E1C               	movwf	strcpy@from,c
  4796  003196  0E7F               	movlw	high STR_1
  4797  003198  6E1D               	movwf	strcpy@from+1,c
  4798  00319A  EC34  F01F         	call	_strcpy	;wreg free
  4799                           
  4800                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4801  00319E  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4802  0031A0  6E1A               	movwf	memset@p1,c
  4803  0031A2  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4804  0031A4  6E1B               	movwf	memset@p1+1,c
  4805  0031A6  0E00               	movlw	0
  4806  0031A8  6E1D               	movwf	memset@c+1,c
  4807  0031AA  0E00               	movlw	0
  4808  0031AC  6E1C               	movwf	memset@c,c
  4809  0031AE  0E00               	movlw	0
  4810  0031B0  6E1F               	movwf	memset@n+1,c
  4811  0031B2  0E40               	movlw	64
  4812  0031B4  6E1E               	movwf	memset@n,c
  4813  0031B6  EC62  F01F         	call	_memset	;wreg free
  4814                           
  4815                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4816                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4817  0031BA  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4818  0031BC  0100               	movlb	0	; () banked
  4819  0031BE  6FCB               	movwf	sprintf@wh& (0+255),b
  4820  0031C0  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4821  0031C2  0100               	movlb	0	; () banked
  4822  0031C4  6FCC               	movwf	(sprintf@wh+1)& (0+255),b
  4823  0031C6  0E5B               	movlw	low STR_2
  4824  0031C8  0100               	movlb	0	; () banked
  4825  0031CA  6FCD               	movwf	sprintf@f& (0+255),b
  4826  0031CC  0E7F               	movlw	high STR_2
  4827  0031CE  0100               	movlb	0	; () banked
  4828  0031D0  6FCE               	movwf	(sprintf@f+1)& (0+255),b
  4829  0031D2  C0E6  F0CF         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4830  0031D6  C0E7  F0D0         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4831  0031DA  C0E8  F0D1         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4832  0031DE  C0DF  F0D2         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4833  0031E2  C0E0  F0D3         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4834  0031E6  C0E1  F0D4         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4835  0031EA  C0E2  F0D5         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4836  0031EE  C0E3  F0D6         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4837  0031F2  C0E4  F0D7         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4838  0031F6  C0E5  F0D8         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4839  0031FA  EC9A  F01D         	call	_sprintf	;wreg free
  4840                           
  4841                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4842  0031FE  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4843  003200  6E1A               	movwf	strcat@to,c
  4844  003202  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4845  003204  6E1B               	movwf	strcat@to+1,c
  4846  003206  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4847  003208  6E1C               	movwf	strcat@from,c
  4848  00320A  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4849  00320C  6E1D               	movwf	strcat@from+1,c
  4850  00320E  EC52  F01E         	call	_strcat	;wreg free
  4851                           
  4852                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4853  003212  0E00               	movlw	0
  4854  003214  0101               	movlb	1	; () banked
  4855  003216  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4856  003218  0E00               	movlw	0
  4857  00321A  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4858  00321C  D00E               	goto	l6638
  4859  00321E                     l6634:
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4863  00321E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4864  003220  0101               	movlb	1	; () banked
  4865  003222  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4866  003224  6ED9               	movwf	fsr2l,c
  4867  003226  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4868  003228  0101               	movlb	1	; () banked
  4869  00322A  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4870  00322C  6EDA               	movwf	fsr2h,c
  4871  00322E  50DF               	movf	indf2,w,c
  4872  003230  EC0F  F00E         	call	_util_transmit_letter
  4873  003234  0101               	movlb	1	; () banked
  4874  003236  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4875  003238  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4876  00323A                     l6638:
  4877                           
  4878                           ; BSR set to: 1
  4879  00323A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4880  00323C  6E1A               	movwf	strlen@s,c
  4881  00323E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4882  003240  6E1B               	movwf	strlen@s+1,c
  4883  003242  EC71  F01D         	call	_strlen	;wreg free
  4884  003246  501A               	movf	?_strlen,w,c
  4885  003248  0101               	movlb	1	; () banked
  4886  00324A  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4887  00324C  501B               	movf	?_strlen+1,w,c
  4888  00324E  0101               	movlb	1	; () banked
  4889  003250  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4890  003252  B0D8               	btfsc	status,0,c
  4891  003254  0012               	return	
  4892  003256  D7E3               	goto	l6634
  4893  003258                     __end_of_util_beacon_transmission:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           intcon	equ	0xFF2
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           postdec1	equ	0xFE5
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _util_transmit_letter *****************
  4913 ;; Defined at:
  4914 ;;		line 80 in file "easat2_util_transmission.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  letter          1    wreg     unsigned char 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  letter          1   21[BANK0 ] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4928 ;;      Params:         0       0       0       0       0       0       0
  4929 ;;      Locals:         0       1       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0
  4931 ;;      Totals:         0       1       0       0       0       0       0
  4932 ;;Total ram usage:        1 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    5
  4935 ;; This function calls:
  4936 ;;		_util_transmit_morse_sequence
  4937 ;;		_util_transmit_space_between_letters
  4938 ;;		_util_transmit_space_between_words
  4939 ;; This function is called by:
  4940 ;;		_util_beacon_transmission
  4941 ;;		_util_command_ack_transmission
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text18
  4946  001C1E                     __ptext18:
  4947                           	opt stack 0
  4948  001C1E                     _util_transmit_letter:
  4949                           	opt stack 23
  4950                           
  4951                           ; BSR set to: 1
  4952                           ;incstack = 0
  4953                           ;util_transmit_letter@letter stored from wreg
  4954  001C1E  0100               	movlb	0	; () banked
  4955  001C20  6F75               	movwf	util_transmit_letter@letter& (0+255),b
  4956                           
  4957                           ;easat2_util_transmission.c: 82: switch (letter) {
  4958  001C22  D122               	goto	l6346
  4959  001C24                     l6260:
  4960                           
  4961                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".-");
  4962  001C24  0EE3               	movlw	low (STR_21+2)
  4963  001C26  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4964  001C28  0E7F               	movlw	high (STR_21+2)
  4965  001C2A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4966  001C2C  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  4967                           
  4968                           ;easat2_util_transmission.c: 89: break;
  4969  001C30  D19B               	goto	l6348
  4970  001C32                     l6262:
  4971                           
  4972                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-...");
  4973  001C32  0ECB               	movlw	low (STR_38+1)
  4974  001C34  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4975  001C36  0E7F               	movlw	high (STR_38+1)
  4976  001C38  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4977  001C3A  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  4978                           
  4979                           ;easat2_util_transmission.c: 92: break;
  4980  001C3E  D194               	goto	l6348
  4981  001C40                     l6264:
  4982                           
  4983                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)"-.-.");
  4984  001C40  0EF0               	movlw	low STR_7
  4985  001C42  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4986  001C44  0E7F               	movlw	high STR_7
  4987  001C46  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4988  001C48  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  4989                           
  4990                           ;easat2_util_transmission.c: 95: break;
  4991  001C4C  D18D               	goto	l6348
  4992  001C4E                     l6266:
  4993                           
  4994                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"-..");
  4995  001C4E  0EC6               	movlw	low (STR_39+2)
  4996  001C50  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4997  001C52  0E7F               	movlw	high (STR_39+2)
  4998  001C54  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4999  001C56  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5000                           
  5001                           ;easat2_util_transmission.c: 98: break;
  5002  001C5A  D186               	goto	l6348
  5003  001C5C                     l6268:
  5004                           
  5005                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)".");
  5006  001C5C  0EBC               	movlw	low (STR_40+4)
  5007  001C5E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5008  001C60  0E7F               	movlw	high (STR_40+4)
  5009  001C62  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5010  001C64  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5011                           
  5012                           ;easat2_util_transmission.c: 101: break;
  5013  001C68  D17F               	goto	l6348
  5014  001C6A                     l6270:
  5015                           
  5016                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"..-.");
  5017  001C6A  0EBF               	movlw	low (STR_43+1)
  5018  001C6C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5019  001C6E  0E7F               	movlw	high (STR_43+1)
  5020  001C70  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5021  001C72  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5022                           
  5023                           ;easat2_util_transmission.c: 104: break;
  5024  001C76  D178               	goto	l6348
  5025  001C78                     l6272:
  5026                           
  5027                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)"--.");
  5028  001C78  0EBA               	movlw	low (STR_40+2)
  5029  001C7A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5030  001C7C  0E7F               	movlw	high (STR_40+2)
  5031  001C7E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5032  001C80  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5033                           
  5034                           ;easat2_util_transmission.c: 107: break;
  5035  001C84  D171               	goto	l6348
  5036  001C86                     l6274:
  5037                           
  5038                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"....");
  5039  001C86  0ED1               	movlw	low (STR_37+1)
  5040  001C88  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5041  001C8A  0E7F               	movlw	high (STR_37+1)
  5042  001C8C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5043  001C8E  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5044                           
  5045                           ;easat2_util_transmission.c: 110: break;
  5046  001C92  D16A               	goto	l6348
  5047  001C94                     l6276:
  5048                           
  5049                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)"..");
  5050  001C94  0EC7               	movlw	low (STR_39+3)
  5051  001C96  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5052  001C98  0E7F               	movlw	high (STR_39+3)
  5053  001C9A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5054  001C9C  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5055                           
  5056                           ;easat2_util_transmission.c: 113: break;
  5057  001CA0  D163               	goto	l6348
  5058  001CA2                     l6278:
  5059                           
  5060                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)".---");
  5061  001CA2  0EAD               	movlw	low (STR_33+1)
  5062  001CA4  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5063  001CA6  0E7F               	movlw	high (STR_33+1)
  5064  001CA8  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5065  001CAA  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5066                           
  5067                           ;easat2_util_transmission.c: 116: break;
  5068  001CAE  D15C               	goto	l6348
  5069  001CB0                     l6280:
  5070                           
  5071                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-.-");
  5072  001CB0  0EE2               	movlw	low (STR_21+1)
  5073  001CB2  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5074  001CB4  0E7F               	movlw	high (STR_21+1)
  5075  001CB6  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5076  001CB8  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5077                           
  5078                           ;easat2_util_transmission.c: 119: break;
  5079  001CBC  D155               	goto	l6348
  5080  001CBE                     l6282:
  5081                           
  5082                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)".-..");
  5083  001CBE  0EF5               	movlw	low STR_16
  5084  001CC0  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5085  001CC2  0E7F               	movlw	high STR_16
  5086  001CC4  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5087  001CC6  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5088                           
  5089                           ;easat2_util_transmission.c: 122: break;
  5090  001CCA  D14E               	goto	l6348
  5091  001CCC                     l6284:
  5092                           
  5093                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"--");
  5094  001CCC  0EA3               	movlw	low (STR_31+3)
  5095  001CCE  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5096  001CD0  0E7F               	movlw	high (STR_31+3)
  5097  001CD2  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5098  001CD4  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5099                           
  5100                           ;easat2_util_transmission.c: 125: break;
  5101  001CD8  D147               	goto	l6348
  5102  001CDA                     l6286:
  5103                           
  5104                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)"-.");
  5105  001CDA  0EBB               	movlw	low (STR_40+3)
  5106  001CDC  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5107  001CDE  0E7F               	movlw	high (STR_40+3)
  5108  001CE0  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5109  001CE2  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5110                           
  5111                           ;easat2_util_transmission.c: 128: break;
  5112  001CE6  D140               	goto	l6348
  5113  001CE8                     l6288:
  5114                           
  5115                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"---");
  5116  001CE8  0EA2               	movlw	low (STR_31+2)
  5117  001CEA  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5118  001CEC  0E7F               	movlw	high (STR_31+2)
  5119  001CEE  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5120  001CF0  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5121                           
  5122                           ;easat2_util_transmission.c: 131: break;
  5123  001CF4  D139               	goto	l6348
  5124  001CF6                     l6290:
  5125                           
  5126                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)".--.");
  5127  001CF6  0EEB               	movlw	low STR_20
  5128  001CF8  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5129  001CFA  0E7F               	movlw	high STR_20
  5130  001CFC  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5131  001CFE  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5132                           
  5133                           ;easat2_util_transmission.c: 134: break;
  5134  001D02  D132               	goto	l6348
  5135  001D04                     l6292:
  5136                           
  5137                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--.-");
  5138  001D04  0EE1               	movlw	low STR_21
  5139  001D06  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5140  001D08  0E7F               	movlw	high STR_21
  5141  001D0A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5142  001D0C  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5143                           
  5144                           ;easat2_util_transmission.c: 137: break;
  5145  001D10  D12B               	goto	l6348
  5146  001D12                     l6294:
  5147                           
  5148                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)".-.");
  5149  001D12  0EF1               	movlw	low (STR_7+1)
  5150  001D14  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5151  001D16  0E7F               	movlw	high (STR_7+1)
  5152  001D18  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5153  001D1A  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5154                           
  5155                           ;easat2_util_transmission.c: 140: break;
  5156  001D1E  D124               	goto	l6348
  5157  001D20                     l6296:
  5158                           
  5159                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)"...");
  5160  001D20  0ECC               	movlw	low (STR_38+2)
  5161  001D22  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5162  001D24  0E7F               	movlw	high (STR_38+2)
  5163  001D26  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5164  001D28  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5165                           
  5166                           ;easat2_util_transmission.c: 143: break;
  5167  001D2C  D11D               	goto	l6348
  5168  001D2E                     l6298:
  5169                           
  5170                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"-");
  5171  001D2E  0EA4               	movlw	low (STR_31+4)
  5172  001D30  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5173  001D32  0E7F               	movlw	high (STR_31+4)
  5174  001D34  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5175  001D36  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5176                           
  5177                           ;easat2_util_transmission.c: 146: break;
  5178  001D3A  D116               	goto	l6348
  5179  001D3C                     l6300:
  5180                           
  5181                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"..-");
  5182  001D3C  0EE7               	movlw	low (STR_28+1)
  5183  001D3E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5184  001D40  0E7F               	movlw	high (STR_28+1)
  5185  001D42  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5186  001D44  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5187                           
  5188                           ;easat2_util_transmission.c: 149: break;
  5189  001D48  D10F               	goto	l6348
  5190  001D4A                     l6302:
  5191                           
  5192                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"...-");
  5193  001D4A  0E8D               	movlw	low (STR_45+2)
  5194  001D4C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5195  001D4E  0E7F               	movlw	high (STR_45+2)
  5196  001D50  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5197  001D52  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5198                           
  5199                           ;easat2_util_transmission.c: 152: break;
  5200  001D56  D108               	goto	l6348
  5201  001D58                     l6304:
  5202                           
  5203                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".--");
  5204  001D58  0EDD               	movlw	low (STR_29+1)
  5205  001D5A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5206  001D5C  0E7F               	movlw	high (STR_29+1)
  5207  001D5E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5208  001D60  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5209                           
  5210                           ;easat2_util_transmission.c: 155: break;
  5211  001D64  D101               	goto	l6348
  5212  001D66                     l6306:
  5213                           
  5214                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-..-");
  5215  001D66  0EE6               	movlw	low STR_28
  5216  001D68  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5217  001D6A  0E7F               	movlw	high STR_28
  5218  001D6C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5219  001D6E  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5220                           
  5221                           ;easat2_util_transmission.c: 158: break;
  5222  001D72  D0FA               	goto	l6348
  5223  001D74                     l6308:
  5224                           
  5225                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"-.--");
  5226  001D74  0EDC               	movlw	low STR_29
  5227  001D76  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5228  001D78  0E7F               	movlw	high STR_29
  5229  001D7A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5230  001D7C  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5231                           
  5232                           ;easat2_util_transmission.c: 161: break;
  5233  001D80  D0F3               	goto	l6348
  5234  001D82                     l6310:
  5235                           
  5236                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"--..");
  5237  001D82  0EC5               	movlw	low (STR_39+1)
  5238  001D84  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5239  001D86  0E7F               	movlw	high (STR_39+1)
  5240  001D88  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5241  001D8A  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5242                           
  5243                           ;easat2_util_transmission.c: 164: break;
  5244  001D8E  D0EC               	goto	l6348
  5245  001D90                     l6312:
  5246                           
  5247                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"-----");
  5248  001D90  0EA0               	movlw	low STR_31
  5249  001D92  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5250  001D94  0E7F               	movlw	high STR_31
  5251  001D96  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5252  001D98  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5253                           
  5254                           ;easat2_util_transmission.c: 167: break;
  5255  001D9C  D0E5               	goto	l6348
  5256  001D9E                     l6314:
  5257                           
  5258                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)".----");
  5259  001D9E  0EA6               	movlw	low STR_32
  5260  001DA0  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5261  001DA2  0E7F               	movlw	high STR_32
  5262  001DA4  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5263  001DA6  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5264                           
  5265                           ;easat2_util_transmission.c: 170: break;
  5266  001DAA  D0DE               	goto	l6348
  5267  001DAC                     l6316:
  5268                           
  5269                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..---");
  5270  001DAC  0EAC               	movlw	low STR_33
  5271  001DAE  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5272  001DB0  0E7F               	movlw	high STR_33
  5273  001DB2  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5274  001DB4  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5275                           
  5276                           ;easat2_util_transmission.c: 173: break;
  5277  001DB8  D0D7               	goto	l6348
  5278  001DBA                     l6318:
  5279                           
  5280                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"...--");
  5281  001DBA  0EB2               	movlw	low STR_34
  5282  001DBC  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5283  001DBE  0E7F               	movlw	high STR_34
  5284  001DC0  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5285  001DC2  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5286                           
  5287                           ;easat2_util_transmission.c: 176: break;
  5288  001DC6  D0D0               	goto	l6348
  5289  001DC8                     l6320:
  5290                           
  5291                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)"....-");
  5292  001DC8  0E8C               	movlw	low (STR_45+1)
  5293  001DCA  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5294  001DCC  0E7F               	movlw	high (STR_45+1)
  5295  001DCE  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5296  001DD0  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5297                           
  5298                           ;easat2_util_transmission.c: 179: break;
  5299  001DD4  D0C9               	goto	l6348
  5300  001DD6                     l6322:
  5301                           
  5302                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)".....");
  5303  001DD6  0ED6               	movlw	low STR_36
  5304  001DD8  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5305  001DDA  0E7F               	movlw	high STR_36
  5306  001DDC  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5307  001DDE  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5308                           
  5309                           ;easat2_util_transmission.c: 182: break;
  5310  001DE2  D0C2               	goto	l6348
  5311  001DE4                     l6324:
  5312                           
  5313                           ;easat2_util_transmission.c: 184: util_transmit_morse_sequence((char*)"-....");
  5314  001DE4  0ED0               	movlw	low STR_37
  5315  001DE6  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5316  001DE8  0E7F               	movlw	high STR_37
  5317  001DEA  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5318  001DEC  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5319                           
  5320                           ;easat2_util_transmission.c: 185: break;
  5321  001DF0  D0BB               	goto	l6348
  5322  001DF2                     l6326:
  5323                           
  5324                           ;easat2_util_transmission.c: 187: util_transmit_morse_sequence((char*)"--...");
  5325  001DF2  0ECA               	movlw	low STR_38
  5326  001DF4  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5327  001DF6  0E7F               	movlw	high STR_38
  5328  001DF8  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5329  001DFA  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5330                           
  5331                           ;easat2_util_transmission.c: 188: break;
  5332  001DFE  D0B4               	goto	l6348
  5333  001E00                     l6328:
  5334                           
  5335                           ;easat2_util_transmission.c: 190: util_transmit_morse_sequence((char*)"---..");
  5336  001E00  0EC4               	movlw	low STR_39
  5337  001E02  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5338  001E04  0E7F               	movlw	high STR_39
  5339  001E06  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5340  001E08  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5341                           
  5342                           ;easat2_util_transmission.c: 191: break;
  5343  001E0C  D0AD               	goto	l6348
  5344  001E0E                     l6330:
  5345                           
  5346                           ;easat2_util_transmission.c: 193: util_transmit_morse_sequence((char*)"----.");
  5347  001E0E  0EB8               	movlw	low STR_40
  5348  001E10  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5349  001E12  0E7F               	movlw	high STR_40
  5350  001E14  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5351  001E16  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5352                           
  5353                           ;easat2_util_transmission.c: 194: break;
  5354  001E1A  D0A6               	goto	l6348
  5355  001E1C                     l6332:
  5356                           
  5357                           ;easat2_util_transmission.c: 196: util_transmit_morse_sequence((char*)"--..--");
  5358  001E1C  0E7D               	movlw	low STR_41
  5359  001E1E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5360  001E20  0E7F               	movlw	high STR_41
  5361  001E22  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5362  001E24  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5363                           
  5364                           ;easat2_util_transmission.c: 197: break;
  5365  001E28  D09F               	goto	l6348
  5366  001E2A                     l6334:
  5367                           
  5368                           ;easat2_util_transmission.c: 199: util_transmit_morse_sequence((char*)"..--..");
  5369  001E2A  0E92               	movlw	low STR_42
  5370  001E2C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5371  001E2E  0E7F               	movlw	high STR_42
  5372  001E30  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5373  001E32  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5374                           
  5375                           ;easat2_util_transmission.c: 200: break;
  5376  001E36  D098               	goto	l6348
  5377  001E38                     l6336:
  5378                           
  5379                           ;easat2_util_transmission.c: 202: util_transmit_morse_sequence((char*)"-..-.");
  5380  001E38  0EBE               	movlw	low STR_43
  5381  001E3A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5382  001E3C  0E7F               	movlw	high STR_43
  5383  001E3E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5384  001E40  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5385                           
  5386                           ;easat2_util_transmission.c: 203: break;
  5387  001E44  D091               	goto	l6348
  5388  001E46                     l6338:
  5389                           
  5390                           ;easat2_util_transmission.c: 205: util_transmit_morse_sequence((char*)".-.-.-");
  5391  001E46  0E84               	movlw	low STR_44
  5392  001E48  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5393  001E4A  0E7F               	movlw	high STR_44
  5394  001E4C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5395  001E4E  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5396                           
  5397                           ;easat2_util_transmission.c: 206: break;
  5398  001E52  D08A               	goto	l6348
  5399  001E54                     l6340:
  5400                           
  5401                           ;easat2_util_transmission.c: 208: util_transmit_morse_sequence((char*)"-....-");
  5402  001E54  0E8B               	movlw	low STR_45
  5403  001E56  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5404  001E58  0E7F               	movlw	high STR_45
  5405  001E5A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5406  001E5C  EC0B  F01D         	call	_util_transmit_morse_sequence	;wreg free
  5407                           
  5408                           ;easat2_util_transmission.c: 209: break;
  5409  001E60  D083               	goto	l6348
  5410  001E62                     l6342:
  5411                           
  5412                           ;easat2_util_transmission.c: 211: util_transmit_space_between_words();
  5413  001E62  ECFF  F01F         	call	_util_transmit_space_between_words	;wreg free
  5414                           
  5415                           ;easat2_util_transmission.c: 216: }
  5416                           
  5417                           ;easat2_util_transmission.c: 214: break;
  5418                           
  5419                           ;easat2_util_transmission.c: 213: default:
  5420                           
  5421                           ;easat2_util_transmission.c: 212: break;
  5422  001E66  D080               	goto	l6348
  5423  001E68                     l6346:
  5424  001E68  0100               	movlb	0	; () banked
  5425  001E6A  5175               	movf	util_transmit_letter@letter& (0+255),w,b
  5426                           
  5427                           ; Switch size 1, requested type "space"
  5428                           ; Number of cases is 42, Range of values is 32 to 90
  5429                           ; switch strategies available:
  5430                           ; Name         Instructions Cycles
  5431                           ; simple_byte          127    64 (average)
  5432                           ;	Chosen strategy is simple_byte
  5433  001E6C  0A20               	xorlw	32	; case 32
  5434  001E6E  B4D8               	btfsc	status,2,c
  5435  001E70  D7F8               	goto	l6342
  5436  001E72  0A0C               	xorlw	12	; case 44
  5437  001E74  B4D8               	btfsc	status,2,c
  5438  001E76  D7D2               	goto	l6332
  5439  001E78  0A01               	xorlw	1	; case 45
  5440  001E7A  B4D8               	btfsc	status,2,c
  5441  001E7C  D7EB               	goto	l6340
  5442  001E7E  0A03               	xorlw	3	; case 46
  5443  001E80  B4D8               	btfsc	status,2,c
  5444  001E82  D7E1               	goto	l6338
  5445  001E84  0A01               	xorlw	1	; case 47
  5446  001E86  B4D8               	btfsc	status,2,c
  5447  001E88  D7D7               	goto	l6336
  5448  001E8A  0A1F               	xorlw	31	; case 48
  5449  001E8C  B4D8               	btfsc	status,2,c
  5450  001E8E  D780               	goto	l6312
  5451  001E90  0A01               	xorlw	1	; case 49
  5452  001E92  B4D8               	btfsc	status,2,c
  5453  001E94  D784               	goto	l6314
  5454  001E96  0A03               	xorlw	3	; case 50
  5455  001E98  B4D8               	btfsc	status,2,c
  5456  001E9A  D788               	goto	l6316
  5457  001E9C  0A01               	xorlw	1	; case 51
  5458  001E9E  B4D8               	btfsc	status,2,c
  5459  001EA0  D78C               	goto	l6318
  5460  001EA2  0A07               	xorlw	7	; case 52
  5461  001EA4  B4D8               	btfsc	status,2,c
  5462  001EA6  D790               	goto	l6320
  5463  001EA8  0A01               	xorlw	1	; case 53
  5464  001EAA  B4D8               	btfsc	status,2,c
  5465  001EAC  D794               	goto	l6322
  5466  001EAE  0A03               	xorlw	3	; case 54
  5467  001EB0  B4D8               	btfsc	status,2,c
  5468  001EB2  D798               	goto	l6324
  5469  001EB4  0A01               	xorlw	1	; case 55
  5470  001EB6  B4D8               	btfsc	status,2,c
  5471  001EB8  D79C               	goto	l6326
  5472  001EBA  0A0F               	xorlw	15	; case 56
  5473  001EBC  B4D8               	btfsc	status,2,c
  5474  001EBE  D7A0               	goto	l6328
  5475  001EC0  0A01               	xorlw	1	; case 57
  5476  001EC2  B4D8               	btfsc	status,2,c
  5477  001EC4  D7A4               	goto	l6330
  5478  001EC6  0A06               	xorlw	6	; case 63
  5479  001EC8  B4D8               	btfsc	status,2,c
  5480  001ECA  D7AF               	goto	l6334
  5481  001ECC  0A7E               	xorlw	126	; case 65
  5482  001ECE  B4D8               	btfsc	status,2,c
  5483  001ED0  D6A9               	goto	l6260
  5484  001ED2  0A03               	xorlw	3	; case 66
  5485  001ED4  B4D8               	btfsc	status,2,c
  5486  001ED6  D6AD               	goto	l6262
  5487  001ED8  0A01               	xorlw	1	; case 67
  5488  001EDA  B4D8               	btfsc	status,2,c
  5489  001EDC  D6B1               	goto	l6264
  5490  001EDE  0A07               	xorlw	7	; case 68
  5491  001EE0  B4D8               	btfsc	status,2,c
  5492  001EE2  D6B5               	goto	l6266
  5493  001EE4  0A01               	xorlw	1	; case 69
  5494  001EE6  B4D8               	btfsc	status,2,c
  5495  001EE8  D6B9               	goto	l6268
  5496  001EEA  0A03               	xorlw	3	; case 70
  5497  001EEC  B4D8               	btfsc	status,2,c
  5498  001EEE  D6BD               	goto	l6270
  5499  001EF0  0A01               	xorlw	1	; case 71
  5500  001EF2  B4D8               	btfsc	status,2,c
  5501  001EF4  D6C1               	goto	l6272
  5502  001EF6  0A0F               	xorlw	15	; case 72
  5503  001EF8  B4D8               	btfsc	status,2,c
  5504  001EFA  D6C5               	goto	l6274
  5505  001EFC  0A01               	xorlw	1	; case 73
  5506  001EFE  B4D8               	btfsc	status,2,c
  5507  001F00  D6C9               	goto	l6276
  5508  001F02  0A03               	xorlw	3	; case 74
  5509  001F04  B4D8               	btfsc	status,2,c
  5510  001F06  D6CD               	goto	l6278
  5511  001F08  0A01               	xorlw	1	; case 75
  5512  001F0A  B4D8               	btfsc	status,2,c
  5513  001F0C  D6D1               	goto	l6280
  5514  001F0E  0A07               	xorlw	7	; case 76
  5515  001F10  B4D8               	btfsc	status,2,c
  5516  001F12  D6D5               	goto	l6282
  5517  001F14  0A01               	xorlw	1	; case 77
  5518  001F16  B4D8               	btfsc	status,2,c
  5519  001F18  D6D9               	goto	l6284
  5520  001F1A  0A03               	xorlw	3	; case 78
  5521  001F1C  B4D8               	btfsc	status,2,c
  5522  001F1E  D6DD               	goto	l6286
  5523  001F20  0A01               	xorlw	1	; case 79
  5524  001F22  B4D8               	btfsc	status,2,c
  5525  001F24  D6E1               	goto	l6288
  5526  001F26  0A1F               	xorlw	31	; case 80
  5527  001F28  B4D8               	btfsc	status,2,c
  5528  001F2A  D6E5               	goto	l6290
  5529  001F2C  0A01               	xorlw	1	; case 81
  5530  001F2E  B4D8               	btfsc	status,2,c
  5531  001F30  D6E9               	goto	l6292
  5532  001F32  0A03               	xorlw	3	; case 82
  5533  001F34  B4D8               	btfsc	status,2,c
  5534  001F36  D6ED               	goto	l6294
  5535  001F38  0A01               	xorlw	1	; case 83
  5536  001F3A  B4D8               	btfsc	status,2,c
  5537  001F3C  D6F1               	goto	l6296
  5538  001F3E  0A07               	xorlw	7	; case 84
  5539  001F40  B4D8               	btfsc	status,2,c
  5540  001F42  D6F5               	goto	l6298
  5541  001F44  0A01               	xorlw	1	; case 85
  5542  001F46  B4D8               	btfsc	status,2,c
  5543  001F48  D6F9               	goto	l6300
  5544  001F4A  0A03               	xorlw	3	; case 86
  5545  001F4C  B4D8               	btfsc	status,2,c
  5546  001F4E  D6FD               	goto	l6302
  5547  001F50  0A01               	xorlw	1	; case 87
  5548  001F52  B4D8               	btfsc	status,2,c
  5549  001F54  D701               	goto	l6304
  5550  001F56  0A0F               	xorlw	15	; case 88
  5551  001F58  B4D8               	btfsc	status,2,c
  5552  001F5A  D705               	goto	l6306
  5553  001F5C  0A01               	xorlw	1	; case 89
  5554  001F5E  B4D8               	btfsc	status,2,c
  5555  001F60  D709               	goto	l6308
  5556  001F62  0A03               	xorlw	3	; case 90
  5557  001F64  B4D8               	btfsc	status,2,c
  5558  001F66  D70D               	goto	l6310
  5559  001F68                     l6348:
  5560                           
  5561                           ;easat2_util_transmission.c: 219: util_transmit_space_between_letters();
  5562  001F68  EC06  F020         	call	_util_transmit_space_between_letters	;wreg free
  5563  001F6C  0012               	return		;funcret
  5564  001F6E                     __end_of_util_transmit_letter:
  5565                           	opt stack 0
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           intcon	equ	0xFF2
  5571                           postinc0	equ	0xFEE
  5572                           wreg	equ	0xFE8
  5573                           postdec1	equ	0xFE5
  5574                           fsr1h	equ	0xFE2
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           postinc2	equ	0xFDE
  5578                           postdec2	equ	0xFDD
  5579                           fsr2h	equ	0xFDA
  5580                           fsr2l	equ	0xFD9
  5581                           status	equ	0xFD8
  5582                           
  5583 ;; *************** function _util_transmit_space_between_words *****************
  5584 ;; Defined at:
  5585 ;;		line 314 in file "easat2_util_transmission.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5599 ;;      Params:         0       0       0       0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0
  5602 ;;      Totals:         0       0       0       0       0       0       0
  5603 ;;Total ram usage:        0 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    3
  5606 ;; This function calls:
  5607 ;;		_util_waits_delay_ms
  5608 ;; This function is called by:
  5609 ;;		_util_transmit_letter
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text19
  5614  003FFE                     __ptext19:
  5615                           	opt stack 0
  5616  003FFE                     _util_transmit_space_between_words:
  5617                           	opt stack 24
  5618                           
  5619                           ;easat2_util_transmission.c: 315: util_waits_delay_ms(7*(int)(2400/32));
  5620                           
  5621                           ;incstack = 0
  5622  003FFE  0E02               	movlw	2
  5623  004000  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5624  004002  0E0D               	movlw	13
  5625  004004  6E1A               	movwf	util_waits_delay_ms@ms,c
  5626  004006  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  5627  00400A  0012               	return		;funcret
  5628  00400C                     __end_of_util_transmit_space_between_words:
  5629                           	opt stack 0
  5630                           tblptru	equ	0xFF8
  5631                           tblptrh	equ	0xFF7
  5632                           tblptrl	equ	0xFF6
  5633                           tablat	equ	0xFF5
  5634                           intcon	equ	0xFF2
  5635                           postinc0	equ	0xFEE
  5636                           wreg	equ	0xFE8
  5637                           postdec1	equ	0xFE5
  5638                           fsr1h	equ	0xFE2
  5639                           fsr1l	equ	0xFE1
  5640                           indf2	equ	0xFDF
  5641                           postinc2	equ	0xFDE
  5642                           postdec2	equ	0xFDD
  5643                           fsr2h	equ	0xFDA
  5644                           fsr2l	equ	0xFD9
  5645                           status	equ	0xFD8
  5646                           
  5647 ;; *************** function _util_transmit_space_between_letters *****************
  5648 ;; Defined at:
  5649 ;;		line 307 in file "easat2_util_transmission.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5663 ;;      Params:         0       0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    3
  5670 ;; This function calls:
  5671 ;;		_util_waits_delay_ms
  5672 ;; This function is called by:
  5673 ;;		_util_transmit_letter
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text20
  5678  00400C                     __ptext20:
  5679                           	opt stack 0
  5680  00400C                     _util_transmit_space_between_letters:
  5681                           	opt stack 24
  5682                           
  5683                           ;easat2_util_transmission.c: 308: util_waits_delay_ms(3*(int)(2400/32));
  5684                           
  5685                           ;incstack = 0
  5686  00400C  0E00               	movlw	0
  5687  00400E  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5688  004010  0EE1               	movlw	225
  5689  004012  6E1A               	movwf	util_waits_delay_ms@ms,c
  5690  004014  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  5691  004018  0012               	return		;funcret
  5692  00401A                     __end_of_util_transmit_space_between_letters:
  5693                           	opt stack 0
  5694                           tblptru	equ	0xFF8
  5695                           tblptrh	equ	0xFF7
  5696                           tblptrl	equ	0xFF6
  5697                           tablat	equ	0xFF5
  5698                           intcon	equ	0xFF2
  5699                           postinc0	equ	0xFEE
  5700                           wreg	equ	0xFE8
  5701                           postdec1	equ	0xFE5
  5702                           fsr1h	equ	0xFE2
  5703                           fsr1l	equ	0xFE1
  5704                           indf2	equ	0xFDF
  5705                           postinc2	equ	0xFDE
  5706                           postdec2	equ	0xFDD
  5707                           fsr2h	equ	0xFDA
  5708                           fsr2l	equ	0xFD9
  5709                           status	equ	0xFD8
  5710                           
  5711 ;; *************** function _util_transmit_morse_sequence *****************
  5712 ;; Defined at:
  5713 ;;		line 229 in file "easat2_util_transmission.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  morse_sequen    2   31[COMRAM] PTR unsigned char 
  5716 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  5717 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  5718 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  5719 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  5720 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  5721 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  5722 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  5723 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  5724 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  5725 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  5726 ;;		 -> STR_5(3), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  i               2   19[BANK0 ] int 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         2       0       0       0       0       0       0
  5739 ;;      Locals:         0       2       0       0       0       0       0
  5740 ;;      Temps:          0       2       0       0       0       0       0
  5741 ;;      Totals:         2       4       0       0       0       0       0
  5742 ;;Total ram usage:        6 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    4
  5745 ;; This function calls:
  5746 ;;		_strlen
  5747 ;;		_util_transmit_dash
  5748 ;;		_util_transmit_dot
  5749 ;;		_util_transmit_space_between_dots_dashes
  5750 ;; This function is called by:
  5751 ;;		_util_transmit_letter
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text21
  5756  003A16                     __ptext21:
  5757                           	opt stack 0
  5758  003A16                     _util_transmit_morse_sequence:
  5759                           	opt stack 23
  5760                           
  5761                           ;easat2_util_transmission.c: 233: for (int i = 0; i < strlen(morse_sequence); i++) {
  5762                           
  5763                           ;incstack = 0
  5764  003A16  0E00               	movlw	0
  5765  003A18  0100               	movlb	0	; () banked
  5766  003A1A  6F74               	movwf	(util_transmit_morse_sequence@i+1)& (0+255),b
  5767  003A1C  0E00               	movlw	0
  5768  003A1E  6F73               	movwf	util_transmit_morse_sequence@i& (0+255),b
  5769  003A20  D021               	goto	l5802
  5770  003A22                     l5790:
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;easat2_util_transmission.c: 238: util_transmit_dot();
  5774  003A22  ECCD  F01F         	call	_util_transmit_dot	;wreg free
  5775                           
  5776                           ;easat2_util_transmission.c: 239: break;
  5777  003A26  D019               	goto	l5798
  5778  003A28                     l5792:
  5779                           
  5780                           ;easat2_util_transmission.c: 241: util_transmit_dash();
  5781  003A28  ECDA  F01F         	call	_util_transmit_dash	;wreg free
  5782                           
  5783                           ;easat2_util_transmission.c: 245: }
  5784                           
  5785                           ;easat2_util_transmission.c: 244: break;
  5786                           
  5787                           ;easat2_util_transmission.c: 243: default:
  5788                           
  5789                           ;easat2_util_transmission.c: 242: break;
  5790  003A2C  D016               	goto	l5798
  5791  003A2E                     l5796:
  5792  003A2E  0100               	movlb	0	; () banked
  5793  003A30  5173               	movf	util_transmit_morse_sequence@i& (0+255),w,b
  5794  003A32  2420               	addwf	util_transmit_morse_sequence@morse_sequence,w,c
  5795  003A34  0100               	movlb	0	; () banked
  5796  003A36  6F71               	movwf	??_util_transmit_morse_sequence& (0+255),b
  5797  003A38  0100               	movlb	0	; () banked
  5798  003A3A  5174               	movf	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5799  003A3C  2021               	addwfc	util_transmit_morse_sequence@morse_sequence+1,w,c
  5800  003A3E  0100               	movlb	0	; () banked
  5801  003A40  6F72               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),b
  5802  003A42  C071  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5803  003A46  C072  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5804  003A4A                     	if	0	;tblptru may be non-zero
  5805  003A4A                     	endif
  5806  003A4A                     	if	0	;tblptru may be non-zero
  5807  003A4A                     	endif
  5808  003A4A  0008               	tblrd		*
  5809  003A4C  50F5               	movf	tablat,w,c
  5810                           
  5811                           ; Switch size 1, requested type "space"
  5812                           ; Number of cases is 2, Range of values is 45 to 46
  5813                           ; switch strategies available:
  5814                           ; Name         Instructions Cycles
  5815                           ; simple_byte            7     4 (average)
  5816                           ;	Chosen strategy is simple_byte
  5817  003A4E  0A2D               	xorlw	45	; case 45
  5818  003A50  B4D8               	btfsc	status,2,c
  5819  003A52  D7EA               	goto	l5792
  5820  003A54  0A03               	xorlw	3	; case 46
  5821  003A56  B4D8               	btfsc	status,2,c
  5822  003A58  D7E4               	goto	l5790
  5823  003A5A                     l5798:
  5824                           
  5825                           ;easat2_util_transmission.c: 248: util_transmit_space_between_dots_dashes();
  5826  003A5A  EC0D  F020         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5827  003A5E  0100               	movlb	0	; () banked
  5828  003A60  4B73               	infsnz	util_transmit_morse_sequence@i& (0+255),f,b
  5829  003A62  2B74               	incf	(util_transmit_morse_sequence@i+1)& (0+255),f,b
  5830  003A64                     l5802:
  5831                           
  5832                           ; BSR set to: 0
  5833  003A64  C020  F01A         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5834  003A68  C021  F01B         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5835  003A6C  EC71  F01D         	call	_strlen	;wreg free
  5836  003A70  501A               	movf	?_strlen,w,c
  5837  003A72  0100               	movlb	0	; () banked
  5838  003A74  5D73               	subwf	util_transmit_morse_sequence@i& (0+255),w,b
  5839  003A76  501B               	movf	?_strlen+1,w,c
  5840  003A78  0100               	movlb	0	; () banked
  5841  003A7A  5974               	subwfb	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5842  003A7C  B0D8               	btfsc	status,0,c
  5843  003A7E  0012               	return	
  5844  003A80  D7D6               	goto	l5796
  5845  003A82                     __end_of_util_transmit_morse_sequence:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           intcon	equ	0xFF2
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           postdec1	equ	0xFE5
  5855                           fsr1h	equ	0xFE2
  5856                           fsr1l	equ	0xFE1
  5857                           indf2	equ	0xFDF
  5858                           postinc2	equ	0xFDE
  5859                           postdec2	equ	0xFDD
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5865 ;; Defined at:
  5866 ;;		line 299 in file "easat2_util_transmission.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5880 ;;      Params:         0       0       0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0
  5883 ;;      Totals:         0       0       0       0       0       0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    3
  5887 ;; This function calls:
  5888 ;;		_util_waits_delay_ms
  5889 ;; This function is called by:
  5890 ;;		_util_transmit_morse_sequence
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text22
  5895  00401A                     __ptext22:
  5896                           	opt stack 0
  5897  00401A                     _util_transmit_space_between_dots_dashes:
  5898                           	opt stack 23
  5899                           
  5900                           ;easat2_util_transmission.c: 300: util_waits_delay_ms((int)(2400/32));
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;incstack = 0
  5904  00401A  0E00               	movlw	0
  5905  00401C  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5906  00401E  0E4B               	movlw	75
  5907  004020  6E1A               	movwf	util_waits_delay_ms@ms,c
  5908  004022  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  5909  004026  0012               	return		;funcret
  5910  004028                     __end_of_util_transmit_space_between_dots_dashes:
  5911                           	opt stack 0
  5912                           tblptru	equ	0xFF8
  5913                           tblptrh	equ	0xFF7
  5914                           tblptrl	equ	0xFF6
  5915                           tablat	equ	0xFF5
  5916                           intcon	equ	0xFF2
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           postdec1	equ	0xFE5
  5920                           fsr1h	equ	0xFE2
  5921                           fsr1l	equ	0xFE1
  5922                           indf2	equ	0xFDF
  5923                           postinc2	equ	0xFDE
  5924                           postdec2	equ	0xFDD
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _util_transmit_dot *****************
  5930 ;; Defined at:
  5931 ;;		line 259 in file "easat2_util_transmission.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5945 ;;      Params:         0       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0
  5948 ;;      Totals:         0       0       0       0       0       0       0
  5949 ;;Total ram usage:        0 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    3
  5952 ;; This function calls:
  5953 ;;		_util_pwm_start
  5954 ;;		_util_pwm_stop
  5955 ;;		_util_waits_delay_ms
  5956 ;; This function is called by:
  5957 ;;		_util_transmit_morse_sequence
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text23
  5962  003F9A                     __ptext23:
  5963                           	opt stack 0
  5964  003F9A                     _util_transmit_dot:
  5965                           	opt stack 23
  5966                           
  5967                           ;easat2_util_transmission.c: 263: (PORTDbits.RD1) = 1;
  5968                           
  5969                           ;incstack = 0
  5970  003F9A  8283               	bsf	3971,1,c	;volatile
  5971                           
  5972                           ;easat2_util_transmission.c: 266: util_pwm_start();
  5973  003F9C  EC1E  F020         	call	_util_pwm_start	;wreg free
  5974                           
  5975                           ;easat2_util_transmission.c: 267: util_waits_delay_ms((int)(2400/32));
  5976  003FA0  0E00               	movlw	0
  5977  003FA2  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5978  003FA4  0E4B               	movlw	75
  5979  003FA6  6E1A               	movwf	util_waits_delay_ms@ms,c
  5980  003FA8  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  5981                           
  5982                           ;easat2_util_transmission.c: 268: util_pwm_stop();
  5983  003FAC  EC1A  F020         	call	_util_pwm_stop	;wreg free
  5984                           
  5985                           ;easat2_util_transmission.c: 270: (PORTDbits.RD1) = 0;
  5986  003FB0  9283               	bcf	3971,1,c	;volatile
  5987  003FB2  0012               	return		;funcret
  5988  003FB4                     __end_of_util_transmit_dot:
  5989                           	opt stack 0
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           intcon	equ	0xFF2
  5995                           postinc0	equ	0xFEE
  5996                           wreg	equ	0xFE8
  5997                           postdec1	equ	0xFE5
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function _util_transmit_dash *****************
  6008 ;; Defined at:
  6009 ;;		line 281 in file "easat2_util_transmission.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6023 ;;      Params:         0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    3
  6030 ;; This function calls:
  6031 ;;		_util_pwm_start
  6032 ;;		_util_pwm_stop
  6033 ;;		_util_waits_delay_ms
  6034 ;; This function is called by:
  6035 ;;		_util_transmit_morse_sequence
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text24
  6040  003FB4                     __ptext24:
  6041                           	opt stack 0
  6042  003FB4                     _util_transmit_dash:
  6043                           	opt stack 23
  6044                           
  6045                           ;easat2_util_transmission.c: 285: (PORTDbits.RD1) = 1;
  6046                           
  6047                           ;incstack = 0
  6048  003FB4  8283               	bsf	3971,1,c	;volatile
  6049                           
  6050                           ;easat2_util_transmission.c: 288: util_pwm_start();
  6051  003FB6  EC1E  F020         	call	_util_pwm_start	;wreg free
  6052                           
  6053                           ;easat2_util_transmission.c: 289: util_waits_delay_ms(((int)(2400/32)*3));
  6054  003FBA  0E00               	movlw	0
  6055  003FBC  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  6056  003FBE  0EE1               	movlw	225
  6057  003FC0  6E1A               	movwf	util_waits_delay_ms@ms,c
  6058  003FC2  EC4C  F01F         	call	_util_waits_delay_ms	;wreg free
  6059                           
  6060                           ;easat2_util_transmission.c: 290: util_pwm_stop();
  6061  003FC6  EC1A  F020         	call	_util_pwm_stop	;wreg free
  6062                           
  6063                           ;easat2_util_transmission.c: 292: (PORTDbits.RD1) = 0;
  6064  003FCA  9283               	bcf	3971,1,c	;volatile
  6065  003FCC  0012               	return		;funcret
  6066  003FCE                     __end_of_util_transmit_dash:
  6067                           	opt stack 0
  6068                           tblptru	equ	0xFF8
  6069                           tblptrh	equ	0xFF7
  6070                           tblptrl	equ	0xFF6
  6071                           tablat	equ	0xFF5
  6072                           intcon	equ	0xFF2
  6073                           postinc0	equ	0xFEE
  6074                           wreg	equ	0xFE8
  6075                           postdec1	equ	0xFE5
  6076                           fsr1h	equ	0xFE2
  6077                           fsr1l	equ	0xFE1
  6078                           indf2	equ	0xFDF
  6079                           postinc2	equ	0xFDE
  6080                           postdec2	equ	0xFDD
  6081                           fsr2h	equ	0xFDA
  6082                           fsr2l	equ	0xFD9
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function _util_waits_delay_ms *****************
  6086 ;; Defined at:
  6087 ;;		line 40 in file "easat2_util_waits.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  ms              2   25[COMRAM] int 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  i               2   28[COMRAM] int 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6101 ;;      Params:         2       0       0       0       0       0       0
  6102 ;;      Locals:         2       0       0       0       0       0       0
  6103 ;;      Temps:          1       0       0       0       0       0       0
  6104 ;;      Totals:         5       0       0       0       0       0       0
  6105 ;;Total ram usage:        5 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    2
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_util_transmit_dot
  6112 ;;		_util_transmit_dash
  6113 ;;		_util_transmit_space_between_dots_dashes
  6114 ;;		_util_transmit_space_between_letters
  6115 ;;		_util_transmit_space_between_words
  6116 ;;		_util_waits_delay_secs
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text25
  6121  003E98                     __ptext25:
  6122                           	opt stack 0
  6123  003E98                     _util_waits_delay_ms:
  6124                           	opt stack 25
  6125                           
  6126                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6127                           
  6128                           ;incstack = 0
  6129  003E98  0E00               	movlw	0
  6130  003E9A  6E1E               	movwf	util_waits_delay_ms@i+1,c
  6131  003E9C  0E00               	movlw	0
  6132  003E9E  6E1D               	movwf	util_waits_delay_ms@i,c
  6133  003EA0  D006               	goto	l400
  6134  003EA2                     l5186:
  6135                           
  6136                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6137  003EA2  0EA6               	movlw	166
  6138  003EA4                     u7707:
  6139  003EA4  2EE8               	decfsz	wreg,f,c
  6140  003EA6  D7FE               	bra	u7707
  6141  003EA8  D000               	nop2	
  6142  003EAA  4A1D               	infsnz	util_waits_delay_ms@i,f,c
  6143  003EAC  2A1E               	incf	util_waits_delay_ms@i+1,f,c
  6144  003EAE                     l400:
  6145  003EAE  501A               	movf	util_waits_delay_ms@ms,w,c
  6146  003EB0  5C1D               	subwf	util_waits_delay_ms@i,w,c
  6147  003EB2  501E               	movf	util_waits_delay_ms@i+1,w,c
  6148  003EB4  0A80               	xorlw	128
  6149  003EB6  6E1C               	movwf	??_util_waits_delay_ms& (0+255),c
  6150  003EB8  501B               	movf	util_waits_delay_ms@ms+1,w,c
  6151  003EBA  0A80               	xorlw	128
  6152  003EBC  581C               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6153  003EBE  B0D8               	btfsc	status,0,c
  6154  003EC0  0012               	return	
  6155  003EC2  D7EF               	goto	l5186
  6156  003EC4                     __end_of_util_waits_delay_ms:
  6157                           	opt stack 0
  6158                           tblptru	equ	0xFF8
  6159                           tblptrh	equ	0xFF7
  6160                           tblptrl	equ	0xFF6
  6161                           tablat	equ	0xFF5
  6162                           intcon	equ	0xFF2
  6163                           postinc0	equ	0xFEE
  6164                           wreg	equ	0xFE8
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _util_pwm_stop *****************
  6176 ;; Defined at:
  6177 ;;		line 95 in file "easat2_util_pwm.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		None
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6191 ;;      Params:         0       0       0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    2
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_util_transmit_dot
  6202 ;;		_util_transmit_dash
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text26
  6207  004034                     __ptext26:
  6208                           	opt stack 0
  6209  004034                     _util_pwm_stop:
  6210                           	opt stack 23
  6211                           
  6212                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6213                           
  6214                           ;incstack = 0
  6215  004034  8495               	bsf	3989,2,c	;volatile
  6216                           
  6217                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6218  004036  8695               	bsf	3989,3,c	;volatile
  6219                           
  6220                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6221  004038  94BA               	bcf	4026,2,c	;volatile
  6222  00403A  0012               	return		;funcret
  6223  00403C                     __end_of_util_pwm_stop:
  6224                           	opt stack 0
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           intcon	equ	0xFF2
  6230                           postinc0	equ	0xFEE
  6231                           wreg	equ	0xFE8
  6232                           postdec1	equ	0xFE5
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _util_pwm_start *****************
  6243 ;; Defined at:
  6244 ;;		line 78 in file "easat2_util_pwm.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		None
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:         0       0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    2
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_util_transmit_dot
  6269 ;;		_util_transmit_dash
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text27
  6274  00403C                     __ptext27:
  6275                           	opt stack 0
  6276  00403C                     _util_pwm_start:
  6277                           	opt stack 23
  6278                           
  6279                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6280                           
  6281                           ;incstack = 0
  6282  00403C  9495               	bcf	3989,2,c	;volatile
  6283                           
  6284                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6285  00403E  9695               	bcf	3989,3,c	;volatile
  6286                           
  6287                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6288  004040  84BA               	bsf	4026,2,c	;volatile
  6289  004042  0012               	return		;funcret
  6290  004044                     __end_of_util_pwm_start:
  6291                           	opt stack 0
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           intcon	equ	0xFF2
  6297                           postinc0	equ	0xFEE
  6298                           wreg	equ	0xFE8
  6299                           postdec1	equ	0xFE5
  6300                           fsr1h	equ	0xFE2
  6301                           fsr1l	equ	0xFE1
  6302                           indf2	equ	0xFDF
  6303                           postinc2	equ	0xFDE
  6304                           postdec2	equ	0xFDD
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function _strlen *****************
  6310 ;; Defined at:
  6311 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6314 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  6315 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  6316 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  6317 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  6318 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  6319 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  6320 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  6321 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  6322 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  6323 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  6324 ;;		 -> STR_5(3), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128
      +), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  cp              2   29[COMRAM] PTR const unsigned char 
  6327 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  6328 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  6329 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  6330 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  6331 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  6332 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  6333 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  6334 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  6335 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  6336 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  6337 ;;		 -> STR_5(3), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128
      +), 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2   25[COMRAM] unsigned int 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6347 ;;      Params:         2       0       0       0       0       0       0
  6348 ;;      Locals:         2       0       0       0       0       0       0
  6349 ;;      Temps:          2       0       0       0       0       0       0
  6350 ;;      Totals:         6       0       0       0       0       0       0
  6351 ;;Total ram usage:        6 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    2
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_util_beacon_transmission
  6358 ;;		_util_transmit_morse_sequence
  6359 ;;		_util_command_ack_transmission
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text28
  6364  003AE2                     __ptext28:
  6365                           	opt stack 0
  6366  003AE2                     _strlen:
  6367                           	opt stack 24
  6368                           
  6369                           ;incstack = 0
  6370  003AE2  C01A  F01E         	movff	strlen@s,strlen@cp
  6371  003AE6  C01B  F01F         	movff	strlen@s+1,strlen@cp+1
  6372  003AEA  D002               	goto	l5398
  6373  003AEC                     l5396:
  6374  003AEC  4A1E               	infsnz	strlen@cp,f,c
  6375  003AEE  2A1F               	incf	strlen@cp+1,f,c
  6376  003AF0                     l5398:
  6377  003AF0  C01E  FFF6         	movff	strlen@cp,tblptrl
  6378  003AF4  C01F  FFF7         	movff	strlen@cp+1,tblptrh
  6379  003AF8  6AF8               	clrf	tblptru,c
  6380  003AFA  0E05               	movlw	(high __ramtop+-1)
  6381  003AFC  64F7               	cpfsgt	tblptrh,c
  6382  003AFE  D003               	bra	u5897
  6383  003B00  0008               	tblrd		*
  6384  003B02  50F5               	movf	tablat,w,c
  6385  003B04  D005               	bra	u5890
  6386  003B06                     u5897:
  6387  003B06  CFF6 FFE9          	movff	tblptrl,fsr0l
  6388  003B0A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6389  003B0E  50EF               	movf	indf0,w,c
  6390  003B10                     u5890:
  6391  003B10  0900               	iorlw	0
  6392  003B12  A4D8               	btfss	status,2,c
  6393  003B14  D7EB               	goto	l5396
  6394  003B16  C01A  F01C         	movff	strlen@s,??_strlen
  6395  003B1A  C01B  F01D         	movff	strlen@s+1,??_strlen+1
  6396  003B1E  1E1C               	comf	??_strlen,f,c
  6397  003B20  1E1D               	comf	??_strlen+1,f,c
  6398  003B22  4A1C               	infsnz	??_strlen,f,c
  6399  003B24  2A1D               	incf	??_strlen+1,f,c
  6400  003B26  501E               	movf	strlen@cp,w,c
  6401  003B28  241C               	addwf	??_strlen,w,c
  6402  003B2A  6E1A               	movwf	?_strlen,c
  6403  003B2C  501F               	movf	strlen@cp+1,w,c
  6404  003B2E  201D               	addwfc	??_strlen+1,w,c
  6405  003B30  6E1B               	movwf	?_strlen+1,c
  6406  003B32  0012               	return	
  6407  003B34                     __end_of_strlen:
  6408                           	opt stack 0
  6409                           tblptru	equ	0xFF8
  6410                           tblptrh	equ	0xFF7
  6411                           tblptrl	equ	0xFF6
  6412                           tablat	equ	0xFF5
  6413                           intcon	equ	0xFF2
  6414                           indf0	equ	0xFEF
  6415                           postinc0	equ	0xFEE
  6416                           fsr0h	equ	0xFEA
  6417                           fsr0l	equ	0xFE9
  6418                           wreg	equ	0xFE8
  6419                           postdec1	equ	0xFE5
  6420                           fsr1h	equ	0xFE2
  6421                           fsr1l	equ	0xFE1
  6422                           indf2	equ	0xFDF
  6423                           postinc2	equ	0xFDE
  6424                           postdec2	equ	0xFDD
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _strcpy *****************
  6430 ;; Defined at:
  6431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  to              2   25[COMRAM] PTR unsigned char 
  6434 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6435 ;;  from            2   27[COMRAM] PTR const unsigned char 
  6436 ;;		 -> STR_3(11), STR_1(7), 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  cp              2   29[COMRAM] PTR unsigned char 
  6439 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  2   25[COMRAM] PTR unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6449 ;;      Params:         4       0       0       0       0       0       0
  6450 ;;      Locals:         2       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0
  6452 ;;      Totals:         6       0       0       0       0       0       0
  6453 ;;Total ram usage:        6 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_util_beacon_transmission
  6460 ;;		_util_command_ack_transmission
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text29
  6465  003E68                     __ptext29:
  6466                           	opt stack 0
  6467  003E68                     _strcpy:
  6468                           	opt stack 26
  6469                           
  6470                           ;incstack = 0
  6471  003E68  C01A  F01E         	movff	strcpy@to,strcpy@cp
  6472  003E6C  C01B  F01F         	movff	strcpy@to+1,strcpy@cp+1
  6473  003E70  D004               	goto	l6238
  6474  003E72                     l6236:
  6475  003E72  4A1E               	infsnz	strcpy@cp,f,c
  6476  003E74  2A1F               	incf	strcpy@cp+1,f,c
  6477  003E76  4A1C               	infsnz	strcpy@from,f,c
  6478  003E78  2A1D               	incf	strcpy@from+1,f,c
  6479  003E7A                     l6238:
  6480  003E7A  C01C  FFF6         	movff	strcpy@from,tblptrl
  6481  003E7E  C01D  FFF7         	movff	strcpy@from+1,tblptrh
  6482  003E82                     	if	0	;tblptru may be non-zero
  6483  003E82                     	endif
  6484  003E82                     	if	0	;tblptru may be non-zero
  6485  003E82                     	endif
  6486  003E82  C01E  FFD9         	movff	strcpy@cp,fsr2l
  6487  003E86  C01F  FFDA         	movff	strcpy@cp+1,fsr2h
  6488  003E8A  0008               	tblrd		*
  6489  003E8C  CFF5 FFDF          	movff	tablat,indf2
  6490  003E90  50DF               	movf	indf2,w,c
  6491  003E92  B4D8               	btfsc	status,2,c
  6492  003E94  0012               	return	
  6493  003E96  D7ED               	goto	l6236
  6494  003E98                     __end_of_strcpy:
  6495                           	opt stack 0
  6496                           tblptru	equ	0xFF8
  6497                           tblptrh	equ	0xFF7
  6498                           tblptrl	equ	0xFF6
  6499                           tablat	equ	0xFF5
  6500                           intcon	equ	0xFF2
  6501                           indf0	equ	0xFEF
  6502                           postinc0	equ	0xFEE
  6503                           fsr0h	equ	0xFEA
  6504                           fsr0l	equ	0xFE9
  6505                           wreg	equ	0xFE8
  6506                           postdec1	equ	0xFE5
  6507                           fsr1h	equ	0xFE2
  6508                           fsr1l	equ	0xFE1
  6509                           indf2	equ	0xFDF
  6510                           postinc2	equ	0xFDE
  6511                           postdec2	equ	0xFDD
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _strcat *****************
  6517 ;; Defined at:
  6518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  to              2   25[COMRAM] PTR unsigned char 
  6521 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6522 ;;  from            2   27[COMRAM] PTR const unsigned char 
  6523 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_beacon_transmission@BEACON_BUFFER(64), 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  cp              2   29[COMRAM] PTR unsigned char 
  6526 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  2   25[COMRAM] PTR unsigned char 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6536 ;;      Params:         4       0       0       0       0       0       0
  6537 ;;      Locals:         2       0       0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0
  6539 ;;      Totals:         6       0       0       0       0       0       0
  6540 ;;Total ram usage:        6 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    2
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_util_beacon_transmission
  6547 ;;		_util_command_ack_transmission
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text30
  6552  003CA4                     __ptext30:
  6553                           	opt stack 0
  6554  003CA4                     _strcat:
  6555                           	opt stack 26
  6556                           
  6557                           ;incstack = 0
  6558  003CA4  C01A  F01E         	movff	strcat@to,strcat@cp
  6559  003CA8  C01B  F01F         	movff	strcat@to+1,strcat@cp+1
  6560  003CAC  D002               	goto	l6252
  6561  003CAE                     l6250:
  6562  003CAE  4A1E               	infsnz	strcat@cp,f,c
  6563  003CB0  2A1F               	incf	strcat@cp+1,f,c
  6564  003CB2                     l6252:
  6565  003CB2  C01E  FFD9         	movff	strcat@cp,fsr2l
  6566  003CB6  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  6567  003CBA  50DF               	movf	indf2,w,c
  6568  003CBC  B4D8               	btfsc	status,2,c
  6569  003CBE  D005               	goto	l6256
  6570  003CC0  D7F6               	goto	l6250
  6571  003CC2                     l6254:
  6572  003CC2  4A1E               	infsnz	strcat@cp,f,c
  6573  003CC4  2A1F               	incf	strcat@cp+1,f,c
  6574  003CC6  4A1C               	infsnz	strcat@from,f,c
  6575  003CC8  2A1D               	incf	strcat@from+1,f,c
  6576  003CCA                     l6256:
  6577  003CCA  C01C  FFD9         	movff	strcat@from,fsr2l
  6578  003CCE  C01D  FFDA         	movff	strcat@from+1,fsr2h
  6579  003CD2  C01E  FFE1         	movff	strcat@cp,fsr1l
  6580  003CD6  C01F  FFE2         	movff	strcat@cp+1,fsr1h
  6581  003CDA  CFDF FFE7          	movff	indf2,indf1
  6582  003CDE  50E7               	movf	indf1,w,c
  6583  003CE0  B4D8               	btfsc	status,2,c
  6584  003CE2  0012               	return	
  6585  003CE4  D7EE               	goto	l6254
  6586  003CE6                     __end_of_strcat:
  6587                           	opt stack 0
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           intcon	equ	0xFF2
  6593                           indf0	equ	0xFEF
  6594                           postinc0	equ	0xFEE
  6595                           fsr0h	equ	0xFEA
  6596                           fsr0l	equ	0xFE9
  6597                           wreg	equ	0xFE8
  6598                           indf1	equ	0xFE7
  6599                           postdec1	equ	0xFE5
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           indf2	equ	0xFDF
  6603                           postinc2	equ	0xFDE
  6604                           postdec2	equ	0xFDD
  6605                           fsr2h	equ	0xFDA
  6606                           fsr2l	equ	0xFD9
  6607                           status	equ	0xFD8
  6608                           
  6609 ;; *************** function _sprintf *****************
  6610 ;; Defined at:
  6611 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprintf.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  wh              2  107[BANK0 ] PTR unsigned char 
  6614 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_beacon_transmission@BEACON_BUFFER(64), 
  6615 ;;  f               2  109[BANK0 ] PTR const unsigned char 
  6616 ;;		 -> STR_4(13), STR_2(23), 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  pb              4  123[BANK0 ] struct __prbuf
  6619 ;;  ap              2  121[BANK0 ] PTR void [1]
  6620 ;;		 -> ?_sprintf(2), ?_printf(2), 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  2  107[BANK0 ] int 
  6623 ;; Registers used:
  6624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6630 ;;      Params:         0      14       0       0       0       0       0
  6631 ;;      Locals:         0       6       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0
  6633 ;;      Totals:         0      20       0       0       0       0       0
  6634 ;;Total ram usage:       20 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    6
  6637 ;; This function calls:
  6638 ;;		__doprnt
  6639 ;; This function is called by:
  6640 ;;		_util_beacon_transmission
  6641 ;;		_util_command_ack_transmission
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text31
  6646  003B34                     __ptext31:
  6647                           	opt stack 0
  6648  003B34                     _sprintf:
  6649                           	opt stack 22
  6650                           
  6651                           ;incstack = 0
  6652  003B34  C0CB  F0DB         	movff	sprintf@wh,sprintf@pb
  6653  003B38  C0CC  F0DC         	movff	sprintf@wh+1,sprintf@pb+1
  6654  003B3C  0E00               	movlw	0
  6655  003B3E  0100               	movlb	0	; () banked
  6656  003B40  6FDD               	movwf	(sprintf@pb+2)& (0+255),b
  6657  003B42  0E00               	movlw	0
  6658  003B44  0100               	movlb	0	; () banked
  6659  003B46  6FDE               	movwf	(sprintf@pb+3)& (0+255),b
  6660  003B48  0ECF               	movlw	low (?_sprintf+4)
  6661  003B4A  0100               	movlb	0	; () banked
  6662  003B4C  6FD9               	movwf	sprintf@ap& (0+255),b
  6663  003B4E  0E00               	movlw	high (?_sprintf+4)
  6664  003B50  0100               	movlb	0	; () banked
  6665  003B52  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668  003B54  0EDB               	movlw	low sprintf@pb
  6669  003B56  0100               	movlb	0	; () banked
  6670  003B58  6FA8               	movwf	__doprnt@pb& (0+255),b
  6671  003B5A  0E00               	movlw	high sprintf@pb
  6672  003B5C  0100               	movlb	0	; () banked
  6673  003B5E  6FA9               	movwf	(__doprnt@pb+1)& (0+255),b
  6674  003B60  C0CD  F0AA         	movff	sprintf@f,__doprnt@f
  6675  003B64  C0CE  F0AB         	movff	sprintf@f+1,__doprnt@f+1
  6676  003B68  0ED9               	movlw	low sprintf@ap
  6677  003B6A  0100               	movlb	0	; () banked
  6678  003B6C  6FAC               	movwf	__doprnt@ap& (0+255),b
  6679  003B6E  0E00               	movlw	high sprintf@ap
  6680  003B70  0100               	movlb	0	; () banked
  6681  003B72  6FAD               	movwf	(__doprnt@ap+1)& (0+255),b
  6682  003B74  EC55  F000         	call	__doprnt	;wreg free
  6683  003B78  C0DB  FFD9         	movff	sprintf@pb,fsr2l
  6684  003B7C  C0DC  FFDA         	movff	sprintf@pb+1,fsr2h
  6685  003B80  0E00               	movlw	0
  6686  003B82  6EDF               	movwf	indf2,c
  6687  003B84  0012               	return	
  6688  003B86                     __end_of_sprintf:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           intcon	equ	0xFF2
  6695                           indf0	equ	0xFEF
  6696                           postinc0	equ	0xFEE
  6697                           fsr0h	equ	0xFEA
  6698                           fsr0l	equ	0xFE9
  6699                           wreg	equ	0xFE8
  6700                           indf1	equ	0xFE7
  6701                           postdec1	equ	0xFE5
  6702                           fsr1h	equ	0xFE2
  6703                           fsr1l	equ	0xFE1
  6704                           indf2	equ	0xFDF
  6705                           postinc2	equ	0xFDE
  6706                           postdec2	equ	0xFDD
  6707                           fsr2h	equ	0xFDA
  6708                           fsr2l	equ	0xFD9
  6709                           status	equ	0xFD8
  6710                           
  6711 ;; *************** function __doprnt *****************
  6712 ;; Defined at:
  6713 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  pb              2   72[BANK0 ] PTR struct __prbuf
  6716 ;;		 -> sprintf@pb(4), printf@pb(4), 
  6717 ;;  f               2   74[BANK0 ] PTR const unsigned char 
  6718 ;;		 -> STR_47(2), STR_46(2), STR_4(13), STR_2(23), 
  6719 ;;  ap              2   76[BANK0 ] PTR PTR void 
  6720 ;;		 -> sprintf@ap(2), printf@ap(2), 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  tmpval          4   97[BANK0 ] struct .
  6723 ;;  val             4   91[BANK0 ] unsigned long 
  6724 ;;  fval            3  101[BANK0 ] unsigned long 
  6725 ;;  cp              3    0        PTR const unsigned char 
  6726 ;;  prec            2  104[BANK0 ] int 
  6727 ;;  exp             2   95[BANK0 ] int 
  6728 ;;  width           2   89[BANK0 ] int 
  6729 ;;  flag            2   87[BANK0 ] unsigned short 
  6730 ;;  len             2    0        unsigned int 
  6731 ;;  c               1  106[BANK0 ] char 
  6732 ;;  d               1    0        unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  2   72[BANK0 ] int 
  6735 ;; Registers used:
  6736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6742 ;;      Params:         0       6       0       0       0       0       0
  6743 ;;      Locals:         0      23       0       0       0       0       0
  6744 ;;      Temps:          0       6       0       0       0       0       0
  6745 ;;      Totals:         0      35       0       0       0       0       0
  6746 ;;Total ram usage:       35 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    5
  6749 ;; This function calls:
  6750 ;;		Absolute function
  6751 ;;		___awdiv
  6752 ;;		___ftadd
  6753 ;;		___ftge
  6754 ;;		___ftmul
  6755 ;;		___ftneg
  6756 ;;		___ftsub
  6757 ;;		___fttol
  6758 ;;		___lldiv
  6759 ;;		___llmod
  6760 ;;		___lltoft
  6761 ;;		___wmul
  6762 ;;		__div_to_l_
  6763 ;;		__tdiv_to_l_
  6764 ;;		_fround
  6765 ;;		_isdigit
  6766 ;;		_putch
  6767 ;;		_scale
  6768 ;; This function is called by:
  6769 ;;		_sprintf
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text32
  6774  0000AA                     __ptext32:
  6775                           	opt stack 0
  6776  0000AA                     __doprnt:
  6777                           	opt stack 22
  6778                           
  6779                           ;doprnt.c: 499: signed char c;
  6780                           ;doprnt.c: 501: int width;
  6781                           ;doprnt.c: 504: int prec;
  6782                           ;doprnt.c: 508: unsigned short flag;
  6783                           ;doprnt.c: 515: char d;
  6784                           ;doprnt.c: 516: double fval;
  6785                           ;doprnt.c: 517: int exp;
  6786                           ;doprnt.c: 523: union {
  6787                           ;doprnt.c: 524: unsigned long vd;
  6788                           ;doprnt.c: 525: double integ;
  6789                           ;doprnt.c: 526: } tmpval;
  6790                           ;doprnt.c: 528: unsigned long val;
  6791                           ;doprnt.c: 529: unsigned len;
  6792                           ;doprnt.c: 530: const char * cp;
  6793                           ;doprnt.c: 536: while(c = *f++) {
  6794                           
  6795                           ;incstack = 0
  6796  0000AA  EFE3  F007         	goto	l6132
  6797  0000AE                     l5810:
  6798                           
  6799                           ;doprnt.c: 538: if(c != '%')
  6800  0000AE  0E25               	movlw	37
  6801  0000B0  0100               	movlb	0	; () banked
  6802  0000B2  19CA               	xorwf	__doprnt@c& (0+255),w,b
  6803  0000B4  B4D8               	btfsc	status,2,c
  6804  0000B6  D038               	goto	l5820
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;doprnt.c: 540: {
  6808                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  6809  0000B8  0100               	movlb	0	; () banked
  6810  0000BA  EE20 F002          	lfsr	2,2
  6811  0000BE  51A8               	movf	__doprnt@pb& (0+255),w,b
  6812  0000C0  26D9               	addwf	fsr2l,f,c
  6813  0000C2  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  6814  0000C4  22DA               	addwfc	fsr2h,f,c
  6815  0000C6  50DE               	movf	postinc2,w,c
  6816  0000C8  10DE               	iorwf	postinc2,w,c
  6817  0000CA  B4D8               	btfsc	status,2,c
  6818  0000CC  D016               	goto	l5816
  6819                           
  6820                           ; BSR set to: 0
  6821  0000CE  0100               	movlb	0	; () banked
  6822  0000D0  EE20 F002          	lfsr	2,2
  6823  0000D4  51A8               	movf	__doprnt@pb& (0+255),w,b
  6824  0000D6  26D9               	addwf	fsr2l,f,c
  6825  0000D8  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  6826  0000DA  22DA               	addwfc	fsr2h,f,c
  6827  0000DC  D802               	call	u6448
  6828  0000DE  EFE3  F007         	goto	l6132
  6829  0000E2                     u6448:
  6830  0000E2  0005               	push	
  6831  0000E4  6EFA               	movwf	pclath,c
  6832  0000E6  50DE               	movf	postinc2,w,c
  6833  0000E8  6EFD               	movwf	tosl,c
  6834  0000EA  50DE               	movf	postinc2,w,c
  6835  0000EC  6EFE               	movwf	tosh,c
  6836  0000EE  50F8               	movf	tblptru,w,c
  6837  0000F0  6EFF               	movwf	tosu,c
  6838  0000F2  50FA               	movf	pclath,w,c
  6839  0000F4  0100               	movlb	0	; () banked
  6840  0000F6  51CA               	movf	__doprnt@c& (0+255),w,b
  6841  0000F8  0012               	return		;indir
  6842  0000FA                     l5816:
  6843  0000FA  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  6844  0000FE  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  6845  000102  CFDE F0AE          	movff	postinc2,??__doprnt
  6846  000106  CFDD F0AF          	movff	postdec2,??__doprnt+1
  6847  00010A  C0AE  FFD9         	movff	??__doprnt,fsr2l
  6848  00010E  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  6849  000112  C0CA  FFDF         	movff	__doprnt@c,indf2
  6850  000116  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  6851  00011A  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  6852  00011E  2ADE               	incf	postinc2,f,c
  6853  000120  0E00               	movlw	0
  6854  000122  22DD               	addwfc	postdec2,f,c
  6855                           
  6856                           ;doprnt.c: 542: continue;
  6857  000124  EFE3  F007         	goto	l6132
  6858  000128                     l5820:
  6859                           
  6860                           ;doprnt.c: 543: }
  6861                           ;doprnt.c: 546: width = 0;
  6862  000128  0E00               	movlw	0
  6863  00012A  0100               	movlb	0	; () banked
  6864  00012C  6FBA               	movwf	(__doprnt@width+1)& (0+255),b
  6865  00012E  0E00               	movlw	0
  6866  000130  6FB9               	movwf	__doprnt@width& (0+255),b
  6867                           
  6868                           ;doprnt.c: 548: flag = 0;
  6869  000132  0E00               	movlw	0
  6870  000134  0100               	movlb	0	; () banked
  6871  000136  6FB8               	movwf	(__doprnt@flag+1)& (0+255),b
  6872  000138  0E00               	movlw	0
  6873  00013A  6FB7               	movwf	__doprnt@flag& (0+255),b
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6877  00013C  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  6878  000140  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  6879  000144                     	if	0	;tblptru may be non-zero
  6880  000144                     	endif
  6881  000144                     	if	0	;tblptru may be non-zero
  6882  000144                     	endif
  6883  000144  0008               	tblrd		*
  6884  000146  50F5               	movf	tablat,w,c
  6885  000148  ECAF  F01F         	call	_isdigit
  6886  00014C  A0D8               	btfss	status,0,c
  6887  00014E  D040               	goto	l5834
  6888                           
  6889                           ;doprnt.c: 598: width = 0;
  6890  000150  0E00               	movlw	0
  6891  000152  0100               	movlb	0	; () banked
  6892  000154  6FBA               	movwf	(__doprnt@width+1)& (0+255),b
  6893  000156  0E00               	movlw	0
  6894  000158  6FB9               	movwf	__doprnt@width& (0+255),b
  6895  00015A                     l5826:
  6896                           
  6897                           ;doprnt.c: 600: width *= 10;
  6898  00015A  C0B9  F079         	movff	__doprnt@width,___wmul@multiplier
  6899  00015E  C0BA  F07A         	movff	__doprnt@width+1,___wmul@multiplier+1
  6900  000162  0E00               	movlw	0
  6901  000164  0100               	movlb	0	; () banked
  6902  000166  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6903  000168  0E0A               	movlw	10
  6904  00016A  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6905  00016C  EC03  F01F         	call	___wmul	;wreg free
  6906  000170  C079  F0B9         	movff	?___wmul,__doprnt@width
  6907  000174  C07A  F0BA         	movff	?___wmul+1,__doprnt@width+1
  6908                           
  6909                           ;doprnt.c: 601: width += *f++ - '0';
  6910  000178  0ED0               	movlw	208
  6911  00017A  0100               	movlb	0	; () banked
  6912  00017C  6FAE               	movwf	??__doprnt& (0+255),b
  6913  00017E  0EFF               	movlw	255
  6914  000180  0100               	movlb	0	; () banked
  6915  000182  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  6916  000184  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  6917  000188  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  6918  00018C                     	if	0	;tblptru may be non-zero
  6919  00018C                     	endif
  6920  00018C                     	if	0	;tblptru may be non-zero
  6921  00018C                     	endif
  6922  00018C  0008               	tblrd		*
  6923  00018E  50F5               	movf	tablat,w,c
  6924  000190  0100               	movlb	0	; () banked
  6925  000192  6FB0               	movwf	(??__doprnt+2)& (0+255),b
  6926  000194  6BB1               	clrf	(??__doprnt+3)& (0+255),b
  6927  000196  0100               	movlb	0	; () banked
  6928  000198  51AE               	movf	??__doprnt& (0+255),w,b
  6929  00019A  0100               	movlb	0	; () banked
  6930  00019C  27B0               	addwf	(??__doprnt+2)& (0+255),f,b
  6931  00019E  0100               	movlb	0	; () banked
  6932  0001A0  51AF               	movf	(??__doprnt+1)& (0+255),w,b
  6933  0001A2  0100               	movlb	0	; () banked
  6934  0001A4  23B1               	addwfc	(??__doprnt+3)& (0+255),f,b
  6935  0001A6  0100               	movlb	0	; () banked
  6936  0001A8  51B0               	movf	(??__doprnt+2)& (0+255),w,b
  6937  0001AA  0100               	movlb	0	; () banked
  6938  0001AC  27B9               	addwf	__doprnt@width& (0+255),f,b
  6939  0001AE  0100               	movlb	0	; () banked
  6940  0001B0  51B1               	movf	(??__doprnt+3)& (0+255),w,b
  6941  0001B2  0100               	movlb	0	; () banked
  6942  0001B4  23BA               	addwfc	(__doprnt@width+1)& (0+255),f,b
  6943                           
  6944                           ; BSR set to: 0
  6945  0001B6  0100               	movlb	0	; () banked
  6946  0001B8  4BAA               	infsnz	__doprnt@f& (0+255),f,b
  6947  0001BA  2BAB               	incf	(__doprnt@f+1)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6951  0001BC  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  6952  0001C0  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  6953  0001C4                     	if	0	;tblptru may be non-zero
  6954  0001C4                     	endif
  6955  0001C4                     	if	0	;tblptru may be non-zero
  6956  0001C4                     	endif
  6957  0001C4  0008               	tblrd		*
  6958  0001C6  50F5               	movf	tablat,w,c
  6959  0001C8  ECAF  F01F         	call	_isdigit
  6960  0001CC  B0D8               	btfsc	status,0,c
  6961  0001CE  D7C5               	goto	l5826
  6962  0001D0                     l5834:
  6963                           
  6964                           ;doprnt.c: 608: }
  6965                           ;doprnt.c: 611: if(*f == '.') {
  6966  0001D0  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  6967  0001D4  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  6968  0001D8                     	if	0	;tblptru may be non-zero
  6969  0001D8                     	endif
  6970  0001D8                     	if	0	;tblptru may be non-zero
  6971  0001D8                     	endif
  6972  0001D8  0008               	tblrd		*
  6973  0001DA  50F5               	movf	tablat,w,c
  6974  0001DC  0A2E               	xorlw	46
  6975  0001DE  A4D8               	btfss	status,2,c
  6976  0001E0  D039               	goto	l5846
  6977                           
  6978                           ;doprnt.c: 612: flag |= 0x4000;
  6979  0001E2  0100               	movlb	0	; () banked
  6980  0001E4  8DB8               	bsf	(__doprnt@flag+1)& (0+255),6,b
  6981                           
  6982                           ;doprnt.c: 613: f++;
  6983  0001E6  0100               	movlb	0	; () banked
  6984  0001E8  4BAA               	infsnz	__doprnt@f& (0+255),f,b
  6985  0001EA  2BAB               	incf	(__doprnt@f+1)& (0+255),f,b
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;doprnt.c: 620: {
  6989                           ;doprnt.c: 621: prec = 0;
  6990  0001EC  0E00               	movlw	0
  6991  0001EE  0100               	movlb	0	; () banked
  6992  0001F0  6FC9               	movwf	(__doprnt@prec+1)& (0+255),b
  6993  0001F2  0E00               	movlw	0
  6994  0001F4  6FC8               	movwf	__doprnt@prec& (0+255),b
  6995                           
  6996                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6997  0001F6  D023               	goto	l5844
  6998  0001F8                     l5840:
  6999                           
  7000                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7001  0001F8  C0C8  F079         	movff	__doprnt@prec,___wmul@multiplier
  7002  0001FC  C0C9  F07A         	movff	__doprnt@prec+1,___wmul@multiplier+1
  7003  000200  0E00               	movlw	0
  7004  000202  0100               	movlb	0	; () banked
  7005  000204  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7006  000206  0E0A               	movlw	10
  7007  000208  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7008  00020A  EC03  F01F         	call	___wmul	;wreg free
  7009  00020E  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  7010  000212  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  7011  000216                     	if	0	;tblptru may be non-zero
  7012  000216                     	endif
  7013  000216                     	if	0	;tblptru may be non-zero
  7014  000216                     	endif
  7015  000216  0008               	tblrd		*
  7016  000218  50F5               	movf	tablat,w,c
  7017  00021A  0100               	movlb	0	; () banked
  7018  00021C  2779               	addwf	?___wmul& (0+255),f,b
  7019  00021E  0E00               	movlw	0
  7020  000220  0100               	movlb	0	; () banked
  7021  000222  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  7022  000224  0ED0               	movlw	208
  7023  000226  0100               	movlb	0	; () banked
  7024  000228  2579               	addwf	?___wmul& (0+255),w,b
  7025  00022A  0100               	movlb	0	; () banked
  7026  00022C  6FC8               	movwf	__doprnt@prec& (0+255),b
  7027  00022E  0EFF               	movlw	255
  7028  000230  0100               	movlb	0	; () banked
  7029  000232  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  7030  000234  0100               	movlb	0	; () banked
  7031  000236  6FC9               	movwf	(__doprnt@prec+1)& (0+255),b
  7032                           
  7033                           ; BSR set to: 0
  7034  000238  0100               	movlb	0	; () banked
  7035  00023A  4BAA               	infsnz	__doprnt@f& (0+255),f,b
  7036  00023C  2BAB               	incf	(__doprnt@f+1)& (0+255),f,b
  7037  00023E                     l5844:
  7038                           
  7039                           ; BSR set to: 0
  7040  00023E  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  7041  000242  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  7042  000246                     	if	0	;tblptru may be non-zero
  7043  000246                     	endif
  7044  000246                     	if	0	;tblptru may be non-zero
  7045  000246                     	endif
  7046  000246  0008               	tblrd		*
  7047  000248  50F5               	movf	tablat,w,c
  7048  00024A  ECAF  F01F         	call	_isdigit
  7049  00024E  A0D8               	btfss	status,0,c
  7050  000250  D00C               	goto	l5854
  7051  000252  D7D2               	goto	l5840
  7052  000254                     l5846:
  7053                           
  7054                           ;doprnt.c: 626: prec = 0;
  7055  000254  0E00               	movlw	0
  7056  000256  0100               	movlb	0	; () banked
  7057  000258  6FC9               	movwf	(__doprnt@prec+1)& (0+255),b
  7058  00025A  0E00               	movlw	0
  7059  00025C  6FC8               	movwf	__doprnt@prec& (0+255),b
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;doprnt.c: 628: flag |= 0x1000;
  7063  00025E  0100               	movlb	0	; () banked
  7064  000260  89B8               	bsf	(__doprnt@flag+1)& (0+255),4,b
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;doprnt.c: 630: }
  7068                           ;doprnt.c: 635: switch(c = *f++) {
  7069  000262  D003               	goto	l5854
  7070  000264                     l5850:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;doprnt.c: 663: flag |= 0x400;
  7074  000264  0100               	movlb	0	; () banked
  7075  000266  85B8               	bsf	(__doprnt@flag+1)& (0+255),2,b
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;doprnt.c: 698: case 'i':
  7079                           ;doprnt.c: 699: break;
  7080                           
  7081                           ; BSR set to: 0
  7082                           
  7083                           ;doprnt.c: 697: case 'd':
  7084                           
  7085                           ;doprnt.c: 664: break;
  7086  000268  D01A               	goto	l5856
  7087  00026A                     l5854:
  7088  00026A  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  7089  00026E  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  7090  000272  0100               	movlb	0	; () banked
  7091  000274  4BAA               	infsnz	__doprnt@f& (0+255),f,b
  7092  000276  2BAB               	incf	(__doprnt@f+1)& (0+255),f,b
  7093  000278                     	if	0	;tblptru may be non-zero
  7094  000278                     	endif
  7095  000278                     	if	0	;tblptru may be non-zero
  7096  000278                     	endif
  7097  000278  0008               	tblrd		*
  7098  00027A  CFF5 F0CA          	movff	tablat,__doprnt@c
  7099  00027E  0100               	movlb	0	; () banked
  7100  000280  51CA               	movf	__doprnt@c& (0+255),w,b
  7101                           
  7102                           ; Switch size 1, requested type "space"
  7103                           ; Number of cases is 4, Range of values is 0 to 105
  7104                           ; switch strategies available:
  7105                           ; Name         Instructions Cycles
  7106                           ; simple_byte           13     7 (average)
  7107                           ;	Chosen strategy is simple_byte
  7108  000282  0A00               	xorlw	0	; case 0
  7109  000284  B4D8               	btfsc	status,2,c
  7110  000286  EFF2  F007         	goto	l6134
  7111  00028A  0A64               	xorlw	100	; case 100
  7112  00028C  B4D8               	btfsc	status,2,c
  7113  00028E  D007               	goto	l5856
  7114  000290  0A02               	xorlw	2	; case 102
  7115  000292  B4D8               	btfsc	status,2,c
  7116  000294  D7E7               	goto	l5850
  7117  000296  0A0F               	xorlw	15	; case 105
  7118  000298  A4D8               	btfss	status,2,c
  7119  00029A  EFE3  F007         	goto	l6132
  7120  00029E                     l5856:
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;doprnt.c: 825: if(flag & (0x700)) {
  7124  00029E  0E07               	movlw	7
  7125  0002A0  0100               	movlb	0	; () banked
  7126  0002A2  15B8               	andwf	(__doprnt@flag+1)& (0+255),w,b
  7127  0002A4  B4D8               	btfsc	status,2,c
  7128  0002A6  EFF6  F005         	goto	l6042
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;doprnt.c: 827: if(flag & 0x1000)
  7132  0002AA  0100               	movlb	0	; () banked
  7133  0002AC  A9B8               	btfss	(__doprnt@flag+1)& (0+255),4,b
  7134  0002AE  D005               	goto	l5862
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;doprnt.c: 829: prec = 6;
  7138  0002B0  0E00               	movlw	0
  7139  0002B2  0100               	movlb	0	; () banked
  7140  0002B4  6FC9               	movwf	(__doprnt@prec+1)& (0+255),b
  7141  0002B6  0E06               	movlw	6
  7142  0002B8  6FC8               	movwf	__doprnt@prec& (0+255),b
  7143  0002BA                     l5862:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7147  0002BA  C0AC  FFD9         	movff	__doprnt@ap,fsr2l
  7148  0002BE  C0AD  FFDA         	movff	__doprnt@ap+1,fsr2h
  7149  0002C2  CFDF F0AE          	movff	indf2,??__doprnt
  7150  0002C6  0E03               	movlw	3
  7151  0002C8  26DE               	addwf	postinc2,f,c
  7152  0002CA  CFDF F0AF          	movff	indf2,??__doprnt+1
  7153  0002CE  0E00               	movlw	0
  7154  0002D0  22DD               	addwfc	postdec2,f,c
  7155  0002D2  C0AE  FFD9         	movff	??__doprnt,fsr2l
  7156  0002D6  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  7157  0002DA  CFDE F0C5          	movff	postinc2,__doprnt@fval
  7158  0002DE  CFDE F0C6          	movff	postinc2,__doprnt@fval+1
  7159  0002E2  CFDD F0C7          	movff	postdec2,__doprnt@fval+2
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;doprnt.c: 831: if(fval < 0.0) {
  7163  0002E6  0100               	movlb	0	; () banked
  7164  0002E8  AFC7               	btfss	(__doprnt@fval+2)& (0+255),7,b
  7165  0002EA  D011               	goto	l5870
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;doprnt.c: 832: fval = -fval;
  7169  0002EC  C0C5  F01A         	movff	__doprnt@fval,___ftneg@f1
  7170  0002F0  C0C6  F01B         	movff	__doprnt@fval+1,___ftneg@f1+1
  7171  0002F4  C0C7  F01C         	movff	__doprnt@fval+2,___ftneg@f1+2
  7172  0002F8  EC9D  F01F         	call	___ftneg	;wreg free
  7173  0002FC  C01A  F0C5         	movff	?___ftneg,__doprnt@fval
  7174  000300  C01B  F0C6         	movff	?___ftneg+1,__doprnt@fval+1
  7175  000304  C01C  F0C7         	movff	?___ftneg+2,__doprnt@fval+2
  7176                           
  7177                           ;doprnt.c: 833: flag |= 0x03;
  7178  000308  0E03               	movlw	3
  7179  00030A  0100               	movlb	0	; () banked
  7180  00030C  13B7               	iorwf	__doprnt@flag& (0+255),f,b
  7181  00030E                     l5870:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;doprnt.c: 834: }
  7185                           ;doprnt.c: 835: exp = 0;
  7186  00030E  0E00               	movlw	0
  7187  000310  0100               	movlb	0	; () banked
  7188  000312  6FC0               	movwf	(__doprnt@exp+1)& (0+255),b
  7189  000314  0E00               	movlw	0
  7190  000316  6FBF               	movwf	__doprnt@exp& (0+255),b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;doprnt.c: 836: if( fval!=0) {
  7194  000318  0100               	movlb	0	; () banked
  7195  00031A  51C5               	movf	__doprnt@fval& (0+255),w,b
  7196  00031C  0100               	movlb	0	; () banked
  7197  00031E  11C6               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  7198  000320  0100               	movlb	0	; () banked
  7199  000322  11C7               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  7200  000324  B4D8               	btfsc	status,2,c
  7201  000326  D093               	goto	l5898
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7205  000328  0E82               	movlw	130
  7206  00032A  0100               	movlb	0	; () banked
  7207  00032C  6FAE               	movwf	??__doprnt& (0+255),b
  7208  00032E  0EFF               	movlw	255
  7209  000330  0100               	movlb	0	; () banked
  7210  000332  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  7211  000334  C0C5  F0B0         	movff	__doprnt@fval,??__doprnt+2
  7212  000338  C0C6  F0B1         	movff	__doprnt@fval+1,??__doprnt+3
  7213  00033C  C0C7  F0B2         	movff	__doprnt@fval+2,??__doprnt+4
  7214  000340  C0C8  F0B3         	movff	__doprnt@fval+3,??__doprnt+5
  7215  000344  0E10               	movlw	16
  7216  000346  D006               	goto	u6530
  7217  000348                     u6535:
  7218  000348  0100               	movlb	0	; () banked
  7219  00034A  90D8               	bcf	status,0,c
  7220  00034C  33B3               	rrcf	(??__doprnt+5)& (0+255),f,b
  7221  00034E  33B2               	rrcf	(??__doprnt+4)& (0+255),f,b
  7222  000350  33B1               	rrcf	(??__doprnt+3)& (0+255),f,b
  7223  000352  33B0               	rrcf	(??__doprnt+2)& (0+255),f,b
  7224  000354                     u6530:
  7225  000354  2EE8               	decfsz	wreg,f,c
  7226  000356  D7F8               	goto	u6535
  7227  000358  0100               	movlb	0	; () banked
  7228  00035A  51B0               	movf	(??__doprnt+2)& (0+255),w,b
  7229  00035C  0100               	movlb	0	; () banked
  7230  00035E  25AE               	addwf	??__doprnt& (0+255),w,b
  7231  000360  0100               	movlb	0	; () banked
  7232  000362  6FBF               	movwf	__doprnt@exp& (0+255),b
  7233  000364  0E00               	movlw	0
  7234  000366  0100               	movlb	0	; () banked
  7235  000368  21AF               	addwfc	(??__doprnt+1)& (0+255),w,b
  7236  00036A  0100               	movlb	0	; () banked
  7237  00036C  6FC0               	movwf	(__doprnt@exp+1)& (0+255),b
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;doprnt.c: 838: exp--;
  7241  00036E  0100               	movlb	0	; () banked
  7242  000370  07BF               	decf	__doprnt@exp& (0+255),f,b
  7243  000372  A0D8               	btfss	status,0,c
  7244  000374  07C0               	decf	(__doprnt@exp+1)& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;doprnt.c: 839: exp *= 3;
  7248  000376  C0BF  F079         	movff	__doprnt@exp,___wmul@multiplier
  7249  00037A  C0C0  F07A         	movff	__doprnt@exp+1,___wmul@multiplier+1
  7250  00037E  0E00               	movlw	0
  7251  000380  0100               	movlb	0	; () banked
  7252  000382  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7253  000384  0E03               	movlw	3
  7254  000386  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7255  000388  EC03  F01F         	call	___wmul	;wreg free
  7256  00038C  C079  F0BF         	movff	?___wmul,__doprnt@exp
  7257  000390  C07A  F0C0         	movff	?___wmul+1,__doprnt@exp+1
  7258                           
  7259                           ;doprnt.c: 840: exp /= 10;
  7260  000394  C0BF  F071         	movff	__doprnt@exp,___awdiv@dividend
  7261  000398  C0C0  F072         	movff	__doprnt@exp+1,___awdiv@dividend+1
  7262  00039C  0E00               	movlw	0
  7263  00039E  0100               	movlb	0	; () banked
  7264  0003A0  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  7265  0003A2  0E0A               	movlw	10
  7266  0003A4  6F73               	movwf	___awdiv@divisor& (0+255),b
  7267  0003A6  EC55  F01A         	call	___awdiv	;wreg free
  7268  0003AA  C071  F0BF         	movff	?___awdiv,__doprnt@exp
  7269  0003AE  C072  F0C0         	movff	?___awdiv+1,__doprnt@exp+1
  7270                           
  7271                           ;doprnt.c: 841: if(exp < 0)
  7272  0003B2  0100               	movlb	0	; () banked
  7273  0003B4  AFC0               	btfss	(__doprnt@exp+1)& (0+255),7,b
  7274  0003B6  D004               	goto	l5886
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;doprnt.c: 842: exp--;
  7278  0003B8  0100               	movlb	0	; () banked
  7279  0003BA  07BF               	decf	__doprnt@exp& (0+255),f,b
  7280  0003BC  A0D8               	btfss	status,0,c
  7281  0003BE  07C0               	decf	(__doprnt@exp+1)& (0+255),f,b
  7282  0003C0                     l5886:
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7286  0003C0  0100               	movlb	0	; () banked
  7287  0003C2  51BF               	movf	__doprnt@exp& (0+255),w,b
  7288  0003C4  0800               	sublw	0
  7289  0003C6  ECC4  F00B         	call	_scale
  7290  0003CA  C08C  F0C1         	movff	?_scale,__doprnt@tmpval
  7291  0003CE  C08D  F0C2         	movff	?_scale+1,__doprnt@tmpval+1
  7292  0003D2  C08E  F0C3         	movff	?_scale+2,__doprnt@tmpval+2
  7293                           
  7294                           ;doprnt.c: 847: tmpval.integ *= fval;
  7295  0003D6  C0C1  F07D         	movff	__doprnt@tmpval,___ftmul@f1
  7296  0003DA  C0C2  F07E         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  7297  0003DE  C0C3  F07F         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  7298  0003E2  C0C5  F080         	movff	__doprnt@fval,___ftmul@f2
  7299  0003E6  C0C6  F081         	movff	__doprnt@fval+1,___ftmul@f2+1
  7300  0003EA  C0C7  F082         	movff	__doprnt@fval+2,___ftmul@f2+2
  7301  0003EE  EC17  F016         	call	___ftmul	;wreg free
  7302  0003F2  C07D  F0C1         	movff	?___ftmul,__doprnt@tmpval
  7303  0003F6  C07E  F0C2         	movff	?___ftmul+1,__doprnt@tmpval+1
  7304  0003FA  C07F  F0C3         	movff	?___ftmul+2,__doprnt@tmpval+2
  7305                           
  7306                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7307  0003FE  C0C1  F01A         	movff	__doprnt@tmpval,___ftge@ff1
  7308  000402  C0C2  F01B         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7309  000406  C0C3  F01C         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7310  00040A  0E00               	movlw	0
  7311  00040C  6E1D               	movwf	___ftge@ff2,c
  7312  00040E  0E80               	movlw	128
  7313  000410  6E1E               	movwf	___ftge@ff2+1,c
  7314  000412  0E3F               	movlw	63
  7315  000414  6E1F               	movwf	___ftge@ff2+2,c
  7316  000416  EC69  F01B         	call	___ftge	;wreg free
  7317  00041A  B0D8               	btfsc	status,0,c
  7318  00041C  D005               	goto	l5894
  7319                           
  7320                           ;doprnt.c: 849: exp--;
  7321  00041E  0100               	movlb	0	; () banked
  7322  000420  07BF               	decf	__doprnt@exp& (0+255),f,b
  7323  000422  A0D8               	btfss	status,0,c
  7324  000424  07C0               	decf	(__doprnt@exp+1)& (0+255),f,b
  7325  000426  D013               	goto	l5898
  7326  000428                     l5894:
  7327                           
  7328                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7329  000428  C0C1  F01A         	movff	__doprnt@tmpval,___ftge@ff1
  7330  00042C  C0C2  F01B         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7331  000430  C0C3  F01C         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7332  000434  0E00               	movlw	0
  7333  000436  6E1D               	movwf	___ftge@ff2,c
  7334  000438  0E20               	movlw	32
  7335  00043A  6E1E               	movwf	___ftge@ff2+1,c
  7336  00043C  0E41               	movlw	65
  7337  00043E  6E1F               	movwf	___ftge@ff2+2,c
  7338  000440  EC69  F01B         	call	___ftge	;wreg free
  7339  000444  A0D8               	btfss	status,0,c
  7340  000446  D003               	goto	l5898
  7341                           
  7342                           ;doprnt.c: 851: exp++;
  7343  000448  0100               	movlb	0	; () banked
  7344  00044A  4BBF               	infsnz	__doprnt@exp& (0+255),f,b
  7345  00044C  2BC0               	incf	(__doprnt@exp+1)& (0+255),f,b
  7346  00044E                     l5898:
  7347                           
  7348                           ;doprnt.c: 852: }
  7349                           ;doprnt.c: 1112: if(prec <= 12)
  7350  00044E  0100               	movlb	0	; () banked
  7351  000450  BFC9               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  7352  000452  D008               	goto	l5900
  7353  000454  0100               	movlb	0	; () banked
  7354  000456  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  7355  000458  E11D               	bnz	l5902
  7356  00045A  0E0D               	movlw	13
  7357  00045C  0100               	movlb	0	; () banked
  7358  00045E  5DC8               	subwf	__doprnt@prec& (0+255),w,b
  7359  000460  B0D8               	btfsc	status,0,c
  7360  000462  D018               	goto	l5902
  7361  000464                     l5900:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;doprnt.c: 1113: fval += fround(prec);
  7365  000464  C0C5  F096         	movff	__doprnt@fval,___ftadd@f1
  7366  000468  C0C6  F097         	movff	__doprnt@fval+1,___ftadd@f1+1
  7367  00046C  C0C7  F098         	movff	__doprnt@fval+2,___ftadd@f1+2
  7368  000470  0100               	movlb	0	; () banked
  7369  000472  51C8               	movf	__doprnt@prec& (0+255),w,b
  7370  000474  EC54  F011         	call	_fround
  7371  000478  C08C  F099         	movff	?_fround,___ftadd@f2
  7372  00047C  C08D  F09A         	movff	?_fround+1,___ftadd@f2+1
  7373  000480  C08E  F09B         	movff	?_fround+2,___ftadd@f2+2
  7374  000484  ECA4  F012         	call	___ftadd	;wreg free
  7375  000488  C096  F0C5         	movff	?___ftadd,__doprnt@fval
  7376  00048C  C097  F0C6         	movff	?___ftadd+1,__doprnt@fval+1
  7377  000490  C098  F0C7         	movff	?___ftadd+2,__doprnt@fval+2
  7378  000494                     l5902:
  7379                           
  7380                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7381  000494  0100               	movlb	0	; () banked
  7382  000496  BFC0               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  7383  000498  D008               	goto	l5904
  7384  00049A  0100               	movlb	0	; () banked
  7385  00049C  51C0               	movf	(__doprnt@exp+1)& (0+255),w,b
  7386  00049E  E12A               	bnz	l5910
  7387  0004A0  0E0A               	movlw	10
  7388  0004A2  0100               	movlb	0	; () banked
  7389  0004A4  5DBF               	subwf	__doprnt@exp& (0+255),w,b
  7390  0004A6  B0D8               	btfsc	status,0,c
  7391  0004A8  D025               	goto	l5910
  7392  0004AA                     l5904:
  7393                           
  7394                           ; BSR set to: 0
  7395  0004AA  0100               	movlb	0	; () banked
  7396  0004AC  51C5               	movf	__doprnt@fval& (0+255),w,b
  7397  0004AE  0100               	movlb	0	; () banked
  7398  0004B0  11C6               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  7399  0004B2  0100               	movlb	0	; () banked
  7400  0004B4  11C7               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  7401  0004B6  B4D8               	btfsc	status,2,c
  7402  0004B8  D05F               	goto	l5924
  7403                           
  7404                           ; BSR set to: 0
  7405  0004BA  C0C5  F093         	movff	__doprnt@fval,___fttol@f1
  7406  0004BE  C0C6  F094         	movff	__doprnt@fval+1,___fttol@f1+1
  7407  0004C2  C0C7  F095         	movff	__doprnt@fval+2,___fttol@f1+2
  7408  0004C6  EC15  F018         	call	___fttol	;wreg free
  7409  0004CA  0100               	movlb	0	; () banked
  7410  0004CC  5193               	movf	?___fttol& (0+255),w,b
  7411  0004CE  0100               	movlb	0	; () banked
  7412  0004D0  1194               	iorwf	(?___fttol+1)& (0+255),w,b
  7413  0004D2  0100               	movlb	0	; () banked
  7414  0004D4  1195               	iorwf	(?___fttol+2)& (0+255),w,b
  7415  0004D6  0100               	movlb	0	; () banked
  7416  0004D8  1196               	iorwf	(?___fttol+3)& (0+255),w,b
  7417  0004DA  A4D8               	btfss	status,2,c
  7418  0004DC  D04D               	goto	l5924
  7419                           
  7420                           ; BSR set to: 0
  7421  0004DE  0100               	movlb	0	; () banked
  7422  0004E0  BFC0               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  7423  0004E2  D04A               	goto	l5924
  7424  0004E4  0100               	movlb	0	; () banked
  7425  0004E6  51C0               	movf	(__doprnt@exp+1)& (0+255),w,b
  7426  0004E8  E105               	bnz	l5910
  7427  0004EA  0E02               	movlw	2
  7428  0004EC  0100               	movlb	0	; () banked
  7429  0004EE  5DBF               	subwf	__doprnt@exp& (0+255),w,b
  7430  0004F0  A0D8               	btfss	status,0,c
  7431  0004F2  D042               	goto	l5924
  7432  0004F4                     l5910:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7436  0004F4  C0C1  F01A         	movff	__doprnt@tmpval,___ftge@ff1
  7437  0004F8  C0C2  F01B         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7438  0004FC  C0C3  F01C         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7439  000500  0E70               	movlw	112
  7440  000502  6E1D               	movwf	___ftge@ff2,c
  7441  000504  0E89               	movlw	137
  7442  000506  6E1E               	movwf	___ftge@ff2+1,c
  7443  000508  0E40               	movlw	64
  7444  00050A  6E1F               	movwf	___ftge@ff2+2,c
  7445  00050C  EC69  F01B         	call	___ftge	;wreg free
  7446  000510  B0D8               	btfsc	status,0,c
  7447  000512  D003               	goto	l5914
  7448                           
  7449                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7450  000514  0100               	movlb	0	; () banked
  7451  000516  0EF7               	movlw	247
  7452  000518  D002               	goto	L2
  7453  00051A                     l5914:
  7454                           
  7455                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7456  00051A  0100               	movlb	0	; () banked
  7457  00051C  0EF8               	movlw	248
  7458  00051E                     L2:
  7459  00051E  27BF               	addwf	__doprnt@exp& (0+255),f,b
  7460  000520  0EFF               	movlw	255
  7461  000522  23C0               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;doprnt.c: 1124: }
  7465                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7466                           
  7467                           ; BSR set to: 0
  7468  000524  0100               	movlb	0	; () banked
  7469  000526  51BF               	movf	__doprnt@exp& (0+255),w,b
  7470  000528  ECC4  F00B         	call	_scale
  7471  00052C  C08C  F0C1         	movff	?_scale,__doprnt@tmpval
  7472  000530  C08D  F0C2         	movff	?_scale+1,__doprnt@tmpval+1
  7473  000534  C08E  F0C3         	movff	?_scale+2,__doprnt@tmpval+2
  7474                           
  7475                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7476  000538  C0C5  F01A         	movff	__doprnt@fval,__tdiv_to_l_@f1
  7477  00053C  C0C6  F01B         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  7478  000540  C0C7  F01C         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  7479  000544  C0C1  F01D         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  7480  000548  C0C2  F01E         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  7481  00054C  C0C3  F01F         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  7482  000550  EC63  F015         	call	__tdiv_to_l_	;wreg free
  7483  000554  C01A  F0BB         	movff	?__tdiv_to_l_,__doprnt@val
  7484  000558  C01B  F0BC         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  7485  00055C  C01C  F0BD         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  7486  000560  C01D  F0BE         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  7487                           
  7488                           ;doprnt.c: 1129: fval = 0.0;
  7489  000564  0E00               	movlw	0
  7490  000566  0100               	movlb	0	; () banked
  7491  000568  6FC5               	movwf	__doprnt@fval& (0+255),b
  7492  00056A  0E00               	movlw	0
  7493  00056C  0100               	movlb	0	; () banked
  7494  00056E  6FC6               	movwf	(__doprnt@fval+1)& (0+255),b
  7495  000570  0E00               	movlw	0
  7496  000572  0100               	movlb	0	; () banked
  7497  000574  6FC7               	movwf	(__doprnt@fval+2)& (0+255),b
  7498                           
  7499                           ;doprnt.c: 1130: } else {
  7500  000576  D033               	goto	l5928
  7501  000578                     l5924:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7505  000578  C0C5  F093         	movff	__doprnt@fval,___fttol@f1
  7506  00057C  C0C6  F094         	movff	__doprnt@fval+1,___fttol@f1+1
  7507  000580  C0C7  F095         	movff	__doprnt@fval+2,___fttol@f1+2
  7508  000584  EC15  F018         	call	___fttol	;wreg free
  7509  000588  C093  F0BB         	movff	?___fttol,__doprnt@val
  7510  00058C  C094  F0BC         	movff	?___fttol+1,__doprnt@val+1
  7511  000590  C095  F0BD         	movff	?___fttol+2,__doprnt@val+2
  7512  000594  C096  F0BE         	movff	?___fttol+3,__doprnt@val+3
  7513                           
  7514                           ;doprnt.c: 1132: fval -= (double)val;
  7515  000598  C0C5  F0A2         	movff	__doprnt@fval,___ftsub@f1
  7516  00059C  C0C6  F0A3         	movff	__doprnt@fval+1,___ftsub@f1+1
  7517  0005A0  C0C7  F0A4         	movff	__doprnt@fval+2,___ftsub@f1+2
  7518  0005A4  C0BB  F071         	movff	__doprnt@val,___lltoft@c
  7519  0005A8  C0BC  F072         	movff	__doprnt@val+1,___lltoft@c+1
  7520  0005AC  C0BD  F073         	movff	__doprnt@val+2,___lltoft@c+2
  7521  0005B0  C0BE  F074         	movff	__doprnt@val+3,___lltoft@c+3
  7522  0005B4  EC96  F01C         	call	___lltoft	;wreg free
  7523  0005B8  C071  F0A5         	movff	?___lltoft,___ftsub@f2
  7524  0005BC  C072  F0A6         	movff	?___lltoft+1,___ftsub@f2+1
  7525  0005C0  C073  F0A7         	movff	?___lltoft+2,___ftsub@f2+2
  7526  0005C4  ECEA  F01D         	call	___ftsub	;wreg free
  7527  0005C8  C0A2  F0C5         	movff	?___ftsub,__doprnt@fval
  7528  0005CC  C0A3  F0C6         	movff	?___ftsub+1,__doprnt@fval+1
  7529  0005D0  C0A4  F0C7         	movff	?___ftsub+2,__doprnt@fval+2
  7530                           
  7531                           ;doprnt.c: 1133: exp = 0;
  7532  0005D4  0E00               	movlw	0
  7533  0005D6  0100               	movlb	0	; () banked
  7534  0005D8  6FC0               	movwf	(__doprnt@exp+1)& (0+255),b
  7535  0005DA  0E00               	movlw	0
  7536  0005DC  6FBF               	movwf	__doprnt@exp& (0+255),b
  7537  0005DE                     l5928:
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;doprnt.c: 1134: }
  7541                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7542  0005DE  0E01               	movlw	1
  7543  0005E0  0100               	movlb	0	; () banked
  7544  0005E2  6FCA               	movwf	__doprnt@c& (0+255),b
  7545  0005E4                     l5930:
  7546                           
  7547                           ; BSR set to: 0
  7548  0005E4  0E0A               	movlw	10
  7549  0005E6  0100               	movlb	0	; () banked
  7550  0005E8  19CA               	xorwf	__doprnt@c& (0+255),w,b
  7551  0005EA  B4D8               	btfsc	status,2,c
  7552  0005EC  D01E               	goto	l5942
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;doprnt.c: 1137: if(val < dpowers[c])
  7556                           
  7557                           ; BSR set to: 0
  7558                           
  7559                           ; BSR set to: 0
  7560  0005EE  0100               	movlb	0	; () banked
  7561  0005F0  51CA               	movf	__doprnt@c& (0+255),w,b
  7562  0005F2  0D04               	mullw	4
  7563  0005F4  0ED5               	movlw	low _dpowers
  7564  0005F6  24F3               	addwf	prodl,w,c
  7565  0005F8  6EF6               	movwf	tblptrl,c
  7566  0005FA  0E7E               	movlw	high _dpowers
  7567  0005FC  20F4               	addwfc	prodh,w,c
  7568  0005FE  6EF7               	movwf	tblptrh,c
  7569  000600                     	if	0	;There are less than 3 active tblptr bytes
  7570  000600                     	endif
  7571  000600  0009               	tblrd		*+
  7572  000602  50F5               	movf	tablat,w,c
  7573  000604  0100               	movlb	0	; () banked
  7574  000606  5DBB               	subwf	__doprnt@val& (0+255),w,b
  7575  000608  0009               	tblrd		*+
  7576  00060A  50F5               	movf	tablat,w,c
  7577  00060C  0100               	movlb	0	; () banked
  7578  00060E  59BC               	subwfb	(__doprnt@val+1)& (0+255),w,b
  7579  000610  0009               	tblrd		*+
  7580  000612  50F5               	movf	tablat,w,c
  7581  000614  0100               	movlb	0	; () banked
  7582  000616  59BD               	subwfb	(__doprnt@val+2)& (0+255),w,b
  7583  000618  0009               	tblrd		*+
  7584  00061A  50F5               	movf	tablat,w,c
  7585  00061C  0100               	movlb	0	; () banked
  7586  00061E  59BE               	subwfb	(__doprnt@val+3)& (0+255),w,b
  7587  000620  A0D8               	btfss	status,0,c
  7588  000622  D003               	goto	l5942
  7589                           
  7590                           ; BSR set to: 0
  7591                           
  7592                           ; BSR set to: 0
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;doprnt.c: 1138: break;
  7596  000624  0100               	movlb	0	; () banked
  7597  000626  2BCA               	incf	__doprnt@c& (0+255),f,b
  7598  000628  D7DD               	goto	l5930
  7599  00062A                     l5942:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 1142: width -= prec + c + exp;
  7603  00062A  C0CA  F0AE         	movff	__doprnt@c,??__doprnt
  7604  00062E  0100               	movlb	0	; () banked
  7605  000630  6BAF               	clrf	(??__doprnt+1)& (0+255),b
  7606  000632  BFAE               	btfsc	??__doprnt& (0+255),7,b
  7607  000634  07AF               	decf	(??__doprnt+1)& (0+255),f,b
  7608  000636  0100               	movlb	0	; () banked
  7609  000638  51C8               	movf	__doprnt@prec& (0+255),w,b
  7610  00063A  0100               	movlb	0	; () banked
  7611  00063C  27AE               	addwf	??__doprnt& (0+255),f,b
  7612  00063E  0100               	movlb	0	; () banked
  7613  000640  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  7614  000642  0100               	movlb	0	; () banked
  7615  000644  23AF               	addwfc	(??__doprnt+1)& (0+255),f,b
  7616  000646  0100               	movlb	0	; () banked
  7617  000648  51BF               	movf	__doprnt@exp& (0+255),w,b
  7618  00064A  0100               	movlb	0	; () banked
  7619  00064C  27AE               	addwf	??__doprnt& (0+255),f,b
  7620  00064E  0100               	movlb	0	; () banked
  7621  000650  51C0               	movf	(__doprnt@exp+1)& (0+255),w,b
  7622  000652  0100               	movlb	0	; () banked
  7623  000654  23AF               	addwfc	(??__doprnt+1)& (0+255),f,b
  7624  000656  0100               	movlb	0	; () banked
  7625  000658  51AE               	movf	??__doprnt& (0+255),w,b
  7626  00065A  0100               	movlb	0	; () banked
  7627  00065C  5FB9               	subwf	__doprnt@width& (0+255),f,b
  7628  00065E  0100               	movlb	0	; () banked
  7629  000660  51AF               	movf	(??__doprnt+1)& (0+255),w,b
  7630  000662  0100               	movlb	0	; () banked
  7631  000664  5BBA               	subwfb	(__doprnt@width+1)& (0+255),f,b
  7632                           
  7633                           ;doprnt.c: 1143: if(
  7634                           ;doprnt.c: 1147: prec)
  7635  000666  0100               	movlb	0	; () banked
  7636  000668  51C8               	movf	__doprnt@prec& (0+255),w,b
  7637  00066A  0100               	movlb	0	; () banked
  7638  00066C  11C9               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  7639  00066E  B4D8               	btfsc	status,2,c
  7640  000670  D004               	goto	l5946
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;doprnt.c: 1148: width--;
  7644  000672  0100               	movlb	0	; () banked
  7645  000674  07B9               	decf	__doprnt@width& (0+255),f,b
  7646  000676  A0D8               	btfss	status,0,c
  7647  000678  07BA               	decf	(__doprnt@width+1)& (0+255),f,b
  7648  00067A                     l5946:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;doprnt.c: 1149: if(flag & 0x03)
  7652  00067A  0E03               	movlw	3
  7653  00067C  0100               	movlb	0	; () banked
  7654  00067E  15B7               	andwf	__doprnt@flag& (0+255),w,b
  7655  000680  0100               	movlb	0	; () banked
  7656  000682  6FAE               	movwf	??__doprnt& (0+255),b
  7657  000684  0E00               	movlw	0
  7658  000686  0100               	movlb	0	; () banked
  7659  000688  15B8               	andwf	(__doprnt@flag+1)& (0+255),w,b
  7660  00068A  0100               	movlb	0	; () banked
  7661  00068C  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  7662  00068E  0100               	movlb	0	; () banked
  7663  000690  51AE               	movf	??__doprnt& (0+255),w,b
  7664  000692  0100               	movlb	0	; () banked
  7665  000694  11AF               	iorwf	(??__doprnt+1)& (0+255),w,b
  7666  000696  B4D8               	btfsc	status,2,c
  7667  000698  D039               	goto	l5960
  7668  00069A  D034               	goto	l5958
  7669  00069C                     l5950:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  7673  00069C  0100               	movlb	0	; () banked
  7674  00069E  EE20 F002          	lfsr	2,2
  7675  0006A2  51A8               	movf	__doprnt@pb& (0+255),w,b
  7676  0006A4  26D9               	addwf	fsr2l,f,c
  7677  0006A6  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7678  0006A8  22DA               	addwfc	fsr2h,f,c
  7679  0006AA  50DE               	movf	postinc2,w,c
  7680  0006AC  10DE               	iorwf	postinc2,w,c
  7681  0006AE  B4D8               	btfsc	status,2,c
  7682  0006B0  D014               	goto	l5954
  7683                           
  7684                           ; BSR set to: 0
  7685  0006B2  0100               	movlb	0	; () banked
  7686  0006B4  EE20 F002          	lfsr	2,2
  7687  0006B8  51A8               	movf	__doprnt@pb& (0+255),w,b
  7688  0006BA  26D9               	addwf	fsr2l,f,c
  7689  0006BC  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7690  0006BE  22DA               	addwfc	fsr2h,f,c
  7691  0006C0  D801               	call	u6698
  7692  0006C2  D020               	goto	l5958
  7693  0006C4                     u6698:
  7694  0006C4  0005               	push	
  7695  0006C6  6EFA               	movwf	pclath,c
  7696  0006C8  50DE               	movf	postinc2,w,c
  7697  0006CA  6EFD               	movwf	tosl,c
  7698  0006CC  50DE               	movf	postinc2,w,c
  7699  0006CE  6EFE               	movwf	tosh,c
  7700  0006D0  50F8               	movf	tblptru,w,c
  7701  0006D2  6EFF               	movwf	tosu,c
  7702  0006D4  50FA               	movf	pclath,w,c
  7703  0006D6  0E20               	movlw	32
  7704  0006D8  0012               	return		;indir
  7705  0006DA                     l5954:
  7706  0006DA  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7707  0006DE  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7708  0006E2  CFDE F0AE          	movff	postinc2,??__doprnt
  7709  0006E6  CFDD F0AF          	movff	postdec2,??__doprnt+1
  7710  0006EA  C0AE  FFD9         	movff	??__doprnt,fsr2l
  7711  0006EE  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  7712  0006F2  0E20               	movlw	32
  7713  0006F4  6EDF               	movwf	indf2,c
  7714  0006F6  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7715  0006FA  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7716  0006FE  2ADE               	incf	postinc2,f,c
  7717  000700  0E00               	movlw	0
  7718  000702  22DD               	addwfc	postdec2,f,c
  7719  000704                     l5958:
  7720                           
  7721                           ;doprnt.c: 1182: width--;
  7722  000704  0100               	movlb	0	; () banked
  7723  000706  07B9               	decf	__doprnt@width& (0+255),f,b
  7724  000708  A0D8               	btfss	status,0,c
  7725  00070A  07BA               	decf	(__doprnt@width+1)& (0+255),f,b
  7726  00070C                     l5960:
  7727                           
  7728                           ; BSR set to: 0
  7729  00070C  0100               	movlb	0	; () banked
  7730  00070E  BFBA               	btfsc	(__doprnt@width+1)& (0+255),7,b
  7731  000710  D007               	goto	l5962
  7732  000712  0100               	movlb	0	; () banked
  7733  000714  51BA               	movf	(__doprnt@width+1)& (0+255),w,b
  7734  000716  E1C2               	bnz	l5950
  7735  000718  0100               	movlb	0	; () banked
  7736  00071A  05B9               	decf	__doprnt@width& (0+255),w,b
  7737  00071C  B0D8               	btfsc	status,0,c
  7738  00071E  D7BE               	goto	l5950
  7739  000720                     l5962:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;doprnt.c: 1183: }
  7743                           ;doprnt.c: 1188: if(flag & 0x03)
  7744  000720  0E03               	movlw	3
  7745  000722  0100               	movlb	0	; () banked
  7746  000724  15B7               	andwf	__doprnt@flag& (0+255),w,b
  7747  000726  0100               	movlb	0	; () banked
  7748  000728  6FAE               	movwf	??__doprnt& (0+255),b
  7749  00072A  0E00               	movlw	0
  7750  00072C  0100               	movlb	0	; () banked
  7751  00072E  15B8               	andwf	(__doprnt@flag+1)& (0+255),w,b
  7752  000730  0100               	movlb	0	; () banked
  7753  000732  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  7754  000734  0100               	movlb	0	; () banked
  7755  000736  51AE               	movf	??__doprnt& (0+255),w,b
  7756  000738  0100               	movlb	0	; () banked
  7757  00073A  11AF               	iorwf	(??__doprnt+1)& (0+255),w,b
  7758  00073C  B4D8               	btfsc	status,2,c
  7759  00073E  D0A9               	goto	l5982
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  7763  000740  0100               	movlb	0	; () banked
  7764  000742  EE20 F002          	lfsr	2,2
  7765  000746  51A8               	movf	__doprnt@pb& (0+255),w,b
  7766  000748  26D9               	addwf	fsr2l,f,c
  7767  00074A  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7768  00074C  22DA               	addwfc	fsr2h,f,c
  7769  00074E  50DE               	movf	postinc2,w,c
  7770  000750  10DE               	iorwf	postinc2,w,c
  7771  000752  B4D8               	btfsc	status,2,c
  7772  000754  D014               	goto	l5968
  7773                           
  7774                           ; BSR set to: 0
  7775  000756  0100               	movlb	0	; () banked
  7776  000758  EE20 F002          	lfsr	2,2
  7777  00075C  51A8               	movf	__doprnt@pb& (0+255),w,b
  7778  00075E  26D9               	addwf	fsr2l,f,c
  7779  000760  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7780  000762  22DA               	addwfc	fsr2h,f,c
  7781  000764  D801               	call	u6738
  7782  000766  D095               	goto	l5982
  7783  000768                     u6738:
  7784  000768  0005               	push	
  7785  00076A  6EFA               	movwf	pclath,c
  7786  00076C  50DE               	movf	postinc2,w,c
  7787  00076E  6EFD               	movwf	tosl,c
  7788  000770  50DE               	movf	postinc2,w,c
  7789  000772  6EFE               	movwf	tosh,c
  7790  000774  50F8               	movf	tblptru,w,c
  7791  000776  6EFF               	movwf	tosu,c
  7792  000778  50FA               	movf	pclath,w,c
  7793  00077A  0E2D               	movlw	45
  7794  00077C  0012               	return		;indir
  7795  00077E                     l5968:
  7796  00077E  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7797  000782  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7798  000786  CFDE F0AE          	movff	postinc2,??__doprnt
  7799  00078A  CFDD F0AF          	movff	postdec2,??__doprnt+1
  7800  00078E  C0AE  FFD9         	movff	??__doprnt,fsr2l
  7801  000792  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  7802  000796  0E2D               	movlw	45
  7803  000798  D07A               	goto	L3
  7804  00079A                     l5970:
  7805  00079A  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7806  00079E  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7807  0007A2  2ADE               	incf	postinc2,f,c
  7808  0007A4  0E00               	movlw	0
  7809  0007A6  22DD               	addwfc	postdec2,f,c
  7810                           
  7811                           ;doprnt.c: 1195: }
  7812                           ;doprnt.c: 1196: while(c--) {
  7813  0007A8  D074               	goto	l5982
  7814  0007AA                     l5972:
  7815                           
  7816                           ;doprnt.c: 1200: {
  7817                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7818  0007AA  C0BB  F01A         	movff	__doprnt@val,___lldiv@dividend
  7819  0007AE  C0BC  F01B         	movff	__doprnt@val+1,___lldiv@dividend+1
  7820  0007B2  C0BD  F01C         	movff	__doprnt@val+2,___lldiv@dividend+2
  7821  0007B6  C0BE  F01D         	movff	__doprnt@val+3,___lldiv@dividend+3
  7822  0007BA  0100               	movlb	0	; () banked
  7823  0007BC  51CA               	movf	__doprnt@c& (0+255),w,b
  7824  0007BE  0D04               	mullw	4
  7825  0007C0  0ED5               	movlw	low _dpowers
  7826  0007C2  24F3               	addwf	prodl,w,c
  7827  0007C4  6EF6               	movwf	tblptrl,c
  7828  0007C6  0E7E               	movlw	high _dpowers
  7829  0007C8  20F4               	addwfc	prodh,w,c
  7830  0007CA  6EF7               	movwf	tblptrh,c
  7831  0007CC                     	if	0	;There are less than 3 active tblptr bytes
  7832  0007CC                     	endif
  7833  0007CC  0009               	tblrd		*+
  7834  0007CE  CFF5 F01E          	movff	tablat,___lldiv@divisor
  7835  0007D2  0009               	tblrd		*+
  7836  0007D4  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  7837  0007D8  0009               	tblrd		*+
  7838  0007DA  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  7839  0007DE  000A               	tblrd		*-
  7840  0007E0  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  7841  0007E4  EC4F  F01C         	call	___lldiv
  7842  0007E8  C01A  F0C1         	movff	?___lldiv,__doprnt@tmpval
  7843  0007EC  C01B  F0C2         	movff	?___lldiv+1,__doprnt@tmpval+1
  7844  0007F0  C01C  F0C3         	movff	?___lldiv+2,__doprnt@tmpval+2
  7845  0007F4  C01D  F0C4         	movff	?___lldiv+3,__doprnt@tmpval+3
  7846                           
  7847                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7848  0007F8  C0C1  F076         	movff	__doprnt@tmpval,___llmod@dividend
  7849  0007FC  C0C2  F077         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  7850  000800  C0C3  F078         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  7851  000804  C0C4  F079         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  7852  000808  0E0A               	movlw	10
  7853  00080A  0100               	movlb	0	; () banked
  7854  00080C  6F7A               	movwf	___llmod@divisor& (0+255),b
  7855  00080E  0E00               	movlw	0
  7856  000810  6F7B               	movwf	(___llmod@divisor+1)& (0+255),b
  7857  000812  0E00               	movlw	0
  7858  000814  6F7C               	movwf	(___llmod@divisor+2)& (0+255),b
  7859  000816  0E00               	movlw	0
  7860  000818  6F7D               	movwf	(___llmod@divisor+3)& (0+255),b
  7861  00081A  ECB9  F01B         	call	___llmod	;wreg free
  7862  00081E  C076  F0C1         	movff	?___llmod,__doprnt@tmpval
  7863  000822  C077  F0C2         	movff	?___llmod+1,__doprnt@tmpval+1
  7864  000826  C078  F0C3         	movff	?___llmod+2,__doprnt@tmpval+2
  7865  00082A  C079  F0C4         	movff	?___llmod+3,__doprnt@tmpval+3
  7866                           
  7867                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  7868  00082E  0100               	movlb	0	; () banked
  7869  000830  EE20 F002          	lfsr	2,2
  7870  000834  51A8               	movf	__doprnt@pb& (0+255),w,b
  7871  000836  26D9               	addwf	fsr2l,f,c
  7872  000838  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7873  00083A  22DA               	addwfc	fsr2h,f,c
  7874  00083C  50DE               	movf	postinc2,w,c
  7875  00083E  10DE               	iorwf	postinc2,w,c
  7876  000840  B4D8               	btfsc	status,2,c
  7877  000842  D016               	goto	l5980
  7878                           
  7879                           ; BSR set to: 0
  7880  000844  0100               	movlb	0	; () banked
  7881  000846  EE20 F002          	lfsr	2,2
  7882  00084A  51A8               	movf	__doprnt@pb& (0+255),w,b
  7883  00084C  26D9               	addwf	fsr2l,f,c
  7884  00084E  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7885  000850  22DA               	addwfc	fsr2h,f,c
  7886  000852  D801               	call	u6758
  7887  000854  D01E               	goto	l5982
  7888  000856                     u6758:
  7889  000856  0005               	push	
  7890  000858  6EFA               	movwf	pclath,c
  7891  00085A  50DE               	movf	postinc2,w,c
  7892  00085C  6EFD               	movwf	tosl,c
  7893  00085E  50DE               	movf	postinc2,w,c
  7894  000860  6EFE               	movwf	tosh,c
  7895  000862  50F8               	movf	tblptru,w,c
  7896  000864  6EFF               	movwf	tosu,c
  7897  000866  50FA               	movf	pclath,w,c
  7898  000868  0100               	movlb	0	; () banked
  7899  00086A  51C1               	movf	__doprnt@tmpval& (0+255),w,b
  7900  00086C  0F30               	addlw	48
  7901  00086E  0012               	return		;indir
  7902  000870                     l5980:
  7903  000870  0100               	movlb	0	; () banked
  7904  000872  51C1               	movf	__doprnt@tmpval& (0+255),w,b
  7905  000874  0F30               	addlw	48
  7906  000876  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7907  00087A  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7908  00087E  CFDE F0AE          	movff	postinc2,??__doprnt
  7909  000882  CFDD F0AF          	movff	postdec2,??__doprnt+1
  7910  000886  C0AE  FFD9         	movff	??__doprnt,fsr2l
  7911  00088A  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  7912  00088E                     L3:
  7913  00088E  6EDF               	movwf	indf2,c
  7914  000890  D784               	goto	l5970
  7915  000892                     l5982:
  7916  000892  0100               	movlb	0	; () banked
  7917  000894  07CA               	decf	__doprnt@c& (0+255),f,b
  7918  000896  0100               	movlb	0	; () banked
  7919  000898  29CA               	incf	__doprnt@c& (0+255),w,b
  7920  00089A  B4D8               	btfsc	status,2,c
  7921  00089C  D039               	goto	l5994
  7922  00089E  D785               	goto	l5972
  7923  0008A0                     l5984:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  7927  0008A0  0100               	movlb	0	; () banked
  7928  0008A2  EE20 F002          	lfsr	2,2
  7929  0008A6  51A8               	movf	__doprnt@pb& (0+255),w,b
  7930  0008A8  26D9               	addwf	fsr2l,f,c
  7931  0008AA  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7932  0008AC  22DA               	addwfc	fsr2h,f,c
  7933  0008AE  50DE               	movf	postinc2,w,c
  7934  0008B0  10DE               	iorwf	postinc2,w,c
  7935  0008B2  B4D8               	btfsc	status,2,c
  7936  0008B4  D014               	goto	l5988
  7937                           
  7938                           ; BSR set to: 0
  7939  0008B6  0100               	movlb	0	; () banked
  7940  0008B8  EE20 F002          	lfsr	2,2
  7941  0008BC  51A8               	movf	__doprnt@pb& (0+255),w,b
  7942  0008BE  26D9               	addwf	fsr2l,f,c
  7943  0008C0  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  7944  0008C2  22DA               	addwfc	fsr2h,f,c
  7945  0008C4  D801               	call	u6788
  7946  0008C6  D020               	goto	l5992
  7947  0008C8                     u6788:
  7948  0008C8  0005               	push	
  7949  0008CA  6EFA               	movwf	pclath,c
  7950  0008CC  50DE               	movf	postinc2,w,c
  7951  0008CE  6EFD               	movwf	tosl,c
  7952  0008D0  50DE               	movf	postinc2,w,c
  7953  0008D2  6EFE               	movwf	tosh,c
  7954  0008D4  50F8               	movf	tblptru,w,c
  7955  0008D6  6EFF               	movwf	tosu,c
  7956  0008D8  50FA               	movf	pclath,w,c
  7957  0008DA  0E30               	movlw	48
  7958  0008DC  0012               	return		;indir
  7959  0008DE                     l5988:
  7960  0008DE  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7961  0008E2  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7962  0008E6  CFDE F0AE          	movff	postinc2,??__doprnt
  7963  0008EA  CFDD F0AF          	movff	postdec2,??__doprnt+1
  7964  0008EE  C0AE  FFD9         	movff	??__doprnt,fsr2l
  7965  0008F2  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  7966  0008F6  0E30               	movlw	48
  7967  0008F8  6EDF               	movwf	indf2,c
  7968  0008FA  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  7969  0008FE  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  7970  000902  2ADE               	incf	postinc2,f,c
  7971  000904  0E00               	movlw	0
  7972  000906  22DD               	addwfc	postdec2,f,c
  7973  000908                     l5992:
  7974                           
  7975                           ;doprnt.c: 1209: exp--;
  7976  000908  0100               	movlb	0	; () banked
  7977  00090A  07BF               	decf	__doprnt@exp& (0+255),f,b
  7978  00090C  A0D8               	btfss	status,0,c
  7979  00090E  07C0               	decf	(__doprnt@exp+1)& (0+255),f,b
  7980  000910                     l5994:
  7981                           
  7982                           ; BSR set to: 0
  7983  000910  0100               	movlb	0	; () banked
  7984  000912  BFC0               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  7985  000914  D007               	goto	l5996
  7986  000916  0100               	movlb	0	; () banked
  7987  000918  51C0               	movf	(__doprnt@exp+1)& (0+255),w,b
  7988  00091A  E1C2               	bnz	l5984
  7989  00091C  0100               	movlb	0	; () banked
  7990  00091E  05BF               	decf	__doprnt@exp& (0+255),w,b
  7991  000920  B0D8               	btfsc	status,0,c
  7992  000922  D7BE               	goto	l5984
  7993  000924                     l5996:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;doprnt.c: 1210: }
  7997                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7998  000924  0100               	movlb	0	; () banked
  7999  000926  BFC9               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  8000  000928  D00C               	goto	l686
  8001  00092A  0100               	movlb	0	; () banked
  8002  00092C  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  8003  00092E  E105               	bnz	u6800
  8004  000930  0E09               	movlw	9
  8005  000932  0100               	movlb	0	; () banked
  8006  000934  5DC8               	subwf	__doprnt@prec& (0+255),w,b
  8007  000936  A0D8               	btfss	status,0,c
  8008  000938  D004               	goto	l686
  8009  00093A                     u6800:
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8013  00093A  0E08               	movlw	8
  8014  00093C  0100               	movlb	0	; () banked
  8015  00093E  6FCA               	movwf	__doprnt@c& (0+255),b
  8016  000940  D002               	goto	l6000
  8017  000942                     l686:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;doprnt.c: 1213: else
  8021                           ;doprnt.c: 1214: c = prec;
  8022  000942  C0C8  F0CA         	movff	__doprnt@prec,__doprnt@c
  8023  000946                     l6000:
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;doprnt.c: 1215: prec -= c;
  8027  000946  0100               	movlb	0	; () banked
  8028  000948  51CA               	movf	__doprnt@c& (0+255),w,b
  8029  00094A  0100               	movlb	0	; () banked
  8030  00094C  5FC8               	subwf	__doprnt@prec& (0+255),f,b
  8031  00094E  0E00               	movlw	0
  8032  000950  0100               	movlb	0	; () banked
  8033  000952  BFCA               	btfsc	__doprnt@c& (0+255),7,b
  8034  000954  0EFF               	movlw	255
  8035  000956  0100               	movlb	0	; () banked
  8036  000958  5BC9               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;doprnt.c: 1219: if(c)
  8040  00095A  0100               	movlb	0	; () banked
  8041  00095C  51CA               	movf	__doprnt@c& (0+255),w,b
  8042  00095E  0100               	movlb	0	; () banked
  8043  000960  B4D8               	btfsc	status,2,c
  8044  000962  D034               	goto	l6012
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  8048  000964  0100               	movlb	0	; () banked
  8049  000966  EE20 F002          	lfsr	2,2
  8050  00096A  51A8               	movf	__doprnt@pb& (0+255),w,b
  8051  00096C  26D9               	addwf	fsr2l,f,c
  8052  00096E  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8053  000970  22DA               	addwfc	fsr2h,f,c
  8054  000972  50DE               	movf	postinc2,w,c
  8055  000974  10DE               	iorwf	postinc2,w,c
  8056  000976  B4D8               	btfsc	status,2,c
  8057  000978  D014               	goto	l6008
  8058                           
  8059                           ; BSR set to: 0
  8060  00097A  0100               	movlb	0	; () banked
  8061  00097C  EE20 F002          	lfsr	2,2
  8062  000980  51A8               	movf	__doprnt@pb& (0+255),w,b
  8063  000982  26D9               	addwf	fsr2l,f,c
  8064  000984  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8065  000986  22DA               	addwfc	fsr2h,f,c
  8066  000988  D801               	call	u6838
  8067  00098A  D020               	goto	l6012
  8068  00098C                     u6838:
  8069  00098C  0005               	push	
  8070  00098E  6EFA               	movwf	pclath,c
  8071  000990  50DE               	movf	postinc2,w,c
  8072  000992  6EFD               	movwf	tosl,c
  8073  000994  50DE               	movf	postinc2,w,c
  8074  000996  6EFE               	movwf	tosh,c
  8075  000998  50F8               	movf	tblptru,w,c
  8076  00099A  6EFF               	movwf	tosu,c
  8077  00099C  50FA               	movf	pclath,w,c
  8078  00099E  0E2E               	movlw	46
  8079  0009A0  0012               	return		;indir
  8080  0009A2                     l6008:
  8081  0009A2  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8082  0009A6  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8083  0009AA  CFDE F0AE          	movff	postinc2,??__doprnt
  8084  0009AE  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8085  0009B2  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8086  0009B6  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8087  0009BA  0E2E               	movlw	46
  8088  0009BC  6EDF               	movwf	indf2,c
  8089  0009BE  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8090  0009C2  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8091  0009C6  2ADE               	incf	postinc2,f,c
  8092  0009C8  0E00               	movlw	0
  8093  0009CA  22DD               	addwfc	postdec2,f,c
  8094  0009CC                     l6012:
  8095                           
  8096                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8097  0009CC  0100               	movlb	0	; () banked
  8098  0009CE  51CA               	movf	__doprnt@c& (0+255),w,b
  8099  0009D0  ECC4  F00B         	call	_scale
  8100  0009D4  C08C  F0B4         	movff	?_scale,__doprnt$2963
  8101  0009D8  C08D  F0B5         	movff	?_scale+1,__doprnt$2963+1
  8102  0009DC  C08E  F0B6         	movff	?_scale+2,__doprnt$2963+2
  8103                           
  8104                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8105  0009E0  C0C5  F080         	movff	__doprnt@fval,___ftmul@f2
  8106  0009E4  C0C6  F081         	movff	__doprnt@fval+1,___ftmul@f2+1
  8107  0009E8  C0C7  F082         	movff	__doprnt@fval+2,___ftmul@f2+2
  8108  0009EC  C0B4  F07D         	movff	__doprnt$2963,___ftmul@f1
  8109  0009F0  C0B5  F07E         	movff	__doprnt$2963+1,___ftmul@f1+1
  8110  0009F4  C0B6  F07F         	movff	__doprnt$2963+2,___ftmul@f1+2
  8111  0009F8  EC17  F016         	call	___ftmul	;wreg free
  8112  0009FC  C07D  F093         	movff	?___ftmul,___fttol@f1
  8113  000A00  C07E  F094         	movff	?___ftmul+1,___fttol@f1+1
  8114  000A04  C07F  F095         	movff	?___ftmul+2,___fttol@f1+2
  8115  000A08  EC15  F018         	call	___fttol	;wreg free
  8116  000A0C  C093  F0BB         	movff	?___fttol,__doprnt@val
  8117  000A10  C094  F0BC         	movff	?___fttol+1,__doprnt@val+1
  8118  000A14  C095  F0BD         	movff	?___fttol+2,__doprnt@val+2
  8119  000A18  C096  F0BE         	movff	?___fttol+3,__doprnt@val+3
  8120                           
  8121                           ;doprnt.c: 1228: while(c--) {
  8122  000A1C  D0A1               	goto	l6028
  8123  000A1E                     l6016:
  8124                           
  8125                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8126  000A1E  C0BB  F01A         	movff	__doprnt@val,___lldiv@dividend
  8127  000A22  C0BC  F01B         	movff	__doprnt@val+1,___lldiv@dividend+1
  8128  000A26  C0BD  F01C         	movff	__doprnt@val+2,___lldiv@dividend+2
  8129  000A2A  C0BE  F01D         	movff	__doprnt@val+3,___lldiv@dividend+3
  8130  000A2E  0100               	movlb	0	; () banked
  8131  000A30  51CA               	movf	__doprnt@c& (0+255),w,b
  8132  000A32  0D04               	mullw	4
  8133  000A34  0ED5               	movlw	low _dpowers
  8134  000A36  24F3               	addwf	prodl,w,c
  8135  000A38  6EF6               	movwf	tblptrl,c
  8136  000A3A  0E7E               	movlw	high _dpowers
  8137  000A3C  20F4               	addwfc	prodh,w,c
  8138  000A3E  6EF7               	movwf	tblptrh,c
  8139  000A40                     	if	0	;There are less than 3 active tblptr bytes
  8140  000A40                     	endif
  8141  000A40  0009               	tblrd		*+
  8142  000A42  CFF5 F01E          	movff	tablat,___lldiv@divisor
  8143  000A46  0009               	tblrd		*+
  8144  000A48  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  8145  000A4C  0009               	tblrd		*+
  8146  000A4E  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  8147  000A52  000A               	tblrd		*-
  8148  000A54  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  8149  000A58  EC4F  F01C         	call	___lldiv	;wreg free
  8150  000A5C  C01A  F0C1         	movff	?___lldiv,__doprnt@tmpval
  8151  000A60  C01B  F0C2         	movff	?___lldiv+1,__doprnt@tmpval+1
  8152  000A64  C01C  F0C3         	movff	?___lldiv+2,__doprnt@tmpval+2
  8153  000A68  C01D  F0C4         	movff	?___lldiv+3,__doprnt@tmpval+3
  8154                           
  8155                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8156  000A6C  C0C1  F076         	movff	__doprnt@tmpval,___llmod@dividend
  8157  000A70  C0C2  F077         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  8158  000A74  C0C3  F078         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  8159  000A78  C0C4  F079         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  8160  000A7C  0E0A               	movlw	10
  8161  000A7E  0100               	movlb	0	; () banked
  8162  000A80  6F7A               	movwf	___llmod@divisor& (0+255),b
  8163  000A82  0E00               	movlw	0
  8164  000A84  6F7B               	movwf	(___llmod@divisor+1)& (0+255),b
  8165  000A86  0E00               	movlw	0
  8166  000A88  6F7C               	movwf	(___llmod@divisor+2)& (0+255),b
  8167  000A8A  0E00               	movlw	0
  8168  000A8C  6F7D               	movwf	(___llmod@divisor+3)& (0+255),b
  8169  000A8E  ECB9  F01B         	call	___llmod	;wreg free
  8170  000A92  C076  F0C1         	movff	?___llmod,__doprnt@tmpval
  8171  000A96  C077  F0C2         	movff	?___llmod+1,__doprnt@tmpval+1
  8172  000A9A  C078  F0C3         	movff	?___llmod+2,__doprnt@tmpval+2
  8173  000A9E  C079  F0C4         	movff	?___llmod+3,__doprnt@tmpval+3
  8174                           
  8175                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  8176  000AA2  0100               	movlb	0	; () banked
  8177  000AA4  EE20 F002          	lfsr	2,2
  8178  000AA8  51A8               	movf	__doprnt@pb& (0+255),w,b
  8179  000AAA  26D9               	addwf	fsr2l,f,c
  8180  000AAC  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8181  000AAE  22DA               	addwfc	fsr2h,f,c
  8182  000AB0  50DE               	movf	postinc2,w,c
  8183  000AB2  10DE               	iorwf	postinc2,w,c
  8184  000AB4  B4D8               	btfsc	status,2,c
  8185  000AB6  D016               	goto	l6024
  8186                           
  8187                           ; BSR set to: 0
  8188  000AB8  0100               	movlb	0	; () banked
  8189  000ABA  EE20 F002          	lfsr	2,2
  8190  000ABE  51A8               	movf	__doprnt@pb& (0+255),w,b
  8191  000AC0  26D9               	addwf	fsr2l,f,c
  8192  000AC2  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8193  000AC4  22DA               	addwfc	fsr2h,f,c
  8194  000AC6  D801               	call	u6858
  8195  000AC8  D024               	goto	l6026
  8196  000ACA                     u6858:
  8197  000ACA  0005               	push	
  8198  000ACC  6EFA               	movwf	pclath,c
  8199  000ACE  50DE               	movf	postinc2,w,c
  8200  000AD0  6EFD               	movwf	tosl,c
  8201  000AD2  50DE               	movf	postinc2,w,c
  8202  000AD4  6EFE               	movwf	tosh,c
  8203  000AD6  50F8               	movf	tblptru,w,c
  8204  000AD8  6EFF               	movwf	tosu,c
  8205  000ADA  50FA               	movf	pclath,w,c
  8206  000ADC  0100               	movlb	0	; () banked
  8207  000ADE  51C1               	movf	__doprnt@tmpval& (0+255),w,b
  8208  000AE0  0F30               	addlw	48
  8209  000AE2  0012               	return		;indir
  8210  000AE4                     l6024:
  8211  000AE4  0100               	movlb	0	; () banked
  8212  000AE6  51C1               	movf	__doprnt@tmpval& (0+255),w,b
  8213  000AE8  0F30               	addlw	48
  8214  000AEA  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8215  000AEE  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8216  000AF2  CFDE F0AE          	movff	postinc2,??__doprnt
  8217  000AF6  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8218  000AFA  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8219  000AFE  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8220  000B02  6EDF               	movwf	indf2,c
  8221  000B04  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8222  000B08  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8223  000B0C  2ADE               	incf	postinc2,f,c
  8224  000B0E  0E00               	movlw	0
  8225  000B10  22DD               	addwfc	postdec2,f,c
  8226  000B12                     l6026:
  8227                           
  8228                           ;doprnt.c: 1232: val %= dpowers[c];
  8229  000B12  C0BB  F076         	movff	__doprnt@val,___llmod@dividend
  8230  000B16  C0BC  F077         	movff	__doprnt@val+1,___llmod@dividend+1
  8231  000B1A  C0BD  F078         	movff	__doprnt@val+2,___llmod@dividend+2
  8232  000B1E  C0BE  F079         	movff	__doprnt@val+3,___llmod@dividend+3
  8233  000B22  0100               	movlb	0	; () banked
  8234  000B24  51CA               	movf	__doprnt@c& (0+255),w,b
  8235  000B26  0D04               	mullw	4
  8236  000B28  0ED5               	movlw	low _dpowers
  8237  000B2A  24F3               	addwf	prodl,w,c
  8238  000B2C  6EF6               	movwf	tblptrl,c
  8239  000B2E  0E7E               	movlw	high _dpowers
  8240  000B30  20F4               	addwfc	prodh,w,c
  8241  000B32  6EF7               	movwf	tblptrh,c
  8242  000B34                     	if	0	;There are less than 3 active tblptr bytes
  8243  000B34                     	endif
  8244  000B34  0009               	tblrd		*+
  8245  000B36  CFF5 F07A          	movff	tablat,___llmod@divisor
  8246  000B3A  0009               	tblrd		*+
  8247  000B3C  CFF5 F07B          	movff	tablat,___llmod@divisor+1
  8248  000B40  0009               	tblrd		*+
  8249  000B42  CFF5 F07C          	movff	tablat,___llmod@divisor+2
  8250  000B46  000A               	tblrd		*-
  8251  000B48  CFF5 F07D          	movff	tablat,___llmod@divisor+3
  8252  000B4C  ECB9  F01B         	call	___llmod
  8253  000B50  C076  F0BB         	movff	?___llmod,__doprnt@val
  8254  000B54  C077  F0BC         	movff	?___llmod+1,__doprnt@val+1
  8255  000B58  C078  F0BD         	movff	?___llmod+2,__doprnt@val+2
  8256  000B5C  C079  F0BE         	movff	?___llmod+3,__doprnt@val+3
  8257  000B60                     l6028:
  8258  000B60  0100               	movlb	0	; () banked
  8259  000B62  07CA               	decf	__doprnt@c& (0+255),f,b
  8260  000B64  0100               	movlb	0	; () banked
  8261  000B66  29CA               	incf	__doprnt@c& (0+255),w,b
  8262  000B68  B4D8               	btfsc	status,2,c
  8263  000B6A  D039               	goto	l6040
  8264  000B6C  D758               	goto	l6016
  8265  000B6E                     l6030:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8269  000B6E  0100               	movlb	0	; () banked
  8270  000B70  EE20 F002          	lfsr	2,2
  8271  000B74  51A8               	movf	__doprnt@pb& (0+255),w,b
  8272  000B76  26D9               	addwf	fsr2l,f,c
  8273  000B78  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8274  000B7A  22DA               	addwfc	fsr2h,f,c
  8275  000B7C  50DE               	movf	postinc2,w,c
  8276  000B7E  10DE               	iorwf	postinc2,w,c
  8277  000B80  B4D8               	btfsc	status,2,c
  8278  000B82  D014               	goto	l6034
  8279                           
  8280                           ; BSR set to: 0
  8281  000B84  0100               	movlb	0	; () banked
  8282  000B86  EE20 F002          	lfsr	2,2
  8283  000B8A  51A8               	movf	__doprnt@pb& (0+255),w,b
  8284  000B8C  26D9               	addwf	fsr2l,f,c
  8285  000B8E  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8286  000B90  22DA               	addwfc	fsr2h,f,c
  8287  000B92  D801               	call	u6888
  8288  000B94  D020               	goto	l6038
  8289  000B96                     u6888:
  8290  000B96  0005               	push	
  8291  000B98  6EFA               	movwf	pclath,c
  8292  000B9A  50DE               	movf	postinc2,w,c
  8293  000B9C  6EFD               	movwf	tosl,c
  8294  000B9E  50DE               	movf	postinc2,w,c
  8295  000BA0  6EFE               	movwf	tosh,c
  8296  000BA2  50F8               	movf	tblptru,w,c
  8297  000BA4  6EFF               	movwf	tosu,c
  8298  000BA6  50FA               	movf	pclath,w,c
  8299  000BA8  0E30               	movlw	48
  8300  000BAA  0012               	return		;indir
  8301  000BAC                     l6034:
  8302  000BAC  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8303  000BB0  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8304  000BB4  CFDE F0AE          	movff	postinc2,??__doprnt
  8305  000BB8  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8306  000BBC  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8307  000BC0  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8308  000BC4  0E30               	movlw	48
  8309  000BC6  6EDF               	movwf	indf2,c
  8310  000BC8  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8311  000BCC  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8312  000BD0  2ADE               	incf	postinc2,f,c
  8313  000BD2  0E00               	movlw	0
  8314  000BD4  22DD               	addwfc	postdec2,f,c
  8315  000BD6                     l6038:
  8316                           
  8317                           ;doprnt.c: 1237: prec--;
  8318  000BD6  0100               	movlb	0	; () banked
  8319  000BD8  07C8               	decf	__doprnt@prec& (0+255),f,b
  8320  000BDA  A0D8               	btfss	status,0,c
  8321  000BDC  07C9               	decf	(__doprnt@prec+1)& (0+255),f,b
  8322  000BDE                     l6040:
  8323                           
  8324                           ; BSR set to: 0
  8325  000BDE  0100               	movlb	0	; () banked
  8326  000BE0  51C8               	movf	__doprnt@prec& (0+255),w,b
  8327  000BE2  0100               	movlb	0	; () banked
  8328  000BE4  11C9               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  8329  000BE6  B4D8               	btfsc	status,2,c
  8330  000BE8  D1EE               	goto	l6132
  8331  000BEA  D7C1               	goto	l6030
  8332  000BEC                     l6042:
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;doprnt.c: 1246: }
  8336                           ;doprnt.c: 1253: {
  8337                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8338  000BEC  C0AC  FFD9         	movff	__doprnt@ap,fsr2l
  8339  000BF0  C0AD  FFDA         	movff	__doprnt@ap+1,fsr2h
  8340  000BF4  CFDF F0AE          	movff	indf2,??__doprnt
  8341  000BF8  0E02               	movlw	2
  8342  000BFA  26DE               	addwf	postinc2,f,c
  8343  000BFC  CFDF F0AF          	movff	indf2,??__doprnt+1
  8344  000C00  0E00               	movlw	0
  8345  000C02  22DD               	addwfc	postdec2,f,c
  8346  000C04  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8347  000C08  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8348  000C0C  CFDE F0BB          	movff	postinc2,__doprnt@val
  8349  000C10  CFDD F0BC          	movff	postdec2,__doprnt@val+1
  8350  000C14  0100               	movlb	0	; () banked
  8351  000C16  0E00               	movlw	0
  8352  000C18  BFBC               	btfsc	(__doprnt@val+1)& (0+255),7,b
  8353  000C1A  0EFF               	movlw	-1
  8354  000C1C  6FBD               	movwf	(__doprnt@val+2)& (0+255),b
  8355  000C1E  6FBE               	movwf	(__doprnt@val+3)& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;doprnt.c: 1261: if((long)val < 0) {
  8359  000C20  0100               	movlb	0	; () banked
  8360  000C22  AFBE               	btfss	(__doprnt@val+3)& (0+255),7,b
  8361  000C24  D00C               	goto	l6050
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;doprnt.c: 1262: flag |= 0x03;
  8365  000C26  0E03               	movlw	3
  8366  000C28  0100               	movlb	0	; () banked
  8367  000C2A  13B7               	iorwf	__doprnt@flag& (0+255),f,b
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;doprnt.c: 1263: val = -val;
  8371  000C2C  0100               	movlb	0	; () banked
  8372  000C2E  1FBE               	comf	(__doprnt@val+3)& (0+255),f,b
  8373  000C30  1FBD               	comf	(__doprnt@val+2)& (0+255),f,b
  8374  000C32  1FBC               	comf	(__doprnt@val+1)& (0+255),f,b
  8375  000C34  6DBB               	negf	__doprnt@val& (0+255),b
  8376  000C36  0E00               	movlw	0
  8377  000C38  23BC               	addwfc	(__doprnt@val+1)& (0+255),f,b
  8378  000C3A  23BD               	addwfc	(__doprnt@val+2)& (0+255),f,b
  8379  000C3C  23BE               	addwfc	(__doprnt@val+3)& (0+255),f,b
  8380  000C3E                     l6050:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;doprnt.c: 1264: }
  8384                           ;doprnt.c: 1266: }
  8385                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8386  000C3E  0100               	movlb	0	; () banked
  8387  000C40  51C8               	movf	__doprnt@prec& (0+255),w,b
  8388  000C42  0100               	movlb	0	; () banked
  8389  000C44  11C9               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  8390  000C46  A4D8               	btfss	status,2,c
  8391  000C48  D00D               	goto	l6056
  8392                           
  8393                           ; BSR set to: 0
  8394  000C4A  0100               	movlb	0	; () banked
  8395  000C4C  51BB               	movf	__doprnt@val& (0+255),w,b
  8396  000C4E  0100               	movlb	0	; () banked
  8397  000C50  11BC               	iorwf	(__doprnt@val+1)& (0+255),w,b
  8398  000C52  0100               	movlb	0	; () banked
  8399  000C54  11BD               	iorwf	(__doprnt@val+2)& (0+255),w,b
  8400  000C56  0100               	movlb	0	; () banked
  8401  000C58  11BE               	iorwf	(__doprnt@val+3)& (0+255),w,b
  8402  000C5A  A4D8               	btfss	status,2,c
  8403  000C5C  D003               	goto	l6056
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;doprnt.c: 1291: prec++;
  8407  000C5E  0100               	movlb	0	; () banked
  8408  000C60  4BC8               	infsnz	__doprnt@prec& (0+255),f,b
  8409  000C62  2BC9               	incf	(__doprnt@prec+1)& (0+255),f,b
  8410  000C64                     l6056:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8414  000C64  0E01               	movlw	1
  8415  000C66  0100               	movlb	0	; () banked
  8416  000C68  6FCA               	movwf	__doprnt@c& (0+255),b
  8417  000C6A                     l6058:
  8418                           
  8419                           ; BSR set to: 0
  8420  000C6A  0E0A               	movlw	10
  8421  000C6C  0100               	movlb	0	; () banked
  8422  000C6E  19CA               	xorwf	__doprnt@c& (0+255),w,b
  8423  000C70  B4D8               	btfsc	status,2,c
  8424  000C72  D01E               	goto	l6070
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;doprnt.c: 1306: if(val < dpowers[c])
  8428                           
  8429                           ; BSR set to: 0
  8430                           
  8431                           ; BSR set to: 0
  8432  000C74  0100               	movlb	0	; () banked
  8433  000C76  51CA               	movf	__doprnt@c& (0+255),w,b
  8434  000C78  0D04               	mullw	4
  8435  000C7A  0ED5               	movlw	low _dpowers
  8436  000C7C  24F3               	addwf	prodl,w,c
  8437  000C7E  6EF6               	movwf	tblptrl,c
  8438  000C80  0E7E               	movlw	high _dpowers
  8439  000C82  20F4               	addwfc	prodh,w,c
  8440  000C84  6EF7               	movwf	tblptrh,c
  8441  000C86                     	if	0	;There are less than 3 active tblptr bytes
  8442  000C86                     	endif
  8443  000C86  0009               	tblrd		*+
  8444  000C88  50F5               	movf	tablat,w,c
  8445  000C8A  0100               	movlb	0	; () banked
  8446  000C8C  5DBB               	subwf	__doprnt@val& (0+255),w,b
  8447  000C8E  0009               	tblrd		*+
  8448  000C90  50F5               	movf	tablat,w,c
  8449  000C92  0100               	movlb	0	; () banked
  8450  000C94  59BC               	subwfb	(__doprnt@val+1)& (0+255),w,b
  8451  000C96  0009               	tblrd		*+
  8452  000C98  50F5               	movf	tablat,w,c
  8453  000C9A  0100               	movlb	0	; () banked
  8454  000C9C  59BD               	subwfb	(__doprnt@val+2)& (0+255),w,b
  8455  000C9E  0009               	tblrd		*+
  8456  000CA0  50F5               	movf	tablat,w,c
  8457  000CA2  0100               	movlb	0	; () banked
  8458  000CA4  59BE               	subwfb	(__doprnt@val+3)& (0+255),w,b
  8459  000CA6  A0D8               	btfss	status,0,c
  8460  000CA8  D003               	goto	l6070
  8461                           
  8462                           ; BSR set to: 0
  8463                           
  8464                           ; BSR set to: 0
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;doprnt.c: 1307: break;
  8468  000CAA  0100               	movlb	0	; () banked
  8469  000CAC  2BCA               	incf	__doprnt@c& (0+255),f,b
  8470  000CAE  D7DD               	goto	l6058
  8471  000CB0                     l6070:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;doprnt.c: 1339: if(c < prec)
  8475  000CB0  0E80               	movlw	128
  8476  000CB2  0100               	movlb	0	; () banked
  8477  000CB4  BFCA               	btfsc	__doprnt@c& (0+255),7,b
  8478  000CB6  0E7F               	movlw	127
  8479  000CB8  0100               	movlb	0	; () banked
  8480  000CBA  6FAE               	movwf	??__doprnt& (0+255),b
  8481  000CBC  0100               	movlb	0	; () banked
  8482  000CBE  51C8               	movf	__doprnt@prec& (0+255),w,b
  8483  000CC0  0100               	movlb	0	; () banked
  8484  000CC2  5DCA               	subwf	__doprnt@c& (0+255),w,b
  8485  000CC4  0100               	movlb	0	; () banked
  8486  000CC6  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  8487  000CC8  0A80               	xorlw	128
  8488  000CCA  0100               	movlb	0	; () banked
  8489  000CCC  59AE               	subwfb	??__doprnt& (0+255),w,b
  8490  000CCE  B0D8               	btfsc	status,0,c
  8491  000CD0  D003               	goto	l6074
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;doprnt.c: 1340: c = prec;
  8495  000CD2  C0C8  F0CA         	movff	__doprnt@prec,__doprnt@c
  8496  000CD6  D018               	goto	l6078
  8497  000CD8                     l6074:
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;doprnt.c: 1341: else if(prec < c)
  8501  000CD8  0100               	movlb	0	; () banked
  8502  000CDA  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  8503  000CDC  0A80               	xorlw	128
  8504  000CDE  0100               	movlb	0	; () banked
  8505  000CE0  6FAE               	movwf	??__doprnt& (0+255),b
  8506  000CE2  0100               	movlb	0	; () banked
  8507  000CE4  51CA               	movf	__doprnt@c& (0+255),w,b
  8508  000CE6  0100               	movlb	0	; () banked
  8509  000CE8  5DC8               	subwf	__doprnt@prec& (0+255),w,b
  8510  000CEA  0E80               	movlw	128
  8511  000CEC  0100               	movlb	0	; () banked
  8512  000CEE  BFCA               	btfsc	__doprnt@c& (0+255),7,b
  8513  000CF0  0E7F               	movlw	127
  8514  000CF2  0100               	movlb	0	; () banked
  8515  000CF4  59AE               	subwfb	??__doprnt& (0+255),w,b
  8516  000CF6  B0D8               	btfsc	status,0,c
  8517  000CF8  D007               	goto	l6078
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;doprnt.c: 1342: prec = c;
  8521  000CFA  0100               	movlb	0	; () banked
  8522  000CFC  51CA               	movf	__doprnt@c& (0+255),w,b
  8523  000CFE  0100               	movlb	0	; () banked
  8524  000D00  6FC8               	movwf	__doprnt@prec& (0+255),b
  8525  000D02  6BC9               	clrf	(__doprnt@prec+1)& (0+255),b
  8526  000D04  BFC8               	btfsc	__doprnt@prec& (0+255),7,b
  8527  000D06  07C9               	decf	(__doprnt@prec+1)& (0+255),f,b
  8528  000D08                     l6078:
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8532  000D08  0100               	movlb	0	; () banked
  8533  000D0A  51B9               	movf	__doprnt@width& (0+255),w,b
  8534  000D0C  0100               	movlb	0	; () banked
  8535  000D0E  11BA               	iorwf	(__doprnt@width+1)& (0+255),w,b
  8536  000D10  B4D8               	btfsc	status,2,c
  8537  000D12  D014               	goto	l6084
  8538                           
  8539                           ; BSR set to: 0
  8540  000D14  0E03               	movlw	3
  8541  000D16  0100               	movlb	0	; () banked
  8542  000D18  15B7               	andwf	__doprnt@flag& (0+255),w,b
  8543  000D1A  0100               	movlb	0	; () banked
  8544  000D1C  6FAE               	movwf	??__doprnt& (0+255),b
  8545  000D1E  0E00               	movlw	0
  8546  000D20  0100               	movlb	0	; () banked
  8547  000D22  15B8               	andwf	(__doprnt@flag+1)& (0+255),w,b
  8548  000D24  0100               	movlb	0	; () banked
  8549  000D26  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  8550  000D28  0100               	movlb	0	; () banked
  8551  000D2A  51AE               	movf	??__doprnt& (0+255),w,b
  8552  000D2C  0100               	movlb	0	; () banked
  8553  000D2E  11AF               	iorwf	(??__doprnt+1)& (0+255),w,b
  8554  000D30  B4D8               	btfsc	status,2,c
  8555  000D32  D004               	goto	l6084
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;doprnt.c: 1346: width--;
  8559  000D34  0100               	movlb	0	; () banked
  8560  000D36  07B9               	decf	__doprnt@width& (0+255),f,b
  8561  000D38  A0D8               	btfss	status,0,c
  8562  000D3A  07BA               	decf	(__doprnt@width+1)& (0+255),f,b
  8563  000D3C                     l6084:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8567  000D3C  0100               	movlb	0	; () banked
  8568  000D3E  ADB8               	btfss	(__doprnt@flag+1)& (0+255),6,b
  8569  000D40  D01E               	goto	l6092
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;doprnt.c: 1349: if(width > prec)
  8573  000D42  0100               	movlb	0	; () banked
  8574  000D44  51B9               	movf	__doprnt@width& (0+255),w,b
  8575  000D46  0100               	movlb	0	; () banked
  8576  000D48  5DC8               	subwf	__doprnt@prec& (0+255),w,b
  8577  000D4A  0100               	movlb	0	; () banked
  8578  000D4C  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  8579  000D4E  0A80               	xorlw	128
  8580  000D50  0100               	movlb	0	; () banked
  8581  000D52  6FAE               	movwf	??__doprnt& (0+255),b
  8582  000D54  0100               	movlb	0	; () banked
  8583  000D56  51BA               	movf	(__doprnt@width+1)& (0+255),w,b
  8584  000D58  0A80               	xorlw	128
  8585  000D5A  0100               	movlb	0	; () banked
  8586  000D5C  59AE               	subwfb	??__doprnt& (0+255),w,b
  8587  000D5E  B0D8               	btfsc	status,0,c
  8588  000D60  D009               	goto	l6090
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;doprnt.c: 1350: width -= prec;
  8592  000D62  0100               	movlb	0	; () banked
  8593  000D64  51C8               	movf	__doprnt@prec& (0+255),w,b
  8594  000D66  0100               	movlb	0	; () banked
  8595  000D68  5FB9               	subwf	__doprnt@width& (0+255),f,b
  8596  000D6A  0100               	movlb	0	; () banked
  8597  000D6C  51C9               	movf	(__doprnt@prec+1)& (0+255),w,b
  8598  000D6E  0100               	movlb	0	; () banked
  8599  000D70  5BBA               	subwfb	(__doprnt@width+1)& (0+255),f,b
  8600  000D72  D005               	goto	l6092
  8601  000D74                     l6090:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;doprnt.c: 1351: else
  8605                           ;doprnt.c: 1352: width = 0;
  8606  000D74  0E00               	movlw	0
  8607  000D76  0100               	movlb	0	; () banked
  8608  000D78  6FBA               	movwf	(__doprnt@width+1)& (0+255),b
  8609  000D7A  0E00               	movlw	0
  8610  000D7C  6FB9               	movwf	__doprnt@width& (0+255),b
  8611  000D7E                     l6092:
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;doprnt.c: 1353: }
  8615                           ;doprnt.c: 1381: if(width > c)
  8616  000D7E  0E80               	movlw	128
  8617  000D80  0100               	movlb	0	; () banked
  8618  000D82  BFCA               	btfsc	__doprnt@c& (0+255),7,b
  8619  000D84  0E7F               	movlw	127
  8620  000D86  0100               	movlb	0	; () banked
  8621  000D88  6FAE               	movwf	??__doprnt& (0+255),b
  8622  000D8A  0100               	movlb	0	; () banked
  8623  000D8C  51B9               	movf	__doprnt@width& (0+255),w,b
  8624  000D8E  0100               	movlb	0	; () banked
  8625  000D90  5DCA               	subwf	__doprnt@c& (0+255),w,b
  8626  000D92  0100               	movlb	0	; () banked
  8627  000D94  51BA               	movf	(__doprnt@width+1)& (0+255),w,b
  8628  000D96  0A80               	xorlw	128
  8629  000D98  0100               	movlb	0	; () banked
  8630  000D9A  59AE               	subwfb	??__doprnt& (0+255),w,b
  8631  000D9C  B0D8               	btfsc	status,0,c
  8632  000D9E  D00B               	goto	l6096
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;doprnt.c: 1382: width -= c;
  8636  000DA0  0100               	movlb	0	; () banked
  8637  000DA2  51CA               	movf	__doprnt@c& (0+255),w,b
  8638  000DA4  0100               	movlb	0	; () banked
  8639  000DA6  5FB9               	subwf	__doprnt@width& (0+255),f,b
  8640  000DA8  0E00               	movlw	0
  8641  000DAA  0100               	movlb	0	; () banked
  8642  000DAC  BFCA               	btfsc	__doprnt@c& (0+255),7,b
  8643  000DAE  0EFF               	movlw	255
  8644  000DB0  0100               	movlb	0	; () banked
  8645  000DB2  5BBA               	subwfb	(__doprnt@width+1)& (0+255),f,b
  8646  000DB4  D005               	goto	l6098
  8647  000DB6                     l6096:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;doprnt.c: 1383: else
  8651                           ;doprnt.c: 1384: width = 0;
  8652  000DB6  0E00               	movlw	0
  8653  000DB8  0100               	movlb	0	; () banked
  8654  000DBA  6FBA               	movwf	(__doprnt@width+1)& (0+255),b
  8655  000DBC  0E00               	movlw	0
  8656  000DBE  6FB9               	movwf	__doprnt@width& (0+255),b
  8657  000DC0                     l6098:
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;doprnt.c: 1422: {
  8661                           ;doprnt.c: 1424: if(width
  8662                           ;doprnt.c: 1428: )
  8663  000DC0  0100               	movlb	0	; () banked
  8664  000DC2  51B9               	movf	__doprnt@width& (0+255),w,b
  8665  000DC4  0100               	movlb	0	; () banked
  8666  000DC6  11BA               	iorwf	(__doprnt@width+1)& (0+255),w,b
  8667  000DC8  B4D8               	btfsc	status,2,c
  8668  000DCA  D03E               	goto	l6110
  8669  000DCC                     l6100:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  8673  000DCC  0100               	movlb	0	; () banked
  8674  000DCE  EE20 F002          	lfsr	2,2
  8675  000DD2  51A8               	movf	__doprnt@pb& (0+255),w,b
  8676  000DD4  26D9               	addwf	fsr2l,f,c
  8677  000DD6  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8678  000DD8  22DA               	addwfc	fsr2h,f,c
  8679  000DDA  50DE               	movf	postinc2,w,c
  8680  000DDC  10DE               	iorwf	postinc2,w,c
  8681  000DDE  B4D8               	btfsc	status,2,c
  8682  000DE0  D014               	goto	l6104
  8683                           
  8684                           ; BSR set to: 0
  8685  000DE2  0100               	movlb	0	; () banked
  8686  000DE4  EE20 F002          	lfsr	2,2
  8687  000DE8  51A8               	movf	__doprnt@pb& (0+255),w,b
  8688  000DEA  26D9               	addwf	fsr2l,f,c
  8689  000DEC  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8690  000DEE  22DA               	addwfc	fsr2h,f,c
  8691  000DF0  D801               	call	u7058
  8692  000DF2  D020               	goto	l6108
  8693  000DF4                     u7058:
  8694  000DF4  0005               	push	
  8695  000DF6  6EFA               	movwf	pclath,c
  8696  000DF8  50DE               	movf	postinc2,w,c
  8697  000DFA  6EFD               	movwf	tosl,c
  8698  000DFC  50DE               	movf	postinc2,w,c
  8699  000DFE  6EFE               	movwf	tosh,c
  8700  000E00  50F8               	movf	tblptru,w,c
  8701  000E02  6EFF               	movwf	tosu,c
  8702  000E04  50FA               	movf	pclath,w,c
  8703  000E06  0E20               	movlw	32
  8704  000E08  0012               	return		;indir
  8705  000E0A                     l6104:
  8706  000E0A  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8707  000E0E  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8708  000E12  CFDE F0AE          	movff	postinc2,??__doprnt
  8709  000E16  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8710  000E1A  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8711  000E1E  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8712  000E22  0E20               	movlw	32
  8713  000E24  6EDF               	movwf	indf2,c
  8714  000E26  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8715  000E2A  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8716  000E2E  2ADE               	incf	postinc2,f,c
  8717  000E30  0E00               	movlw	0
  8718  000E32  22DD               	addwfc	postdec2,f,c
  8719  000E34                     l6108:
  8720                           
  8721                           ;doprnt.c: 1431: while(--width);
  8722  000E34  0100               	movlb	0	; () banked
  8723  000E36  07B9               	decf	__doprnt@width& (0+255),f,b
  8724  000E38  A0D8               	btfss	status,0,c
  8725  000E3A  07BA               	decf	(__doprnt@width+1)& (0+255),f,b
  8726  000E3C  0100               	movlb	0	; () banked
  8727  000E3E  51B9               	movf	__doprnt@width& (0+255),w,b
  8728  000E40  0100               	movlb	0	; () banked
  8729  000E42  11BA               	iorwf	(__doprnt@width+1)& (0+255),w,b
  8730  000E44  A4D8               	btfss	status,2,c
  8731  000E46  D7C2               	goto	l6100
  8732  000E48                     l6110:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;doprnt.c: 1438: if(flag & 0x03)
  8736  000E48  0E03               	movlw	3
  8737  000E4A  0100               	movlb	0	; () banked
  8738  000E4C  15B7               	andwf	__doprnt@flag& (0+255),w,b
  8739  000E4E  0100               	movlb	0	; () banked
  8740  000E50  6FAE               	movwf	??__doprnt& (0+255),b
  8741  000E52  0E00               	movlw	0
  8742  000E54  0100               	movlb	0	; () banked
  8743  000E56  15B8               	andwf	(__doprnt@flag+1)& (0+255),w,b
  8744  000E58  0100               	movlb	0	; () banked
  8745  000E5A  6FAF               	movwf	(??__doprnt+1)& (0+255),b
  8746  000E5C  0100               	movlb	0	; () banked
  8747  000E5E  51AE               	movf	??__doprnt& (0+255),w,b
  8748  000E60  0100               	movlb	0	; () banked
  8749  000E62  11AF               	iorwf	(??__doprnt+1)& (0+255),w,b
  8750  000E64  B4D8               	btfsc	status,2,c
  8751  000E66  D0A4               	goto	l6130
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  8755  000E68  0100               	movlb	0	; () banked
  8756  000E6A  EE20 F002          	lfsr	2,2
  8757  000E6E  51A8               	movf	__doprnt@pb& (0+255),w,b
  8758  000E70  26D9               	addwf	fsr2l,f,c
  8759  000E72  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8760  000E74  22DA               	addwfc	fsr2h,f,c
  8761  000E76  50DE               	movf	postinc2,w,c
  8762  000E78  10DE               	iorwf	postinc2,w,c
  8763  000E7A  B4D8               	btfsc	status,2,c
  8764  000E7C  D014               	goto	l6116
  8765                           
  8766                           ; BSR set to: 0
  8767  000E7E  0100               	movlb	0	; () banked
  8768  000E80  EE20 F002          	lfsr	2,2
  8769  000E84  51A8               	movf	__doprnt@pb& (0+255),w,b
  8770  000E86  26D9               	addwf	fsr2l,f,c
  8771  000E88  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8772  000E8A  22DA               	addwfc	fsr2h,f,c
  8773  000E8C  D801               	call	u7098
  8774  000E8E  D090               	goto	l6130
  8775  000E90                     u7098:
  8776  000E90  0005               	push	
  8777  000E92  6EFA               	movwf	pclath,c
  8778  000E94  50DE               	movf	postinc2,w,c
  8779  000E96  6EFD               	movwf	tosl,c
  8780  000E98  50DE               	movf	postinc2,w,c
  8781  000E9A  6EFE               	movwf	tosh,c
  8782  000E9C  50F8               	movf	tblptru,w,c
  8783  000E9E  6EFF               	movwf	tosu,c
  8784  000EA0  50FA               	movf	pclath,w,c
  8785  000EA2  0E2D               	movlw	45
  8786  000EA4  0012               	return		;indir
  8787  000EA6                     l6116:
  8788  000EA6  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8789  000EAA  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8790  000EAE  CFDE F0AE          	movff	postinc2,??__doprnt
  8791  000EB2  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8792  000EB6  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8793  000EBA  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8794  000EBE  0E2D               	movlw	45
  8795  000EC0  6EDF               	movwf	indf2,c
  8796  000EC2  D06F               	goto	l6128
  8797  000EC4                     l6120:
  8798                           
  8799                           ;doprnt.c: 1478: {
  8800                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8801  000EC4  C0C8  F0AE         	movff	__doprnt@prec,??__doprnt
  8802  000EC8  C0C9  F0AF         	movff	__doprnt@prec+1,??__doprnt+1
  8803  000ECC  0100               	movlb	0	; () banked
  8804  000ECE  90D8               	bcf	status,0,c
  8805  000ED0  37AE               	rlcf	??__doprnt& (0+255),f,b
  8806  000ED2  37AF               	rlcf	(??__doprnt+1)& (0+255),f,b
  8807  000ED4  0100               	movlb	0	; () banked
  8808  000ED6  90D8               	bcf	status,0,c
  8809  000ED8  37AE               	rlcf	??__doprnt& (0+255),f,b
  8810  000EDA  37AF               	rlcf	(??__doprnt+1)& (0+255),f,b
  8811  000EDC  0ED5               	movlw	low _dpowers
  8812  000EDE  0100               	movlb	0	; () banked
  8813  000EE0  25AE               	addwf	??__doprnt& (0+255),w,b
  8814  000EE2  6EF6               	movwf	tblptrl,c
  8815  000EE4  0E7E               	movlw	high _dpowers
  8816  000EE6  21AF               	addwfc	(??__doprnt+1)& (0+255),w,b
  8817  000EE8  6EF7               	movwf	tblptrh,c
  8818  000EEA                     	if	0	;There are less than 3 active tblptr bytes
  8819  000EEA                     	endif
  8820  000EEA  0009               	tblrd		*+
  8821  000EEC  CFF5 F01E          	movff	tablat,___lldiv@divisor
  8822  000EF0  0009               	tblrd		*+
  8823  000EF2  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  8824  000EF6  0009               	tblrd		*+
  8825  000EF8  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  8826  000EFC  000A               	tblrd		*-
  8827  000EFE  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  8828  000F02  C0BB  F01A         	movff	__doprnt@val,___lldiv@dividend
  8829  000F06  C0BC  F01B         	movff	__doprnt@val+1,___lldiv@dividend+1
  8830  000F0A  C0BD  F01C         	movff	__doprnt@val+2,___lldiv@dividend+2
  8831  000F0E  C0BE  F01D         	movff	__doprnt@val+3,___lldiv@dividend+3
  8832  000F12  EC4F  F01C         	call	___lldiv
  8833  000F16  C01A  F076         	movff	?___lldiv,___llmod@dividend
  8834  000F1A  C01B  F077         	movff	?___lldiv+1,___llmod@dividend+1
  8835  000F1E  C01C  F078         	movff	?___lldiv+2,___llmod@dividend+2
  8836  000F22  C01D  F079         	movff	?___lldiv+3,___llmod@dividend+3
  8837  000F26  0E0A               	movlw	10
  8838  000F28  0100               	movlb	0	; () banked
  8839  000F2A  6F7A               	movwf	___llmod@divisor& (0+255),b
  8840  000F2C  0E00               	movlw	0
  8841  000F2E  6F7B               	movwf	(___llmod@divisor+1)& (0+255),b
  8842  000F30  0E00               	movlw	0
  8843  000F32  6F7C               	movwf	(___llmod@divisor+2)& (0+255),b
  8844  000F34  0E00               	movlw	0
  8845  000F36  6F7D               	movwf	(___llmod@divisor+3)& (0+255),b
  8846  000F38  ECB9  F01B         	call	___llmod	;wreg free
  8847  000F3C  0100               	movlb	0	; () banked
  8848  000F3E  5176               	movf	?___llmod& (0+255),w,b
  8849  000F40  0F30               	addlw	48
  8850  000F42  0100               	movlb	0	; () banked
  8851  000F44  6FCA               	movwf	__doprnt@c& (0+255),b
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;doprnt.c: 1523: }
  8855                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  8856  000F46  0100               	movlb	0	; () banked
  8857  000F48  EE20 F002          	lfsr	2,2
  8858  000F4C  51A8               	movf	__doprnt@pb& (0+255),w,b
  8859  000F4E  26D9               	addwf	fsr2l,f,c
  8860  000F50  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8861  000F52  22DA               	addwfc	fsr2h,f,c
  8862  000F54  50DE               	movf	postinc2,w,c
  8863  000F56  10DE               	iorwf	postinc2,w,c
  8864  000F58  B4D8               	btfsc	status,2,c
  8865  000F5A  D015               	goto	l6126
  8866                           
  8867                           ; BSR set to: 0
  8868  000F5C  0100               	movlb	0	; () banked
  8869  000F5E  EE20 F002          	lfsr	2,2
  8870  000F62  51A8               	movf	__doprnt@pb& (0+255),w,b
  8871  000F64  26D9               	addwf	fsr2l,f,c
  8872  000F66  51A9               	movf	(__doprnt@pb+1)& (0+255),w,b
  8873  000F68  22DA               	addwfc	fsr2h,f,c
  8874  000F6A  D801               	call	u7118
  8875  000F6C  D021               	goto	l6130
  8876  000F6E                     u7118:
  8877  000F6E  0005               	push	
  8878  000F70  6EFA               	movwf	pclath,c
  8879  000F72  50DE               	movf	postinc2,w,c
  8880  000F74  6EFD               	movwf	tosl,c
  8881  000F76  50DE               	movf	postinc2,w,c
  8882  000F78  6EFE               	movwf	tosh,c
  8883  000F7A  50F8               	movf	tblptru,w,c
  8884  000F7C  6EFF               	movwf	tosu,c
  8885  000F7E  50FA               	movf	pclath,w,c
  8886  000F80  0100               	movlb	0	; () banked
  8887  000F82  51CA               	movf	__doprnt@c& (0+255),w,b
  8888  000F84  0012               	return		;indir
  8889  000F86                     l6126:
  8890  000F86  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8891  000F8A  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8892  000F8E  CFDE F0AE          	movff	postinc2,??__doprnt
  8893  000F92  CFDD F0AF          	movff	postdec2,??__doprnt+1
  8894  000F96  C0AE  FFD9         	movff	??__doprnt,fsr2l
  8895  000F9A  C0AF  FFDA         	movff	??__doprnt+1,fsr2h
  8896  000F9E  C0CA  FFDF         	movff	__doprnt@c,indf2
  8897  000FA2                     l6128:
  8898  000FA2  C0A8  FFD9         	movff	__doprnt@pb,fsr2l
  8899  000FA6  C0A9  FFDA         	movff	__doprnt@pb+1,fsr2h
  8900  000FAA  2ADE               	incf	postinc2,f,c
  8901  000FAC  0E00               	movlw	0
  8902  000FAE  22DD               	addwfc	postdec2,f,c
  8903  000FB0                     l6130:
  8904  000FB0  0100               	movlb	0	; () banked
  8905  000FB2  07C8               	decf	__doprnt@prec& (0+255),f,b
  8906  000FB4  A0D8               	btfss	status,0,c
  8907  000FB6  07C9               	decf	(__doprnt@prec+1)& (0+255),f,b
  8908  000FB8  0100               	movlb	0	; () banked
  8909  000FBA  29C8               	incf	__doprnt@prec& (0+255),w,b
  8910  000FBC  E183               	bnz	l6120
  8911  000FBE  0100               	movlb	0	; () banked
  8912  000FC0  29C9               	incf	(__doprnt@prec+1)& (0+255),w,b
  8913  000FC2  A4D8               	btfss	status,2,c
  8914  000FC4  D77F               	goto	l6120
  8915  000FC6                     l6132:
  8916  000FC6  C0AA  FFF6         	movff	__doprnt@f,tblptrl
  8917  000FCA  C0AB  FFF7         	movff	__doprnt@f+1,tblptrh
  8918  000FCE  0100               	movlb	0	; () banked
  8919  000FD0  4BAA               	infsnz	__doprnt@f& (0+255),f,b
  8920  000FD2  2BAB               	incf	(__doprnt@f+1)& (0+255),f,b
  8921  000FD4                     	if	0	;tblptru may be non-zero
  8922  000FD4                     	endif
  8923  000FD4                     	if	0	;tblptru may be non-zero
  8924  000FD4                     	endif
  8925  000FD4  0008               	tblrd		*
  8926  000FD6  CFF5 F0CA          	movff	tablat,__doprnt@c
  8927  000FDA  0100               	movlb	0	; () banked
  8928  000FDC  51CA               	movf	__doprnt@c& (0+255),w,b
  8929  000FDE  A4D8               	btfss	status,2,c
  8930  000FE0  EF57  F000         	goto	l5810
  8931  000FE4                     l6134:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;doprnt.c: 1540: return 0;
  8935  000FE4  0E00               	movlw	0
  8936  000FE6  0100               	movlb	0	; () banked
  8937  000FE8  6FA9               	movwf	(?__doprnt+1)& (0+255),b
  8938  000FEA  0E00               	movlw	0
  8939  000FEC  6FA8               	movwf	?__doprnt& (0+255),b
  8940  000FEE  0012               	return	
  8941  000FF0                     __end_of__doprnt:
  8942                           	opt stack 0
  8943                           tosu	equ	0xFFF
  8944                           tosh	equ	0xFFE
  8945                           tosl	equ	0xFFD
  8946                           pclath	equ	0xFFA
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           indf0	equ	0xFEF
  8955                           postinc0	equ	0xFEE
  8956                           fsr0h	equ	0xFEA
  8957                           fsr0l	equ	0xFE9
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function _scale *****************
  8971 ;; Defined at:
  8972 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  scl             1    wreg     char 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  scl             1   50[BANK0 ] char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  3   44[BANK0 ] char 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8986 ;;      Params:         0       3       0       0       0       0       0
  8987 ;;      Locals:         0       4       0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0
  8989 ;;      Totals:         0       7       0       0       0       0       0
  8990 ;;Total ram usage:        7 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    4
  8993 ;; This function calls:
  8994 ;;		___awdiv
  8995 ;;		___awmod
  8996 ;;		___ftmul
  8997 ;;		___wmul
  8998 ;; This function is called by:
  8999 ;;		__doprnt
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text33
  9004  001788                     __ptext33:
  9005                           	opt stack 0
  9006  001788                     _scale:
  9007                           	opt stack 22
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;incstack = 0
  9011                           ;scale@scl stored from wreg
  9012  001788  0100               	movlb	0	; () banked
  9013  00178A  6F92               	movwf	scale@scl& (0+255),b
  9014                           
  9015                           ;doprnt.c: 428: if(scl < 0) {
  9016  00178C  0100               	movlb	0	; () banked
  9017  00178E  AF92               	btfss	scale@scl& (0+255),7,b
  9018  001790  D124               	goto	l5468
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;doprnt.c: 429: scl = -scl;
  9022  001792  0100               	movlb	0	; () banked
  9023  001794  6D92               	negf	scale@scl& (0+255),b
  9024                           
  9025                           ;doprnt.c: 430: if(scl>=110)
  9026  001796  0100               	movlb	0	; () banked
  9027  001798  5192               	movf	scale@scl& (0+255),w,b
  9028  00179A  0A80               	xorlw	128
  9029  00179C  0F12               	addlw	-238
  9030  00179E  A0D8               	btfss	status,0,c
  9031  0017A0  D0A8               	goto	l5458
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9035  0017A2  0E00               	movlw	0
  9036  0017A4  0100               	movlb	0	; () banked
  9037  0017A6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9038  0017A8  0E03               	movlw	3
  9039  0017AA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9040  0017AC  0E00               	movlw	0
  9041  0017AE  0100               	movlb	0	; () banked
  9042  0017B0  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9043  0017B2  0E0A               	movlw	10
  9044  0017B4  6F73               	movwf	___awdiv@divisor& (0+255),b
  9045  0017B6  0E00               	movlw	0
  9046  0017B8  6E1D               	movwf	___awmod@divisor+1,c
  9047  0017BA  0E64               	movlw	100
  9048  0017BC  6E1C               	movwf	___awmod@divisor,c
  9049  0017BE  0100               	movlb	0	; () banked
  9050  0017C0  5192               	movf	scale@scl& (0+255),w,b
  9051  0017C2  6E1A               	movwf	___awmod@dividend,c
  9052  0017C4  6A1B               	clrf	___awmod@dividend+1,c
  9053  0017C6  BE1A               	btfsc	___awmod@dividend,7,c
  9054  0017C8  061B               	decf	___awmod@dividend+1,f,c
  9055  0017CA  ECD3  F01C         	call	___awmod
  9056  0017CE  C01A  F071         	movff	?___awmod,___awdiv@dividend
  9057  0017D2  C01B  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9058  0017D6  EC55  F01A         	call	___awdiv	;wreg free
  9059  0017DA  0E09               	movlw	9
  9060  0017DC  0100               	movlb	0	; () banked
  9061  0017DE  2571               	addwf	?___awdiv& (0+255),w,b
  9062  0017E0  0100               	movlb	0	; () banked
  9063  0017E2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9064  0017E4  0E00               	movlw	0
  9065  0017E6  0100               	movlb	0	; () banked
  9066  0017E8  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9067  0017EA  0100               	movlb	0	; () banked
  9068  0017EC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9069  0017EE  EC03  F01F         	call	___wmul	;wreg free
  9070  0017F2  0E24               	movlw	low __npowers_
  9071  0017F4  0100               	movlb	0	; () banked
  9072  0017F6  2579               	addwf	?___wmul& (0+255),w,b
  9073  0017F8  6EF6               	movwf	tblptrl,c
  9074  0017FA  0E7F               	movlw	high __npowers_
  9075  0017FC  0100               	movlb	0	; () banked
  9076  0017FE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9077  001800  6EF7               	movwf	tblptrh,c
  9078  001802                     	if	0	;There are less than 3 active tblptr bytes
  9079  001802                     	endif
  9080  001802  0009               	tblrd		*+
  9081  001804  CFF5 F080          	movff	tablat,___ftmul@f2
  9082  001808  0009               	tblrd		*+
  9083  00180A  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9084  00180E  000A               	tblrd		*-
  9085  001810  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9086  001814  0E00               	movlw	0
  9087  001816  0100               	movlb	0	; () banked
  9088  001818  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9089  00181A  0E64               	movlw	100
  9090  00181C  6F73               	movwf	___awdiv@divisor& (0+255),b
  9091  00181E  0100               	movlb	0	; () banked
  9092  001820  5192               	movf	scale@scl& (0+255),w,b
  9093  001822  0100               	movlb	0	; () banked
  9094  001824  6F71               	movwf	___awdiv@dividend& (0+255),b
  9095  001826  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9096  001828  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9097  00182A  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9098  00182C  EC55  F01A         	call	___awdiv	;wreg free
  9099  001830  0E12               	movlw	18
  9100  001832  0100               	movlb	0	; () banked
  9101  001834  2571               	addwf	?___awdiv& (0+255),w,b
  9102  001836  0100               	movlb	0	; () banked
  9103  001838  6F79               	movwf	___wmul@multiplier& (0+255),b
  9104  00183A  0E00               	movlw	0
  9105  00183C  0100               	movlb	0	; () banked
  9106  00183E  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9107  001840  0100               	movlb	0	; () banked
  9108  001842  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9109  001844  0E00               	movlw	0
  9110  001846  0100               	movlb	0	; () banked
  9111  001848  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9112  00184A  0E03               	movlw	3
  9113  00184C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9114  00184E  EC03  F01F         	call	___wmul	;wreg free
  9115  001852  0E24               	movlw	low __npowers_
  9116  001854  0100               	movlb	0	; () banked
  9117  001856  2579               	addwf	?___wmul& (0+255),w,b
  9118  001858  6EF6               	movwf	tblptrl,c
  9119  00185A  0E7F               	movlw	high __npowers_
  9120  00185C  0100               	movlb	0	; () banked
  9121  00185E  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9122  001860  6EF7               	movwf	tblptrh,c
  9123  001862                     	if	0	;There are less than 3 active tblptr bytes
  9124  001862                     	endif
  9125  001862  0009               	tblrd		*+
  9126  001864  CFF5 F07D          	movff	tablat,___ftmul@f1
  9127  001868  0009               	tblrd		*+
  9128  00186A  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9129  00186E  000A               	tblrd		*-
  9130  001870  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9131  001874  EC17  F016         	call	___ftmul	;wreg free
  9132  001878  C07D  F08F         	movff	?___ftmul,_scale$2962
  9133  00187C  C07E  F090         	movff	?___ftmul+1,_scale$2962+1
  9134  001880  C07F  F091         	movff	?___ftmul+2,_scale$2962+2
  9135                           
  9136                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9137  001884  C08F  F07D         	movff	_scale$2962,___ftmul@f1
  9138  001888  C090  F07E         	movff	_scale$2962+1,___ftmul@f1+1
  9139  00188C  C091  F07F         	movff	_scale$2962+2,___ftmul@f1+2
  9140  001890  0E00               	movlw	0
  9141  001892  0100               	movlb	0	; () banked
  9142  001894  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9143  001896  0E03               	movlw	3
  9144  001898  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9145  00189A  0E00               	movlw	0
  9146  00189C  6E1D               	movwf	___awmod@divisor+1,c
  9147  00189E  0E0A               	movlw	10
  9148  0018A0  6E1C               	movwf	___awmod@divisor,c
  9149  0018A2  0100               	movlb	0	; () banked
  9150  0018A4  5192               	movf	scale@scl& (0+255),w,b
  9151  0018A6  6E1A               	movwf	___awmod@dividend,c
  9152  0018A8  6A1B               	clrf	___awmod@dividend+1,c
  9153  0018AA  BE1A               	btfsc	___awmod@dividend,7,c
  9154  0018AC  061B               	decf	___awmod@dividend+1,f,c
  9155  0018AE  ECD3  F01C         	call	___awmod	;wreg free
  9156  0018B2  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9157  0018B6  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9158  0018BA  EC03  F01F         	call	___wmul	;wreg free
  9159  0018BE  0E24               	movlw	low __npowers_
  9160  0018C0  0100               	movlb	0	; () banked
  9161  0018C2  2579               	addwf	?___wmul& (0+255),w,b
  9162  0018C4  6EF6               	movwf	tblptrl,c
  9163  0018C6  0E7F               	movlw	high __npowers_
  9164  0018C8  0100               	movlb	0	; () banked
  9165  0018CA  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9166  0018CC  6EF7               	movwf	tblptrh,c
  9167  0018CE                     	if	0	;There are less than 3 active tblptr bytes
  9168  0018CE                     	endif
  9169  0018CE  0009               	tblrd		*+
  9170  0018D0  CFF5 F080          	movff	tablat,___ftmul@f2
  9171  0018D4  0009               	tblrd		*+
  9172  0018D6  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9173  0018DA  000A               	tblrd		*-
  9174  0018DC  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9175  0018E0  EC17  F016         	call	___ftmul	;wreg free
  9176  0018E4  C07D  F08C         	movff	?___ftmul,?_scale
  9177  0018E8  C07E  F08D         	movff	?___ftmul+1,?_scale+1
  9178  0018EC  C07F  F08E         	movff	?___ftmul+2,?_scale+2
  9179  0018F0  0012               	return	
  9180  0018F2                     l5458:
  9181                           
  9182                           ;doprnt.c: 432: else if(scl > 10)
  9183  0018F2  0100               	movlb	0	; () banked
  9184  0018F4  5192               	movf	scale@scl& (0+255),w,b
  9185  0018F6  0A80               	xorlw	128
  9186  0018F8  0F75               	addlw	-139
  9187  0018FA  A0D8               	btfss	status,0,c
  9188  0018FC  D05B               	goto	l5464
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9192  0018FE  0E00               	movlw	0
  9193  001900  0100               	movlb	0	; () banked
  9194  001902  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9195  001904  0E0A               	movlw	10
  9196  001906  6F73               	movwf	___awdiv@divisor& (0+255),b
  9197  001908  0100               	movlb	0	; () banked
  9198  00190A  5192               	movf	scale@scl& (0+255),w,b
  9199  00190C  0100               	movlb	0	; () banked
  9200  00190E  6F71               	movwf	___awdiv@dividend& (0+255),b
  9201  001910  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9202  001912  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9203  001914  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9204  001916  EC55  F01A         	call	___awdiv	;wreg free
  9205  00191A  0E09               	movlw	9
  9206  00191C  0100               	movlb	0	; () banked
  9207  00191E  2571               	addwf	?___awdiv& (0+255),w,b
  9208  001920  0100               	movlb	0	; () banked
  9209  001922  6F79               	movwf	___wmul@multiplier& (0+255),b
  9210  001924  0E00               	movlw	0
  9211  001926  0100               	movlb	0	; () banked
  9212  001928  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9213  00192A  0100               	movlb	0	; () banked
  9214  00192C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9215  00192E  0E00               	movlw	0
  9216  001930  0100               	movlb	0	; () banked
  9217  001932  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9218  001934  0E03               	movlw	3
  9219  001936  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9220  001938  EC03  F01F         	call	___wmul	;wreg free
  9221  00193C  0E24               	movlw	low __npowers_
  9222  00193E  0100               	movlb	0	; () banked
  9223  001940  2579               	addwf	?___wmul& (0+255),w,b
  9224  001942  6EF6               	movwf	tblptrl,c
  9225  001944  0E7F               	movlw	high __npowers_
  9226  001946  0100               	movlb	0	; () banked
  9227  001948  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9228  00194A  6EF7               	movwf	tblptrh,c
  9229  00194C                     	if	0	;There are less than 3 active tblptr bytes
  9230  00194C                     	endif
  9231  00194C  0009               	tblrd		*+
  9232  00194E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9233  001952  0009               	tblrd		*+
  9234  001954  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9235  001958  000A               	tblrd		*-
  9236  00195A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9237  00195E  0E00               	movlw	0
  9238  001960  0100               	movlb	0	; () banked
  9239  001962  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9240  001964  0E03               	movlw	3
  9241  001966  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9242  001968  0E00               	movlw	0
  9243  00196A  6E1D               	movwf	___awmod@divisor+1,c
  9244  00196C  0E0A               	movlw	10
  9245  00196E  6E1C               	movwf	___awmod@divisor,c
  9246  001970  0100               	movlb	0	; () banked
  9247  001972  5192               	movf	scale@scl& (0+255),w,b
  9248  001974  6E1A               	movwf	___awmod@dividend,c
  9249  001976  6A1B               	clrf	___awmod@dividend+1,c
  9250  001978  BE1A               	btfsc	___awmod@dividend,7,c
  9251  00197A  061B               	decf	___awmod@dividend+1,f,c
  9252  00197C  ECD3  F01C         	call	___awmod	;wreg free
  9253  001980  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9254  001984  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9255  001988  EC03  F01F         	call	___wmul	;wreg free
  9256  00198C  0E24               	movlw	low __npowers_
  9257  00198E  0100               	movlb	0	; () banked
  9258  001990  2579               	addwf	?___wmul& (0+255),w,b
  9259  001992  6EF6               	movwf	tblptrl,c
  9260  001994  0E7F               	movlw	high __npowers_
  9261  001996  0100               	movlb	0	; () banked
  9262  001998  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9263  00199A  6EF7               	movwf	tblptrh,c
  9264  00199C                     	if	0	;There are less than 3 active tblptr bytes
  9265  00199C                     	endif
  9266  00199C  0009               	tblrd		*+
  9267  00199E  CFF5 F080          	movff	tablat,___ftmul@f2
  9268  0019A2  0009               	tblrd		*+
  9269  0019A4  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9270  0019A8  000A               	tblrd		*-
  9271  0019AA  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9272  0019AE  EC17  F016         	call	___ftmul	;wreg free
  9273  0019B2  D798               	goto	L4
  9274  0019B4                     l5464:
  9275                           
  9276                           ;doprnt.c: 434: return _npowers_[scl];
  9277  0019B4  0100               	movlb	0	; () banked
  9278  0019B6  5192               	movf	scale@scl& (0+255),w,b
  9279  0019B8  0D03               	mullw	3
  9280  0019BA  0E24               	movlw	low __npowers_
  9281  0019BC  24F3               	addwf	prodl,w,c
  9282  0019BE  6EF6               	movwf	tblptrl,c
  9283  0019C0  0E7F               	movlw	high __npowers_
  9284  0019C2  20F4               	addwfc	prodh,w,c
  9285  0019C4  6EF7               	movwf	tblptrh,c
  9286  0019C6                     	if	0	;There are less than 3 active tblptr bytes
  9287  0019C6                     	endif
  9288  0019C6  0009               	tblrd		*+
  9289  0019C8  CFF5 F08C          	movff	tablat,?_scale
  9290  0019CC  0009               	tblrd		*+
  9291  0019CE  CFF5 F08D          	movff	tablat,?_scale+1
  9292  0019D2  000A               	tblrd		*-
  9293  0019D4  CFF5 F08E          	movff	tablat,?_scale+2
  9294                           
  9295                           ; BSR set to: 0
  9296  0019D8  0012               	return	
  9297  0019DA                     l5468:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;doprnt.c: 435: }
  9301                           ;doprnt.c: 436: if(scl>=110)
  9302  0019DA  0100               	movlb	0	; () banked
  9303  0019DC  5192               	movf	scale@scl& (0+255),w,b
  9304  0019DE  0A80               	xorlw	128
  9305  0019E0  0F12               	addlw	-238
  9306  0019E2  A0D8               	btfss	status,0,c
  9307  0019E4  D0A8               	goto	l5476
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9311  0019E6  0E00               	movlw	0
  9312  0019E8  0100               	movlb	0	; () banked
  9313  0019EA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9314  0019EC  0E03               	movlw	3
  9315  0019EE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9316  0019F0  0E00               	movlw	0
  9317  0019F2  0100               	movlb	0	; () banked
  9318  0019F4  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9319  0019F6  0E0A               	movlw	10
  9320  0019F8  6F73               	movwf	___awdiv@divisor& (0+255),b
  9321  0019FA  0E00               	movlw	0
  9322  0019FC  6E1D               	movwf	___awmod@divisor+1,c
  9323  0019FE  0E64               	movlw	100
  9324  001A00  6E1C               	movwf	___awmod@divisor,c
  9325  001A02  0100               	movlb	0	; () banked
  9326  001A04  5192               	movf	scale@scl& (0+255),w,b
  9327  001A06  6E1A               	movwf	___awmod@dividend,c
  9328  001A08  6A1B               	clrf	___awmod@dividend+1,c
  9329  001A0A  BE1A               	btfsc	___awmod@dividend,7,c
  9330  001A0C  061B               	decf	___awmod@dividend+1,f,c
  9331  001A0E  ECD3  F01C         	call	___awmod	;wreg free
  9332  001A12  C01A  F071         	movff	?___awmod,___awdiv@dividend
  9333  001A16  C01B  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9334  001A1A  EC55  F01A         	call	___awdiv	;wreg free
  9335  001A1E  0E09               	movlw	9
  9336  001A20  0100               	movlb	0	; () banked
  9337  001A22  2571               	addwf	?___awdiv& (0+255),w,b
  9338  001A24  0100               	movlb	0	; () banked
  9339  001A26  6F79               	movwf	___wmul@multiplier& (0+255),b
  9340  001A28  0E00               	movlw	0
  9341  001A2A  0100               	movlb	0	; () banked
  9342  001A2C  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9343  001A2E  0100               	movlb	0	; () banked
  9344  001A30  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9345  001A32  EC03  F01F         	call	___wmul	;wreg free
  9346  001A36  0EFD               	movlw	low __powers_
  9347  001A38  0100               	movlb	0	; () banked
  9348  001A3A  2579               	addwf	?___wmul& (0+255),w,b
  9349  001A3C  6EF6               	movwf	tblptrl,c
  9350  001A3E  0E7E               	movlw	high __powers_
  9351  001A40  0100               	movlb	0	; () banked
  9352  001A42  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9353  001A44  6EF7               	movwf	tblptrh,c
  9354  001A46                     	if	0	;There are less than 3 active tblptr bytes
  9355  001A46                     	endif
  9356  001A46  0009               	tblrd		*+
  9357  001A48  CFF5 F080          	movff	tablat,___ftmul@f2
  9358  001A4C  0009               	tblrd		*+
  9359  001A4E  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9360  001A52  000A               	tblrd		*-
  9361  001A54  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9362  001A58  0E00               	movlw	0
  9363  001A5A  0100               	movlb	0	; () banked
  9364  001A5C  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9365  001A5E  0E64               	movlw	100
  9366  001A60  6F73               	movwf	___awdiv@divisor& (0+255),b
  9367  001A62  0100               	movlb	0	; () banked
  9368  001A64  5192               	movf	scale@scl& (0+255),w,b
  9369  001A66  0100               	movlb	0	; () banked
  9370  001A68  6F71               	movwf	___awdiv@dividend& (0+255),b
  9371  001A6A  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9372  001A6C  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9373  001A6E  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9374  001A70  EC55  F01A         	call	___awdiv	;wreg free
  9375  001A74  0E12               	movlw	18
  9376  001A76  0100               	movlb	0	; () banked
  9377  001A78  2571               	addwf	?___awdiv& (0+255),w,b
  9378  001A7A  0100               	movlb	0	; () banked
  9379  001A7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9380  001A7E  0E00               	movlw	0
  9381  001A80  0100               	movlb	0	; () banked
  9382  001A82  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9383  001A84  0100               	movlb	0	; () banked
  9384  001A86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9385  001A88  0E00               	movlw	0
  9386  001A8A  0100               	movlb	0	; () banked
  9387  001A8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9388  001A8E  0E03               	movlw	3
  9389  001A90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9390  001A92  EC03  F01F         	call	___wmul	;wreg free
  9391  001A96  0EFD               	movlw	low __powers_
  9392  001A98  0100               	movlb	0	; () banked
  9393  001A9A  2579               	addwf	?___wmul& (0+255),w,b
  9394  001A9C  6EF6               	movwf	tblptrl,c
  9395  001A9E  0E7E               	movlw	high __powers_
  9396  001AA0  0100               	movlb	0	; () banked
  9397  001AA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9398  001AA4  6EF7               	movwf	tblptrh,c
  9399  001AA6                     	if	0	;There are less than 3 active tblptr bytes
  9400  001AA6                     	endif
  9401  001AA6  0009               	tblrd		*+
  9402  001AA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9403  001AAC  0009               	tblrd		*+
  9404  001AAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9405  001AB2  000A               	tblrd		*-
  9406  001AB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9407  001AB8  EC17  F016         	call	___ftmul	;wreg free
  9408  001ABC  C07D  F08F         	movff	?___ftmul,_scale$2962
  9409  001AC0  C07E  F090         	movff	?___ftmul+1,_scale$2962+1
  9410  001AC4  C07F  F091         	movff	?___ftmul+2,_scale$2962+2
  9411                           
  9412                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9413  001AC8  C08F  F07D         	movff	_scale$2962,___ftmul@f1
  9414  001ACC  C090  F07E         	movff	_scale$2962+1,___ftmul@f1+1
  9415  001AD0  C091  F07F         	movff	_scale$2962+2,___ftmul@f1+2
  9416  001AD4  0E00               	movlw	0
  9417  001AD6  0100               	movlb	0	; () banked
  9418  001AD8  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9419  001ADA  0E03               	movlw	3
  9420  001ADC  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9421  001ADE  0E00               	movlw	0
  9422  001AE0  6E1D               	movwf	___awmod@divisor+1,c
  9423  001AE2  0E0A               	movlw	10
  9424  001AE4  6E1C               	movwf	___awmod@divisor,c
  9425  001AE6  0100               	movlb	0	; () banked
  9426  001AE8  5192               	movf	scale@scl& (0+255),w,b
  9427  001AEA  6E1A               	movwf	___awmod@dividend,c
  9428  001AEC  6A1B               	clrf	___awmod@dividend+1,c
  9429  001AEE  BE1A               	btfsc	___awmod@dividend,7,c
  9430  001AF0  061B               	decf	___awmod@dividend+1,f,c
  9431  001AF2  ECD3  F01C         	call	___awmod	;wreg free
  9432  001AF6  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9433  001AFA  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9434  001AFE  EC03  F01F         	call	___wmul	;wreg free
  9435  001B02  0EFD               	movlw	low __powers_
  9436  001B04  0100               	movlb	0	; () banked
  9437  001B06  2579               	addwf	?___wmul& (0+255),w,b
  9438  001B08  6EF6               	movwf	tblptrl,c
  9439  001B0A  0E7E               	movlw	high __powers_
  9440  001B0C  0100               	movlb	0	; () banked
  9441  001B0E  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9442  001B10  6EF7               	movwf	tblptrh,c
  9443  001B12                     	if	0	;There are less than 3 active tblptr bytes
  9444  001B12                     	endif
  9445  001B12  0009               	tblrd		*+
  9446  001B14  CFF5 F080          	movff	tablat,___ftmul@f2
  9447  001B18  0009               	tblrd		*+
  9448  001B1A  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9449  001B1E  000A               	tblrd		*-
  9450  001B20  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9451  001B24  EC17  F016         	call	___ftmul	;wreg free
  9452  001B28  C07D  F08C         	movff	?___ftmul,?_scale
  9453  001B2C  C07E  F08D         	movff	?___ftmul+1,?_scale+1
  9454  001B30  C07F  F08E         	movff	?___ftmul+2,?_scale+2
  9455  001B34  0012               	return	
  9456  001B36                     l5476:
  9457                           
  9458                           ;doprnt.c: 438: else if(scl > 10)
  9459  001B36  0100               	movlb	0	; () banked
  9460  001B38  5192               	movf	scale@scl& (0+255),w,b
  9461  001B3A  0A80               	xorlw	128
  9462  001B3C  0F75               	addlw	-139
  9463  001B3E  A0D8               	btfss	status,0,c
  9464  001B40  D05B               	goto	l5482
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9468  001B42  0E00               	movlw	0
  9469  001B44  0100               	movlb	0	; () banked
  9470  001B46  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9471  001B48  0E0A               	movlw	10
  9472  001B4A  6F73               	movwf	___awdiv@divisor& (0+255),b
  9473  001B4C  0100               	movlb	0	; () banked
  9474  001B4E  5192               	movf	scale@scl& (0+255),w,b
  9475  001B50  0100               	movlb	0	; () banked
  9476  001B52  6F71               	movwf	___awdiv@dividend& (0+255),b
  9477  001B54  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9478  001B56  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9479  001B58  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9480  001B5A  EC55  F01A         	call	___awdiv	;wreg free
  9481  001B5E  0E09               	movlw	9
  9482  001B60  0100               	movlb	0	; () banked
  9483  001B62  2571               	addwf	?___awdiv& (0+255),w,b
  9484  001B64  0100               	movlb	0	; () banked
  9485  001B66  6F79               	movwf	___wmul@multiplier& (0+255),b
  9486  001B68  0E00               	movlw	0
  9487  001B6A  0100               	movlb	0	; () banked
  9488  001B6C  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9489  001B6E  0100               	movlb	0	; () banked
  9490  001B70  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9491  001B72  0E00               	movlw	0
  9492  001B74  0100               	movlb	0	; () banked
  9493  001B76  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9494  001B78  0E03               	movlw	3
  9495  001B7A  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9496  001B7C  EC03  F01F         	call	___wmul	;wreg free
  9497  001B80  0EFD               	movlw	low __powers_
  9498  001B82  0100               	movlb	0	; () banked
  9499  001B84  2579               	addwf	?___wmul& (0+255),w,b
  9500  001B86  6EF6               	movwf	tblptrl,c
  9501  001B88  0E7E               	movlw	high __powers_
  9502  001B8A  0100               	movlb	0	; () banked
  9503  001B8C  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9504  001B8E  6EF7               	movwf	tblptrh,c
  9505  001B90                     	if	0	;There are less than 3 active tblptr bytes
  9506  001B90                     	endif
  9507  001B90  0009               	tblrd		*+
  9508  001B92  CFF5 F07D          	movff	tablat,___ftmul@f1
  9509  001B96  0009               	tblrd		*+
  9510  001B98  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9511  001B9C  000A               	tblrd		*-
  9512  001B9E  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9513  001BA2  0E00               	movlw	0
  9514  001BA4  0100               	movlb	0	; () banked
  9515  001BA6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9516  001BA8  0E03               	movlw	3
  9517  001BAA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9518  001BAC  0E00               	movlw	0
  9519  001BAE  6E1D               	movwf	___awmod@divisor+1,c
  9520  001BB0  0E0A               	movlw	10
  9521  001BB2  6E1C               	movwf	___awmod@divisor,c
  9522  001BB4  0100               	movlb	0	; () banked
  9523  001BB6  5192               	movf	scale@scl& (0+255),w,b
  9524  001BB8  6E1A               	movwf	___awmod@dividend,c
  9525  001BBA  6A1B               	clrf	___awmod@dividend+1,c
  9526  001BBC  BE1A               	btfsc	___awmod@dividend,7,c
  9527  001BBE  061B               	decf	___awmod@dividend+1,f,c
  9528  001BC0  ECD3  F01C         	call	___awmod	;wreg free
  9529  001BC4  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9530  001BC8  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9531  001BCC  EC03  F01F         	call	___wmul	;wreg free
  9532  001BD0  0EFD               	movlw	low __powers_
  9533  001BD2  0100               	movlb	0	; () banked
  9534  001BD4  2579               	addwf	?___wmul& (0+255),w,b
  9535  001BD6  6EF6               	movwf	tblptrl,c
  9536  001BD8  0E7E               	movlw	high __powers_
  9537  001BDA  0100               	movlb	0	; () banked
  9538  001BDC  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9539  001BDE  6EF7               	movwf	tblptrh,c
  9540  001BE0                     	if	0	;There are less than 3 active tblptr bytes
  9541  001BE0                     	endif
  9542  001BE0  0009               	tblrd		*+
  9543  001BE2  CFF5 F080          	movff	tablat,___ftmul@f2
  9544  001BE6  0009               	tblrd		*+
  9545  001BE8  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9546  001BEC  000A               	tblrd		*-
  9547  001BEE  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9548  001BF2  EC17  F016         	call	___ftmul	;wreg free
  9549  001BF6  D798               	goto	L5
  9550  001BF8                     l5482:
  9551                           
  9552                           ;doprnt.c: 440: return _powers_[scl];
  9553  001BF8  0100               	movlb	0	; () banked
  9554  001BFA  5192               	movf	scale@scl& (0+255),w,b
  9555  001BFC  0D03               	mullw	3
  9556  001BFE  0EFD               	movlw	low __powers_
  9557  001C00  24F3               	addwf	prodl,w,c
  9558  001C02  6EF6               	movwf	tblptrl,c
  9559  001C04  0E7E               	movlw	high __powers_
  9560  001C06  20F4               	addwfc	prodh,w,c
  9561  001C08  6EF7               	movwf	tblptrh,c
  9562  001C0A                     	if	0	;There are less than 3 active tblptr bytes
  9563  001C0A                     	endif
  9564  001C0A  0009               	tblrd		*+
  9565  001C0C  CFF5 F08C          	movff	tablat,?_scale
  9566  001C10  0009               	tblrd		*+
  9567  001C12  CFF5 F08D          	movff	tablat,?_scale+1
  9568  001C16  000A               	tblrd		*-
  9569  001C18  CFF5 F08E          	movff	tablat,?_scale+2
  9570  001C1C  0012               	return	
  9571  001C1E                     __end_of_scale:
  9572                           	opt stack 0
  9573                           tosu	equ	0xFFF
  9574                           tosh	equ	0xFFE
  9575                           tosl	equ	0xFFD
  9576                           pclath	equ	0xFFA
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           indf0	equ	0xFEF
  9585                           postinc0	equ	0xFEE
  9586                           fsr0h	equ	0xFEA
  9587                           fsr0l	equ	0xFE9
  9588                           wreg	equ	0xFE8
  9589                           indf1	equ	0xFE7
  9590                           postdec1	equ	0xFE5
  9591                           fsr1h	equ	0xFE2
  9592                           fsr1l	equ	0xFE1
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function _putch *****************
  9601 ;; Defined at:
  9602 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\putch.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  c               1    wreg     unsigned char 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  c               1    0[COMRAM] unsigned char 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9616 ;;      Params:         0       0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    2
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		__doprnt
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text34
  9631  00404A                     __ptext34:
  9632                           	opt stack 0
  9633  00404A                     _putch:
  9634                           	opt stack 24
  9635                           
  9636                           ;incstack = 0
  9637  00404A  0012               	return		;funcret
  9638  00404C                     __end_of_putch:
  9639                           	opt stack 0
  9640                           tosu	equ	0xFFF
  9641                           tosh	equ	0xFFE
  9642                           tosl	equ	0xFFD
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           indf0	equ	0xFEF
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           indf1	equ	0xFE7
  9657                           postdec1	equ	0xFE5
  9658                           fsr1h	equ	0xFE2
  9659                           fsr1l	equ	0xFE1
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function _isdigit *****************
  9668 ;; Defined at:
  9669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  c               1    wreg     unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  c               1   27[COMRAM] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;		None               void
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         0       0       0       0       0       0       0
  9684 ;;      Locals:         2       0       0       0       0       0       0
  9685 ;;      Temps:          1       0       0       0       0       0       0
  9686 ;;      Totals:         3       0       0       0       0       0       0
  9687 ;;Total ram usage:        3 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    2
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		__doprnt
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text35
  9698  003F5E                     __ptext35:
  9699                           	opt stack 0
  9700  003F5E                     _isdigit:
  9701                           	opt stack 24
  9702                           
  9703                           ;incstack = 0
  9704                           ;isdigit@c stored from wreg
  9705  003F5E  6E1C               	movwf	isdigit@c,c
  9706  003F60  0E00               	movlw	0
  9707  003F62  6E1B               	movwf	_isdigit$2522,c
  9708  003F64  0E3A               	movlw	58
  9709  003F66  601C               	cpfslt	isdigit@c,c
  9710  003F68  D005               	goto	l5494
  9711  003F6A  0E2F               	movlw	47
  9712  003F6C  641C               	cpfsgt	isdigit@c,c
  9713  003F6E  D002               	goto	l5494
  9714  003F70  0E01               	movlw	1
  9715  003F72  6E1B               	movwf	_isdigit$2522,c
  9716  003F74                     l5494:
  9717  003F74  C01B  F01A         	movff	_isdigit$2522,??_isdigit
  9718  003F78  301A               	rrcf	??_isdigit,w,c
  9719  003F7A  0012               	return	
  9720  003F7C                     __end_of_isdigit:
  9721                           	opt stack 0
  9722                           tosu	equ	0xFFF
  9723                           tosh	equ	0xFFE
  9724                           tosl	equ	0xFFD
  9725                           pclath	equ	0xFFA
  9726                           tblptru	equ	0xFF8
  9727                           tblptrh	equ	0xFF7
  9728                           tblptrl	equ	0xFF6
  9729                           tablat	equ	0xFF5
  9730                           prodh	equ	0xFF4
  9731                           prodl	equ	0xFF3
  9732                           intcon	equ	0xFF2
  9733                           indf0	equ	0xFEF
  9734                           postinc0	equ	0xFEE
  9735                           fsr0h	equ	0xFEA
  9736                           fsr0l	equ	0xFE9
  9737                           wreg	equ	0xFE8
  9738                           indf1	equ	0xFE7
  9739                           postdec1	equ	0xFE5
  9740                           fsr1h	equ	0xFE2
  9741                           fsr1l	equ	0xFE1
  9742                           indf2	equ	0xFDF
  9743                           postinc2	equ	0xFDE
  9744                           postdec2	equ	0xFDD
  9745                           fsr2h	equ	0xFDA
  9746                           fsr2l	equ	0xFD9
  9747                           status	equ	0xFD8
  9748                           
  9749 ;; *************** function _fround *****************
  9750 ;; Defined at:
  9751 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;  prec            1    wreg     unsigned char 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  prec            1   53[BANK0 ] unsigned char 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  3   44[BANK0 ] unsigned char 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9765 ;;      Params:         0       3       0       0       0       0       0
  9766 ;;      Locals:         0       7       0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0       0       0
  9768 ;;      Totals:         0      10       0       0       0       0       0
  9769 ;;Total ram usage:       10 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    4
  9772 ;; This function calls:
  9773 ;;		___awdiv
  9774 ;;		___awmod
  9775 ;;		___ftmul
  9776 ;;		___wmul
  9777 ;; This function is called by:
  9778 ;;		__doprnt
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text36
  9783  0022A8                     __ptext36:
  9784                           	opt stack 0
  9785  0022A8                     _fround:
  9786                           	opt stack 22
  9787                           
  9788                           ;incstack = 0
  9789                           ;fround@prec stored from wreg
  9790  0022A8  0100               	movlb	0	; () banked
  9791  0022AA  6F95               	movwf	fround@prec& (0+255),b
  9792                           
  9793                           ;doprnt.c: 413: if(prec>=110)
  9794  0022AC  0E6D               	movlw	109
  9795  0022AE  0100               	movlb	0	; () banked
  9796  0022B0  6595               	cpfsgt	fround@prec& (0+255),b
  9797  0022B2  D0B6               	goto	l5436
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9801  0022B4  0E00               	movlw	0
  9802  0022B6  0100               	movlb	0	; () banked
  9803  0022B8  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9804  0022BA  0E03               	movlw	3
  9805  0022BC  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9806  0022BE  0E00               	movlw	0
  9807  0022C0  0100               	movlb	0	; () banked
  9808  0022C2  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9809  0022C4  0E0A               	movlw	10
  9810  0022C6  6F73               	movwf	___awdiv@divisor& (0+255),b
  9811  0022C8  0E00               	movlw	0
  9812  0022CA  6E1D               	movwf	___awmod@divisor+1,c
  9813  0022CC  0E64               	movlw	100
  9814  0022CE  6E1C               	movwf	___awmod@divisor,c
  9815  0022D0  C095  F01A         	movff	fround@prec,___awmod@dividend
  9816  0022D4  6A1B               	clrf	___awmod@dividend+1,c
  9817  0022D6  ECD3  F01C         	call	___awmod	;wreg free
  9818  0022DA  C01A  F071         	movff	?___awmod,___awdiv@dividend
  9819  0022DE  C01B  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9820  0022E2  EC55  F01A         	call	___awdiv	;wreg free
  9821  0022E6  0E09               	movlw	9
  9822  0022E8  0100               	movlb	0	; () banked
  9823  0022EA  2571               	addwf	?___awdiv& (0+255),w,b
  9824  0022EC  0100               	movlb	0	; () banked
  9825  0022EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  9826  0022F0  0E00               	movlw	0
  9827  0022F2  0100               	movlb	0	; () banked
  9828  0022F4  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9829  0022F6  0100               	movlb	0	; () banked
  9830  0022F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9831  0022FA  EC03  F01F         	call	___wmul	;wreg free
  9832  0022FE  0E24               	movlw	low __npowers_
  9833  002300  0100               	movlb	0	; () banked
  9834  002302  2579               	addwf	?___wmul& (0+255),w,b
  9835  002304  6EF6               	movwf	tblptrl,c
  9836  002306  0E7F               	movlw	high __npowers_
  9837  002308  0100               	movlb	0	; () banked
  9838  00230A  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9839  00230C  6EF7               	movwf	tblptrh,c
  9840  00230E                     	if	0	;There are less than 3 active tblptr bytes
  9841  00230E                     	endif
  9842  00230E  0009               	tblrd		*+
  9843  002310  CFF5 F080          	movff	tablat,___ftmul@f2
  9844  002314  0009               	tblrd		*+
  9845  002316  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9846  00231A  000A               	tblrd		*-
  9847  00231C  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9848  002320  0E00               	movlw	0
  9849  002322  0100               	movlb	0	; () banked
  9850  002324  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9851  002326  0E64               	movlw	100
  9852  002328  6F73               	movwf	___awdiv@divisor& (0+255),b
  9853  00232A  C095  F071         	movff	fround@prec,___awdiv@dividend
  9854  00232E  0100               	movlb	0	; () banked
  9855  002330  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9856  002332  EC55  F01A         	call	___awdiv	;wreg free
  9857  002336  0E12               	movlw	18
  9858  002338  0100               	movlb	0	; () banked
  9859  00233A  2571               	addwf	?___awdiv& (0+255),w,b
  9860  00233C  0100               	movlb	0	; () banked
  9861  00233E  6F79               	movwf	___wmul@multiplier& (0+255),b
  9862  002340  0E00               	movlw	0
  9863  002342  0100               	movlb	0	; () banked
  9864  002344  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9865  002346  0100               	movlb	0	; () banked
  9866  002348  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9867  00234A  0E00               	movlw	0
  9868  00234C  0100               	movlb	0	; () banked
  9869  00234E  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9870  002350  0E03               	movlw	3
  9871  002352  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9872  002354  EC03  F01F         	call	___wmul	;wreg free
  9873  002358  0E24               	movlw	low __npowers_
  9874  00235A  0100               	movlb	0	; () banked
  9875  00235C  2579               	addwf	?___wmul& (0+255),w,b
  9876  00235E  6EF6               	movwf	tblptrl,c
  9877  002360  0E7F               	movlw	high __npowers_
  9878  002362  0100               	movlb	0	; () banked
  9879  002364  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9880  002366  6EF7               	movwf	tblptrh,c
  9881  002368                     	if	0	;There are less than 3 active tblptr bytes
  9882  002368                     	endif
  9883  002368  0009               	tblrd		*+
  9884  00236A  CFF5 F07D          	movff	tablat,___ftmul@f1
  9885  00236E  0009               	tblrd		*+
  9886  002370  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9887  002374  000A               	tblrd		*-
  9888  002376  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9889  00237A  EC17  F016         	call	___ftmul	;wreg free
  9890  00237E  C07D  F092         	movff	?___ftmul,_fround$2960
  9891  002382  C07E  F093         	movff	?___ftmul+1,_fround$2960+1
  9892  002386  C07F  F094         	movff	?___ftmul+2,_fround$2960+2
  9893                           
  9894                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9895  00238A  0E00               	movlw	0
  9896  00238C  0100               	movlb	0	; () banked
  9897  00238E  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9898  002390  0E03               	movlw	3
  9899  002392  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9900  002394  0E00               	movlw	0
  9901  002396  6E1D               	movwf	___awmod@divisor+1,c
  9902  002398  0E0A               	movlw	10
  9903  00239A  6E1C               	movwf	___awmod@divisor,c
  9904  00239C  C095  F01A         	movff	fround@prec,___awmod@dividend
  9905  0023A0  6A1B               	clrf	___awmod@dividend+1,c
  9906  0023A2  ECD3  F01C         	call	___awmod	;wreg free
  9907  0023A6  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9908  0023AA  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9909  0023AE  EC03  F01F         	call	___wmul	;wreg free
  9910  0023B2  0E24               	movlw	low __npowers_
  9911  0023B4  0100               	movlb	0	; () banked
  9912  0023B6  2579               	addwf	?___wmul& (0+255),w,b
  9913  0023B8  6EF6               	movwf	tblptrl,c
  9914  0023BA  0E7F               	movlw	high __npowers_
  9915  0023BC  0100               	movlb	0	; () banked
  9916  0023BE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9917  0023C0  6EF7               	movwf	tblptrh,c
  9918  0023C2                     	if	0	;There are less than 3 active tblptr bytes
  9919  0023C2                     	endif
  9920  0023C2  0009               	tblrd		*+
  9921  0023C4  CFF5 F080          	movff	tablat,___ftmul@f2
  9922  0023C8  0009               	tblrd		*+
  9923  0023CA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9924  0023CE  000A               	tblrd		*-
  9925  0023D0  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9926  0023D4  C092  F07D         	movff	_fround$2960,___ftmul@f1
  9927  0023D8  C093  F07E         	movff	_fround$2960+1,___ftmul@f1+1
  9928  0023DC  C094  F07F         	movff	_fround$2960+2,___ftmul@f1+2
  9929  0023E0  EC17  F016         	call	___ftmul	;wreg free
  9930  0023E4  C07D  F08F         	movff	?___ftmul,_fround$2961
  9931  0023E8  C07E  F090         	movff	?___ftmul+1,_fround$2961+1
  9932  0023EC  C07F  F091         	movff	?___ftmul+2,_fround$2961+2
  9933                           
  9934                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9935  0023F0  C08F  F07D         	movff	_fround$2961,___ftmul@f1
  9936  0023F4  C090  F07E         	movff	_fround$2961+1,___ftmul@f1+1
  9937  0023F8  C091  F07F         	movff	_fround$2961+2,___ftmul@f1+2
  9938  0023FC  0E00               	movlw	0
  9939  0023FE  0100               	movlb	0	; () banked
  9940  002400  6F80               	movwf	___ftmul@f2& (0+255),b
  9941  002402  0E00               	movlw	0
  9942  002404  0100               	movlb	0	; () banked
  9943  002406  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9944  002408  0E3F               	movlw	63
  9945  00240A  0100               	movlb	0	; () banked
  9946  00240C  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9947  00240E  EC17  F016         	call	___ftmul	;wreg free
  9948  002412  C07D  F08C         	movff	?___ftmul,?_fround
  9949  002416  C07E  F08D         	movff	?___ftmul+1,?_fround+1
  9950  00241A  C07F  F08E         	movff	?___ftmul+2,?_fround+2
  9951  00241E  0012               	return	
  9952  002420                     l5436:
  9953                           
  9954                           ;doprnt.c: 415: else if(prec > 10)
  9955  002420  0E0A               	movlw	10
  9956  002422  0100               	movlb	0	; () banked
  9957  002424  6595               	cpfsgt	fround@prec& (0+255),b
  9958  002426  D06C               	goto	l5444
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9962  002428  0E00               	movlw	0
  9963  00242A  0100               	movlb	0	; () banked
  9964  00242C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9965  00242E  0E03               	movlw	3
  9966  002430  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9967  002432  0E00               	movlw	0
  9968  002434  6E1D               	movwf	___awmod@divisor+1,c
  9969  002436  0E0A               	movlw	10
  9970  002438  6E1C               	movwf	___awmod@divisor,c
  9971  00243A  C095  F01A         	movff	fround@prec,___awmod@dividend
  9972  00243E  6A1B               	clrf	___awmod@dividend+1,c
  9973  002440  ECD3  F01C         	call	___awmod	;wreg free
  9974  002444  C01A  F079         	movff	?___awmod,___wmul@multiplier
  9975  002448  C01B  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9976  00244C  EC03  F01F         	call	___wmul	;wreg free
  9977  002450  0E24               	movlw	low __npowers_
  9978  002452  0100               	movlb	0	; () banked
  9979  002454  2579               	addwf	?___wmul& (0+255),w,b
  9980  002456  6EF6               	movwf	tblptrl,c
  9981  002458  0E7F               	movlw	high __npowers_
  9982  00245A  0100               	movlb	0	; () banked
  9983  00245C  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9984  00245E  6EF7               	movwf	tblptrh,c
  9985  002460                     	if	0	;There are less than 3 active tblptr bytes
  9986  002460                     	endif
  9987  002460  0009               	tblrd		*+
  9988  002462  CFF5 F080          	movff	tablat,___ftmul@f2
  9989  002466  0009               	tblrd		*+
  9990  002468  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9991  00246C  000A               	tblrd		*-
  9992  00246E  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9993  002472  0E00               	movlw	0
  9994  002474  0100               	movlb	0	; () banked
  9995  002476  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9996  002478  0E0A               	movlw	10
  9997  00247A  6F73               	movwf	___awdiv@divisor& (0+255),b
  9998  00247C  C095  F071         	movff	fround@prec,___awdiv@dividend
  9999  002480  0100               	movlb	0	; () banked
 10000  002482  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
 10001  002484  EC55  F01A         	call	___awdiv	;wreg free
 10002  002488  0E09               	movlw	9
 10003  00248A  0100               	movlb	0	; () banked
 10004  00248C  2571               	addwf	?___awdiv& (0+255),w,b
 10005  00248E  0100               	movlb	0	; () banked
 10006  002490  6F79               	movwf	___wmul@multiplier& (0+255),b
 10007  002492  0E00               	movlw	0
 10008  002494  0100               	movlb	0	; () banked
 10009  002496  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
 10010  002498  0100               	movlb	0	; () banked
 10011  00249A  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
 10012  00249C  0E00               	movlw	0
 10013  00249E  0100               	movlb	0	; () banked
 10014  0024A0  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10015  0024A2  0E03               	movlw	3
 10016  0024A4  6F7B               	movwf	___wmul@multiplicand& (0+255),b
 10017  0024A6  EC03  F01F         	call	___wmul	;wreg free
 10018  0024AA  0E24               	movlw	low __npowers_
 10019  0024AC  0100               	movlb	0	; () banked
 10020  0024AE  2579               	addwf	?___wmul& (0+255),w,b
 10021  0024B0  6EF6               	movwf	tblptrl,c
 10022  0024B2  0E7F               	movlw	high __npowers_
 10023  0024B4  0100               	movlb	0	; () banked
 10024  0024B6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
 10025  0024B8  6EF7               	movwf	tblptrh,c
 10026  0024BA                     	if	0	;There are less than 3 active tblptr bytes
 10027  0024BA                     	endif
 10028  0024BA  0009               	tblrd		*+
 10029  0024BC  CFF5 F07D          	movff	tablat,___ftmul@f1
 10030  0024C0  0009               	tblrd		*+
 10031  0024C2  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 10032  0024C6  000A               	tblrd		*-
 10033  0024C8  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 10034  0024CC  EC17  F016         	call	___ftmul	;wreg free
 10035  0024D0  C07D  F092         	movff	?___ftmul,_fround$2960
 10036  0024D4  C07E  F093         	movff	?___ftmul+1,_fround$2960+1
 10037  0024D8  C07F  F094         	movff	?___ftmul+2,_fround$2960+2
 10038                           
 10039                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10040  0024DC  C092  F07D         	movff	_fround$2960,___ftmul@f1
 10041  0024E0  C093  F07E         	movff	_fround$2960+1,___ftmul@f1+1
 10042  0024E4  C094  F07F         	movff	_fround$2960+2,___ftmul@f1+2
 10043  0024E8  0E00               	movlw	0
 10044  0024EA  0100               	movlb	0	; () banked
 10045  0024EC  6F80               	movwf	___ftmul@f2& (0+255),b
 10046  0024EE  0E00               	movlw	0
 10047  0024F0  0100               	movlb	0	; () banked
 10048  0024F2  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 10049  0024F4  0E3F               	movlw	63
 10050  0024F6  0100               	movlb	0	; () banked
 10051  0024F8  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 10052  0024FA  EC17  F016         	call	___ftmul	;wreg free
 10053  0024FE  D789               	goto	L6
 10054  002500                     l5444:
 10055                           
 10056                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10057  002500  0100               	movlb	0	; () banked
 10058  002502  5195               	movf	fround@prec& (0+255),w,b
 10059  002504  0D03               	mullw	3
 10060  002506  0E24               	movlw	low __npowers_
 10061  002508  24F3               	addwf	prodl,w,c
 10062  00250A  6EF6               	movwf	tblptrl,c
 10063  00250C  0E7F               	movlw	high __npowers_
 10064  00250E  20F4               	addwfc	prodh,w,c
 10065  002510  6EF7               	movwf	tblptrh,c
 10066  002512                     	if	0	;There are less than 3 active tblptr bytes
 10067  002512                     	endif
 10068  002512  0009               	tblrd		*+
 10069  002514  CFF5 F07D          	movff	tablat,___ftmul@f1
 10070  002518  0009               	tblrd		*+
 10071  00251A  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 10072  00251E  000A               	tblrd		*-
 10073  002520  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 10074  002524  0E00               	movlw	0
 10075  002526  0100               	movlb	0	; () banked
 10076  002528  6F80               	movwf	___ftmul@f2& (0+255),b
 10077  00252A  0E00               	movlw	0
 10078  00252C  0100               	movlb	0	; () banked
 10079  00252E  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 10080  002530  0E3F               	movlw	63
 10081  002532  0100               	movlb	0	; () banked
 10082  002534  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 10083  002536  EC17  F016         	call	___ftmul	;wreg free
 10084  00253A  C07D  F08C         	movff	?___ftmul,?_fround
 10085  00253E  C07E  F08D         	movff	?___ftmul+1,?_fround+1
 10086  002542  C07F  F08E         	movff	?___ftmul+2,?_fround+2
 10087  002546  0012               	return	
 10088  002548                     __end_of_fround:
 10089                           	opt stack 0
 10090                           tosu	equ	0xFFF
 10091                           tosh	equ	0xFFE
 10092                           tosl	equ	0xFFD
 10093                           pclath	equ	0xFFA
 10094                           tblptru	equ	0xFF8
 10095                           tblptrh	equ	0xFF7
 10096                           tblptrl	equ	0xFF6
 10097                           tablat	equ	0xFF5
 10098                           prodh	equ	0xFF4
 10099                           prodl	equ	0xFF3
 10100                           intcon	equ	0xFF2
 10101                           indf0	equ	0xFEF
 10102                           postinc0	equ	0xFEE
 10103                           fsr0h	equ	0xFEA
 10104                           fsr0l	equ	0xFE9
 10105                           wreg	equ	0xFE8
 10106                           indf1	equ	0xFE7
 10107                           postdec1	equ	0xFE5
 10108                           fsr1h	equ	0xFE2
 10109                           fsr1l	equ	0xFE1
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           postdec2	equ	0xFDD
 10113                           fsr2h	equ	0xFDA
 10114                           fsr2l	equ	0xFD9
 10115                           status	equ	0xFD8
 10116                           
 10117 ;; *************** function ___wmul *****************
 10118 ;; Defined at:
 10119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  multiplier      2   25[BANK0 ] unsigned int 
 10122 ;;  multiplicand    2   27[BANK0 ] unsigned int 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  product         2   31[COMRAM] unsigned int 
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  2   25[BANK0 ] unsigned int 
 10127 ;; Registers used:
 10128 ;;		wreg, status,2, status,0, prodl, prodh
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10134 ;;      Params:         0       4       0       0       0       0       0
 10135 ;;      Locals:         2       0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0
 10137 ;;      Totals:         2       4       0       0       0       0       0
 10138 ;;Total ram usage:        6 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    2
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_fround
 10145 ;;		_scale
 10146 ;;		__doprnt
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text37
 10151  003E06                     __ptext37:
 10152                           	opt stack 0
 10153  003E06                     ___wmul:
 10154                           	opt stack 23
 10155                           
 10156                           ;incstack = 0
 10157  003E06  0100               	movlb	0	; () banked
 10158  003E08  5179               	movf	___wmul@multiplier& (0+255),w,b
 10159  003E0A  0100               	movlb	0	; () banked
 10160  003E0C  037B               	mulwf	___wmul@multiplicand& (0+255),b
 10161  003E0E  CFF3 F020          	movff	prodl,___wmul@product
 10162  003E12  CFF4 F021          	movff	prodh,___wmul@product+1
 10163  003E16  0100               	movlb	0	; () banked
 10164  003E18  5179               	movf	___wmul@multiplier& (0+255),w,b
 10165  003E1A  0100               	movlb	0	; () banked
 10166  003E1C  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10167  003E1E  50F3               	movf	prodl,w,c
 10168  003E20  2621               	addwf	___wmul@product+1,f,c
 10169  003E22  0100               	movlb	0	; () banked
 10170  003E24  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10171  003E26  0100               	movlb	0	; () banked
 10172  003E28  037B               	mulwf	___wmul@multiplicand& (0+255),b
 10173  003E2A  50F3               	movf	prodl,w,c
 10174  003E2C  2621               	addwf	___wmul@product+1,f,c
 10175                           
 10176                           ; BSR set to: 0
 10177  003E2E  C020  F079         	movff	___wmul@product,?___wmul
 10178  003E32  C021  F07A         	movff	___wmul@product+1,?___wmul+1
 10179  003E36  0012               	return	
 10180  003E38                     __end_of___wmul:
 10181                           	opt stack 0
 10182                           tosu	equ	0xFFF
 10183                           tosh	equ	0xFFE
 10184                           tosl	equ	0xFFD
 10185                           pclath	equ	0xFFA
 10186                           tblptru	equ	0xFF8
 10187                           tblptrh	equ	0xFF7
 10188                           tblptrl	equ	0xFF6
 10189                           tablat	equ	0xFF5
 10190                           prodh	equ	0xFF4
 10191                           prodl	equ	0xFF3
 10192                           intcon	equ	0xFF2
 10193                           indf0	equ	0xFEF
 10194                           postinc0	equ	0xFEE
 10195                           fsr0h	equ	0xFEA
 10196                           fsr0l	equ	0xFE9
 10197                           wreg	equ	0xFE8
 10198                           indf1	equ	0xFE7
 10199                           postdec1	equ	0xFE5
 10200                           fsr1h	equ	0xFE2
 10201                           fsr1l	equ	0xFE1
 10202                           indf2	equ	0xFDF
 10203                           postinc2	equ	0xFDE
 10204                           postdec2	equ	0xFDD
 10205                           fsr2h	equ	0xFDA
 10206                           fsr2l	equ	0xFD9
 10207                           status	equ	0xFD8
 10208                           
 10209 ;; *************** function ___ftmul *****************
 10210 ;; Defined at:
 10211 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  f1              3   29[BANK0 ] float 
 10214 ;;  f2              3   32[BANK0 ] float 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
 10217 ;;  sign            1   43[BANK0 ] unsigned char 
 10218 ;;  cntr            1   42[BANK0 ] unsigned char 
 10219 ;;  exp             1   38[BANK0 ] unsigned char 
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  3   29[BANK0 ] float 
 10222 ;; Registers used:
 10223 ;;		wreg, status,2, status,0, cstack
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10229 ;;      Params:         0       6       0       0       0       0       0
 10230 ;;      Locals:         0       6       0       0       0       0       0
 10231 ;;      Temps:          0       3       0       0       0       0       0
 10232 ;;      Totals:         0      15       0       0       0       0       0
 10233 ;;Total ram usage:       15 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    3
 10236 ;; This function calls:
 10237 ;;		___ftpack
 10238 ;; This function is called by:
 10239 ;;		_util_getBatteryVoltage
 10240 ;;		_util_getSolarCurrent
 10241 ;;		_util_getBatteryCurrent
 10242 ;;		_util_getTemperature
 10243 ;;		_fround
 10244 ;;		_scale
 10245 ;;		__doprnt
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text38
 10250  002C2E                     __ptext38:
 10251                           	opt stack 0
 10252  002C2E                     ___ftmul:
 10253                           	opt stack 25
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;incstack = 0
 10257  002C2E  C07F  F083         	movff	___ftmul@f1+2,??___ftmul
 10258  002C32  0100               	movlb	0	; () banked
 10259  002C34  6B84               	clrf	(??___ftmul+1)& (0+255),b
 10260  002C36  6B85               	clrf	(??___ftmul+2)& (0+255),b
 10261  002C38  0100               	movlb	0	; () banked
 10262  002C3A  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10263  002C3C  0100               	movlb	0	; () banked
 10264  002C3E  3783               	rlcf	??___ftmul& (0+255),f,b
 10265  002C40  E301               	bnc	u5711
 10266  002C42  8184               	bsf	(??___ftmul+1)& (0+255),0,b
 10267  002C44                     u5711:
 10268  002C44  0100               	movlb	0	; () banked
 10269  002C46  5183               	movf	??___ftmul& (0+255),w,b
 10270  002C48  0100               	movlb	0	; () banked
 10271  002C4A  6F86               	movwf	___ftmul@exp& (0+255),b
 10272  002C4C  0100               	movlb	0	; () banked
 10273  002C4E  5186               	movf	___ftmul@exp& (0+255),w,b
 10274  002C50  A4D8               	btfss	status,2,c
 10275  002C52  D00A               	goto	l5272
 10276                           
 10277                           ; BSR set to: 0
 10278  002C54  0E00               	movlw	0
 10279  002C56  0100               	movlb	0	; () banked
 10280  002C58  6F7D               	movwf	?___ftmul& (0+255),b
 10281  002C5A  0E00               	movlw	0
 10282  002C5C  0100               	movlb	0	; () banked
 10283  002C5E  6F7E               	movwf	(?___ftmul+1)& (0+255),b
 10284  002C60  0E00               	movlw	0
 10285  002C62  0100               	movlb	0	; () banked
 10286  002C64  6F7F               	movwf	(?___ftmul+2)& (0+255),b
 10287                           
 10288                           ; BSR set to: 0
 10289  002C66  0012               	return	
 10290  002C68                     l5272:
 10291                           
 10292                           ; BSR set to: 0
 10293  002C68  C082  F083         	movff	___ftmul@f2+2,??___ftmul
 10294  002C6C  0100               	movlb	0	; () banked
 10295  002C6E  6B84               	clrf	(??___ftmul+1)& (0+255),b
 10296  002C70  6B85               	clrf	(??___ftmul+2)& (0+255),b
 10297  002C72  0100               	movlb	0	; () banked
 10298  002C74  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10299  002C76  0100               	movlb	0	; () banked
 10300  002C78  3783               	rlcf	??___ftmul& (0+255),f,b
 10301  002C7A  E301               	bnc	u5731
 10302  002C7C  8184               	bsf	(??___ftmul+1)& (0+255),0,b
 10303  002C7E                     u5731:
 10304  002C7E  0100               	movlb	0	; () banked
 10305  002C80  5183               	movf	??___ftmul& (0+255),w,b
 10306  002C82  0100               	movlb	0	; () banked
 10307  002C84  6F8B               	movwf	___ftmul@sign& (0+255),b
 10308  002C86  0100               	movlb	0	; () banked
 10309  002C88  518B               	movf	___ftmul@sign& (0+255),w,b
 10310  002C8A  A4D8               	btfss	status,2,c
 10311  002C8C  D00A               	goto	l5278
 10312                           
 10313                           ; BSR set to: 0
 10314  002C8E  0E00               	movlw	0
 10315  002C90  0100               	movlb	0	; () banked
 10316  002C92  6F7D               	movwf	?___ftmul& (0+255),b
 10317  002C94  0E00               	movlw	0
 10318  002C96  0100               	movlb	0	; () banked
 10319  002C98  6F7E               	movwf	(?___ftmul+1)& (0+255),b
 10320  002C9A  0E00               	movlw	0
 10321  002C9C  0100               	movlb	0	; () banked
 10322  002C9E  6F7F               	movwf	(?___ftmul+2)& (0+255),b
 10323                           
 10324                           ; BSR set to: 0
 10325  002CA0  0012               	return	
 10326  002CA2                     l5278:
 10327                           
 10328                           ; BSR set to: 0
 10329  002CA2  0100               	movlb	0	; () banked
 10330  002CA4  518B               	movf	___ftmul@sign& (0+255),w,b
 10331  002CA6  0F7B               	addlw	123
 10332  002CA8  0100               	movlb	0	; () banked
 10333  002CAA  2786               	addwf	___ftmul@exp& (0+255),f,b
 10334                           
 10335                           ; BSR set to: 0
 10336  002CAC  C07F  F08B         	movff	___ftmul@f1+2,___ftmul@sign
 10337  002CB0  0100               	movlb	0	; () banked
 10338  002CB2  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 10339  002CB4  0100               	movlb	0	; () banked
 10340  002CB6  1B8B               	xorwf	___ftmul@sign& (0+255),f,b
 10341  002CB8  0E80               	movlw	128
 10342  002CBA  0100               	movlb	0	; () banked
 10343  002CBC  178B               	andwf	___ftmul@sign& (0+255),f,b
 10344                           
 10345                           ; BSR set to: 0
 10346  002CBE  0100               	movlb	0	; () banked
 10347  002CC0  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10348                           
 10349                           ; BSR set to: 0
 10350  002CC2  0100               	movlb	0	; () banked
 10351  002CC4  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10352                           
 10353                           ; BSR set to: 0
 10354  002CC6  0EFF               	movlw	255
 10355  002CC8  0100               	movlb	0	; () banked
 10356  002CCA  1780               	andwf	___ftmul@f2& (0+255),f,b
 10357  002CCC  0EFF               	movlw	255
 10358  002CCE  0100               	movlb	0	; () banked
 10359  002CD0  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10360  002CD2  0E00               	movlw	0
 10361  002CD4  0100               	movlb	0	; () banked
 10362  002CD6  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10363                           
 10364                           ; BSR set to: 0
 10365  002CD8  0E00               	movlw	0
 10366  002CDA  0100               	movlb	0	; () banked
 10367  002CDC  6F87               	movwf	___ftmul@f3_as_product& (0+255),b
 10368  002CDE  0E00               	movlw	0
 10369  002CE0  0100               	movlb	0	; () banked
 10370  002CE2  6F88               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10371  002CE4  0E00               	movlw	0
 10372  002CE6  0100               	movlb	0	; () banked
 10373  002CE8  6F89               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10374                           
 10375                           ; BSR set to: 0
 10376  002CEA  0E07               	movlw	7
 10377  002CEC  0100               	movlb	0	; () banked
 10378  002CEE  6F8A               	movwf	___ftmul@cntr& (0+255),b
 10379  002CF0                     l5292:
 10380                           
 10381                           ; BSR set to: 0
 10382  002CF0  0100               	movlb	0	; () banked
 10383  002CF2  A17D               	btfss	___ftmul@f1& (0+255),0,b
 10384  002CF4  D00C               	goto	l5296
 10385                           
 10386                           ; BSR set to: 0
 10387  002CF6  0100               	movlb	0	; () banked
 10388  002CF8  5180               	movf	___ftmul@f2& (0+255),w,b
 10389  002CFA  0100               	movlb	0	; () banked
 10390  002CFC  2787               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10391  002CFE  0100               	movlb	0	; () banked
 10392  002D00  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
 10393  002D02  0100               	movlb	0	; () banked
 10394  002D04  2388               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10395  002D06  0100               	movlb	0	; () banked
 10396  002D08  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 10397  002D0A  0100               	movlb	0	; () banked
 10398  002D0C  2389               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10399  002D0E                     l5296:
 10400                           
 10401                           ; BSR set to: 0
 10402  002D0E  0100               	movlb	0	; () banked
 10403  002D10  90D8               	bcf	status,0,c
 10404  002D12  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10405  002D14  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10406  002D16  337D               	rrcf	___ftmul@f1& (0+255),f,b
 10407  002D18  0100               	movlb	0	; () banked
 10408  002D1A  90D8               	bcf	status,0,c
 10409  002D1C  3780               	rlcf	___ftmul@f2& (0+255),f,b
 10410  002D1E  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10411  002D20  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10412                           
 10413                           ; BSR set to: 0
 10414  002D22  0100               	movlb	0	; () banked
 10415  002D24  2F8A               	decfsz	___ftmul@cntr& (0+255),f,b
 10416  002D26  D7E4               	goto	l5292
 10417                           
 10418                           ; BSR set to: 0
 10419                           
 10420                           ; BSR set to: 0
 10421  002D28  0E09               	movlw	9
 10422  002D2A  0100               	movlb	0	; () banked
 10423  002D2C  6F8A               	movwf	___ftmul@cntr& (0+255),b
 10424  002D2E                     l5302:
 10425                           
 10426                           ; BSR set to: 0
 10427  002D2E  0100               	movlb	0	; () banked
 10428  002D30  A17D               	btfss	___ftmul@f1& (0+255),0,b
 10429  002D32  D00C               	goto	l5306
 10430                           
 10431                           ; BSR set to: 0
 10432  002D34  0100               	movlb	0	; () banked
 10433  002D36  5180               	movf	___ftmul@f2& (0+255),w,b
 10434  002D38  0100               	movlb	0	; () banked
 10435  002D3A  2787               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10436  002D3C  0100               	movlb	0	; () banked
 10437  002D3E  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
 10438  002D40  0100               	movlb	0	; () banked
 10439  002D42  2388               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10440  002D44  0100               	movlb	0	; () banked
 10441  002D46  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 10442  002D48  0100               	movlb	0	; () banked
 10443  002D4A  2389               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10444  002D4C                     l5306:
 10445                           
 10446                           ; BSR set to: 0
 10447  002D4C  0100               	movlb	0	; () banked
 10448  002D4E  90D8               	bcf	status,0,c
 10449  002D50  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10450  002D52  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10451  002D54  337D               	rrcf	___ftmul@f1& (0+255),f,b
 10452  002D56  0100               	movlb	0	; () banked
 10453  002D58  90D8               	bcf	status,0,c
 10454  002D5A  3389               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10455  002D5C  3388               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10456  002D5E  3387               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10457                           
 10458                           ; BSR set to: 0
 10459  002D60  0100               	movlb	0	; () banked
 10460  002D62  2F8A               	decfsz	___ftmul@cntr& (0+255),f,b
 10461  002D64  D7E4               	goto	l5302
 10462                           
 10463                           ; BSR set to: 0
 10464                           
 10465                           ; BSR set to: 0
 10466  002D66  C087  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
 10467  002D6A  C088  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10468  002D6E  C089  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10469  002D72  C086  F01D         	movff	___ftmul@exp,___ftpack@exp
 10470  002D76  C08B  F01E         	movff	___ftmul@sign,___ftpack@sign
 10471  002D7A  EC12  F01B         	call	___ftpack	;wreg free
 10472  002D7E  C01A  F07D         	movff	?___ftpack,?___ftmul
 10473  002D82  C01B  F07E         	movff	?___ftpack+1,?___ftmul+1
 10474  002D86  C01C  F07F         	movff	?___ftpack+2,?___ftmul+2
 10475  002D8A  0012               	return	
 10476  002D8C                     __end_of___ftmul:
 10477                           	opt stack 0
 10478                           tosu	equ	0xFFF
 10479                           tosh	equ	0xFFE
 10480                           tosl	equ	0xFFD
 10481                           pclath	equ	0xFFA
 10482                           tblptru	equ	0xFF8
 10483                           tblptrh	equ	0xFF7
 10484                           tblptrl	equ	0xFF6
 10485                           tablat	equ	0xFF5
 10486                           prodh	equ	0xFF4
 10487                           prodl	equ	0xFF3
 10488                           intcon	equ	0xFF2
 10489                           indf0	equ	0xFEF
 10490                           postinc0	equ	0xFEE
 10491                           fsr0h	equ	0xFEA
 10492                           fsr0l	equ	0xFE9
 10493                           wreg	equ	0xFE8
 10494                           indf1	equ	0xFE7
 10495                           postdec1	equ	0xFE5
 10496                           fsr1h	equ	0xFE2
 10497                           fsr1l	equ	0xFE1
 10498                           indf2	equ	0xFDF
 10499                           postinc2	equ	0xFDE
 10500                           postdec2	equ	0xFDD
 10501                           fsr2h	equ	0xFDA
 10502                           fsr2l	equ	0xFD9
 10503                           status	equ	0xFD8
 10504                           
 10505 ;; *************** function ___awmod *****************
 10506 ;; Defined at:
 10507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  dividend        2   25[COMRAM] int 
 10510 ;;  divisor         2   27[COMRAM] int 
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  sign            1   30[COMRAM] unsigned char 
 10513 ;;  counter         1   29[COMRAM] unsigned char 
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  2   25[COMRAM] int 
 10516 ;; Registers used:
 10517 ;;		wreg, status,2, status,0
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10523 ;;      Params:         4       0       0       0       0       0       0
 10524 ;;      Locals:         2       0       0       0       0       0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0
 10526 ;;      Totals:         6       0       0       0       0       0       0
 10527 ;;Total ram usage:        6 bytes
 10528 ;; Hardware stack levels used:    1
 10529 ;; Hardware stack levels required when called:    2
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_fround
 10534 ;;		_scale
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text39
 10539  0039A6                     __ptext39:
 10540                           	opt stack 0
 10541  0039A6                     ___awmod:
 10542                           	opt stack 23
 10543                           
 10544                           ;incstack = 0
 10545  0039A6  0E00               	movlw	0
 10546  0039A8  6E1F               	movwf	___awmod@sign,c
 10547  0039AA  AE1B               	btfss	___awmod@dividend+1,7,c
 10548  0039AC  D006               	goto	l5366
 10549  0039AE  6C1A               	negf	___awmod@dividend,c
 10550  0039B0  1E1B               	comf	___awmod@dividend+1,f,c
 10551  0039B2  B0D8               	btfsc	status,0,c
 10552  0039B4  2A1B               	incf	___awmod@dividend+1,f,c
 10553  0039B6  0E01               	movlw	1
 10554  0039B8  6E1F               	movwf	___awmod@sign,c
 10555  0039BA                     l5366:
 10556  0039BA  AE1D               	btfss	___awmod@divisor+1,7,c
 10557  0039BC  D004               	goto	l5370
 10558  0039BE  6C1C               	negf	___awmod@divisor,c
 10559  0039C0  1E1D               	comf	___awmod@divisor+1,f,c
 10560  0039C2  B0D8               	btfsc	status,0,c
 10561  0039C4  2A1D               	incf	___awmod@divisor+1,f,c
 10562  0039C6                     l5370:
 10563  0039C6  501C               	movf	___awmod@divisor,w,c
 10564  0039C8  101D               	iorwf	___awmod@divisor+1,w,c
 10565  0039CA  B4D8               	btfsc	status,2,c
 10566  0039CC  D018               	goto	l5386
 10567  0039CE  0E01               	movlw	1
 10568  0039D0  6E1E               	movwf	___awmod@counter,c
 10569  0039D2  D004               	goto	l5376
 10570  0039D4                     l5374:
 10571  0039D4  90D8               	bcf	status,0,c
 10572  0039D6  361C               	rlcf	___awmod@divisor,f,c
 10573  0039D8  361D               	rlcf	___awmod@divisor+1,f,c
 10574  0039DA  2A1E               	incf	___awmod@counter,f,c
 10575  0039DC                     l5376:
 10576  0039DC  AE1D               	btfss	___awmod@divisor+1,7,c
 10577  0039DE  D7FA               	goto	l5374
 10578  0039E0                     l5378:
 10579  0039E0  501C               	movf	___awmod@divisor,w,c
 10580  0039E2  5C1A               	subwf	___awmod@dividend,w,c
 10581  0039E4  501D               	movf	___awmod@divisor+1,w,c
 10582  0039E6  581B               	subwfb	___awmod@dividend+1,w,c
 10583  0039E8  A0D8               	btfss	status,0,c
 10584  0039EA  D004               	goto	l5382
 10585  0039EC  501C               	movf	___awmod@divisor,w,c
 10586  0039EE  5E1A               	subwf	___awmod@dividend,f,c
 10587  0039F0  501D               	movf	___awmod@divisor+1,w,c
 10588  0039F2  5A1B               	subwfb	___awmod@dividend+1,f,c
 10589  0039F4                     l5382:
 10590  0039F4  90D8               	bcf	status,0,c
 10591  0039F6  321D               	rrcf	___awmod@divisor+1,f,c
 10592  0039F8  321C               	rrcf	___awmod@divisor,f,c
 10593  0039FA  2E1E               	decfsz	___awmod@counter,f,c
 10594  0039FC  D7F1               	goto	l5378
 10595  0039FE                     l5386:
 10596  0039FE  501F               	movf	___awmod@sign,w,c
 10597  003A00  B4D8               	btfsc	status,2,c
 10598  003A02  D004               	goto	l5390
 10599  003A04  6C1A               	negf	___awmod@dividend,c
 10600  003A06  1E1B               	comf	___awmod@dividend+1,f,c
 10601  003A08  B0D8               	btfsc	status,0,c
 10602  003A0A  2A1B               	incf	___awmod@dividend+1,f,c
 10603  003A0C                     l5390:
 10604  003A0C  C01A  F01A         	movff	___awmod@dividend,?___awmod
 10605  003A10  C01B  F01B         	movff	___awmod@dividend+1,?___awmod+1
 10606  003A14  0012               	return	
 10607  003A16                     __end_of___awmod:
 10608                           	opt stack 0
 10609                           tosu	equ	0xFFF
 10610                           tosh	equ	0xFFE
 10611                           tosl	equ	0xFFD
 10612                           pclath	equ	0xFFA
 10613                           tblptru	equ	0xFF8
 10614                           tblptrh	equ	0xFF7
 10615                           tblptrl	equ	0xFF6
 10616                           tablat	equ	0xFF5
 10617                           prodh	equ	0xFF4
 10618                           prodl	equ	0xFF3
 10619                           intcon	equ	0xFF2
 10620                           indf0	equ	0xFEF
 10621                           postinc0	equ	0xFEE
 10622                           fsr0h	equ	0xFEA
 10623                           fsr0l	equ	0xFE9
 10624                           wreg	equ	0xFE8
 10625                           indf1	equ	0xFE7
 10626                           postdec1	equ	0xFE5
 10627                           fsr1h	equ	0xFE2
 10628                           fsr1l	equ	0xFE1
 10629                           indf2	equ	0xFDF
 10630                           postinc2	equ	0xFDE
 10631                           postdec2	equ	0xFDD
 10632                           fsr2h	equ	0xFDA
 10633                           fsr2l	equ	0xFD9
 10634                           status	equ	0xFD8
 10635                           
 10636 ;; *************** function ___awdiv *****************
 10637 ;; Defined at:
 10638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  dividend        2   17[BANK0 ] int 
 10641 ;;  divisor         2   19[BANK0 ] int 
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;  quotient        2   23[BANK0 ] int 
 10644 ;;  sign            1   22[BANK0 ] unsigned char 
 10645 ;;  counter         1   21[BANK0 ] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2   17[BANK0 ] int 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10655 ;;      Params:         0       4       0       0       0       0       0
 10656 ;;      Locals:         0       4       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0
 10658 ;;      Totals:         0       8       0       0       0       0       0
 10659 ;;Total ram usage:        8 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    2
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_fround
 10666 ;;		_scale
 10667 ;;		__doprnt
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text40
 10672  0034AA                     __ptext40:
 10673                           	opt stack 0
 10674  0034AA                     ___awdiv:
 10675                           	opt stack 23
 10676                           
 10677                           ;incstack = 0
 10678  0034AA  0E00               	movlw	0
 10679  0034AC  0100               	movlb	0	; () banked
 10680  0034AE  6F76               	movwf	___awdiv@sign& (0+255),b
 10681                           
 10682                           ; BSR set to: 0
 10683  0034B0  0100               	movlb	0	; () banked
 10684  0034B2  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10685  0034B4  D008               	goto	l5322
 10686                           
 10687                           ; BSR set to: 0
 10688  0034B6  0100               	movlb	0	; () banked
 10689  0034B8  6D73               	negf	___awdiv@divisor& (0+255),b
 10690  0034BA  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10691  0034BC  B0D8               	btfsc	status,0,c
 10692  0034BE  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10693                           
 10694                           ; BSR set to: 0
 10695  0034C0  0E01               	movlw	1
 10696  0034C2  0100               	movlb	0	; () banked
 10697  0034C4  6F76               	movwf	___awdiv@sign& (0+255),b
 10698  0034C6                     l5322:
 10699                           
 10700                           ; BSR set to: 0
 10701  0034C6  0100               	movlb	0	; () banked
 10702  0034C8  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10703  0034CA  D008               	goto	l5328
 10704                           
 10705                           ; BSR set to: 0
 10706  0034CC  0100               	movlb	0	; () banked
 10707  0034CE  6D71               	negf	___awdiv@dividend& (0+255),b
 10708  0034D0  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10709  0034D2  B0D8               	btfsc	status,0,c
 10710  0034D4  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10711                           
 10712                           ; BSR set to: 0
 10713  0034D6  0E01               	movlw	1
 10714  0034D8  0100               	movlb	0	; () banked
 10715  0034DA  1B76               	xorwf	___awdiv@sign& (0+255),f,b
 10716  0034DC                     l5328:
 10717                           
 10718                           ; BSR set to: 0
 10719  0034DC  0E00               	movlw	0
 10720  0034DE  0100               	movlb	0	; () banked
 10721  0034E0  6F78               	movwf	(___awdiv@quotient+1)& (0+255),b
 10722  0034E2  0E00               	movlw	0
 10723  0034E4  6F77               	movwf	___awdiv@quotient& (0+255),b
 10724                           
 10725                           ; BSR set to: 0
 10726  0034E6  0100               	movlb	0	; () banked
 10727  0034E8  5173               	movf	___awdiv@divisor& (0+255),w,b
 10728  0034EA  0100               	movlb	0	; () banked
 10729  0034EC  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10730  0034EE  B4D8               	btfsc	status,2,c
 10731  0034F0  D02C               	goto	l5350
 10732                           
 10733                           ; BSR set to: 0
 10734  0034F2  0E01               	movlw	1
 10735  0034F4  0100               	movlb	0	; () banked
 10736  0034F6  6F75               	movwf	___awdiv@counter& (0+255),b
 10737  0034F8  D006               	goto	l5336
 10738  0034FA                     l5334:
 10739                           
 10740                           ; BSR set to: 0
 10741  0034FA  0100               	movlb	0	; () banked
 10742  0034FC  90D8               	bcf	status,0,c
 10743  0034FE  3773               	rlcf	___awdiv@divisor& (0+255),f,b
 10744  003500  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10745  003502  0100               	movlb	0	; () banked
 10746  003504  2B75               	incf	___awdiv@counter& (0+255),f,b
 10747  003506                     l5336:
 10748                           
 10749                           ; BSR set to: 0
 10750  003506  0100               	movlb	0	; () banked
 10751  003508  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10752  00350A  D7F7               	goto	l5334
 10753  00350C                     l5338:
 10754                           
 10755                           ; BSR set to: 0
 10756  00350C  0100               	movlb	0	; () banked
 10757  00350E  90D8               	bcf	status,0,c
 10758  003510  3777               	rlcf	___awdiv@quotient& (0+255),f,b
 10759  003512  3778               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10760                           
 10761                           ; BSR set to: 0
 10762  003514  0100               	movlb	0	; () banked
 10763  003516  5173               	movf	___awdiv@divisor& (0+255),w,b
 10764  003518  0100               	movlb	0	; () banked
 10765  00351A  5D71               	subwf	___awdiv@dividend& (0+255),w,b
 10766  00351C  0100               	movlb	0	; () banked
 10767  00351E  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10768  003520  0100               	movlb	0	; () banked
 10769  003522  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10770  003524  A0D8               	btfss	status,0,c
 10771  003526  D00A               	goto	l5346
 10772                           
 10773                           ; BSR set to: 0
 10774  003528  0100               	movlb	0	; () banked
 10775  00352A  5173               	movf	___awdiv@divisor& (0+255),w,b
 10776  00352C  0100               	movlb	0	; () banked
 10777  00352E  5F71               	subwf	___awdiv@dividend& (0+255),f,b
 10778  003530  0100               	movlb	0	; () banked
 10779  003532  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10780  003534  0100               	movlb	0	; () banked
 10781  003536  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10782                           
 10783                           ; BSR set to: 0
 10784  003538  0100               	movlb	0	; () banked
 10785  00353A  8177               	bsf	___awdiv@quotient& (0+255),0,b
 10786  00353C                     l5346:
 10787                           
 10788                           ; BSR set to: 0
 10789  00353C  0100               	movlb	0	; () banked
 10790  00353E  90D8               	bcf	status,0,c
 10791  003540  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10792  003542  3373               	rrcf	___awdiv@divisor& (0+255),f,b
 10793                           
 10794                           ; BSR set to: 0
 10795  003544  0100               	movlb	0	; () banked
 10796  003546  2F75               	decfsz	___awdiv@counter& (0+255),f,b
 10797  003548  D7E1               	goto	l5338
 10798  00354A                     l5350:
 10799                           
 10800                           ; BSR set to: 0
 10801  00354A  0100               	movlb	0	; () banked
 10802  00354C  5176               	movf	___awdiv@sign& (0+255),w,b
 10803  00354E  0100               	movlb	0	; () banked
 10804  003550  B4D8               	btfsc	status,2,c
 10805  003552  D005               	goto	l5354
 10806                           
 10807                           ; BSR set to: 0
 10808  003554  0100               	movlb	0	; () banked
 10809  003556  6D77               	negf	___awdiv@quotient& (0+255),b
 10810  003558  1F78               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10811  00355A  B0D8               	btfsc	status,0,c
 10812  00355C  2B78               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10813  00355E                     l5354:
 10814                           
 10815                           ; BSR set to: 0
 10816  00355E  C077  F071         	movff	___awdiv@quotient,?___awdiv
 10817  003562  C078  F072         	movff	___awdiv@quotient+1,?___awdiv+1
 10818  003566  0012               	return	
 10819  003568                     __end_of___awdiv:
 10820                           	opt stack 0
 10821                           tosu	equ	0xFFF
 10822                           tosh	equ	0xFFE
 10823                           tosl	equ	0xFFD
 10824                           pclath	equ	0xFFA
 10825                           tblptru	equ	0xFF8
 10826                           tblptrh	equ	0xFF7
 10827                           tblptrl	equ	0xFF6
 10828                           tablat	equ	0xFF5
 10829                           prodh	equ	0xFF4
 10830                           prodl	equ	0xFF3
 10831                           intcon	equ	0xFF2
 10832                           indf0	equ	0xFEF
 10833                           postinc0	equ	0xFEE
 10834                           fsr0h	equ	0xFEA
 10835                           fsr0l	equ	0xFE9
 10836                           wreg	equ	0xFE8
 10837                           indf1	equ	0xFE7
 10838                           postdec1	equ	0xFE5
 10839                           fsr1h	equ	0xFE2
 10840                           fsr1l	equ	0xFE1
 10841                           indf2	equ	0xFDF
 10842                           postinc2	equ	0xFDE
 10843                           postdec2	equ	0xFDD
 10844                           fsr2h	equ	0xFDA
 10845                           fsr2l	equ	0xFD9
 10846                           status	equ	0xFD8
 10847                           
 10848 ;; *************** function __tdiv_to_l_ *****************
 10849 ;; Defined at:
 10850 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  f1              3   25[COMRAM] float 
 10853 ;;  f2              3   28[COMRAM] float 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  quot            4   20[BANK0 ] unsigned long 
 10856 ;;  exp1            1   25[BANK0 ] unsigned char 
 10857 ;;  cntr            1   24[BANK0 ] unsigned char 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  4   25[COMRAM] unsigned long 
 10860 ;; Registers used:
 10861 ;;		wreg, status,2, status,0
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10867 ;;      Params:         6       0       0       0       0       0       0
 10868 ;;      Locals:         0       6       0       0       0       0       0
 10869 ;;      Temps:          0       3       0       0       0       0       0
 10870 ;;      Totals:         6       9       0       0       0       0       0
 10871 ;;Total ram usage:       15 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    2
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		__doprnt
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text41
 10882  002AC6                     __ptext41:
 10883                           	opt stack 0
 10884  002AC6                     __tdiv_to_l_:
 10885                           	opt stack 24
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;incstack = 0
 10889  002AC6  C01C  F071         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10890  002ACA  0100               	movlb	0	; () banked
 10891  002ACC  6B72               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10892  002ACE  6B73               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10893  002AD0  341B               	rlcf	__tdiv_to_l_@f1+1,w,c
 10894  002AD2  0100               	movlb	0	; () banked
 10895  002AD4  3771               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10896  002AD6  E301               	bnc	u6001
 10897  002AD8  8172               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10898  002ADA                     u6001:
 10899  002ADA  0100               	movlb	0	; () banked
 10900  002ADC  5171               	movf	??__tdiv_to_l_& (0+255),w,b
 10901  002ADE  0100               	movlb	0	; () banked
 10902  002AE0  6F79               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10903  002AE2  0100               	movlb	0	; () banked
 10904  002AE4  5179               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10905  002AE6  A4D8               	btfss	status,2,c
 10906  002AE8  D009               	goto	l5504
 10907                           
 10908                           ; BSR set to: 0
 10909  002AEA  0E00               	movlw	0
 10910  002AEC  6E1A               	movwf	?__tdiv_to_l_,c
 10911  002AEE  0E00               	movlw	0
 10912  002AF0  6E1B               	movwf	?__tdiv_to_l_+1,c
 10913  002AF2  0E00               	movlw	0
 10914  002AF4  6E1C               	movwf	?__tdiv_to_l_+2,c
 10915  002AF6  0E00               	movlw	0
 10916  002AF8  6E1D               	movwf	?__tdiv_to_l_+3,c
 10917                           
 10918                           ; BSR set to: 0
 10919  002AFA  0012               	return	
 10920  002AFC                     l5504:
 10921                           
 10922                           ; BSR set to: 0
 10923  002AFC  C01F  F071         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10924  002B00  0100               	movlb	0	; () banked
 10925  002B02  6B72               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10926  002B04  6B73               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10927  002B06  341E               	rlcf	__tdiv_to_l_@f2+1,w,c
 10928  002B08  0100               	movlb	0	; () banked
 10929  002B0A  3771               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10930  002B0C  E301               	bnc	u6021
 10931  002B0E  8172               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10932  002B10                     u6021:
 10933  002B10  0100               	movlb	0	; () banked
 10934  002B12  5171               	movf	??__tdiv_to_l_& (0+255),w,b
 10935  002B14  0100               	movlb	0	; () banked
 10936  002B16  6F78               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10937  002B18  0100               	movlb	0	; () banked
 10938  002B1A  5178               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10939  002B1C  A4D8               	btfss	status,2,c
 10940  002B1E  D009               	goto	l5510
 10941                           
 10942                           ; BSR set to: 0
 10943  002B20  0E00               	movlw	0
 10944  002B22  6E1A               	movwf	?__tdiv_to_l_,c
 10945  002B24  0E00               	movlw	0
 10946  002B26  6E1B               	movwf	?__tdiv_to_l_+1,c
 10947  002B28  0E00               	movlw	0
 10948  002B2A  6E1C               	movwf	?__tdiv_to_l_+2,c
 10949  002B2C  0E00               	movlw	0
 10950  002B2E  6E1D               	movwf	?__tdiv_to_l_+3,c
 10951                           
 10952                           ; BSR set to: 0
 10953  002B30  0012               	return	
 10954  002B32                     l5510:
 10955                           
 10956                           ; BSR set to: 0
 10957  002B32  8E1B               	bsf	__tdiv_to_l_@f1+1,7,c
 10958                           
 10959                           ; BSR set to: 0
 10960  002B34  0EFF               	movlw	255
 10961  002B36  161A               	andwf	__tdiv_to_l_@f1,f,c
 10962  002B38  0EFF               	movlw	255
 10963  002B3A  161B               	andwf	__tdiv_to_l_@f1+1,f,c
 10964  002B3C  0E00               	movlw	0
 10965  002B3E  161C               	andwf	__tdiv_to_l_@f1+2,f,c
 10966  002B40  8E1E               	bsf	__tdiv_to_l_@f2+1,7,c
 10967                           
 10968                           ; BSR set to: 0
 10969  002B42  0EFF               	movlw	255
 10970  002B44  161D               	andwf	__tdiv_to_l_@f2,f,c
 10971  002B46  0EFF               	movlw	255
 10972  002B48  161E               	andwf	__tdiv_to_l_@f2+1,f,c
 10973  002B4A  0E00               	movlw	0
 10974  002B4C  161F               	andwf	__tdiv_to_l_@f2+2,f,c
 10975                           
 10976                           ; BSR set to: 0
 10977  002B4E  0E00               	movlw	0
 10978  002B50  0100               	movlb	0	; () banked
 10979  002B52  6F74               	movwf	__tdiv_to_l_@quot& (0+255),b
 10980  002B54  0E00               	movlw	0
 10981  002B56  6F75               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10982  002B58  0E00               	movlw	0
 10983  002B5A  6F76               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10984  002B5C  0E00               	movlw	0
 10985  002B5E  6F77               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10986                           
 10987                           ; BSR set to: 0
 10988  002B60  0E7F               	movlw	127
 10989  002B62  0100               	movlb	0	; () banked
 10990  002B64  5F79               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10991                           
 10992                           ; BSR set to: 0
 10993  002B66  0100               	movlb	0	; () banked
 10994  002B68  5178               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10995  002B6A  0F98               	addlw	152
 10996  002B6C  0100               	movlb	0	; () banked
 10997  002B6E  5F79               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10998                           
 10999                           ; BSR set to: 0
 11000  002B70  0E18               	movlw	24
 11001  002B72  0100               	movlb	0	; () banked
 11002  002B74  6F78               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11003  002B76                     l1036:
 11004                           
 11005                           ; BSR set to: 0
 11006  002B76  0100               	movlb	0	; () banked
 11007  002B78  90D8               	bcf	status,0,c
 11008  002B7A  3774               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11009  002B7C  3775               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11010  002B7E  3776               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11011  002B80  3777               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014  002B82  501D               	movf	__tdiv_to_l_@f2,w,c
 11015  002B84  5C1A               	subwf	__tdiv_to_l_@f1,w,c
 11016  002B86  501E               	movf	__tdiv_to_l_@f2+1,w,c
 11017  002B88  581B               	subwfb	__tdiv_to_l_@f1+1,w,c
 11018  002B8A  501F               	movf	__tdiv_to_l_@f2+2,w,c
 11019  002B8C  581C               	subwfb	__tdiv_to_l_@f1+2,w,c
 11020  002B8E  A0D8               	btfss	status,0,c
 11021  002B90  D008               	goto	l1037
 11022                           
 11023                           ; BSR set to: 0
 11024  002B92  501D               	movf	__tdiv_to_l_@f2,w,c
 11025  002B94  5E1A               	subwf	__tdiv_to_l_@f1,f,c
 11026  002B96  501E               	movf	__tdiv_to_l_@f2+1,w,c
 11027  002B98  5A1B               	subwfb	__tdiv_to_l_@f1+1,f,c
 11028  002B9A  501F               	movf	__tdiv_to_l_@f2+2,w,c
 11029  002B9C  5A1C               	subwfb	__tdiv_to_l_@f1+2,f,c
 11030                           
 11031                           ; BSR set to: 0
 11032  002B9E  0100               	movlb	0	; () banked
 11033  002BA0  8174               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11034  002BA2                     l1037:
 11035                           
 11036                           ; BSR set to: 0
 11037  002BA2  90D8               	bcf	status,0,c
 11038  002BA4  361A               	rlcf	__tdiv_to_l_@f1,f,c
 11039  002BA6  361B               	rlcf	__tdiv_to_l_@f1+1,f,c
 11040  002BA8  361C               	rlcf	__tdiv_to_l_@f1+2,f,c
 11041                           
 11042                           ; BSR set to: 0
 11043  002BAA  0100               	movlb	0	; () banked
 11044  002BAC  2F78               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11045  002BAE  D7E3               	goto	l1036
 11046                           
 11047                           ; BSR set to: 0
 11048                           
 11049                           ; BSR set to: 0
 11050  002BB0  0100               	movlb	0	; () banked
 11051  002BB2  AF79               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11052  002BB4  D019               	goto	l5544
 11053                           
 11054                           ; BSR set to: 0
 11055  002BB6  0100               	movlb	0	; () banked
 11056  002BB8  5179               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11057  002BBA  0A80               	xorlw	128
 11058  002BBC  0F97               	addlw	151
 11059  002BBE  B0D8               	btfsc	status,0,c
 11060  002BC0  D009               	goto	l5540
 11061                           
 11062                           ; BSR set to: 0
 11063  002BC2  0E00               	movlw	0
 11064  002BC4  6E1A               	movwf	?__tdiv_to_l_,c
 11065  002BC6  0E00               	movlw	0
 11066  002BC8  6E1B               	movwf	?__tdiv_to_l_+1,c
 11067  002BCA  0E00               	movlw	0
 11068  002BCC  6E1C               	movwf	?__tdiv_to_l_+2,c
 11069  002BCE  0E00               	movlw	0
 11070  002BD0  6E1D               	movwf	?__tdiv_to_l_+3,c
 11071                           
 11072                           ; BSR set to: 0
 11073  002BD2  0012               	return	
 11074  002BD4                     l5540:
 11075                           
 11076                           ; BSR set to: 0
 11077  002BD4  0100               	movlb	0	; () banked
 11078  002BD6  90D8               	bcf	status,0,c
 11079  002BD8  3377               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11080  002BDA  3376               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11081  002BDC  3375               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11082  002BDE  3374               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11083                           
 11084                           ; BSR set to: 0
 11085  002BE0  0100               	movlb	0	; () banked
 11086  002BE2  3F79               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11087  002BE4  D7F7               	goto	l5540
 11088                           
 11089                           ; BSR set to: 0
 11090  002BE6  D01A               	goto	l1043
 11091  002BE8                     l5544:
 11092                           
 11093                           ; BSR set to: 0
 11094  002BE8  0E17               	movlw	23
 11095  002BEA  0100               	movlb	0	; () banked
 11096  002BEC  6579               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11097  002BEE  D011               	goto	l5552
 11098                           
 11099                           ; BSR set to: 0
 11100  002BF0  0E00               	movlw	0
 11101  002BF2  6E1A               	movwf	?__tdiv_to_l_,c
 11102  002BF4  0E00               	movlw	0
 11103  002BF6  6E1B               	movwf	?__tdiv_to_l_+1,c
 11104  002BF8  0E00               	movlw	0
 11105  002BFA  6E1C               	movwf	?__tdiv_to_l_+2,c
 11106  002BFC  0E00               	movlw	0
 11107  002BFE  6E1D               	movwf	?__tdiv_to_l_+3,c
 11108                           
 11109                           ; BSR set to: 0
 11110  002C00  0012               	return	
 11111  002C02                     l5550:
 11112                           
 11113                           ; BSR set to: 0
 11114  002C02  0100               	movlb	0	; () banked
 11115  002C04  90D8               	bcf	status,0,c
 11116  002C06  3774               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11117  002C08  3775               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11118  002C0A  3776               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11119  002C0C  3777               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11120  002C0E  0100               	movlb	0	; () banked
 11121  002C10  0779               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11122  002C12                     l5552:
 11123                           
 11124                           ; BSR set to: 0
 11125  002C12  0100               	movlb	0	; () banked
 11126  002C14  5179               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11127  002C16  0100               	movlb	0	; () banked
 11128  002C18  A4D8               	btfss	status,2,c
 11129  002C1A  D7F3               	goto	l5550
 11130  002C1C                     l1043:
 11131                           
 11132                           ; BSR set to: 0
 11133  002C1C  C074  F01A         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11134  002C20  C075  F01B         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11135  002C24  C076  F01C         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11136  002C28  C077  F01D         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11137                           
 11138                           ; BSR set to: 0
 11139  002C2C  0012               	return		;funcret
 11140  002C2E                     __end_of__tdiv_to_l_:
 11141                           	opt stack 0
 11142                           tosu	equ	0xFFF
 11143                           tosh	equ	0xFFE
 11144                           tosl	equ	0xFFD
 11145                           pclath	equ	0xFFA
 11146                           tblptru	equ	0xFF8
 11147                           tblptrh	equ	0xFF7
 11148                           tblptrl	equ	0xFF6
 11149                           tablat	equ	0xFF5
 11150                           prodh	equ	0xFF4
 11151                           prodl	equ	0xFF3
 11152                           intcon	equ	0xFF2
 11153                           indf0	equ	0xFEF
 11154                           postinc0	equ	0xFEE
 11155                           fsr0h	equ	0xFEA
 11156                           fsr0l	equ	0xFE9
 11157                           wreg	equ	0xFE8
 11158                           indf1	equ	0xFE7
 11159                           postdec1	equ	0xFE5
 11160                           fsr1h	equ	0xFE2
 11161                           fsr1l	equ	0xFE1
 11162                           indf2	equ	0xFDF
 11163                           postinc2	equ	0xFDE
 11164                           postdec2	equ	0xFDD
 11165                           fsr2h	equ	0xFDA
 11166                           fsr2l	equ	0xFD9
 11167                           status	equ	0xFD8
 11168                           
 11169 ;; *************** function __div_to_l_ *****************
 11170 ;; Defined at:
 11171 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  f1              3   25[COMRAM] unsigned long 
 11174 ;;  f2              3   28[COMRAM] unsigned long 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  quot            4   17[BANK0 ] unsigned long 
 11177 ;;  exp1            1   22[BANK0 ] unsigned char 
 11178 ;;  cntr            1   21[BANK0 ] unsigned char 
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  4   25[COMRAM] unsigned long 
 11181 ;; Registers used:
 11182 ;;		wreg, status,2, status,0
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11188 ;;      Params:         6       0       0       0       0       0       0
 11189 ;;      Locals:         0       6       0       0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0
 11191 ;;      Totals:         6       6       0       0       0       0       0
 11192 ;;Total ram usage:       12 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    2
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		__doprnt
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text42
 11203  002D8C                     __ptext42:
 11204                           	opt stack 0
 11205  002D8C                     __div_to_l_:
 11206                           	opt stack 24
 11207                           
 11208                           ; BSR set to: 0
 11209                           ;incstack = 0
 11210  002D8C  341C               	rlcf	__div_to_l_@f1+2,w,c
 11211  002D8E  341D               	rlcf	__div_to_l_@f1+3,w,c
 11212  002D90  0100               	movlb	0	; () banked
 11213  002D92  6F76               	movwf	__div_to_l_@exp1& (0+255),b
 11214  002D94  0100               	movlb	0	; () banked
 11215  002D96  5176               	movf	__div_to_l_@exp1& (0+255),w,b
 11216  002D98  A4D8               	btfss	status,2,c
 11217  002D9A  D009               	goto	l5560
 11218                           
 11219                           ; BSR set to: 0
 11220  002D9C  0E00               	movlw	0
 11221  002D9E  6E1A               	movwf	?__div_to_l_,c
 11222  002DA0  0E00               	movlw	0
 11223  002DA2  6E1B               	movwf	?__div_to_l_+1,c
 11224  002DA4  0E00               	movlw	0
 11225  002DA6  6E1C               	movwf	?__div_to_l_+2,c
 11226  002DA8  0E00               	movlw	0
 11227  002DAA  6E1D               	movwf	?__div_to_l_+3,c
 11228                           
 11229                           ; BSR set to: 0
 11230  002DAC  0012               	return	
 11231  002DAE                     l5560:
 11232                           
 11233                           ; BSR set to: 0
 11234  002DAE  341F               	rlcf	__div_to_l_@f2+2,w,c
 11235  002DB0  3420               	rlcf	__div_to_l_@f2+3,w,c
 11236  002DB2  0100               	movlb	0	; () banked
 11237  002DB4  6F75               	movwf	__div_to_l_@cntr& (0+255),b
 11238  002DB6  0100               	movlb	0	; () banked
 11239  002DB8  5175               	movf	__div_to_l_@cntr& (0+255),w,b
 11240  002DBA  A4D8               	btfss	status,2,c
 11241  002DBC  D009               	goto	l5566
 11242                           
 11243                           ; BSR set to: 0
 11244  002DBE  0E00               	movlw	0
 11245  002DC0  6E1A               	movwf	?__div_to_l_,c
 11246  002DC2  0E00               	movlw	0
 11247  002DC4  6E1B               	movwf	?__div_to_l_+1,c
 11248  002DC6  0E00               	movlw	0
 11249  002DC8  6E1C               	movwf	?__div_to_l_+2,c
 11250  002DCA  0E00               	movlw	0
 11251  002DCC  6E1D               	movwf	?__div_to_l_+3,c
 11252                           
 11253                           ; BSR set to: 0
 11254  002DCE  0012               	return	
 11255  002DD0                     l5566:
 11256                           
 11257                           ; BSR set to: 0
 11258  002DD0  8E1C               	bsf	__div_to_l_@f1+2,7,c
 11259                           
 11260                           ; BSR set to: 0
 11261  002DD2  0EFF               	movlw	255
 11262  002DD4  161A               	andwf	__div_to_l_@f1,f,c
 11263  002DD6  0EFF               	movlw	255
 11264  002DD8  161B               	andwf	__div_to_l_@f1+1,f,c
 11265  002DDA  0EFF               	movlw	255
 11266  002DDC  161C               	andwf	__div_to_l_@f1+2,f,c
 11267  002DDE  0E00               	movlw	0
 11268  002DE0  161D               	andwf	__div_to_l_@f1+3,f,c
 11269                           
 11270                           ; BSR set to: 0
 11271  002DE2  8E1F               	bsf	__div_to_l_@f2+2,7,c
 11272  002DE4  0EFF               	movlw	255
 11273  002DE6  161D               	andwf	__div_to_l_@f2,f,c
 11274  002DE8  0EFF               	movlw	255
 11275  002DEA  161E               	andwf	__div_to_l_@f2+1,f,c
 11276  002DEC  0EFF               	movlw	255
 11277  002DEE  161F               	andwf	__div_to_l_@f2+2,f,c
 11278  002DF0  0E00               	movlw	0
 11279  002DF2  1620               	andwf	__div_to_l_@f2+3,f,c
 11280                           
 11281                           ; BSR set to: 0
 11282  002DF4  0E00               	movlw	0
 11283  002DF6  0100               	movlb	0	; () banked
 11284  002DF8  6F71               	movwf	__div_to_l_@quot& (0+255),b
 11285  002DFA  0E00               	movlw	0
 11286  002DFC  6F72               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11287  002DFE  0E00               	movlw	0
 11288  002E00  6F73               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11289  002E02  0E00               	movlw	0
 11290  002E04  6F74               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11291                           
 11292                           ; BSR set to: 0
 11293  002E06  0E7F               	movlw	127
 11294  002E08  0100               	movlb	0	; () banked
 11295  002E0A  5F76               	subwf	__div_to_l_@exp1& (0+255),f,b
 11296                           
 11297                           ; BSR set to: 0
 11298  002E0C  0100               	movlb	0	; () banked
 11299  002E0E  5175               	movf	__div_to_l_@cntr& (0+255),w,b
 11300  002E10  0FA0               	addlw	160
 11301  002E12  0100               	movlb	0	; () banked
 11302  002E14  5F76               	subwf	__div_to_l_@exp1& (0+255),f,b
 11303                           
 11304                           ; BSR set to: 0
 11305  002E16  0E20               	movlw	32
 11306  002E18  0100               	movlb	0	; () banked
 11307  002E1A  6F75               	movwf	__div_to_l_@cntr& (0+255),b
 11308  002E1C                     l5580:
 11309                           
 11310                           ; BSR set to: 0
 11311  002E1C  0100               	movlb	0	; () banked
 11312  002E1E  90D8               	bcf	status,0,c
 11313  002E20  3771               	rlcf	__div_to_l_@quot& (0+255),f,b
 11314  002E22  3772               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11315  002E24  3773               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11316  002E26  3774               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11317                           
 11318                           ; BSR set to: 0
 11319  002E28  501D               	movf	__div_to_l_@f2,w,c
 11320  002E2A  5C1A               	subwf	__div_to_l_@f1,w,c
 11321  002E2C  501E               	movf	__div_to_l_@f2+1,w,c
 11322  002E2E  581B               	subwfb	__div_to_l_@f1+1,w,c
 11323  002E30  501F               	movf	__div_to_l_@f2+2,w,c
 11324  002E32  581C               	subwfb	__div_to_l_@f1+2,w,c
 11325  002E34  5020               	movf	__div_to_l_@f2+3,w,c
 11326  002E36  581D               	subwfb	__div_to_l_@f1+3,w,c
 11327  002E38  A0D8               	btfss	status,0,c
 11328  002E3A  D00A               	goto	l5588
 11329                           
 11330                           ; BSR set to: 0
 11331  002E3C  501D               	movf	__div_to_l_@f2,w,c
 11332  002E3E  5E1A               	subwf	__div_to_l_@f1,f,c
 11333  002E40  501E               	movf	__div_to_l_@f2+1,w,c
 11334  002E42  5A1B               	subwfb	__div_to_l_@f1+1,f,c
 11335  002E44  501F               	movf	__div_to_l_@f2+2,w,c
 11336  002E46  5A1C               	subwfb	__div_to_l_@f1+2,f,c
 11337  002E48  5020               	movf	__div_to_l_@f2+3,w,c
 11338  002E4A  5A1D               	subwfb	__div_to_l_@f1+3,f,c
 11339                           
 11340                           ; BSR set to: 0
 11341  002E4C  0100               	movlb	0	; () banked
 11342  002E4E  8171               	bsf	__div_to_l_@quot& (0+255),0,b
 11343  002E50                     l5588:
 11344                           
 11345                           ; BSR set to: 0
 11346  002E50  90D8               	bcf	status,0,c
 11347  002E52  361A               	rlcf	__div_to_l_@f1,f,c
 11348  002E54  361B               	rlcf	__div_to_l_@f1+1,f,c
 11349  002E56  361C               	rlcf	__div_to_l_@f1+2,f,c
 11350  002E58  361D               	rlcf	__div_to_l_@f1+3,f,c
 11351                           
 11352                           ; BSR set to: 0
 11353  002E5A  0100               	movlb	0	; () banked
 11354  002E5C  2F75               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11355  002E5E  D7DE               	goto	l5580
 11356                           
 11357                           ; BSR set to: 0
 11358                           
 11359                           ; BSR set to: 0
 11360  002E60  0100               	movlb	0	; () banked
 11361  002E62  AF76               	btfss	__div_to_l_@exp1& (0+255),7,b
 11362  002E64  D019               	goto	l5604
 11363                           
 11364                           ; BSR set to: 0
 11365  002E66  0100               	movlb	0	; () banked
 11366  002E68  5176               	movf	__div_to_l_@exp1& (0+255),w,b
 11367  002E6A  0A80               	xorlw	128
 11368  002E6C  0F9F               	addlw	159
 11369  002E6E  B0D8               	btfsc	status,0,c
 11370  002E70  D009               	goto	l5600
 11371                           
 11372                           ; BSR set to: 0
 11373  002E72  0E00               	movlw	0
 11374  002E74  6E1A               	movwf	?__div_to_l_,c
 11375  002E76  0E00               	movlw	0
 11376  002E78  6E1B               	movwf	?__div_to_l_+1,c
 11377  002E7A  0E00               	movlw	0
 11378  002E7C  6E1C               	movwf	?__div_to_l_+2,c
 11379  002E7E  0E00               	movlw	0
 11380  002E80  6E1D               	movwf	?__div_to_l_+3,c
 11381                           
 11382                           ; BSR set to: 0
 11383  002E82  0012               	return	
 11384  002E84                     l5600:
 11385                           
 11386                           ; BSR set to: 0
 11387  002E84  0100               	movlb	0	; () banked
 11388  002E86  90D8               	bcf	status,0,c
 11389  002E88  3374               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11390  002E8A  3373               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11391  002E8C  3372               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11392  002E8E  3371               	rrcf	__div_to_l_@quot& (0+255),f,b
 11393                           
 11394                           ; BSR set to: 0
 11395  002E90  0100               	movlb	0	; () banked
 11396  002E92  3F76               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11397  002E94  D7F7               	goto	l5600
 11398                           
 11399                           ; BSR set to: 0
 11400  002E96  D01A               	goto	l939
 11401  002E98                     l5604:
 11402                           
 11403                           ; BSR set to: 0
 11404  002E98  0E1F               	movlw	31
 11405  002E9A  0100               	movlb	0	; () banked
 11406  002E9C  6576               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11407  002E9E  D011               	goto	l5612
 11408                           
 11409                           ; BSR set to: 0
 11410  002EA0  0E00               	movlw	0
 11411  002EA2  6E1A               	movwf	?__div_to_l_,c
 11412  002EA4  0E00               	movlw	0
 11413  002EA6  6E1B               	movwf	?__div_to_l_+1,c
 11414  002EA8  0E00               	movlw	0
 11415  002EAA  6E1C               	movwf	?__div_to_l_+2,c
 11416  002EAC  0E00               	movlw	0
 11417  002EAE  6E1D               	movwf	?__div_to_l_+3,c
 11418                           
 11419                           ; BSR set to: 0
 11420  002EB0  0012               	return	
 11421  002EB2                     l5610:
 11422                           
 11423                           ; BSR set to: 0
 11424  002EB2  0100               	movlb	0	; () banked
 11425  002EB4  90D8               	bcf	status,0,c
 11426  002EB6  3771               	rlcf	__div_to_l_@quot& (0+255),f,b
 11427  002EB8  3772               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11428  002EBA  3773               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11429  002EBC  3774               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11430  002EBE  0100               	movlb	0	; () banked
 11431  002EC0  0776               	decf	__div_to_l_@exp1& (0+255),f,b
 11432  002EC2                     l5612:
 11433                           
 11434                           ; BSR set to: 0
 11435  002EC2  0100               	movlb	0	; () banked
 11436  002EC4  5176               	movf	__div_to_l_@exp1& (0+255),w,b
 11437  002EC6  0100               	movlb	0	; () banked
 11438  002EC8  A4D8               	btfss	status,2,c
 11439  002ECA  D7F3               	goto	l5610
 11440  002ECC                     l939:
 11441                           
 11442                           ; BSR set to: 0
 11443  002ECC  C071  F01A         	movff	__div_to_l_@quot,?__div_to_l_
 11444  002ED0  C072  F01B         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11445  002ED4  C073  F01C         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11446  002ED8  C074  F01D         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11447                           
 11448                           ; BSR set to: 0
 11449  002EDC  0012               	return		;funcret
 11450  002EDE                     __end_of__div_to_l_:
 11451                           	opt stack 0
 11452                           tosu	equ	0xFFF
 11453                           tosh	equ	0xFFE
 11454                           tosl	equ	0xFFD
 11455                           pclath	equ	0xFFA
 11456                           tblptru	equ	0xFF8
 11457                           tblptrh	equ	0xFF7
 11458                           tblptrl	equ	0xFF6
 11459                           tablat	equ	0xFF5
 11460                           prodh	equ	0xFF4
 11461                           prodl	equ	0xFF3
 11462                           intcon	equ	0xFF2
 11463                           indf0	equ	0xFEF
 11464                           postinc0	equ	0xFEE
 11465                           fsr0h	equ	0xFEA
 11466                           fsr0l	equ	0xFE9
 11467                           wreg	equ	0xFE8
 11468                           indf1	equ	0xFE7
 11469                           postdec1	equ	0xFE5
 11470                           fsr1h	equ	0xFE2
 11471                           fsr1l	equ	0xFE1
 11472                           indf2	equ	0xFDF
 11473                           postinc2	equ	0xFDE
 11474                           postdec2	equ	0xFDD
 11475                           fsr2h	equ	0xFDA
 11476                           fsr2l	equ	0xFD9
 11477                           status	equ	0xFD8
 11478                           
 11479 ;; *************** function ___lltoft *****************
 11480 ;; Defined at:
 11481 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  c               4   17[BANK0 ] unsigned long 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  exp             1   25[BANK0 ] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  3   17[BANK0 ] float 
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11495 ;;      Params:         0       4       0       0       0       0       0
 11496 ;;      Locals:         0       1       0       0       0       0       0
 11497 ;;      Temps:          0       4       0       0       0       0       0
 11498 ;;      Totals:         0       9       0       0       0       0       0
 11499 ;;Total ram usage:        9 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    3
 11502 ;; This function calls:
 11503 ;;		___ftpack
 11504 ;; This function is called by:
 11505 ;;		__doprnt
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text43
 11510  00392C                     __ptext43:
 11511                           	opt stack 0
 11512  00392C                     ___lltoft:
 11513                           	opt stack 23
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;incstack = 0
 11517  00392C  0E8E               	movlw	142
 11518  00392E  0100               	movlb	0	; () banked
 11519  003930  6F79               	movwf	___lltoft@exp& (0+255),b
 11520  003932  D008               	goto	l5732
 11521  003934                     l5730:
 11522                           
 11523                           ; BSR set to: 0
 11524  003934  0100               	movlb	0	; () banked
 11525  003936  90D8               	bcf	status,0,c
 11526  003938  3374               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11527  00393A  3373               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11528  00393C  3372               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11529  00393E  3371               	rrcf	___lltoft@c& (0+255),f,b
 11530  003940  0100               	movlb	0	; () banked
 11531  003942  2B79               	incf	___lltoft@exp& (0+255),f,b
 11532  003944                     l5732:
 11533                           
 11534                           ; BSR set to: 0
 11535  003944  0E00               	movlw	0
 11536  003946  0100               	movlb	0	; () banked
 11537  003948  1571               	andwf	___lltoft@c& (0+255),w,b
 11538  00394A  0100               	movlb	0	; () banked
 11539  00394C  6F75               	movwf	??___lltoft& (0+255),b
 11540  00394E  0E00               	movlw	0
 11541  003950  0100               	movlb	0	; () banked
 11542  003952  1572               	andwf	(___lltoft@c+1)& (0+255),w,b
 11543  003954  0100               	movlb	0	; () banked
 11544  003956  6F76               	movwf	(??___lltoft+1)& (0+255),b
 11545  003958  0E00               	movlw	0
 11546  00395A  0100               	movlb	0	; () banked
 11547  00395C  1573               	andwf	(___lltoft@c+2)& (0+255),w,b
 11548  00395E  0100               	movlb	0	; () banked
 11549  003960  6F77               	movwf	(??___lltoft+2)& (0+255),b
 11550  003962  0EFF               	movlw	255
 11551  003964  0100               	movlb	0	; () banked
 11552  003966  1574               	andwf	(___lltoft@c+3)& (0+255),w,b
 11553  003968  0100               	movlb	0	; () banked
 11554  00396A  6F78               	movwf	(??___lltoft+3)& (0+255),b
 11555  00396C  0100               	movlb	0	; () banked
 11556  00396E  5175               	movf	??___lltoft& (0+255),w,b
 11557  003970  0100               	movlb	0	; () banked
 11558  003972  1176               	iorwf	(??___lltoft+1)& (0+255),w,b
 11559  003974  0100               	movlb	0	; () banked
 11560  003976  1177               	iorwf	(??___lltoft+2)& (0+255),w,b
 11561  003978  0100               	movlb	0	; () banked
 11562  00397A  1178               	iorwf	(??___lltoft+3)& (0+255),w,b
 11563  00397C  A4D8               	btfss	status,2,c
 11564  00397E  D7DA               	goto	l5730
 11565                           
 11566                           ; BSR set to: 0
 11567                           
 11568                           ; BSR set to: 0
 11569  003980  C071  F01A         	movff	___lltoft@c,___ftpack@arg
 11570  003984  C072  F01B         	movff	___lltoft@c+1,___ftpack@arg+1
 11571  003988  C073  F01C         	movff	___lltoft@c+2,___ftpack@arg+2
 11572  00398C  C079  F01D         	movff	___lltoft@exp,___ftpack@exp
 11573  003990  0E00               	movlw	0
 11574  003992  6E1E               	movwf	___ftpack@sign,c
 11575  003994  EC12  F01B         	call	___ftpack	;wreg free
 11576  003998  C01A  F071         	movff	?___ftpack,?___lltoft
 11577  00399C  C01B  F072         	movff	?___ftpack+1,?___lltoft+1
 11578  0039A0  C01C  F073         	movff	?___ftpack+2,?___lltoft+2
 11579  0039A4  0012               	return	
 11580  0039A6                     __end_of___lltoft:
 11581                           	opt stack 0
 11582                           tosu	equ	0xFFF
 11583                           tosh	equ	0xFFE
 11584                           tosl	equ	0xFFD
 11585                           pclath	equ	0xFFA
 11586                           tblptru	equ	0xFF8
 11587                           tblptrh	equ	0xFF7
 11588                           tblptrl	equ	0xFF6
 11589                           tablat	equ	0xFF5
 11590                           prodh	equ	0xFF4
 11591                           prodl	equ	0xFF3
 11592                           intcon	equ	0xFF2
 11593                           indf0	equ	0xFEF
 11594                           postinc0	equ	0xFEE
 11595                           fsr0h	equ	0xFEA
 11596                           fsr0l	equ	0xFE9
 11597                           wreg	equ	0xFE8
 11598                           indf1	equ	0xFE7
 11599                           postdec1	equ	0xFE5
 11600                           fsr1h	equ	0xFE2
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           postdec2	equ	0xFDD
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function ___llmod *****************
 11610 ;; Defined at:
 11611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  dividend        4   22[BANK0 ] unsigned long 
 11614 ;;  divisor         4   26[BANK0 ] unsigned long 
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;  counter         1   30[BANK0 ] unsigned char 
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  4   22[BANK0 ] unsigned long 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11626 ;;      Params:         0       8       0       0       0       0       0
 11627 ;;      Locals:         0       1       0       0       0       0       0
 11628 ;;      Temps:          0       0       0       0       0       0       0
 11629 ;;      Totals:         0       9       0       0       0       0       0
 11630 ;;Total ram usage:        9 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:    2
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		__doprnt
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text44
 11641  003772                     __ptext44:
 11642                           	opt stack 0
 11643  003772                     ___llmod:
 11644                           	opt stack 24
 11645                           
 11646                           ;incstack = 0
 11647  003772  0100               	movlb	0	; () banked
 11648  003774  517A               	movf	___llmod@divisor& (0+255),w,b
 11649  003776  0100               	movlb	0	; () banked
 11650  003778  117B               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11651  00377A  0100               	movlb	0	; () banked
 11652  00377C  117C               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11653  00377E  0100               	movlb	0	; () banked
 11654  003780  117D               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11655  003782  B4D8               	btfsc	status,2,c
 11656  003784  D03A               	goto	l1128
 11657                           
 11658                           ; BSR set to: 0
 11659  003786  0E01               	movlw	1
 11660  003788  0100               	movlb	0	; () banked
 11661  00378A  6F7E               	movwf	___llmod@counter& (0+255),b
 11662  00378C  D008               	goto	l5718
 11663  00378E                     l5716:
 11664                           
 11665                           ; BSR set to: 0
 11666  00378E  0100               	movlb	0	; () banked
 11667  003790  90D8               	bcf	status,0,c
 11668  003792  377A               	rlcf	___llmod@divisor& (0+255),f,b
 11669  003794  377B               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11670  003796  377C               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11671  003798  377D               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11672  00379A  0100               	movlb	0	; () banked
 11673  00379C  2B7E               	incf	___llmod@counter& (0+255),f,b
 11674  00379E                     l5718:
 11675                           
 11676                           ; BSR set to: 0
 11677  00379E  0100               	movlb	0	; () banked
 11678  0037A0  AF7D               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11679  0037A2  D7F5               	goto	l5716
 11680  0037A4                     l5720:
 11681                           
 11682                           ; BSR set to: 0
 11683  0037A4  0100               	movlb	0	; () banked
 11684  0037A6  517A               	movf	___llmod@divisor& (0+255),w,b
 11685  0037A8  0100               	movlb	0	; () banked
 11686  0037AA  5D76               	subwf	___llmod@dividend& (0+255),w,b
 11687  0037AC  0100               	movlb	0	; () banked
 11688  0037AE  517B               	movf	(___llmod@divisor+1)& (0+255),w,b
 11689  0037B0  0100               	movlb	0	; () banked
 11690  0037B2  5977               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11691  0037B4  0100               	movlb	0	; () banked
 11692  0037B6  517C               	movf	(___llmod@divisor+2)& (0+255),w,b
 11693  0037B8  0100               	movlb	0	; () banked
 11694  0037BA  5978               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11695  0037BC  0100               	movlb	0	; () banked
 11696  0037BE  517D               	movf	(___llmod@divisor+3)& (0+255),w,b
 11697  0037C0  0100               	movlb	0	; () banked
 11698  0037C2  5979               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11699  0037C4  A0D8               	btfss	status,0,c
 11700  0037C6  D010               	goto	l5724
 11701                           
 11702                           ; BSR set to: 0
 11703  0037C8  0100               	movlb	0	; () banked
 11704  0037CA  517A               	movf	___llmod@divisor& (0+255),w,b
 11705  0037CC  0100               	movlb	0	; () banked
 11706  0037CE  5F76               	subwf	___llmod@dividend& (0+255),f,b
 11707  0037D0  0100               	movlb	0	; () banked
 11708  0037D2  517B               	movf	(___llmod@divisor+1)& (0+255),w,b
 11709  0037D4  0100               	movlb	0	; () banked
 11710  0037D6  5B77               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11711  0037D8  0100               	movlb	0	; () banked
 11712  0037DA  517C               	movf	(___llmod@divisor+2)& (0+255),w,b
 11713  0037DC  0100               	movlb	0	; () banked
 11714  0037DE  5B78               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11715  0037E0  0100               	movlb	0	; () banked
 11716  0037E2  517D               	movf	(___llmod@divisor+3)& (0+255),w,b
 11717  0037E4  0100               	movlb	0	; () banked
 11718  0037E6  5B79               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11719  0037E8                     l5724:
 11720                           
 11721                           ; BSR set to: 0
 11722  0037E8  0100               	movlb	0	; () banked
 11723  0037EA  90D8               	bcf	status,0,c
 11724  0037EC  337D               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11725  0037EE  337C               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11726  0037F0  337B               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11727  0037F2  337A               	rrcf	___llmod@divisor& (0+255),f,b
 11728                           
 11729                           ; BSR set to: 0
 11730  0037F4  0100               	movlb	0	; () banked
 11731  0037F6  2F7E               	decfsz	___llmod@counter& (0+255),f,b
 11732  0037F8  D7D5               	goto	l5720
 11733  0037FA                     l1128:
 11734                           
 11735                           ; BSR set to: 0
 11736  0037FA  C076  F076         	movff	___llmod@dividend,?___llmod
 11737  0037FE  C077  F077         	movff	___llmod@dividend+1,?___llmod+1
 11738  003802  C078  F078         	movff	___llmod@dividend+2,?___llmod+2
 11739  003806  C079  F079         	movff	___llmod@dividend+3,?___llmod+3
 11740                           
 11741                           ; BSR set to: 0
 11742  00380A  0012               	return		;funcret
 11743  00380C                     __end_of___llmod:
 11744                           	opt stack 0
 11745                           tosu	equ	0xFFF
 11746                           tosh	equ	0xFFE
 11747                           tosl	equ	0xFFD
 11748                           pclath	equ	0xFFA
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           intcon	equ	0xFF2
 11756                           indf0	equ	0xFEF
 11757                           postinc0	equ	0xFEE
 11758                           fsr0h	equ	0xFEA
 11759                           fsr0l	equ	0xFE9
 11760                           wreg	equ	0xFE8
 11761                           indf1	equ	0xFE7
 11762                           postdec1	equ	0xFE5
 11763                           fsr1h	equ	0xFE2
 11764                           fsr1l	equ	0xFE1
 11765                           indf2	equ	0xFDF
 11766                           postinc2	equ	0xFDE
 11767                           postdec2	equ	0xFDD
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function ___lldiv *****************
 11773 ;; Defined at:
 11774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  dividend        4   25[COMRAM] unsigned long 
 11777 ;;  divisor         4   29[COMRAM] unsigned long 
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;  quotient        4   17[BANK0 ] unsigned long 
 11780 ;;  counter         1   21[BANK0 ] unsigned char 
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  4   25[COMRAM] unsigned long 
 11783 ;; Registers used:
 11784 ;;		wreg, status,2, status,0
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11790 ;;      Params:         8       0       0       0       0       0       0
 11791 ;;      Locals:         0       5       0       0       0       0       0
 11792 ;;      Temps:          0       0       0       0       0       0       0
 11793 ;;      Totals:         8       5       0       0       0       0       0
 11794 ;;Total ram usage:       13 bytes
 11795 ;; Hardware stack levels used:    1
 11796 ;; Hardware stack levels required when called:    2
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		__doprnt
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           	psect	text45
 11805  00389E                     __ptext45:
 11806                           	opt stack 0
 11807  00389E                     ___lldiv:
 11808                           	opt stack 24
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;incstack = 0
 11812  00389E  0E00               	movlw	0
 11813  0038A0  0100               	movlb	0	; () banked
 11814  0038A2  6F71               	movwf	___lldiv@quotient& (0+255),b
 11815  0038A4  0E00               	movlw	0
 11816  0038A6  6F72               	movwf	(___lldiv@quotient+1)& (0+255),b
 11817  0038A8  0E00               	movlw	0
 11818  0038AA  6F73               	movwf	(___lldiv@quotient+2)& (0+255),b
 11819  0038AC  0E00               	movlw	0
 11820  0038AE  6F74               	movwf	(___lldiv@quotient+3)& (0+255),b
 11821                           
 11822                           ; BSR set to: 0
 11823  0038B0  501E               	movf	___lldiv@divisor,w,c
 11824  0038B2  101F               	iorwf	___lldiv@divisor+1,w,c
 11825  0038B4  1020               	iorwf	___lldiv@divisor+2,w,c
 11826  0038B6  1021               	iorwf	___lldiv@divisor+3,w,c
 11827  0038B8  B4D8               	btfsc	status,2,c
 11828  0038BA  D02F               	goto	l1118
 11829                           
 11830                           ; BSR set to: 0
 11831  0038BC  0E01               	movlw	1
 11832  0038BE  0100               	movlb	0	; () banked
 11833  0038C0  6F75               	movwf	___lldiv@counter& (0+255),b
 11834  0038C2  D007               	goto	l5698
 11835  0038C4                     l5696:
 11836                           
 11837                           ; BSR set to: 0
 11838  0038C4  90D8               	bcf	status,0,c
 11839  0038C6  361E               	rlcf	___lldiv@divisor,f,c
 11840  0038C8  361F               	rlcf	___lldiv@divisor+1,f,c
 11841  0038CA  3620               	rlcf	___lldiv@divisor+2,f,c
 11842  0038CC  3621               	rlcf	___lldiv@divisor+3,f,c
 11843  0038CE  0100               	movlb	0	; () banked
 11844  0038D0  2B75               	incf	___lldiv@counter& (0+255),f,b
 11845  0038D2                     l5698:
 11846                           
 11847                           ; BSR set to: 0
 11848  0038D2  AE21               	btfss	___lldiv@divisor+3,7,c
 11849  0038D4  D7F7               	goto	l5696
 11850  0038D6                     l5700:
 11851                           
 11852                           ; BSR set to: 0
 11853  0038D6  0100               	movlb	0	; () banked
 11854  0038D8  90D8               	bcf	status,0,c
 11855  0038DA  3771               	rlcf	___lldiv@quotient& (0+255),f,b
 11856  0038DC  3772               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11857  0038DE  3773               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11858  0038E0  3774               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11859                           
 11860                           ; BSR set to: 0
 11861  0038E2  501E               	movf	___lldiv@divisor,w,c
 11862  0038E4  5C1A               	subwf	___lldiv@dividend,w,c
 11863  0038E6  501F               	movf	___lldiv@divisor+1,w,c
 11864  0038E8  581B               	subwfb	___lldiv@dividend+1,w,c
 11865  0038EA  5020               	movf	___lldiv@divisor+2,w,c
 11866  0038EC  581C               	subwfb	___lldiv@dividend+2,w,c
 11867  0038EE  5021               	movf	___lldiv@divisor+3,w,c
 11868  0038F0  581D               	subwfb	___lldiv@dividend+3,w,c
 11869  0038F2  A0D8               	btfss	status,0,c
 11870  0038F4  D00A               	goto	l5708
 11871                           
 11872                           ; BSR set to: 0
 11873  0038F6  501E               	movf	___lldiv@divisor,w,c
 11874  0038F8  5E1A               	subwf	___lldiv@dividend,f,c
 11875  0038FA  501F               	movf	___lldiv@divisor+1,w,c
 11876  0038FC  5A1B               	subwfb	___lldiv@dividend+1,f,c
 11877  0038FE  5020               	movf	___lldiv@divisor+2,w,c
 11878  003900  5A1C               	subwfb	___lldiv@dividend+2,f,c
 11879  003902  5021               	movf	___lldiv@divisor+3,w,c
 11880  003904  5A1D               	subwfb	___lldiv@dividend+3,f,c
 11881                           
 11882                           ; BSR set to: 0
 11883  003906  0100               	movlb	0	; () banked
 11884  003908  8171               	bsf	___lldiv@quotient& (0+255),0,b
 11885  00390A                     l5708:
 11886                           
 11887                           ; BSR set to: 0
 11888  00390A  90D8               	bcf	status,0,c
 11889  00390C  3221               	rrcf	___lldiv@divisor+3,f,c
 11890  00390E  3220               	rrcf	___lldiv@divisor+2,f,c
 11891  003910  321F               	rrcf	___lldiv@divisor+1,f,c
 11892  003912  321E               	rrcf	___lldiv@divisor,f,c
 11893                           
 11894                           ; BSR set to: 0
 11895  003914  0100               	movlb	0	; () banked
 11896  003916  2F75               	decfsz	___lldiv@counter& (0+255),f,b
 11897  003918  D7DE               	goto	l5700
 11898  00391A                     l1118:
 11899                           
 11900                           ; BSR set to: 0
 11901  00391A  C071  F01A         	movff	___lldiv@quotient,?___lldiv
 11902  00391E  C072  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
 11903  003922  C073  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
 11904  003926  C074  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
 11905                           
 11906                           ; BSR set to: 0
 11907  00392A  0012               	return		;funcret
 11908  00392C                     __end_of___lldiv:
 11909                           	opt stack 0
 11910                           tosu	equ	0xFFF
 11911                           tosh	equ	0xFFE
 11912                           tosl	equ	0xFFD
 11913                           pclath	equ	0xFFA
 11914                           tblptru	equ	0xFF8
 11915                           tblptrh	equ	0xFF7
 11916                           tblptrl	equ	0xFF6
 11917                           tablat	equ	0xFF5
 11918                           prodh	equ	0xFF4
 11919                           prodl	equ	0xFF3
 11920                           intcon	equ	0xFF2
 11921                           indf0	equ	0xFEF
 11922                           postinc0	equ	0xFEE
 11923                           fsr0h	equ	0xFEA
 11924                           fsr0l	equ	0xFE9
 11925                           wreg	equ	0xFE8
 11926                           indf1	equ	0xFE7
 11927                           postdec1	equ	0xFE5
 11928                           fsr1h	equ	0xFE2
 11929                           fsr1l	equ	0xFE1
 11930                           indf2	equ	0xFDF
 11931                           postinc2	equ	0xFDE
 11932                           postdec2	equ	0xFDD
 11933                           fsr2h	equ	0xFDA
 11934                           fsr2l	equ	0xFD9
 11935                           status	equ	0xFD8
 11936                           
 11937 ;; *************** function ___fttol *****************
 11938 ;; Defined at:
 11939 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  f1              3   51[BANK0 ] float 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;  lval            4   61[BANK0 ] unsigned long 
 11944 ;;  exp1            1   65[BANK0 ] unsigned char 
 11945 ;;  sign1           1   60[BANK0 ] unsigned char 
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  4   51[BANK0 ] long 
 11948 ;; Registers used:
 11949 ;;		wreg, status,2, status,0
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11955 ;;      Params:         0       4       0       0       0       0       0
 11956 ;;      Locals:         0       6       0       0       0       0       0
 11957 ;;      Temps:          0       5       0       0       0       0       0
 11958 ;;      Totals:         0      15       0       0       0       0       0
 11959 ;;Total ram usage:       15 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    2
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_util_getSolarCurrent
 11966 ;;		_util_getBatteryCurrent
 11967 ;;		__doprnt
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text46
 11972  00302A                     __ptext46:
 11973                           	opt stack 0
 11974  00302A                     ___fttol:
 11975                           	opt stack 26
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;incstack = 0
 11979  00302A  C095  F097         	movff	___fttol@f1+2,??___fttol
 11980  00302E  0100               	movlb	0	; () banked
 11981  003030  6B98               	clrf	(??___fttol+1)& (0+255),b
 11982  003032  6B99               	clrf	(??___fttol+2)& (0+255),b
 11983  003034  0100               	movlb	0	; () banked
 11984  003036  3594               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11985  003038  0100               	movlb	0	; () banked
 11986  00303A  3797               	rlcf	??___fttol& (0+255),f,b
 11987  00303C  E301               	bnc	u6211
 11988  00303E  8198               	bsf	(??___fttol+1)& (0+255),0,b
 11989  003040                     u6211:
 11990  003040  0100               	movlb	0	; () banked
 11991  003042  5197               	movf	??___fttol& (0+255),w,b
 11992  003044  0100               	movlb	0	; () banked
 11993  003046  6FA1               	movwf	___fttol@exp1& (0+255),b
 11994  003048  0100               	movlb	0	; () banked
 11995  00304A  51A1               	movf	___fttol@exp1& (0+255),w,b
 11996  00304C  A4D8               	btfss	status,2,c
 11997  00304E  D00A               	goto	l5650
 11998                           
 11999                           ; BSR set to: 0
 12000  003050  0E00               	movlw	0
 12001  003052  0100               	movlb	0	; () banked
 12002  003054  6F93               	movwf	?___fttol& (0+255),b
 12003  003056  0E00               	movlw	0
 12004  003058  6F94               	movwf	(?___fttol+1)& (0+255),b
 12005  00305A  0E00               	movlw	0
 12006  00305C  6F95               	movwf	(?___fttol+2)& (0+255),b
 12007  00305E  0E00               	movlw	0
 12008  003060  6F96               	movwf	(?___fttol+3)& (0+255),b
 12009                           
 12010                           ; BSR set to: 0
 12011  003062  0012               	return	
 12012  003064                     l5650:
 12013                           
 12014                           ; BSR set to: 0
 12015  003064  0E17               	movlw	23
 12016  003066  0100               	movlb	0	; () banked
 12017  003068  6F97               	movwf	??___fttol& (0+255),b
 12018  00306A  C093  F098         	movff	___fttol@f1,??___fttol+1
 12019  00306E  C094  F099         	movff	___fttol@f1+1,??___fttol+2
 12020  003072  C095  F09A         	movff	___fttol@f1+2,??___fttol+3
 12021  003076  0100               	movlb	0	; () banked
 12022  003078  2997               	incf	??___fttol& (0+255),w,b
 12023  00307A  0100               	movlb	0	; () banked
 12024  00307C  6F9B               	movwf	(??___fttol+4)& (0+255),b
 12025  00307E  D005               	goto	u6230
 12026  003080                     u6235:
 12027  003080  0100               	movlb	0	; () banked
 12028  003082  90D8               	bcf	status,0,c
 12029  003084  339A               	rrcf	(??___fttol+3)& (0+255),f,b
 12030  003086  3399               	rrcf	(??___fttol+2)& (0+255),f,b
 12031  003088  3398               	rrcf	(??___fttol+1)& (0+255),f,b
 12032  00308A                     u6230:
 12033  00308A  0100               	movlb	0	; () banked
 12034  00308C  2F9B               	decfsz	(??___fttol+4)& (0+255),f,b
 12035  00308E  D7F8               	goto	u6235
 12036  003090  0100               	movlb	0	; () banked
 12037  003092  5198               	movf	(??___fttol+1)& (0+255),w,b
 12038  003094  0100               	movlb	0	; () banked
 12039  003096  6F9C               	movwf	___fttol@sign1& (0+255),b
 12040                           
 12041                           ; BSR set to: 0
 12042  003098  0100               	movlb	0	; () banked
 12043  00309A  8F94               	bsf	(___fttol@f1+1)& (0+255),7,b
 12044                           
 12045                           ; BSR set to: 0
 12046  00309C  0EFF               	movlw	255
 12047  00309E  0100               	movlb	0	; () banked
 12048  0030A0  1793               	andwf	___fttol@f1& (0+255),f,b
 12049  0030A2  0EFF               	movlw	255
 12050  0030A4  0100               	movlb	0	; () banked
 12051  0030A6  1794               	andwf	(___fttol@f1+1)& (0+255),f,b
 12052  0030A8  0E00               	movlw	0
 12053  0030AA  0100               	movlb	0	; () banked
 12054  0030AC  1795               	andwf	(___fttol@f1+2)& (0+255),f,b
 12055                           
 12056                           ; BSR set to: 0
 12057  0030AE  0100               	movlb	0	; () banked
 12058  0030B0  5193               	movf	___fttol@f1& (0+255),w,b
 12059  0030B2  0100               	movlb	0	; () banked
 12060  0030B4  6F9D               	movwf	___fttol@lval& (0+255),b
 12061  0030B6  0100               	movlb	0	; () banked
 12062  0030B8  5194               	movf	(___fttol@f1+1)& (0+255),w,b
 12063  0030BA  0100               	movlb	0	; () banked
 12064  0030BC  6F9E               	movwf	(___fttol@lval+1)& (0+255),b
 12065  0030BE  0100               	movlb	0	; () banked
 12066  0030C0  5195               	movf	(___fttol@f1+2)& (0+255),w,b
 12067  0030C2  0100               	movlb	0	; () banked
 12068  0030C4  6F9F               	movwf	(___fttol@lval+2)& (0+255),b
 12069  0030C6  0100               	movlb	0	; () banked
 12070  0030C8  6BA0               	clrf	(___fttol@lval+3)& (0+255),b
 12071                           
 12072                           ; BSR set to: 0
 12073  0030CA  0E8E               	movlw	142
 12074  0030CC  0100               	movlb	0	; () banked
 12075  0030CE  5FA1               	subwf	___fttol@exp1& (0+255),f,b
 12076                           
 12077                           ; BSR set to: 0
 12078  0030D0  0100               	movlb	0	; () banked
 12079  0030D2  AFA1               	btfss	___fttol@exp1& (0+255),7,b
 12080  0030D4  D01A               	goto	l5672
 12081                           
 12082                           ; BSR set to: 0
 12083  0030D6  0100               	movlb	0	; () banked
 12084  0030D8  51A1               	movf	___fttol@exp1& (0+255),w,b
 12085  0030DA  0A80               	xorlw	128
 12086  0030DC  0F8F               	addlw	143
 12087  0030DE  B0D8               	btfsc	status,0,c
 12088  0030E0  D00A               	goto	l5668
 12089                           
 12090                           ; BSR set to: 0
 12091  0030E2  0E00               	movlw	0
 12092  0030E4  0100               	movlb	0	; () banked
 12093  0030E6  6F93               	movwf	?___fttol& (0+255),b
 12094  0030E8  0E00               	movlw	0
 12095  0030EA  6F94               	movwf	(?___fttol+1)& (0+255),b
 12096  0030EC  0E00               	movlw	0
 12097  0030EE  6F95               	movwf	(?___fttol+2)& (0+255),b
 12098  0030F0  0E00               	movlw	0
 12099  0030F2  6F96               	movwf	(?___fttol+3)& (0+255),b
 12100                           
 12101                           ; BSR set to: 0
 12102  0030F4  0012               	return	
 12103  0030F6                     l5668:
 12104                           
 12105                           ; BSR set to: 0
 12106  0030F6  0100               	movlb	0	; () banked
 12107  0030F8  90D8               	bcf	status,0,c
 12108  0030FA  33A0               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12109  0030FC  339F               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12110  0030FE  339E               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12111  003100  339D               	rrcf	___fttol@lval& (0+255),f,b
 12112                           
 12113                           ; BSR set to: 0
 12114  003102  0100               	movlb	0	; () banked
 12115  003104  3FA1               	incfsz	___fttol@exp1& (0+255),f,b
 12116  003106  D7F7               	goto	l5668
 12117                           
 12118                           ; BSR set to: 0
 12119  003108  D01B               	goto	l5682
 12120  00310A                     l5672:
 12121                           
 12122                           ; BSR set to: 0
 12123  00310A  0E17               	movlw	23
 12124  00310C  0100               	movlb	0	; () banked
 12125  00310E  65A1               	cpfsgt	___fttol@exp1& (0+255),b
 12126  003110  D012               	goto	l5680
 12127                           
 12128                           ; BSR set to: 0
 12129  003112  0E00               	movlw	0
 12130  003114  0100               	movlb	0	; () banked
 12131  003116  6F93               	movwf	?___fttol& (0+255),b
 12132  003118  0E00               	movlw	0
 12133  00311A  6F94               	movwf	(?___fttol+1)& (0+255),b
 12134  00311C  0E00               	movlw	0
 12135  00311E  6F95               	movwf	(?___fttol+2)& (0+255),b
 12136  003120  0E00               	movlw	0
 12137  003122  6F96               	movwf	(?___fttol+3)& (0+255),b
 12138                           
 12139                           ; BSR set to: 0
 12140  003124  0012               	return	
 12141  003126                     l5678:
 12142                           
 12143                           ; BSR set to: 0
 12144  003126  0100               	movlb	0	; () banked
 12145  003128  90D8               	bcf	status,0,c
 12146  00312A  379D               	rlcf	___fttol@lval& (0+255),f,b
 12147  00312C  379E               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12148  00312E  379F               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12149  003130  37A0               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12150  003132  0100               	movlb	0	; () banked
 12151  003134  07A1               	decf	___fttol@exp1& (0+255),f,b
 12152  003136                     l5680:
 12153                           
 12154                           ; BSR set to: 0
 12155  003136  0100               	movlb	0	; () banked
 12156  003138  51A1               	movf	___fttol@exp1& (0+255),w,b
 12157  00313A  0100               	movlb	0	; () banked
 12158  00313C  A4D8               	btfss	status,2,c
 12159  00313E  D7F3               	goto	l5678
 12160  003140                     l5682:
 12161                           
 12162                           ; BSR set to: 0
 12163  003140  0100               	movlb	0	; () banked
 12164  003142  519C               	movf	___fttol@sign1& (0+255),w,b
 12165  003144  0100               	movlb	0	; () banked
 12166  003146  B4D8               	btfsc	status,2,c
 12167  003148  D009               	goto	l5686
 12168                           
 12169                           ; BSR set to: 0
 12170  00314A  0100               	movlb	0	; () banked
 12171  00314C  1FA0               	comf	(___fttol@lval+3)& (0+255),f,b
 12172  00314E  1F9F               	comf	(___fttol@lval+2)& (0+255),f,b
 12173  003150  1F9E               	comf	(___fttol@lval+1)& (0+255),f,b
 12174  003152  6D9D               	negf	___fttol@lval& (0+255),b
 12175  003154  0E00               	movlw	0
 12176  003156  239E               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12177  003158  239F               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12178  00315A  23A0               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12179  00315C                     l5686:
 12180                           
 12181                           ; BSR set to: 0
 12182  00315C  C09D  F093         	movff	___fttol@lval,?___fttol
 12183  003160  C09E  F094         	movff	___fttol@lval+1,?___fttol+1
 12184  003164  C09F  F095         	movff	___fttol@lval+2,?___fttol+2
 12185  003168  C0A0  F096         	movff	___fttol@lval+3,?___fttol+3
 12186  00316C  0012               	return	
 12187  00316E                     __end_of___fttol:
 12188                           	opt stack 0
 12189                           tosu	equ	0xFFF
 12190                           tosh	equ	0xFFE
 12191                           tosl	equ	0xFFD
 12192                           pclath	equ	0xFFA
 12193                           tblptru	equ	0xFF8
 12194                           tblptrh	equ	0xFF7
 12195                           tblptrl	equ	0xFF6
 12196                           tablat	equ	0xFF5
 12197                           prodh	equ	0xFF4
 12198                           prodl	equ	0xFF3
 12199                           intcon	equ	0xFF2
 12200                           indf0	equ	0xFEF
 12201                           postinc0	equ	0xFEE
 12202                           fsr0h	equ	0xFEA
 12203                           fsr0l	equ	0xFE9
 12204                           wreg	equ	0xFE8
 12205                           indf1	equ	0xFE7
 12206                           postdec1	equ	0xFE5
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           indf2	equ	0xFDF
 12210                           postinc2	equ	0xFDE
 12211                           postdec2	equ	0xFDD
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216 ;; *************** function ___ftsub *****************
 12217 ;; Defined at:
 12218 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  f1              3   66[BANK0 ] float 
 12221 ;;  f2              3   69[BANK0 ] float 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;		None
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  3   66[BANK0 ] float 
 12226 ;; Registers used:
 12227 ;;		wreg, status,2, status,0, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12233 ;;      Params:         0       6       0       0       0       0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0
 12236 ;;      Totals:         0       6       0       0       0       0       0
 12237 ;;Total ram usage:        6 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:    4
 12240 ;; This function calls:
 12241 ;;		___ftadd
 12242 ;; This function is called by:
 12243 ;;		__doprnt
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           	psect	text47
 12248  003BD4                     __ptext47:
 12249                           	opt stack 0
 12250  003BD4                     ___ftsub:
 12251                           	opt stack 22
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;incstack = 0
 12255  003BD4  0100               	movlb	0	; () banked
 12256  003BD6  51A5               	movf	___ftsub@f2& (0+255),w,b
 12257  003BD8  0100               	movlb	0	; () banked
 12258  003BDA  11A6               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 12259  003BDC  0100               	movlb	0	; () banked
 12260  003BDE  11A7               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 12261  003BE0  B4D8               	btfsc	status,2,c
 12262  003BE2  D009               	goto	l5618
 12263                           
 12264                           ; BSR set to: 0
 12265  003BE4  0E00               	movlw	0
 12266  003BE6  0100               	movlb	0	; () banked
 12267  003BE8  1BA5               	xorwf	___ftsub@f2& (0+255),f,b
 12268  003BEA  0E00               	movlw	0
 12269  003BEC  0100               	movlb	0	; () banked
 12270  003BEE  1BA6               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 12271  003BF0  0E80               	movlw	128
 12272  003BF2  0100               	movlb	0	; () banked
 12273  003BF4  1BA7               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 12274  003BF6                     l5618:
 12275                           
 12276                           ; BSR set to: 0
 12277  003BF6  C0A2  F096         	movff	___ftsub@f1,___ftadd@f1
 12278  003BFA  C0A3  F097         	movff	___ftsub@f1+1,___ftadd@f1+1
 12279  003BFE  C0A4  F098         	movff	___ftsub@f1+2,___ftadd@f1+2
 12280  003C02  C0A5  F099         	movff	___ftsub@f2,___ftadd@f2
 12281  003C06  C0A6  F09A         	movff	___ftsub@f2+1,___ftadd@f2+1
 12282  003C0A  C0A7  F09B         	movff	___ftsub@f2+2,___ftadd@f2+2
 12283  003C0E  ECA4  F012         	call	___ftadd	;wreg free
 12284  003C12  C096  F0A2         	movff	?___ftadd,?___ftsub
 12285  003C16  C097  F0A3         	movff	?___ftadd+1,?___ftsub+1
 12286  003C1A  C098  F0A4         	movff	?___ftadd+2,?___ftsub+2
 12287  003C1E  0012               	return	
 12288  003C20                     __end_of___ftsub:
 12289                           	opt stack 0
 12290                           tosu	equ	0xFFF
 12291                           tosh	equ	0xFFE
 12292                           tosl	equ	0xFFD
 12293                           pclath	equ	0xFFA
 12294                           tblptru	equ	0xFF8
 12295                           tblptrh	equ	0xFF7
 12296                           tblptrl	equ	0xFF6
 12297                           tablat	equ	0xFF5
 12298                           prodh	equ	0xFF4
 12299                           prodl	equ	0xFF3
 12300                           intcon	equ	0xFF2
 12301                           indf0	equ	0xFEF
 12302                           postinc0	equ	0xFEE
 12303                           fsr0h	equ	0xFEA
 12304                           fsr0l	equ	0xFE9
 12305                           wreg	equ	0xFE8
 12306                           indf1	equ	0xFE7
 12307                           postdec1	equ	0xFE5
 12308                           fsr1h	equ	0xFE2
 12309                           fsr1l	equ	0xFE1
 12310                           indf2	equ	0xFDF
 12311                           postinc2	equ	0xFDE
 12312                           postdec2	equ	0xFDD
 12313                           fsr2h	equ	0xFDA
 12314                           fsr2l	equ	0xFD9
 12315                           status	equ	0xFD8
 12316                           
 12317 ;; *************** function ___ftadd *****************
 12318 ;; Defined at:
 12319 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  f1              3   54[BANK0 ] float 
 12322 ;;  f2              3   57[BANK0 ] float 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  exp1            1   65[BANK0 ] unsigned char 
 12325 ;;  exp2            1   64[BANK0 ] unsigned char 
 12326 ;;  sign            1   63[BANK0 ] unsigned char 
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  3   54[BANK0 ] float 
 12329 ;; Registers used:
 12330 ;;		wreg, status,2, status,0, cstack
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12336 ;;      Params:         0       6       0       0       0       0       0
 12337 ;;      Locals:         0       3       0       0       0       0       0
 12338 ;;      Temps:          0       3       0       0       0       0       0
 12339 ;;      Totals:         0      12       0       0       0       0       0
 12340 ;;Total ram usage:       12 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    3
 12343 ;; This function calls:
 12344 ;;		___ftpack
 12345 ;; This function is called by:
 12346 ;;		_util_getTemperature
 12347 ;;		__doprnt
 12348 ;;		___ftsub
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text48
 12353  002548                     __ptext48:
 12354                           	opt stack 0
 12355  002548                     ___ftadd:
 12356                           	opt stack 25
 12357                           
 12358                           ;incstack = 0
 12359  002548  C098  F09C         	movff	___ftadd@f1+2,??___ftadd
 12360  00254C  0100               	movlb	0	; () banked
 12361  00254E  6B9D               	clrf	(??___ftadd+1)& (0+255),b
 12362  002550  6B9E               	clrf	(??___ftadd+2)& (0+255),b
 12363  002552  0100               	movlb	0	; () banked
 12364  002554  3597               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 12365  002556  0100               	movlb	0	; () banked
 12366  002558  379C               	rlcf	??___ftadd& (0+255),f,b
 12367  00255A  E301               	bnc	u5501
 12368  00255C  819D               	bsf	(??___ftadd+1)& (0+255),0,b
 12369  00255E                     u5501:
 12370  00255E  0100               	movlb	0	; () banked
 12371  002560  519C               	movf	??___ftadd& (0+255),w,b
 12372  002562  0100               	movlb	0	; () banked
 12373  002564  6FA1               	movwf	___ftadd@exp1& (0+255),b
 12374  002566  C09B  F09C         	movff	___ftadd@f2+2,??___ftadd
 12375  00256A  0100               	movlb	0	; () banked
 12376  00256C  6B9D               	clrf	(??___ftadd+1)& (0+255),b
 12377  00256E  6B9E               	clrf	(??___ftadd+2)& (0+255),b
 12378  002570  0100               	movlb	0	; () banked
 12379  002572  359A               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 12380  002574  0100               	movlb	0	; () banked
 12381  002576  379C               	rlcf	??___ftadd& (0+255),f,b
 12382  002578  E301               	bnc	u5511
 12383  00257A  819D               	bsf	(??___ftadd+1)& (0+255),0,b
 12384  00257C                     u5511:
 12385  00257C  0100               	movlb	0	; () banked
 12386  00257E  519C               	movf	??___ftadd& (0+255),w,b
 12387  002580  0100               	movlb	0	; () banked
 12388  002582  6FA0               	movwf	___ftadd@exp2& (0+255),b
 12389                           
 12390                           ; BSR set to: 0
 12391  002584  0100               	movlb	0	; () banked
 12392  002586  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12393  002588  0100               	movlb	0	; () banked
 12394  00258A  B4D8               	btfsc	status,2,c
 12395  00258C  D011               	goto	l994
 12396                           
 12397                           ; BSR set to: 0
 12398  00258E  0100               	movlb	0	; () banked
 12399  002590  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12400  002592  0100               	movlb	0	; () banked
 12401  002594  5DA1               	subwf	___ftadd@exp1& (0+255),w,b
 12402  002596  B0D8               	btfsc	status,0,c
 12403  002598  D012               	goto	l5204
 12404                           
 12405                           ; BSR set to: 0
 12406  00259A  0100               	movlb	0	; () banked
 12407  00259C  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12408  00259E  0800               	sublw	0
 12409  0025A0  0100               	movlb	0	; () banked
 12410  0025A2  25A0               	addwf	___ftadd@exp2& (0+255),w,b
 12411  0025A4  0100               	movlb	0	; () banked
 12412  0025A6  6F9C               	movwf	??___ftadd& (0+255),b
 12413  0025A8  0E18               	movlw	24
 12414  0025AA  0100               	movlb	0	; () banked
 12415  0025AC  659C               	cpfsgt	??___ftadd& (0+255),b
 12416  0025AE  D007               	goto	l5204
 12417  0025B0                     l994:
 12418                           
 12419                           ; BSR set to: 0
 12420  0025B0  C099  F096         	movff	___ftadd@f2,?___ftadd
 12421  0025B4  C09A  F097         	movff	___ftadd@f2+1,?___ftadd+1
 12422  0025B8  C09B  F098         	movff	___ftadd@f2+2,?___ftadd+2
 12423  0025BC  0012               	return	
 12424  0025BE                     l5204:
 12425                           
 12426                           ; BSR set to: 0
 12427  0025BE  0100               	movlb	0	; () banked
 12428  0025C0  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12429  0025C2  0100               	movlb	0	; () banked
 12430  0025C4  B4D8               	btfsc	status,2,c
 12431  0025C6  D011               	goto	l998
 12432                           
 12433                           ; BSR set to: 0
 12434  0025C8  0100               	movlb	0	; () banked
 12435  0025CA  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12436  0025CC  0100               	movlb	0	; () banked
 12437  0025CE  5DA0               	subwf	___ftadd@exp2& (0+255),w,b
 12438  0025D0  B0D8               	btfsc	status,0,c
 12439  0025D2  D012               	goto	l5210
 12440                           
 12441                           ; BSR set to: 0
 12442  0025D4  0100               	movlb	0	; () banked
 12443  0025D6  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12444  0025D8  0800               	sublw	0
 12445  0025DA  0100               	movlb	0	; () banked
 12446  0025DC  25A1               	addwf	___ftadd@exp1& (0+255),w,b
 12447  0025DE  0100               	movlb	0	; () banked
 12448  0025E0  6F9C               	movwf	??___ftadd& (0+255),b
 12449  0025E2  0E18               	movlw	24
 12450  0025E4  0100               	movlb	0	; () banked
 12451  0025E6  659C               	cpfsgt	??___ftadd& (0+255),b
 12452  0025E8  D007               	goto	l5210
 12453  0025EA                     l998:
 12454                           
 12455                           ; BSR set to: 0
 12456  0025EA  C096  F096         	movff	___ftadd@f1,?___ftadd
 12457  0025EE  C097  F097         	movff	___ftadd@f1+1,?___ftadd+1
 12458  0025F2  C098  F098         	movff	___ftadd@f1+2,?___ftadd+2
 12459  0025F6  0012               	return	
 12460  0025F8                     l5210:
 12461                           
 12462                           ; BSR set to: 0
 12463  0025F8  0E06               	movlw	6
 12464  0025FA  0100               	movlb	0	; () banked
 12465  0025FC  6F9F               	movwf	___ftadd@sign& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468  0025FE  0100               	movlb	0	; () banked
 12469  002600  AF98               	btfss	(___ftadd@f1+2)& (0+255),7,b
 12470  002602  D002               	goto	l5216
 12471                           
 12472                           ; BSR set to: 0
 12473  002604  0100               	movlb	0	; () banked
 12474  002606  8F9F               	bsf	___ftadd@sign& (0+255),7,b
 12475  002608                     l5216:
 12476                           
 12477                           ; BSR set to: 0
 12478  002608  0100               	movlb	0	; () banked
 12479  00260A  AF9B               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12480  00260C  D002               	goto	l1000
 12481                           
 12482                           ; BSR set to: 0
 12483  00260E  0100               	movlb	0	; () banked
 12484  002610  8D9F               	bsf	___ftadd@sign& (0+255),6,b
 12485  002612                     l1000:
 12486                           
 12487                           ; BSR set to: 0
 12488  002612  0100               	movlb	0	; () banked
 12489  002614  8F97               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12490                           
 12491                           ; BSR set to: 0
 12492  002616  0EFF               	movlw	255
 12493  002618  0100               	movlb	0	; () banked
 12494  00261A  1796               	andwf	___ftadd@f1& (0+255),f,b
 12495  00261C  0EFF               	movlw	255
 12496  00261E  0100               	movlb	0	; () banked
 12497  002620  1797               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12498  002622  0E00               	movlw	0
 12499  002624  0100               	movlb	0	; () banked
 12500  002626  1798               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12501  002628  0100               	movlb	0	; () banked
 12502  00262A  8F9A               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12503                           
 12504                           ; BSR set to: 0
 12505  00262C  0EFF               	movlw	255
 12506  00262E  0100               	movlb	0	; () banked
 12507  002630  1799               	andwf	___ftadd@f2& (0+255),f,b
 12508  002632  0EFF               	movlw	255
 12509  002634  0100               	movlb	0	; () banked
 12510  002636  179A               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12511  002638  0E00               	movlw	0
 12512  00263A  0100               	movlb	0	; () banked
 12513  00263C  179B               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12514                           
 12515                           ; BSR set to: 0
 12516  00263E  0100               	movlb	0	; () banked
 12517  002640  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12518  002642  0100               	movlb	0	; () banked
 12519  002644  5DA1               	subwf	___ftadd@exp1& (0+255),w,b
 12520  002646  B0D8               	btfsc	status,0,c
 12521  002648  D025               	goto	l5236
 12522  00264A                     l5226:
 12523                           
 12524                           ; BSR set to: 0
 12525  00264A  0100               	movlb	0	; () banked
 12526  00264C  90D8               	bcf	status,0,c
 12527  00264E  3799               	rlcf	___ftadd@f2& (0+255),f,b
 12528  002650  379A               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12529  002652  379B               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12530  002654  0100               	movlb	0	; () banked
 12531  002656  07A0               	decf	___ftadd@exp2& (0+255),f,b
 12532                           
 12533                           ; BSR set to: 0
 12534  002658  0100               	movlb	0	; () banked
 12535  00265A  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12536  00265C  0100               	movlb	0	; () banked
 12537  00265E  19A0               	xorwf	___ftadd@exp2& (0+255),w,b
 12538  002660  B4D8               	btfsc	status,2,c
 12539  002662  D011               	goto	l5234
 12540                           
 12541                           ; BSR set to: 0
 12542  002664  0100               	movlb	0	; () banked
 12543  002666  079F               	decf	___ftadd@sign& (0+255),f,b
 12544  002668  C09F  F09C         	movff	___ftadd@sign,??___ftadd
 12545  00266C  0E07               	movlw	7
 12546  00266E  0100               	movlb	0	; () banked
 12547  002670  179C               	andwf	??___ftadd& (0+255),f,b
 12548  002672  B4D8               	btfsc	status,2,c
 12549  002674  D008               	goto	l5234
 12550  002676  D7E9               	goto	l5226
 12551  002678                     l5232:
 12552                           
 12553                           ; BSR set to: 0
 12554  002678  0100               	movlb	0	; () banked
 12555  00267A  90D8               	bcf	status,0,c
 12556  00267C  3398               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12557  00267E  3397               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12558  002680  3396               	rrcf	___ftadd@f1& (0+255),f,b
 12559  002682  0100               	movlb	0	; () banked
 12560  002684  2BA1               	incf	___ftadd@exp1& (0+255),f,b
 12561  002686                     l5234:
 12562                           
 12563                           ; BSR set to: 0
 12564  002686  0100               	movlb	0	; () banked
 12565  002688  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12566  00268A  0100               	movlb	0	; () banked
 12567  00268C  19A1               	xorwf	___ftadd@exp1& (0+255),w,b
 12568  00268E  B4D8               	btfsc	status,2,c
 12569  002690  D02B               	goto	l1009
 12570  002692  D7F2               	goto	l5232
 12571  002694                     l5236:
 12572                           
 12573                           ; BSR set to: 0
 12574  002694  0100               	movlb	0	; () banked
 12575  002696  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12576  002698  0100               	movlb	0	; () banked
 12577  00269A  5DA0               	subwf	___ftadd@exp2& (0+255),w,b
 12578  00269C  B0D8               	btfsc	status,0,c
 12579  00269E  D024               	goto	l1009
 12580  0026A0                     l5238:
 12581                           
 12582                           ; BSR set to: 0
 12583  0026A0  0100               	movlb	0	; () banked
 12584  0026A2  90D8               	bcf	status,0,c
 12585  0026A4  3796               	rlcf	___ftadd@f1& (0+255),f,b
 12586  0026A6  3797               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12587  0026A8  3798               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12588  0026AA  0100               	movlb	0	; () banked
 12589  0026AC  07A1               	decf	___ftadd@exp1& (0+255),f,b
 12590                           
 12591                           ; BSR set to: 0
 12592  0026AE  0100               	movlb	0	; () banked
 12593  0026B0  51A1               	movf	___ftadd@exp1& (0+255),w,b
 12594  0026B2  0100               	movlb	0	; () banked
 12595  0026B4  19A0               	xorwf	___ftadd@exp2& (0+255),w,b
 12596  0026B6  B4D8               	btfsc	status,2,c
 12597  0026B8  D011               	goto	l5246
 12598                           
 12599                           ; BSR set to: 0
 12600  0026BA  0100               	movlb	0	; () banked
 12601  0026BC  079F               	decf	___ftadd@sign& (0+255),f,b
 12602  0026BE  C09F  F09C         	movff	___ftadd@sign,??___ftadd
 12603  0026C2  0E07               	movlw	7
 12604  0026C4  0100               	movlb	0	; () banked
 12605  0026C6  179C               	andwf	??___ftadd& (0+255),f,b
 12606  0026C8  B4D8               	btfsc	status,2,c
 12607  0026CA  D008               	goto	l5246
 12608  0026CC  D7E9               	goto	l5238
 12609  0026CE                     l5244:
 12610                           
 12611                           ; BSR set to: 0
 12612  0026CE  0100               	movlb	0	; () banked
 12613  0026D0  90D8               	bcf	status,0,c
 12614  0026D2  339B               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12615  0026D4  339A               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12616  0026D6  3399               	rrcf	___ftadd@f2& (0+255),f,b
 12617  0026D8  0100               	movlb	0	; () banked
 12618  0026DA  2BA0               	incf	___ftadd@exp2& (0+255),f,b
 12619  0026DC                     l5246:
 12620                           
 12621                           ; BSR set to: 0
 12622  0026DC  0100               	movlb	0	; () banked
 12623  0026DE  51A0               	movf	___ftadd@exp2& (0+255),w,b
 12624  0026E0  0100               	movlb	0	; () banked
 12625  0026E2  19A1               	xorwf	___ftadd@exp1& (0+255),w,b
 12626  0026E4  A4D8               	btfss	status,2,c
 12627  0026E6  D7F3               	goto	l5244
 12628  0026E8                     l1009:
 12629                           
 12630                           ; BSR set to: 0
 12631  0026E8  0100               	movlb	0	; () banked
 12632  0026EA  AF9F               	btfss	___ftadd@sign& (0+255),7,b
 12633  0026EC  D012               	goto	l1018
 12634                           
 12635                           ; BSR set to: 0
 12636  0026EE  0EFF               	movlw	255
 12637  0026F0  0100               	movlb	0	; () banked
 12638  0026F2  1B96               	xorwf	___ftadd@f1& (0+255),f,b
 12639  0026F4  0EFF               	movlw	255
 12640  0026F6  0100               	movlb	0	; () banked
 12641  0026F8  1B97               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12642  0026FA  0EFF               	movlw	255
 12643  0026FC  0100               	movlb	0	; () banked
 12644  0026FE  1B98               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12645  002700  0E01               	movlw	1
 12646  002702  0100               	movlb	0	; () banked
 12647  002704  2796               	addwf	___ftadd@f1& (0+255),f,b
 12648  002706  0E00               	movlw	0
 12649  002708  0100               	movlb	0	; () banked
 12650  00270A  2397               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12651  00270C  0E00               	movlw	0
 12652  00270E  0100               	movlb	0	; () banked
 12653  002710  2398               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12654  002712                     l1018:
 12655                           
 12656                           ; BSR set to: 0
 12657  002712  0100               	movlb	0	; () banked
 12658  002714  AD9F               	btfss	___ftadd@sign& (0+255),6,b
 12659  002716  D012               	goto	l5252
 12660                           
 12661                           ; BSR set to: 0
 12662  002718  0EFF               	movlw	255
 12663  00271A  0100               	movlb	0	; () banked
 12664  00271C  1B99               	xorwf	___ftadd@f2& (0+255),f,b
 12665  00271E  0EFF               	movlw	255
 12666  002720  0100               	movlb	0	; () banked
 12667  002722  1B9A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12668  002724  0EFF               	movlw	255
 12669  002726  0100               	movlb	0	; () banked
 12670  002728  1B9B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12671  00272A  0E01               	movlw	1
 12672  00272C  0100               	movlb	0	; () banked
 12673  00272E  2799               	addwf	___ftadd@f2& (0+255),f,b
 12674  002730  0E00               	movlw	0
 12675  002732  0100               	movlb	0	; () banked
 12676  002734  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12677  002736  0E00               	movlw	0
 12678  002738  0100               	movlb	0	; () banked
 12679  00273A  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12680  00273C                     l5252:
 12681                           
 12682                           ; BSR set to: 0
 12683  00273C  0E00               	movlw	0
 12684  00273E  0100               	movlb	0	; () banked
 12685  002740  6F9F               	movwf	___ftadd@sign& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688  002742  0100               	movlb	0	; () banked
 12689  002744  5196               	movf	___ftadd@f1& (0+255),w,b
 12690  002746  0100               	movlb	0	; () banked
 12691  002748  2799               	addwf	___ftadd@f2& (0+255),f,b
 12692  00274A  0100               	movlb	0	; () banked
 12693  00274C  5197               	movf	(___ftadd@f1+1)& (0+255),w,b
 12694  00274E  0100               	movlb	0	; () banked
 12695  002750  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12696  002752  0100               	movlb	0	; () banked
 12697  002754  5198               	movf	(___ftadd@f1+2)& (0+255),w,b
 12698  002756  0100               	movlb	0	; () banked
 12699  002758  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12700                           
 12701                           ; BSR set to: 0
 12702  00275A  0100               	movlb	0	; () banked
 12703  00275C  AF9B               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12704  00275E  D015               	goto	l5262
 12705                           
 12706                           ; BSR set to: 0
 12707  002760  0EFF               	movlw	255
 12708  002762  0100               	movlb	0	; () banked
 12709  002764  1B99               	xorwf	___ftadd@f2& (0+255),f,b
 12710  002766  0EFF               	movlw	255
 12711  002768  0100               	movlb	0	; () banked
 12712  00276A  1B9A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12713  00276C  0EFF               	movlw	255
 12714  00276E  0100               	movlb	0	; () banked
 12715  002770  1B9B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12716  002772  0E01               	movlw	1
 12717  002774  0100               	movlb	0	; () banked
 12718  002776  2799               	addwf	___ftadd@f2& (0+255),f,b
 12719  002778  0E00               	movlw	0
 12720  00277A  0100               	movlb	0	; () banked
 12721  00277C  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12722  00277E  0E00               	movlw	0
 12723  002780  0100               	movlb	0	; () banked
 12724  002782  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12725                           
 12726                           ; BSR set to: 0
 12727  002784  0E01               	movlw	1
 12728  002786  0100               	movlb	0	; () banked
 12729  002788  6F9F               	movwf	___ftadd@sign& (0+255),b
 12730  00278A                     l5262:
 12731                           
 12732                           ; BSR set to: 0
 12733  00278A  C099  F01A         	movff	___ftadd@f2,___ftpack@arg
 12734  00278E  C09A  F01B         	movff	___ftadd@f2+1,___ftpack@arg+1
 12735  002792  C09B  F01C         	movff	___ftadd@f2+2,___ftpack@arg+2
 12736  002796  C0A1  F01D         	movff	___ftadd@exp1,___ftpack@exp
 12737  00279A  C09F  F01E         	movff	___ftadd@sign,___ftpack@sign
 12738  00279E  EC12  F01B         	call	___ftpack	;wreg free
 12739  0027A2  C01A  F096         	movff	?___ftpack,?___ftadd
 12740  0027A6  C01B  F097         	movff	?___ftpack+1,?___ftadd+1
 12741  0027AA  C01C  F098         	movff	?___ftpack+2,?___ftadd+2
 12742  0027AE  0012               	return	
 12743  0027B0                     __end_of___ftadd:
 12744                           	opt stack 0
 12745                           tosu	equ	0xFFF
 12746                           tosh	equ	0xFFE
 12747                           tosl	equ	0xFFD
 12748                           pclath	equ	0xFFA
 12749                           tblptru	equ	0xFF8
 12750                           tblptrh	equ	0xFF7
 12751                           tblptrl	equ	0xFF6
 12752                           tablat	equ	0xFF5
 12753                           prodh	equ	0xFF4
 12754                           prodl	equ	0xFF3
 12755                           intcon	equ	0xFF2
 12756                           indf0	equ	0xFEF
 12757                           postinc0	equ	0xFEE
 12758                           fsr0h	equ	0xFEA
 12759                           fsr0l	equ	0xFE9
 12760                           wreg	equ	0xFE8
 12761                           indf1	equ	0xFE7
 12762                           postdec1	equ	0xFE5
 12763                           fsr1h	equ	0xFE2
 12764                           fsr1l	equ	0xFE1
 12765                           indf2	equ	0xFDF
 12766                           postinc2	equ	0xFDE
 12767                           postdec2	equ	0xFDD
 12768                           fsr2h	equ	0xFDA
 12769                           fsr2l	equ	0xFD9
 12770                           status	equ	0xFD8
 12771                           
 12772 ;; *************** function ___ftpack *****************
 12773 ;; Defined at:
 12774 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  arg             3   25[COMRAM] unsigned um
 12777 ;;  exp             1   28[COMRAM] unsigned char 
 12778 ;;  sign            1   29[COMRAM] unsigned char 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  3   25[COMRAM] float 
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12790 ;;      Params:         5       0       0       0       0       0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0
 12792 ;;      Temps:          3       0       0       0       0       0       0
 12793 ;;      Totals:         8       0       0       0       0       0       0
 12794 ;;Total ram usage:        8 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    2
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		___awtoft
 12801 ;;		___ftadd
 12802 ;;		___ftdiv
 12803 ;;		___ftmul
 12804 ;;		___lltoft
 12805 ;;		___lwtoft
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text49
 12810  003624                     __ptext49:
 12811                           	opt stack 0
 12812  003624                     ___ftpack:
 12813                           	opt stack 25
 12814                           
 12815                           ;incstack = 0
 12816  003624  501D               	movf	___ftpack@exp,w,c
 12817  003626  B4D8               	btfsc	status,2,c
 12818  003628  D005               	goto	l5148
 12819  00362A  501A               	movf	___ftpack@arg,w,c
 12820  00362C  101B               	iorwf	___ftpack@arg+1,w,c
 12821  00362E  101C               	iorwf	___ftpack@arg+2,w,c
 12822  003630  A4D8               	btfss	status,2,c
 12823  003632  D00C               	goto	l5154
 12824  003634                     l5148:
 12825  003634  0E00               	movlw	0
 12826  003636  6E1A               	movwf	?___ftpack,c
 12827  003638  0E00               	movlw	0
 12828  00363A  6E1B               	movwf	?___ftpack+1,c
 12829  00363C  0E00               	movlw	0
 12830  00363E  6E1C               	movwf	?___ftpack+2,c
 12831  003640  0012               	return	
 12832  003642                     l5152:
 12833  003642  2A1D               	incf	___ftpack@exp,f,c
 12834  003644  90D8               	bcf	status,0,c
 12835  003646  321C               	rrcf	___ftpack@arg+2,f,c
 12836  003648  321B               	rrcf	___ftpack@arg+1,f,c
 12837  00364A  321A               	rrcf	___ftpack@arg,f,c
 12838  00364C                     l5154:
 12839  00364C  0E00               	movlw	0
 12840  00364E  141A               	andwf	___ftpack@arg,w,c
 12841  003650  6E1F               	movwf	??___ftpack& (0+255),c
 12842  003652  0E00               	movlw	0
 12843  003654  141B               	andwf	___ftpack@arg+1,w,c
 12844  003656  6E20               	movwf	(??___ftpack+1)& (0+255),c
 12845  003658  0EFE               	movlw	254
 12846  00365A  141C               	andwf	___ftpack@arg+2,w,c
 12847  00365C  6E21               	movwf	(??___ftpack+2)& (0+255),c
 12848  00365E  501F               	movf	??___ftpack,w,c
 12849  003660  1020               	iorwf	??___ftpack+1,w,c
 12850  003662  1021               	iorwf	??___ftpack+2,w,c
 12851  003664  B4D8               	btfsc	status,2,c
 12852  003666  D00C               	goto	l5160
 12853  003668  D7EC               	goto	l5152
 12854  00366A                     l5156:
 12855  00366A  2A1D               	incf	___ftpack@exp,f,c
 12856  00366C  0E01               	movlw	1
 12857  00366E  261A               	addwf	___ftpack@arg,f,c
 12858  003670  0E00               	movlw	0
 12859  003672  221B               	addwfc	___ftpack@arg+1,f,c
 12860  003674  0E00               	movlw	0
 12861  003676  221C               	addwfc	___ftpack@arg+2,f,c
 12862  003678  90D8               	bcf	status,0,c
 12863  00367A  321C               	rrcf	___ftpack@arg+2,f,c
 12864  00367C  321B               	rrcf	___ftpack@arg+1,f,c
 12865  00367E  321A               	rrcf	___ftpack@arg,f,c
 12866  003680                     l5160:
 12867  003680  0E00               	movlw	0
 12868  003682  141A               	andwf	___ftpack@arg,w,c
 12869  003684  6E1F               	movwf	??___ftpack& (0+255),c
 12870  003686  0E00               	movlw	0
 12871  003688  141B               	andwf	___ftpack@arg+1,w,c
 12872  00368A  6E20               	movwf	(??___ftpack+1)& (0+255),c
 12873  00368C  0EFF               	movlw	255
 12874  00368E  141C               	andwf	___ftpack@arg+2,w,c
 12875  003690  6E21               	movwf	(??___ftpack+2)& (0+255),c
 12876  003692  501F               	movf	??___ftpack,w,c
 12877  003694  1020               	iorwf	??___ftpack+1,w,c
 12878  003696  1021               	iorwf	??___ftpack+2,w,c
 12879  003698  B4D8               	btfsc	status,2,c
 12880  00369A  D006               	goto	l5164
 12881  00369C  D7E6               	goto	l5156
 12882  00369E                     l5162:
 12883  00369E  061D               	decf	___ftpack@exp,f,c
 12884  0036A0  90D8               	bcf	status,0,c
 12885  0036A2  361A               	rlcf	___ftpack@arg,f,c
 12886  0036A4  361B               	rlcf	___ftpack@arg+1,f,c
 12887  0036A6  361C               	rlcf	___ftpack@arg+2,f,c
 12888  0036A8                     l5164:
 12889  0036A8  BE1B               	btfsc	___ftpack@arg+1,7,c
 12890  0036AA  D003               	goto	l971
 12891  0036AC  0E02               	movlw	2
 12892  0036AE  601D               	cpfslt	___ftpack@exp,c
 12893  0036B0  D7F6               	goto	l5162
 12894  0036B2                     l971:
 12895  0036B2  A01D               	btfss	___ftpack@exp,0,c
 12896  0036B4  9E1B               	bcf	___ftpack@arg+1,7,c
 12897  0036B6  90D8               	bcf	status,0,c
 12898  0036B8  321D               	rrcf	___ftpack@exp,f,c
 12899  0036BA  501D               	movf	___ftpack@exp,w,c
 12900  0036BC  121C               	iorwf	___ftpack@arg+2,f,c
 12901  0036BE  501E               	movf	___ftpack@sign,w,c
 12902  0036C0  A4D8               	btfss	status,2,c
 12903  0036C2  8E1C               	bsf	___ftpack@arg+2,7,c
 12904  0036C4  C01A  F01A         	movff	___ftpack@arg,?___ftpack
 12905  0036C8  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
 12906  0036CC  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
 12907  0036D0  0012               	return	
 12908  0036D2                     __end_of___ftpack:
 12909                           	opt stack 0
 12910                           tosu	equ	0xFFF
 12911                           tosh	equ	0xFFE
 12912                           tosl	equ	0xFFD
 12913                           pclath	equ	0xFFA
 12914                           tblptru	equ	0xFF8
 12915                           tblptrh	equ	0xFF7
 12916                           tblptrl	equ	0xFF6
 12917                           tablat	equ	0xFF5
 12918                           prodh	equ	0xFF4
 12919                           prodl	equ	0xFF3
 12920                           intcon	equ	0xFF2
 12921                           indf0	equ	0xFEF
 12922                           postinc0	equ	0xFEE
 12923                           fsr0h	equ	0xFEA
 12924                           fsr0l	equ	0xFE9
 12925                           wreg	equ	0xFE8
 12926                           indf1	equ	0xFE7
 12927                           postdec1	equ	0xFE5
 12928                           fsr1h	equ	0xFE2
 12929                           fsr1l	equ	0xFE1
 12930                           indf2	equ	0xFDF
 12931                           postinc2	equ	0xFDE
 12932                           postdec2	equ	0xFDD
 12933                           fsr2h	equ	0xFDA
 12934                           fsr2l	equ	0xFD9
 12935                           status	equ	0xFD8
 12936                           
 12937 ;; *************** function ___ftneg *****************
 12938 ;; Defined at:
 12939 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  f1              3   25[COMRAM] float 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;		None
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  3   25[COMRAM] float 
 12946 ;; Registers used:
 12947 ;;		wreg, status,2, status,0
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12953 ;;      Params:         3       0       0       0       0       0       0
 12954 ;;      Locals:         0       0       0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0
 12956 ;;      Totals:         3       0       0       0       0       0       0
 12957 ;;Total ram usage:        3 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    2
 12960 ;; This function calls:
 12961 ;;		Nothing
 12962 ;; This function is called by:
 12963 ;;		__doprnt
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text50
 12968  003F3A                     __ptext50:
 12969                           	opt stack 0
 12970  003F3A                     ___ftneg:
 12971                           	opt stack 24
 12972                           
 12973                           ;incstack = 0
 12974  003F3A  501A               	movf	___ftneg@f1,w,c
 12975  003F3C  101B               	iorwf	___ftneg@f1+1,w,c
 12976  003F3E  101C               	iorwf	___ftneg@f1+2,w,c
 12977  003F40  B4D8               	btfsc	status,2,c
 12978  003F42  D006               	goto	l1068
 12979  003F44  0E00               	movlw	0
 12980  003F46  1A1A               	xorwf	___ftneg@f1,f,c
 12981  003F48  0E00               	movlw	0
 12982  003F4A  1A1B               	xorwf	___ftneg@f1+1,f,c
 12983  003F4C  0E80               	movlw	128
 12984  003F4E  1A1C               	xorwf	___ftneg@f1+2,f,c
 12985  003F50                     l1068:
 12986  003F50  C01A  F01A         	movff	___ftneg@f1,?___ftneg
 12987  003F54  C01B  F01B         	movff	___ftneg@f1+1,?___ftneg+1
 12988  003F58  C01C  F01C         	movff	___ftneg@f1+2,?___ftneg+2
 12989  003F5C  0012               	return		;funcret
 12990  003F5E                     __end_of___ftneg:
 12991                           	opt stack 0
 12992                           tosu	equ	0xFFF
 12993                           tosh	equ	0xFFE
 12994                           tosl	equ	0xFFD
 12995                           pclath	equ	0xFFA
 12996                           tblptru	equ	0xFF8
 12997                           tblptrh	equ	0xFF7
 12998                           tblptrl	equ	0xFF6
 12999                           tablat	equ	0xFF5
 13000                           prodh	equ	0xFF4
 13001                           prodl	equ	0xFF3
 13002                           intcon	equ	0xFF2
 13003                           indf0	equ	0xFEF
 13004                           postinc0	equ	0xFEE
 13005                           fsr0h	equ	0xFEA
 13006                           fsr0l	equ	0xFE9
 13007                           wreg	equ	0xFE8
 13008                           indf1	equ	0xFE7
 13009                           postdec1	equ	0xFE5
 13010                           fsr1h	equ	0xFE2
 13011                           fsr1l	equ	0xFE1
 13012                           indf2	equ	0xFDF
 13013                           postinc2	equ	0xFDE
 13014                           postdec2	equ	0xFDD
 13015                           fsr2h	equ	0xFDA
 13016                           fsr2l	equ	0xFD9
 13017                           status	equ	0xFD8
 13018                           
 13019 ;; *************** function ___ftge *****************
 13020 ;; Defined at:
 13021 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;  ff1             3   25[COMRAM] float 
 13024 ;;  ff2             3   28[COMRAM] float 
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;		None               void
 13029 ;; Registers used:
 13030 ;;		wreg, status,2, status,0
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13036 ;;      Params:         6       0       0       0       0       0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0
 13038 ;;      Temps:          0       3       0       0       0       0       0
 13039 ;;      Totals:         6       3       0       0       0       0       0
 13040 ;;Total ram usage:        9 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    2
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		__doprnt
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text51
 13051  0036D2                     __ptext51:
 13052                           	opt stack 0
 13053  0036D2                     ___ftge:
 13054                           	opt stack 24
 13055                           
 13056                           ;incstack = 0
 13057  0036D2  AE1C               	btfss	___ftge@ff1+2,7,c
 13058  0036D4  D01A               	goto	l5626
 13059  0036D6  C01A  F071         	movff	___ftge@ff1,??___ftge
 13060  0036DA  C01B  F072         	movff	___ftge@ff1+1,??___ftge+1
 13061  0036DE  C01C  F073         	movff	___ftge@ff1+2,??___ftge+2
 13062  0036E2  0100               	movlb	0	; () banked
 13063  0036E4  1F71               	comf	??___ftge& (0+255),f,b
 13064  0036E6  1F72               	comf	(??___ftge+1)& (0+255),f,b
 13065  0036E8  1F73               	comf	(??___ftge+2)& (0+255),f,b
 13066  0036EA  2B71               	incf	??___ftge& (0+255),f,b
 13067  0036EC  0E00               	movlw	0
 13068  0036EE  2372               	addwfc	(??___ftge+1)& (0+255),f,b
 13069  0036F0  2373               	addwfc	(??___ftge+2)& (0+255),f,b
 13070  0036F2  0E00               	movlw	0
 13071  0036F4  0100               	movlb	0	; () banked
 13072  0036F6  2571               	addwf	??___ftge& (0+255),w,b
 13073  0036F8  6E1A               	movwf	___ftge@ff1,c
 13074  0036FA  0E00               	movlw	0
 13075  0036FC  0100               	movlb	0	; () banked
 13076  0036FE  2172               	addwfc	(??___ftge+1)& (0+255),w,b
 13077  003700  6E1B               	movwf	___ftge@ff1+1,c
 13078  003702  0E80               	movlw	128
 13079  003704  0100               	movlb	0	; () banked
 13080  003706  2173               	addwfc	(??___ftge+2)& (0+255),w,b
 13081  003708  6E1C               	movwf	___ftge@ff1+2,c
 13082  00370A                     l5626:
 13083  00370A  AE1F               	btfss	___ftge@ff2+2,7,c
 13084  00370C  D01A               	goto	l5630
 13085  00370E  C01D  F071         	movff	___ftge@ff2,??___ftge
 13086  003712  C01E  F072         	movff	___ftge@ff2+1,??___ftge+1
 13087  003716  C01F  F073         	movff	___ftge@ff2+2,??___ftge+2
 13088  00371A  0100               	movlb	0	; () banked
 13089  00371C  1F71               	comf	??___ftge& (0+255),f,b
 13090  00371E  1F72               	comf	(??___ftge+1)& (0+255),f,b
 13091  003720  1F73               	comf	(??___ftge+2)& (0+255),f,b
 13092  003722  2B71               	incf	??___ftge& (0+255),f,b
 13093  003724  0E00               	movlw	0
 13094  003726  2372               	addwfc	(??___ftge+1)& (0+255),f,b
 13095  003728  2373               	addwfc	(??___ftge+2)& (0+255),f,b
 13096  00372A  0E00               	movlw	0
 13097  00372C  0100               	movlb	0	; () banked
 13098  00372E  2571               	addwf	??___ftge& (0+255),w,b
 13099  003730  6E1D               	movwf	___ftge@ff2,c
 13100  003732  0E00               	movlw	0
 13101  003734  0100               	movlb	0	; () banked
 13102  003736  2172               	addwfc	(??___ftge+1)& (0+255),w,b
 13103  003738  6E1E               	movwf	___ftge@ff2+1,c
 13104  00373A  0E80               	movlw	128
 13105  00373C  0100               	movlb	0	; () banked
 13106  00373E  2173               	addwfc	(??___ftge+2)& (0+255),w,b
 13107  003740  6E1F               	movwf	___ftge@ff2+2,c
 13108  003742                     l5630:
 13109  003742  0E00               	movlw	0
 13110  003744  1A1A               	xorwf	___ftge@ff1,f,c
 13111  003746  0E00               	movlw	0
 13112  003748  1A1B               	xorwf	___ftge@ff1+1,f,c
 13113  00374A  0E80               	movlw	128
 13114  00374C  1A1C               	xorwf	___ftge@ff1+2,f,c
 13115  00374E  0E00               	movlw	0
 13116  003750  1A1D               	xorwf	___ftge@ff2,f,c
 13117  003752  0E00               	movlw	0
 13118  003754  1A1E               	xorwf	___ftge@ff2+1,f,c
 13119  003756  0E80               	movlw	128
 13120  003758  1A1F               	xorwf	___ftge@ff2+2,f,c
 13121  00375A  501D               	movf	___ftge@ff2,w,c
 13122  00375C  5C1A               	subwf	___ftge@ff1,w,c
 13123  00375E  501E               	movf	___ftge@ff2+1,w,c
 13124  003760  581B               	subwfb	___ftge@ff1+1,w,c
 13125  003762  501F               	movf	___ftge@ff2+2,w,c
 13126  003764  581C               	subwfb	___ftge@ff1+2,w,c
 13127  003766  B0D8               	btfsc	status,0,c
 13128  003768  D002               	goto	l5636
 13129  00376A  90D8               	bcf	status,0,c
 13130  00376C  0012               	return	
 13131  00376E                     l5636:
 13132  00376E  80D8               	bsf	status,0,c
 13133  003770  0012               	return	
 13134  003772                     __end_of___ftge:
 13135                           	opt stack 0
 13136                           tosu	equ	0xFFF
 13137                           tosh	equ	0xFFE
 13138                           tosl	equ	0xFFD
 13139                           pclath	equ	0xFFA
 13140                           tblptru	equ	0xFF8
 13141                           tblptrh	equ	0xFF7
 13142                           tblptrl	equ	0xFF6
 13143                           tablat	equ	0xFF5
 13144                           prodh	equ	0xFF4
 13145                           prodl	equ	0xFF3
 13146                           intcon	equ	0xFF2
 13147                           indf0	equ	0xFEF
 13148                           postinc0	equ	0xFEE
 13149                           fsr0h	equ	0xFEA
 13150                           fsr0l	equ	0xFE9
 13151                           wreg	equ	0xFE8
 13152                           indf1	equ	0xFE7
 13153                           postdec1	equ	0xFE5
 13154                           fsr1h	equ	0xFE2
 13155                           fsr1l	equ	0xFE1
 13156                           indf2	equ	0xFDF
 13157                           postinc2	equ	0xFDE
 13158                           postdec2	equ	0xFDD
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _memset *****************
 13164 ;; Defined at:
 13165 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;  p1              2   25[COMRAM] PTR void 
 13168 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(12
      +8), util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 13169 ;;  c               2   27[COMRAM] int 
 13170 ;;  n               2   29[COMRAM] unsigned int 
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;  p               2   31[COMRAM] PTR unsigned char 
 13173 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(12
      +8), util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  2   25[COMRAM] PTR void 
 13176 ;; Registers used:
 13177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13183 ;;      Params:         6       0       0       0       0       0       0
 13184 ;;      Locals:         2       0       0       0       0       0       0
 13185 ;;      Temps:          0       0       0       0       0       0       0
 13186 ;;      Totals:         8       0       0       0       0       0       0
 13187 ;;Total ram usage:        8 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:    2
 13190 ;; This function calls:
 13191 ;;		Nothing
 13192 ;; This function is called by:
 13193 ;;		_util_beacon_transmission
 13194 ;;		_util_command_ack_transmission
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text52
 13199  003EC4                     __ptext52:
 13200                           	opt stack 0
 13201  003EC4                     _memset:
 13202                           	opt stack 26
 13203                           
 13204                           ;incstack = 0
 13205  003EC4  C01A  F020         	movff	memset@p1,memset@p
 13206  003EC8  C01B  F021         	movff	memset@p1+1,memset@p+1
 13207  003ECC  D008               	goto	l6232
 13208  003ECE                     l6228:
 13209  003ECE  C020  FFD9         	movff	memset@p,fsr2l
 13210  003ED2  C021  FFDA         	movff	memset@p+1,fsr2h
 13211  003ED6  C01C  FFDF         	movff	memset@c,indf2
 13212  003EDA  4A20               	infsnz	memset@p,f,c
 13213  003EDC  2A21               	incf	memset@p+1,f,c
 13214  003EDE                     l6232:
 13215  003EDE  061E               	decf	memset@n,f,c
 13216  003EE0  A0D8               	btfss	status,0,c
 13217  003EE2  061F               	decf	memset@n+1,f,c
 13218  003EE4  281E               	incf	memset@n,w,c
 13219  003EE6  E1F3               	bnz	l6228
 13220  003EE8  281F               	incf	memset@n+1,w,c
 13221  003EEA  B4D8               	btfsc	status,2,c
 13222  003EEC  0012               	return	
 13223  003EEE  D7EF               	goto	l6228
 13224  003EF0                     __end_of_memset:
 13225                           	opt stack 0
 13226                           tosu	equ	0xFFF
 13227                           tosh	equ	0xFFE
 13228                           tosl	equ	0xFFD
 13229                           pclath	equ	0xFFA
 13230                           tblptru	equ	0xFF8
 13231                           tblptrh	equ	0xFF7
 13232                           tblptrl	equ	0xFF6
 13233                           tablat	equ	0xFF5
 13234                           prodh	equ	0xFF4
 13235                           prodl	equ	0xFF3
 13236                           intcon	equ	0xFF2
 13237                           indf0	equ	0xFEF
 13238                           postinc0	equ	0xFEE
 13239                           fsr0h	equ	0xFEA
 13240                           fsr0l	equ	0xFE9
 13241                           wreg	equ	0xFE8
 13242                           indf1	equ	0xFE7
 13243                           postdec1	equ	0xFE5
 13244                           fsr1h	equ	0xFE2
 13245                           fsr1l	equ	0xFE1
 13246                           indf2	equ	0xFDF
 13247                           postinc2	equ	0xFDE
 13248                           postdec2	equ	0xFDD
 13249                           fsr2h	equ	0xFDA
 13250                           fsr2l	equ	0xFD9
 13251                           status	equ	0xFD8
 13252                           
 13253 ;; *************** function _func_command_management *****************
 13254 ;; Defined at:
 13255 ;;		line 87 in file "easat2_func_commands.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;		None
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;  candidate_co    4   29[COMRAM] unsigned long 
 13260 ;;  decoded_comm    2   27[COMRAM] unsigned int 
 13261 ;;  decoded_comm    2   25[COMRAM] unsigned int 
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, status,2, status,0
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13271 ;;      Params:         0       0       0       0       0       0       0
 13272 ;;      Locals:         8       0       0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0
 13274 ;;      Totals:         8       0       0       0       0       0       0
 13275 ;;Total ram usage:        8 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:    2
 13278 ;; This function calls:
 13279 ;;		Nothing
 13280 ;; This function is called by:
 13281 ;;		_main_loop
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text53
 13286  003D66                     __ptext53:
 13287                           	opt stack 0
 13288  003D66                     _func_command_management:
 13289                           	opt stack 27
 13290                           
 13291                           ;easat2_func_commands.c: 89: unsigned int decoded_command = 0;
 13292                           
 13293                           ;incstack = 0
 13294  003D66  0E00               	movlw	0
 13295  003D68  6E1B               	movwf	func_command_management@decoded_command+1,c
 13296  003D6A  0E00               	movlw	0
 13297  003D6C  6E1A               	movwf	func_command_management@decoded_command,c
 13298                           
 13299                           ;easat2_func_commands.c: 90: unsigned int decoded_command_value = 0;
 13300  003D6E  0E00               	movlw	0
 13301  003D70  6E1D               	movwf	func_command_management@decoded_command_value+1,c
 13302  003D72  0E00               	movlw	0
 13303  003D74  6E1C               	movwf	func_command_management@decoded_command_value,c
 13304                           
 13305                           ;easat2_func_commands.c: 92: unsigned long int candidate_command = 0;
 13306  003D76  0E00               	movlw	0
 13307  003D78  6E1E               	movwf	func_command_management@candidate_command,c
 13308  003D7A  0E00               	movlw	0
 13309  003D7C  6E1F               	movwf	func_command_management@candidate_command+1,c
 13310  003D7E  0E00               	movlw	0
 13311  003D80  6E20               	movwf	func_command_management@candidate_command+2,c
 13312  003D82  0E00               	movlw	0
 13313  003D84  6E21               	movwf	func_command_management@candidate_command+3,c
 13314                           
 13315                           ;easat2_func_commands.c: 96: if (global_command_pending_check) {
 13316  003D86  503E               	movf	_global_command_pending_check,w,c	;volatile
 13317  003D88  103F               	iorwf	_global_command_pending_check+1,w,c	;volatile
 13318  003D8A  B4D8               	btfsc	status,2,c
 13319  003D8C  0012               	return	
 13320                           
 13321                           ;easat2_func_commands.c: 98: candidate_command = global_command_buffer;
 13322  003D8E  C022  F01E         	movff	_global_command_buffer,func_command_management@candidate_command	;volatile
 13323  003D92  C023  F01F         	movff	_global_command_buffer+1,func_command_management@candidate_command+1	;volatile
 13324  003D96  C024  F020         	movff	_global_command_buffer+2,func_command_management@candidate_command+2	;volatile
 13325  003D9A  C025  F021         	movff	_global_command_buffer+3,func_command_management@candidate_command+3	;volatile
 13326  003D9E  0012               	return	
 13327  003DA0                     __end_of_func_command_management:
 13328                           	opt stack 0
 13329                           tosu	equ	0xFFF
 13330                           tosh	equ	0xFFE
 13331                           tosl	equ	0xFFD
 13332                           pclath	equ	0xFFA
 13333                           tblptru	equ	0xFF8
 13334                           tblptrh	equ	0xFF7
 13335                           tblptrl	equ	0xFF6
 13336                           tablat	equ	0xFF5
 13337                           prodh	equ	0xFF4
 13338                           prodl	equ	0xFF3
 13339                           intcon	equ	0xFF2
 13340                           indf0	equ	0xFEF
 13341                           postinc0	equ	0xFEE
 13342                           fsr0h	equ	0xFEA
 13343                           fsr0l	equ	0xFE9
 13344                           wreg	equ	0xFE8
 13345                           indf1	equ	0xFE7
 13346                           postdec1	equ	0xFE5
 13347                           fsr1h	equ	0xFE2
 13348                           fsr1l	equ	0xFE1
 13349                           indf2	equ	0xFDF
 13350                           postinc2	equ	0xFDE
 13351                           postdec2	equ	0xFDD
 13352                           fsr2h	equ	0xFDA
 13353                           fsr2l	equ	0xFD9
 13354                           status	equ	0xFD8
 13355                           
 13356 ;; *************** function _init_initialize *****************
 13357 ;; Defined at:
 13358 ;;		line 18 in file "easat2_init_initialize.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;		None
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  1    wreg      void 
 13365 ;; Registers used:
 13366 ;;		wreg, status,2, status,0, cstack
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13372 ;;      Params:         0       0       0       0       0       0       0
 13373 ;;      Locals:         0       0       0       0       0       0       0
 13374 ;;      Temps:          0       0       0       0       0       0       0
 13375 ;;      Totals:         0       0       0       0       0       0       0
 13376 ;;Total ram usage:        0 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:    3
 13379 ;; This function calls:
 13380 ;;		_init_io_initialize
 13381 ;;		_init_timer1_initialize
 13382 ;;		_init_timer2_initialize
 13383 ;;		_init_watchdogs_initialize
 13384 ;;		_util_pwm_initialize
 13385 ;; This function is called by:
 13386 ;;		_main
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           	psect	text54
 13391  003FE8                     __ptext54:
 13392                           	opt stack 0
 13393  003FE8                     _init_initialize:
 13394                           	opt stack 27
 13395                           
 13396                           ;easat2_init_initialize.c: 21: init_watchdogs_initialize();
 13397                           
 13398                           ;incstack = 0
 13399  003FE8  ECBE  F01F         	call	_init_watchdogs_initialize	;wreg free
 13400                           
 13401                           ;easat2_init_initialize.c: 24: init_io_initialize();
 13402  003FEC  ECB4  F01A         	call	_init_io_initialize	;wreg free
 13403                           
 13404                           ;easat2_init_initialize.c: 27: init_timer1_initialize();
 13405  003FF0  EC78  F01F         	call	_init_timer1_initialize	;wreg free
 13406                           
 13407                           ;easat2_init_initialize.c: 28: init_timer2_initialize();
 13408  003FF4  ECE7  F01F         	call	_init_timer2_initialize	;wreg free
 13409                           
 13410                           ;easat2_init_initialize.c: 31: util_pwm_initialize();
 13411  003FF8  ECD0  F01E         	call	_util_pwm_initialize	;wreg free
 13412  003FFC  0012               	return		;funcret
 13413  003FFE                     __end_of_init_initialize:
 13414                           	opt stack 0
 13415                           tosu	equ	0xFFF
 13416                           tosh	equ	0xFFE
 13417                           tosl	equ	0xFFD
 13418                           pclath	equ	0xFFA
 13419                           tblptru	equ	0xFF8
 13420                           tblptrh	equ	0xFF7
 13421                           tblptrl	equ	0xFF6
 13422                           tablat	equ	0xFF5
 13423                           prodh	equ	0xFF4
 13424                           prodl	equ	0xFF3
 13425                           intcon	equ	0xFF2
 13426                           indf0	equ	0xFEF
 13427                           postinc0	equ	0xFEE
 13428                           fsr0h	equ	0xFEA
 13429                           fsr0l	equ	0xFE9
 13430                           wreg	equ	0xFE8
 13431                           indf1	equ	0xFE7
 13432                           postdec1	equ	0xFE5
 13433                           fsr1h	equ	0xFE2
 13434                           fsr1l	equ	0xFE1
 13435                           indf2	equ	0xFDF
 13436                           postinc2	equ	0xFDE
 13437                           postdec2	equ	0xFDD
 13438                           fsr2h	equ	0xFDA
 13439                           fsr2l	equ	0xFD9
 13440                           status	equ	0xFD8
 13441                           
 13442 ;; *************** function _util_pwm_initialize *****************
 13443 ;; Defined at:
 13444 ;;		line 24 in file "easat2_util_pwm.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;		None
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;		None
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  1    wreg      void 
 13451 ;; Registers used:
 13452 ;;		wreg, status,2
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13458 ;;      Params:         0       0       0       0       0       0       0
 13459 ;;      Locals:         0       0       0       0       0       0       0
 13460 ;;      Temps:          0       0       0       0       0       0       0
 13461 ;;      Totals:         0       0       0       0       0       0       0
 13462 ;;Total ram usage:        0 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; Hardware stack levels required when called:    2
 13465 ;; This function calls:
 13466 ;;		Nothing
 13467 ;; This function is called by:
 13468 ;;		_init_initialize
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text55
 13473  003DA0                     __ptext55:
 13474                           	opt stack 0
 13475  003DA0                     _util_pwm_initialize:
 13476                           	opt stack 27
 13477                           
 13478                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 13479                           
 13480                           ;incstack = 0
 13481  003DA0  8495               	bsf	3989,2,c	;volatile
 13482                           
 13483                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 13484  003DA2  8695               	bsf	3989,3,c	;volatile
 13485                           
 13486                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 13487  003DA4  0EE7               	movlw	-25
 13488  003DA6  010F               	movlb	15	; () banked
 13489  003DA8  1749               	andwf	73,f,b	;volatile
 13490                           
 13491                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 13492  003DAA  0E7C               	movlw	124
 13493  003DAC  6EBB               	movwf	4027,c	;volatile
 13494                           
 13495                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 13496  003DAE  0E3F               	movlw	-193
 13497  003DB0  1666               	andwf	3942,f,c	;volatile
 13498                           
 13499                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 13500  003DB2  5066               	movf	3942,w,c	;volatile
 13501  003DB4  0BF0               	andlw	-16
 13502  003DB6  090C               	iorlw	12
 13503  003DB8  6E66               	movwf	3942,c	;volatile
 13504                           
 13505                           ; BSR set to: 15
 13506                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 13507  003DBA  9063               	bcf	3939,0,c	;volatile
 13508                           
 13509                           ; BSR set to: 15
 13510                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 13511  003DBC  8263               	bsf	3939,1,c	;volatile
 13512                           
 13513                           ; BSR set to: 15
 13514                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 13515  003DBE  8463               	bsf	3939,2,c	;volatile
 13516                           
 13517                           ; BSR set to: 15
 13518                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 13519  003DC0  9663               	bcf	3939,3,c	;volatile
 13520                           
 13521                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 13522  003DC2  0E3E               	movlw	62
 13523  003DC4  6E67               	movwf	3943,c	;volatile
 13524                           
 13525                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 13526  003DC6  5066               	movf	3942,w,c	;volatile
 13527  003DC8  0BCF               	andlw	-49
 13528  003DCA  0920               	iorlw	32
 13529  003DCC  6E66               	movwf	3942,c	;volatile
 13530                           
 13531                           ; BSR set to: 15
 13532                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 13533  003DCE  94BA               	bcf	4026,2,c	;volatile
 13534                           
 13535                           ; BSR set to: 15
 13536                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 13537  003DD0  929E               	bcf	3998,1,c	;volatile
 13538                           
 13539                           ; BSR set to: 15
 13540  003DD2  0012               	return		;funcret
 13541  003DD4                     __end_of_util_pwm_initialize:
 13542                           	opt stack 0
 13543                           tosu	equ	0xFFF
 13544                           tosh	equ	0xFFE
 13545                           tosl	equ	0xFFD
 13546                           pclath	equ	0xFFA
 13547                           tblptru	equ	0xFF8
 13548                           tblptrh	equ	0xFF7
 13549                           tblptrl	equ	0xFF6
 13550                           tablat	equ	0xFF5
 13551                           prodh	equ	0xFF4
 13552                           prodl	equ	0xFF3
 13553                           intcon	equ	0xFF2
 13554                           indf0	equ	0xFEF
 13555                           postinc0	equ	0xFEE
 13556                           fsr0h	equ	0xFEA
 13557                           fsr0l	equ	0xFE9
 13558                           wreg	equ	0xFE8
 13559                           indf1	equ	0xFE7
 13560                           postdec1	equ	0xFE5
 13561                           fsr1h	equ	0xFE2
 13562                           fsr1l	equ	0xFE1
 13563                           indf2	equ	0xFDF
 13564                           postinc2	equ	0xFDE
 13565                           postdec2	equ	0xFDD
 13566                           fsr2h	equ	0xFDA
 13567                           fsr2l	equ	0xFD9
 13568                           status	equ	0xFD8
 13569                           
 13570 ;; *************** function _init_watchdogs_initialize *****************
 13571 ;; Defined at:
 13572 ;;		line 36 in file "easat2_init_initialize.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;		None
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;		None
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  1    wreg      void 
 13579 ;; Registers used:
 13580 ;;		wreg, status,2, status,0
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13586 ;;      Params:         0       0       0       0       0       0       0
 13587 ;;      Locals:         0       0       0       0       0       0       0
 13588 ;;      Temps:          1       0       0       0       0       0       0
 13589 ;;      Totals:         1       0       0       0       0       0       0
 13590 ;;Total ram usage:        1 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; Hardware stack levels required when called:    2
 13593 ;; This function calls:
 13594 ;;		Nothing
 13595 ;; This function is called by:
 13596 ;;		_init_initialize
 13597 ;;		_main_loop
 13598 ;; This function uses a non-reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text56
 13602  003F7C                     __ptext56:
 13603                           	opt stack 0
 13604  003F7C                     _init_watchdogs_initialize:
 13605                           	opt stack 27
 13606                           
 13607                           ;easat2_init_initialize.c: 39: (PORTDbits.RD5) = !(PORTDbits.RD5);
 13608                           
 13609                           ; BSR set to: 15
 13610                           ;incstack = 0
 13611  003F7C  BA83               	btfsc	3971,5,c	;volatile
 13612  003F7E  D003               	goto	u7340
 13613  003F80  6A1A               	clrf	??_init_watchdogs_initialize& (0+255),c
 13614  003F82  2A1A               	incf	??_init_watchdogs_initialize& (0+255),f,c
 13615  003F84  D001               	goto	u7358
 13616  003F86                     u7340:
 13617  003F86  6A1A               	clrf	??_init_watchdogs_initialize& (0+255),c
 13618  003F88                     u7358:
 13619  003F88  3A1A               	swapf	??_init_watchdogs_initialize,f,c
 13620  003F8A  461A               	rlncf	??_init_watchdogs_initialize,f,c
 13621  003F8C  5083               	movf	3971,w,c	;volatile
 13622  003F8E  181A               	xorwf	??_init_watchdogs_initialize,w,c
 13623  003F90  0BDF               	andlw	-33
 13624  003F92  181A               	xorwf	??_init_watchdogs_initialize,w,c
 13625  003F94  6E83               	movwf	3971,c	;volatile
 13626  003F96  0004               	clrwdt		;# 
 13627  003F98  0012               	return		;funcret
 13628  003F9A                     __end_of_init_watchdogs_initialize:
 13629                           	opt stack 0
 13630                           tosu	equ	0xFFF
 13631                           tosh	equ	0xFFE
 13632                           tosl	equ	0xFFD
 13633                           pclath	equ	0xFFA
 13634                           tblptru	equ	0xFF8
 13635                           tblptrh	equ	0xFF7
 13636                           tblptrl	equ	0xFF6
 13637                           tablat	equ	0xFF5
 13638                           prodh	equ	0xFF4
 13639                           prodl	equ	0xFF3
 13640                           intcon	equ	0xFF2
 13641                           indf0	equ	0xFEF
 13642                           postinc0	equ	0xFEE
 13643                           fsr0h	equ	0xFEA
 13644                           fsr0l	equ	0xFE9
 13645                           wreg	equ	0xFE8
 13646                           indf1	equ	0xFE7
 13647                           postdec1	equ	0xFE5
 13648                           fsr1h	equ	0xFE2
 13649                           fsr1l	equ	0xFE1
 13650                           indf2	equ	0xFDF
 13651                           postinc2	equ	0xFDE
 13652                           postdec2	equ	0xFDD
 13653                           fsr2h	equ	0xFDA
 13654                           fsr2l	equ	0xFD9
 13655                           status	equ	0xFD8
 13656                           
 13657 ;; *************** function _init_timer2_initialize *****************
 13658 ;; Defined at:
 13659 ;;		line 70 in file "easat2_init_timer.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;		None
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      void 
 13666 ;; Registers used:
 13667 ;;		wreg, status,2
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13673 ;;      Params:         0       0       0       0       0       0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0
 13676 ;;      Totals:         0       0       0       0       0       0       0
 13677 ;;Total ram usage:        0 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:    2
 13680 ;; This function calls:
 13681 ;;		Nothing
 13682 ;; This function is called by:
 13683 ;;		_init_initialize
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           	psect	text57
 13688  003FCE                     __ptext57:
 13689                           	opt stack 0
 13690  003FCE                     _init_timer2_initialize:
 13691                           	opt stack 27
 13692                           
 13693                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 13694                           
 13695                           ;incstack = 0
 13696  003FCE  94BA               	bcf	4026,2,c	;volatile
 13697                           
 13698                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 13699  003FD0  80BA               	bsf	4026,0,c	;volatile
 13700                           
 13701                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 13702  003FD2  92BA               	bcf	4026,1,c	;volatile
 13703                           
 13704                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 13705  003FD4  96BA               	bcf	4026,3,c	;volatile
 13706  003FD6  98BA               	bcf	4026,4,c	;volatile
 13707  003FD8  9ABA               	bcf	4026,5,c	;volatile
 13708  003FDA  9CBA               	bcf	4026,6,c	;volatile
 13709                           
 13710                           ;easat2_init_timer.c: 93: TMR2 = 0;
 13711  003FDC  0E00               	movlw	0
 13712  003FDE  6EBC               	movwf	4028,c	;volatile
 13713                           
 13714                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 13715  003FE0  829D               	bsf	3997,1,c	;volatile
 13716                           
 13717                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 13718  003FE2  929F               	bcf	3999,1,c	;volatile
 13719                           
 13720                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 13721  003FE4  929E               	bcf	3998,1,c	;volatile
 13722  003FE6  0012               	return		;funcret
 13723  003FE8                     __end_of_init_timer2_initialize:
 13724                           	opt stack 0
 13725                           tosu	equ	0xFFF
 13726                           tosh	equ	0xFFE
 13727                           tosl	equ	0xFFD
 13728                           pclath	equ	0xFFA
 13729                           tblptru	equ	0xFF8
 13730                           tblptrh	equ	0xFF7
 13731                           tblptrl	equ	0xFF6
 13732                           tablat	equ	0xFF5
 13733                           prodh	equ	0xFF4
 13734                           prodl	equ	0xFF3
 13735                           intcon	equ	0xFF2
 13736                           indf0	equ	0xFEF
 13737                           postinc0	equ	0xFEE
 13738                           fsr0h	equ	0xFEA
 13739                           fsr0l	equ	0xFE9
 13740                           wreg	equ	0xFE8
 13741                           indf1	equ	0xFE7
 13742                           postdec1	equ	0xFE5
 13743                           fsr1h	equ	0xFE2
 13744                           fsr1l	equ	0xFE1
 13745                           indf2	equ	0xFDF
 13746                           postinc2	equ	0xFDE
 13747                           postdec2	equ	0xFDD
 13748                           fsr2h	equ	0xFDA
 13749                           fsr2l	equ	0xFD9
 13750                           status	equ	0xFD8
 13751                           
 13752 ;; *************** function _init_timer1_initialize *****************
 13753 ;; Defined at:
 13754 ;;		line 17 in file "easat2_init_timer.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;		None
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;		None
 13759 ;; Return value:  Size  Location     Type
 13760 ;;                  1    wreg      void 
 13761 ;; Registers used:
 13762 ;;		wreg, status,2
 13763 ;; Tracked objects:
 13764 ;;		On entry : 0/0
 13765 ;;		On exit  : 0/0
 13766 ;;		Unchanged: 0/0
 13767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13768 ;;      Params:         0       0       0       0       0       0       0
 13769 ;;      Locals:         0       0       0       0       0       0       0
 13770 ;;      Temps:          0       0       0       0       0       0       0
 13771 ;;      Totals:         0       0       0       0       0       0       0
 13772 ;;Total ram usage:        0 bytes
 13773 ;; Hardware stack levels used:    1
 13774 ;; Hardware stack levels required when called:    2
 13775 ;; This function calls:
 13776 ;;		Nothing
 13777 ;; This function is called by:
 13778 ;;		_init_initialize
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text58
 13783  003EF0                     __ptext58:
 13784                           	opt stack 0
 13785  003EF0                     _init_timer1_initialize:
 13786                           	opt stack 27
 13787                           
 13788                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 13789                           
 13790                           ;incstack = 0
 13791  003EF0  8ED0               	bsf	4048,7,c	;volatile
 13792                           
 13793                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 13794  003EF2  90CD               	bcf	4045,0,c	;volatile
 13795                           
 13796                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 13797  003EF4  9CCD               	bcf	4045,6,c	;volatile
 13798                           
 13799                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 13800  003EF6  9ECD               	bcf	4045,7,c	;volatile
 13801                           
 13802                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 13803  003EF8  9ACD               	bcf	4045,5,c	;volatile
 13804                           
 13805                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 13806  003EFA  98CD               	bcf	4045,4,c	;volatile
 13807                           
 13808                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 13809  003EFC  96CD               	bcf	4045,3,c	;volatile
 13810                           
 13811                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 13812  003EFE  82CD               	bsf	4045,1,c	;volatile
 13813                           
 13814                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 13815  003F00  0EEC               	movlw	236
 13816  003F02  6ECF               	movwf	4047,c	;volatile
 13817                           
 13818                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 13819  003F04  0E77               	movlw	119
 13820  003F06  6ECE               	movwf	4046,c	;volatile
 13821                           
 13822                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 13823  003F08  809D               	bsf	3997,0,c	;volatile
 13824                           
 13825                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 13826  003F0A  809F               	bsf	3999,0,c	;volatile
 13827                           
 13828                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 13829  003F0C  909E               	bcf	3998,0,c	;volatile
 13830                           
 13831                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 13832  003F0E  80CD               	bsf	4045,0,c	;volatile
 13833                           
 13834                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 13835  003F10  9CF2               	bcf	intcon,6,c	;volatile
 13836                           
 13837                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 13838  003F12  8EF2               	bsf	intcon,7,c	;volatile
 13839  003F14  0012               	return		;funcret
 13840  003F16                     __end_of_init_timer1_initialize:
 13841                           	opt stack 0
 13842                           tosu	equ	0xFFF
 13843                           tosh	equ	0xFFE
 13844                           tosl	equ	0xFFD
 13845                           pclath	equ	0xFFA
 13846                           tblptru	equ	0xFF8
 13847                           tblptrh	equ	0xFF7
 13848                           tblptrl	equ	0xFF6
 13849                           tablat	equ	0xFF5
 13850                           prodh	equ	0xFF4
 13851                           prodl	equ	0xFF3
 13852                           intcon	equ	0xFF2
 13853                           indf0	equ	0xFEF
 13854                           postinc0	equ	0xFEE
 13855                           fsr0h	equ	0xFEA
 13856                           fsr0l	equ	0xFE9
 13857                           wreg	equ	0xFE8
 13858                           indf1	equ	0xFE7
 13859                           postdec1	equ	0xFE5
 13860                           fsr1h	equ	0xFE2
 13861                           fsr1l	equ	0xFE1
 13862                           indf2	equ	0xFDF
 13863                           postinc2	equ	0xFDE
 13864                           postdec2	equ	0xFDD
 13865                           fsr2h	equ	0xFDA
 13866                           fsr2l	equ	0xFD9
 13867                           status	equ	0xFD8
 13868                           
 13869 ;; *************** function _init_io_initialize *****************
 13870 ;; Defined at:
 13871 ;;		line 49 in file "easat2_init_initialize.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;		None
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		wreg, status,2
 13880 ;; Tracked objects:
 13881 ;;		On entry : 0/0
 13882 ;;		On exit  : 0/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13885 ;;      Params:         0       0       0       0       0       0       0
 13886 ;;      Locals:         0       0       0       0       0       0       0
 13887 ;;      Temps:          0       0       0       0       0       0       0
 13888 ;;      Totals:         0       0       0       0       0       0       0
 13889 ;;Total ram usage:        0 bytes
 13890 ;; Hardware stack levels used:    1
 13891 ;; Hardware stack levels required when called:    2
 13892 ;; This function calls:
 13893 ;;		Nothing
 13894 ;; This function is called by:
 13895 ;;		_init_initialize
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           	psect	text59
 13900  003568                     __ptext59:
 13901                           	opt stack 0
 13902  003568                     _init_io_initialize:
 13903                           	opt stack 27
 13904                           
 13905                           ;easat2_init_initialize.c: 58: VREFCON0bits.FVREN = 1;
 13906                           
 13907                           ;incstack = 0
 13908  003568  010F               	movlb	15	; () banked
 13909  00356A  8F42               	bsf	66,7,b	;volatile
 13910                           
 13911                           ;easat2_init_initialize.c: 59: VREFCON0bits.FVRS0 = 0;
 13912  00356C  010F               	movlb	15	; () banked
 13913  00356E  9942               	bcf	66,4,b	;volatile
 13914                           
 13915                           ;easat2_init_initialize.c: 60: VREFCON0bits.FVRS1 = 1;
 13916  003570  010F               	movlb	15	; () banked
 13917  003572  8B42               	bsf	66,5,b	;volatile
 13918                           
 13919                           ;easat2_init_initialize.c: 62: VREFCON0bits.FVRST = 1;
 13920  003574  010F               	movlb	15	; () banked
 13921  003576  8D42               	bsf	66,6,b	;volatile
 13922                           
 13923                           ; BSR set to: 15
 13924                           ;easat2_init_initialize.c: 67: ADCON1 = 0x08;
 13925  003578  0E08               	movlw	8
 13926  00357A  6EC1               	movwf	4033,c	;volatile
 13927                           
 13928                           ;easat2_init_initialize.c: 68: ADCON2 = 0xAF;
 13929  00357C  0EAF               	movlw	175
 13930  00357E  6EC0               	movwf	4032,c	;volatile
 13931                           
 13932                           ; BSR set to: 15
 13933                           ;easat2_init_initialize.c: 72: TRISAbits.TRISA0 = 1;
 13934  003580  8092               	bsf	3986,0,c	;volatile
 13935                           
 13936                           ; BSR set to: 15
 13937                           ;easat2_init_initialize.c: 73: TRISAbits.TRISA1 = 1;
 13938  003582  8292               	bsf	3986,1,c	;volatile
 13939                           
 13940                           ; BSR set to: 15
 13941                           ;easat2_init_initialize.c: 74: TRISAbits.TRISA2 = 0;
 13942  003584  9492               	bcf	3986,2,c	;volatile
 13943                           
 13944                           ; BSR set to: 15
 13945                           ;easat2_init_initialize.c: 75: TRISAbits.TRISA3 = 1;
 13946  003586  8692               	bsf	3986,3,c	;volatile
 13947                           
 13948                           ; BSR set to: 15
 13949                           ;easat2_init_initialize.c: 76: TRISAbits.TRISA4 = 1;
 13950  003588  8892               	bsf	3986,4,c	;volatile
 13951                           
 13952                           ; BSR set to: 15
 13953                           ;easat2_init_initialize.c: 77: TRISAbits.TRISA5 = 1;
 13954  00358A  8A92               	bsf	3986,5,c	;volatile
 13955                           
 13956                           ; BSR set to: 15
 13957                           ;easat2_init_initialize.c: 84: ANSELAbits.ANSA0 = 1;
 13958  00358C  010F               	movlb	15	; () banked
 13959  00358E  8138               	bsf	56,0,b	;volatile
 13960                           
 13961                           ; BSR set to: 15
 13962                           ;easat2_init_initialize.c: 85: ANSELAbits.ANSA1 = 1;
 13963  003590  010F               	movlb	15	; () banked
 13964  003592  8338               	bsf	56,1,b	;volatile
 13965                           
 13966                           ; BSR set to: 15
 13967                           ;easat2_init_initialize.c: 86: ANSELAbits.ANSA2 = 1;
 13968  003594  010F               	movlb	15	; () banked
 13969  003596  8538               	bsf	56,2,b	;volatile
 13970                           
 13971                           ; BSR set to: 15
 13972                           ;easat2_init_initialize.c: 87: ANSELAbits.ANSA3 = 0;
 13973  003598  010F               	movlb	15	; () banked
 13974  00359A  9738               	bcf	56,3,b	;volatile
 13975                           
 13976                           ; BSR set to: 15
 13977                           ;easat2_init_initialize.c: 89: ANSELAbits.ANSA5 = 1;
 13978  00359C  010F               	movlb	15	; () banked
 13979  00359E  8B38               	bsf	56,5,b	;volatile
 13980                           
 13981                           ; BSR set to: 15
 13982                           ;easat2_init_initialize.c: 93: LATAbits.LATA0 = 0;
 13983  0035A0  9089               	bcf	3977,0,c	;volatile
 13984                           
 13985                           ; BSR set to: 15
 13986                           ;easat2_init_initialize.c: 94: LATAbits.LATA1 = 0;
 13987  0035A2  9289               	bcf	3977,1,c	;volatile
 13988                           
 13989                           ; BSR set to: 15
 13990                           ;easat2_init_initialize.c: 95: LATAbits.LATA2 = 0;
 13991  0035A4  9489               	bcf	3977,2,c	;volatile
 13992                           
 13993                           ; BSR set to: 15
 13994                           ;easat2_init_initialize.c: 96: LATAbits.LATA3 = 0;
 13995  0035A6  9689               	bcf	3977,3,c	;volatile
 13996                           
 13997                           ; BSR set to: 15
 13998                           ;easat2_init_initialize.c: 97: LATAbits.LATA4 = 0;
 13999  0035A8  9889               	bcf	3977,4,c	;volatile
 14000                           
 14001                           ; BSR set to: 15
 14002                           ;easat2_init_initialize.c: 98: LATAbits.LATA5 = 0;
 14003  0035AA  9A89               	bcf	3977,5,c	;volatile
 14004                           
 14005                           ;easat2_init_initialize.c: 106: WPUB = 0b00000000;
 14006  0035AC  0E00               	movlw	0
 14007  0035AE  6E61               	movwf	3937,c	;volatile
 14008                           
 14009                           ; BSR set to: 15
 14010                           ;easat2_init_initialize.c: 107: RBPU = 0b11111111;
 14011  0035B0  8EF1               	bsf	intcon2,7,c	;volatile
 14012                           
 14013                           ; BSR set to: 15
 14014                           ;easat2_init_initialize.c: 111: TRISBbits.TRISB0 = 1;
 14015  0035B2  8093               	bsf	3987,0,c	;volatile
 14016                           
 14017                           ; BSR set to: 15
 14018                           ;easat2_init_initialize.c: 112: TRISBbits.TRISB1 = 0;
 14019  0035B4  9293               	bcf	3987,1,c	;volatile
 14020                           
 14021                           ; BSR set to: 15
 14022                           ;easat2_init_initialize.c: 113: TRISBbits.TRISB2 = 0;
 14023  0035B6  9493               	bcf	3987,2,c	;volatile
 14024                           
 14025                           ; BSR set to: 15
 14026                           ;easat2_init_initialize.c: 114: TRISBbits.TRISB3 = 0;
 14027  0035B8  9693               	bcf	3987,3,c	;volatile
 14028                           
 14029                           ; BSR set to: 15
 14030                           ;easat2_init_initialize.c: 115: TRISBbits.TRISB4 = 0;
 14031  0035BA  9893               	bcf	3987,4,c	;volatile
 14032                           
 14033                           ; BSR set to: 15
 14034                           ;easat2_init_initialize.c: 116: TRISBbits.TRISB5 = 0;
 14035  0035BC  9A93               	bcf	3987,5,c	;volatile
 14036                           
 14037                           ; BSR set to: 15
 14038                           ;easat2_init_initialize.c: 117: TRISBbits.TRISB6 = 0;
 14039  0035BE  9C93               	bcf	3987,6,c	;volatile
 14040                           
 14041                           ; BSR set to: 15
 14042                           ;easat2_init_initialize.c: 118: TRISBbits.TRISB7 = 0;
 14043  0035C0  9E93               	bcf	3987,7,c	;volatile
 14044                           
 14045                           ; BSR set to: 15
 14046                           ;easat2_init_initialize.c: 122: ANSELBbits.ANSB0 = 1;
 14047  0035C2  010F               	movlb	15	; () banked
 14048  0035C4  8139               	bsf	57,0,b	;volatile
 14049                           
 14050                           ; BSR set to: 15
 14051                           ;easat2_init_initialize.c: 123: ANSELBbits.ANSB1 = 0;
 14052  0035C6  010F               	movlb	15	; () banked
 14053  0035C8  9339               	bcf	57,1,b	;volatile
 14054                           
 14055                           ; BSR set to: 15
 14056                           ;easat2_init_initialize.c: 124: ANSELBbits.ANSB2 = 0;
 14057  0035CA  010F               	movlb	15	; () banked
 14058  0035CC  9539               	bcf	57,2,b	;volatile
 14059                           
 14060                           ; BSR set to: 15
 14061                           ;easat2_init_initialize.c: 125: ANSELBbits.ANSB3 = 0;
 14062  0035CE  010F               	movlb	15	; () banked
 14063  0035D0  9739               	bcf	57,3,b	;volatile
 14064                           
 14065                           ; BSR set to: 15
 14066                           ;easat2_init_initialize.c: 127: ANSELBbits.ANSB5 = 0;
 14067  0035D2  010F               	movlb	15	; () banked
 14068  0035D4  9B39               	bcf	57,5,b	;volatile
 14069                           
 14070                           ; BSR set to: 15
 14071                           ;easat2_init_initialize.c: 131: LATBbits.LATB0 = 0;
 14072  0035D6  908A               	bcf	3978,0,c	;volatile
 14073                           
 14074                           ; BSR set to: 15
 14075                           ;easat2_init_initialize.c: 132: LATBbits.LATB1 = 0;
 14076  0035D8  928A               	bcf	3978,1,c	;volatile
 14077                           
 14078                           ; BSR set to: 15
 14079                           ;easat2_init_initialize.c: 133: LATBbits.LATB2 = 0;
 14080  0035DA  948A               	bcf	3978,2,c	;volatile
 14081                           
 14082                           ; BSR set to: 15
 14083                           ;easat2_init_initialize.c: 134: LATBbits.LATB3 = 0;
 14084  0035DC  968A               	bcf	3978,3,c	;volatile
 14085                           
 14086                           ; BSR set to: 15
 14087                           ;easat2_init_initialize.c: 135: LATBbits.LATB4 = 0;
 14088  0035DE  988A               	bcf	3978,4,c	;volatile
 14089                           
 14090                           ; BSR set to: 15
 14091                           ;easat2_init_initialize.c: 136: LATBbits.LATB5 = 0;
 14092  0035E0  9A8A               	bcf	3978,5,c	;volatile
 14093                           
 14094                           ; BSR set to: 15
 14095                           ;easat2_init_initialize.c: 140: TRISDbits.TRISD0 = 0;
 14096  0035E2  9095               	bcf	3989,0,c	;volatile
 14097                           
 14098                           ; BSR set to: 15
 14099                           ;easat2_init_initialize.c: 141: TRISDbits.TRISD1 = 0;
 14100  0035E4  9295               	bcf	3989,1,c	;volatile
 14101                           
 14102                           ; BSR set to: 15
 14103                           ;easat2_init_initialize.c: 142: TRISDbits.TRISD2 = 0;
 14104  0035E6  9495               	bcf	3989,2,c	;volatile
 14105                           
 14106                           ; BSR set to: 15
 14107                           ;easat2_init_initialize.c: 143: TRISDbits.TRISD3 = 0;
 14108  0035E8  9695               	bcf	3989,3,c	;volatile
 14109                           
 14110                           ; BSR set to: 15
 14111                           ;easat2_init_initialize.c: 144: TRISDbits.TRISD4 = 0;
 14112  0035EA  9895               	bcf	3989,4,c	;volatile
 14113                           
 14114                           ; BSR set to: 15
 14115                           ;easat2_init_initialize.c: 145: TRISDbits.TRISD5 = 0;
 14116  0035EC  9A95               	bcf	3989,5,c	;volatile
 14117                           
 14118                           ; BSR set to: 15
 14119                           ;easat2_init_initialize.c: 146: TRISDbits.TRISD6 = 0;
 14120  0035EE  9C95               	bcf	3989,6,c	;volatile
 14121                           
 14122                           ; BSR set to: 15
 14123                           ;easat2_init_initialize.c: 147: TRISDbits.TRISD7 = 0;
 14124  0035F0  9E95               	bcf	3989,7,c	;volatile
 14125                           
 14126                           ; BSR set to: 15
 14127                           ;easat2_init_initialize.c: 151: ANSELDbits.ANSD0 = 0;
 14128  0035F2  010F               	movlb	15	; () banked
 14129  0035F4  913B               	bcf	59,0,b	;volatile
 14130                           
 14131                           ; BSR set to: 15
 14132                           ;easat2_init_initialize.c: 152: ANSELDbits.ANSD1 = 0;
 14133  0035F6  010F               	movlb	15	; () banked
 14134  0035F8  933B               	bcf	59,1,b	;volatile
 14135                           
 14136                           ; BSR set to: 15
 14137                           ;easat2_init_initialize.c: 153: ANSELDbits.ANSD2 = 0;
 14138  0035FA  010F               	movlb	15	; () banked
 14139  0035FC  953B               	bcf	59,2,b	;volatile
 14140                           
 14141                           ; BSR set to: 15
 14142                           ;easat2_init_initialize.c: 154: ANSELDbits.ANSD3 = 0;
 14143  0035FE  010F               	movlb	15	; () banked
 14144  003600  973B               	bcf	59,3,b	;volatile
 14145                           
 14146                           ; BSR set to: 15
 14147                           ;easat2_init_initialize.c: 155: ANSELDbits.ANSD4 = 0;
 14148  003602  010F               	movlb	15	; () banked
 14149  003604  993B               	bcf	59,4,b	;volatile
 14150                           
 14151                           ; BSR set to: 15
 14152                           ;easat2_init_initialize.c: 156: ANSELDbits.ANSD5 = 0;
 14153  003606  010F               	movlb	15	; () banked
 14154  003608  9B3B               	bcf	59,5,b	;volatile
 14155                           
 14156                           ; BSR set to: 15
 14157                           ;easat2_init_initialize.c: 157: ANSELDbits.ANSD6 = 0;
 14158  00360A  010F               	movlb	15	; () banked
 14159  00360C  9D3B               	bcf	59,6,b	;volatile
 14160                           
 14161                           ; BSR set to: 15
 14162                           ;easat2_init_initialize.c: 158: ANSELDbits.ANSD7 = 0;
 14163  00360E  010F               	movlb	15	; () banked
 14164  003610  9F3B               	bcf	59,7,b	;volatile
 14165                           
 14166                           ; BSR set to: 15
 14167                           ;easat2_init_initialize.c: 162: LATDbits.LATD0 = 0;
 14168  003612  908C               	bcf	3980,0,c	;volatile
 14169                           
 14170                           ; BSR set to: 15
 14171                           ;easat2_init_initialize.c: 163: LATDbits.LATD1 = 0;
 14172  003614  928C               	bcf	3980,1,c	;volatile
 14173                           
 14174                           ; BSR set to: 15
 14175                           ;easat2_init_initialize.c: 164: LATDbits.LATD2 = 0;
 14176  003616  948C               	bcf	3980,2,c	;volatile
 14177                           
 14178                           ; BSR set to: 15
 14179                           ;easat2_init_initialize.c: 165: LATDbits.LATD3 = 0;
 14180  003618  968C               	bcf	3980,3,c	;volatile
 14181                           
 14182                           ; BSR set to: 15
 14183                           ;easat2_init_initialize.c: 166: LATDbits.LATD4 = 0;
 14184  00361A  988C               	bcf	3980,4,c	;volatile
 14185                           
 14186                           ; BSR set to: 15
 14187                           ;easat2_init_initialize.c: 167: LATDbits.LATD5 = 0;
 14188  00361C  9A8C               	bcf	3980,5,c	;volatile
 14189                           
 14190                           ; BSR set to: 15
 14191                           ;easat2_init_initialize.c: 168: LATDbits.LATD6 = 0;
 14192  00361E  9C8C               	bcf	3980,6,c	;volatile
 14193                           
 14194                           ; BSR set to: 15
 14195                           ;easat2_init_initialize.c: 169: LATDbits.LATD7 = 0;
 14196  003620  9E8C               	bcf	3980,7,c	;volatile
 14197                           
 14198                           ; BSR set to: 15
 14199  003622  0012               	return		;funcret
 14200  003624                     __end_of_init_io_initialize:
 14201                           	opt stack 0
 14202                           tosu	equ	0xFFF
 14203                           tosh	equ	0xFFE
 14204                           tosl	equ	0xFFD
 14205                           pclath	equ	0xFFA
 14206                           tblptru	equ	0xFF8
 14207                           tblptrh	equ	0xFF7
 14208                           tblptrl	equ	0xFF6
 14209                           tablat	equ	0xFF5
 14210                           prodh	equ	0xFF4
 14211                           prodl	equ	0xFF3
 14212                           intcon	equ	0xFF2
 14213                           intcon2	equ	0xFF1
 14214                           indf0	equ	0xFEF
 14215                           postinc0	equ	0xFEE
 14216                           fsr0h	equ	0xFEA
 14217                           fsr0l	equ	0xFE9
 14218                           wreg	equ	0xFE8
 14219                           indf1	equ	0xFE7
 14220                           postdec1	equ	0xFE5
 14221                           fsr1h	equ	0xFE2
 14222                           fsr1l	equ	0xFE1
 14223                           indf2	equ	0xFDF
 14224                           postinc2	equ	0xFDE
 14225                           postdec2	equ	0xFDD
 14226                           fsr2h	equ	0xFDA
 14227                           fsr2l	equ	0xFD9
 14228                           status	equ	0xFD8
 14229                           
 14230 ;; *************** function _low_priority_int *****************
 14231 ;; Defined at:
 14232 ;;		line 313 in file "easat2_func_interrupts.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;		None
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      void 
 14239 ;; Registers used:
 14240 ;;		None
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14246 ;;      Params:         0       0       0       0       0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0
 14248 ;;      Temps:          0      17       0       0       0       0       0
 14249 ;;      Totals:         0      17       0       0       0       0       0
 14250 ;;Total ram usage:       17 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:    1
 14253 ;; This function calls:
 14254 ;;		Nothing
 14255 ;; This function is called by:
 14256 ;;		Interrupt level 1
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	intcodelo
 14261  000018                     __pintcodelo:
 14262                           	opt stack 0
 14263  000018                     _low_priority_int:
 14264                           	opt stack 22
 14265                           
 14266                           ; BSR set to: 15
 14267                           ;incstack = 0
 14268  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14269  00001A  CFD8 F060          	movff	status,??_low_priority_int
 14270  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 14271  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 14272  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 14273  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 14274  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 14275  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 14276  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 14277  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 14278  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 14279  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 14280  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 14281  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 14282  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 14283  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 14284  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 14285  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 14286  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 14287  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 14288  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 14289  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 14290  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 14291  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 14292  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 14293  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 14294  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 14295  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 14296  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 14297  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 14298  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 14299  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 14300  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 14301  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 14302  00009E  C060  FFD8         	movff	??_low_priority_int,status
 14303  0000A2  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14304  0000A4  0010               	retfie	
 14305  0000A6                     __end_of_low_priority_int:
 14306                           	opt stack 0
 14307                           tosu	equ	0xFFF
 14308                           tosh	equ	0xFFE
 14309                           tosl	equ	0xFFD
 14310                           pclatu	equ	0xFFB
 14311                           pclath	equ	0xFFA
 14312                           tblptru	equ	0xFF8
 14313                           tblptrh	equ	0xFF7
 14314                           tblptrl	equ	0xFF6
 14315                           tablat	equ	0xFF5
 14316                           prodh	equ	0xFF4
 14317                           prodl	equ	0xFF3
 14318                           intcon	equ	0xFF2
 14319                           intcon2	equ	0xFF1
 14320                           indf0	equ	0xFEF
 14321                           postinc0	equ	0xFEE
 14322                           fsr0h	equ	0xFEA
 14323                           fsr0l	equ	0xFE9
 14324                           wreg	equ	0xFE8
 14325                           indf1	equ	0xFE7
 14326                           postdec1	equ	0xFE5
 14327                           fsr1h	equ	0xFE2
 14328                           fsr1l	equ	0xFE1
 14329                           bsr	equ	0xFE0
 14330                           indf2	equ	0xFDF
 14331                           postinc2	equ	0xFDE
 14332                           postdec2	equ	0xFDD
 14333                           fsr2h	equ	0xFDA
 14334                           fsr2l	equ	0xFD9
 14335                           status	equ	0xFD8
 14336                           
 14337 ;; *************** function _high_priority_int *****************
 14338 ;; Defined at:
 14339 ;;		line 19 in file "easat2_func_interrupts.c"
 14340 ;; Parameters:    Size  Location     Type
 14341 ;;		None
 14342 ;; Auto vars:     Size  Location     Type
 14343 ;;  sample          2   23[COMRAM] unsigned int 
 14344 ;;  received_bit    2   21[COMRAM] unsigned int 
 14345 ;;  oldest_sampl    2   19[COMRAM] unsigned int 
 14346 ;; Return value:  Size  Location     Type
 14347 ;;                  1    wreg      void 
 14348 ;; Registers used:
 14349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14350 ;; Tracked objects:
 14351 ;;		On entry : 0/0
 14352 ;;		On exit  : 0/0
 14353 ;;		Unchanged: 0/0
 14354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14355 ;;      Params:         0       0       0       0       0       0       0
 14356 ;;      Locals:         6       0       0       0       0       0       0
 14357 ;;      Temps:         19       0       0       0       0       0       0
 14358 ;;      Totals:        25       0       0       0       0       0       0
 14359 ;;Total ram usage:       25 bytes
 14360 ;; Hardware stack levels used:    1
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		Interrupt level 2
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	intcode
 14369  000008                     __pintcode:
 14370                           	opt stack 0
 14371  000008                     _high_priority_int:
 14372                           	opt stack 22
 14373                           
 14374                           ;incstack = 0
 14375  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14376  00000A  EFB7  F00F         	goto	int_func
 14377                           tosu	equ	0xFFF
 14378                           tosh	equ	0xFFE
 14379                           tosl	equ	0xFFD
 14380                           pclatu	equ	0xFFB
 14381                           pclath	equ	0xFFA
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           intcon	equ	0xFF2
 14389                           intcon2	equ	0xFF1
 14390                           indf0	equ	0xFEF
 14391                           postinc0	equ	0xFEE
 14392                           fsr0h	equ	0xFEA
 14393                           fsr0l	equ	0xFE9
 14394                           wreg	equ	0xFE8
 14395                           indf1	equ	0xFE7
 14396                           postdec1	equ	0xFE5
 14397                           fsr1h	equ	0xFE2
 14398                           fsr1l	equ	0xFE1
 14399                           bsr	equ	0xFE0
 14400                           indf2	equ	0xFDF
 14401                           postinc2	equ	0xFDE
 14402                           postdec2	equ	0xFDD
 14403                           fsr2h	equ	0xFDA
 14404                           fsr2l	equ	0xFD9
 14405                           status	equ	0xFD8
 14406                           
 14407                           	psect	intcode_body
 14408  001F6E                     __pintcode_body:
 14409                           	opt stack 22
 14410  001F6E                     int_func:
 14411                           	opt stack 22
 14412  001F6E  CFFA F006          	movff	pclath,??_high_priority_int+5
 14413  001F72  CFFB F007          	movff	pclatu,??_high_priority_int+6
 14414  001F76  CFE9 F008          	movff	fsr0l,??_high_priority_int+7
 14415  001F7A  CFEA F009          	movff	fsr0h,??_high_priority_int+8
 14416  001F7E  CFE1 F00A          	movff	fsr1l,??_high_priority_int+9
 14417  001F82  CFE2 F00B          	movff	fsr1h,??_high_priority_int+10
 14418  001F86  CFD9 F00C          	movff	fsr2l,??_high_priority_int+11
 14419  001F8A  CFDA F00D          	movff	fsr2h,??_high_priority_int+12
 14420  001F8E  CFF3 F00E          	movff	prodl,??_high_priority_int+13
 14421  001F92  CFF4 F00F          	movff	prodh,??_high_priority_int+14
 14422  001F96  CFF6 F010          	movff	tblptrl,??_high_priority_int+15
 14423  001F9A  CFF7 F011          	movff	tblptrh,??_high_priority_int+16
 14424  001F9E  CFF8 F012          	movff	tblptru,??_high_priority_int+17
 14425  001FA2  CFF5 F013          	movff	tablat,??_high_priority_int+18
 14426                           
 14427                           ;easat2_func_interrupts.c: 21: static int tmr1_interrupt_number = 0;
 14428                           ;easat2_func_interrupts.c: 23: static unsigned int samples[128];
 14429                           ;easat2_func_interrupts.c: 24: static unsigned int sample_position = 0;
 14430                           ;easat2_func_interrupts.c: 25: static unsigned short long noise_avg_value = 32000;
 14431                           ;easat2_func_interrupts.c: 26: static unsigned int activation_threshold = 32000;
 14432                           ;easat2_func_interrupts.c: 27: static unsigned int times_threshold_exceeded = 0;
 14433                           ;easat2_func_interrupts.c: 28: static unsigned int cycles_transmitter_active = 0;
 14434  001FA6  0E00               	movlw	0
 14435  001FA8  6E19               	movwf	high_priority_int@sample+1,c
 14436  001FAA  0E00               	movlw	0
 14437  001FAC  6E18               	movwf	high_priority_int@sample,c
 14438  001FAE  0E00               	movlw	0
 14439  001FB0  6E15               	movwf	high_priority_int@oldest_sample+1,c
 14440  001FB2  0E00               	movlw	0
 14441  001FB4  6E14               	movwf	high_priority_int@oldest_sample,c
 14442                           
 14443                           ;easat2_func_interrupts.c: 37: static unsigned int previous_signal_level = 0;
 14444                           ;easat2_func_interrupts.c: 38: static unsigned int current_signal_level = 0;
 14445                           ;easat2_func_interrupts.c: 40: unsigned int received_bit = 0;
 14446  001FB6  0E00               	movlw	0
 14447  001FB8  6E17               	movwf	high_priority_int@received_bit+1,c
 14448  001FBA  0E00               	movlw	0
 14449  001FBC  6E16               	movwf	high_priority_int@received_bit,c
 14450                           
 14451                           ;easat2_func_interrupts.c: 41: static unsigned int previous_received_bit = 0;
 14452                           ;easat2_func_interrupts.c: 43: static int decoder_status = 0;
 14453                           ;easat2_func_interrupts.c: 45: static int bit_to_process = 0;
 14454                           ;easat2_func_interrupts.c: 48: static int num_bits_received = 0;
 14455                           ;easat2_func_interrupts.c: 51: if (PIR1bits.TMR2IF) {
 14456  001FBE  A29E               	btfss	3998,1,c	;volatile
 14457  001FC0  D002               	goto	i2l488
 14458                           
 14459                           ;easat2_func_interrupts.c: 55: PIR1bits.TMR2IF = 0;
 14460  001FC2  929E               	bcf	3998,1,c	;volatile
 14461                           
 14462                           ;easat2_func_interrupts.c: 57: } else {
 14463  001FC4  D153               	goto	i2l518
 14464  001FC6                     i2l488:
 14465                           
 14466                           ;easat2_func_interrupts.c: 61: if (PIR1bits.TMR1IF) {
 14467  001FC6  A09E               	btfss	3998,0,c	;volatile
 14468  001FC8  D151               	goto	i2l518
 14469                           
 14470                           ;easat2_func_interrupts.c: 65: TMR1H = 0xEC;
 14471  001FCA  0EEC               	movlw	236
 14472  001FCC  6ECF               	movwf	4047,c	;volatile
 14473                           
 14474                           ;easat2_func_interrupts.c: 66: TMR1L = 0x77 ; 60535;
 14475  001FCE  0E77               	movlw	119
 14476  001FD0  6ECE               	movwf	4046,c	;volatile
 14477                           
 14478                           ;easat2_func_interrupts.c: 70: (PORTDbits.RD5) = !(PORTDbits.RD5);
 14479  001FD2  BA83               	btfsc	3971,5,c	;volatile
 14480  001FD4  D003               	goto	i2u513_40
 14481  001FD6  6A01               	clrf	??_high_priority_int& (0+255),c
 14482  001FD8  2A01               	incf	??_high_priority_int& (0+255),f,c
 14483  001FDA  D001               	goto	i2u514_48
 14484  001FDC                     i2u513_40:
 14485  001FDC  6A01               	clrf	??_high_priority_int& (0+255),c
 14486  001FDE                     i2u514_48:
 14487  001FDE  3A01               	swapf	??_high_priority_int,f,c
 14488  001FE0  4601               	rlncf	??_high_priority_int,f,c
 14489  001FE2  5083               	movf	3971,w,c	;volatile
 14490  001FE4  1801               	xorwf	??_high_priority_int,w,c
 14491  001FE6  0BDF               	andlw	-33
 14492  001FE8  1801               	xorwf	??_high_priority_int,w,c
 14493  001FEA  6E83               	movwf	3971,c	;volatile
 14494                           
 14495                           ;easat2_func_interrupts.c: 74: tmr1_interrupt_number++;
 14496  001FEC  4A3C               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 14497  001FEE  2A3D               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 14498                           
 14499                           ;easat2_func_interrupts.c: 78: if (tmr1_interrupt_number == 50 ||
 14500                           ;easat2_func_interrupts.c: 79: ((tmr1_interrupt_number == 10) && (global_command_pending
      +                          _check == 1))) {
 14501  001FF0  0E32               	movlw	50
 14502  001FF2  183C               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 14503  001FF4  103D               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 14504  001FF6  B4D8               	btfsc	status,2,c
 14505  001FF8  D009               	goto	i2l5034
 14506  001FFA  0E0A               	movlw	10
 14507  001FFC  183C               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 14508  001FFE  103D               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 14509  002000  A4D8               	btfss	status,2,c
 14510  002002  D015               	goto	i2l5038
 14511  002004  043E               	decf	_global_command_pending_check,w,c	;volatile
 14512  002006  103F               	iorwf	_global_command_pending_check+1,w,c	;volatile
 14513  002008  A4D8               	btfss	status,2,c
 14514  00200A  D011               	goto	i2l5038
 14515  00200C                     i2l5034:
 14516                           
 14517                           ;easat2_func_interrupts.c: 82: (PORTDbits.RD4) = !(PORTDbits.RD4);
 14518  00200C  B883               	btfsc	3971,4,c	;volatile
 14519  00200E  D003               	goto	i2u518_40
 14520  002010  6A01               	clrf	??_high_priority_int& (0+255),c
 14521  002012  2A01               	incf	??_high_priority_int& (0+255),f,c
 14522  002014  D001               	goto	i2u519_48
 14523  002016                     i2u518_40:
 14524  002016  6A01               	clrf	??_high_priority_int& (0+255),c
 14525  002018                     i2u519_48:
 14526  002018  3A01               	swapf	??_high_priority_int,f,c
 14527  00201A  5083               	movf	3971,w,c	;volatile
 14528  00201C  1801               	xorwf	??_high_priority_int,w,c
 14529  00201E  0BEF               	andlw	-17
 14530  002020  1801               	xorwf	??_high_priority_int,w,c
 14531  002022  6E83               	movwf	3971,c	;volatile
 14532  002024  0004               	clrwdt		;# 
 14533                           
 14534                           ;easat2_func_interrupts.c: 91: tmr1_interrupt_number = 0;
 14535  002026  0E00               	movlw	0
 14536  002028  6E3D               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 14537  00202A  0E00               	movlw	0
 14538  00202C  6E3C               	movwf	high_priority_int@tmr1_interrupt_number,c
 14539  00202E                     i2l5038:
 14540                           
 14541                           ;easat2_func_interrupts.c: 93: }
 14542                           ;easat2_func_interrupts.c: 106: ADCON0bits.CHS = 4;
 14543  00202E  94C2               	bcf	4034,2,c	;volatile
 14544  002030  96C2               	bcf	4034,3,c	;volatile
 14545  002032  88C2               	bsf	4034,4,c	;volatile
 14546  002034  9AC2               	bcf	4034,5,c	;volatile
 14547  002036  9CC2               	bcf	4034,6,c	;volatile
 14548                           
 14549                           ;easat2_func_interrupts.c: 107: ADCON0bits.ADON = 1;
 14550  002038  80C2               	bsf	4034,0,c	;volatile
 14551                           
 14552                           ;easat2_func_interrupts.c: 108: PIR1bits.ADIF = 0;
 14553  00203A  9C9E               	bcf	3998,6,c	;volatile
 14554                           
 14555                           ;easat2_func_interrupts.c: 110: ADCON0bits.GO = 1;
 14556  00203C  82C2               	bsf	4034,1,c	;volatile
 14557  00203E                     i2l494:
 14558  00203E  AC9E               	btfss	3998,6,c	;volatile
 14559  002040  D7FE               	goto	i2l494
 14560                           
 14561                           ;easat2_func_interrupts.c: 113: sample = ADRES;
 14562  002042  CFC3 F018          	movff	4035,high_priority_int@sample	;volatile
 14563  002046  CFC4 F019          	movff	4036,high_priority_int@sample+1	;volatile
 14564                           
 14565                           ;easat2_func_interrupts.c: 115: PIR1bits.ADIF = 0;
 14566  00204A  9C9E               	bcf	3998,6,c	;volatile
 14567                           
 14568                           ;easat2_func_interrupts.c: 116: ADCON0bits.ADON = 0;
 14569  00204C  90C2               	bcf	4034,0,c	;volatile
 14570                           
 14571                           ;easat2_func_interrupts.c: 118: if (is_transmitter_active) cycles_transmitter_active++;
 14572  00204E  5040               	movf	high_priority_int@is_transmitter_active,w,c
 14573  002050  B4D8               	btfsc	status,2,c
 14574  002052  D002               	goto	i2l5050
 14575  002054  4A36               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 14576  002056  2A37               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 14577  002058                     i2l5050:
 14578                           
 14579                           ;easat2_func_interrupts.c: 121: previous_signal_level = current_signal_level;
 14580  002058  C02E  F030         	movff	high_priority_int@current_signal_level,high_priority_int@previous_signal_level
 14581  00205C  C02F  F031         	movff	high_priority_int@current_signal_level+1,high_priority_int@previous_signal_level+
      +                          1
 14582                           
 14583                           ;easat2_func_interrupts.c: 126: if (sample > activation_threshold) {
 14584  002060  5018               	movf	high_priority_int@sample,w,c
 14585  002062  5C44               	subwf	high_priority_int@activation_threshold,w,c
 14586  002064  5019               	movf	high_priority_int@sample+1,w,c
 14587  002066  5845               	subwfb	high_priority_int@activation_threshold+1,w,c
 14588  002068  B0D8               	btfsc	status,0,c
 14589  00206A  D018               	goto	i2l5064
 14590                           
 14591                           ;easat2_func_interrupts.c: 129: current_signal_level = 1;
 14592  00206C  0E00               	movlw	0
 14593  00206E  6E2F               	movwf	high_priority_int@current_signal_level+1,c
 14594  002070  0E01               	movlw	1
 14595  002072  6E2E               	movwf	high_priority_int@current_signal_level,c
 14596                           
 14597                           ;easat2_func_interrupts.c: 132: times_threshold_exceeded++;
 14598  002074  4A38               	infsnz	high_priority_int@times_threshold_exceeded,f,c
 14599  002076  2A39               	incf	high_priority_int@times_threshold_exceeded+1,f,c
 14600                           
 14601                           ;easat2_func_interrupts.c: 134: if (times_threshold_exceeded >= 200) {
 14602  002078  5039               	movf	high_priority_int@times_threshold_exceeded+1,w,c
 14603  00207A  E104               	bnz	i2u523_40
 14604  00207C  0EC8               	movlw	200
 14605  00207E  5C38               	subwf	high_priority_int@times_threshold_exceeded,w,c
 14606  002080  A0D8               	btfss	status,0,c
 14607  002082  D098               	goto	i2l5100
 14608  002084                     i2u523_40:
 14609                           
 14610                           ;easat2_func_interrupts.c: 137: (PORTBbits.RB1) = 1;
 14611  002084  8281               	bsf	3969,1,c	;volatile
 14612                           
 14613                           ;easat2_func_interrupts.c: 139: is_transmitter_active = 1;
 14614  002086  0E01               	movlw	1
 14615  002088  6E40               	movwf	high_priority_int@is_transmitter_active,c
 14616                           
 14617                           ;easat2_func_interrupts.c: 140: cycles_transmitter_active = 0;
 14618  00208A  0E00               	movlw	0
 14619  00208C  6E37               	movwf	high_priority_int@cycles_transmitter_active+1,c
 14620  00208E  0E00               	movlw	0
 14621  002090  6E36               	movwf	high_priority_int@cycles_transmitter_active,c
 14622                           
 14623                           ;easat2_func_interrupts.c: 142: times_threshold_exceeded = 0;
 14624  002092  0E00               	movlw	0
 14625  002094  6E39               	movwf	high_priority_int@times_threshold_exceeded+1,c
 14626  002096  0E00               	movlw	0
 14627  002098  6E38               	movwf	high_priority_int@times_threshold_exceeded,c
 14628                           
 14629                           ;easat2_func_interrupts.c: 144: }
 14630                           ;easat2_func_interrupts.c: 146: } else {
 14631  00209A  D08C               	goto	i2l5100
 14632  00209C                     i2l5064:
 14633                           
 14634                           ;easat2_func_interrupts.c: 149: current_signal_level = 0;
 14635  00209C  0E00               	movlw	0
 14636  00209E  6E2F               	movwf	high_priority_int@current_signal_level+1,c
 14637  0020A0  0E00               	movlw	0
 14638  0020A2  6E2E               	movwf	high_priority_int@current_signal_level,c
 14639                           
 14640                           ;easat2_func_interrupts.c: 152: times_threshold_exceeded = 0;
 14641  0020A4  0E00               	movlw	0
 14642  0020A6  6E39               	movwf	high_priority_int@times_threshold_exceeded+1,c
 14643  0020A8  0E00               	movlw	0
 14644  0020AA  6E38               	movwf	high_priority_int@times_threshold_exceeded,c
 14645                           
 14646                           ;easat2_func_interrupts.c: 154: if (cycles_transmitter_active >= 12000) {
 14647  0020AC  0EE0               	movlw	224
 14648  0020AE  5C36               	subwf	high_priority_int@cycles_transmitter_active,w,c
 14649  0020B0  0E2E               	movlw	46
 14650  0020B2  5837               	subwfb	high_priority_int@cycles_transmitter_active+1,w,c
 14651  0020B4  A0D8               	btfss	status,0,c
 14652  0020B6  D003               	goto	i2l5072
 14653                           
 14654                           ;easat2_func_interrupts.c: 156: (PORTBbits.RB1) = 0;
 14655  0020B8  9281               	bcf	3969,1,c	;volatile
 14656                           
 14657                           ;easat2_func_interrupts.c: 157: is_transmitter_active = 0;
 14658  0020BA  0E00               	movlw	0
 14659  0020BC  6E40               	movwf	high_priority_int@is_transmitter_active,c
 14660  0020BE                     i2l5072:
 14661                           
 14662                           ;easat2_func_interrupts.c: 158: }
 14663                           ;easat2_func_interrupts.c: 160: if (valid_samples == 128) oldest_sample = samples[sample
      +                          _position];
 14664  0020BE  0E80               	movlw	128
 14665  0020C0  1832               	xorwf	high_priority_int@valid_samples,w,c
 14666  0020C2  1033               	iorwf	high_priority_int@valid_samples+1,w,c
 14667  0020C4  A4D8               	btfss	status,2,c
 14668  0020C6  D00E               	goto	i2l5076
 14669  0020C8  90D8               	bcf	status,0,c
 14670  0020CA  343A               	rlcf	high_priority_int@sample_position,w,c
 14671  0020CC  6ED9               	movwf	fsr2l,c
 14672  0020CE  343B               	rlcf	high_priority_int@sample_position+1,w,c
 14673  0020D0  6EDA               	movwf	fsr2h,c
 14674  0020D2  0E00               	movlw	low high_priority_int@samples
 14675  0020D4  26D9               	addwf	fsr2l,f,c
 14676  0020D6  0E02               	movlw	high high_priority_int@samples
 14677  0020D8  22DA               	addwfc	fsr2h,f,c
 14678  0020DA  CFDE F014          	movff	postinc2,high_priority_int@oldest_sample
 14679  0020DE  CFDD F015          	movff	postdec2,high_priority_int@oldest_sample+1
 14680  0020E2  D004               	goto	i2l5078
 14681  0020E4                     i2l5076:
 14682                           
 14683                           ;easat2_func_interrupts.c: 161: else oldest_sample = 0;
 14684  0020E4  0E00               	movlw	0
 14685  0020E6  6E15               	movwf	high_priority_int@oldest_sample+1,c
 14686  0020E8  0E00               	movlw	0
 14687  0020EA  6E14               	movwf	high_priority_int@oldest_sample,c
 14688  0020EC                     i2l5078:
 14689                           
 14690                           ;easat2_func_interrupts.c: 163: samples[sample_position] = sample;
 14691  0020EC  90D8               	bcf	status,0,c
 14692  0020EE  343A               	rlcf	high_priority_int@sample_position,w,c
 14693  0020F0  6ED9               	movwf	fsr2l,c
 14694  0020F2  343B               	rlcf	high_priority_int@sample_position+1,w,c
 14695  0020F4  6EDA               	movwf	fsr2h,c
 14696  0020F6  0E00               	movlw	low high_priority_int@samples
 14697  0020F8  26D9               	addwf	fsr2l,f,c
 14698  0020FA  0E02               	movlw	high high_priority_int@samples
 14699  0020FC  22DA               	addwfc	fsr2h,f,c
 14700  0020FE  C018  FFDE         	movff	high_priority_int@sample,postinc2
 14701  002102  C019  FFDD         	movff	high_priority_int@sample+1,postdec2
 14702                           
 14703                           ;easat2_func_interrupts.c: 166: if (valid_samples < 128) valid_samples++;
 14704  002106  5033               	movf	high_priority_int@valid_samples+1,w,c
 14705  002108  E106               	bnz	i2l504
 14706  00210A  0E80               	movlw	128
 14707  00210C  5C32               	subwf	high_priority_int@valid_samples,w,c
 14708  00210E  B0D8               	btfsc	status,0,c
 14709  002110  D002               	goto	i2l504
 14710  002112  4A32               	infsnz	high_priority_int@valid_samples,f,c
 14711  002114  2A33               	incf	high_priority_int@valid_samples+1,f,c
 14712  002116                     i2l504:
 14713                           
 14714                           ;easat2_func_interrupts.c: 169: sample_position++;
 14715  002116  4A3A               	infsnz	high_priority_int@sample_position,f,c
 14716  002118  2A3B               	incf	high_priority_int@sample_position+1,f,c
 14717                           
 14718                           ;easat2_func_interrupts.c: 172: if (sample_position == 128) sample_position = 0;
 14719  00211A  0E80               	movlw	128
 14720  00211C  183A               	xorwf	high_priority_int@sample_position,w,c
 14721  00211E  103B               	iorwf	high_priority_int@sample_position+1,w,c
 14722  002120  A4D8               	btfss	status,2,c
 14723  002122  D004               	goto	i2l5088
 14724  002124  0E00               	movlw	0
 14725  002126  6E3B               	movwf	high_priority_int@sample_position+1,c
 14726  002128  0E00               	movlw	0
 14727  00212A  6E3A               	movwf	high_priority_int@sample_position,c
 14728  00212C                     i2l5088:
 14729                           
 14730                           ;easat2_func_interrupts.c: 175: total_add = total_add + sample - oldest_sample;
 14731  00212C  C014  F001         	movff	high_priority_int@oldest_sample,??_high_priority_int
 14732  002130  C015  F002         	movff	high_priority_int@oldest_sample+1,??_high_priority_int+1
 14733  002134  1E01               	comf	??_high_priority_int,f,c
 14734  002136  1E02               	comf	??_high_priority_int+1,f,c
 14735  002138  4A01               	infsnz	??_high_priority_int,f,c
 14736  00213A  2A02               	incf	??_high_priority_int+1,f,c
 14737  00213C  5034               	movf	high_priority_int@total_add,w,c
 14738  00213E  2601               	addwf	??_high_priority_int,f,c
 14739  002140  5035               	movf	high_priority_int@total_add+1,w,c
 14740  002142  2202               	addwfc	??_high_priority_int+1,f,c
 14741  002144  5018               	movf	high_priority_int@sample,w,c
 14742  002146  2401               	addwf	??_high_priority_int,w,c
 14743  002148  6E34               	movwf	high_priority_int@total_add,c
 14744  00214A  5019               	movf	high_priority_int@sample+1,w,c
 14745  00214C  2002               	addwfc	??_high_priority_int+1,w,c
 14746  00214E  6E35               	movwf	high_priority_int@total_add+1,c
 14747                           
 14748                           ;easat2_func_interrupts.c: 178: if (valid_samples == 128) {
 14749  002150  0E80               	movlw	128
 14750  002152  1832               	xorwf	high_priority_int@valid_samples,w,c
 14751  002154  1033               	iorwf	high_priority_int@valid_samples+1,w,c
 14752  002156  A4D8               	btfss	status,2,c
 14753  002158  D02D               	goto	i2l5100
 14754                           
 14755                           ;easat2_func_interrupts.c: 181: noise_avg_value = total_add;
 14756  00215A  C034  F041         	movff	high_priority_int@total_add,high_priority_int@noise_avg_value
 14757  00215E  C035  F042         	movff	high_priority_int@total_add+1,high_priority_int@noise_avg_value+1
 14758  002162  6A43               	clrf	high_priority_int@noise_avg_value+2,c
 14759                           
 14760                           ;easat2_func_interrupts.c: 183: noise_avg_value = noise_avg_value >> 7;
 14761  002164  0E07               	movlw	7
 14762  002166  6E01               	movwf	??_high_priority_int& (0+255),c
 14763  002168  C041  F002         	movff	high_priority_int@noise_avg_value,??_high_priority_int+1
 14764  00216C  C042  F003         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+2
 14765  002170  C043  F004         	movff	high_priority_int@noise_avg_value+2,??_high_priority_int+3
 14766  002174  2801               	incf	??_high_priority_int,w,c
 14767  002176  6E05               	movwf	(??_high_priority_int+4)& (0+255),c
 14768  002178  D004               	goto	i2u529_40
 14769  00217A                     i2u529_45:
 14770  00217A  90D8               	bcf	status,0,c
 14771  00217C  3204               	rrcf	??_high_priority_int+3,f,c
 14772  00217E  3203               	rrcf	??_high_priority_int+2,f,c
 14773  002180  3202               	rrcf	??_high_priority_int+1,f,c
 14774  002182                     i2u529_40:
 14775  002182  2E05               	decfsz	(??_high_priority_int+4)& (0+255),f,c
 14776  002184  D7FA               	goto	i2u529_45
 14777  002186  C002  F041         	movff	??_high_priority_int+1,high_priority_int@noise_avg_value
 14778  00218A  C003  F042         	movff	??_high_priority_int+2,high_priority_int@noise_avg_value+1
 14779  00218E  C004  F043         	movff	??_high_priority_int+3,high_priority_int@noise_avg_value+2
 14780                           
 14781                           ;easat2_func_interrupts.c: 188: activation_threshold = (1024 + noise_avg_value) << 1;
 14782  002192  C041  F001         	movff	high_priority_int@noise_avg_value,??_high_priority_int
 14783  002196  C042  F002         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+1
 14784  00219A  90D8               	bcf	status,0,c
 14785  00219C  3601               	rlcf	??_high_priority_int,f,c
 14786  00219E  3602               	rlcf	??_high_priority_int+1,f,c
 14787  0021A0  0E00               	movlw	0
 14788  0021A2  2401               	addwf	??_high_priority_int,w,c
 14789  0021A4  6E44               	movwf	high_priority_int@activation_threshold,c
 14790  0021A6  0E08               	movlw	8
 14791  0021A8  2002               	addwfc	??_high_priority_int+1,w,c
 14792  0021AA  6E45               	movwf	high_priority_int@activation_threshold+1,c
 14793                           
 14794                           ;easat2_func_interrupts.c: 189: activation_threshold = 50;
 14795  0021AC  0E00               	movlw	0
 14796  0021AE  6E45               	movwf	high_priority_int@activation_threshold+1,c
 14797  0021B0  0E32               	movlw	50
 14798  0021B2  6E44               	movwf	high_priority_int@activation_threshold,c
 14799  0021B4                     i2l5100:
 14800                           
 14801                           ;easat2_func_interrupts.c: 191: }
 14802                           ;easat2_func_interrupts.c: 193: }
 14803                           ;easat2_func_interrupts.c: 204: if (decoder_status == 0 && current_signal_level == 1) {
 14804  0021B4  502A               	movf	high_priority_int@decoder_status,w,c
 14805  0021B6  102B               	iorwf	high_priority_int@decoder_status+1,w,c
 14806  0021B8  A4D8               	btfss	status,2,c
 14807  0021BA  D00C               	goto	i2l5106
 14808  0021BC  042E               	decf	high_priority_int@current_signal_level,w,c
 14809  0021BE  102F               	iorwf	high_priority_int@current_signal_level+1,w,c
 14810  0021C0  A4D8               	btfss	status,2,c
 14811  0021C2  D008               	goto	i2l5106
 14812                           
 14813                           ;easat2_func_interrupts.c: 206: bit_to_process = 1;
 14814  0021C4  0E00               	movlw	0
 14815  0021C6  6E29               	movwf	high_priority_int@bit_to_process+1,c
 14816  0021C8  0E01               	movlw	1
 14817  0021CA  6E28               	movwf	high_priority_int@bit_to_process,c
 14818                           
 14819                           ;easat2_func_interrupts.c: 207: decoder_status = 1;
 14820  0021CC  0E00               	movlw	0
 14821  0021CE  6E2B               	movwf	high_priority_int@decoder_status+1,c
 14822  0021D0  0E01               	movlw	1
 14823  0021D2  6E2A               	movwf	high_priority_int@decoder_status,c
 14824  0021D4                     i2l5106:
 14825                           
 14826                           ;easat2_func_interrupts.c: 209: }
 14827                           ;easat2_func_interrupts.c: 211: if (bit_to_process) {
 14828  0021D4  5028               	movf	high_priority_int@bit_to_process,w,c
 14829  0021D6  1029               	iorwf	high_priority_int@bit_to_process+1,w,c
 14830  0021D8  B4D8               	btfsc	status,2,c
 14831  0021DA  D043               	goto	i2l5136
 14832                           
 14833                           ;easat2_func_interrupts.c: 213: if (previous_signal_level == 0 && current_signal_level =
      +                          = 1) {
 14834  0021DC  5030               	movf	high_priority_int@previous_signal_level,w,c
 14835  0021DE  1031               	iorwf	high_priority_int@previous_signal_level+1,w,c
 14836  0021E0  A4D8               	btfss	status,2,c
 14837  0021E2  D008               	goto	i2l5114
 14838  0021E4  042E               	decf	high_priority_int@current_signal_level,w,c
 14839  0021E6  102F               	iorwf	high_priority_int@current_signal_level+1,w,c
 14840  0021E8  A4D8               	btfss	status,2,c
 14841  0021EA  D004               	goto	i2l5114
 14842                           
 14843                           ;easat2_func_interrupts.c: 216: received_bit = 1;
 14844  0021EC  0E00               	movlw	0
 14845  0021EE  6E17               	movwf	high_priority_int@received_bit+1,c
 14846  0021F0  0E01               	movlw	1
 14847  0021F2  D00B               	goto	L7
 14848  0021F4                     i2l5114:
 14849                           
 14850                           ;easat2_func_interrupts.c: 220: if (previous_signal_level == 1 && current_signal_level =
      +                          = 0) {
 14851  0021F4  0430               	decf	high_priority_int@previous_signal_level,w,c
 14852  0021F6  1031               	iorwf	high_priority_int@previous_signal_level+1,w,c
 14853  0021F8  A4D8               	btfss	status,2,c
 14854  0021FA  D009               	goto	i2l5120
 14855  0021FC  502E               	movf	high_priority_int@current_signal_level,w,c
 14856  0021FE  102F               	iorwf	high_priority_int@current_signal_level+1,w,c
 14857  002200  A4D8               	btfss	status,2,c
 14858  002202  D005               	goto	i2l5120
 14859                           
 14860                           ;easat2_func_interrupts.c: 223: received_bit = 0;
 14861  002204  0E00               	movlw	0
 14862  002206  6E17               	movwf	high_priority_int@received_bit+1,c
 14863  002208  0E00               	movlw	0
 14864  00220A                     L7:
 14865  00220A  6E16               	movwf	high_priority_int@received_bit,c
 14866                           
 14867                           ;easat2_func_interrupts.c: 225: } else {
 14868  00220C  D00C               	goto	i2l5124
 14869  00220E                     i2l5120:
 14870                           
 14871                           ;easat2_func_interrupts.c: 228: received_bit = 2;
 14872  00220E  0E00               	movlw	0
 14873  002210  6E17               	movwf	high_priority_int@received_bit+1,c
 14874  002212  0E02               	movlw	2
 14875  002214  6E16               	movwf	high_priority_int@received_bit,c
 14876                           
 14877                           ;easat2_func_interrupts.c: 229: decoder_status = 0;
 14878  002216  0E00               	movlw	0
 14879  002218  6E2B               	movwf	high_priority_int@decoder_status+1,c
 14880  00221A  0E00               	movlw	0
 14881  00221C  6E2A               	movwf	high_priority_int@decoder_status,c
 14882                           
 14883                           ;easat2_func_interrupts.c: 230: bit_to_process = 0;
 14884  00221E  0E00               	movlw	0
 14885  002220  6E29               	movwf	high_priority_int@bit_to_process+1,c
 14886  002222  0E00               	movlw	0
 14887  002224  6E28               	movwf	high_priority_int@bit_to_process,c
 14888  002226                     i2l5124:
 14889                           
 14890                           ;easat2_func_interrupts.c: 234: }
 14891                           ;easat2_func_interrupts.c: 236: }
 14892                           ;easat2_func_interrupts.c: 238: }
 14893                           ;easat2_func_interrupts.c: 240: if (received_bit != 2) {
 14894  002226  0E02               	movlw	2
 14895  002228  1816               	xorwf	high_priority_int@received_bit,w,c
 14896  00222A  1017               	iorwf	high_priority_int@received_bit+1,w,c
 14897  00222C  B4D8               	btfsc	status,2,c
 14898  00222E  D003               	goto	i2l5128
 14899                           
 14900                           ;easat2_func_interrupts.c: 241: num_bits_received++;
 14901  002230  4A26               	infsnz	high_priority_int@num_bits_received,f,c
 14902  002232  2A27               	incf	high_priority_int@num_bits_received+1,f,c
 14903                           
 14904                           ;easat2_func_interrupts.c: 243: }
 14905  002234  D012               	goto	i2l5134
 14906  002236                     i2l5128:
 14907                           
 14908                           ;easat2_func_interrupts.c: 244: else {
 14909                           ;easat2_func_interrupts.c: 246: if (num_bits_received == 32) {
 14910  002236  0E20               	movlw	32
 14911  002238  1826               	xorwf	high_priority_int@num_bits_received,w,c
 14912  00223A  1027               	iorwf	high_priority_int@num_bits_received+1,w,c
 14913  00223C  A4D8               	btfss	status,2,c
 14914  00223E  D009               	goto	i2l5132
 14915                           
 14916                           ;easat2_func_interrupts.c: 248: global_command_pending_check = !global_command_pending_c
      +                          heck;
 14917  002240  503E               	movf	_global_command_pending_check,w,c	;volatile
 14918  002242  103F               	iorwf	_global_command_pending_check+1,w,c	;volatile
 14919  002244  A4D8               	btfss	status,2,c
 14920  002246  D002               	goto	i2u539_40
 14921  002248  0E01               	movlw	1
 14922  00224A  D001               	goto	i2u540_40
 14923  00224C                     i2u539_40:
 14924  00224C  0E00               	movlw	0
 14925  00224E                     i2u540_40:
 14926  00224E  6E3E               	movwf	_global_command_pending_check,c	;volatile
 14927  002250  6A3F               	clrf	_global_command_pending_check+1,c	;volatile
 14928  002252                     i2l5132:
 14929                           
 14930                           ;easat2_func_interrupts.c: 250: }
 14931                           ;easat2_func_interrupts.c: 251: num_bits_received = 0;
 14932  002252  0E00               	movlw	0
 14933  002254  6E27               	movwf	high_priority_int@num_bits_received+1,c
 14934  002256  0E00               	movlw	0
 14935  002258  6E26               	movwf	high_priority_int@num_bits_received,c
 14936  00225A                     i2l5134:
 14937                           
 14938                           ;easat2_func_interrupts.c: 253: }
 14939                           ;easat2_func_interrupts.c: 281: bit_to_process = 0;
 14940  00225A  0E00               	movlw	0
 14941  00225C  6E29               	movwf	high_priority_int@bit_to_process+1,c
 14942  00225E  0E00               	movlw	0
 14943  002260  D003               	goto	L8
 14944  002262                     i2l5136:
 14945                           
 14946                           ;easat2_func_interrupts.c: 289: bit_to_process = 1;
 14947  002262  0E00               	movlw	0
 14948  002264  6E29               	movwf	high_priority_int@bit_to_process+1,c
 14949  002266  0E01               	movlw	1
 14950  002268                     L8:
 14951  002268  6E28               	movwf	high_priority_int@bit_to_process,c
 14952                           
 14953                           ;easat2_func_interrupts.c: 291: }
 14954                           ;easat2_func_interrupts.c: 303: PIR1bits.TMR1IF = 0;
 14955  00226A  909E               	bcf	3998,0,c	;volatile
 14956  00226C                     i2l518:
 14957  00226C  C013  FFF5         	movff	??_high_priority_int+18,tablat
 14958  002270  C012  FFF8         	movff	??_high_priority_int+17,tblptru
 14959  002274  C011  FFF7         	movff	??_high_priority_int+16,tblptrh
 14960  002278  C010  FFF6         	movff	??_high_priority_int+15,tblptrl
 14961  00227C  C00F  FFF4         	movff	??_high_priority_int+14,prodh
 14962  002280  C00E  FFF3         	movff	??_high_priority_int+13,prodl
 14963  002284  C00D  FFDA         	movff	??_high_priority_int+12,fsr2h
 14964  002288  C00C  FFD9         	movff	??_high_priority_int+11,fsr2l
 14965  00228C  C00B  FFE2         	movff	??_high_priority_int+10,fsr1h
 14966  002290  C00A  FFE1         	movff	??_high_priority_int+9,fsr1l
 14967  002294  C009  FFEA         	movff	??_high_priority_int+8,fsr0h
 14968  002298  C008  FFE9         	movff	??_high_priority_int+7,fsr0l
 14969  00229C  C007  FFFB         	movff	??_high_priority_int+6,pclatu
 14970  0022A0  C006  FFFA         	movff	??_high_priority_int+5,pclath
 14971  0022A4  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14972  0022A6  0011               	retfie		f
 14973  0022A8                     __end_of_high_priority_int:
 14974                           	opt stack 0
 14975                           tosu	equ	0xFFF
 14976                           tosh	equ	0xFFE
 14977                           tosl	equ	0xFFD
 14978                           pclatu	equ	0xFFB
 14979                           pclath	equ	0xFFA
 14980                           tblptru	equ	0xFF8
 14981                           tblptrh	equ	0xFF7
 14982                           tblptrl	equ	0xFF6
 14983                           tablat	equ	0xFF5
 14984                           prodh	equ	0xFF4
 14985                           prodl	equ	0xFF3
 14986                           intcon	equ	0xFF2
 14987                           intcon2	equ	0xFF1
 14988                           indf0	equ	0xFEF
 14989                           postinc0	equ	0xFEE
 14990                           fsr0h	equ	0xFEA
 14991                           fsr0l	equ	0xFE9
 14992                           wreg	equ	0xFE8
 14993                           indf1	equ	0xFE7
 14994                           postdec1	equ	0xFE5
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           bsr	equ	0xFE0
 14998                           indf2	equ	0xFDF
 14999                           postinc2	equ	0xFDE
 15000                           postdec2	equ	0xFDD
 15001                           fsr2h	equ	0xFDA
 15002                           fsr2l	equ	0xFD9
 15003                           status	equ	0xFD8
 15004                           tosu	equ	0xFFF
 15005                           tosh	equ	0xFFE
 15006                           tosl	equ	0xFFD
 15007                           pclatu	equ	0xFFB
 15008                           pclath	equ	0xFFA
 15009                           tblptru	equ	0xFF8
 15010                           tblptrh	equ	0xFF7
 15011                           tblptrl	equ	0xFF6
 15012                           tablat	equ	0xFF5
 15013                           prodh	equ	0xFF4
 15014                           prodl	equ	0xFF3
 15015                           intcon	equ	0xFF2
 15016                           intcon2	equ	0xFF1
 15017                           indf0	equ	0xFEF
 15018                           postinc0	equ	0xFEE
 15019                           fsr0h	equ	0xFEA
 15020                           fsr0l	equ	0xFE9
 15021                           wreg	equ	0xFE8
 15022                           indf1	equ	0xFE7
 15023                           postdec1	equ	0xFE5
 15024                           fsr1h	equ	0xFE2
 15025                           fsr1l	equ	0xFE1
 15026                           bsr	equ	0xFE0
 15027                           indf2	equ	0xFDF
 15028                           postinc2	equ	0xFDE
 15029                           postdec2	equ	0xFDD
 15030                           fsr2h	equ	0xFDA
 15031                           fsr2l	equ	0xFD9
 15032                           status	equ	0xFD8
 15033                           
 15034                           	psect	rparam
 15035  0000                     tosu	equ	0xFFF
 15036                           tosh	equ	0xFFE
 15037                           tosl	equ	0xFFD
 15038                           pclatu	equ	0xFFB
 15039                           pclath	equ	0xFFA
 15040                           tblptru	equ	0xFF8
 15041                           tblptrh	equ	0xFF7
 15042                           tblptrl	equ	0xFF6
 15043                           tablat	equ	0xFF5
 15044                           prodh	equ	0xFF4
 15045                           prodl	equ	0xFF3
 15046                           intcon	equ	0xFF2
 15047                           intcon2	equ	0xFF1
 15048                           indf0	equ	0xFEF
 15049                           postinc0	equ	0xFEE
 15050                           fsr0h	equ	0xFEA
 15051                           fsr0l	equ	0xFE9
 15052                           wreg	equ	0xFE8
 15053                           indf1	equ	0xFE7
 15054                           postdec1	equ	0xFE5
 15055                           fsr1h	equ	0xFE2
 15056                           fsr1l	equ	0xFE1
 15057                           bsr	equ	0xFE0
 15058                           indf2	equ	0xFDF
 15059                           postinc2	equ	0xFDE
 15060                           postdec2	equ	0xFDD
 15061                           fsr2h	equ	0xFDA
 15062                           fsr2l	equ	0xFD9
 15063                           status	equ	0xFD8
 15064                           
 15065                           	psect	temp
 15066  000046                     btemp:
 15067                           	opt stack 0
 15068  000046                     	ds	1
 15069  0000                     int$flags	set	btemp
 15070                           tosu	equ	0xFFF
 15071                           tosh	equ	0xFFE
 15072                           tosl	equ	0xFFD
 15073                           pclatu	equ	0xFFB
 15074                           pclath	equ	0xFFA
 15075                           tblptru	equ	0xFF8
 15076                           tblptrh	equ	0xFF7
 15077                           tblptrl	equ	0xFF6
 15078                           tablat	equ	0xFF5
 15079                           prodh	equ	0xFF4
 15080                           prodl	equ	0xFF3
 15081                           intcon	equ	0xFF2
 15082                           intcon2	equ	0xFF1
 15083                           indf0	equ	0xFEF
 15084                           postinc0	equ	0xFEE
 15085                           fsr0h	equ	0xFEA
 15086                           fsr0l	equ	0xFE9
 15087                           wreg	equ	0xFE8
 15088                           indf1	equ	0xFE7
 15089                           postdec1	equ	0xFE5
 15090                           fsr1h	equ	0xFE2
 15091                           fsr1l	equ	0xFE1
 15092                           bsr	equ	0xFE0
 15093                           indf2	equ	0xFDF
 15094                           postinc2	equ	0xFDE
 15095                           postdec2	equ	0xFDD
 15096                           fsr2h	equ	0xFDA
 15097                           fsr2l	equ	0xFD9
 15098                           status	equ	0xFD8


Data Sizes:
    Strings     163
    Constant    134
    Data        5
    BSS         287
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      69
    BANK0           160    137     137
    BANK1           256    216     216
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[13]), STR_2(CODE[23]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 64
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_4(CODE[13]), STR_2(CODE[23]), 

    S2234__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S2234__prbuf$ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(COMRAM[4]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(COMRAM[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK0[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_func_command_management
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->_util_waits_delay_secs
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    _util_beacon_transmission->_memset
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    __doprnt->___lldiv
    __doprnt->___wmul
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    _init_initialize->_init_watchdogs_initialize

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    ___ftdiv->___awtoft
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _sprintf->__doprnt
    __doprnt->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_loop
    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  137088
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  137088
                                            206 BANK1     10    10      0
            _func_command_management
          _init_watchdogs_initialize
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             26 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             21 BANK0      5     3      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             66 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             30 COMRAM     3     1      2
                                             17 BANK0      4     4      0
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             27 COMRAM     5     3      2
                                             17 BANK0     16    16      0
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             30 COMRAM     2     0      2
                                             17 BANK0     32    32      0
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             21 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             17 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   11054
                                             66 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             44 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   11054
                                             66 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   76631
                                            127 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6329
                                             21 BANK0      1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5238
                                             31 COMRAM     2     0      2
                                             17 BANK0      4     4      0
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     361
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     417
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     451
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20     6     14   67156
                                            107 BANK0     20     6     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             41    35      6   66459
                                             72 BANK0     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                               10     7      3   14849
                                             44 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13    10      3   14570
                                             44 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3004
                                             31 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             29 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1819
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1985
                                             17 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     608
                                             25 COMRAM     6     0      6
                                             17 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          12     6      6     827
                                             25 COMRAM     6     0      6
                                             17 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___lltoft                                             9     5      4    2763
                                             17 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     848
                                             22 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     703
                                             25 COMRAM     8     0      8
                                             17 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             51 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    6135
                                             66 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             54 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     142
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     660
                                             25 COMRAM     6     0      6
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1061
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _func_command_management                              8     8      0      12
                                             25 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
          _init_watchdogs_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_watchdogs_initialize                            1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   25    25      0     119
                                              0 COMRAM    25    25      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _init_watchdogs_initialize
     _util_pwm_initialize
   _main_loop
     _func_command_management
     _init_watchdogs_initialize
     _util_beacon_transmission
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___ftadd *
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge *
           ___ftmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg *
           ___ftsub *
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol *
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___lltoft *
             ___ftpack
           ___wmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit *
           _putch *
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     D8      D8       6       84.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     89      89       4       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      45       1       73.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A6       9        0.0%
DATA                 0      0     2A6      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Oct 01 16:20:55 2017

                               ??_init_initialize 001B                       util_onewire_read_byte@value 008F  
                            util_getTemperature@i 01CC                   high_priority_int@decoder_status 002A  
                                    ___awdiv@sign 0076                                                bsr 000FE0  
                             ___wmul@multiplicand 007B                  __end_of_util_beacon_transmission 3258  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 00A1                                      ___ftadd@exp2 00A0  
                                    ___ftadd@sign 009F                                               l104 388E  
                                             l213 3E54                                               l150 3420  
                                             l400 3EAE                                               l162 3356  
                                             l156 328C                                               l175 112E  
                                             l686 0942                                               l971 36B2  
                                             l939 2ECC                           ??_util_onewire_read_bit 001C  
                                             l994 25B0                                               l998 25EA  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FBB  
                                    __CFG_CPD$OFF 000000                       __end_of_util_getTemperature 1788  
                                    ___awmod@sign 001F                    ??_util_transmit_morse_sequence 0071  
                             _util_pwm_initialize 3DA0                                               tosl 000FFD  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                         ?_init_timer1_initialize 0001                                      __CFG_LVP$OFF 000000  
      util_transmit_morse_sequence@morse_sequence 0020                                      ___ftdiv@cntr 007E  
                                    ___ftdiv@sign 0083                                              l1000 2612  
                                            l1009 26E8                                              l1018 2712  
                                            l1043 2C1C                                              l1036 2B76  
                                            l1037 2BA2                                              l1029 2FF4  
                                            l1118 391A                                              l1128 37FA  
                                            l1068 3F50                                              l6000 0946  
                                            l5210 25F8                                              l5204 25BE  
                                            l6100 0DCC                                              l6012 09CC  
                                            l5302 2D2E                                              l6110 0E48  
                                            l6030 0B6E                                              l5160 3680  
                                            l5152 3642                                              l5232 2678  
                                            l5216 2608                                              l6120 0EC4  
                                            l6104 0E0A                                              l6040 0BDE  
                                            l6024 0AE4                                              l6016 0A1E  
                                            l6008 09A2                                              l5162 369E  
                                            l5154 364C                                              l5234 2686  
                                            l5226 264A                                              l5322 34C6  
                                            l5306 2D4C                                              l6130 0FB0  
                                            l6050 0C3E                                              l6034 0BAC  
                                            l6026 0B12                                              l6042 0BEC  
                                            l5164 36A8                                              l5156 366A  
                                            l5148 3634                                              l5252 273C  
                                            l5244 26CE                                              l5236 2694  
                                            l6116 0EA6                                              l6108 0E34  
                                            l6028 0B60                                              l6132 0FC6  
                                            l6300 1D3C                                              l6140 3CF2  
                                            l5262 278A                                              l5246 26DC  
                                            l5238 26A0                                              l5510 2B32  
                                            l5334 34FA                                              l5350 354A  
                                            l6126 0F86                                              l6070 0CB0  
                                            l6038 0BD6                                              l6134 0FE4  
                                            l6310 1D82                                              l6302 1D4A  
                                            l6232 3EDE                                              l5600 2E84  
                                            l5504 2AFC                                              l5336 3506  
                                            l5328 34DC                                              l5272 2C68  
                                            l6128 0FA2                                              l6056 0C64  
                                            l6320 1DC8                                              l6312 1D90  
                                            l6304 1D58                                              l6144 3D04  
                                            l5610 2EB2                                              l5354 355E  
                                            l5346 353C                                              l5338 350C  
                                            l5370 39C6                                              l6090 0D74  
                                            l6074 0CD8                                              l6058 0C6A  
                                            l6250 3CAE                                              l5186 3EA2  
                                            l6330 1E0E                                              l6322 1DD6  
                                            l6314 1D9E                                              l6306 1D66  
                                            l6228 3ECE                                              l5700 38D6  
                                            l5612 2EC2                                              l5604 2E98  
                                            l5540 2BD4                                              l5292 2CF0  
                                            l5444 2500                                              l5436 2420  
                                            l6092 0D7E                                              l6084 0D3C  
                                            l6252 3CB2                                              l6236 3E72  
                                            l6340 1E54                                              l6332 1E1C  
                                            l6324 1DE4                                              l6316 1DAC  
                                            l6308 1D74                                              l6260 1C24  
                                            l6404 3D42                                              l6500 1108  
                                            l5630 3742                                              l5550 2C02  
                                            l5390 3A0C                                              l5382 39F4  
                                            l5374 39D4                                              l5366 39BA  
                                            l5278 2CA2                                              l6078 0D08  
                                            l6254 3CC2                                              l6238 3E7A  
                                            l6342 1E62                                              l6334 1E2A  
                                            l6326 1DF2                                              l6318 1DBA  
                                            l6270 1C6A                                              l6262 1C32  
                                            l6502 110C                                              l5720 37A4  
                                            l5560 2DAE                                              l5552 2C12  
                                            l5544 2BE8                                              l5376 39DC  
                                            l5296 2D0E                                              l5464 19B4  
                                            l6096 0DB6                                              l6256 3CCA  
                                            l6336 1E38                                              l6328 1E00  
                                            l6280 1CB0                                              l6272 1C78  
                                            l6264 1C40                                              l6520 11E0  
                                            l5626 370A                                              l5618 3BF6  
                                            l5650 3064                                              l5730 3934  
                                            l5378 39E0                                              l5386 39FE  
                                            l5482 1BF8                                              l5458 18F2  
                                            l6098 0DC0                                              l5810 00AE  
                                            l5802 3A64                                              l6338 1E46  
                                            l6290 1CF6                                              l6282 1CBE  
                                            l6274 1C86                                              l6266 1C4E  
                                            l6346 1E68                                              l6362 2F52  
                                            l6530 1216                                              l6514 1150  
                                            l5636 376E                                              l5708 390A  
                                            l5724 37E8                                              l5716 378E  
                                            l5732 3944                                              l5580 2E1C  
                                            l5476 1B36                                              l5468 19DA  
                                            l5900 0464                                              l5820 0128  
                                            l5396 3AEC                                              l6292 1D04  
                                            l6284 1CCC                                              l6276 1C94  
                                            l6268 1C5C                                              l6348 1F68  
                                            l6356 2F18                                              l5740 3A8E  
                                            l6524 11F6                                              l5718 379E  
                                            l5566 2DD0                                              l5494 3F74  
                                            l5910 04F4                                              l5902 0494  
                                            l5398 3AF0                                              l6294 1D12  
                                            l6286 1CDA                                              l6278 1CA2  
                                            l6382 2FB2                                              l5742 3A98  
                                            l6526 1200                                              l6542 128A  
                                            l5680 3136                                              l5672 310A  
                                            l5904 04AA                                              l5840 01F8  
                                            l5816 00FA                                              l6296 1D20  
                                            l6288 1CE8                                              l5752 3AC2  
                                            l6544 1294                                              l5682 3140  
                                            l5930 05E4                                              l5914 051A  
                                            l5850 0264                                              l5826 015A  
                                            l5834 01D0                                              l6298 1D2E  
                                            l6634 321E                                              l5746 3AAE  
                                            l5754 3AC8                                              l6570 1348  
                                            l6538 1282                                              l6642 3C2C  
                                            l5668 30F6                                              l5588 2E50  
                                            l5924 0578                                              l5844 023E  
                                            l6548 12AA                                              l5686 315C  
                                            l5678 3126                                              l5950 069C  
                                            l5942 062A                                              l5870 030E  
                                            l5862 02BA                                              l5854 026A  
                                            l5846 0254                                              l5790 3A22  
                                            l6638 323A                                              l6590 13BC  
                                            l6494 10E0                                              l6486 10B8  
                                            l6646 3C40                                              l5696 38C4  
                                            l5960 070C                                              l5928 05DE  
                                            l5856 029E                                              l5792 3A28  
                                            l6584 139C                                              l5698 38D2  
                                            l5970 079A                                              l5962 0720  
                                            l5954 06DA                                              l5946 067A  
                                            l6594 13D8                                              l6578 1378  
                                            l6586 13A8                                              l6498 10F2  
                                            l6666 3880                                              l6658 380C  
                                            l5980 0870                                              l5972 07AA  
                                            l5796 3A2E                                              l5982 0892  
                                            l5958 0704                                              l5894 0428  
                                            l5886 03C0                                              l5798 3A5A  
                                            l5992 0908                                              l5984 08A0  
                                            l5968 077E                                              l5994 0910  
                                            l5898 044E                                              l5996 0924  
                                            l5988 08DE                                              STR_1 7F99  
                                            STR_2 7F5B                                              STR_3 7F72  
                                            STR_5 7FE3                                              STR_6 7FCB  
                                            STR_7 7FF0                                              STR_8 7FC6  
                                            STR_9 7FBC                                              u6001 2ADA  
                                            u6021 2B10                                              u6211 3040  
                                            u5501 255E                                              u6230 308A  
                                            u5511 257C                                              u6400 3DEE  
                                            u6235 3080                                              u7205 2826  
                                            u7118 0F6E                                              u7150 3C8C  
                                            u5711 2C44                                              u7215 283C  
                                            u6408 3DF0                                              u7225 2852  
                                            u7058 0DF4                                              u6530 0354  
                                            u5731 2C7E                                              u7340 3F86  
                                            u7165 29B8                                              u7158 3C8E  
                                            u6535 0348                                              u7271 2EF4  
                                            u7175 29DA                                              u6800 093A  
                                            u6448 00E2                                              u7185 29FC  
                                            u7098 0E90                                              u7291 2F2E  
                                            u7195 2A1E                          ??_util_onewire_read_byte 0071  
                                            u7358 3F88                                              u7464 1246  
                                            u7465 123E                                              u6738 0768  
                                            u5890 3B10                                              u7707 3EA4  
                                            _RBPU 007F8F                                              u6838 098C  
                                            u6758 0856                                              u7647 3E4E  
                                            u5897 3B06                                              u7657 3E58  
                                            u6858 0ACA                                              u6698 06C4  
                                            u7667 3C70                                              u6788 08C8  
                                            u7677 3C7A                                              u7687 3C96  
                                            u6888 0B96                                              u7697 3DF8  
                                            _TMR2 000FBC                                              _WPUB 000F61  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 4028                                      ___ftpack@arg 001A  
                                    ___ftpack@exp 001D                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 0046                                     __CFG_BORV$190 000000  
           high_priority_int@current_signal_level 002E                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A6  
                                   __CFG_IESO$OFF 000000                              ?_util_pwm_initialize 0001  
 __end_of_util_transmit_space_between_dots_dashes 4028  __size_of_util_transmit_space_between_dots_dashes 000E  
       ??_util_transmit_space_between_dots_dashes 001F          ?_util_transmit_space_between_dots_dashes 0001  
         _util_transmit_space_between_dots_dashes 401A                           ?_init_timer2_initialize 0001  
                                    ___ftmul@cntr 008A                                      ___param_bank 000000  
                                    ___ftmul@sign 008B                                      ___fttol@exp1 00A1  
                                    ___fttol@lval 009D                                _util_transmit_dash 3FB4  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
                                 __end_of___awdiv 3568                                             _ADRES 000FC3  
                                 __end_of___ftadd 27B0                                             STR_10 7FBF  
                                           STR_11 7FBA                                             STR_12 7FD1  
                                           STR_20 7FEB                                             STR_13 7FC7  
                                           STR_21 7FE1                                             STR_14 7FAD  
                                           STR_22 7FF1                                             STR_30 7FC5  
                                           STR_15 7FE2                                             STR_23 7FCC  
                                           STR_31 7FA0                                             STR_24 7FA4  
                                           STR_16 7FF5                                             STR_40 7FB8  
                                           STR_32 7FA6                                             STR_17 7FA3  
                                           STR_25 7FE7                                             STR_33 7FAC  
                                           STR_41 7F7D                                             STR_26 7F8D  
                                           STR_18 7FBB                                             STR_34 7FB2  
                                           STR_42 7F92                                             STR_19 7FA2  
                                           STR_27 7FDD                                             STR_35 7F8C  
                                           STR_43 7FBE                                             STR_28 7FE6  
                                           STR_36 7FD6                                             STR_44 7F84  
                                 __end_of___awmod 3A16                                             STR_29 7FDC  
                                           STR_37 7FD0                                             STR_45 7F8B  
                                           STR_46 7FFC                                             STR_38 7FCA  
                                           STR_47 7FFA                                             STR_39 7FC4  
                                 __end_of___ftdiv 302A                                   __end_of___ftneg 3F5E  
                                 __end_of___lldiv 392C                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2D8C                                   ___awdiv@divisor 0073  
                                 __end_of___llmod 380C                                   __end_of___ftsub 3C20  
                                 __end_of___fttol 316E                       __size_of_util_onewire_reset 0042  
                                   __CFG_WDTEN$ON 000000                                             i2l504 2116  
                                           i2l518 226C                                             i2l494 203E  
                                           i2l488 1FC6                                   ___awdiv@counter 0075  
                  __end_of_init_timer1_initialize 3F16                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                                   __end_of__doprnt 0FF0  
                             ?_util_transmit_dash 0001          func_command_management@candidate_command 001E  
                              ??_low_priority_int 0060                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0079  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                      __end_of_util_getSolarCurrent 3322  
                                   __CFG_WRTB$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                                   ___awtoft@sign 0074                                   __end_of_dpowers 7EFD  
                                           _scale 1788                                   __end_of_isdigit 3F7C  
                              __CFG_MCLRE$EXTMCLR 000000                                     ___ftpack@sign 001E  
                                           _putch 404A                          ??_util_onewire_write_bit 001C  
                       util_waits_delay_secs@secs 001F                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3EC4  
                                 __end_of_sprintf 3B86                              ??_util_transmit_dash 001F  
                           ??_util_pwm_initialize 001A                    __end_of_init_timer2_initialize 3FE8  
                         util_waits_delay_hours@i 007D                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 3B86                         util_beacon_transmission@i 01C0  
                                    __end_of_main 4034                      __end_of_util_transmit_letter 1F6E  
                      ?_init_watchdogs_initialize 0001                           _func_command_management 3D66  
                                          ??_main 0022                                     ___fttol@sign1 009C  
                                   __activetblptr 000002                              __size_of__tdiv_to_l_ 0168  
                      util_onewire_read_bit@value 001D                         util_getSolarCurrent@value 00A4  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                ___llmod@dividend 0076                                            ?_scale 008C  
                                          _CCPR2L 000F67                                  ___awdiv@dividend 0071  
                                __end_of___awtoft 3D66                                            ?_putch 0001  
                                __end_of___ftpack 36D2                    high_priority_int@valid_samples 0032  
                                __end_of___lltoft 39A6                                            i2l5100 21B4  
                                          i2l5120 220E                                            i2l5114 21F4  
                                          i2l5106 21D4                                            i2l5050 2058  
                                          i2l5034 200C                                            i2l5132 2252  
                                          i2l5124 2226                                            i2l5134 225A  
                                          i2l5038 202E                                            i2l5128 2236  
                                          i2l5136 2262                                            i2l5072 20BE  
                                          i2l5064 209C                                            i2l5076 20E4  
                                          i2l5078 20EC                                            i2l5088 212C  
                                __end_of___lwtoft 3F3A                   __size_of_util_onewire_read_byte 0194  
                     __size_of_init_io_initialize 00BC                 __size_of_util_beacon_transmission 00EA  
                          __size_of_util_pwm_stop 0008                         ?_util_beacon_transmission 00DF  
                                  __CFG_XINST$OFF 000000                                      __doprnt$2963 00B4  
                                __end_of__powers_ 7F24                                      _CCPTMRS0bits 000F49  
                        ?_util_onewire_write_byte 001C                                            ___ftge 36D2  
                      util_onewire_read_byte@bit0 007F                        util_onewire_read_byte@bit1 0081  
                      util_onewire_read_byte@bit2 0083                        util_onewire_read_byte@bit3 0085  
                      util_onewire_read_byte@bit4 0087                        util_onewire_read_byte@bit5 0089  
                      util_onewire_read_byte@bit6 008B                        util_onewire_read_byte@bit7 008D  
                         ??_util_waits_delay_mins 0077                           ??_util_waits_delay_secs 0021  
                                          ___wmul 3E06                                         ??___awdiv 0020  
                                       ??___ftadd 009C                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 001E                                         ??___ftdiv 007B  
                                       ??___ftneg 001D                                         ??___lldiv 0022  
                                       ??___ftmul 0083                                         ??___llmod 0022  
                                       ??___ftsub 0022                                         ??___fttol 0097  
                     util_onewire_write_byte@bit0 0071                       util_onewire_write_byte@bit1 0073  
                     util_onewire_write_byte@bit2 0075                       util_onewire_write_byte@bit3 0077  
                     util_onewire_write_byte@bit4 0079                       util_onewire_write_byte@bit5 007B  
                     util_onewire_write_byte@bit6 007D                       util_onewire_write_byte@bit7 007F  
                                       ??__doprnt 00AE                                            _memset 3EC4  
                                          _fround 22A8                                            clear_0 3BAE  
                                          clear_1 3BC0                                  ___awdiv@quotient 0077  
                                 ___awmod@divisor 001C                                      __doprnt@flag 00B7  
                                 ___awmod@counter 001E                                      __doprnt@fval 00C5  
                     util_waits_delay_hours@hours 007A                                      __doprnt@prec 00C8  
                                          _strcat 3CA4                                            _strcpy 3E68  
                                          _strlen 3AE2                             ___ftmul@f3_as_product 0087  
                                    __pdataCOMRAM 0041                                         ??_isdigit 001A  
              high_priority_int@num_bits_received 0026                                      __mediumconst 7ED4  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                                            putch@c 0001  
                                       ??_sprintf 0022                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 0022                   __size_of_util_onewire_write_bit 0030  
                                 _init_initialize 3FE8                                        __accesstop 0060  
                         __end_of__initialization 3BC6                                   __CFG_PBADEN$OFF 000000  
                                      ___ftadd@f1 0096                                        ___ftadd@f2 0099  
                                      ___ftge@ff1 001A                                        ___ftge@ff2 001D  
                                   ___rparam_used 000001                                        ___ftdiv@f1 0075  
                                      ___ftdiv@f2 0078                                        ___ftdiv@f3 007F  
                        ??_util_getBatteryVoltage 0022                                        ___ftneg@f1 001A  
                                      ___awtoft@c 0071                                        ___ftmul@f1 007D  
                                      ___ftmul@f2 0080                                        ___ftsub@f1 00A2  
                                      ___ftsub@f2 00A5                                        ___fttol@f1 0093  
                                  __pcstackCOMRAM 0001                              _util_getSolarCurrent 3258  
    func_command_management@decoded_command_value 001C                         ??_func_command_management 001A  
                                      ___lltoft@c 0071                          main_loop@battery_current 01D3  
                                   __end_of_scale 1C1E                            _util_onewire_read_byte 27B0  
                                   __end_of_putch 404C                                     _util_pwm_stop 4034  
                                      ___lwtoft@c 0071                                        __div_to_l_ 2D8C  
                        main_loop@battery_voltage 01D5                    __size_of_util_onewire_read_bit 0032  
                   __end_of_util_onewire_read_bit 3E06                                        __doprnt@ap 00AC  
                                      __doprnt@pb 00A8                                   __div_to_l_@exp1 0076  
                                 __div_to_l_@cntr 0075                                           ??_scale 0022  
                                 __div_to_l_@quot 0071         __end_of_util_transmit_space_between_words 400C  
      __size_of_util_transmit_space_between_words 000E               ??_util_transmit_space_between_words 001F  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 3FFE  
                                         ??_putch 001A            high_priority_int@tmr1_interrupt_number 003C  
                                      __pbssBANK2 0200                                __size_of_main_loop 0092  
       high_priority_int@times_threshold_exceeded 0038                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1C1E                                     __div_to_l_@f1 001A  
                                   __div_to_l_@f2 001D                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 00A2                                           ?___ftge 001A  
                    util_onewire_write_bit@bit_in 001A                                           ?___wmul 0079  
                high_priority_int@sample_position 003A                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 3E38                                    ?_util_pwm_stop 0001  
                                         ?_memset 001A                                           ?_fround 008C  
                                       ?___awtoft 0071                                         ?___ftpack 001A  
                               _high_priority_int 0008                                         ?___lltoft 0071  
                                         ?_strcat 001A                                           ?_strcpy 001A  
                                         ?_strlen 001A                                         ?___lwtoft 0071  
                              ?_high_priority_int 0001                           __end_of_init_initialize 3FFE  
                         __size_of_util_pwm_start 0008                   __end_of_func_command_management 3DA0  
                             ??_high_priority_int 0001                      __size_of_util_getTemperature 0798  
                           ?_util_transmit_letter 0001                   __size_of_util_getBatteryCurrent 00CA  
                       __size_of_low_priority_int 008E                              util_waits_delay_ms@i 001D  
                    util_waits_delay_mins@minutes 0075                                   __CFG_PWRTEN$OFF 000000  
                               __end_of__npowers_ 7F4B                                           __Hparam 0000  
                 __size_of_util_getBatteryVoltage 00BE                                        _scale$2962 008F  
            __end_of_util_transmit_morse_sequence 3A82             __size_of_util_transmit_morse_sequence 006C  
                    _util_transmit_morse_sequence 3A16                                           __Lparam 0000  
                      util_getTemperature@bit_mem 0100       __end_of_util_transmit_space_between_letters 401A  
    __size_of_util_transmit_space_between_letters 000E             ??_util_transmit_space_between_letters 001F  
            ?_util_transmit_space_between_letters 0001               _util_transmit_space_between_letters 400C  
                                 __size_of___ftge 00A0                                           ___awdiv 34AA  
                                         ___ftadd 2548                                           ___awmod 39A6  
                                         ___ftdiv 2EDE                                           ___ftneg 3F3A  
                                         ___lldiv 389E                                   __size_of___wmul 0032  
                                         ___ftmul 2C2E                          ??_util_waits_delay_hours 007C  
                                         ___llmod 3772                                           ___ftsub 3BD4  
                     util_getTemperature@byte_mem 0190                                           ___fttol 302A  
                       __end_of_high_priority_int 22A8                    util_getTemperature@temperature 01C9  
                                         __doprnt 00AA                        __end_of_util_onewire_reset 3CA4  
                               __end_of_main_loop 389E                                           __pcinit 3B86  
                     ??_init_watchdogs_initialize 001A                                        ??___awtoft 0022  
                                      ??___ftpack 001F                                   __size_of_memset 002C  
                                 __size_of_fround 02A0                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0075  
                                         __ptext0 4028                                           __ptext1 380C  
                                         __ptext2 3C20                                           __ptext3 3CE6  
                                         __ptext4 0FF0                                           __ptext5 3A82  
                                         __ptext6 2944                                           __ptext7 3E38  
                                         __ptext8 3C62                                           __ptext9 27B0  
                                      ??___lwtoft 0022                                   __size_of_strcat 0042  
                                 __size_of_strcpy 0030                                   __size_of_strlen 0052  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 001A  
                                         _dpowers 7ED5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 3F5E  
                                ___awmod@dividend 001A                      util_onewire_write_byte@value 001C  
                            main_loop@temperature 01CE                                           _sprintf 3B34  
                                   __doprnt@width 00B9                     util_transmit_morse_sequence@i 0073  
                                  __pintcode_body 1F6E                              end_of_initialization 3BC6  
                     __end_of_util_pwm_initialize 3DD4                                           memset@c 001C  
                                         memset@n 001E                                           memset@p 0020  
                                   __Lmediumconst 7ED4                                           int_func 1F6E  
                   high_priority_int@received_bit 0016                       __size_of_util_transmit_dash 001A  
                                 ___lldiv@divisor 001E                            ??_util_getSolarCurrent 0022  
                                 ___lldiv@counter 0075                   high_priority_int@bit_to_process 0028  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 002C                                   ??_util_pwm_stop 001A  
                                         postinc0 000FEE                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00E2                    __size_of_util_waits_delay_mins 0040  
                                  __tdiv_to_l_@f1 001A                                    __tdiv_to_l_@f2 001D  
                  __size_of_util_waits_delay_secs 0060                     __end_of_util_waits_delay_mins 3D26  
                          _util_getBatteryCurrent 3322                     __end_of_util_waits_delay_secs 3AE2  
                                         strlen@s 001A                                     ??__tdiv_to_l_ 0071  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _PORTDbits 000F83                           high_priority_int@sample 0018  
          high_priority_int@previous_received_bit 002C                            _util_getBatteryVoltage 33EC  
                __size_of_util_onewire_write_byte 0182                          _util_getTemperature$2956 01A7  
                        _util_getTemperature$2957 01AA                          _util_getTemperature$2958 01AD  
                        _util_getTemperature$2959 01B0                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ?_init_initialize 0001                        __end_of_init_io_initialize 3624  
                          ??_util_transmit_letter 0022                         _init_watchdogs_initialize 3F7C  
                                     ___ftdiv@exp 0082                                       _CCP2CONbits 000F66  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 0152  
                                     ___ftmul@exp 0086                           ?_util_onewire_read_byte 001F  
                               _util_transmit_dot 3F9A                        __size_of_high_priority_int 22A0  
                        ??_init_timer1_initialize 001A                                    __end_of___ftge 3772  
                 __size_of_util_waits_delay_hours 0042                  high_priority_int@noise_avg_value 0041  
                                  __end_of___wmul 3E38                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 4044                                    __end_of_memset 3EF0  
                                  __end_of_fround 2548                                    __end_of_strcat 3CE6  
                                  __end_of_strcpy 3E98                                    __end_of_strlen 3B34  
                             start_initialization 3B86                               ??_util_transmit_dot 001F  
                          util_waits_delay_mins@i 0078                            util_waits_delay_secs@i 0071  
                          util_waits_delay_secs@j 0073                                    _util_pwm_start 403C  
                             __end_of__tdiv_to_l_ 2C2E                          _util_beacon_transmission 316E  
                        ??_init_timer2_initialize 001A               util_beacon_transmission@temperature 00E6  
                                _low_priority_int 0018                                   ___llmod@divisor 007A  
                                 ___llmod@counter 007E                    __end_of_util_onewire_read_byte 2944  
                       __end_of_util_transmit_dot 3FB4                           ?_util_onewire_write_bit 001A  
           high_priority_int@activation_threshold 0044                                          ??___ftge 0071  
                                        ??___wmul 0020                                       __doprnt@exp 00BF  
                                     __doprnt@val 00BB                               _util_getTemperature 0FF0  
          func_command_management@decoded_command 001A                                          ??_memset 0020  
                                        ??_fround 0022                                          ??_strcat 001E  
                                        ??_strcpy 001E                                          ??_strlen 001C  
                                 golay_weight@F87 7F4B                                        fround@prec 0095  
                          __end_of_util_pwm_start 4044                                 __size_of___awtoft 0040  
                               __size_of___ftpack 00AE                                 __size_of___lltoft 007A  
                                     __pbssCOMRAM 0022                                 __size_of___lwtoft 0024  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
          high_priority_int@previous_signal_level 0030                                      _isdigit$2522 001B  
                           _util_onewire_read_bit 3DD4                              ?_util_getTemperature 00A2  
                          _util_waits_delay_hours 3C20                 util_getTemperature@shift_reg_bit0 01B3  
               util_getTemperature@shift_reg_bit1 01B5                 util_getTemperature@shift_reg_bit2 01B7  
               util_getTemperature@shift_reg_bit3 01B9                 util_getTemperature@shift_reg_bit4 01BB  
               util_getTemperature@shift_reg_bit5 01BD                 util_getTemperature@shift_reg_bit6 01BF  
               util_getTemperature@shift_reg_bit7 01C1            util_beacon_transmission@BEACON_MESSAGE 0100  
                                       __doprnt@c 00CA                                         __doprnt@f 00AA  
           util_getTemperature@shift_reg_bit_temp 01C3                    __end_of_util_onewire_write_bit 3E68  
                        ?_func_command_management 0001                                         __pintcode 0008  
                                   __pmediumconst 7ED4                                          ?___awdiv 0071  
                                        ?___ftadd 0096                                          ?___awmod 001A  
                                        ?___ftdiv 0075                                          ?___ftneg 001A  
                                        ?___lldiv 001A                                          ?___ftmul 007D  
                                        ?___llmod 0076                                          ?___ftsub 00A2  
                                       __npowers_ 7F24                                          ?___fttol 0093  
                 __size_of_init_timer1_initialize 0026                                          ?__doprnt 00A8  
                           _global_command_buffer 0022                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 2AC6  
                                    ??__div_to_l_ 0020                           _util_onewire_write_byte 2944  
                                 ?_util_pwm_start 0001                                          ?_isdigit 0001  
                                       _main_loop 380C                        high_priority_int@total_add 0034  
      high_priority_int@cycles_transmitter_active 0036                               _util_waits_delay_ms 3E98  
                           ??_util_getTemperature 00A5                                _util_onewire_reset 3C62  
                                        ?_sprintf 00CB                                    __size_of_scale 0496  
                                  __size_of_putch 0002                   __size_of_init_timer2_initialize 001A  
                     util_getBatteryVoltage@value 008F                                    ___wmul@product 0020  
                                        _LATAbits 000F89                                          _LATBbits 000F8A  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 001A  
                    _global_command_pending_check 003E                                          _IPR1bits 000F9F  
                                        _PIE1bits 000F9D                        __size_of_util_transmit_dot 001A  
                                        i2u513_40 1FDC                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 2EDE                                          i2u523_40 2084  
                                        i2u514_48 1FDE                                          i2u540_40 224E  
                                        i2u518_40 2016                                          i2u519_48 2018  
                                        i2u529_40 2182                                          i2u529_45 217A  
                                        i2u539_40 224C                __size_of_init_watchdogs_initialize 001E  
                         ?_util_getBatteryCurrent 00A2                                          _RCONbits 000FD0  
                                __CFG_WDTPS$32768 000000                              ?_util_waits_delay_ms 001A  
                         __end_ofgolay_weight@F87 7F5B           util_beacon_transmission@battery_current 00E4  
                         ?_util_getBatteryVoltage 008C                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0079                              ??_util_onewire_reset 001C  
                      util_transmit_letter@letter 0075                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00DF                            ?_util_onewire_read_bit 001A  
                     util_getBatteryCurrent@value 00A4                                         copy_data0 3B9A  
                          _init_timer1_initialize 3EF0                             util_waits_delay_ms@ms 001A  
                      __end_of_util_transmit_dash 3FCE            high_priority_int@is_transmitter_active 0040  
                  __end_of_util_getBatteryCurrent 33EC                                          __Hrparam 0000  
                    __size_of_util_pwm_initialize 0034                                _init_io_initialize 3568  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 001C  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
               __end_of_init_watchdogs_initialize 3F9A                    __end_of_util_getBatteryVoltage 34AA  
                          _init_timer2_initialize 3FCE                                  __size_of___awdiv 00BE  
                                __size_of___ftadd 0268                                  __size_of___awmod 0070  
                                __size_of___ftdiv 014C                                  __size_of___ftneg 0024  
                           __end_of_util_pwm_stop 403C                                  __size_of___lldiv 008E  
                                __size_of___ftmul 015E                         ??_util_onewire_write_byte 001E  
                                __size_of___llmod 009A                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                               ?_init_io_initialize 0001  
                                        ___awtoft 3D26                                          ___ftpack 3624  
                                __size_of__doprnt 0F46                                       _fround$2960 0092  
                                     _fround$2961 008F                          __end_of_low_priority_int 00A6  
                                        ___lltoft 392C                        ??_util_beacon_transmission 0022  
                           _util_waits_delay_mins 3CE6                             _util_waits_delay_secs 3A82  
                                      _ANSELAbits 000F38                                          ___lwtoft 3F16  
                                      _ANSELBbits 000F39                                        _ANSELDbits 000F3B  
                                      strcat@from 001C                                  __size_of_isdigit 001E  
                                        __ptext10 3DD4                                          __ptext11 2EDE  
                                        __ptext20 400C                                          __ptext12 3D26  
                                        __ptext21 3A16                                          __ptext13 3258  
                                        __ptext30 3CA4                                          __ptext22 401A  
                                        __ptext14 33EC                                          __ptext31 3B34  
                                        __ptext23 3F9A                                          __ptext15 3322  
                                        __ptext40 34AA                                          __ptext32 00AA  
                                        __ptext24 3FB4                                          __ptext16 3F16  
                                        __ptext41 2AC6                                          __ptext33 1788  
                                        __ptext25 3E98                                          __ptext17 316E  
                                        __ptext50 3F3A                                          __ptext42 2D8C  
                                        __ptext34 404A                                          __ptext26 4034  
                                        __ptext18 1C1E                                          __ptext51 36D2  
                                        __ptext43 392C                                          __ptext35 3F5E  
                                        __ptext27 403C                                          __ptext19 3FFE  
                                        __ptext52 3EC4                                          __ptext44 3772  
                                        __ptext36 22A8                                          __ptext28 3AE2  
                                        __ptext53 3D66                                          __ptext45 389E  
                                        __ptext37 3E06                                          __ptext29 3E68  
                                        __ptext54 3FE8                                          __ptext46 302A  
                                        __ptext38 2C2E                                          __ptext55 3DA0  
                                        __ptext47 3BD4                                          __ptext39 39A6  
                                        __ptext56 3F7C                                          __ptext48 2548  
                                        __ptext57 3FCE                                          __ptext49 3624  
                                        __ptext58 3EF0                                          __ptext59 3568  
                                        __powers_ 7EFD                                  __size_of_sprintf 0052  
                            ??_init_io_initialize 001A                                        strcpy@from 001C  
                   __size_of_util_transmit_letter 0350                  util_getSolarCurrent@solarCurrent 00A7  
                        __size_of_init_initialize 0016                                     __size_of_main 000C  
                      util_onewire_reset@presence 001D                                      _PSTR2CONbits 000F63  
                                        int$flags 0046                     ?_util_transmit_morse_sequence 0020  
                   util_getBatteryVoltage@voltage 0092                                    __doprnt@tmpval 00C1  
                                     ??_main_loop 0022                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 007A                                          isdigit@c 001C  
                                        memset@p1 001A                            main_loop@solar_current 01D1  
                                        scale@scl 0092                   __end_of_util_onewire_write_byte 2AC6  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00D9                                         sprintf@pb 00DB  
                                __tdiv_to_l_@exp1 0079                                         sprintf@wh 00CB  
                                __tdiv_to_l_@cntr 0078                                  __tdiv_to_l_@quot 0074  
                                    _VREFCON0bits 000F42                                  ___lldiv@dividend 001A  
                                ??_util_pwm_start 001A                            ?_util_waits_delay_mins 0075  
                          ?_util_waits_delay_secs 001F                                      ?__tdiv_to_l_ 001A  
                __size_of_func_command_management 003A                                          sprintf@f 00CD  
                                        strcat@cp 001E                                          strcat@to 001A  
                  __end_of_util_waits_delay_hours 3C62                                  ___lldiv@quotient 0071  
                                        strcpy@cp 001E                                          strlen@cp 001E  
                                        strcpy@to 001A                                 __CFG_T3CMX$PORTB5 000000  
                        high_priority_int@samples 0200              util_getBatteryCurrent@batteryCurrent 00A7  
                  high_priority_int@oldest_sample 0014  
