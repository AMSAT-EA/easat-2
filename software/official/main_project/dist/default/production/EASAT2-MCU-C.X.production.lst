

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Mar 20 12:09:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 1.41
    76                           ; Generated 25/01/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F45K22 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataCOMRAM
   111  003C8A                     __pidataCOMRAM:
   112                           	opt stack 0
   113                           
   114                           ;initializer for high_priority_int@noise_mean_value
   115  003C8A  00                 	db	0
   116  003C8B  7D                 	db	125
   117  003C8C  00                 	db	0
   118                           
   119                           ;initializer for high_priority_int@activation_thresold
   120  003C8D  7D00               	dw	32000
   121                           
   122                           	psect	mediumconst
   123  007EF4                     __pmediumconst:
   124                           	opt stack 0
   125  007EF4  00                 	db	0
   126  007EF5                     _dpowers:
   127                           	opt stack 0
   128  007EF5  0001               	dw	1
   129  007EF7  0000               	dw	0
   130  007EF9  000A               	dw	10
   131  007EFB  0000               	dw	0
   132  007EFD  0064               	dw	100
   133  007EFF  0000               	dw	0
   134  007F01  03E8               	dw	1000
   135  007F03  0000               	dw	0
   136  007F05  2710               	dw	10000
   137  007F07  0000               	dw	0
   138  007F09  86A0               	dw	34464
   139  007F0B  0001               	dw	1
   140  007F0D  4240               	dw	16960
   141  007F0F  000F               	dw	15
   142  007F11  9680               	dw	38528
   143  007F13  0098               	dw	152
   144  007F15  E100               	dw	57600
   145  007F17  05F5               	dw	1525
   146  007F19  CA00               	dw	51712
   147  007F1B  3B9A               	dw	15258
   148  007F1D                     __end_of_dpowers:
   149                           	opt stack 0
   150  007F1D                     __powers_:
   151                           	opt stack 0
   152  007F1D  00                 	db	0
   153  007F1E  80                 	db	128
   154  007F1F  3F                 	db	63
   155  007F20  00                 	db	0
   156  007F21  20                 	db	32
   157  007F22  41                 	db	65
   158  007F23  00                 	db	0
   159  007F24  C8                 	db	200
   160  007F25  42                 	db	66
   161  007F26  00                 	db	0
   162  007F27  7A                 	db	122
   163  007F28  44                 	db	68
   164  007F29  40                 	db	64
   165  007F2A  1C                 	db	28
   166  007F2B  46                 	db	70
   167  007F2C  50                 	db	80
   168  007F2D  C3                 	db	195
   169  007F2E  47                 	db	71
   170  007F2F  24                 	db	36
   171  007F30  74                 	db	116
   172  007F31  49                 	db	73
   173  007F32  97                 	db	151
   174  007F33  18                 	db	24
   175  007F34  4B                 	db	75
   176  007F35  BC                 	db	188
   177  007F36  BE                 	db	190
   178  007F37  4C                 	db	76
   179  007F38  6B                 	db	107
   180  007F39  6E                 	db	110
   181  007F3A  4E                 	db	78
   182  007F3B  03                 	db	3
   183  007F3C  15                 	db	21
   184  007F3D  50                 	db	80
   185  007F3E  79                 	db	121
   186  007F3F  AD                 	db	173
   187  007F40  60                 	db	96
   188  007F41  F3                 	db	243
   189  007F42  49                 	db	73
   190  007F43  71                 	db	113
   191  007F44                     __end_of__powers_:
   192                           	opt stack 0
   193  007F44                     __npowers_:
   194                           	opt stack 0
   195  007F44  00                 	db	0
   196  007F45  80                 	db	128
   197  007F46  3F                 	db	63
   198  007F47  CD                 	db	205
   199  007F48  CC                 	db	204
   200  007F49  3D                 	db	61
   201  007F4A  D7                 	db	215
   202  007F4B  23                 	db	35
   203  007F4C  3C                 	db	60
   204  007F4D  12                 	db	18
   205  007F4E  83                 	db	131
   206  007F4F  3A                 	db	58
   207  007F50  B7                 	db	183
   208  007F51  D1                 	db	209
   209  007F52  38                 	db	56
   210  007F53  C6                 	db	198
   211  007F54  27                 	db	39
   212  007F55  37                 	db	55
   213  007F56  38                 	db	56
   214  007F57  86                 	db	134
   215  007F58  35                 	db	53
   216  007F59  C0                 	db	192
   217  007F5A  D6                 	db	214
   218  007F5B  33                 	db	51
   219  007F5C  CC                 	db	204
   220  007F5D  2B                 	db	43
   221  007F5E  32                 	db	50
   222  007F5F  70                 	db	112
   223  007F60  89                 	db	137
   224  007F61  30                 	db	48
   225  007F62  E7                 	db	231
   226  007F63  DB                 	db	219
   227  007F64  2E                 	db	46
   228  007F65  E5                 	db	229
   229  007F66  3C                 	db	60
   230  007F67  1E                 	db	30
   231  007F68  42                 	db	66
   232  007F69  A2                 	db	162
   233  007F6A  0D                 	db	13
   234  007F6B                     __end_of__npowers_:
   235                           	opt stack 0
   236  0000                     _ANSELDbits	set	3899
   237  0000                     _ANSELAbits	set	3896
   238  0000                     _VREFCON0bits	set	3906
   239  0000                     _ADRES	set	4035
   240  0000                     _PORTDbits	set	3971
   241  0000                     _INTCONbits	set	4082
   242  0000                     _IPR1bits	set	3999
   243  0000                     _PIE1bits	set	3997
   244  0000                     _TMR1L	set	4046
   245  0000                     _TMR1H	set	4047
   246  0000                     _T1CONbits	set	4045
   247  0000                     _RCONbits	set	4048
   248  0000                     _PORTAbits	set	3968
   249  0000                     _PIR1bits	set	3998
   250  0000                     _ADCON0bits	set	4034
   251  0000                     _LATDbits	set	3980
   252  0000                     _TRISDbits	set	3989
   253  0000                     _LATAbits	set	3977
   254  0000                     _TRISAbits	set	3986
   255  0000                     _ADCON2	set	4032
   256  0000                     _ADCON1	set	4033
   257  007F6B                     STR_2:
   258  007F6B  20                 	db	32
   259  007F6C  25                 	db	37
   260  007F6D  2E                 	db	46
   261  007F6E  31                 	db	49	;'1'
   262  007F6F  66                 	db	102	;'f'
   263  007F70  20                 	db	32
   264  007F71  25                 	db	37
   265  007F72  2E                 	db	46
   266  007F73  31                 	db	49	;'1'
   267  007F74  66                 	db	102	;'f'
   268  007F75  20                 	db	32
   269  007F76  25                 	db	37
   270  007F77  33                 	db	51	;'3'
   271  007F78  2E                 	db	46
   272  007F79  30                 	db	48	;'0'
   273  007F7A  64                 	db	100	;'d'
   274  007F7B  20                 	db	32
   275  007F7C  25                 	db	37
   276  007F7D  33                 	db	51	;'3'
   277  007F7E  2E                 	db	46
   278  007F7F  30                 	db	48	;'0'
   279  007F80  64                 	db	100	;'d'
   280  007F81  00                 	db	0
   281  007F82                     STR_39:
   282  007F82  2D                 	db	45
   283  007F83  2D                 	db	45
   284  007F84  2E                 	db	46
   285  007F85  2E                 	db	46
   286  007F86  2D                 	db	45
   287  007F87  2D                 	db	45
   288  007F88  00                 	db	0
   289  007F89                     STR_42:
   290  007F89  2E                 	db	46
   291  007F8A  2D                 	db	45
   292  007F8B  2E                 	db	46
   293  007F8C  2D                 	db	45
   294  007F8D  2E                 	db	46
   295  007F8E  2D                 	db	45
   296  007F8F  00                 	db	0
   297  007F90                     STR_43:
   298  007F90  2D                 	db	45
   299  007F91  2E                 	db	46
   300  007F92  2E                 	db	46
   301  007F93  2E                 	db	46
   302  007F94  2E                 	db	46
   303  007F95  2D                 	db	45
   304  007F96  00                 	db	0
   305  007F97                     STR_40:
   306  007F97  2E                 	db	46
   307  007F98  2E                 	db	46
   308  007F99  2D                 	db	45
   309  007F9A  2D                 	db	45
   310  007F9B  2E                 	db	46
   311  007F9C  2E                 	db	46
   312  007F9D  00                 	db	0
   313  007F9E                     STR_1:
   314  007F9E  45                 	db	69	;'E'
   315  007F9F  41                 	db	65	;'A'
   316  007FA0  53                 	db	83	;'S'
   317  007FA1  41                 	db	65	;'A'
   318  007FA2  54                 	db	84	;'T'
   319  007FA3  32                 	db	50	;'2'
   320  007FA4  00                 	db	0
   321  007FA5                     STR_29:
   322  007FA5  2D                 	db	45
   323  007FA6  2D                 	db	45
   324  007FA7  2D                 	db	45
   325  007FA8  2D                 	db	45
   326  007FA9  2D                 	db	45
   327  007FAA  00                 	db	0
   328  007FAB                     STR_30:
   329  007FAB  2E                 	db	46
   330  007FAC  2D                 	db	45
   331  007FAD  2D                 	db	45
   332  007FAE  2D                 	db	45
   333  007FAF  2D                 	db	45
   334  007FB0  00                 	db	0
   335  007FB1                     STR_31:
   336  007FB1  2E                 	db	46
   337  007FB2  2E                 	db	46
   338  007FB3  2D                 	db	45
   339  007FB4  2D                 	db	45
   340  007FB5  2D                 	db	45
   341  007FB6  00                 	db	0
   342  007FB7                     STR_32:
   343  007FB7  2E                 	db	46
   344  007FB8  2E                 	db	46
   345  007FB9  2E                 	db	46
   346  007FBA  2D                 	db	45
   347  007FBB  2D                 	db	45
   348  007FBC  00                 	db	0
   349  007FBD                     STR_38:
   350  007FBD  2D                 	db	45
   351  007FBE  2D                 	db	45
   352  007FBF  2D                 	db	45
   353  007FC0  2D                 	db	45
   354  007FC1  2E                 	db	46
   355  007FC2  00                 	db	0
   356  007FC3                     STR_41:
   357  007FC3  2D                 	db	45
   358  007FC4  2E                 	db	46
   359  007FC5  2E                 	db	46
   360  007FC6  2D                 	db	45
   361  007FC7  2E                 	db	46
   362  007FC8  00                 	db	0
   363  007FC9                     STR_37:
   364  007FC9  2D                 	db	45
   365  007FCA  2D                 	db	45
   366  007FCB  2D                 	db	45
   367  007FCC  2E                 	db	46
   368  007FCD  2E                 	db	46
   369  007FCE  00                 	db	0
   370  007FCF                     STR_36:
   371  007FCF  2D                 	db	45
   372  007FD0  2D                 	db	45
   373  007FD1  2E                 	db	46
   374  007FD2  2E                 	db	46
   375  007FD3  2E                 	db	46
   376  007FD4  00                 	db	0
   377  007FD5                     STR_35:
   378  007FD5  2D                 	db	45
   379  007FD6  2E                 	db	46
   380  007FD7  2E                 	db	46
   381  007FD8  2E                 	db	46
   382  007FD9  2E                 	db	46
   383  007FDA  00                 	db	0
   384  007FDB                     STR_34:
   385  007FDB  2E                 	db	46
   386  007FDC  2E                 	db	46
   387  007FDD  2E                 	db	46
   388  007FDE  2E                 	db	46
   389  007FDF  2E                 	db	46
   390  007FE0  00                 	db	0
   391  007FE1                     STR_27:
   392  007FE1  2D                 	db	45
   393  007FE2  2E                 	db	46
   394  007FE3  2D                 	db	45
   395  007FE4  2D                 	db	45
   396  007FE5  00                 	db	0
   397  007FE6                     STR_19:
   398  007FE6  2D                 	db	45
   399  007FE7  2D                 	db	45
   400  007FE8  2E                 	db	46
   401  007FE9  2D                 	db	45
   402  007FEA  00                 	db	0
   403  007FEB                     STR_26:
   404  007FEB  2D                 	db	45
   405  007FEC  2E                 	db	46
   406  007FED  2E                 	db	46
   407  007FEE  2D                 	db	45
   408  007FEF  00                 	db	0
   409  007FF0                     STR_18:
   410  007FF0  2E                 	db	46
   411  007FF1  2D                 	db	45
   412  007FF2  2D                 	db	45
   413  007FF3  2E                 	db	46
   414  007FF4  00                 	db	0
   415  007FF5                     STR_5:
   416  007FF5  2D                 	db	45
   417  007FF6  2E                 	db	46
   418  007FF7  2D                 	db	45
   419  007FF8  2E                 	db	46
   420  007FF9  00                 	db	0
   421  007FFA                     STR_14:
   422  007FFA  2E                 	db	46
   423  007FFB  2D                 	db	45
   424  007FFC  2E                 	db	46
   425  007FFD  2E                 	db	46
   426  007FFE  00                 	db	0
   427  0000                     
   428                           ; #config settings
   429  007FFF  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	cinit
   432  003846                     __pcinit:
   433                           	opt stack 0
   434  003846                     start_initialization:
   435                           	opt stack 0
   436  003846                     __initialization:
   437                           	opt stack 0
   438                           
   439                           ; Initialize objects allocated to COMRAM (5 bytes)
   440                           ; load TBLPTR registers with __pidataCOMRAM
   441  003846  0E8A               	movlw	low __pidataCOMRAM
   442  003848  6EF6               	movwf	tblptrl,c
   443  00384A  0E3C               	movlw	high __pidataCOMRAM
   444  00384C  6EF7               	movwf	tblptrh,c
   445  00384E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   446  003850  6EF8               	movwf	tblptru,c
   447  003852  EE00  F039         	lfsr	0,__pdataCOMRAM
   448  003856  EE10 F005          	lfsr	1,5
   449  00385A                     copy_data0:
   450  00385A  0009               	tblrd		*+
   451  00385C  CFF5 FFEE          	movff	tablat,postinc0
   452  003860  50E5               	movf	postdec1,w,c
   453  003862  50E1               	movf	fsr1l,w,c
   454  003864  E1FA               	bnz	copy_data0
   455                           
   456                           ; Clear objects allocated to BANK2 (200 bytes)
   457  003866  EE02  F000         	lfsr	0,__pbssBANK2
   458  00386A  0EC8               	movlw	200
   459  00386C                     clear_0:
   460  00386C  6AEE               	clrf	postinc0,c
   461  00386E  06E8               	decf	wreg,f,c
   462  003870  E1FD               	bnz	clear_0
   463                           
   464                           ; Clear objects allocated to COMRAM (12 bytes)
   465  003872  EE00  F02D         	lfsr	0,__pbssCOMRAM
   466  003876  0E0C               	movlw	12
   467  003878                     clear_1:
   468  003878  6AEE               	clrf	postinc0,c
   469  00387A  06E8               	decf	wreg,f,c
   470  00387C  E1FD               	bnz	clear_1
   471  00387E                     end_of_initialization:
   472                           	opt stack 0
   473  00387E                     __end_of__initialization:
   474                           	opt stack 0
   475  00387E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   476  003880  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   477  003882  0E00               	movlw	low (__Lmediumconst shr (0+16))
   478  003884  6EF8               	movwf	tblptru,c
   479  003886  0100               	movlb	0
   480  003888  EF3F  F01E         	goto	_main	;jump to C main() function
   481                           tblptru	equ	0xFF8
   482                           tblptrh	equ	0xFF7
   483                           tblptrl	equ	0xFF6
   484                           tablat	equ	0xFF5
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           
   490                           	psect	bssCOMRAM
   491  00002D                     __pbssCOMRAM:
   492                           	opt stack 0
   493  00002D                     high_priority_int@valid_samples:
   494                           	opt stack 0
   495  00002D                     	ds	2
   496  00002F                     high_priority_int@is_transmitter_active:
   497                           	opt stack 0
   498  00002F                     	ds	2
   499  000031                     high_priority_int@cycles_transmitter_active:
   500                           	opt stack 0
   501  000031                     	ds	2
   502  000033                     high_priority_int@times_thresold_exceeded:
   503                           	opt stack 0
   504  000033                     	ds	2
   505  000035                     high_priority_int@sample_position:
   506                           	opt stack 0
   507  000035                     	ds	2
   508  000037                     _tmr1_interrupt_number:
   509                           	opt stack 0
   510  000037                     	ds	2
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataCOMRAM
   521  000039                     __pdataCOMRAM:
   522                           	opt stack 0
   523  000039                     high_priority_int@noise_mean_value:
   524                           	opt stack 0
   525  000039                     	ds	3
   526  00003C                     high_priority_int@activation_thresold:
   527                           	opt stack 0
   528  00003C                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538                           	psect	bssBANK2
   539  000200                     __pbssBANK2:
   540                           	opt stack 0
   541  000200                     high_priority_int@samples:
   542                           	opt stack 0
   543  000200                     	ds	200
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackBANK1
   554  000100                     __pcstackBANK1:
   555                           	opt stack 0
   556  000100                     util_beacon_transmission@BEACON_MESSAGE:
   557                           	opt stack 0
   558  000100                     util_getTemperature@bit_mem:
   559                           	opt stack 0
   560                           
   561                           ; 144 bytes @ 0x0
   562  000100                     	ds	128
   563  000180                     util_beacon_transmission@BEACON_BUFFER:
   564                           	opt stack 0
   565                           
   566                           ; 64 bytes @ 0x80
   567  000180                     	ds	16
   568  000190                     util_getTemperature@byte_mem:
   569                           	opt stack 0
   570                           
   571                           ; 18 bytes @ 0x90
   572  000190                     	ds	18
   573  0001A2                     util_getTemperature@num_bit:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0xA2
   577  0001A2                     	ds	2
   578  0001A4                     util_getTemperature@sign:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0xA4
   582  0001A4                     	ds	3
   583  0001A7                     _util_getTemperature$2165:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0xA7
   587  0001A7                     	ds	3
   588  0001AA                     _util_getTemperature$2166:
   589                           	opt stack 0
   590                           
   591                           ; 3 bytes @ 0xAA
   592  0001AA                     	ds	3
   593  0001AD                     _util_getTemperature$2167:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0xAD
   597  0001AD                     	ds	3
   598  0001B0                     _util_getTemperature$2168:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0xB0
   602  0001B0                     	ds	3
   603  0001B3                     util_getTemperature@shift_reg_bit0:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xB3
   607  0001B3                     	ds	2
   608  0001B5                     util_getTemperature@shift_reg_bit1:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0xB5
   612  0001B5                     	ds	2
   613  0001B7                     util_getTemperature@shift_reg_bit2:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0xB7
   617  0001B7                     	ds	2
   618  0001B9                     util_getTemperature@shift_reg_bit3:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0xB9
   622  0001B9                     	ds	2
   623  0001BB                     util_getTemperature@shift_reg_bit4:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0xBB
   627  0001BB                     	ds	2
   628  0001BD                     util_getTemperature@shift_reg_bit5:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0xBD
   632  0001BD                     	ds	2
   633  0001BF                     util_getTemperature@shift_reg_bit6:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xBF
   637  0001BF                     	ds	1
   638  0001C0                     util_beacon_transmission@i:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xC0
   642  0001C0                     	ds	1
   643  0001C1                     util_getTemperature@shift_reg_bit7:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0xC1
   647  0001C1                     	ds	2
   648  0001C3                     util_getTemperature@shift_reg_bit_temp:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0xC3
   652  0001C3                     	ds	2
   653  0001C5                     util_getTemperature@num_byte:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0xC5
   657  0001C5                     	ds	2
   658  0001C7                     util_getTemperature@bit_in_byte:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0xC7
   662  0001C7                     	ds	2
   663  0001C9                     util_getTemperature@temperature:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0xC9
   667  0001C9                     	ds	3
   668  0001CC                     util_getTemperature@i:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0xCC
   672  0001CC                     	ds	2
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1l	equ	0xFE1
   681                           
   682                           	psect	cstackBANK0
   683  000060                     __pcstackBANK0:
   684                           	opt stack 0
   685  000060                     ??_low_priority_int:
   686                           
   687                           ; 1 bytes @ 0x0
   688  000060                     	ds	17
   689  000071                     ?_util_onewire_reset:
   690                           	opt stack 0
   691  000071                     ?_util_onewire_read_bit:
   692                           	opt stack 0
   693  000071                     ?_strlen:
   694                           	opt stack 0
   695  000071                     ?___awmod:
   696                           	opt stack 0
   697  000071                     ?___ftpack:
   698                           	opt stack 0
   699  000071                     ?___ftneg:
   700                           	opt stack 0
   701  000071                     ?__tdiv_to_l_:
   702                           	opt stack 0
   703  000071                     ?__div_to_l_:
   704                           	opt stack 0
   705  000071                     ?___lldiv:
   706                           	opt stack 0
   707  000071                     util_onewire_write_bit@bit_in:
   708                           	opt stack 0
   709  000071                     util_waits_delay_ms@ms:
   710                           	opt stack 0
   711  000071                     util_waits_delay_hundred_us@hun_us:
   712                           	opt stack 0
   713  000071                     ___awmod@dividend:
   714                           	opt stack 0
   715  000071                     memset@p1:
   716                           	opt stack 0
   717  000071                     strcat@to:
   718                           	opt stack 0
   719  000071                     strcpy@to:
   720                           	opt stack 0
   721  000071                     strlen@s:
   722                           	opt stack 0
   723  000071                     __div_to_l_@f1:
   724                           	opt stack 0
   725  000071                     ___ftpack@arg:
   726                           	opt stack 0
   727  000071                     __tdiv_to_l_@f1:
   728                           	opt stack 0
   729  000071                     ___ftge@ff1:
   730                           	opt stack 0
   731  000071                     ___ftneg@f1:
   732                           	opt stack 0
   733  000071                     ___lldiv@dividend:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x11
   737  000071                     	ds	2
   738  000073                     ?_util_onewire_read_byte:
   739                           	opt stack 0
   740  000073                     util_onewire_write_byte@value:
   741                           	opt stack 0
   742  000073                     util_transmit_morse_sequence@morse_sequence:
   743                           	opt stack 0
   744  000073                     util_waits_delay_secs@secs:
   745                           	opt stack 0
   746  000073                     ___awmod@divisor:
   747                           	opt stack 0
   748  000073                     memset@c:
   749                           	opt stack 0
   750  000073                     strcat@from:
   751                           	opt stack 0
   752  000073                     strcpy@from:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x13
   756  000073                     	ds	1
   757  000074                     ___ftpack@exp:
   758                           	opt stack 0
   759  000074                     __div_to_l_@f2:
   760                           	opt stack 0
   761  000074                     __tdiv_to_l_@f2:
   762                           	opt stack 0
   763  000074                     ___ftge@ff2:
   764                           	opt stack 0
   765                           
   766                           ; 3 bytes @ 0x14
   767  000074                     	ds	1
   768  000075                     ??_util_onewire_read_byte:
   769  000075                     ?___awdiv:
   770                           	opt stack 0
   771  000075                     ___ftpack@sign:
   772                           	opt stack 0
   773  000075                     util_onewire_write_byte@bit0:
   774                           	opt stack 0
   775  000075                     util_waits_delay_mins@minutes:
   776                           	opt stack 0
   777  000075                     ___awdiv@dividend:
   778                           	opt stack 0
   779  000075                     memset@n:
   780                           	opt stack 0
   781  000075                     ___lldiv@divisor:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x15
   785  000075                     	ds	1
   786  000076                     ?___awtoft:
   787                           	opt stack 0
   788  000076                     ?___lltoft:
   789                           	opt stack 0
   790  000076                     ?___lwtoft:
   791                           	opt stack 0
   792  000076                     ___awtoft@c:
   793                           	opt stack 0
   794  000076                     ___lwtoft@c:
   795                           	opt stack 0
   796  000076                     ___lltoft@c:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x16
   800  000076                     	ds	1
   801  000077                     util_onewire_write_byte@bit1:
   802                           	opt stack 0
   803  000077                     util_waits_delay_hours@hours:
   804                           	opt stack 0
   805  000077                     ___awdiv@divisor:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x17
   809  000077                     	ds	2
   810  000079                     ??_util_waits_delay_hours:
   811  000079                     ?___wmul:
   812                           	opt stack 0
   813  000079                     ?___ftdiv:
   814                           	opt stack 0
   815  000079                     ?___llmod:
   816                           	opt stack 0
   817  000079                     util_onewire_write_byte@bit2:
   818                           	opt stack 0
   819  000079                     ___wmul@multiplier:
   820                           	opt stack 0
   821  000079                     ___ftdiv@f1:
   822                           	opt stack 0
   823  000079                     ___llmod@dividend:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x19
   827  000079                     	ds	1
   828  00007A                     util_waits_delay_hours@i:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x1A
   832  00007A                     	ds	1
   833  00007B                     util_onewire_write_byte@bit3:
   834                           	opt stack 0
   835  00007B                     ___wmul@multiplicand:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x1B
   839  00007B                     	ds	1
   840  00007C                     ___ftdiv@f2:
   841                           	opt stack 0
   842                           
   843                           ; 3 bytes @ 0x1C
   844  00007C                     	ds	1
   845  00007D                     ?___ftmul:
   846                           	opt stack 0
   847  00007D                     util_onewire_write_byte@bit4:
   848                           	opt stack 0
   849  00007D                     ___ftmul@f1:
   850                           	opt stack 0
   851  00007D                     ___llmod@divisor:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x1D
   855  00007D                     	ds	2
   856  00007F                     ___ftdiv@cntr:
   857                           	opt stack 0
   858  00007F                     util_onewire_write_byte@bit5:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x1F
   862  00007F                     	ds	1
   863  000080                     ___ftdiv@f3:
   864                           	opt stack 0
   865  000080                     ___ftmul@f2:
   866                           	opt stack 0
   867                           
   868                           ; 3 bytes @ 0x20
   869  000080                     	ds	1
   870  000081                     util_onewire_write_byte@bit6:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x21
   874  000081                     	ds	2
   875  000083                     ___ftdiv@exp:
   876                           	opt stack 0
   877  000083                     ___ftmul@exp:
   878                           	opt stack 0
   879  000083                     util_onewire_write_byte@bit7:
   880                           	opt stack 0
   881  000083                     util_onewire_read_byte@bit0:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x23
   885  000083                     	ds	1
   886  000084                     ___ftdiv@sign:
   887                           	opt stack 0
   888  000084                     ___ftmul@f3_as_product:
   889                           	opt stack 0
   890                           
   891                           ; 3 bytes @ 0x24
   892  000084                     	ds	1
   893  000085                     util_onewire_read_byte@bit1:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x25
   897  000085                     	ds	2
   898  000087                     ___ftmul@cntr:
   899                           	opt stack 0
   900  000087                     util_onewire_read_byte@bit2:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x27
   904  000087                     	ds	1
   905  000088                     ___ftmul@sign:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x28
   909  000088                     	ds	1
   910  000089                     ?_util_getBatteryVoltage:
   911                           	opt stack 0
   912  000089                     ?_fround:
   913                           	opt stack 0
   914  000089                     ?_scale:
   915                           	opt stack 0
   916  000089                     util_onewire_read_byte@bit3:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x29
   920  000089                     	ds	2
   921  00008B                     util_onewire_read_byte@bit4:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x2B
   925  00008B                     	ds	1
   926  00008C                     util_getBatteryVoltage@value:
   927                           	opt stack 0
   928  00008C                     _fround$2170:
   929                           	opt stack 0
   930  00008C                     _scale$2171:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x2C
   934  00008C                     	ds	1
   935  00008D                     util_onewire_read_byte@bit5:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x2D
   939  00008D                     	ds	2
   940  00008F                     scale@scl:
   941                           	opt stack 0
   942  00008F                     util_onewire_read_byte@bit6:
   943                           	opt stack 0
   944  00008F                     util_getBatteryVoltage@voltage:
   945                           	opt stack 0
   946  00008F                     _fround$2169:
   947                           	opt stack 0
   948                           
   949                           ; 3 bytes @ 0x2F
   950  00008F                     	ds	1
   951  000090                     ?___fttol:
   952                           	opt stack 0
   953  000090                     ___fttol@f1:
   954                           	opt stack 0
   955                           
   956                           ; 3 bytes @ 0x30
   957  000090                     	ds	1
   958  000091                     util_onewire_read_byte@bit7:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x31
   962  000091                     	ds	1
   963  000092                     fround@prec:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x32
   967  000092                     	ds	1
   968  000093                     ?___ftadd:
   969                           	opt stack 0
   970  000093                     util_onewire_read_byte@value:
   971                           	opt stack 0
   972  000093                     ___ftadd@f1:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x33
   976  000093                     	ds	1
   977  000094                     ??___fttol:
   978                           
   979                           ; 1 bytes @ 0x34
   980  000094                     	ds	2
   981  000096                     ___ftadd@f2:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x36
   985  000096                     	ds	3
   986  000099                     ??___ftadd:
   987  000099                     ___fttol@sign1:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x39
   991  000099                     	ds	1
   992  00009A                     ___fttol@lval:
   993                           	opt stack 0
   994                           
   995                           ; 4 bytes @ 0x3A
   996  00009A                     	ds	2
   997  00009C                     ___ftadd@sign:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x3C
  1001  00009C                     	ds	1
  1002  00009D                     ___ftadd@exp2:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x3D
  1006  00009D                     	ds	1
  1007  00009E                     ___ftadd@exp1:
  1008                           	opt stack 0
  1009  00009E                     ___fttol@exp1:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x3E
  1013  00009E                     	ds	1
  1014  00009F                     ?_util_getSolarCurrent:
  1015                           	opt stack 0
  1016  00009F                     ?_util_getBatteryCurrent:
  1017                           	opt stack 0
  1018  00009F                     ?_util_getTemperature:
  1019                           	opt stack 0
  1020  00009F                     ?___ftsub:
  1021                           	opt stack 0
  1022  00009F                     ___ftsub@f1:
  1023                           	opt stack 0
  1024                           
  1025                           ; 3 bytes @ 0x3F
  1026  00009F                     	ds	2
  1027  0000A1                     util_getSolarCurrent@value:
  1028                           	opt stack 0
  1029  0000A1                     util_getBatteryCurrent@value:
  1030                           	opt stack 0
  1031                           
  1032                           ; 3 bytes @ 0x41
  1033  0000A1                     	ds	1
  1034  0000A2                     ??_util_getTemperature:
  1035  0000A2                     ___ftsub@f2:
  1036                           	opt stack 0
  1037                           
  1038                           ; 3 bytes @ 0x42
  1039  0000A2                     	ds	2
  1040  0000A4                     util_getSolarCurrent@solarCurrent:
  1041                           	opt stack 0
  1042  0000A4                     util_getBatteryCurrent@batteryCurrent:
  1043                           	opt stack 0
  1044                           
  1045                           ; 3 bytes @ 0x44
  1046  0000A4                     	ds	1
  1047  0000A5                     ?_sprintf:
  1048                           	opt stack 0
  1049  0000A5                     sprintf@sp:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x45
  1053  0000A5                     	ds	2
  1054  0000A7                     sprintf@f:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x47
  1058  0000A7                     	ds	12
  1059  0000B3                     ??_sprintf:
  1060                           
  1061                           ; 1 bytes @ 0x53
  1062  0000B3                     	ds	6
  1063  0000B9                     _sprintf$2172:
  1064                           	opt stack 0
  1065                           
  1066                           ; 3 bytes @ 0x59
  1067  0000B9                     	ds	3
  1068  0000BC                     sprintf@ap:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x5C
  1072  0000BC                     	ds	2
  1073  0000BE                     sprintf@flag:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x5E
  1077  0000BE                     	ds	2
  1078  0000C0                     sprintf@width:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x60
  1082  0000C0                     	ds	2
  1083  0000C2                     sprintf@tmpval:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x62
  1087  0000C2                     	ds	4
  1088  0000C6                     sprintf@val:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x66
  1092  0000C6                     	ds	4
  1093  0000CA                     sprintf@exp:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x6A
  1097  0000CA                     	ds	2
  1098  0000CC                     sprintf@fval:
  1099                           	opt stack 0
  1100                           
  1101                           ; 3 bytes @ 0x6C
  1102  0000CC                     	ds	3
  1103  0000CF                     sprintf@prec:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x6F
  1107  0000CF                     	ds	2
  1108  0000D1                     sprintf@c:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x71
  1112  0000D1                     	ds	1
  1113  0000D2                     util_beacon_transmission@battery_voltage:
  1114                           	opt stack 0
  1115                           
  1116                           ; 3 bytes @ 0x72
  1117  0000D2                     	ds	3
  1118  0000D5                     util_beacon_transmission@solar_current:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0x75
  1122  0000D5                     	ds	2
  1123  0000D7                     util_beacon_transmission@battery_current:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x77
  1127  0000D7                     	ds	2
  1128  0000D9                     util_beacon_transmission@temperature:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x79
  1132  0000D9                     	ds	3
  1133  0000DC                     main_loop@temperature:
  1134                           	opt stack 0
  1135                           
  1136                           ; 3 bytes @ 0x7C
  1137  0000DC                     	ds	3
  1138  0000DF                     main_loop@solar_current:
  1139                           	opt stack 0
  1140                           
  1141                           ; 2 bytes @ 0x7F
  1142  0000DF                     	ds	2
  1143  0000E1                     main_loop@battery_current:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0x81
  1147  0000E1                     	ds	2
  1148  0000E3                     main_loop@battery_voltage:
  1149                           	opt stack 0
  1150                           
  1151                           ; 3 bytes @ 0x83
  1152  0000E3                     	ds	3
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec1	equ	0xFE5
  1160                           fsr1l	equ	0xFE1
  1161                           
  1162                           	psect	cstackCOMRAM
  1163  000001                     __pcstackCOMRAM:
  1164                           	opt stack 0
  1165  000001                     ?___ltdiv:
  1166                           	opt stack 0
  1167  000001                     ___ltdiv@dividend:
  1168                           	opt stack 0
  1169                           
  1170                           ; 3 bytes @ 0x0
  1171  000001                     	ds	3
  1172  000004                     ___ltdiv@divisor:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x3
  1176  000004                     	ds	3
  1177  000007                     ___ltdiv@quotient:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x6
  1181  000007                     	ds	3
  1182  00000A                     ___ltdiv@counter:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x9
  1186  00000A                     	ds	1
  1187  00000B                     ??_high_priority_int:
  1188                           
  1189                           ; 1 bytes @ 0xA
  1190  00000B                     	ds	19
  1191  00001E                     high_priority_int@sample:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x1D
  1195  00001E                     	ds	2
  1196  000020                     high_priority_int@i:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x1F
  1200  000020                     	ds	2
  1201  000022                     ??_util_onewire_reset:
  1202  000022                     ??_util_onewire_write_byte:
  1203  000022                     ??_util_onewire_read_bit:
  1204  000022                     ??_strlen:
  1205  000022                     ??_util_waits_delay_ms:
  1206  000022                     ??_util_waits_delay_hundred_us:
  1207  000022                     ??_isdigit:
  1208  000022                     ??__tdiv_to_l_:
  1209  000022                     ??___ftpack:
  1210  000022                     ??___ftge:
  1211  000022                     ___awmod@counter:
  1212                           	opt stack 0
  1213  000022                     memset@p:
  1214                           	opt stack 0
  1215  000022                     strcat@cp:
  1216                           	opt stack 0
  1217  000022                     strcpy@cp:
  1218                           	opt stack 0
  1219  000022                     __div_to_l_@quot:
  1220                           	opt stack 0
  1221  000022                     ___lldiv@quotient:
  1222                           	opt stack 0
  1223                           
  1224                           ; 4 bytes @ 0x21
  1225  000022                     	ds	1
  1226  000023                     ___awmod@sign:
  1227                           	opt stack 0
  1228  000023                     _isdigit$1811:
  1229                           	opt stack 0
  1230  000023                     util_onewire_reset@presence:
  1231                           	opt stack 0
  1232  000023                     util_onewire_read_bit@value:
  1233                           	opt stack 0
  1234  000023                     util_waits_delay_ms@i:
  1235                           	opt stack 0
  1236  000023                     util_waits_delay_hundred_us@i:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x22
  1240  000023                     	ds	1
  1241  000024                     ___awdiv@counter:
  1242                           	opt stack 0
  1243  000024                     isdigit@c:
  1244                           	opt stack 0
  1245  000024                     strlen@cp:
  1246                           	opt stack 0
  1247                           
  1248                           ; 2 bytes @ 0x23
  1249  000024                     	ds	1
  1250  000025                     ??_util_waits_delay_secs:
  1251  000025                     ??___lltoft:
  1252  000025                     ___awdiv@sign:
  1253                           	opt stack 0
  1254  000025                     ___awtoft@sign:
  1255                           	opt stack 0
  1256  000025                     util_transmit_dot@i:
  1257                           	opt stack 0
  1258  000025                     util_transmit_dash@i:
  1259                           	opt stack 0
  1260  000025                     __tdiv_to_l_@quot:
  1261                           	opt stack 0
  1262                           
  1263                           ; 4 bytes @ 0x24
  1264  000025                     	ds	1
  1265  000026                     ??___ftdiv:
  1266  000026                     __div_to_l_@cntr:
  1267                           	opt stack 0
  1268  000026                     ___lldiv@counter:
  1269                           	opt stack 0
  1270  000026                     util_waits_delay_secs@i:
  1271                           	opt stack 0
  1272  000026                     ___awdiv@quotient:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x25
  1276  000026                     	ds	1
  1277  000027                     ??_util_transmit_morse_sequence:
  1278  000027                     __div_to_l_@exp1:
  1279                           	opt stack 0
  1280  000027                     ___llmod@counter:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x26
  1284  000027                     	ds	1
  1285  000028                     util_waits_delay_secs@j:
  1286                           	opt stack 0
  1287  000028                     ___wmul@product:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x27
  1291  000028                     	ds	1
  1292  000029                     __tdiv_to_l_@cntr:
  1293                           	opt stack 0
  1294  000029                     ___lltoft@exp:
  1295                           	opt stack 0
  1296  000029                     util_transmit_morse_sequence@i:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x28
  1300  000029                     	ds	1
  1301  00002A                     ??_util_waits_delay_mins:
  1302  00002A                     ??___ftmul:
  1303  00002A                     __tdiv_to_l_@exp1:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x29
  1307  00002A                     	ds	1
  1308  00002B                     util_transmit_letter@letter:
  1309                           	opt stack 0
  1310  00002B                     util_waits_delay_mins@i:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x2A
  1314  00002B                     	ds	2
  1315  00002D                     tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           
  1324                           ; 1 bytes @ 0x2C
  1325 ;;
  1326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1327 ;;
  1328 ;; *************** function _main *****************
  1329 ;; Defined at:
  1330 ;;		line 19 in file "easat2_main_mcu.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1344 ;;      Params:         0       0       0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels required when called:   10
  1350 ;; This function calls:
  1351 ;;		_initialize
  1352 ;;		_main_loop
  1353 ;; This function is called by:
  1354 ;;		Startup code after reset
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text0
  1359  003C7E                     __ptext0:
  1360                           	opt stack 0
  1361  003C7E                     _main:
  1362                           	opt stack 21
  1363                           
  1364                           ;easat2_main_mcu.c: 22: initialize();
  1365                           
  1366                           ;incstack = 0
  1367  003C7E  ECC8  F01A         	call	_initialize	;wreg free
  1368                           
  1369                           ;easat2_main_mcu.c: 25: main_loop();
  1370  003C82  EC82  F01A         	call	_main_loop	;wreg free
  1371  003C86  EF53  F000         	goto	start
  1372  003C8A                     __end_of_main:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           postdec1	equ	0xFE5
  1381                           fsr1l	equ	0xFE1
  1382                           
  1383 ;; *************** function _main_loop *****************
  1384 ;; Defined at:
  1385 ;;		line 31 in file "easat2_main_mcu.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  battery_volt    3  131[BANK0 ] float 
  1390 ;;  temperature     3  124[BANK0 ] float 
  1391 ;;  battery_curr    2  129[BANK0 ] int 
  1392 ;;  solar_curren    2  127[BANK0 ] int 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1402 ;;      Params:         0       0       0       0       0       0       0
  1403 ;;      Locals:         0      10       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0
  1405 ;;      Totals:         0      10       0       0       0       0       0
  1406 ;;Total ram usage:       10 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    9
  1409 ;; This function calls:
  1410 ;;		_util_beacon_transmission
  1411 ;;		_util_getBatteryCurrent
  1412 ;;		_util_getBatteryVoltage
  1413 ;;		_util_getSolarCurrent
  1414 ;;		_util_getTemperature
  1415 ;;		_util_waits_delay_hours
  1416 ;;		_util_waits_delay_mins
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text1
  1423  003504                     __ptext1:
  1424                           	opt stack 0
  1425  003504                     _main_loop:
  1426                           	opt stack 21
  1427  003504                     l24:
  1428  003504  0004               	clrwdt		;# 
  1429                           
  1430                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1431  003506  EC88  F018         	call	_util_getBatteryVoltage	;wreg free
  1432  00350A  C089  F0E3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1433  00350E  C08A  F0E4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1434  003512  C08B  F0E5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1435                           
  1436                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1437  003516  ECBE  F017         	call	_util_getSolarCurrent	;wreg free
  1438  00351A  C09F  F0DF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1439  00351E  C0A0  F0E0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1440                           
  1441                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1442  003522  EC23  F018         	call	_util_getBatteryCurrent	;wreg free
  1443  003526  C09F  F0E1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1444  00352A  C0A0  F0E2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1445                           
  1446                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1447  00352E  EC24  F006         	call	_util_getTemperature	;wreg free
  1448  003532  C09F  F0DC         	movff	?_util_getTemperature,main_loop@temperature
  1449  003536  C0A0  F0DD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1450  00353A  C0A1  F0DE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1451                           
  1452                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1453  00353E  0100               	movlb	0	; () banked
  1454  003540  BFE5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1455  003542  D017               	goto	l6109
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1459  003544  C0E3  F0D2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1460  003548  C0E4  F0D3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1461  00354C  C0E5  F0D4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1462  003550  C0DF  F0D5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1463  003554  C0E0  F0D6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1464  003558  C0E1  F0D7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1465  00355C  C0E2  F0D8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1466  003560  C0DC  F0D9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1467  003564  C0DD  F0DA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1468  003568  C0DE  F0DB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1469  00356C  ECBB  F016         	call	_util_beacon_transmission	;wreg free
  1470                           
  1471                           ;easat2_main_mcu.c: 62: } else {
  1472  003570  D007               	goto	l26
  1473  003572                     l6109:
  1474                           
  1475                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1476  003572  0E00               	movlw	0
  1477  003574  0100               	movlb	0	; () banked
  1478  003576  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1479  003578  0E02               	movlw	2
  1480  00357A  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1481  00357C  EC68  F01C         	call	_util_waits_delay_hours	;wreg free
  1482  003580                     l26:
  1483                           
  1484                           ;easat2_main_mcu.c: 65: }
  1485                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1486  003580  0E00               	movlw	0
  1487  003582  0100               	movlb	0	; () banked
  1488  003584  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1489  003586  0E03               	movlw	3
  1490  003588  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1491  00358A  ECCA  F01C         	call	_util_waits_delay_mins	;wreg free
  1492                           
  1493                           ;easat2_main_mcu.c: 71: } while (1);
  1494  00358E  D7BA               	goto	l24
  1495  003590                     __end_of_main_loop:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec1	equ	0xFE5
  1504                           fsr1l	equ	0xFE1
  1505                           
  1506 ;; *************** function _util_waits_delay_hours *****************
  1507 ;; Defined at:
  1508 ;;		line 17 in file "easat2_util_waits.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  hours           2   23[BANK0 ] int 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  i               2   26[BANK0 ] int 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1522 ;;      Params:         0       2       0       0       0       0       0
  1523 ;;      Locals:         0       2       0       0       0       0       0
  1524 ;;      Temps:          0       1       0       0       0       0       0
  1525 ;;      Totals:         0       5       0       0       0       0       0
  1526 ;;Total ram usage:        5 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    6
  1529 ;; This function calls:
  1530 ;;		_util_waits_delay_mins
  1531 ;; This function is called by:
  1532 ;;		_main_loop
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text2
  1537  0038D0                     __ptext2:
  1538                           	opt stack 0
  1539  0038D0                     _util_waits_delay_hours:
  1540                           	opt stack 23
  1541                           
  1542                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1543                           
  1544                           ;incstack = 0
  1545  0038D0  0E00               	movlw	0
  1546  0038D2  0100               	movlb	0	; () banked
  1547  0038D4  6F7B               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1548  0038D6  0E00               	movlw	0
  1549  0038D8  6F7A               	movwf	util_waits_delay_hours@i& (0+255),b
  1550  0038DA  D00A               	goto	l5995
  1551  0038DC                     l5991:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1555  0038DC  0E00               	movlw	0
  1556  0038DE  0100               	movlb	0	; () banked
  1557  0038E0  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1558  0038E2  0E3C               	movlw	60
  1559  0038E4  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1560  0038E6  ECCA  F01C         	call	_util_waits_delay_mins	;wreg free
  1561  0038EA  0100               	movlb	0	; () banked
  1562  0038EC  4B7A               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1563  0038EE  2B7B               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1564  0038F0                     l5995:
  1565                           
  1566                           ; BSR set to: 0
  1567  0038F0  0100               	movlb	0	; () banked
  1568  0038F2  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1569  0038F4  0100               	movlb	0	; () banked
  1570  0038F6  5D7A               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1571  0038F8  0100               	movlb	0	; () banked
  1572  0038FA  517B               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1573  0038FC  0A80               	xorlw	128
  1574  0038FE  0100               	movlb	0	; () banked
  1575  003900  6F79               	movwf	??_util_waits_delay_hours& (0+255),b
  1576  003902  0100               	movlb	0	; () banked
  1577  003904  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1578  003906  0A80               	xorlw	128
  1579  003908  0100               	movlb	0	; () banked
  1580  00390A  5979               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1581  00390C  B0D8               	btfsc	status,0,c
  1582  00390E  0012               	return	
  1583  003910  D7E5               	goto	l5991
  1584  003912                     __end_of_util_waits_delay_hours:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           postdec1	equ	0xFE5
  1593                           fsr1l	equ	0xFE1
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _util_waits_delay_mins *****************
  1597 ;; Defined at:
  1598 ;;		line 24 in file "easat2_util_waits.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  minutes         2   21[BANK0 ] int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  i               2   42[COMRAM] int 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1612 ;;      Params:         0       2       0       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0       0       0
  1615 ;;      Totals:         3       2       0       0       0       0       0
  1616 ;;Total ram usage:        5 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    5
  1619 ;; This function calls:
  1620 ;;		_util_waits_delay_secs
  1621 ;; This function is called by:
  1622 ;;		_main_loop
  1623 ;;		_util_waits_delay_hours
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text3
  1628  003994                     __ptext3:
  1629                           	opt stack 0
  1630  003994                     _util_waits_delay_mins:
  1631                           	opt stack 24
  1632                           
  1633                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;incstack = 0
  1637  003994  0E00               	movlw	0
  1638  003996  6E2C               	movwf	util_waits_delay_mins@i+1,c
  1639  003998  0E00               	movlw	0
  1640  00399A  6E2B               	movwf	util_waits_delay_mins@i,c
  1641  00399C  D009               	goto	l5221
  1642  00399E                     l5217:
  1643                           
  1644                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1645  00399E  0E00               	movlw	0
  1646  0039A0  0100               	movlb	0	; () banked
  1647  0039A2  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1648  0039A4  0E3C               	movlw	60
  1649  0039A6  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1650  0039A8  ECD3  F01B         	call	_util_waits_delay_secs	;wreg free
  1651  0039AC  4A2B               	infsnz	util_waits_delay_mins@i,f,c
  1652  0039AE  2A2C               	incf	util_waits_delay_mins@i+1,f,c
  1653  0039B0                     l5221:
  1654  0039B0  0100               	movlb	0	; () banked
  1655  0039B2  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1656  0039B4  5C2B               	subwf	util_waits_delay_mins@i,w,c
  1657  0039B6  502C               	movf	util_waits_delay_mins@i+1,w,c
  1658  0039B8  0A80               	xorlw	128
  1659  0039BA  6E2A               	movwf	??_util_waits_delay_mins& (0+255),c
  1660  0039BC  0100               	movlb	0	; () banked
  1661  0039BE  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1662  0039C0  0A80               	xorlw	128
  1663  0039C2  582A               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1664  0039C4  B0D8               	btfsc	status,0,c
  1665  0039C6  0012               	return	
  1666  0039C8  D7EA               	goto	l5217
  1667  0039CA                     __end_of_util_waits_delay_mins:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           postdec1	equ	0xFE5
  1676                           fsr1l	equ	0xFE1
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _util_getTemperature *****************
  1680 ;; Defined at:
  1681 ;;		line 118 in file "easat2_util_inputs.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  bit_mem       144    0[BANK1 ] int [72]
  1686 ;;  byte_mem       18  144[BANK1 ] int [9]
  1687 ;;  temperature     3  201[BANK1 ] float 
  1688 ;;  sign            3  164[BANK1 ] float 
  1689 ;;  i               2  204[BANK1 ] int 
  1690 ;;  bit_in_byte     2  199[BANK1 ] int 
  1691 ;;  num_byte        2  197[BANK1 ] int 
  1692 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1693 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1694 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1695 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1696 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1697 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1698 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1699 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1700 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1701 ;;  num_bit         2  162[BANK1 ] int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  3   63[BANK0 ] float 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1711 ;;      Params:         0       3       0       0       0       0       0
  1712 ;;      Locals:         0       0     206       0       0       0       0
  1713 ;;      Temps:          0       3       0       0       0       0       0
  1714 ;;      Totals:         0       6     206       0       0       0       0
  1715 ;;Total ram usage:      212 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    5
  1718 ;; This function calls:
  1719 ;;		___awtoft
  1720 ;;		___ftadd
  1721 ;;		___ftdiv
  1722 ;;		___ftmul
  1723 ;;		_util_onewire_read_byte
  1724 ;;		_util_onewire_reset
  1725 ;;		_util_onewire_write_byte
  1726 ;;		_util_waits_delay_secs
  1727 ;; This function is called by:
  1728 ;;		_main_loop
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733  000C48                     __ptext4:
  1734                           	opt stack 0
  1735  000C48                     _util_getTemperature:
  1736                           	opt stack 24
  1737                           
  1738                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1739                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1740                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;incstack = 0
  1744  000C48  0E00               	movlw	0
  1745  000C4A  0101               	movlb	1	; () banked
  1746  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1747  000C4E  0E00               	movlw	0
  1748  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1749                           
  1750                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1751  000C52  0E00               	movlw	0
  1752  000C54  0101               	movlb	1	; () banked
  1753  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1754  000C58  0E00               	movlw	0
  1755  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1756                           
  1757                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1758  000C5C  0E00               	movlw	0
  1759  000C5E  0101               	movlb	1	; () banked
  1760  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1761  000C62  0E00               	movlw	0
  1762  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1763                           
  1764                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1765  000C66  0E00               	movlw	0
  1766  000C68  0101               	movlb	1	; () banked
  1767  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1768  000C6C  0E00               	movlw	0
  1769  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1770                           
  1771                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1772  000C70  0E00               	movlw	0
  1773  000C72  0101               	movlb	1	; () banked
  1774  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1775  000C76  0E00               	movlw	0
  1776  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1777                           
  1778                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1779  000C7A  0E00               	movlw	0
  1780  000C7C  0101               	movlb	1	; () banked
  1781  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1782  000C80  0E00               	movlw	0
  1783  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1784                           
  1785                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1786  000C84  0E00               	movlw	0
  1787  000C86  0101               	movlb	1	; () banked
  1788  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1789  000C8A  0E00               	movlw	0
  1790  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1791                           
  1792                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1793  000C8E  0E00               	movlw	0
  1794  000C90  0101               	movlb	1	; () banked
  1795  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1796  000C94  0E00               	movlw	0
  1797  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1798                           
  1799                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1800  000C98  0E00               	movlw	0
  1801  000C9A  0101               	movlb	1	; () banked
  1802  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1803  000C9E  0E00               	movlw	0
  1804  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1805                           
  1806                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1807  000CA2  0E00               	movlw	0
  1808  000CA4  0101               	movlb	1	; () banked
  1809  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1810  000CA8  0E00               	movlw	0
  1811  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1812  000CAC  0E00               	movlw	0
  1813  000CAE  0101               	movlb	1	; () banked
  1814  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1815  000CB2  0E00               	movlw	0
  1816  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1817  000CB6  0E00               	movlw	0
  1818  000CB8  0101               	movlb	1	; () banked
  1819  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1820  000CBC  0E00               	movlw	0
  1821  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1822                           
  1823                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1824  000CC0  0E00               	movlw	0
  1825  000CC2  0101               	movlb	1	; () banked
  1826  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1827  000CC6  0E00               	movlw	0
  1828  000CC8  0101               	movlb	1	; () banked
  1829  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1830  000CCC  0E00               	movlw	0
  1831  000CCE  0101               	movlb	1	; () banked
  1832  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1833                           
  1834                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1835  000CD2  0E00               	movlw	0
  1836  000CD4  0101               	movlb	1	; () banked
  1837  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1838  000CD8  0E80               	movlw	128
  1839  000CDA  0101               	movlb	1	; () banked
  1840  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1841  000CDE  0E3F               	movlw	63
  1842  000CE0  0101               	movlb	1	; () banked
  1843  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1844                           
  1845                           ;easat2_util_inputs.c: 137: int i = 0;
  1846  000CE4  0E00               	movlw	0
  1847  000CE6  0101               	movlb	1	; () banked
  1848  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1849  000CEA  0E00               	movlw	0
  1850  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1854  000CEE  EC89  F01C         	call	_util_onewire_reset	;wreg free
  1855  000CF2  0100               	movlb	0	; () banked
  1856  000CF4  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1857  000CF6  0100               	movlb	0	; () banked
  1858  000CF8  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1859  000CFA  B4D8               	btfsc	status,2,c
  1860  000CFC  D00A               	goto	l5839
  1861                           
  1862                           ; BSR set to: 0
  1863  000CFE  0E33               	movlw	51
  1864  000D00  0100               	movlb	0	; () banked
  1865  000D02  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1866  000D04  0EC6               	movlw	198
  1867  000D06  0100               	movlb	0	; () banked
  1868  000D08  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1869  000D0A  0EC2               	movlw	194
  1870  000D0C  0100               	movlb	0	; () banked
  1871  000D0E  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1872                           
  1873                           ; BSR set to: 0
  1874  000D10  0012               	return	
  1875  000D12                     l5839:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1879  000D12  0E00               	movlw	0
  1880  000D14  0100               	movlb	0	; () banked
  1881  000D16  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1882  000D18  0ECC               	movlw	204
  1883  000D1A  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1884  000D1C  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1885                           
  1886                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1887  000D20  0E00               	movlw	0
  1888  000D22  0100               	movlb	0	; () banked
  1889  000D24  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1890  000D26  0E44               	movlw	68
  1891  000D28  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1892  000D2A  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1893                           
  1894                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1895  000D2E  8692               	bsf	3986,3,c	;volatile
  1896                           
  1897                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1898  000D30  0E00               	movlw	0
  1899  000D32  0101               	movlb	1	; () banked
  1900  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1901  000D36  0E00               	movlw	0
  1902  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1903  000D3A  D00A               	goto	l5849
  1904  000D3C                     l5845:
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1908  000D3C  0E00               	movlw	0
  1909  000D3E  0100               	movlb	0	; () banked
  1910  000D40  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1911  000D42  0E01               	movlw	1
  1912  000D44  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1913  000D46  ECD3  F01B         	call	_util_waits_delay_secs	;wreg free
  1914  000D4A  0101               	movlb	1	; () banked
  1915  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1916  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1917  000D50                     l5849:
  1918                           
  1919                           ; BSR set to: 1
  1920  000D50  0101               	movlb	1	; () banked
  1921  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1922  000D54  D008               	goto	l5851
  1923  000D56  0101               	movlb	1	; () banked
  1924  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1925  000D5A  E107               	bnz	l5853
  1926  000D5C  0E05               	movlw	5
  1927  000D5E  0101               	movlb	1	; () banked
  1928  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1929  000D62  B0D8               	btfsc	status,0,c
  1930  000D64  D002               	goto	l5853
  1931  000D66                     l5851:
  1932                           
  1933                           ; BSR set to: 1
  1934  000D66  A680               	btfss	3968,3,c	;volatile
  1935  000D68  D7E9               	goto	l5845
  1936  000D6A                     l5853:
  1937                           
  1938                           ; BSR set to: 1
  1939                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1940  000D6A  0E05               	movlw	5
  1941  000D6C  0101               	movlb	1	; () banked
  1942  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1943  000D70  0101               	movlb	1	; () banked
  1944  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1945  000D74  A4D8               	btfss	status,2,c
  1946  000D76  D00A               	goto	l5859
  1947                           
  1948                           ; BSR set to: 1
  1949  000D78  0E66               	movlw	102
  1950  000D7A  0100               	movlb	0	; () banked
  1951  000D7C  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1952  000D7E  0EC6               	movlw	198
  1953  000D80  0100               	movlb	0	; () banked
  1954  000D82  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1955  000D84  0EC2               	movlw	194
  1956  000D86  0100               	movlb	0	; () banked
  1957  000D88  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1958                           
  1959                           ; BSR set to: 0
  1960  000D8A  0012               	return	
  1961  000D8C                     l5859:
  1962                           
  1963                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1964  000D8C  EC89  F01C         	call	_util_onewire_reset	;wreg free
  1965  000D90  0100               	movlb	0	; () banked
  1966  000D92  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1967  000D94  0100               	movlb	0	; () banked
  1968  000D96  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1969  000D98  B4D8               	btfsc	status,2,c
  1970  000D9A  D00A               	goto	l5865
  1971                           
  1972                           ; BSR set to: 0
  1973  000D9C  0E9A               	movlw	154
  1974  000D9E  0100               	movlb	0	; () banked
  1975  000DA0  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1976  000DA2  0EC6               	movlw	198
  1977  000DA4  0100               	movlb	0	; () banked
  1978  000DA6  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1979  000DA8  0EC2               	movlw	194
  1980  000DAA  0100               	movlb	0	; () banked
  1981  000DAC  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1982                           
  1983                           ; BSR set to: 0
  1984  000DAE  0012               	return	
  1985  000DB0                     l5865:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1989  000DB0  0E00               	movlw	0
  1990  000DB2  0100               	movlb	0	; () banked
  1991  000DB4  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1992  000DB6  0ECC               	movlw	204
  1993  000DB8  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1994  000DBA  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1995                           
  1996                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  1997  000DBE  0E00               	movlw	0
  1998  000DC0  0100               	movlb	0	; () banked
  1999  000DC2  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2000  000DC4  0EBE               	movlw	190
  2001  000DC6  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  2002  000DC8  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2003                           
  2004                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  2005  000DCC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2006  000DD0  C073  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2007  000DD4  C074  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2008                           
  2009                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  2010  000DD8  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2011  000DDC  C073  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2012  000DE0  C074  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2013                           
  2014                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  2015  000DE4  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2016  000DE8  C073  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2017  000DEC  C074  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2018                           
  2019                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  2020  000DF0  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2021  000DF4  C073  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2022  000DF8  C074  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2023                           
  2024                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2025  000DFC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2026  000E00  C073  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2027  000E04  C074  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2028                           
  2029                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2030  000E08  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2031  000E0C  C073  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2032  000E10  C074  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2033                           
  2034                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2035  000E14  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2036  000E18  C073  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2037  000E1C  C074  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2038                           
  2039                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2040  000E20  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2041  000E24  C073  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2042  000E28  C074  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2043                           
  2044                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2045  000E2C  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2046  000E30  C073  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2047  000E34  C074  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2048                           
  2049                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2050  000E38  0E00               	movlw	0
  2051  000E3A  0101               	movlb	1	; () banked
  2052  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2053  000E3E  0E00               	movlw	0
  2054  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2055  000E42                     l5869:
  2056                           
  2057                           ; BSR set to: 1
  2058  000E42  0101               	movlb	1	; () banked
  2059  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2060  000E46  D008               	goto	l5873
  2061  000E48  0101               	movlb	1	; () banked
  2062  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2063  000E4C  E14F               	bnz	l5891
  2064  000E4E  0E09               	movlw	9
  2065  000E50  0101               	movlb	1	; () banked
  2066  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2067  000E54  B0D8               	btfsc	status,0,c
  2068  000E56  D04A               	goto	l5891
  2069  000E58                     l5873:
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2073  000E58  0E00               	movlw	0
  2074  000E5A  0101               	movlb	1	; () banked
  2075  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2076  000E5E  0E00               	movlw	0
  2077  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2078  000E62                     l5875:
  2079                           
  2080                           ; BSR set to: 1
  2081  000E62  0101               	movlb	1	; () banked
  2082  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2083  000E66  D008               	goto	l5879
  2084  000E68  0101               	movlb	1	; () banked
  2085  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2086  000E6C  E13B               	bnz	l5887
  2087  000E6E  0E08               	movlw	8
  2088  000E70  0101               	movlb	1	; () banked
  2089  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2090  000E74  B0D8               	btfsc	status,0,c
  2091  000E76  D036               	goto	l5887
  2092  000E78                     l5879:
  2093                           
  2094                           ; BSR set to: 1
  2095                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2096  000E78  C1C7  F0A2         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2097  000E7C  90D8               	bcf	status,0,c
  2098  000E7E  0101               	movlb	1	; () banked
  2099  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2100  000E82  6ED9               	movwf	fsr2l,c
  2101  000E84  0101               	movlb	1	; () banked
  2102  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2103  000E88  6EDA               	movwf	fsr2h,c
  2104  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2105  000E8C  26D9               	addwf	fsr2l,f,c
  2106  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2107  000E90  22DA               	addwfc	fsr2h,f,c
  2108  000E92  CFDE F0A3          	movff	postinc2,??_util_getTemperature+1
  2109  000E96  CFDD F0A4          	movff	postdec2,??_util_getTemperature+2
  2110  000E9A  0100               	movlb	0	; () banked
  2111  000E9C  2BA2               	incf	??_util_getTemperature& (0+255),f,b
  2112  000E9E  D004               	goto	u6184
  2113  000EA0                     u6185:
  2114  000EA0  0100               	movlb	0	; () banked
  2115  000EA2  35A4               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2116  000EA4  33A4               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2117  000EA6  33A3               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2118  000EA8                     u6184:
  2119  000EA8  0100               	movlb	0	; () banked
  2120  000EAA  2FA2               	decfsz	??_util_getTemperature& (0+255),f,b
  2121  000EAC  D7F9               	goto	u6185
  2122  000EAE  0E01               	movlw	1
  2123  000EB0  0100               	movlb	0	; () banked
  2124  000EB2  17A3               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2125  000EB4  0E00               	movlw	0
  2126  000EB6  17A4               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2127  000EB8  90D8               	bcf	status,0,c
  2128  000EBA  0101               	movlb	1	; () banked
  2129  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2130  000EBE  6ED9               	movwf	fsr2l,c
  2131  000EC0  0101               	movlb	1	; () banked
  2132  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2133  000EC4  6EDA               	movwf	fsr2h,c
  2134  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2135  000EC8  26D9               	addwf	fsr2l,f,c
  2136  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2137  000ECC  22DA               	addwfc	fsr2h,f,c
  2138  000ECE  C0A3  FFDE         	movff	??_util_getTemperature+1,postinc2
  2139  000ED2  C0A4  FFDD         	movff	??_util_getTemperature+2,postdec2
  2140                           
  2141                           ; BSR set to: 1
  2142  000ED6  0101               	movlb	1	; () banked
  2143  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2144  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2145                           
  2146                           ; BSR set to: 1
  2147  000EDC  0101               	movlb	1	; () banked
  2148  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2149  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2150  000EE2  D7BF               	goto	l5875
  2151  000EE4                     l5887:
  2152                           
  2153                           ; BSR set to: 1
  2154  000EE4  0101               	movlb	1	; () banked
  2155  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2156  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2157  000EEA  D7AB               	goto	l5869
  2158  000EEC                     l5891:
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;easat2_util_inputs.c: 205: }
  2162                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2163  000EEC  0E00               	movlw	0
  2164  000EEE  0101               	movlb	1	; () banked
  2165  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2166  000EF2  0E00               	movlw	0
  2167  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2168  000EF6                     l5893:
  2169                           
  2170                           ; BSR set to: 1
  2171  000EF6  0101               	movlb	1	; () banked
  2172  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2173  000EFA  D008               	goto	l5897
  2174  000EFC  0101               	movlb	1	; () banked
  2175  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2176  000F00  E154               	bnz	l5919
  2177  000F02  0E48               	movlw	72
  2178  000F04  0101               	movlb	1	; () banked
  2179  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2180  000F08  B0D8               	btfsc	status,0,c
  2181  000F0A  D04F               	goto	l5919
  2182  000F0C                     l5897:
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2186  000F0C  90D8               	bcf	status,0,c
  2187  000F0E  0101               	movlb	1	; () banked
  2188  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2189  000F12  6ED9               	movwf	fsr2l,c
  2190  000F14  0101               	movlb	1	; () banked
  2191  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2192  000F18  6EDA               	movwf	fsr2h,c
  2193  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2194  000F1C  26D9               	addwf	fsr2l,f,c
  2195  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2196  000F20  22DA               	addwfc	fsr2h,f,c
  2197  000F22  CFDE F0A2          	movff	postinc2,??_util_getTemperature
  2198  000F26  CFDD F0A3          	movff	postdec2,??_util_getTemperature+1
  2199  000F2A  0101               	movlb	1	; () banked
  2200  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2201  000F2E  0100               	movlb	0	; () banked
  2202  000F30  19A2               	xorwf	??_util_getTemperature& (0+255),w,b
  2203  000F32  0101               	movlb	1	; () banked
  2204  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2205  000F36  0101               	movlb	1	; () banked
  2206  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2207  000F3A  0100               	movlb	0	; () banked
  2208  000F3C  19A3               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2209  000F3E  0101               	movlb	1	; () banked
  2210  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2214  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2215  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2216                           
  2217                           ; BSR set to: 1
  2218                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2219  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2220  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2224  000F52  0101               	movlb	1	; () banked
  2225  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2226  000F56  0101               	movlb	1	; () banked
  2227  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2228  000F5A  0101               	movlb	1	; () banked
  2229  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2230  000F5E  0101               	movlb	1	; () banked
  2231  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2232  000F62  0101               	movlb	1	; () banked
  2233  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2234  000F66  0101               	movlb	1	; () banked
  2235  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2239  000F6A  0101               	movlb	1	; () banked
  2240  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2241  000F6E  0101               	movlb	1	; () banked
  2242  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2243  000F72  0101               	movlb	1	; () banked
  2244  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2245  000F76  0101               	movlb	1	; () banked
  2246  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2247  000F7A  0101               	movlb	1	; () banked
  2248  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2249  000F7E  0101               	movlb	1	; () banked
  2250  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2254  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2255  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2259  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2260  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2264  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2265  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2269  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2270  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2271                           
  2272                           ; BSR set to: 1
  2273  000FA2  0101               	movlb	1	; () banked
  2274  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2275  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2276  000FA8  D7A6               	goto	l5893
  2277  000FAA                     l5919:
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;easat2_util_inputs.c: 225: }
  2281                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2282                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2283                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2284  000FAA  0101               	movlb	1	; () banked
  2285  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2286  000FAE  0101               	movlb	1	; () banked
  2287  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2288  000FB2  A4D8               	btfss	status,2,c
  2289  000FB4  D02A               	goto	l5935
  2290                           
  2291                           ; BSR set to: 1
  2292  000FB6  0101               	movlb	1	; () banked
  2293  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2294  000FBA  0101               	movlb	1	; () banked
  2295  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2296  000FBE  A4D8               	btfss	status,2,c
  2297  000FC0  D024               	goto	l5935
  2298                           
  2299                           ; BSR set to: 1
  2300  000FC2  0101               	movlb	1	; () banked
  2301  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2302  000FC6  0101               	movlb	1	; () banked
  2303  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2304  000FCA  B4D8               	btfsc	status,2,c
  2305  000FCC  D006               	goto	l5927
  2306                           
  2307                           ; BSR set to: 1
  2308  000FCE  0101               	movlb	1	; () banked
  2309  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2310  000FD2  0101               	movlb	1	; () banked
  2311  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2312  000FD6  A4D8               	btfss	status,2,c
  2313  000FD8  D018               	goto	l5935
  2314  000FDA                     l5927:
  2315                           
  2316                           ; BSR set to: 1
  2317  000FDA  0101               	movlb	1	; () banked
  2318  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2319  000FDE  0101               	movlb	1	; () banked
  2320  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2321  000FE2  A4D8               	btfss	status,2,c
  2322  000FE4  D012               	goto	l5935
  2323                           
  2324                           ; BSR set to: 1
  2325  000FE6  0101               	movlb	1	; () banked
  2326  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2327  000FEA  0101               	movlb	1	; () banked
  2328  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2329  000FEE  B4D8               	btfsc	status,2,c
  2330  000FF0  D006               	goto	l5933
  2331                           
  2332                           ; BSR set to: 1
  2333  000FF2  0101               	movlb	1	; () banked
  2334  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2335  000FF6  0101               	movlb	1	; () banked
  2336  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2337  000FFA  A4D8               	btfss	status,2,c
  2338  000FFC  D006               	goto	l5935
  2339  000FFE                     l5933:
  2340                           
  2341                           ; BSR set to: 1
  2342  000FFE  0101               	movlb	1	; () banked
  2343  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2344  001002  0101               	movlb	1	; () banked
  2345  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2346  001006  B4D8               	btfsc	status,2,c
  2347  001008  D00A               	goto	l5939
  2348  00100A                     l5935:
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;easat2_util_inputs.c: 232: return -99.7;
  2352  00100A  0E66               	movlw	102
  2353  00100C  0100               	movlb	0	; () banked
  2354  00100E  6F9F               	movwf	?_util_getTemperature& (0+255),b
  2355  001010  0EC7               	movlw	199
  2356  001012  0100               	movlb	0	; () banked
  2357  001014  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  2358  001016  0EC2               	movlw	194
  2359  001018  0100               	movlb	0	; () banked
  2360  00101A  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  2361                           
  2362                           ; BSR set to: 0
  2363  00101C  0012               	return	
  2364  00101E                     l5939:
  2365                           
  2366                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2367  00101E  0101               	movlb	1	; () banked
  2368  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2369  001022  0101               	movlb	1	; () banked
  2370  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2371  001026  A4D8               	btfss	status,2,c
  2372  001028  D008               	goto	l5943
  2373                           
  2374                           ; BSR set to: 1
  2375  00102A  0E00               	movlw	0
  2376  00102C  0101               	movlb	1	; () banked
  2377  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2378  001030  0E80               	movlw	128
  2379  001032  0101               	movlb	1	; () banked
  2380  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2381  001036  0E3F               	movlw	63
  2382  001038  D007               	goto	L1
  2383  00103A                     l5943:
  2384                           
  2385                           ; BSR set to: 1
  2386  00103A  0E00               	movlw	0
  2387  00103C  0101               	movlb	1	; () banked
  2388  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2389  001040  0E80               	movlw	128
  2390  001042  0101               	movlb	1	; () banked
  2391  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2392  001046  0EBF               	movlw	191
  2393  001048                     L1:
  2394  001048  0101               	movlb	1	; () banked
  2395  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2399                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2400                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2401                           
  2402                           ; BSR set to: 1
  2403  00104C  0E00               	movlw	0
  2404  00104E  0100               	movlb	0	; () banked
  2405  001050  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2406  001052  0E00               	movlw	0
  2407  001054  0100               	movlb	0	; () banked
  2408  001056  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2409  001058  0E41               	movlw	65
  2410  00105A  0100               	movlb	0	; () banked
  2411  00105C  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2412  00105E  C102  F076         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2413  001062  C103  F077         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2414  001066  ECAA  F01C         	call	___awtoft	;wreg free
  2415  00106A  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2416  00106E  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2417  001072  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2418  001076  EC1B  F016         	call	___ftdiv	;wreg free
  2419  00107A  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2420  00107E  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2421  001082  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2422  001086  0E00               	movlw	0
  2423  001088  0100               	movlb	0	; () banked
  2424  00108A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2425  00108C  0E80               	movlw	128
  2426  00108E  0100               	movlb	0	; () banked
  2427  001090  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2428  001092  0E41               	movlw	65
  2429  001094  0100               	movlb	0	; () banked
  2430  001096  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2431  001098  C100  F076         	movff	util_getTemperature@bit_mem,___awtoft@c
  2432  00109C  C101  F077         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2433  0010A0  ECAA  F01C         	call	___awtoft	;wreg free
  2434  0010A4  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2435  0010A8  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2436  0010AC  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2437  0010B0  EC1B  F016         	call	___ftdiv	;wreg free
  2438  0010B4  C079  F093         	movff	?___ftdiv,___ftadd@f1
  2439  0010B8  C07A  F094         	movff	?___ftdiv+1,___ftadd@f1+1
  2440  0010BC  C07B  F095         	movff	?___ftdiv+2,___ftadd@f1+2
  2441  0010C0  EC9A  F00F         	call	___ftadd	;wreg free
  2442  0010C4  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2165
  2443  0010C8  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2165+1
  2444  0010CC  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2165+2
  2445                           
  2446                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2447                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2448                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2449  0010D0  0E00               	movlw	0
  2450  0010D2  0100               	movlb	0	; () banked
  2451  0010D4  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2452  0010D6  0E80               	movlw	128
  2453  0010D8  0100               	movlb	0	; () banked
  2454  0010DA  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2455  0010DC  0E40               	movlw	64
  2456  0010DE  0100               	movlb	0	; () banked
  2457  0010E0  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2458  0010E2  C104  F076         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2459  0010E6  C105  F077         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2460  0010EA  ECAA  F01C         	call	___awtoft	;wreg free
  2461  0010EE  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2462  0010F2  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2463  0010F6  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2464  0010FA  EC1B  F016         	call	___ftdiv	;wreg free
  2465  0010FE  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2466  001102  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2467  001106  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2468  00110A  C1A7  F093         	movff	_util_getTemperature$2165,___ftadd@f1
  2469  00110E  C1A8  F094         	movff	_util_getTemperature$2165+1,___ftadd@f1+1
  2470  001112  C1A9  F095         	movff	_util_getTemperature$2165+2,___ftadd@f1+2
  2471  001116  EC9A  F00F         	call	___ftadd	;wreg free
  2472  00111A  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2166
  2473  00111E  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2166+1
  2474  001122  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2166+2
  2475                           
  2476                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2477                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2478                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2479  001126  0E00               	movlw	0
  2480  001128  0100               	movlb	0	; () banked
  2481  00112A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2482  00112C  0E00               	movlw	0
  2483  00112E  0100               	movlb	0	; () banked
  2484  001130  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2485  001132  0E40               	movlw	64
  2486  001134  0100               	movlb	0	; () banked
  2487  001136  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2488  001138  C106  F076         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2489  00113C  C107  F077         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2490  001140  ECAA  F01C         	call	___awtoft	;wreg free
  2491  001144  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2492  001148  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2493  00114C  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2494  001150  EC1B  F016         	call	___ftdiv	;wreg free
  2495  001154  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2496  001158  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2497  00115C  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2498  001160  C1AA  F093         	movff	_util_getTemperature$2166,___ftadd@f1
  2499  001164  C1AB  F094         	movff	_util_getTemperature$2166+1,___ftadd@f1+1
  2500  001168  C1AC  F095         	movff	_util_getTemperature$2166+2,___ftadd@f1+2
  2501  00116C  EC9A  F00F         	call	___ftadd	;wreg free
  2502  001170  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2167
  2503  001174  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2167+1
  2504  001178  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2167+2
  2505                           
  2506                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2507                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2508                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2509  00117C  C108  F076         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2510  001180  C109  F077         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2511  001184  ECAA  F01C         	call	___awtoft	;wreg free
  2512  001188  C076  F096         	movff	?___awtoft,___ftadd@f2
  2513  00118C  C077  F097         	movff	?___awtoft+1,___ftadd@f2+1
  2514  001190  C078  F098         	movff	?___awtoft+2,___ftadd@f2+2
  2515  001194  C1AD  F093         	movff	_util_getTemperature$2167,___ftadd@f1
  2516  001198  C1AE  F094         	movff	_util_getTemperature$2167+1,___ftadd@f1+1
  2517  00119C  C1AF  F095         	movff	_util_getTemperature$2167+2,___ftadd@f1+2
  2518  0011A0  EC9A  F00F         	call	___ftadd	;wreg free
  2519  0011A4  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2168
  2520  0011A8  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2168+1
  2521  0011AC  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2168+2
  2522                           
  2523                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2524                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2525                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2526  0011B0  C1B0  F093         	movff	_util_getTemperature$2168,___ftadd@f1
  2527  0011B4  C1B1  F094         	movff	_util_getTemperature$2168+1,___ftadd@f1+1
  2528  0011B8  C1B2  F095         	movff	_util_getTemperature$2168+2,___ftadd@f1+2
  2529  0011BC  0E00               	movlw	0
  2530  0011BE  0100               	movlb	0	; () banked
  2531  0011C0  6F80               	movwf	___ftmul@f2& (0+255),b
  2532  0011C2  0E00               	movlw	0
  2533  0011C4  0100               	movlb	0	; () banked
  2534  0011C6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2535  0011C8  0E40               	movlw	64
  2536  0011CA  0100               	movlb	0	; () banked
  2537  0011CC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2538  0011CE  C10A  F076         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2539  0011D2  C10B  F077         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2540  0011D6  ECAA  F01C         	call	___awtoft	;wreg free
  2541  0011DA  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2542  0011DE  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2543  0011E2  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2544  0011E6  ECD0  F014         	call	___ftmul	;wreg free
  2545  0011EA  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2546  0011EE  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2547  0011F2  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2548  0011F6  EC9A  F00F         	call	___ftadd	;wreg free
  2549  0011FA  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2550  0011FE  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2551  001202  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2552                           
  2553                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2554                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2555                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2556                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2557  001206  0E00               	movlw	0
  2558  001208  0100               	movlb	0	; () banked
  2559  00120A  6F80               	movwf	___ftmul@f2& (0+255),b
  2560  00120C  0E00               	movlw	0
  2561  00120E  0100               	movlb	0	; () banked
  2562  001210  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2563  001212  0E41               	movlw	65
  2564  001214  0100               	movlb	0	; () banked
  2565  001216  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2566  001218  C10E  F076         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2567  00121C  C10F  F077         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2568  001220  ECAA  F01C         	call	___awtoft	;wreg free
  2569  001224  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2570  001228  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2571  00122C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2572  001230  ECD0  F014         	call	___ftmul	;wreg free
  2573  001234  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2574  001238  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2575  00123C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2576  001240  0E00               	movlw	0
  2577  001242  0100               	movlb	0	; () banked
  2578  001244  6F80               	movwf	___ftmul@f2& (0+255),b
  2579  001246  0E80               	movlw	128
  2580  001248  0100               	movlb	0	; () banked
  2581  00124A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2582  00124C  0E40               	movlw	64
  2583  00124E  0100               	movlb	0	; () banked
  2584  001250  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2585  001252  C10C  F076         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2586  001256  C10D  F077         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2587  00125A  ECAA  F01C         	call	___awtoft	;wreg free
  2588  00125E  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2589  001262  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2590  001266  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2591  00126A  ECD0  F014         	call	___ftmul	;wreg free
  2592  00126E  C07D  F093         	movff	?___ftmul,___ftadd@f1
  2593  001272  C07E  F094         	movff	?___ftmul+1,___ftadd@f1+1
  2594  001276  C07F  F095         	movff	?___ftmul+2,___ftadd@f1+2
  2595  00127A  EC9A  F00F         	call	___ftadd	;wreg free
  2596  00127E  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2165
  2597  001282  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2165+1
  2598  001286  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2165+2
  2599                           
  2600                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2601                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2602                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2603                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2604  00128A  0E00               	movlw	0
  2605  00128C  0100               	movlb	0	; () banked
  2606  00128E  6F80               	movwf	___ftmul@f2& (0+255),b
  2607  001290  0E80               	movlw	128
  2608  001292  0100               	movlb	0	; () banked
  2609  001294  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2610  001296  0E41               	movlw	65
  2611  001298  0100               	movlb	0	; () banked
  2612  00129A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2613  00129C  C110  F076         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2614  0012A0  C111  F077         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2615  0012A4  ECAA  F01C         	call	___awtoft	;wreg free
  2616  0012A8  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2617  0012AC  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2618  0012B0  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2619  0012B4  ECD0  F014         	call	___ftmul	;wreg free
  2620  0012B8  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2621  0012BC  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2622  0012C0  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2623  0012C4  C1A7  F093         	movff	_util_getTemperature$2165,___ftadd@f1
  2624  0012C8  C1A8  F094         	movff	_util_getTemperature$2165+1,___ftadd@f1+1
  2625  0012CC  C1A9  F095         	movff	_util_getTemperature$2165+2,___ftadd@f1+2
  2626  0012D0  EC9A  F00F         	call	___ftadd	;wreg free
  2627  0012D4  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2166
  2628  0012D8  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2166+1
  2629  0012DC  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2166+2
  2630                           
  2631                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2632                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2633                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2634                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2635  0012E0  0E00               	movlw	0
  2636  0012E2  0100               	movlb	0	; () banked
  2637  0012E4  6F80               	movwf	___ftmul@f2& (0+255),b
  2638  0012E6  0E00               	movlw	0
  2639  0012E8  0100               	movlb	0	; () banked
  2640  0012EA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2641  0012EC  0E42               	movlw	66
  2642  0012EE  0100               	movlb	0	; () banked
  2643  0012F0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2644  0012F2  C112  F076         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2645  0012F6  C113  F077         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2646  0012FA  ECAA  F01C         	call	___awtoft	;wreg free
  2647  0012FE  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2648  001302  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2649  001306  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2650  00130A  ECD0  F014         	call	___ftmul	;wreg free
  2651  00130E  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2652  001312  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2653  001316  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2654  00131A  C1AA  F093         	movff	_util_getTemperature$2166,___ftadd@f1
  2655  00131E  C1AB  F094         	movff	_util_getTemperature$2166+1,___ftadd@f1+1
  2656  001322  C1AC  F095         	movff	_util_getTemperature$2166+2,___ftadd@f1+2
  2657  001326  EC9A  F00F         	call	___ftadd	;wreg free
  2658  00132A  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2167
  2659  00132E  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2167+1
  2660  001332  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2167+2
  2661                           
  2662                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2663                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2664                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2665                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2666  001336  0E00               	movlw	0
  2667  001338  0100               	movlb	0	; () banked
  2668  00133A  6F80               	movwf	___ftmul@f2& (0+255),b
  2669  00133C  0E80               	movlw	128
  2670  00133E  0100               	movlb	0	; () banked
  2671  001340  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2672  001342  0E42               	movlw	66
  2673  001344  0100               	movlb	0	; () banked
  2674  001346  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2675  001348  C114  F076         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2676  00134C  C115  F077         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2677  001350  ECAA  F01C         	call	___awtoft	;wreg free
  2678  001354  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2679  001358  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2680  00135C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2681  001360  ECD0  F014         	call	___ftmul	;wreg free
  2682  001364  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2683  001368  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2684  00136C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2685  001370  C1AD  F093         	movff	_util_getTemperature$2167,___ftadd@f1
  2686  001374  C1AE  F094         	movff	_util_getTemperature$2167+1,___ftadd@f1+1
  2687  001378  C1AF  F095         	movff	_util_getTemperature$2167+2,___ftadd@f1+2
  2688  00137C  EC9A  F00F         	call	___ftadd	;wreg free
  2689  001380  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2168
  2690  001384  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2168+1
  2691  001388  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2168+2
  2692                           
  2693                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2694                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2695                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2696                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2697  00138C  C1B0  F093         	movff	_util_getTemperature$2168,___ftadd@f1
  2698  001390  C1B1  F094         	movff	_util_getTemperature$2168+1,___ftadd@f1+1
  2699  001394  C1B2  F095         	movff	_util_getTemperature$2168+2,___ftadd@f1+2
  2700  001398  C1C9  F096         	movff	util_getTemperature@temperature,___ftadd@f2
  2701  00139C  C1CA  F097         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2702  0013A0  C1CB  F098         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2703  0013A4  EC9A  F00F         	call	___ftadd	;wreg free
  2704  0013A8  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2705  0013AC  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2706  0013B0  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2707                           
  2708                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2709  0013B4  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2710  0013B8  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2711  0013BC  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2712  0013C0  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2713  0013C4  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2714  0013C8  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2715  0013CC  ECD0  F014         	call	___ftmul	;wreg free
  2716  0013D0  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2717  0013D4  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2718  0013D8  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2719                           
  2720                           ;easat2_util_inputs.c: 248: return temperature;
  2721  0013DC  C1C9  F09F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2722  0013E0  C1CA  F0A0         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2723  0013E4  C1CB  F0A1         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2724  0013E8  0012               	return	
  2725  0013EA                     __end_of_util_getTemperature:
  2726                           	opt stack 0
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           postinc2	equ	0xFDE
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _util_waits_delay_secs *****************
  2742 ;; Defined at:
  2743 ;;		line 31 in file "easat2_util_waits.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  secs            2   19[BANK0 ] int 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  j               2   39[COMRAM] int 
  2748 ;;  i               2   37[COMRAM] int 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2758 ;;      Params:         0       2       0       0       0       0       0
  2759 ;;      Locals:         4       0       0       0       0       0       0
  2760 ;;      Temps:          1       0       0       0       0       0       0
  2761 ;;      Totals:         5       2       0       0       0       0       0
  2762 ;;Total ram usage:        7 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    4
  2765 ;; This function calls:
  2766 ;;		_util_waits_delay_ms
  2767 ;; This function is called by:
  2768 ;;		_util_getTemperature
  2769 ;;		_util_waits_delay_mins
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text5
  2774  0037A6                     __ptext5:
  2775                           	opt stack 0
  2776  0037A6                     _util_waits_delay_secs:
  2777                           	opt stack 24
  2778                           
  2779                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2780                           
  2781                           ;incstack = 0
  2782  0037A6  0E00               	movlw	0
  2783  0037A8  6E27               	movwf	util_waits_delay_secs@i+1,c
  2784  0037AA  0E00               	movlw	0
  2785  0037AC  6E26               	movwf	util_waits_delay_secs@i,c
  2786  0037AE  D018               	goto	l4895
  2787  0037B0                     l4881:
  2788                           
  2789                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2790  0037B0  0E00               	movlw	0
  2791  0037B2  6E29               	movwf	util_waits_delay_secs@j+1,c
  2792  0037B4  0E00               	movlw	0
  2793  0037B6  6E28               	movwf	util_waits_delay_secs@j,c
  2794  0037B8                     l4883:
  2795  0037B8  BE29               	btfsc	util_waits_delay_secs@j+1,7,c
  2796  0037BA  D006               	goto	l4887
  2797  0037BC  5029               	movf	util_waits_delay_secs@j+1,w,c
  2798  0037BE  E10E               	bnz	l4893
  2799  0037C0  0E0A               	movlw	10
  2800  0037C2  5C28               	subwf	util_waits_delay_secs@j,w,c
  2801  0037C4  B0D8               	btfsc	status,0,c
  2802  0037C6  D00A               	goto	l4893
  2803  0037C8                     l4887:
  2804                           
  2805                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2806  0037C8  0E00               	movlw	0
  2807  0037CA  0100               	movlb	0	; () banked
  2808  0037CC  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2809  0037CE  0E64               	movlw	100
  2810  0037D0  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  2811  0037D2  EC97  F01D         	call	_util_waits_delay_ms	;wreg free
  2812  0037D6  4A28               	infsnz	util_waits_delay_secs@j,f,c
  2813  0037D8  2A29               	incf	util_waits_delay_secs@j+1,f,c
  2814  0037DA  D7EE               	goto	l4883
  2815  0037DC                     l4893:
  2816  0037DC  4A26               	infsnz	util_waits_delay_secs@i,f,c
  2817  0037DE  2A27               	incf	util_waits_delay_secs@i+1,f,c
  2818  0037E0                     l4895:
  2819  0037E0  0100               	movlb	0	; () banked
  2820  0037E2  5173               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2821  0037E4  5C26               	subwf	util_waits_delay_secs@i,w,c
  2822  0037E6  5027               	movf	util_waits_delay_secs@i+1,w,c
  2823  0037E8  0A80               	xorlw	128
  2824  0037EA  6E25               	movwf	??_util_waits_delay_secs& (0+255),c
  2825  0037EC  0100               	movlb	0	; () banked
  2826  0037EE  5174               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2827  0037F0  0A80               	xorlw	128
  2828  0037F2  5825               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2829  0037F4  B0D8               	btfsc	status,0,c
  2830  0037F6  0012               	return	
  2831  0037F8  D7DB               	goto	l4881
  2832  0037FA                     __end_of_util_waits_delay_secs:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postdec1	equ	0xFE5
  2841                           fsr1l	equ	0xFE1
  2842                           postinc2	equ	0xFDE
  2843                           postdec2	equ	0xFDD
  2844                           fsr2h	equ	0xFDA
  2845                           fsr2l	equ	0xFD9
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function _util_onewire_write_byte *****************
  2849 ;; Defined at:
  2850 ;;		line 62 in file "easat2_util_onewire.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  value           2   19[BANK0 ] int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  bit7            2   35[BANK0 ] int 
  2855 ;;  bit6            2   33[BANK0 ] int 
  2856 ;;  bit5            2   31[BANK0 ] int 
  2857 ;;  bit4            2   29[BANK0 ] int 
  2858 ;;  bit3            2   27[BANK0 ] int 
  2859 ;;  bit2            2   25[BANK0 ] int 
  2860 ;;  bit1            2   23[BANK0 ] int 
  2861 ;;  bit0            2   21[BANK0 ] int 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2871 ;;      Params:         0       2       0       0       0       0       0
  2872 ;;      Locals:         0      16       0       0       0       0       0
  2873 ;;      Temps:          3       0       0       0       0       0       0
  2874 ;;      Totals:         3      18       0       0       0       0       0
  2875 ;;Total ram usage:       21 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    4
  2878 ;; This function calls:
  2879 ;;		_util_onewire_write_bit
  2880 ;; This function is called by:
  2881 ;;		_util_getTemperature
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text6
  2886  002552                     __ptext6:
  2887                           	opt stack 0
  2888  002552                     _util_onewire_write_byte:
  2889                           	opt stack 24
  2890                           
  2891                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2892                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;incstack = 0
  2896  002552  0E01               	movlw	1
  2897  002554  0100               	movlb	0	; () banked
  2898  002556  1573               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2899  002558  0100               	movlb	0	; () banked
  2900  00255A  6F75               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2901  00255C  0100               	movlb	0	; () banked
  2902  00255E  6B76               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2903                           
  2904                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2905  002560  0100               	movlb	0	; () banked
  2906  002562  3574               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2907  002564  3174               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2908  002566  6E23               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2909  002568  0100               	movlb	0	; () banked
  2910  00256A  3173               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2911  00256C  6E22               	movwf	??_util_onewire_write_byte& (0+255),c
  2912  00256E  0E01               	movlw	1
  2913  002570  1422               	andwf	??_util_onewire_write_byte,w,c
  2914  002572  0100               	movlb	0	; () banked
  2915  002574  6F77               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2916  002576  0100               	movlb	0	; () banked
  2917  002578  6B78               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2918                           
  2919                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2920  00257A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2921  00257E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2922  002582  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2923  002584  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2924  002586  3222               	rrcf	??_util_onewire_write_byte,f,c
  2925  002588  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2926  00258A  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2927  00258C  3222               	rrcf	??_util_onewire_write_byte,f,c
  2928  00258E  0E01               	movlw	1
  2929  002590  1422               	andwf	??_util_onewire_write_byte,w,c
  2930  002592  0100               	movlb	0	; () banked
  2931  002594  6F79               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2932  002596  0100               	movlb	0	; () banked
  2933  002598  6B7A               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2934                           
  2935                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2936  00259A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2937  00259E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2938  0025A2  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2939  0025A4  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2940  0025A6  3222               	rrcf	??_util_onewire_write_byte,f,c
  2941  0025A8  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2942  0025AA  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2943  0025AC  3222               	rrcf	??_util_onewire_write_byte,f,c
  2944  0025AE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2945  0025B0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2946  0025B2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2947  0025B4  0E01               	movlw	1
  2948  0025B6  1422               	andwf	??_util_onewire_write_byte,w,c
  2949  0025B8  0100               	movlb	0	; () banked
  2950  0025BA  6F7B               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2951  0025BC  0100               	movlb	0	; () banked
  2952  0025BE  6B7C               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2953                           
  2954                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2955  0025C0  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2956  0025C4  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2957  0025C8  0E04               	movlw	4
  2958  0025CA  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2959  0025CC                     u5415:
  2960  0025CC  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2961  0025CE  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2962  0025D0  3222               	rrcf	??_util_onewire_write_byte,f,c
  2963  0025D2  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2964  0025D4  D7FB               	goto	u5415
  2965  0025D6  0E01               	movlw	1
  2966  0025D8  1422               	andwf	??_util_onewire_write_byte,w,c
  2967  0025DA  0100               	movlb	0	; () banked
  2968  0025DC  6F7D               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2969  0025DE  0100               	movlb	0	; () banked
  2970  0025E0  6B7E               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2971                           
  2972                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2973  0025E2  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2974  0025E6  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2975  0025EA  0E05               	movlw	5
  2976  0025EC  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2977  0025EE                     u5425:
  2978  0025EE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2979  0025F0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2980  0025F2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2981  0025F4  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2982  0025F6  D7FB               	goto	u5425
  2983  0025F8  0E01               	movlw	1
  2984  0025FA  1422               	andwf	??_util_onewire_write_byte,w,c
  2985  0025FC  0100               	movlb	0	; () banked
  2986  0025FE  6F7F               	movwf	util_onewire_write_byte@bit5& (0+255),b
  2987  002600  0100               	movlb	0	; () banked
  2988  002602  6B80               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  2989                           
  2990                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2991  002604  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2992  002608  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2993  00260C  0E06               	movlw	6
  2994  00260E  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2995  002610                     u5435:
  2996  002610  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2997  002612  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2998  002614  3222               	rrcf	??_util_onewire_write_byte,f,c
  2999  002616  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3000  002618  D7FB               	goto	u5435
  3001  00261A  0E01               	movlw	1
  3002  00261C  1422               	andwf	??_util_onewire_write_byte,w,c
  3003  00261E  0100               	movlb	0	; () banked
  3004  002620  6F81               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3005  002622  0100               	movlb	0	; () banked
  3006  002624  6B82               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3007                           
  3008                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3009  002626  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3010  00262A  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3011  00262E  0E07               	movlw	7
  3012  002630  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3013  002632                     u5445:
  3014  002632  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3015  002634  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3016  002636  3222               	rrcf	??_util_onewire_write_byte,f,c
  3017  002638  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3018  00263A  D7FB               	goto	u5445
  3019  00263C  0E01               	movlw	1
  3020  00263E  1422               	andwf	??_util_onewire_write_byte,w,c
  3021  002640  0100               	movlb	0	; () banked
  3022  002642  6F83               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3023  002644  0100               	movlb	0	; () banked
  3024  002646  6B84               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3028  002648  C075  F071         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3029  00264C  C076  F072         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3030  002650  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3031                           
  3032                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3033  002654  D000               	nop2		;2 cycle nop
  3034  002656  D000               	nop2		;2 cycle nop
  3035  002658  F000               	nop	
  3036                           
  3037                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3038  00265A  C077  F071         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3039  00265E  C078  F072         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3040  002662  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3041                           
  3042                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3043  002666  D000               	nop2		;2 cycle nop
  3044  002668  D000               	nop2		;2 cycle nop
  3045  00266A  F000               	nop	
  3046                           
  3047                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3048  00266C  C079  F071         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3049  002670  C07A  F072         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3050  002674  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3051                           
  3052                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3053  002678  D000               	nop2		;2 cycle nop
  3054  00267A  D000               	nop2		;2 cycle nop
  3055  00267C  F000               	nop	
  3056                           
  3057                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3058  00267E  C07B  F071         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3059  002682  C07C  F072         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3060  002686  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3061                           
  3062                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3063  00268A  D000               	nop2		;2 cycle nop
  3064  00268C  D000               	nop2		;2 cycle nop
  3065  00268E  F000               	nop	
  3066                           
  3067                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3068  002690  C07D  F071         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3069  002694  C07E  F072         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3070  002698  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3071                           
  3072                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3073  00269C  D000               	nop2		;2 cycle nop
  3074  00269E  D000               	nop2		;2 cycle nop
  3075  0026A0  F000               	nop	
  3076                           
  3077                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3078  0026A2  C07F  F071         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3079  0026A6  C080  F072         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3080  0026AA  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3081                           
  3082                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3083  0026AE  D000               	nop2		;2 cycle nop
  3084  0026B0  D000               	nop2		;2 cycle nop
  3085  0026B2  F000               	nop	
  3086                           
  3087                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3088  0026B4  C081  F071         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3089  0026B8  C082  F072         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3090  0026BC  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3091                           
  3092                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3093  0026C0  D000               	nop2		;2 cycle nop
  3094  0026C2  D000               	nop2		;2 cycle nop
  3095  0026C4  F000               	nop	
  3096                           
  3097                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3098  0026C6  C083  F071         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3099  0026CA  C084  F072         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3100  0026CE  ECE5  F01C         	call	_util_onewire_write_bit	;wreg free
  3101                           
  3102                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3103  0026D2  D000               	nop2		;2 cycle nop
  3104  0026D4  D000               	nop2		;2 cycle nop
  3105  0026D6  F000               	nop	
  3106  0026D8  0012               	return		;funcret
  3107  0026DA                     __end_of_util_onewire_write_byte:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           postinc0	equ	0xFEE
  3114                           wreg	equ	0xFE8
  3115                           postdec1	equ	0xFE5
  3116                           fsr1l	equ	0xFE1
  3117                           postinc2	equ	0xFDE
  3118                           postdec2	equ	0xFDD
  3119                           fsr2h	equ	0xFDA
  3120                           fsr2l	equ	0xFD9
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function _util_onewire_write_bit *****************
  3124 ;; Defined at:
  3125 ;;		line 121 in file "easat2_util_onewire.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  bit_in          2   17[BANK0 ] int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3139 ;;      Params:         0       2       0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0
  3142 ;;      Totals:         0       2       0       0       0       0       0
  3143 ;;Total ram usage:        2 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_util_onewire_write_byte
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text7
  3154  0039CA                     __ptext7:
  3155                           	opt stack 0
  3156  0039CA                     _util_onewire_write_bit:
  3157                           	opt stack 24
  3158                           
  3159                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3160                           
  3161                           ;incstack = 0
  3162  0039CA  9692               	bcf	3986,3,c	;volatile
  3163                           
  3164                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3165  0039CC  0100               	movlb	0	; () banked
  3166  0039CE  5171               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3167  0039D0  0100               	movlb	0	; () banked
  3168  0039D2  1172               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3169  0039D4  B4D8               	btfsc	status,2,c
  3170  0039D6  D009               	goto	l156
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;easat2_util_onewire.c: 129: PORTAbits.RA3 = 0;
  3174  0039D8  9680               	bcf	3968,3,c	;volatile
  3175                           
  3176                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3177  0039DA  D000               	nop2		;2 cycle nop
  3178  0039DC  D000               	nop2		;2 cycle nop
  3179  0039DE  F000               	nop	
  3180                           
  3181                           ;easat2_util_onewire.c: 136: PORTAbits.RA3 = 1;
  3182  0039E0  8680               	bsf	3968,3,c	;volatile
  3183                           
  3184                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3185  0039E2  0E09               	movlw	9
  3186  0039E4                     u6357:
  3187  0039E4  2EE8               	decfsz	wreg,f,c
  3188  0039E6  D7FE               	bra	u6357
  3189                           
  3190                           ;easat2_util_onewire.c: 141: } else {
  3191  0039E8  0012               	return	
  3192  0039EA                     l156:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;easat2_util_onewire.c: 144: PORTAbits.RA3 = 0;
  3196  0039EA  9680               	bcf	3968,3,c	;volatile
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3200  0039EC  0E0B               	movlw	11
  3201  0039EE                     u6367:
  3202  0039EE  2EE8               	decfsz	wreg,f,c
  3203  0039F0  D7FE               	bra	u6367
  3204  0039F2  D000               	nop2	
  3205                           
  3206                           ;easat2_util_onewire.c: 151: PORTAbits.RA3 = 1;
  3207  0039F4  8680               	bsf	3968,3,c	;volatile
  3208                           
  3209                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3210  0039F6  D000               	nop2		;2 cycle nop
  3211  0039F8  D000               	nop2		;2 cycle nop
  3212  0039FA  F000               	nop	
  3213  0039FC  0012               	return	
  3214  0039FE                     __end_of_util_onewire_write_bit:
  3215                           	opt stack 0
  3216                           tblptru	equ	0xFF8
  3217                           tblptrh	equ	0xFF7
  3218                           tblptrl	equ	0xFF6
  3219                           tablat	equ	0xFF5
  3220                           postinc0	equ	0xFEE
  3221                           wreg	equ	0xFE8
  3222                           postdec1	equ	0xFE5
  3223                           fsr1l	equ	0xFE1
  3224                           postinc2	equ	0xFDE
  3225                           postdec2	equ	0xFDD
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230 ;; *************** function _util_onewire_reset *****************
  3231 ;; Defined at:
  3232 ;;		line 18 in file "easat2_util_onewire.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  presence        2   34[COMRAM] int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2   17[BANK0 ] int 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3246 ;;      Params:         0       2       0       0       0       0       0
  3247 ;;      Locals:         2       0       0       0       0       0       0
  3248 ;;      Temps:          1       0       0       0       0       0       0
  3249 ;;      Totals:         3       2       0       0       0       0       0
  3250 ;;Total ram usage:        5 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    3
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_util_getTemperature
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text8
  3261  003912                     __ptext8:
  3262                           	opt stack 0
  3263  003912                     _util_onewire_reset:
  3264                           	opt stack 25
  3265                           
  3266                           ;easat2_util_onewire.c: 20: int presence = 1;
  3267                           
  3268                           ;incstack = 0
  3269  003912  0E00               	movlw	0
  3270  003914  6E24               	movwf	util_onewire_reset@presence+1,c
  3271  003916  0E01               	movlw	1
  3272  003918  6E23               	movwf	util_onewire_reset@presence,c
  3273                           
  3274                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3275  00391A  9692               	bcf	3986,3,c	;volatile
  3276                           
  3277                           ;easat2_util_onewire.c: 25: PORTAbits.RA3 = 0;
  3278  00391C  9680               	bcf	3968,3,c	;volatile
  3279                           
  3280                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3281  00391E  0E5D               	movlw	93
  3282  003920                     u6377:
  3283  003920  2EE8               	decfsz	wreg,f,c
  3284  003922  D7FE               	bra	u6377
  3285  003924  F000               	nop	
  3286                           
  3287                           ;easat2_util_onewire.c: 32: PORTAbits.RA3 = 1;
  3288  003926  8680               	bsf	3968,3,c	;volatile
  3289                           
  3290                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3291  003928  0E0B               	movlw	11
  3292  00392A                     u6387:
  3293  00392A  2EE8               	decfsz	wreg,f,c
  3294  00392C  D7FE               	bra	u6387
  3295  00392E  D000               	nop2	
  3296                           
  3297                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3298  003930  8692               	bsf	3986,3,c	;volatile
  3299                           
  3300                           ;easat2_util_onewire.c: 47: presence = PORTAbits.RA3;
  3301  003932  A680               	btfss	3968,3,c	;volatile
  3302  003934  D003               	goto	u5400
  3303  003936  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3304  003938  2A22               	incf	??_util_onewire_reset& (0+255),f,c
  3305  00393A  D001               	goto	u5408
  3306  00393C                     u5400:
  3307  00393C  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3308  00393E                     u5408:
  3309  00393E  5022               	movf	??_util_onewire_reset,w,c
  3310  003940  6E23               	movwf	util_onewire_reset@presence,c
  3311  003942  6A24               	clrf	util_onewire_reset@presence+1,c
  3312                           
  3313                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3314  003944  0E46               	movlw	70
  3315  003946                     u6397:
  3316  003946  2EE8               	decfsz	wreg,f,c
  3317  003948  D7FE               	bra	u6397
  3318                           
  3319                           ;easat2_util_onewire.c: 56: return presence;
  3320  00394A  C023  F071         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3321  00394E  C024  F072         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3322  003952  0012               	return	
  3323  003954                     __end_of_util_onewire_reset:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           postdec1	equ	0xFE5
  3332                           fsr1l	equ	0xFE1
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _util_onewire_read_byte *****************
  3340 ;; Defined at:
  3341 ;;		line 96 in file "easat2_util_onewire.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  value           2   51[BANK0 ] int 
  3346 ;;  bit7            2   49[BANK0 ] int 
  3347 ;;  bit6            2   47[BANK0 ] int 
  3348 ;;  bit5            2   45[BANK0 ] int 
  3349 ;;  bit4            2   43[BANK0 ] int 
  3350 ;;  bit3            2   41[BANK0 ] int 
  3351 ;;  bit2            2   39[BANK0 ] int 
  3352 ;;  bit1            2   37[BANK0 ] int 
  3353 ;;  bit0            2   35[BANK0 ] int 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  2   19[BANK0 ] int 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         0       2       0       0       0       0       0
  3364 ;;      Locals:         0      18       0       0       0       0       0
  3365 ;;      Temps:          0      14       0       0       0       0       0
  3366 ;;      Totals:         0      34       0       0       0       0       0
  3367 ;;Total ram usage:       34 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    4
  3370 ;; This function calls:
  3371 ;;		_util_onewire_read_bit
  3372 ;; This function is called by:
  3373 ;;		_util_getTemperature
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text9
  3378  0023BE                     __ptext9:
  3379                           	opt stack 0
  3380  0023BE                     _util_onewire_read_byte:
  3381                           	opt stack 24
  3382                           
  3383                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3384                           ;easat2_util_onewire.c: 99: int value = 0;
  3385                           
  3386                           ;incstack = 0
  3387  0023BE  0E00               	movlw	0
  3388  0023C0  0100               	movlb	0	; () banked
  3389  0023C2  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3390  0023C4  0E00               	movlw	0
  3391  0023C6  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3395  0023C8  8692               	bsf	3986,3,c	;volatile
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3399  0023CA  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3400  0023CE  C071  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3401  0023D2  C072  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3402                           
  3403                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3404  0023D6  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3405  0023DA  C071  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3406  0023DE  C072  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3407                           
  3408                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3409  0023E2  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3410  0023E6  C071  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3411  0023EA  C072  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3412                           
  3413                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3414  0023EE  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3415  0023F2  C071  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3416  0023F6  C072  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3417                           
  3418                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3419  0023FA  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3420  0023FE  C071  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3421  002402  C072  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3422                           
  3423                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3424  002406  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3425  00240A  C071  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3426  00240E  C072  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3427                           
  3428                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3429  002412  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3430  002416  C071  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3431  00241A  C072  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3432                           
  3433                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3434  00241E  EC33  F01D         	call	_util_onewire_read_bit	;wreg free
  3435  002422  C071  F091         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3436  002426  C072  F092         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3437                           
  3438                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3439                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3440  00242A  C091  F075         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3441  00242E  C092  F076         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3442  002432  0E07               	movlw	7
  3443  002434                     u5455:
  3444  002434  90D8               	bcf	status,0,c
  3445  002436  0100               	movlb	0	; () banked
  3446  002438  3775               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3447  00243A  3776               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3448  00243C  2EE8               	decfsz	wreg,f,c
  3449  00243E  D7FA               	goto	u5455
  3450  002440  C08F  F077         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3451  002444  C090  F078         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3452  002448  0E06               	movlw	6
  3453  00244A                     u5465:
  3454  00244A  90D8               	bcf	status,0,c
  3455  00244C  0100               	movlb	0	; () banked
  3456  00244E  3777               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3457  002450  3778               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3458  002452  2EE8               	decfsz	wreg,f,c
  3459  002454  D7FA               	goto	u5465
  3460  002456  C08D  F079         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3461  00245A  C08E  F07A         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3462  00245E  0E05               	movlw	5
  3463  002460                     u5475:
  3464  002460  90D8               	bcf	status,0,c
  3465  002462  0100               	movlb	0	; () banked
  3466  002464  3779               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3467  002466  377A               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3468  002468  2EE8               	decfsz	wreg,f,c
  3469  00246A  D7FA               	goto	u5475
  3470  00246C  C08B  F07B         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3471  002470  C08C  F07C         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3472  002474  0100               	movlb	0	; () banked
  3473  002476  3B7B               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3474  002478  3B7C               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3475  00247A  0EF0               	movlw	240
  3476  00247C  177C               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3477  00247E  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3478  002480  0B0F               	andlw	15
  3479  002482  137C               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3480  002484  0EF0               	movlw	240
  3481  002486  177B               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3482  002488  C089  F07D         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3483  00248C  C08A  F07E         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3484  002490  0100               	movlb	0	; () banked
  3485  002492  90D8               	bcf	status,0,c
  3486  002494  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3487  002496  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3488  002498  0100               	movlb	0	; () banked
  3489  00249A  90D8               	bcf	status,0,c
  3490  00249C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3491  00249E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3492  0024A0  0100               	movlb	0	; () banked
  3493  0024A2  90D8               	bcf	status,0,c
  3494  0024A4  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3495  0024A6  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3496  0024A8  C087  F07F         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3497  0024AC  C088  F080         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3498  0024B0  0100               	movlb	0	; () banked
  3499  0024B2  90D8               	bcf	status,0,c
  3500  0024B4  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3501  0024B6  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3502  0024B8  0100               	movlb	0	; () banked
  3503  0024BA  90D8               	bcf	status,0,c
  3504  0024BC  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3505  0024BE  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3506  0024C0  C085  F081         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3507  0024C4  C086  F082         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3508  0024C8  90D8               	bcf	status,0,c
  3509  0024CA  0100               	movlb	0	; () banked
  3510  0024CC  3781               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3511  0024CE  3782               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3512  0024D0  0100               	movlb	0	; () banked
  3513  0024D2  517F               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3514  0024D4  0100               	movlb	0	; () banked
  3515  0024D6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3516  0024D8  0100               	movlb	0	; () banked
  3517  0024DA  5180               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3518  0024DC  0100               	movlb	0	; () banked
  3519  0024DE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3520  0024E0  0100               	movlb	0	; () banked
  3521  0024E2  517D               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3522  0024E4  0100               	movlb	0	; () banked
  3523  0024E6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3524  0024E8  0100               	movlb	0	; () banked
  3525  0024EA  517E               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3526  0024EC  0100               	movlb	0	; () banked
  3527  0024EE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3528  0024F0  0100               	movlb	0	; () banked
  3529  0024F2  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3530  0024F4  0100               	movlb	0	; () banked
  3531  0024F6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3532  0024F8  0100               	movlb	0	; () banked
  3533  0024FA  517C               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3534  0024FC  0100               	movlb	0	; () banked
  3535  0024FE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3536  002500  0100               	movlb	0	; () banked
  3537  002502  5179               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3538  002504  0100               	movlb	0	; () banked
  3539  002506  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3540  002508  0100               	movlb	0	; () banked
  3541  00250A  517A               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3542  00250C  0100               	movlb	0	; () banked
  3543  00250E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3544  002510  0100               	movlb	0	; () banked
  3545  002512  5177               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3546  002514  0100               	movlb	0	; () banked
  3547  002516  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3548  002518  0100               	movlb	0	; () banked
  3549  00251A  5178               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3550  00251C  0100               	movlb	0	; () banked
  3551  00251E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3552  002520  0100               	movlb	0	; () banked
  3553  002522  5175               	movf	??_util_onewire_read_byte& (0+255),w,b
  3554  002524  0100               	movlb	0	; () banked
  3555  002526  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3556  002528  0100               	movlb	0	; () banked
  3557  00252A  5176               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3558  00252C  0100               	movlb	0	; () banked
  3559  00252E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3560  002530  0100               	movlb	0	; () banked
  3561  002532  5183               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3562  002534  0100               	movlb	0	; () banked
  3563  002536  2581               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3564  002538  0100               	movlb	0	; () banked
  3565  00253A  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3566  00253C  0100               	movlb	0	; () banked
  3567  00253E  5184               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3568  002540  0100               	movlb	0	; () banked
  3569  002542  2182               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3570  002544  0100               	movlb	0	; () banked
  3571  002546  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;easat2_util_onewire.c: 116: return value;
  3575  002548  C093  F073         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3576  00254C  C094  F074         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3577  002550  0012               	return	
  3578  002552                     __end_of_util_onewire_read_byte:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postdec1	equ	0xFE5
  3587                           fsr1l	equ	0xFE1
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _util_onewire_read_bit *****************
  3595 ;; Defined at:
  3596 ;;		line 162 in file "easat2_util_onewire.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  value           2   34[COMRAM] int 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   17[BANK0 ] int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3610 ;;      Params:         0       2       0       0       0       0       0
  3611 ;;      Locals:         2       0       0       0       0       0       0
  3612 ;;      Temps:          1       0       0       0       0       0       0
  3613 ;;      Totals:         3       2       0       0       0       0       0
  3614 ;;Total ram usage:        5 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    3
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_util_onewire_read_byte
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text10
  3625  003A66                     __ptext10:
  3626                           	opt stack 0
  3627  003A66                     _util_onewire_read_bit:
  3628                           	opt stack 24
  3629                           
  3630                           ;easat2_util_onewire.c: 164: int value = 0;
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;incstack = 0
  3634  003A66  0E00               	movlw	0
  3635  003A68  6E24               	movwf	util_onewire_read_bit@value+1,c
  3636  003A6A  0E00               	movlw	0
  3637  003A6C  6E23               	movwf	util_onewire_read_bit@value,c
  3638                           
  3639                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3640  003A6E  9692               	bcf	3986,3,c	;volatile
  3641                           
  3642                           ;easat2_util_onewire.c: 170: PORTAbits.RA3 = 0;
  3643  003A70  9680               	bcf	3968,3,c	;volatile
  3644                           
  3645                           ;easat2_util_onewire.c: 176: PORTAbits.RA3 = 1;
  3646                           
  3647                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3648  003A72  8680               	bsf	3968,3,c	;volatile
  3649                           
  3650                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3651  003A74  D000               	nop2		;2 cycle nop
  3652                           
  3653                           ;easat2_util_onewire.c: 182: value = PORTAbits.RA3;
  3654  003A76  A680               	btfss	3968,3,c	;volatile
  3655  003A78  D003               	goto	u5000
  3656  003A7A  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3657  003A7C  2A22               	incf	??_util_onewire_read_bit& (0+255),f,c
  3658  003A7E  D001               	goto	u5008
  3659  003A80                     u5000:
  3660  003A80  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3661  003A82                     u5008:
  3662  003A82  5022               	movf	??_util_onewire_read_bit,w,c
  3663  003A84  6E23               	movwf	util_onewire_read_bit@value,c
  3664  003A86  6A24               	clrf	util_onewire_read_bit@value+1,c
  3665                           
  3666                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3667  003A88  0E0A               	movlw	10
  3668  003A8A                     u6407:
  3669  003A8A  2EE8               	decfsz	wreg,f,c
  3670  003A8C  D7FE               	bra	u6407
  3671                           
  3672                           ;easat2_util_onewire.c: 187: return value;
  3673  003A8E  C023  F071         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3674  003A92  C024  F072         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3675  003A96  0012               	return	
  3676  003A98                     __end_of_util_onewire_read_bit:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           postdec1	equ	0xFE5
  3685                           fsr1l	equ	0xFE1
  3686                           postinc2	equ	0xFDE
  3687                           postdec2	equ	0xFDD
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function ___ftdiv *****************
  3693 ;; Defined at:
  3694 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  f1              3   25[BANK0 ] float 
  3697 ;;  f2              3   28[BANK0 ] float 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  f3              3   32[BANK0 ] float 
  3700 ;;  sign            1   36[BANK0 ] unsigned char 
  3701 ;;  exp             1   35[BANK0 ] unsigned char 
  3702 ;;  cntr            1   31[BANK0 ] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  3   25[BANK0 ] float 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3712 ;;      Params:         0       6       0       0       0       0       0
  3713 ;;      Locals:         0       6       0       0       0       0       0
  3714 ;;      Temps:          3       0       0       0       0       0       0
  3715 ;;      Totals:         3      12       0       0       0       0       0
  3716 ;;Total ram usage:       15 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    4
  3719 ;; This function calls:
  3720 ;;		___ftpack
  3721 ;; This function is called by:
  3722 ;;		_util_getTemperature
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text11
  3727  002C36                     __ptext11:
  3728                           	opt stack 0
  3729  002C36                     ___ftdiv:
  3730                           	opt stack 24
  3731                           
  3732                           ;incstack = 0
  3733  002C36  C07B  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3734  002C3A  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3735  002C3C  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3736  002C3E  0100               	movlb	0	; () banked
  3737  002C40  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3738  002C42  3626               	rlcf	??___ftdiv& (0+255),f,c
  3739  002C44  E301               	bnc	u6021
  3740  002C46  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3741  002C48                     u6021:
  3742  002C48  5026               	movf	??___ftdiv,w,c
  3743  002C4A  0100               	movlb	0	; () banked
  3744  002C4C  6F83               	movwf	___ftdiv@exp& (0+255),b
  3745  002C4E  0100               	movlb	0	; () banked
  3746  002C50  5183               	movf	___ftdiv@exp& (0+255),w,b
  3747  002C52  A4D8               	btfss	status,2,c
  3748  002C54  D00A               	goto	l5719
  3749                           
  3750                           ; BSR set to: 0
  3751  002C56  0E00               	movlw	0
  3752  002C58  0100               	movlb	0	; () banked
  3753  002C5A  6F79               	movwf	?___ftdiv& (0+255),b
  3754  002C5C  0E00               	movlw	0
  3755  002C5E  0100               	movlb	0	; () banked
  3756  002C60  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3757  002C62  0E00               	movlw	0
  3758  002C64  0100               	movlb	0	; () banked
  3759  002C66  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3760                           
  3761                           ; BSR set to: 0
  3762  002C68  0012               	return	
  3763  002C6A                     l5719:
  3764                           
  3765                           ; BSR set to: 0
  3766  002C6A  C07E  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3767  002C6E  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3768  002C70  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3769  002C72  0100               	movlb	0	; () banked
  3770  002C74  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3771  002C76  3626               	rlcf	??___ftdiv& (0+255),f,c
  3772  002C78  E301               	bnc	u6041
  3773  002C7A  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3774  002C7C                     u6041:
  3775  002C7C  5026               	movf	??___ftdiv,w,c
  3776  002C7E  0100               	movlb	0	; () banked
  3777  002C80  6F84               	movwf	___ftdiv@sign& (0+255),b
  3778  002C82  0100               	movlb	0	; () banked
  3779  002C84  5184               	movf	___ftdiv@sign& (0+255),w,b
  3780  002C86  A4D8               	btfss	status,2,c
  3781  002C88  D00A               	goto	l5725
  3782                           
  3783                           ; BSR set to: 0
  3784  002C8A  0E00               	movlw	0
  3785  002C8C  0100               	movlb	0	; () banked
  3786  002C8E  6F79               	movwf	?___ftdiv& (0+255),b
  3787  002C90  0E00               	movlw	0
  3788  002C92  0100               	movlb	0	; () banked
  3789  002C94  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3790  002C96  0E00               	movlw	0
  3791  002C98  0100               	movlb	0	; () banked
  3792  002C9A  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3793                           
  3794                           ; BSR set to: 0
  3795  002C9C  0012               	return	
  3796  002C9E                     l5725:
  3797                           
  3798                           ; BSR set to: 0
  3799  002C9E  0E00               	movlw	0
  3800  002CA0  0100               	movlb	0	; () banked
  3801  002CA2  6F80               	movwf	___ftdiv@f3& (0+255),b
  3802  002CA4  0E00               	movlw	0
  3803  002CA6  0100               	movlb	0	; () banked
  3804  002CA8  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3805  002CAA  0E00               	movlw	0
  3806  002CAC  0100               	movlb	0	; () banked
  3807  002CAE  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3808                           
  3809                           ; BSR set to: 0
  3810  002CB0  0100               	movlb	0	; () banked
  3811  002CB2  5184               	movf	___ftdiv@sign& (0+255),w,b
  3812  002CB4  0F89               	addlw	137
  3813  002CB6  0100               	movlb	0	; () banked
  3814  002CB8  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 0
  3817  002CBA  C07B  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3818                           
  3819                           ; BSR set to: 0
  3820  002CBE  0100               	movlb	0	; () banked
  3821  002CC0  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3822  002CC2  0100               	movlb	0	; () banked
  3823  002CC4  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3824                           
  3825                           ; BSR set to: 0
  3826  002CC6  0E80               	movlw	128
  3827  002CC8  0100               	movlb	0	; () banked
  3828  002CCA  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3829                           
  3830                           ; BSR set to: 0
  3831  002CCC  0100               	movlb	0	; () banked
  3832  002CCE  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3833                           
  3834                           ; BSR set to: 0
  3835  002CD0  0EFF               	movlw	255
  3836  002CD2  0100               	movlb	0	; () banked
  3837  002CD4  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3838  002CD6  0EFF               	movlw	255
  3839  002CD8  0100               	movlb	0	; () banked
  3840  002CDA  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3841  002CDC  0E00               	movlw	0
  3842  002CDE  0100               	movlb	0	; () banked
  3843  002CE0  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3844                           
  3845                           ; BSR set to: 0
  3846  002CE2  0100               	movlb	0	; () banked
  3847  002CE4  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3848                           
  3849                           ; BSR set to: 0
  3850  002CE6  0EFF               	movlw	255
  3851  002CE8  0100               	movlb	0	; () banked
  3852  002CEA  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3853  002CEC  0EFF               	movlw	255
  3854  002CEE  0100               	movlb	0	; () banked
  3855  002CF0  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3856  002CF2  0E00               	movlw	0
  3857  002CF4  0100               	movlb	0	; () banked
  3858  002CF6  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3859                           
  3860                           ; BSR set to: 0
  3861  002CF8  0E18               	movlw	24
  3862  002CFA  0100               	movlb	0	; () banked
  3863  002CFC  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3864  002CFE                     l5745:
  3865                           
  3866                           ; BSR set to: 0
  3867  002CFE  0100               	movlb	0	; () banked
  3868  002D00  90D8               	bcf	status,0,c
  3869  002D02  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3870  002D04  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3871  002D06  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3872                           
  3873                           ; BSR set to: 0
  3874  002D08  0100               	movlb	0	; () banked
  3875  002D0A  517C               	movf	___ftdiv@f2& (0+255),w,b
  3876  002D0C  0100               	movlb	0	; () banked
  3877  002D0E  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3878  002D10  0100               	movlb	0	; () banked
  3879  002D12  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3880  002D14  0100               	movlb	0	; () banked
  3881  002D16  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3882  002D18  0100               	movlb	0	; () banked
  3883  002D1A  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3884  002D1C  0100               	movlb	0	; () banked
  3885  002D1E  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3886  002D20  A0D8               	btfss	status,0,c
  3887  002D22  D00E               	goto	l807
  3888                           
  3889                           ; BSR set to: 0
  3890  002D24  0100               	movlb	0	; () banked
  3891  002D26  517C               	movf	___ftdiv@f2& (0+255),w,b
  3892  002D28  0100               	movlb	0	; () banked
  3893  002D2A  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3894  002D2C  0100               	movlb	0	; () banked
  3895  002D2E  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3896  002D30  0100               	movlb	0	; () banked
  3897  002D32  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3898  002D34  0100               	movlb	0	; () banked
  3899  002D36  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3900  002D38  0100               	movlb	0	; () banked
  3901  002D3A  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3902                           
  3903                           ; BSR set to: 0
  3904  002D3C  0100               	movlb	0	; () banked
  3905  002D3E  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3906  002D40                     l807:
  3907                           
  3908                           ; BSR set to: 0
  3909  002D40  0100               	movlb	0	; () banked
  3910  002D42  90D8               	bcf	status,0,c
  3911  002D44  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3912  002D46  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3913  002D48  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3914                           
  3915                           ; BSR set to: 0
  3916  002D4A  0100               	movlb	0	; () banked
  3917  002D4C  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3918  002D4E  D7D7               	goto	l5745
  3919                           
  3920                           ; BSR set to: 0
  3921                           
  3922                           ; BSR set to: 0
  3923  002D50  C080  F071         	movff	___ftdiv@f3,___ftpack@arg
  3924  002D54  C081  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3925  002D58  C082  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3926  002D5C  C083  F074         	movff	___ftdiv@exp,___ftpack@exp
  3927  002D60  C084  F075         	movff	___ftdiv@sign,___ftpack@sign
  3928  002D64  EC44  F017         	call	___ftpack	;wreg free
  3929  002D68  C071  F079         	movff	?___ftpack,?___ftdiv
  3930  002D6C  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3931  002D70  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3932  002D74  0012               	return	
  3933  002D76                     __end_of___ftdiv:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           postdec1	equ	0xFE5
  3942                           fsr1l	equ	0xFE1
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function ___awtoft *****************
  3950 ;; Defined at:
  3951 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  c               2   22[BANK0 ] int 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  sign            1   36[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  3   22[BANK0 ] float 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         0       3       0       0       0       0       0
  3966 ;;      Locals:         1       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0
  3968 ;;      Totals:         1       3       0       0       0       0       0
  3969 ;;Total ram usage:        4 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		___ftpack
  3974 ;; This function is called by:
  3975 ;;		_util_getTemperature
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text12
  3980  003954                     __ptext12:
  3981                           	opt stack 0
  3982  003954                     ___awtoft:
  3983                           	opt stack 24
  3984                           
  3985                           ;incstack = 0
  3986  003954  0E00               	movlw	0
  3987  003956  6E25               	movwf	___awtoft@sign,c
  3988  003958  0100               	movlb	0	; () banked
  3989  00395A  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
  3990  00395C  D007               	goto	l5767
  3991                           
  3992                           ; BSR set to: 0
  3993  00395E  0100               	movlb	0	; () banked
  3994  003960  6D76               	negf	___awtoft@c& (0+255),b
  3995  003962  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
  3996  003964  B0D8               	btfsc	status,0,c
  3997  003966  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
  3998                           
  3999                           ; BSR set to: 0
  4000  003968  0E01               	movlw	1
  4001  00396A  6E25               	movwf	___awtoft@sign,c
  4002  00396C                     l5767:
  4003                           
  4004                           ; BSR set to: 0
  4005  00396C  C076  F071         	movff	___awtoft@c,___ftpack@arg
  4006  003970  C077  F072         	movff	___awtoft@c+1,___ftpack@arg+1
  4007  003974  0100               	movlb	0	; () banked
  4008  003976  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4009  003978  0E8E               	movlw	142
  4010  00397A  0100               	movlb	0	; () banked
  4011  00397C  6F74               	movwf	___ftpack@exp& (0+255),b
  4012  00397E  C025  F075         	movff	___awtoft@sign,___ftpack@sign
  4013  003982  EC44  F017         	call	___ftpack	;wreg free
  4014  003986  C071  F076         	movff	?___ftpack,?___awtoft
  4015  00398A  C072  F077         	movff	?___ftpack+1,?___awtoft+1
  4016  00398E  C073  F078         	movff	?___ftpack+2,?___awtoft+2
  4017  003992  0012               	return	
  4018  003994                     __end_of___awtoft:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           postdec1	equ	0xFE5
  4027                           fsr1l	equ	0xFE1
  4028                           postinc2	equ	0xFDE
  4029                           postdec2	equ	0xFDD
  4030                           fsr2h	equ	0xFDA
  4031                           fsr2l	equ	0xFD9
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function _util_getSolarCurrent *****************
  4035 ;; Defined at:
  4036 ;;		line 52 in file "easat2_util_inputs.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  solarCurrent    3   68[BANK0 ] float 
  4041 ;;  value           3   65[BANK0 ] float 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   63[BANK0 ] int 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4051 ;;      Params:         0       2       0       0       0       0       0
  4052 ;;      Locals:         0       6       0       0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0
  4054 ;;      Totals:         0       8       0       0       0       0       0
  4055 ;;Total ram usage:        8 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    5
  4058 ;; This function calls:
  4059 ;;		___ftmul
  4060 ;;		___fttol
  4061 ;;		___lwtoft
  4062 ;; This function is called by:
  4063 ;;		_main_loop
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text13
  4068  002F7C                     __ptext13:
  4069                           	opt stack 0
  4070  002F7C                     _util_getSolarCurrent:
  4071                           	opt stack 24
  4072                           
  4073                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4074                           
  4075                           ;incstack = 0
  4076  002F7C  0E00               	movlw	0
  4077  002F7E  0100               	movlb	0	; () banked
  4078  002F80  6FA1               	movwf	util_getSolarCurrent@value& (0+255),b
  4079  002F82  0E00               	movlw	0
  4080  002F84  0100               	movlb	0	; () banked
  4081  002F86  6FA2               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4082  002F88  0E00               	movlw	0
  4083  002F8A  0100               	movlb	0	; () banked
  4084  002F8C  6FA3               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4085  002F8E  0E00               	movlw	0
  4086  002F90  0100               	movlb	0	; () banked
  4087  002F92  6FA4               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4088  002F94  0E00               	movlw	0
  4089  002F96  0100               	movlb	0	; () banked
  4090  002F98  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4091  002F9A  0E00               	movlw	0
  4092  002F9C  0100               	movlb	0	; () banked
  4093  002F9E  6FA6               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4097  002FA0  84C2               	bsf	4034,2,c	;volatile
  4098  002FA2  96C2               	bcf	4034,3,c	;volatile
  4099  002FA4  98C2               	bcf	4034,4,c	;volatile
  4100  002FA6  9AC2               	bcf	4034,5,c	;volatile
  4101  002FA8  9CC2               	bcf	4034,6,c	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4105  002FAA  80C2               	bsf	4034,0,c	;volatile
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4109  002FAC  9C9E               	bcf	3998,6,c	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4113  002FAE  82C2               	bsf	4034,1,c	;volatile
  4114  002FB0                     l99:
  4115  002FB0  AC9E               	btfss	3998,6,c	;volatile
  4116  002FB2  D7FE               	goto	l99
  4117                           
  4118                           ;easat2_util_inputs.c: 63: value = ADRES;
  4119  002FB4  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4120  002FB8  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4121  002FBC  ECDF  F01D         	call	___lwtoft	;wreg free
  4122  002FC0  C076  F0A1         	movff	?___lwtoft,util_getSolarCurrent@value
  4123  002FC4  C077  F0A2         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4124  002FC8  C078  F0A3         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4125                           
  4126                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4127  002FCC  9C9E               	bcf	3998,6,c	;volatile
  4128                           
  4129                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4130  002FCE  90C2               	bcf	4034,0,c	;volatile
  4131                           
  4132                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4133  002FD0  C0A1  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4134  002FD4  C0A2  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4135  002FD8  C0A3  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4136  002FDC  0E33               	movlw	51
  4137  002FDE  0100               	movlb	0	; () banked
  4138  002FE0  6F80               	movwf	___ftmul@f2& (0+255),b
  4139  002FE2  0E03               	movlw	3
  4140  002FE4  0100               	movlb	0	; () banked
  4141  002FE6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4142  002FE8  0E3B               	movlw	59
  4143  002FEA  0100               	movlb	0	; () banked
  4144  002FEC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4145  002FEE  ECD0  F014         	call	___ftmul	;wreg free
  4146  002FF2  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4147  002FF6  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4148  002FFA  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4149                           
  4150                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4151  002FFE  C0A4  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4152  003002  C0A5  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4153  003006  C0A6  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4154  00300A  0E00               	movlw	0
  4155  00300C  0100               	movlb	0	; () banked
  4156  00300E  6F80               	movwf	___ftmul@f2& (0+255),b
  4157  003010  0E80               	movlw	128
  4158  003012  0100               	movlb	0	; () banked
  4159  003014  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4160  003016  0E3F               	movlw	63
  4161  003018  0100               	movlb	0	; () banked
  4162  00301A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4163  00301C  ECD0  F014         	call	___ftmul	;wreg free
  4164  003020  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4165  003024  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4166  003028  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4167                           
  4168                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4169  00302C  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4170  003030  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4171  003034  C0A6  F092         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4172  003038  EC79  F015         	call	___fttol	;wreg free
  4173  00303C  C090  F09F         	movff	?___fttol,?_util_getSolarCurrent
  4174  003040  C091  F0A0         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4175  003044  0012               	return	
  4176  003046                     __end_of_util_getSolarCurrent:
  4177                           	opt stack 0
  4178                           tblptru	equ	0xFF8
  4179                           tblptrh	equ	0xFF7
  4180                           tblptrl	equ	0xFF6
  4181                           tablat	equ	0xFF5
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1l	equ	0xFE1
  4186                           postinc2	equ	0xFDE
  4187                           postdec2	equ	0xFDD
  4188                           fsr2h	equ	0xFDA
  4189                           fsr2l	equ	0xFD9
  4190                           status	equ	0xFD8
  4191                           
  4192 ;; *************** function _util_getBatteryVoltage *****************
  4193 ;; Defined at:
  4194 ;;		line 19 in file "easat2_util_inputs.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  voltage         3   47[BANK0 ] float 
  4199 ;;  value           3   44[BANK0 ] float 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  3   41[BANK0 ] float 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4209 ;;      Params:         0       3       0       0       0       0       0
  4210 ;;      Locals:         0       6       0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0
  4212 ;;      Totals:         0       9       0       0       0       0       0
  4213 ;;Total ram usage:        9 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    5
  4216 ;; This function calls:
  4217 ;;		___ftmul
  4218 ;;		___lwtoft
  4219 ;; This function is called by:
  4220 ;;		_main_loop
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text14
  4225  003110                     __ptext14:
  4226                           	opt stack 0
  4227  003110                     _util_getBatteryVoltage:
  4228                           	opt stack 24
  4229                           
  4230                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4231                           
  4232                           ;incstack = 0
  4233  003110  0E00               	movlw	0
  4234  003112  0100               	movlb	0	; () banked
  4235  003114  6F8C               	movwf	util_getBatteryVoltage@value& (0+255),b
  4236  003116  0E00               	movlw	0
  4237  003118  0100               	movlb	0	; () banked
  4238  00311A  6F8D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4239  00311C  0E00               	movlw	0
  4240  00311E  0100               	movlb	0	; () banked
  4241  003120  6F8E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4242  003122  0E00               	movlw	0
  4243  003124  0100               	movlb	0	; () banked
  4244  003126  6F8F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4245  003128  0E00               	movlw	0
  4246  00312A  0100               	movlb	0	; () banked
  4247  00312C  6F90               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4248  00312E  0E00               	movlw	0
  4249  003130  0100               	movlb	0	; () banked
  4250  003132  6F91               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4254  003134  94C2               	bcf	4034,2,c	;volatile
  4255  003136  96C2               	bcf	4034,3,c	;volatile
  4256  003138  98C2               	bcf	4034,4,c	;volatile
  4257  00313A  9AC2               	bcf	4034,5,c	;volatile
  4258  00313C  9CC2               	bcf	4034,6,c	;volatile
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4262  00313E  80C2               	bsf	4034,0,c	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4266  003140  9C9E               	bcf	3998,6,c	;volatile
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4270  003142  82C2               	bsf	4034,1,c	;volatile
  4271  003144                     l93:
  4272  003144  AC9E               	btfss	3998,6,c	;volatile
  4273  003146  D7FE               	goto	l93
  4274                           
  4275                           ;easat2_util_inputs.c: 30: value = ADRES;
  4276  003148  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4277  00314C  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4278  003150  ECDF  F01D         	call	___lwtoft	;wreg free
  4279  003154  C076  F08C         	movff	?___lwtoft,util_getBatteryVoltage@value
  4280  003158  C077  F08D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4281  00315C  C078  F08E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4282                           
  4283                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4284  003160  9C9E               	bcf	3998,6,c	;volatile
  4285                           
  4286                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4287  003162  90C2               	bcf	4034,0,c	;volatile
  4288                           
  4289                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4290  003164  C08C  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4291  003168  C08D  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4292  00316C  C08E  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4293  003170  0E33               	movlw	51
  4294  003172  0100               	movlb	0	; () banked
  4295  003174  6F80               	movwf	___ftmul@f2& (0+255),b
  4296  003176  0E03               	movlw	3
  4297  003178  0100               	movlb	0	; () banked
  4298  00317A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4299  00317C  0E3B               	movlw	59
  4300  00317E  0100               	movlb	0	; () banked
  4301  003180  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4302  003182  ECD0  F014         	call	___ftmul	;wreg free
  4303  003186  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4304  00318A  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4305  00318E  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4306                           
  4307                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4308  003192  C08F  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4309  003196  C090  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4310  00319A  C091  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4311  00319E  0E66               	movlw	102
  4312  0031A0  0100               	movlb	0	; () banked
  4313  0031A2  6F80               	movwf	___ftmul@f2& (0+255),b
  4314  0031A4  0EB6               	movlw	182
  4315  0031A6  0100               	movlb	0	; () banked
  4316  0031A8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4317  0031AA  0E40               	movlw	64
  4318  0031AC  0100               	movlb	0	; () banked
  4319  0031AE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4320  0031B0  ECD0  F014         	call	___ftmul	;wreg free
  4321  0031B4  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4322  0031B8  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4323  0031BC  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4324                           
  4325                           ;easat2_util_inputs.c: 46: return voltage;
  4326  0031C0  C08F  F089         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4327  0031C4  C090  F08A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4328  0031C8  C091  F08B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4329  0031CC  0012               	return	
  4330  0031CE                     __end_of_util_getBatteryVoltage:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           postinc0	equ	0xFEE
  4337                           wreg	equ	0xFE8
  4338                           postdec1	equ	0xFE5
  4339                           fsr1l	equ	0xFE1
  4340                           postinc2	equ	0xFDE
  4341                           postdec2	equ	0xFDD
  4342                           fsr2h	equ	0xFDA
  4343                           fsr2l	equ	0xFD9
  4344                           status	equ	0xFD8
  4345                           
  4346 ;; *************** function _util_getBatteryCurrent *****************
  4347 ;; Defined at:
  4348 ;;		line 85 in file "easat2_util_inputs.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  batteryCurre    3   68[BANK0 ] float 
  4353 ;;  value           3   65[BANK0 ] float 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  2   63[BANK0 ] int 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4363 ;;      Params:         0       2       0       0       0       0       0
  4364 ;;      Locals:         0       6       0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0
  4366 ;;      Totals:         0       8       0       0       0       0       0
  4367 ;;Total ram usage:        8 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    5
  4370 ;; This function calls:
  4371 ;;		___ftmul
  4372 ;;		___fttol
  4373 ;;		___lwtoft
  4374 ;; This function is called by:
  4375 ;;		_main_loop
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text15
  4380  003046                     __ptext15:
  4381                           	opt stack 0
  4382  003046                     _util_getBatteryCurrent:
  4383                           	opt stack 24
  4384                           
  4385                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4386                           
  4387                           ;incstack = 0
  4388  003046  0E00               	movlw	0
  4389  003048  0100               	movlb	0	; () banked
  4390  00304A  6FA1               	movwf	util_getBatteryCurrent@value& (0+255),b
  4391  00304C  0E00               	movlw	0
  4392  00304E  0100               	movlb	0	; () banked
  4393  003050  6FA2               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4394  003052  0E00               	movlw	0
  4395  003054  0100               	movlb	0	; () banked
  4396  003056  6FA3               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4397  003058  0E00               	movlw	0
  4398  00305A  0100               	movlb	0	; () banked
  4399  00305C  6FA4               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4400  00305E  0E00               	movlw	0
  4401  003060  0100               	movlb	0	; () banked
  4402  003062  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4403  003064  0E00               	movlw	0
  4404  003066  0100               	movlb	0	; () banked
  4405  003068  6FA6               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 2;
  4409  00306A  94C2               	bcf	4034,2,c	;volatile
  4410  00306C  86C2               	bsf	4034,3,c	;volatile
  4411  00306E  98C2               	bcf	4034,4,c	;volatile
  4412  003070  9AC2               	bcf	4034,5,c	;volatile
  4413  003072  9CC2               	bcf	4034,6,c	;volatile
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4417  003074  80C2               	bsf	4034,0,c	;volatile
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4421  003076  9C9E               	bcf	3998,6,c	;volatile
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4425  003078  82C2               	bsf	4034,1,c	;volatile
  4426  00307A                     l105:
  4427  00307A  AC9E               	btfss	3998,6,c	;volatile
  4428  00307C  D7FE               	goto	l105
  4429                           
  4430                           ;easat2_util_inputs.c: 96: value = ADRES;
  4431  00307E  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4432  003082  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4433  003086  ECDF  F01D         	call	___lwtoft	;wreg free
  4434  00308A  C076  F0A1         	movff	?___lwtoft,util_getBatteryCurrent@value
  4435  00308E  C077  F0A2         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4436  003092  C078  F0A3         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4437                           
  4438                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4439  003096  9C9E               	bcf	3998,6,c	;volatile
  4440                           
  4441                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4442  003098  90C2               	bcf	4034,0,c	;volatile
  4443                           
  4444                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4445  00309A  C0A1  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4446  00309E  C0A2  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4447  0030A2  C0A3  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4448  0030A6  0E33               	movlw	51
  4449  0030A8  0100               	movlb	0	; () banked
  4450  0030AA  6F80               	movwf	___ftmul@f2& (0+255),b
  4451  0030AC  0E03               	movlw	3
  4452  0030AE  0100               	movlb	0	; () banked
  4453  0030B0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4454  0030B2  0E3B               	movlw	59
  4455  0030B4  0100               	movlb	0	; () banked
  4456  0030B6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4457  0030B8  ECD0  F014         	call	___ftmul	;wreg free
  4458  0030BC  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4459  0030C0  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4460  0030C4  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4461                           
  4462                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4463  0030C8  C0A4  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4464  0030CC  C0A5  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4465  0030D0  C0A6  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4466  0030D4  0E00               	movlw	0
  4467  0030D6  0100               	movlb	0	; () banked
  4468  0030D8  6F80               	movwf	___ftmul@f2& (0+255),b
  4469  0030DA  0E80               	movlw	128
  4470  0030DC  0100               	movlb	0	; () banked
  4471  0030DE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4472  0030E0  0E3F               	movlw	63
  4473  0030E2  0100               	movlb	0	; () banked
  4474  0030E4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4475  0030E6  ECD0  F014         	call	___ftmul	;wreg free
  4476  0030EA  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4477  0030EE  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4478  0030F2  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4479                           
  4480                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4481  0030F6  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4482  0030FA  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4483  0030FE  C0A6  F092         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4484  003102  EC79  F015         	call	___fttol	;wreg free
  4485  003106  C090  F09F         	movff	?___fttol,?_util_getBatteryCurrent
  4486  00310A  C091  F0A0         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4487  00310E  0012               	return	
  4488  003110                     __end_of_util_getBatteryCurrent:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           postdec1	equ	0xFE5
  4497                           fsr1l	equ	0xFE1
  4498                           postinc2	equ	0xFDE
  4499                           postdec2	equ	0xFDD
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function ___lwtoft *****************
  4505 ;; Defined at:
  4506 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  c               2   22[BANK0 ] unsigned int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  3   22[BANK0 ] float 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4520 ;;      Params:         0       3       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0
  4523 ;;      Totals:         0       3       0       0       0       0       0
  4524 ;;Total ram usage:        3 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    4
  4527 ;; This function calls:
  4528 ;;		___ftpack
  4529 ;; This function is called by:
  4530 ;;		_util_getBatteryVoltage
  4531 ;;		_util_getSolarCurrent
  4532 ;;		_util_getBatteryCurrent
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text16
  4537  003BBE                     __ptext16:
  4538                           	opt stack 0
  4539  003BBE                     ___lwtoft:
  4540                           	opt stack 24
  4541                           
  4542                           ;incstack = 0
  4543  003BBE  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  4544  003BC2  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  4545  003BC6  0100               	movlb	0	; () banked
  4546  003BC8  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4547  003BCA  0E8E               	movlw	142
  4548  003BCC  0100               	movlb	0	; () banked
  4549  003BCE  6F74               	movwf	___ftpack@exp& (0+255),b
  4550  003BD0  0E00               	movlw	0
  4551  003BD2  0100               	movlb	0	; () banked
  4552  003BD4  6F75               	movwf	___ftpack@sign& (0+255),b
  4553  003BD6  EC44  F017         	call	___ftpack	;wreg free
  4554  003BDA  C071  F076         	movff	?___ftpack,?___lwtoft
  4555  003BDE  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  4556  003BE2  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  4557  003BE6  0012               	return	
  4558  003BE8                     __end_of___lwtoft:
  4559                           	opt stack 0
  4560                           tblptru	equ	0xFF8
  4561                           tblptrh	equ	0xFF7
  4562                           tblptrl	equ	0xFF6
  4563                           tablat	equ	0xFF5
  4564                           postinc0	equ	0xFEE
  4565                           wreg	equ	0xFE8
  4566                           postdec1	equ	0xFE5
  4567                           fsr1l	equ	0xFE1
  4568                           postinc2	equ	0xFDE
  4569                           postdec2	equ	0xFDD
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _util_beacon_transmission *****************
  4575 ;; Defined at:
  4576 ;;		line 21 in file "easat2_util_transmission.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  battery_volt    3  114[BANK0 ] float 
  4579 ;;  solar_curren    2  117[BANK0 ] int 
  4580 ;;  battery_curr    2  119[BANK0 ] int 
  4581 ;;  temperature     3  121[BANK0 ] float 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  i               2  192[BANK1 ] int 
  4584 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4585 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4595 ;;      Params:         0      10       0       0       0       0       0
  4596 ;;      Locals:         0       0     194       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0
  4598 ;;      Totals:         0      10     194       0       0       0       0
  4599 ;;Total ram usage:      204 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    8
  4602 ;; This function calls:
  4603 ;;		_memset
  4604 ;;		_sprintf
  4605 ;;		_strcat
  4606 ;;		_strcpy
  4607 ;;		_strlen
  4608 ;;		_util_transmit_letter
  4609 ;; This function is called by:
  4610 ;;		_main_loop
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text17
  4615  002D76                     __ptext17:
  4616                           	opt stack 0
  4617  002D76                     _util_beacon_transmission:
  4618                           	opt stack 21
  4619                           
  4620                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4621                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4622                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4623                           
  4624                           ;incstack = 0
  4625  002D76  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4626  002D78  0100               	movlb	0	; () banked
  4627  002D7A  6F71               	movwf	memset@p1& (0+255),b
  4628  002D7C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4629  002D7E  0100               	movlb	0	; () banked
  4630  002D80  6F72               	movwf	(memset@p1+1)& (0+255),b
  4631  002D82  0E00               	movlw	0
  4632  002D84  0100               	movlb	0	; () banked
  4633  002D86  6F74               	movwf	(memset@c+1)& (0+255),b
  4634  002D88  0E00               	movlw	0
  4635  002D8A  6F73               	movwf	memset@c& (0+255),b
  4636  002D8C  0E00               	movlw	0
  4637  002D8E  0100               	movlb	0	; () banked
  4638  002D90  6F76               	movwf	(memset@n+1)& (0+255),b
  4639  002D92  0E80               	movlw	128
  4640  002D94  6F75               	movwf	memset@n& (0+255),b
  4641  002D96  EC7E  F01D         	call	_memset	;wreg free
  4642                           
  4643                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4644  002D9A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4645  002D9C  0100               	movlb	0	; () banked
  4646  002D9E  6F71               	movwf	strcpy@to& (0+255),b
  4647  002DA0  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4648  002DA2  0100               	movlb	0	; () banked
  4649  002DA4  6F72               	movwf	(strcpy@to+1)& (0+255),b
  4650  002DA6  0E9E               	movlw	low STR_1
  4651  002DA8  0100               	movlb	0	; () banked
  4652  002DAA  6F73               	movwf	strcpy@from& (0+255),b
  4653  002DAC  0E7F               	movlw	high STR_1
  4654  002DAE  0100               	movlb	0	; () banked
  4655  002DB0  6F74               	movwf	(strcpy@from+1)& (0+255),b
  4656  002DB2  EC4C  F01D         	call	_strcpy	;wreg free
  4657                           
  4658                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4659  002DB6  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4660  002DB8  0100               	movlb	0	; () banked
  4661  002DBA  6F71               	movwf	memset@p1& (0+255),b
  4662  002DBC  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4663  002DBE  0100               	movlb	0	; () banked
  4664  002DC0  6F72               	movwf	(memset@p1+1)& (0+255),b
  4665  002DC2  0E00               	movlw	0
  4666  002DC4  0100               	movlb	0	; () banked
  4667  002DC6  6F74               	movwf	(memset@c+1)& (0+255),b
  4668  002DC8  0E00               	movlw	0
  4669  002DCA  6F73               	movwf	memset@c& (0+255),b
  4670  002DCC  0E00               	movlw	0
  4671  002DCE  0100               	movlb	0	; () banked
  4672  002DD0  6F76               	movwf	(memset@n+1)& (0+255),b
  4673  002DD2  0E40               	movlw	64
  4674  002DD4  6F75               	movwf	memset@n& (0+255),b
  4675  002DD6  EC7E  F01D         	call	_memset	;wreg free
  4676                           
  4677                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4678                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4679  002DDA  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4680  002DDC  0100               	movlb	0	; () banked
  4681  002DDE  6FA5               	movwf	sprintf@sp& (0+255),b
  4682  002DE0  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4683  002DE2  0100               	movlb	0	; () banked
  4684  002DE4  6FA6               	movwf	(sprintf@sp+1)& (0+255),b
  4685  002DE6  0E6B               	movlw	low STR_2
  4686  002DE8  0100               	movlb	0	; () banked
  4687  002DEA  6FA7               	movwf	sprintf@f& (0+255),b
  4688  002DEC  0E7F               	movlw	high STR_2
  4689  002DEE  0100               	movlb	0	; () banked
  4690  002DF0  6FA8               	movwf	(sprintf@f+1)& (0+255),b
  4691  002DF2  C0D9  F0A9         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4692  002DF6  C0DA  F0AA         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4693  002DFA  C0DB  F0AB         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4694  002DFE  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4695  002E02  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4696  002E06  C0D4  F0AE         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4697  002E0A  C0D5  F0AF         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4698  002E0E  C0D6  F0B0         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4699  002E12  C0D7  F0B1         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4700  002E16  C0D8  F0B2         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4701  002E1A  EC55  F000         	call	_sprintf	;wreg free
  4702                           
  4703                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4704  002E1E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4705  002E20  0100               	movlb	0	; () banked
  4706  002E22  6F71               	movwf	strcat@to& (0+255),b
  4707  002E24  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4708  002E26  0100               	movlb	0	; () banked
  4709  002E28  6F72               	movwf	(strcat@to+1)& (0+255),b
  4710  002E2A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4711  002E2C  0100               	movlb	0	; () banked
  4712  002E2E  6F73               	movwf	strcat@from& (0+255),b
  4713  002E30  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4714  002E32  0100               	movlb	0	; () banked
  4715  002E34  6F74               	movwf	(strcat@from+1)& (0+255),b
  4716  002E36  EC46  F01C         	call	_strcat	;wreg free
  4717                           
  4718                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4719  002E3A  0E00               	movlw	0
  4720  002E3C  0101               	movlb	1	; () banked
  4721  002E3E  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4722  002E40  0E00               	movlw	0
  4723  002E42  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4724  002E44  D00E               	goto	l5987
  4725  002E46                     l5983:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4729  002E46  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4730  002E48  0101               	movlb	1	; () banked
  4731  002E4A  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4732  002E4C  6ED9               	movwf	fsr2l,c
  4733  002E4E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4734  002E50  0101               	movlb	1	; () banked
  4735  002E52  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4736  002E54  6EDA               	movwf	fsr2h,c
  4737  002E56  50DF               	movf	indf2,w,c
  4738  002E58  EC4C  F00C         	call	_util_transmit_letter
  4739  002E5C  0101               	movlb	1	; () banked
  4740  002E5E  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4741  002E60  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4742  002E62                     l5987:
  4743                           
  4744                           ; BSR set to: 1
  4745  002E62  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4746  002E64  0100               	movlb	0	; () banked
  4747  002E66  6F71               	movwf	strlen@s& (0+255),b
  4748  002E68  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4749  002E6A  0100               	movlb	0	; () banked
  4750  002E6C  6F72               	movwf	(strlen@s+1)& (0+255),b
  4751  002E6E  ECA8  F01B         	call	_strlen	;wreg free
  4752  002E72  0100               	movlb	0	; () banked
  4753  002E74  5171               	movf	?_strlen& (0+255),w,b
  4754  002E76  0101               	movlb	1	; () banked
  4755  002E78  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4756  002E7A  0100               	movlb	0	; () banked
  4757  002E7C  5172               	movf	(?_strlen+1)& (0+255),w,b
  4758  002E7E  0101               	movlb	1	; () banked
  4759  002E80  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4760  002E82  B0D8               	btfsc	status,0,c
  4761  002E84  0012               	return	
  4762  002E86  D7DF               	goto	l5983
  4763  002E88                     __end_of_util_beacon_transmission:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           postinc0	equ	0xFEE
  4770                           wreg	equ	0xFE8
  4771                           postdec1	equ	0xFE5
  4772                           fsr1l	equ	0xFE1
  4773                           indf2	equ	0xFDF
  4774                           postinc2	equ	0xFDE
  4775                           postdec2	equ	0xFDD
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function _util_transmit_letter *****************
  4781 ;; Defined at:
  4782 ;;		line 52 in file "easat2_util_transmission.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  letter          1    wreg     unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  letter          1   42[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4796 ;;      Params:         0       0       0       0       0       0       0
  4797 ;;      Locals:         1       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0
  4799 ;;      Totals:         1       0       0       0       0       0       0
  4800 ;;Total ram usage:        1 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    7
  4803 ;; This function calls:
  4804 ;;		_util_transmit_morse_sequence
  4805 ;;		_util_transmit_space_between_letters
  4806 ;;		_util_transmit_space_between_words
  4807 ;; This function is called by:
  4808 ;;		_util_beacon_transmission
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text18
  4813  001898                     __ptext18:
  4814                           	opt stack 0
  4815  001898                     _util_transmit_letter:
  4816                           	opt stack 21
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;incstack = 0
  4820                           ;util_transmit_letter@letter stored from wreg
  4821  001898  6E2B               	movwf	util_transmit_letter@letter,c
  4822                           
  4823                           ;easat2_util_transmission.c: 54: switch (letter) {
  4824  00189A  D174               	goto	l5709
  4825  00189C                     l5623:
  4826                           
  4827                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4828  00189C  0EE8               	movlw	low (STR_19+2)
  4829  00189E  0100               	movlb	0	; () banked
  4830  0018A0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4831  0018A2  0E7F               	movlw	high (STR_19+2)
  4832  0018A4  0100               	movlb	0	; () banked
  4833  0018A6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4834  0018A8  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4835                           
  4836                           ;easat2_util_transmission.c: 61: break;
  4837  0018AC  D1EA               	goto	l5711
  4838  0018AE                     l5625:
  4839                           
  4840                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4841  0018AE  0ED0               	movlw	low (STR_36+1)
  4842  0018B0  0100               	movlb	0	; () banked
  4843  0018B2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4844  0018B4  0E7F               	movlw	high (STR_36+1)
  4845  0018B6  0100               	movlb	0	; () banked
  4846  0018B8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4847  0018BA  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4848                           
  4849                           ;easat2_util_transmission.c: 64: break;
  4850  0018BE  D1E1               	goto	l5711
  4851  0018C0                     l5627:
  4852                           
  4853                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4854  0018C0  0EF5               	movlw	low STR_5
  4855  0018C2  0100               	movlb	0	; () banked
  4856  0018C4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4857  0018C6  0E7F               	movlw	high STR_5
  4858  0018C8  0100               	movlb	0	; () banked
  4859  0018CA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4860  0018CC  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4861                           
  4862                           ;easat2_util_transmission.c: 67: break;
  4863  0018D0  D1D8               	goto	l5711
  4864  0018D2                     l5629:
  4865                           
  4866                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4867  0018D2  0ECB               	movlw	low (STR_37+2)
  4868  0018D4  0100               	movlb	0	; () banked
  4869  0018D6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4870  0018D8  0E7F               	movlw	high (STR_37+2)
  4871  0018DA  0100               	movlb	0	; () banked
  4872  0018DC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4873  0018DE  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4874                           
  4875                           ;easat2_util_transmission.c: 70: break;
  4876  0018E2  D1CF               	goto	l5711
  4877  0018E4                     l5631:
  4878                           
  4879                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4880  0018E4  0EC1               	movlw	low (STR_38+4)
  4881  0018E6  0100               	movlb	0	; () banked
  4882  0018E8  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4883  0018EA  0E7F               	movlw	high (STR_38+4)
  4884  0018EC  0100               	movlb	0	; () banked
  4885  0018EE  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4886  0018F0  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4887                           
  4888                           ;easat2_util_transmission.c: 73: break;
  4889  0018F4  D1C6               	goto	l5711
  4890  0018F6                     l5633:
  4891                           
  4892                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4893  0018F6  0EC4               	movlw	low (STR_41+1)
  4894  0018F8  0100               	movlb	0	; () banked
  4895  0018FA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4896  0018FC  0E7F               	movlw	high (STR_41+1)
  4897  0018FE  0100               	movlb	0	; () banked
  4898  001900  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4899  001902  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4900                           
  4901                           ;easat2_util_transmission.c: 76: break;
  4902  001906  D1BD               	goto	l5711
  4903  001908                     l5635:
  4904                           
  4905                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4906  001908  0EBF               	movlw	low (STR_38+2)
  4907  00190A  0100               	movlb	0	; () banked
  4908  00190C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4909  00190E  0E7F               	movlw	high (STR_38+2)
  4910  001910  0100               	movlb	0	; () banked
  4911  001912  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4912  001914  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4913                           
  4914                           ;easat2_util_transmission.c: 79: break;
  4915  001918  D1B4               	goto	l5711
  4916  00191A                     l5637:
  4917                           
  4918                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4919  00191A  0ED6               	movlw	low (STR_35+1)
  4920  00191C  0100               	movlb	0	; () banked
  4921  00191E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4922  001920  0E7F               	movlw	high (STR_35+1)
  4923  001922  0100               	movlb	0	; () banked
  4924  001924  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4925  001926  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4926                           
  4927                           ;easat2_util_transmission.c: 82: break;
  4928  00192A  D1AB               	goto	l5711
  4929  00192C                     l5639:
  4930                           
  4931                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4932  00192C  0ECC               	movlw	low (STR_37+3)
  4933  00192E  0100               	movlb	0	; () banked
  4934  001930  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4935  001932  0E7F               	movlw	high (STR_37+3)
  4936  001934  0100               	movlb	0	; () banked
  4937  001936  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4938  001938  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4939                           
  4940                           ;easat2_util_transmission.c: 85: break;
  4941  00193C  D1A2               	goto	l5711
  4942  00193E                     l5641:
  4943                           
  4944                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4945  00193E  0EB2               	movlw	low (STR_31+1)
  4946  001940  0100               	movlb	0	; () banked
  4947  001942  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4948  001944  0E7F               	movlw	high (STR_31+1)
  4949  001946  0100               	movlb	0	; () banked
  4950  001948  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4951  00194A  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4952                           
  4953                           ;easat2_util_transmission.c: 88: break;
  4954  00194E  D199               	goto	l5711
  4955  001950                     l5643:
  4956                           
  4957                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4958  001950  0EE7               	movlw	low (STR_19+1)
  4959  001952  0100               	movlb	0	; () banked
  4960  001954  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4961  001956  0E7F               	movlw	high (STR_19+1)
  4962  001958  0100               	movlb	0	; () banked
  4963  00195A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4964  00195C  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4965                           
  4966                           ;easat2_util_transmission.c: 91: break;
  4967  001960  D190               	goto	l5711
  4968  001962                     l5645:
  4969                           
  4970                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4971  001962  0EFA               	movlw	low STR_14
  4972  001964  0100               	movlb	0	; () banked
  4973  001966  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4974  001968  0E7F               	movlw	high STR_14
  4975  00196A  0100               	movlb	0	; () banked
  4976  00196C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4977  00196E  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4978                           
  4979                           ;easat2_util_transmission.c: 94: break;
  4980  001972  D187               	goto	l5711
  4981  001974                     l5647:
  4982                           
  4983                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4984  001974  0EA8               	movlw	low (STR_29+3)
  4985  001976  0100               	movlb	0	; () banked
  4986  001978  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4987  00197A  0E7F               	movlw	high (STR_29+3)
  4988  00197C  0100               	movlb	0	; () banked
  4989  00197E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4990  001980  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4991                           
  4992                           ;easat2_util_transmission.c: 97: break;
  4993  001984  D17E               	goto	l5711
  4994  001986                     l5649:
  4995                           
  4996                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  4997  001986  0EC0               	movlw	low (STR_38+3)
  4998  001988  0100               	movlb	0	; () banked
  4999  00198A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5000  00198C  0E7F               	movlw	high (STR_38+3)
  5001  00198E  0100               	movlb	0	; () banked
  5002  001990  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5003  001992  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5004                           
  5005                           ;easat2_util_transmission.c: 100: break;
  5006  001996  D175               	goto	l5711
  5007  001998                     l5651:
  5008                           
  5009                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  5010  001998  0EA7               	movlw	low (STR_29+2)
  5011  00199A  0100               	movlb	0	; () banked
  5012  00199C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5013  00199E  0E7F               	movlw	high (STR_29+2)
  5014  0019A0  0100               	movlb	0	; () banked
  5015  0019A2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5016  0019A4  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5017                           
  5018                           ;easat2_util_transmission.c: 103: break;
  5019  0019A8  D16C               	goto	l5711
  5020  0019AA                     l5653:
  5021                           
  5022                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  5023  0019AA  0EF0               	movlw	low STR_18
  5024  0019AC  0100               	movlb	0	; () banked
  5025  0019AE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5026  0019B0  0E7F               	movlw	high STR_18
  5027  0019B2  0100               	movlb	0	; () banked
  5028  0019B4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5029  0019B6  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5030                           
  5031                           ;easat2_util_transmission.c: 106: break;
  5032  0019BA  D163               	goto	l5711
  5033  0019BC                     l5655:
  5034                           
  5035                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  5036  0019BC  0EE6               	movlw	low STR_19
  5037  0019BE  0100               	movlb	0	; () banked
  5038  0019C0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5039  0019C2  0E7F               	movlw	high STR_19
  5040  0019C4  0100               	movlb	0	; () banked
  5041  0019C6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5042  0019C8  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5043                           
  5044                           ;easat2_util_transmission.c: 109: break;
  5045  0019CC  D15A               	goto	l5711
  5046  0019CE                     l5657:
  5047                           
  5048                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  5049  0019CE  0EF6               	movlw	low (STR_5+1)
  5050  0019D0  0100               	movlb	0	; () banked
  5051  0019D2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5052  0019D4  0E7F               	movlw	high (STR_5+1)
  5053  0019D6  0100               	movlb	0	; () banked
  5054  0019D8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5055  0019DA  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5056                           
  5057                           ;easat2_util_transmission.c: 112: break;
  5058  0019DE  D151               	goto	l5711
  5059  0019E0                     l5659:
  5060                           
  5061                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  5062  0019E0  0ED1               	movlw	low (STR_36+2)
  5063  0019E2  0100               	movlb	0	; () banked
  5064  0019E4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5065  0019E6  0E7F               	movlw	high (STR_36+2)
  5066  0019E8  0100               	movlb	0	; () banked
  5067  0019EA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5068  0019EC  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5069                           
  5070                           ;easat2_util_transmission.c: 115: break;
  5071  0019F0  D148               	goto	l5711
  5072  0019F2                     l5661:
  5073                           
  5074                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  5075  0019F2  0EA9               	movlw	low (STR_29+4)
  5076  0019F4  0100               	movlb	0	; () banked
  5077  0019F6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5078  0019F8  0E7F               	movlw	high (STR_29+4)
  5079  0019FA  0100               	movlb	0	; () banked
  5080  0019FC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5081  0019FE  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5082                           
  5083                           ;easat2_util_transmission.c: 118: break;
  5084  001A02  D13F               	goto	l5711
  5085  001A04                     l5663:
  5086                           
  5087                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  5088  001A04  0EEC               	movlw	low (STR_26+1)
  5089  001A06  0100               	movlb	0	; () banked
  5090  001A08  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5091  001A0A  0E7F               	movlw	high (STR_26+1)
  5092  001A0C  0100               	movlb	0	; () banked
  5093  001A0E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5094  001A10  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5095                           
  5096                           ;easat2_util_transmission.c: 121: break;
  5097  001A14  D136               	goto	l5711
  5098  001A16                     l5665:
  5099                           
  5100                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  5101  001A16  0E92               	movlw	low (STR_43+2)
  5102  001A18  0100               	movlb	0	; () banked
  5103  001A1A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5104  001A1C  0E7F               	movlw	high (STR_43+2)
  5105  001A1E  0100               	movlb	0	; () banked
  5106  001A20  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5107  001A22  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5108                           
  5109                           ;easat2_util_transmission.c: 124: break;
  5110  001A26  D12D               	goto	l5711
  5111  001A28                     l5667:
  5112                           
  5113                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  5114  001A28  0EE2               	movlw	low (STR_27+1)
  5115  001A2A  0100               	movlb	0	; () banked
  5116  001A2C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5117  001A2E  0E7F               	movlw	high (STR_27+1)
  5118  001A30  0100               	movlb	0	; () banked
  5119  001A32  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5120  001A34  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5121                           
  5122                           ;easat2_util_transmission.c: 127: break;
  5123  001A38  D124               	goto	l5711
  5124  001A3A                     l5669:
  5125                           
  5126                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  5127  001A3A  0EEB               	movlw	low STR_26
  5128  001A3C  0100               	movlb	0	; () banked
  5129  001A3E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5130  001A40  0E7F               	movlw	high STR_26
  5131  001A42  0100               	movlb	0	; () banked
  5132  001A44  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5133  001A46  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5134                           
  5135                           ;easat2_util_transmission.c: 130: break;
  5136  001A4A  D11B               	goto	l5711
  5137  001A4C                     l5671:
  5138                           
  5139                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  5140  001A4C  0EE1               	movlw	low STR_27
  5141  001A4E  0100               	movlb	0	; () banked
  5142  001A50  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5143  001A52  0E7F               	movlw	high STR_27
  5144  001A54  0100               	movlb	0	; () banked
  5145  001A56  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5146  001A58  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5147                           
  5148                           ;easat2_util_transmission.c: 133: break;
  5149  001A5C  D112               	goto	l5711
  5150  001A5E                     l5673:
  5151                           
  5152                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  5153  001A5E  0ECA               	movlw	low (STR_37+1)
  5154  001A60  0100               	movlb	0	; () banked
  5155  001A62  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5156  001A64  0E7F               	movlw	high (STR_37+1)
  5157  001A66  0100               	movlb	0	; () banked
  5158  001A68  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5159  001A6A  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5160                           
  5161                           ;easat2_util_transmission.c: 136: break;
  5162  001A6E  D109               	goto	l5711
  5163  001A70                     l5675:
  5164                           
  5165                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  5166  001A70  0EA5               	movlw	low STR_29
  5167  001A72  0100               	movlb	0	; () banked
  5168  001A74  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5169  001A76  0E7F               	movlw	high STR_29
  5170  001A78  0100               	movlb	0	; () banked
  5171  001A7A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5172  001A7C  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5173                           
  5174                           ;easat2_util_transmission.c: 139: break;
  5175  001A80  D100               	goto	l5711
  5176  001A82                     l5677:
  5177                           
  5178                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  5179  001A82  0EAB               	movlw	low STR_30
  5180  001A84  0100               	movlb	0	; () banked
  5181  001A86  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5182  001A88  0E7F               	movlw	high STR_30
  5183  001A8A  0100               	movlb	0	; () banked
  5184  001A8C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5185  001A8E  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5186                           
  5187                           ;easat2_util_transmission.c: 142: break;
  5188  001A92  D0F7               	goto	l5711
  5189  001A94                     l5679:
  5190                           
  5191                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  5192  001A94  0EB1               	movlw	low STR_31
  5193  001A96  0100               	movlb	0	; () banked
  5194  001A98  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5195  001A9A  0E7F               	movlw	high STR_31
  5196  001A9C  0100               	movlb	0	; () banked
  5197  001A9E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5198  001AA0  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5199                           
  5200                           ;easat2_util_transmission.c: 145: break;
  5201  001AA4  D0EE               	goto	l5711
  5202  001AA6                     l5681:
  5203                           
  5204                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  5205  001AA6  0EB7               	movlw	low STR_32
  5206  001AA8  0100               	movlb	0	; () banked
  5207  001AAA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5208  001AAC  0E7F               	movlw	high STR_32
  5209  001AAE  0100               	movlb	0	; () banked
  5210  001AB0  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5211  001AB2  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5212                           
  5213                           ;easat2_util_transmission.c: 148: break;
  5214  001AB6  D0E5               	goto	l5711
  5215  001AB8                     l5683:
  5216                           
  5217                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  5218  001AB8  0E91               	movlw	low (STR_43+1)
  5219  001ABA  0100               	movlb	0	; () banked
  5220  001ABC  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5221  001ABE  0E7F               	movlw	high (STR_43+1)
  5222  001AC0  0100               	movlb	0	; () banked
  5223  001AC2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5224  001AC4  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5225                           
  5226                           ;easat2_util_transmission.c: 151: break;
  5227  001AC8  D0DC               	goto	l5711
  5228  001ACA                     l5685:
  5229                           
  5230                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  5231  001ACA  0EDB               	movlw	low STR_34
  5232  001ACC  0100               	movlb	0	; () banked
  5233  001ACE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5234  001AD0  0E7F               	movlw	high STR_34
  5235  001AD2  0100               	movlb	0	; () banked
  5236  001AD4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5237  001AD6  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5238                           
  5239                           ;easat2_util_transmission.c: 154: break;
  5240  001ADA  D0D3               	goto	l5711
  5241  001ADC                     l5687:
  5242                           
  5243                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  5244  001ADC  0ED5               	movlw	low STR_35
  5245  001ADE  0100               	movlb	0	; () banked
  5246  001AE0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5247  001AE2  0E7F               	movlw	high STR_35
  5248  001AE4  0100               	movlb	0	; () banked
  5249  001AE6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5250  001AE8  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5251                           
  5252                           ;easat2_util_transmission.c: 157: break;
  5253  001AEC  D0CA               	goto	l5711
  5254  001AEE                     l5689:
  5255                           
  5256                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  5257  001AEE  0ECF               	movlw	low STR_36
  5258  001AF0  0100               	movlb	0	; () banked
  5259  001AF2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5260  001AF4  0E7F               	movlw	high STR_36
  5261  001AF6  0100               	movlb	0	; () banked
  5262  001AF8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5263  001AFA  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5264                           
  5265                           ;easat2_util_transmission.c: 160: break;
  5266  001AFE  D0C1               	goto	l5711
  5267  001B00                     l5691:
  5268                           
  5269                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  5270  001B00  0EC9               	movlw	low STR_37
  5271  001B02  0100               	movlb	0	; () banked
  5272  001B04  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5273  001B06  0E7F               	movlw	high STR_37
  5274  001B08  0100               	movlb	0	; () banked
  5275  001B0A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5276  001B0C  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5277                           
  5278                           ;easat2_util_transmission.c: 163: break;
  5279  001B10  D0B8               	goto	l5711
  5280  001B12                     l5693:
  5281                           
  5282                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  5283  001B12  0EBD               	movlw	low STR_38
  5284  001B14  0100               	movlb	0	; () banked
  5285  001B16  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5286  001B18  0E7F               	movlw	high STR_38
  5287  001B1A  0100               	movlb	0	; () banked
  5288  001B1C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5289  001B1E  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5290                           
  5291                           ;easat2_util_transmission.c: 166: break;
  5292  001B22  D0AF               	goto	l5711
  5293  001B24                     l5695:
  5294                           
  5295                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  5296  001B24  0E82               	movlw	low STR_39
  5297  001B26  0100               	movlb	0	; () banked
  5298  001B28  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5299  001B2A  0E7F               	movlw	high STR_39
  5300  001B2C  0100               	movlb	0	; () banked
  5301  001B2E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5302  001B30  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5303                           
  5304                           ;easat2_util_transmission.c: 169: break;
  5305  001B34  D0A6               	goto	l5711
  5306  001B36                     l5697:
  5307                           
  5308                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  5309  001B36  0E97               	movlw	low STR_40
  5310  001B38  0100               	movlb	0	; () banked
  5311  001B3A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5312  001B3C  0E7F               	movlw	high STR_40
  5313  001B3E  0100               	movlb	0	; () banked
  5314  001B40  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5315  001B42  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5316                           
  5317                           ;easat2_util_transmission.c: 172: break;
  5318  001B46  D09D               	goto	l5711
  5319  001B48                     l5699:
  5320                           
  5321                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  5322  001B48  0EC3               	movlw	low STR_41
  5323  001B4A  0100               	movlb	0	; () banked
  5324  001B4C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5325  001B4E  0E7F               	movlw	high STR_41
  5326  001B50  0100               	movlb	0	; () banked
  5327  001B52  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5328  001B54  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5329                           
  5330                           ;easat2_util_transmission.c: 175: break;
  5331  001B58  D094               	goto	l5711
  5332  001B5A                     l5701:
  5333                           
  5334                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  5335  001B5A  0E89               	movlw	low STR_42
  5336  001B5C  0100               	movlb	0	; () banked
  5337  001B5E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5338  001B60  0E7F               	movlw	high STR_42
  5339  001B62  0100               	movlb	0	; () banked
  5340  001B64  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5341  001B66  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5342                           
  5343                           ;easat2_util_transmission.c: 178: break;
  5344  001B6A  D08B               	goto	l5711
  5345  001B6C                     l5703:
  5346                           
  5347                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  5348  001B6C  0E90               	movlw	low STR_43
  5349  001B6E  0100               	movlb	0	; () banked
  5350  001B70  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5351  001B72  0E7F               	movlw	high STR_43
  5352  001B74  0100               	movlb	0	; () banked
  5353  001B76  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5354  001B78  EC76  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5355                           
  5356                           ;easat2_util_transmission.c: 181: break;
  5357  001B7C  D082               	goto	l5711
  5358  001B7E                     l5705:
  5359                           
  5360                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  5361  001B7E  EC27  F01E         	call	_util_transmit_space_between_words	;wreg free
  5362                           
  5363                           ;easat2_util_transmission.c: 188: }
  5364                           
  5365                           ;easat2_util_transmission.c: 186: break;
  5366                           
  5367                           ;easat2_util_transmission.c: 185: default:
  5368                           
  5369                           ;easat2_util_transmission.c: 184: break;
  5370  001B82  D07F               	goto	l5711
  5371  001B84                     l5709:
  5372  001B84  502B               	movf	util_transmit_letter@letter,w,c
  5373                           
  5374                           ; Switch size 1, requested type "space"
  5375                           ; Number of cases is 42, Range of values is 32 to 90
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte          127    64 (average)
  5379                           ;	Chosen strategy is simple_byte
  5380  001B86  0A20               	xorlw	32	; case 32
  5381  001B88  B4D8               	btfsc	status,2,c
  5382  001B8A  D7F9               	goto	l5705
  5383  001B8C  0A0C               	xorlw	12	; case 44
  5384  001B8E  B4D8               	btfsc	status,2,c
  5385  001B90  D7C9               	goto	l5695
  5386  001B92  0A01               	xorlw	1	; case 45
  5387  001B94  B4D8               	btfsc	status,2,c
  5388  001B96  D7EA               	goto	l5703
  5389  001B98  0A03               	xorlw	3	; case 46
  5390  001B9A  B4D8               	btfsc	status,2,c
  5391  001B9C  D7DE               	goto	l5701
  5392  001B9E  0A01               	xorlw	1	; case 47
  5393  001BA0  B4D8               	btfsc	status,2,c
  5394  001BA2  D7D2               	goto	l5699
  5395  001BA4  0A1F               	xorlw	31	; case 48
  5396  001BA6  B4D8               	btfsc	status,2,c
  5397  001BA8  D763               	goto	l5675
  5398  001BAA  0A01               	xorlw	1	; case 49
  5399  001BAC  B4D8               	btfsc	status,2,c
  5400  001BAE  D769               	goto	l5677
  5401  001BB0  0A03               	xorlw	3	; case 50
  5402  001BB2  B4D8               	btfsc	status,2,c
  5403  001BB4  D76F               	goto	l5679
  5404  001BB6  0A01               	xorlw	1	; case 51
  5405  001BB8  B4D8               	btfsc	status,2,c
  5406  001BBA  D775               	goto	l5681
  5407  001BBC  0A07               	xorlw	7	; case 52
  5408  001BBE  B4D8               	btfsc	status,2,c
  5409  001BC0  D77B               	goto	l5683
  5410  001BC2  0A01               	xorlw	1	; case 53
  5411  001BC4  B4D8               	btfsc	status,2,c
  5412  001BC6  D781               	goto	l5685
  5413  001BC8  0A03               	xorlw	3	; case 54
  5414  001BCA  B4D8               	btfsc	status,2,c
  5415  001BCC  D787               	goto	l5687
  5416  001BCE  0A01               	xorlw	1	; case 55
  5417  001BD0  B4D8               	btfsc	status,2,c
  5418  001BD2  D78D               	goto	l5689
  5419  001BD4  0A0F               	xorlw	15	; case 56
  5420  001BD6  B4D8               	btfsc	status,2,c
  5421  001BD8  D793               	goto	l5691
  5422  001BDA  0A01               	xorlw	1	; case 57
  5423  001BDC  B4D8               	btfsc	status,2,c
  5424  001BDE  D799               	goto	l5693
  5425  001BE0  0A06               	xorlw	6	; case 63
  5426  001BE2  B4D8               	btfsc	status,2,c
  5427  001BE4  D7A8               	goto	l5697
  5428  001BE6  0A7E               	xorlw	126	; case 65
  5429  001BE8  B4D8               	btfsc	status,2,c
  5430  001BEA  D658               	goto	l5623
  5431  001BEC  0A03               	xorlw	3	; case 66
  5432  001BEE  B4D8               	btfsc	status,2,c
  5433  001BF0  D65E               	goto	l5625
  5434  001BF2  0A01               	xorlw	1	; case 67
  5435  001BF4  B4D8               	btfsc	status,2,c
  5436  001BF6  D664               	goto	l5627
  5437  001BF8  0A07               	xorlw	7	; case 68
  5438  001BFA  B4D8               	btfsc	status,2,c
  5439  001BFC  D66A               	goto	l5629
  5440  001BFE  0A01               	xorlw	1	; case 69
  5441  001C00  B4D8               	btfsc	status,2,c
  5442  001C02  D670               	goto	l5631
  5443  001C04  0A03               	xorlw	3	; case 70
  5444  001C06  B4D8               	btfsc	status,2,c
  5445  001C08  D676               	goto	l5633
  5446  001C0A  0A01               	xorlw	1	; case 71
  5447  001C0C  B4D8               	btfsc	status,2,c
  5448  001C0E  D67C               	goto	l5635
  5449  001C10  0A0F               	xorlw	15	; case 72
  5450  001C12  B4D8               	btfsc	status,2,c
  5451  001C14  D682               	goto	l5637
  5452  001C16  0A01               	xorlw	1	; case 73
  5453  001C18  B4D8               	btfsc	status,2,c
  5454  001C1A  D688               	goto	l5639
  5455  001C1C  0A03               	xorlw	3	; case 74
  5456  001C1E  B4D8               	btfsc	status,2,c
  5457  001C20  D68E               	goto	l5641
  5458  001C22  0A01               	xorlw	1	; case 75
  5459  001C24  B4D8               	btfsc	status,2,c
  5460  001C26  D694               	goto	l5643
  5461  001C28  0A07               	xorlw	7	; case 76
  5462  001C2A  B4D8               	btfsc	status,2,c
  5463  001C2C  D69A               	goto	l5645
  5464  001C2E  0A01               	xorlw	1	; case 77
  5465  001C30  B4D8               	btfsc	status,2,c
  5466  001C32  D6A0               	goto	l5647
  5467  001C34  0A03               	xorlw	3	; case 78
  5468  001C36  B4D8               	btfsc	status,2,c
  5469  001C38  D6A6               	goto	l5649
  5470  001C3A  0A01               	xorlw	1	; case 79
  5471  001C3C  B4D8               	btfsc	status,2,c
  5472  001C3E  D6AC               	goto	l5651
  5473  001C40  0A1F               	xorlw	31	; case 80
  5474  001C42  B4D8               	btfsc	status,2,c
  5475  001C44  D6B2               	goto	l5653
  5476  001C46  0A01               	xorlw	1	; case 81
  5477  001C48  B4D8               	btfsc	status,2,c
  5478  001C4A  D6B8               	goto	l5655
  5479  001C4C  0A03               	xorlw	3	; case 82
  5480  001C4E  B4D8               	btfsc	status,2,c
  5481  001C50  D6BE               	goto	l5657
  5482  001C52  0A01               	xorlw	1	; case 83
  5483  001C54  B4D8               	btfsc	status,2,c
  5484  001C56  D6C4               	goto	l5659
  5485  001C58  0A07               	xorlw	7	; case 84
  5486  001C5A  B4D8               	btfsc	status,2,c
  5487  001C5C  D6CA               	goto	l5661
  5488  001C5E  0A01               	xorlw	1	; case 85
  5489  001C60  B4D8               	btfsc	status,2,c
  5490  001C62  D6D0               	goto	l5663
  5491  001C64  0A03               	xorlw	3	; case 86
  5492  001C66  B4D8               	btfsc	status,2,c
  5493  001C68  D6D6               	goto	l5665
  5494  001C6A  0A01               	xorlw	1	; case 87
  5495  001C6C  B4D8               	btfsc	status,2,c
  5496  001C6E  D6DC               	goto	l5667
  5497  001C70  0A0F               	xorlw	15	; case 88
  5498  001C72  B4D8               	btfsc	status,2,c
  5499  001C74  D6E2               	goto	l5669
  5500  001C76  0A01               	xorlw	1	; case 89
  5501  001C78  B4D8               	btfsc	status,2,c
  5502  001C7A  D6E8               	goto	l5671
  5503  001C7C  0A03               	xorlw	3	; case 90
  5504  001C7E  B4D8               	btfsc	status,2,c
  5505  001C80  D6EE               	goto	l5673
  5506  001C82                     l5711:
  5507                           
  5508                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  5509  001C82  EC2F  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5510  001C86  0012               	return		;funcret
  5511  001C88                     __end_of_util_transmit_letter:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           postinc0	equ	0xFEE
  5518                           wreg	equ	0xFE8
  5519                           postdec1	equ	0xFE5
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _util_transmit_space_between_words *****************
  5529 ;; Defined at:
  5530 ;;		line 304 in file "easat2_util_transmission.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5544 ;;      Params:         0       0       0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0
  5547 ;;      Totals:         0       0       0       0       0       0       0
  5548 ;;Total ram usage:        0 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    4
  5551 ;; This function calls:
  5552 ;;		_util_waits_delay_ms
  5553 ;; This function is called by:
  5554 ;;		_util_transmit_letter
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text19
  5559  003C4E                     __ptext19:
  5560                           	opt stack 0
  5561  003C4E                     _util_transmit_space_between_words:
  5562                           	opt stack 23
  5563                           
  5564                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  5565                           
  5566                           ;incstack = 0
  5567  003C4E  0E02               	movlw	2
  5568  003C50  0100               	movlb	0	; () banked
  5569  003C52  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5570  003C54  0E0D               	movlw	13
  5571  003C56  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5572  003C58  EC97  F01D         	call	_util_waits_delay_ms	;wreg free
  5573  003C5C  0012               	return		;funcret
  5574  003C5E                     __end_of_util_transmit_space_between_words:
  5575                           	opt stack 0
  5576                           tblptru	equ	0xFF8
  5577                           tblptrh	equ	0xFF7
  5578                           tblptrl	equ	0xFF6
  5579                           tablat	equ	0xFF5
  5580                           postinc0	equ	0xFEE
  5581                           wreg	equ	0xFE8
  5582                           postdec1	equ	0xFE5
  5583                           fsr1l	equ	0xFE1
  5584                           indf2	equ	0xFDF
  5585                           postinc2	equ	0xFDE
  5586                           postdec2	equ	0xFDD
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function _util_transmit_space_between_letters *****************
  5592 ;; Defined at:
  5593 ;;		line 297 in file "easat2_util_transmission.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5607 ;;      Params:         0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    4
  5614 ;; This function calls:
  5615 ;;		_util_waits_delay_ms
  5616 ;; This function is called by:
  5617 ;;		_util_transmit_letter
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text20
  5622  003C5E                     __ptext20:
  5623                           	opt stack 0
  5624  003C5E                     _util_transmit_space_between_letters:
  5625                           	opt stack 23
  5626                           
  5627                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  5628                           
  5629                           ;incstack = 0
  5630  003C5E  0E00               	movlw	0
  5631  003C60  0100               	movlb	0	; () banked
  5632  003C62  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5633  003C64  0EE1               	movlw	225
  5634  003C66  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5635  003C68  EC97  F01D         	call	_util_waits_delay_ms	;wreg free
  5636  003C6C  0012               	return		;funcret
  5637  003C6E                     __end_of_util_transmit_space_between_letters:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           postdec1	equ	0xFE5
  5646                           fsr1l	equ	0xFE1
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _util_transmit_morse_sequence *****************
  5655 ;; Defined at:
  5656 ;;		line 201 in file "easat2_util_transmission.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  morse_sequen    2   19[BANK0 ] PTR unsigned char 
  5659 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5660 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5661 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5662 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5663 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5664 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5665 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5666 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5667 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5668 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5669 ;;		 -> STR_3(3), 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  i               2   40[COMRAM] int 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5681 ;;      Params:         0       2       0       0       0       0       0
  5682 ;;      Locals:         2       0       0       0       0       0       0
  5683 ;;      Temps:          2       0       0       0       0       0       0
  5684 ;;      Totals:         4       2       0       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    6
  5688 ;; This function calls:
  5689 ;;		_strlen
  5690 ;;		_util_transmit_dash
  5691 ;;		_util_transmit_dot
  5692 ;;		_util_transmit_space_between_dots_dashes
  5693 ;; This function is called by:
  5694 ;;		_util_transmit_letter
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text21
  5699  0036EC                     __ptext21:
  5700                           	opt stack 0
  5701  0036EC                     _util_transmit_morse_sequence:
  5702                           	opt stack 21
  5703                           
  5704                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5705                           
  5706                           ;incstack = 0
  5707  0036EC  0E00               	movlw	0
  5708  0036EE  6E2A               	movwf	util_transmit_morse_sequence@i+1,c
  5709  0036F0  0E00               	movlw	0
  5710  0036F2  6E29               	movwf	util_transmit_morse_sequence@i,c
  5711  0036F4  D01E               	goto	l4943
  5712  0036F6                     l4931:
  5713                           
  5714                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5715  0036F6  ECFF  F01C         	call	_util_transmit_dot	;wreg free
  5716                           
  5717                           ;easat2_util_transmission.c: 211: break;
  5718  0036FA  D017               	goto	l4939
  5719  0036FC                     l4933:
  5720                           
  5721                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5722  0036FC  EC19  F01D         	call	_util_transmit_dash	;wreg free
  5723                           
  5724                           ;easat2_util_transmission.c: 217: }
  5725                           
  5726                           ;easat2_util_transmission.c: 216: break;
  5727                           
  5728                           ;easat2_util_transmission.c: 215: default:
  5729                           
  5730                           ;easat2_util_transmission.c: 214: break;
  5731  003700  D014               	goto	l4939
  5732  003702                     l4937:
  5733  003702  5029               	movf	util_transmit_morse_sequence@i,w,c
  5734  003704  0100               	movlb	0	; () banked
  5735  003706  2573               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5736  003708  6E27               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5737  00370A  502A               	movf	util_transmit_morse_sequence@i+1,w,c
  5738  00370C  0100               	movlb	0	; () banked
  5739  00370E  2174               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5740  003710  6E28               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5741  003712  C027  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5742  003716  C028  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5743  00371A                     	if	0	;tblptru may be non-zero
  5744  00371A                     	endif
  5745  00371A                     	if	0	;tblptru may be non-zero
  5746  00371A                     	endif
  5747  00371A  0008               	tblrd		*
  5748  00371C  50F5               	movf	tablat,w,c
  5749                           
  5750                           ; Switch size 1, requested type "space"
  5751                           ; Number of cases is 2, Range of values is 45 to 46
  5752                           ; switch strategies available:
  5753                           ; Name         Instructions Cycles
  5754                           ; simple_byte            7     4 (average)
  5755                           ;	Chosen strategy is simple_byte
  5756  00371E  0A2D               	xorlw	45	; case 45
  5757  003720  B4D8               	btfsc	status,2,c
  5758  003722  D7EC               	goto	l4933
  5759  003724  0A03               	xorlw	3	; case 46
  5760  003726  B4D8               	btfsc	status,2,c
  5761  003728  D7E6               	goto	l4931
  5762  00372A                     l4939:
  5763                           
  5764                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5765  00372A  EC37  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5766  00372E  4A29               	infsnz	util_transmit_morse_sequence@i,f,c
  5767  003730  2A2A               	incf	util_transmit_morse_sequence@i+1,f,c
  5768  003732                     l4943:
  5769  003732  C073  F071         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5770  003736  C074  F072         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5771  00373A  ECA8  F01B         	call	_strlen	;wreg free
  5772  00373E  0100               	movlb	0	; () banked
  5773  003740  5171               	movf	?_strlen& (0+255),w,b
  5774  003742  5C29               	subwf	util_transmit_morse_sequence@i,w,c
  5775  003744  0100               	movlb	0	; () banked
  5776  003746  5172               	movf	(?_strlen+1)& (0+255),w,b
  5777  003748  582A               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5778  00374A  B0D8               	btfsc	status,0,c
  5779  00374C  0012               	return	
  5780  00374E  D7D9               	goto	l4937
  5781  003750                     __end_of_util_transmit_morse_sequence:
  5782                           	opt stack 0
  5783                           tblptru	equ	0xFF8
  5784                           tblptrh	equ	0xFF7
  5785                           tblptrl	equ	0xFF6
  5786                           tablat	equ	0xFF5
  5787                           postinc0	equ	0xFEE
  5788                           wreg	equ	0xFE8
  5789                           postdec1	equ	0xFE5
  5790                           fsr1l	equ	0xFE1
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5799 ;; Defined at:
  5800 ;;		line 289 in file "easat2_util_transmission.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;		None
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      void 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5814 ;;      Params:         0       0       0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    4
  5821 ;; This function calls:
  5822 ;;		_util_waits_delay_ms
  5823 ;; This function is called by:
  5824 ;;		_util_transmit_morse_sequence
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text22
  5829  003C6E                     __ptext22:
  5830                           	opt stack 0
  5831  003C6E                     _util_transmit_space_between_dots_dashes:
  5832                           	opt stack 22
  5833                           
  5834                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;incstack = 0
  5838  003C6E  0E00               	movlw	0
  5839  003C70  0100               	movlb	0	; () banked
  5840  003C72  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5841  003C74  0E4B               	movlw	75
  5842  003C76  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5843  003C78  EC97  F01D         	call	_util_waits_delay_ms	;wreg free
  5844  003C7C  0012               	return		;funcret
  5845  003C7E                     __end_of_util_transmit_space_between_dots_dashes:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           postinc0	equ	0xFEE
  5852                           wreg	equ	0xFE8
  5853                           postdec1	equ	0xFE5
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _util_transmit_dot *****************
  5863 ;; Defined at:
  5864 ;;		line 231 in file "easat2_util_transmission.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  i               2   36[COMRAM] int 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5878 ;;      Params:         0       0       0       0       0       0       0
  5879 ;;      Locals:         2       0       0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0
  5881 ;;      Totals:         2       0       0       0       0       0       0
  5882 ;;Total ram usage:        2 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    5
  5885 ;; This function calls:
  5886 ;;		_util_transmit_buzzer_1ms_cycle
  5887 ;;		_util_waits_delay_ms
  5888 ;; This function is called by:
  5889 ;;		_util_transmit_morse_sequence
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text23
  5894  0039FE                     __ptext23:
  5895                           	opt stack 0
  5896  0039FE                     _util_transmit_dot:
  5897                           	opt stack 21
  5898                           
  5899                           ;easat2_util_transmission.c: 235: PORTDbits.RD1 = 1;
  5900                           
  5901                           ;incstack = 0
  5902  0039FE  8283               	bsf	3971,1,c	;volatile
  5903                           
  5904                           ;easat2_util_transmission.c: 236: PORTDbits.RD3 = 1;
  5905  003A00  8683               	bsf	3971,3,c	;volatile
  5906                           
  5907                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5908  003A02  0E00               	movlw	0
  5909  003A04  6E26               	movwf	util_transmit_dot@i+1,c
  5910  003A06  0E00               	movlw	0
  5911  003A08  6E25               	movwf	util_transmit_dot@i,c
  5912  003A0A  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5913  003A0C  D006               	goto	l4649
  5914  003A0E  5026               	movf	util_transmit_dot@i+1,w,c
  5915  003A10  E10D               	bnz	l326
  5916  003A12  0E4B               	movlw	75
  5917  003A14  5C25               	subwf	util_transmit_dot@i,w,c
  5918  003A16  B0D8               	btfsc	status,0,c
  5919  003A18  D009               	goto	l326
  5920  003A1A                     l4649:
  5921                           
  5922                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5923  003A1A  EC07  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5924                           
  5925                           ;easat2_util_transmission.c: 246: else
  5926                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5927  003A1E  4A25               	infsnz	util_transmit_dot@i,f,c
  5928  003A20  2A26               	incf	util_transmit_dot@i+1,f,c
  5929  003A22  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5930  003A24  D7FA               	goto	l4649
  5931  003A26  5026               	movf	util_transmit_dot@i+1,w,c
  5932  003A28  E101               	bnz	u4540
  5933  003A2A  D7F3               	goto	L2
  5934  003A2C                     u4540:
  5935  003A2C                     l326:
  5936                           
  5937                           ;easat2_util_transmission.c: 249: }
  5938                           ;easat2_util_transmission.c: 251: PORTDbits.RD1 = 0;
  5939  003A2C  9283               	bcf	3971,1,c	;volatile
  5940                           
  5941                           ;easat2_util_transmission.c: 252: PORTDbits.RD3 = 0;
  5942  003A2E  9683               	bcf	3971,3,c	;volatile
  5943  003A30  0012               	return		;funcret
  5944  003A32                     __end_of_util_transmit_dot:
  5945                           	opt stack 0
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           postinc0	equ	0xFEE
  5951                           wreg	equ	0xFE8
  5952                           postdec1	equ	0xFE5
  5953                           fsr1l	equ	0xFE1
  5954                           indf2	equ	0xFDF
  5955                           postinc2	equ	0xFDE
  5956                           postdec2	equ	0xFDD
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _util_transmit_dash *****************
  5962 ;; Defined at:
  5963 ;;		line 262 in file "easat2_util_transmission.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  i               2   36[COMRAM] int 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5977 ;;      Params:         0       0       0       0       0       0       0
  5978 ;;      Locals:         2       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0
  5980 ;;      Totals:         2       0       0       0       0       0       0
  5981 ;;Total ram usage:        2 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    5
  5984 ;; This function calls:
  5985 ;;		_util_transmit_buzzer_1ms_cycle
  5986 ;;		_util_waits_delay_ms
  5987 ;; This function is called by:
  5988 ;;		_util_transmit_morse_sequence
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text24
  5993  003A32                     __ptext24:
  5994                           	opt stack 0
  5995  003A32                     _util_transmit_dash:
  5996                           	opt stack 21
  5997                           
  5998                           ;easat2_util_transmission.c: 266: PORTDbits.RD1 = 1;
  5999                           
  6000                           ;incstack = 0
  6001  003A32  8283               	bsf	3971,1,c	;volatile
  6002                           
  6003                           ;easat2_util_transmission.c: 267: PORTDbits.RD3 = 1;
  6004  003A34  8683               	bsf	3971,3,c	;volatile
  6005                           
  6006                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  6007  003A36  0E00               	movlw	0
  6008  003A38  6E26               	movwf	util_transmit_dash@i+1,c
  6009  003A3A  0E00               	movlw	0
  6010  003A3C  6E25               	movwf	util_transmit_dash@i,c
  6011  003A3E  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6012  003A40  D006               	goto	l4665
  6013  003A42  5026               	movf	util_transmit_dash@i+1,w,c
  6014  003A44  E10D               	bnz	l333
  6015  003A46  0EE1               	movlw	225
  6016  003A48  5C25               	subwf	util_transmit_dash@i,w,c
  6017  003A4A  B0D8               	btfsc	status,0,c
  6018  003A4C  D009               	goto	l333
  6019  003A4E                     l4665:
  6020                           
  6021                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  6022  003A4E  EC07  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  6023                           
  6024                           ;easat2_util_transmission.c: 277: else
  6025                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  6026  003A52  4A25               	infsnz	util_transmit_dash@i,f,c
  6027  003A54  2A26               	incf	util_transmit_dash@i+1,f,c
  6028  003A56  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6029  003A58  D7FA               	goto	l4665
  6030  003A5A  5026               	movf	util_transmit_dash@i+1,w,c
  6031  003A5C  E101               	bnz	u4560
  6032  003A5E  D7F3               	goto	L3
  6033  003A60                     u4560:
  6034  003A60                     l333:
  6035                           
  6036                           ;easat2_util_transmission.c: 280: }
  6037                           ;easat2_util_transmission.c: 282: PORTDbits.RD1 = 0;
  6038  003A60  9283               	bcf	3971,1,c	;volatile
  6039                           
  6040                           ;easat2_util_transmission.c: 283: PORTDbits.RD3 = 0;
  6041  003A62  9683               	bcf	3971,3,c	;volatile
  6042  003A64  0012               	return		;funcret
  6043  003A66                     __end_of_util_transmit_dash:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           postinc0	equ	0xFEE
  6050                           wreg	equ	0xFE8
  6051                           postdec1	equ	0xFE5
  6052                           fsr1l	equ	0xFE1
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _util_waits_delay_ms *****************
  6061 ;; Defined at:
  6062 ;;		line 40 in file "easat2_util_waits.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  ms              2   17[BANK0 ] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  i               2   34[COMRAM] int 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6076 ;;      Params:         0       2       0       0       0       0       0
  6077 ;;      Locals:         2       0       0       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0       0       0
  6079 ;;      Totals:         3       2       0       0       0       0       0
  6080 ;;Total ram usage:        5 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    3
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_util_transmit_dot
  6087 ;;		_util_transmit_dash
  6088 ;;		_util_transmit_space_between_dots_dashes
  6089 ;;		_util_transmit_space_between_letters
  6090 ;;		_util_transmit_space_between_words
  6091 ;;		_util_waits_delay_secs
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text25
  6096  003B2E                     __ptext25:
  6097                           	opt stack 0
  6098  003B2E                     _util_waits_delay_ms:
  6099                           	opt stack 24
  6100                           
  6101                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6102                           
  6103                           ;incstack = 0
  6104  003B2E  0E00               	movlw	0
  6105  003B30  6E24               	movwf	util_waits_delay_ms@i+1,c
  6106  003B32  0E00               	movlw	0
  6107  003B34  6E23               	movwf	util_waits_delay_ms@i,c
  6108  003B36  D006               	goto	l379
  6109  003B38                     l4591:
  6110                           
  6111                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6112  003B38  0EA6               	movlw	166
  6113  003B3A                     u6417:
  6114  003B3A  2EE8               	decfsz	wreg,f,c
  6115  003B3C  D7FE               	bra	u6417
  6116  003B3E  D000               	nop2	
  6117  003B40  4A23               	infsnz	util_waits_delay_ms@i,f,c
  6118  003B42  2A24               	incf	util_waits_delay_ms@i+1,f,c
  6119  003B44                     l379:
  6120  003B44  0100               	movlb	0	; () banked
  6121  003B46  5171               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6122  003B48  5C23               	subwf	util_waits_delay_ms@i,w,c
  6123  003B4A  5024               	movf	util_waits_delay_ms@i+1,w,c
  6124  003B4C  0A80               	xorlw	128
  6125  003B4E  6E22               	movwf	??_util_waits_delay_ms& (0+255),c
  6126  003B50  0100               	movlb	0	; () banked
  6127  003B52  5172               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6128  003B54  0A80               	xorlw	128
  6129  003B56  5822               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6130  003B58  B0D8               	btfsc	status,0,c
  6131  003B5A  0012               	return	
  6132  003B5C  D7ED               	goto	l4591
  6133  003B5E                     __end_of_util_waits_delay_ms:
  6134                           	opt stack 0
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           postinc0	equ	0xFEE
  6140                           wreg	equ	0xFE8
  6141                           postdec1	equ	0xFE5
  6142                           fsr1l	equ	0xFE1
  6143                           indf2	equ	0xFDF
  6144                           postinc2	equ	0xFDE
  6145                           postdec2	equ	0xFDD
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  6151 ;; Defined at:
  6152 ;;		line 310 in file "easat2_util_transmission.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6166 ;;      Params:         0       0       0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    4
  6173 ;; This function calls:
  6174 ;;		_util_waits_delay_hundred_us
  6175 ;; This function is called by:
  6176 ;;		_util_transmit_dot
  6177 ;;		_util_transmit_dash
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text26
  6182  003C0E                     __ptext26:
  6183                           	opt stack 0
  6184  003C0E                     _util_transmit_buzzer_1ms_cycle:
  6185                           	opt stack 21
  6186                           
  6187                           ;easat2_util_transmission.c: 312: PORTDbits.RD2 = 1;
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;incstack = 0
  6191  003C0E  8483               	bsf	3971,2,c	;volatile
  6192                           
  6193                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  6194  003C10  0E00               	movlw	0
  6195  003C12  0100               	movlb	0	; () banked
  6196  003C14  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6197  003C16  0E05               	movlw	5
  6198  003C18  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6199  003C1A  ECAF  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6200                           
  6201                           ;easat2_util_transmission.c: 314: PORTDbits.RD2 = 0;
  6202  003C1E  9483               	bcf	3971,2,c	;volatile
  6203                           
  6204                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  6205  003C20  0E00               	movlw	0
  6206  003C22  0100               	movlb	0	; () banked
  6207  003C24  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6208  003C26  0E05               	movlw	5
  6209  003C28  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6210  003C2A  ECAF  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6211  003C2E  0012               	return		;funcret
  6212  003C30                     __end_of_util_transmit_buzzer_1ms_cycle:
  6213                           	opt stack 0
  6214                           tblptru	equ	0xFF8
  6215                           tblptrh	equ	0xFF7
  6216                           tblptrl	equ	0xFF6
  6217                           tablat	equ	0xFF5
  6218                           postinc0	equ	0xFEE
  6219                           wreg	equ	0xFE8
  6220                           postdec1	equ	0xFE5
  6221                           fsr1l	equ	0xFE1
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function _util_waits_delay_hundred_us *****************
  6230 ;; Defined at:
  6231 ;;		line 47 in file "easat2_util_waits.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  hun_us          2   17[BANK0 ] int 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  i               2   34[COMRAM] int 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6245 ;;      Params:         0       2       0       0       0       0       0
  6246 ;;      Locals:         2       0       0       0       0       0       0
  6247 ;;      Temps:          1       0       0       0       0       0       0
  6248 ;;      Totals:         3       2       0       0       0       0       0
  6249 ;;Total ram usage:        5 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    3
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_util_transmit_buzzer_1ms_cycle
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text27
  6260  003B5E                     __ptext27:
  6261                           	opt stack 0
  6262  003B5E                     _util_waits_delay_hundred_us:
  6263                           	opt stack 21
  6264                           
  6265                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  6266                           
  6267                           ;incstack = 0
  6268  003B5E  0E00               	movlw	0
  6269  003B60  6E24               	movwf	util_waits_delay_hundred_us@i+1,c
  6270  003B62  0E00               	movlw	0
  6271  003B64  6E23               	movwf	util_waits_delay_hundred_us@i,c
  6272  003B66  D006               	goto	l385
  6273  003B68                     l4579:
  6274                           
  6275                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  6276  003B68  0E10               	movlw	16
  6277  003B6A                     u6427:
  6278  003B6A  2EE8               	decfsz	wreg,f,c
  6279  003B6C  D7FE               	bra	u6427
  6280  003B6E  D000               	nop2	
  6281  003B70  4A23               	infsnz	util_waits_delay_hundred_us@i,f,c
  6282  003B72  2A24               	incf	util_waits_delay_hundred_us@i+1,f,c
  6283  003B74                     l385:
  6284  003B74  0100               	movlb	0	; () banked
  6285  003B76  5171               	movf	util_waits_delay_hundred_us@hun_us& (0+255),w,b
  6286  003B78  5C23               	subwf	util_waits_delay_hundred_us@i,w,c
  6287  003B7A  5024               	movf	util_waits_delay_hundred_us@i+1,w,c
  6288  003B7C  0A80               	xorlw	128
  6289  003B7E  6E22               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  6290  003B80  0100               	movlb	0	; () banked
  6291  003B82  5172               	movf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),w,b
  6292  003B84  0A80               	xorlw	128
  6293  003B86  5822               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  6294  003B88  B0D8               	btfsc	status,0,c
  6295  003B8A  0012               	return	
  6296  003B8C  D7ED               	goto	l4579
  6297  003B8E                     __end_of_util_waits_delay_hundred_us:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           postinc0	equ	0xFEE
  6304                           wreg	equ	0xFE8
  6305                           postdec1	equ	0xFE5
  6306                           fsr1l	equ	0xFE1
  6307                           indf2	equ	0xFDF
  6308                           postinc2	equ	0xFDE
  6309                           postdec2	equ	0xFDD
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314 ;; *************** function _strlen *****************
  6315 ;; Defined at:
  6316 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  6319 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6320 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6321 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6322 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6323 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6324 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6325 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6326 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6327 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6328 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6329 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  cp              2   35[COMRAM] PTR const unsigned char 
  6332 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6333 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6334 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6335 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6336 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6337 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6338 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6339 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6340 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6341 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6342 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  2   17[BANK0 ] unsigned int 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6352 ;;      Params:         0       2       0       0       0       0       0
  6353 ;;      Locals:         2       0       0       0       0       0       0
  6354 ;;      Temps:          2       0       0       0       0       0       0
  6355 ;;      Totals:         4       2       0       0       0       0       0
  6356 ;;Total ram usage:        6 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    3
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_util_beacon_transmission
  6363 ;;		_util_transmit_morse_sequence
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text28
  6368  003750                     __ptext28:
  6369                           	opt stack 0
  6370  003750                     _strlen:
  6371                           	opt stack 23
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;incstack = 0
  6375  003750  C071  F024         	movff	strlen@s,strlen@cp
  6376  003754  C072  F025         	movff	strlen@s+1,strlen@cp+1
  6377  003758  D002               	goto	l4635
  6378  00375A                     l4633:
  6379  00375A  4A24               	infsnz	strlen@cp,f,c
  6380  00375C  2A25               	incf	strlen@cp+1,f,c
  6381  00375E                     l4635:
  6382  00375E  C024  FFF6         	movff	strlen@cp,tblptrl
  6383  003762  C025  FFF7         	movff	strlen@cp+1,tblptrh
  6384  003766  6AF8               	clrf	tblptru,c
  6385  003768  0E05               	movlw	(high __ramtop+-1)
  6386  00376A  64F7               	cpfsgt	tblptrh,c
  6387  00376C  D003               	bra	u4517
  6388  00376E  0008               	tblrd		*
  6389  003770  50F5               	movf	tablat,w,c
  6390  003772  D005               	bra	u4510
  6391  003774                     u4517:
  6392  003774  CFF6 FFE9          	movff	tblptrl,fsr0l
  6393  003778  CFF7 FFEA          	movff	tblptrh,fsr0h
  6394  00377C  50EF               	movf	indf0,w,c
  6395  00377E                     u4510:
  6396  00377E  0900               	iorlw	0
  6397  003780  A4D8               	btfss	status,2,c
  6398  003782  D7EB               	goto	l4633
  6399  003784  C071  F022         	movff	strlen@s,??_strlen
  6400  003788  C072  F023         	movff	strlen@s+1,??_strlen+1
  6401  00378C  1E22               	comf	??_strlen,f,c
  6402  00378E  1E23               	comf	??_strlen+1,f,c
  6403  003790  4A22               	infsnz	??_strlen,f,c
  6404  003792  2A23               	incf	??_strlen+1,f,c
  6405  003794  5024               	movf	strlen@cp,w,c
  6406  003796  2422               	addwf	??_strlen,w,c
  6407  003798  0100               	movlb	0	; () banked
  6408  00379A  6F71               	movwf	?_strlen& (0+255),b
  6409  00379C  5025               	movf	strlen@cp+1,w,c
  6410  00379E  2023               	addwfc	??_strlen+1,w,c
  6411  0037A0  0100               	movlb	0	; () banked
  6412  0037A2  6F72               	movwf	(?_strlen+1)& (0+255),b
  6413  0037A4  0012               	return	
  6414  0037A6                     __end_of_strlen:
  6415                           	opt stack 0
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           indf0	equ	0xFEF
  6421                           postinc0	equ	0xFEE
  6422                           fsr0h	equ	0xFEA
  6423                           fsr0l	equ	0xFE9
  6424                           wreg	equ	0xFE8
  6425                           postdec1	equ	0xFE5
  6426                           fsr1l	equ	0xFE1
  6427                           indf2	equ	0xFDF
  6428                           postinc2	equ	0xFDE
  6429                           postdec2	equ	0xFDD
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _strcpy *****************
  6435 ;; Defined at:
  6436 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6439 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6440 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6441 ;;		 -> STR_1(7), 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6444 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  2   17[BANK0 ] PTR unsigned char 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6454 ;;      Params:         0       4       0       0       0       0       0
  6455 ;;      Locals:         2       0       0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0
  6457 ;;      Totals:         2       4       0       0       0       0       0
  6458 ;;Total ram usage:        6 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    3
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_util_beacon_transmission
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text29
  6469  003A98                     __ptext29:
  6470                           	opt stack 0
  6471  003A98                     _strcpy:
  6472                           	opt stack 25
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;incstack = 0
  6476  003A98  C071  F022         	movff	strcpy@to,strcpy@cp
  6477  003A9C  C072  F023         	movff	strcpy@to+1,strcpy@cp+1
  6478  003AA0  D005               	goto	l5315
  6479  003AA2                     l5313:
  6480  003AA2  4A22               	infsnz	strcpy@cp,f,c
  6481  003AA4  2A23               	incf	strcpy@cp+1,f,c
  6482  003AA6  0100               	movlb	0	; () banked
  6483  003AA8  4B73               	infsnz	strcpy@from& (0+255),f,b
  6484  003AAA  2B74               	incf	(strcpy@from+1)& (0+255),f,b
  6485  003AAC                     l5315:
  6486  003AAC  C073  FFF6         	movff	strcpy@from,tblptrl
  6487  003AB0  C074  FFF7         	movff	strcpy@from+1,tblptrh
  6488  003AB4                     	if	0	;tblptru may be non-zero
  6489  003AB4                     	endif
  6490  003AB4                     	if	0	;tblptru may be non-zero
  6491  003AB4                     	endif
  6492  003AB4  C022  FFD9         	movff	strcpy@cp,fsr2l
  6493  003AB8  C023  FFDA         	movff	strcpy@cp+1,fsr2h
  6494  003ABC  0008               	tblrd		*
  6495  003ABE  CFF5 FFDF          	movff	tablat,indf2
  6496  003AC2  50DF               	movf	indf2,w,c
  6497  003AC4  B4D8               	btfsc	status,2,c
  6498  003AC6  0012               	return	
  6499  003AC8  D7EC               	goto	l5313
  6500  003ACA                     __end_of_strcpy:
  6501                           	opt stack 0
  6502                           tblptru	equ	0xFF8
  6503                           tblptrh	equ	0xFF7
  6504                           tblptrl	equ	0xFF6
  6505                           tablat	equ	0xFF5
  6506                           indf0	equ	0xFEF
  6507                           postinc0	equ	0xFEE
  6508                           fsr0h	equ	0xFEA
  6509                           fsr0l	equ	0xFE9
  6510                           wreg	equ	0xFE8
  6511                           postdec1	equ	0xFE5
  6512                           fsr1l	equ	0xFE1
  6513                           indf2	equ	0xFDF
  6514                           postinc2	equ	0xFDE
  6515                           postdec2	equ	0xFDD
  6516                           fsr2h	equ	0xFDA
  6517                           fsr2l	equ	0xFD9
  6518                           status	equ	0xFD8
  6519                           
  6520 ;; *************** function _strcat *****************
  6521 ;; Defined at:
  6522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6525 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6526 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6527 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6530 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2   17[BANK0 ] PTR unsigned char 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6540 ;;      Params:         0       4       0       0       0       0       0
  6541 ;;      Locals:         2       0       0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0
  6543 ;;      Totals:         2       4       0       0       0       0       0
  6544 ;;Total ram usage:        6 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    3
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_util_beacon_transmission
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text30
  6555  00388C                     __ptext30:
  6556                           	opt stack 0
  6557  00388C                     _strcat:
  6558                           	opt stack 25
  6559                           
  6560                           ;incstack = 0
  6561  00388C  C071  F022         	movff	strcat@to,strcat@cp
  6562  003890  C072  F023         	movff	strcat@to+1,strcat@cp+1
  6563  003894  D002               	goto	l5615
  6564  003896                     l5613:
  6565  003896  4A22               	infsnz	strcat@cp,f,c
  6566  003898  2A23               	incf	strcat@cp+1,f,c
  6567  00389A                     l5615:
  6568  00389A  C022  FFD9         	movff	strcat@cp,fsr2l
  6569  00389E  C023  FFDA         	movff	strcat@cp+1,fsr2h
  6570  0038A2  50DF               	movf	indf2,w,c
  6571  0038A4  B4D8               	btfsc	status,2,c
  6572  0038A6  D006               	goto	l5619
  6573  0038A8  D7F6               	goto	l5613
  6574  0038AA                     l5617:
  6575  0038AA  4A22               	infsnz	strcat@cp,f,c
  6576  0038AC  2A23               	incf	strcat@cp+1,f,c
  6577  0038AE  0100               	movlb	0	; () banked
  6578  0038B0  4B73               	infsnz	strcat@from& (0+255),f,b
  6579  0038B2  2B74               	incf	(strcat@from+1)& (0+255),f,b
  6580  0038B4                     l5619:
  6581  0038B4  C073  FFD9         	movff	strcat@from,fsr2l
  6582  0038B8  C074  FFDA         	movff	strcat@from+1,fsr2h
  6583  0038BC  C022  FFE1         	movff	strcat@cp,fsr1l
  6584  0038C0  C023  FFE2         	movff	strcat@cp+1,fsr1h
  6585  0038C4  CFDF FFE7          	movff	indf2,indf1
  6586  0038C8  50E7               	movf	indf1,w,c
  6587  0038CA  B4D8               	btfsc	status,2,c
  6588  0038CC  0012               	return	
  6589  0038CE  D7ED               	goto	l5617
  6590  0038D0                     __end_of_strcat:
  6591                           	opt stack 0
  6592                           tblptru	equ	0xFF8
  6593                           tblptrh	equ	0xFF7
  6594                           tblptrl	equ	0xFF6
  6595                           tablat	equ	0xFF5
  6596                           indf0	equ	0xFEF
  6597                           postinc0	equ	0xFEE
  6598                           fsr0h	equ	0xFEA
  6599                           fsr0l	equ	0xFE9
  6600                           wreg	equ	0xFE8
  6601                           indf1	equ	0xFE7
  6602                           postdec1	equ	0xFE5
  6603                           fsr1h	equ	0xFE2
  6604                           fsr1l	equ	0xFE1
  6605                           indf2	equ	0xFDF
  6606                           postinc2	equ	0xFDE
  6607                           postdec2	equ	0xFDD
  6608                           fsr2h	equ	0xFDA
  6609                           fsr2l	equ	0xFD9
  6610                           status	equ	0xFD8
  6611                           
  6612 ;; *************** function _sprintf *****************
  6613 ;; Defined at:
  6614 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  sp              2   69[BANK0 ] PTR unsigned char 
  6617 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6618 ;;  f               2   71[BANK0 ] PTR const unsigned char 
  6619 ;;		 -> STR_2(23), 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  val             4  102[BANK0 ] unsigned long 
  6622 ;;  tmpval          4   98[BANK0 ] struct .
  6623 ;;  fval            3  108[BANK0 ] struct .
  6624 ;;  cp              3    0        PTR const unsigned char 
  6625 ;;  prec            2  111[BANK0 ] int 
  6626 ;;  exp             2  106[BANK0 ] int 
  6627 ;;  width           2   96[BANK0 ] int 
  6628 ;;  flag            2   94[BANK0 ] unsigned short 
  6629 ;;  ap              2   92[BANK0 ] PTR void [1]
  6630 ;;		 -> ?_sprintf(2), 
  6631 ;;  len             2    0        unsigned int 
  6632 ;;  c               1  113[BANK0 ] char 
  6633 ;;  d               1    0        unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  2   69[BANK0 ] int 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6643 ;;      Params:         0      14       0       0       0       0       0
  6644 ;;      Locals:         0      25       0       0       0       0       0
  6645 ;;      Temps:          0       6       0       0       0       0       0
  6646 ;;      Totals:         0      45       0       0       0       0       0
  6647 ;;Total ram usage:       45 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    6
  6650 ;; This function calls:
  6651 ;;		___awdiv
  6652 ;;		___ftadd
  6653 ;;		___ftge
  6654 ;;		___ftmul
  6655 ;;		___ftneg
  6656 ;;		___ftsub
  6657 ;;		___fttol
  6658 ;;		___lldiv
  6659 ;;		___llmod
  6660 ;;		___lltoft
  6661 ;;		___wmul
  6662 ;;		__div_to_l_
  6663 ;;		__tdiv_to_l_
  6664 ;;		_fround
  6665 ;;		_isdigit
  6666 ;;		_scale
  6667 ;; This function is called by:
  6668 ;;		_util_beacon_transmission
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text31
  6673  0000AA                     __ptext31:
  6674                           	opt stack 0
  6675  0000AA                     _sprintf:
  6676                           	opt stack 22
  6677                           
  6678                           ;doprnt.c: 494: va_list ap;
  6679                           ;doprnt.c: 499: signed char c;
  6680                           ;doprnt.c: 501: int width;
  6681                           ;doprnt.c: 504: int prec;
  6682                           ;doprnt.c: 508: unsigned short flag;
  6683                           ;doprnt.c: 515: char d;
  6684                           ;doprnt.c: 516: double fval;
  6685                           ;doprnt.c: 517: int exp;
  6686                           ;doprnt.c: 523: union {
  6687                           ;doprnt.c: 524: unsigned long vd;
  6688                           ;doprnt.c: 525: double integ;
  6689                           ;doprnt.c: 526: } tmpval;
  6690                           ;doprnt.c: 528: unsigned long val;
  6691                           ;doprnt.c: 529: unsigned len;
  6692                           ;doprnt.c: 530: const char * cp;
  6693                           ;doprnt.c: 533: *ap = __va_start();
  6694                           
  6695                           ;incstack = 0
  6696  0000AA  0EA9               	movlw	low (?_sprintf+4)
  6697  0000AC  0100               	movlb	0	; () banked
  6698  0000AE  6FBC               	movwf	sprintf@ap& (0+255),b
  6699  0000B0  0E00               	movlw	high (?_sprintf+4)
  6700  0000B2  0100               	movlb	0	; () banked
  6701  0000B4  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6702                           
  6703                           ;doprnt.c: 536: while(c = *f++) {
  6704  0000B6  EF0E  F006         	goto	l5605
  6705  0000BA                     l5319:
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;doprnt.c: 538: if(c != '%')
  6709  0000BA  0E25               	movlw	37
  6710  0000BC  0100               	movlb	0	; () banked
  6711  0000BE  19D1               	xorwf	sprintf@c& (0+255),w,b
  6712  0000C0  B4D8               	btfsc	status,2,c
  6713  0000C2  D00B               	goto	l5325
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;doprnt.c: 540: {
  6717                           ;doprnt.c: 541: ((*sp++ = (c)));
  6718  0000C4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  6719  0000C8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  6720  0000CC  C0D1  FFDF         	movff	sprintf@c,indf2
  6721                           
  6722                           ; BSR set to: 0
  6723  0000D0  0100               	movlb	0	; () banked
  6724  0000D2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  6725  0000D4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  6726                           
  6727                           ;doprnt.c: 542: continue;
  6728  0000D6  EF0E  F006         	goto	l5605
  6729  0000DA                     l5325:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;doprnt.c: 543: }
  6733                           ;doprnt.c: 546: width = 0;
  6734  0000DA  0E00               	movlw	0
  6735  0000DC  0100               	movlb	0	; () banked
  6736  0000DE  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6737  0000E0  0E00               	movlw	0
  6738  0000E2  6FC0               	movwf	sprintf@width& (0+255),b
  6739                           
  6740                           ;doprnt.c: 548: flag = 0;
  6741  0000E4  0E00               	movlw	0
  6742  0000E6  0100               	movlb	0	; () banked
  6743  0000E8  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  6744  0000EA  0E00               	movlw	0
  6745  0000EC  6FBE               	movwf	sprintf@flag& (0+255),b
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6749  0000EE  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6750  0000F2  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6751  0000F6                     	if	0	;tblptru may be non-zero
  6752  0000F6                     	endif
  6753  0000F6                     	if	0	;tblptru may be non-zero
  6754  0000F6                     	endif
  6755  0000F6  0008               	tblrd		*
  6756  0000F8  50F5               	movf	tablat,w,c
  6757  0000FA  EC18  F01E         	call	_isdigit
  6758  0000FE  A0D8               	btfss	status,0,c
  6759  000100  D040               	goto	l5339
  6760                           
  6761                           ;doprnt.c: 598: width = 0;
  6762  000102  0E00               	movlw	0
  6763  000104  0100               	movlb	0	; () banked
  6764  000106  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6765  000108  0E00               	movlw	0
  6766  00010A  6FC0               	movwf	sprintf@width& (0+255),b
  6767  00010C                     l5331:
  6768                           
  6769                           ;doprnt.c: 600: width *= 10;
  6770  00010C  C0C0  F079         	movff	sprintf@width,___wmul@multiplier
  6771  000110  C0C1  F07A         	movff	sprintf@width+1,___wmul@multiplier+1
  6772  000114  0E00               	movlw	0
  6773  000116  0100               	movlb	0	; () banked
  6774  000118  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6775  00011A  0E0A               	movlw	10
  6776  00011C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6777  00011E  EC65  F01D         	call	___wmul	;wreg free
  6778  000122  C079  F0C0         	movff	?___wmul,sprintf@width
  6779  000126  C07A  F0C1         	movff	?___wmul+1,sprintf@width+1
  6780                           
  6781                           ;doprnt.c: 601: width += *f++ - '0';
  6782  00012A  0ED0               	movlw	208
  6783  00012C  0100               	movlb	0	; () banked
  6784  00012E  6FB3               	movwf	??_sprintf& (0+255),b
  6785  000130  0EFF               	movlw	255
  6786  000132  0100               	movlb	0	; () banked
  6787  000134  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  6788  000136  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6789  00013A  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6790  00013E                     	if	0	;tblptru may be non-zero
  6791  00013E                     	endif
  6792  00013E                     	if	0	;tblptru may be non-zero
  6793  00013E                     	endif
  6794  00013E  0008               	tblrd		*
  6795  000140  50F5               	movf	tablat,w,c
  6796  000142  0100               	movlb	0	; () banked
  6797  000144  6FB5               	movwf	(??_sprintf+2)& (0+255),b
  6798  000146  6BB6               	clrf	(??_sprintf+3)& (0+255),b
  6799  000148  0100               	movlb	0	; () banked
  6800  00014A  51B3               	movf	??_sprintf& (0+255),w,b
  6801  00014C  0100               	movlb	0	; () banked
  6802  00014E  27B5               	addwf	(??_sprintf+2)& (0+255),f,b
  6803  000150  0100               	movlb	0	; () banked
  6804  000152  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  6805  000154  0100               	movlb	0	; () banked
  6806  000156  23B6               	addwfc	(??_sprintf+3)& (0+255),f,b
  6807  000158  0100               	movlb	0	; () banked
  6808  00015A  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  6809  00015C  0100               	movlb	0	; () banked
  6810  00015E  27C0               	addwf	sprintf@width& (0+255),f,b
  6811  000160  0100               	movlb	0	; () banked
  6812  000162  51B6               	movf	(??_sprintf+3)& (0+255),w,b
  6813  000164  0100               	movlb	0	; () banked
  6814  000166  23C1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 0
  6817  000168  0100               	movlb	0	; () banked
  6818  00016A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6819  00016C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6823  00016E  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6824  000172  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6825  000176                     	if	0	;tblptru may be non-zero
  6826  000176                     	endif
  6827  000176                     	if	0	;tblptru may be non-zero
  6828  000176                     	endif
  6829  000176  0008               	tblrd		*
  6830  000178  50F5               	movf	tablat,w,c
  6831  00017A  EC18  F01E         	call	_isdigit
  6832  00017E  B0D8               	btfsc	status,0,c
  6833  000180  D7C5               	goto	l5331
  6834  000182                     l5339:
  6835                           
  6836                           ;doprnt.c: 608: }
  6837                           ;doprnt.c: 611: if(*f == '.') {
  6838  000182  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6839  000186  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6840  00018A                     	if	0	;tblptru may be non-zero
  6841  00018A                     	endif
  6842  00018A                     	if	0	;tblptru may be non-zero
  6843  00018A                     	endif
  6844  00018A  0008               	tblrd		*
  6845  00018C  50F5               	movf	tablat,w,c
  6846  00018E  0A2E               	xorlw	46
  6847  000190  A4D8               	btfss	status,2,c
  6848  000192  D039               	goto	l5351
  6849                           
  6850                           ;doprnt.c: 612: flag |= 0x4000;
  6851  000194  0100               	movlb	0	; () banked
  6852  000196  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  6853                           
  6854                           ;doprnt.c: 613: f++;
  6855  000198  0100               	movlb	0	; () banked
  6856  00019A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6857  00019C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;doprnt.c: 620: {
  6861                           ;doprnt.c: 621: prec = 0;
  6862  00019E  0E00               	movlw	0
  6863  0001A0  0100               	movlb	0	; () banked
  6864  0001A2  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6865  0001A4  0E00               	movlw	0
  6866  0001A6  6FCF               	movwf	sprintf@prec& (0+255),b
  6867                           
  6868                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6869  0001A8  D023               	goto	l5349
  6870  0001AA                     l5345:
  6871                           
  6872                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6873  0001AA  C0CF  F079         	movff	sprintf@prec,___wmul@multiplier
  6874  0001AE  C0D0  F07A         	movff	sprintf@prec+1,___wmul@multiplier+1
  6875  0001B2  0E00               	movlw	0
  6876  0001B4  0100               	movlb	0	; () banked
  6877  0001B6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6878  0001B8  0E0A               	movlw	10
  6879  0001BA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6880  0001BC  EC65  F01D         	call	___wmul	;wreg free
  6881  0001C0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6882  0001C4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6883  0001C8                     	if	0	;tblptru may be non-zero
  6884  0001C8                     	endif
  6885  0001C8                     	if	0	;tblptru may be non-zero
  6886  0001C8                     	endif
  6887  0001C8  0008               	tblrd		*
  6888  0001CA  50F5               	movf	tablat,w,c
  6889  0001CC  0100               	movlb	0	; () banked
  6890  0001CE  2779               	addwf	?___wmul& (0+255),f,b
  6891  0001D0  0E00               	movlw	0
  6892  0001D2  0100               	movlb	0	; () banked
  6893  0001D4  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  6894  0001D6  0ED0               	movlw	208
  6895  0001D8  0100               	movlb	0	; () banked
  6896  0001DA  2579               	addwf	?___wmul& (0+255),w,b
  6897  0001DC  0100               	movlb	0	; () banked
  6898  0001DE  6FCF               	movwf	sprintf@prec& (0+255),b
  6899  0001E0  0EFF               	movlw	255
  6900  0001E2  0100               	movlb	0	; () banked
  6901  0001E4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  6902  0001E6  0100               	movlb	0	; () banked
  6903  0001E8  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6904                           
  6905                           ; BSR set to: 0
  6906  0001EA  0100               	movlb	0	; () banked
  6907  0001EC  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6908  0001EE  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6909  0001F0                     l5349:
  6910                           
  6911                           ; BSR set to: 0
  6912  0001F0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6913  0001F4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6914  0001F8                     	if	0	;tblptru may be non-zero
  6915  0001F8                     	endif
  6916  0001F8                     	if	0	;tblptru may be non-zero
  6917  0001F8                     	endif
  6918  0001F8  0008               	tblrd		*
  6919  0001FA  50F5               	movf	tablat,w,c
  6920  0001FC  EC18  F01E         	call	_isdigit
  6921  000200  A0D8               	btfss	status,0,c
  6922  000202  D00C               	goto	l5359
  6923  000204  D7D2               	goto	l5345
  6924  000206                     l5351:
  6925                           
  6926                           ;doprnt.c: 626: prec = 0;
  6927  000206  0E00               	movlw	0
  6928  000208  0100               	movlb	0	; () banked
  6929  00020A  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6930  00020C  0E00               	movlw	0
  6931  00020E  6FCF               	movwf	sprintf@prec& (0+255),b
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;doprnt.c: 628: flag |= 0x1000;
  6935  000210  0100               	movlb	0	; () banked
  6936  000212  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;doprnt.c: 630: }
  6940                           ;doprnt.c: 635: switch(c = *f++) {
  6941  000214  D003               	goto	l5359
  6942  000216                     l5355:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;doprnt.c: 663: flag |= 0x400;
  6946  000216  0100               	movlb	0	; () banked
  6947  000218  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;doprnt.c: 698: case 'i':
  6951                           ;doprnt.c: 699: break;
  6952                           
  6953                           ; BSR set to: 0
  6954                           
  6955                           ;doprnt.c: 697: case 'd':
  6956                           
  6957                           ;doprnt.c: 664: break;
  6958  00021A  D01A               	goto	l5361
  6959  00021C                     l5359:
  6960  00021C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6961  000220  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6962  000224  0100               	movlb	0	; () banked
  6963  000226  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6964  000228  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6965  00022A                     	if	0	;tblptru may be non-zero
  6966  00022A                     	endif
  6967  00022A                     	if	0	;tblptru may be non-zero
  6968  00022A                     	endif
  6969  00022A  0008               	tblrd		*
  6970  00022C  CFF5 F0D1          	movff	tablat,sprintf@c
  6971  000230  0100               	movlb	0	; () banked
  6972  000232  51D1               	movf	sprintf@c& (0+255),w,b
  6973                           
  6974                           ; Switch size 1, requested type "space"
  6975                           ; Number of cases is 4, Range of values is 0 to 105
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte           13     7 (average)
  6979                           ;	Chosen strategy is simple_byte
  6980  000234  0A00               	xorlw	0	; case 0
  6981  000236  B4D8               	btfsc	status,2,c
  6982  000238  EF1D  F006         	goto	l5607
  6983  00023C  0A64               	xorlw	100	; case 100
  6984  00023E  B4D8               	btfsc	status,2,c
  6985  000240  D007               	goto	l5361
  6986  000242  0A02               	xorlw	2	; case 102
  6987  000244  B4D8               	btfsc	status,2,c
  6988  000246  D7E7               	goto	l5355
  6989  000248  0A0F               	xorlw	15	; case 105
  6990  00024A  A4D8               	btfss	status,2,c
  6991  00024C  EF0E  F006         	goto	l5605
  6992  000250                     l5361:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;doprnt.c: 825: if(flag & (0x700)) {
  6996  000250  0E07               	movlw	7
  6997  000252  0100               	movlb	0	; () banked
  6998  000254  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  6999  000256  B4D8               	btfsc	status,2,c
  7000  000258  D379               	goto	l5525
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;doprnt.c: 827: if(flag & 0x1000)
  7004  00025A  0100               	movlb	0	; () banked
  7005  00025C  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  7006  00025E  D005               	goto	l5367
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;doprnt.c: 829: prec = 6;
  7010  000260  0E00               	movlw	0
  7011  000262  0100               	movlb	0	; () banked
  7012  000264  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  7013  000266  0E06               	movlw	6
  7014  000268  6FCF               	movwf	sprintf@prec& (0+255),b
  7015  00026A                     l5367:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7019  00026A  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7020  00026E  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7021  000272  CFDE F0CC          	movff	postinc2,sprintf@fval
  7022  000276  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  7023  00027A  CFDD F0CE          	movff	postdec2,sprintf@fval+2
  7024                           
  7025                           ; BSR set to: 0
  7026  00027E  0E03               	movlw	3
  7027  000280  0100               	movlb	0	; () banked
  7028  000282  27BC               	addwf	sprintf@ap& (0+255),f,b
  7029  000284  0E00               	movlw	0
  7030  000286  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;doprnt.c: 831: if(fval < 0.0) {
  7034  000288  0100               	movlb	0	; () banked
  7035  00028A  AFCE               	btfss	(sprintf@fval+2)& (0+255),7,b
  7036  00028C  D011               	goto	l5377
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;doprnt.c: 832: fval = -fval;
  7040  00028E  C0CC  F071         	movff	sprintf@fval,___ftneg@f1
  7041  000292  C0CD  F072         	movff	sprintf@fval+1,___ftneg@f1+1
  7042  000296  C0CE  F073         	movff	sprintf@fval+2,___ftneg@f1+2
  7043  00029A  ECC7  F01D         	call	___ftneg	;wreg free
  7044  00029E  C071  F0CC         	movff	?___ftneg,sprintf@fval
  7045  0002A2  C072  F0CD         	movff	?___ftneg+1,sprintf@fval+1
  7046  0002A6  C073  F0CE         	movff	?___ftneg+2,sprintf@fval+2
  7047                           
  7048                           ;doprnt.c: 833: flag |= 0x03;
  7049  0002AA  0E03               	movlw	3
  7050  0002AC  0100               	movlb	0	; () banked
  7051  0002AE  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7052  0002B0                     l5377:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;doprnt.c: 834: }
  7056                           ;doprnt.c: 835: exp = 0;
  7057  0002B0  0E00               	movlw	0
  7058  0002B2  0100               	movlb	0	; () banked
  7059  0002B4  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7060  0002B6  0E00               	movlw	0
  7061  0002B8  6FCA               	movwf	sprintf@exp& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;doprnt.c: 836: if( fval!=0) {
  7065  0002BA  0100               	movlb	0	; () banked
  7066  0002BC  51CC               	movf	sprintf@fval& (0+255),w,b
  7067  0002BE  0100               	movlb	0	; () banked
  7068  0002C0  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7069  0002C2  0100               	movlb	0	; () banked
  7070  0002C4  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7071  0002C6  B4D8               	btfsc	status,2,c
  7072  0002C8  D09B               	goto	l5405
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7076  0002CA  0E82               	movlw	130
  7077  0002CC  0100               	movlb	0	; () banked
  7078  0002CE  6FB3               	movwf	??_sprintf& (0+255),b
  7079  0002D0  0EFF               	movlw	255
  7080  0002D2  0100               	movlb	0	; () banked
  7081  0002D4  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7082  0002D6  C0CC  F0B5         	movff	sprintf@fval,??_sprintf+2
  7083  0002DA  C0CD  F0B6         	movff	sprintf@fval+1,??_sprintf+3
  7084  0002DE  C0CE  F0B7         	movff	sprintf@fval+2,??_sprintf+4
  7085  0002E2  C0CF  F0B8         	movff	sprintf@fval+3,??_sprintf+5
  7086  0002E6  0E10               	movlw	16
  7087  0002E8  D006               	goto	u5590
  7088  0002EA                     u5595:
  7089  0002EA  0100               	movlb	0	; () banked
  7090  0002EC  90D8               	bcf	status,0,c
  7091  0002EE  33B8               	rrcf	(??_sprintf+5)& (0+255),f,b
  7092  0002F0  33B7               	rrcf	(??_sprintf+4)& (0+255),f,b
  7093  0002F2  33B6               	rrcf	(??_sprintf+3)& (0+255),f,b
  7094  0002F4  33B5               	rrcf	(??_sprintf+2)& (0+255),f,b
  7095  0002F6                     u5590:
  7096  0002F6  2EE8               	decfsz	wreg,f,c
  7097  0002F8  D7F8               	goto	u5595
  7098  0002FA  0100               	movlb	0	; () banked
  7099  0002FC  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  7100  0002FE  0100               	movlb	0	; () banked
  7101  000300  25B3               	addwf	??_sprintf& (0+255),w,b
  7102  000302  0100               	movlb	0	; () banked
  7103  000304  6FCA               	movwf	sprintf@exp& (0+255),b
  7104  000306  0E00               	movlw	0
  7105  000308  0100               	movlb	0	; () banked
  7106  00030A  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  7107  00030C  0100               	movlb	0	; () banked
  7108  00030E  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;doprnt.c: 838: exp--;
  7112  000310  0100               	movlb	0	; () banked
  7113  000312  07CA               	decf	sprintf@exp& (0+255),f,b
  7114  000314  A0D8               	btfss	status,0,c
  7115  000316  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;doprnt.c: 839: exp *= 3;
  7119  000318  C0CA  F079         	movff	sprintf@exp,___wmul@multiplier
  7120  00031C  C0CB  F07A         	movff	sprintf@exp+1,___wmul@multiplier+1
  7121  000320  0E00               	movlw	0
  7122  000322  0100               	movlb	0	; () banked
  7123  000324  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7124  000326  0E03               	movlw	3
  7125  000328  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7126  00032A  EC65  F01D         	call	___wmul	;wreg free
  7127  00032E  C079  F0CA         	movff	?___wmul,sprintf@exp
  7128  000332  C07A  F0CB         	movff	?___wmul+1,sprintf@exp+1
  7129                           
  7130                           ;doprnt.c: 840: exp /= 10;
  7131  000336  C0CA  F075         	movff	sprintf@exp,___awdiv@dividend
  7132  00033A  C0CB  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  7133  00033E  0E00               	movlw	0
  7134  000340  0100               	movlb	0	; () banked
  7135  000342  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7136  000344  0E0A               	movlw	10
  7137  000346  6F77               	movwf	___awdiv@divisor& (0+255),b
  7138  000348  EC9B  F019         	call	___awdiv	;wreg free
  7139  00034C  C075  F0CA         	movff	?___awdiv,sprintf@exp
  7140  000350  C076  F0CB         	movff	?___awdiv+1,sprintf@exp+1
  7141                           
  7142                           ;doprnt.c: 841: if(exp < 0)
  7143  000354  0100               	movlb	0	; () banked
  7144  000356  AFCB               	btfss	(sprintf@exp+1)& (0+255),7,b
  7145  000358  D004               	goto	l5393
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;doprnt.c: 842: exp--;
  7149  00035A  0100               	movlb	0	; () banked
  7150  00035C  07CA               	decf	sprintf@exp& (0+255),f,b
  7151  00035E  A0D8               	btfss	status,0,c
  7152  000360  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7153  000362                     l5393:
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7157  000362  0100               	movlb	0	; () banked
  7158  000364  51CA               	movf	sprintf@exp& (0+255),w,b
  7159  000366  0800               	sublw	0
  7160  000368  ECF5  F009         	call	_scale
  7161  00036C  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7162  000370  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7163  000374  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7164                           
  7165                           ;doprnt.c: 847: tmpval.integ *= fval;
  7166  000378  C0C2  F07D         	movff	sprintf@tmpval,___ftmul@f1
  7167  00037C  C0C3  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7168  000380  C0C4  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7169  000384  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7170  000388  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7171  00038C  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7172  000390  ECD0  F014         	call	___ftmul	;wreg free
  7173  000394  C07D  F0C2         	movff	?___ftmul,sprintf@tmpval
  7174  000398  C07E  F0C3         	movff	?___ftmul+1,sprintf@tmpval+1
  7175  00039C  C07F  F0C4         	movff	?___ftmul+2,sprintf@tmpval+2
  7176                           
  7177                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7178  0003A0  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7179  0003A4  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7180  0003A8  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7181  0003AC  0E00               	movlw	0
  7182  0003AE  0100               	movlb	0	; () banked
  7183  0003B0  6F74               	movwf	___ftge@ff2& (0+255),b
  7184  0003B2  0E80               	movlw	128
  7185  0003B4  0100               	movlb	0	; () banked
  7186  0003B6  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7187  0003B8  0E3F               	movlw	63
  7188  0003BA  0100               	movlb	0	; () banked
  7189  0003BC  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7190  0003BE  ECE7  F018         	call	___ftge	;wreg free
  7191  0003C2  0100               	movlb	0	; () banked
  7192  0003C4  B0D8               	btfsc	status,0,c
  7193  0003C6  D005               	goto	l5401
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;doprnt.c: 849: exp--;
  7197  0003C8  0100               	movlb	0	; () banked
  7198  0003CA  07CA               	decf	sprintf@exp& (0+255),f,b
  7199  0003CC  A0D8               	btfss	status,0,c
  7200  0003CE  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7201  0003D0  D017               	goto	l5405
  7202  0003D2                     l5401:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7206  0003D2  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7207  0003D6  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7208  0003DA  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7209  0003DE  0E00               	movlw	0
  7210  0003E0  0100               	movlb	0	; () banked
  7211  0003E2  6F74               	movwf	___ftge@ff2& (0+255),b
  7212  0003E4  0E20               	movlw	32
  7213  0003E6  0100               	movlb	0	; () banked
  7214  0003E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7215  0003EA  0E41               	movlw	65
  7216  0003EC  0100               	movlb	0	; () banked
  7217  0003EE  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7218  0003F0  ECE7  F018         	call	___ftge	;wreg free
  7219  0003F4  0100               	movlb	0	; () banked
  7220  0003F6  A0D8               	btfss	status,0,c
  7221  0003F8  D003               	goto	l5405
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;doprnt.c: 851: exp++;
  7225  0003FA  0100               	movlb	0	; () banked
  7226  0003FC  4BCA               	infsnz	sprintf@exp& (0+255),f,b
  7227  0003FE  2BCB               	incf	(sprintf@exp+1)& (0+255),f,b
  7228  000400                     l5405:
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;doprnt.c: 852: }
  7232                           ;doprnt.c: 1112: if(prec <= 12)
  7233  000400  0100               	movlb	0	; () banked
  7234  000402  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7235  000404  D008               	goto	l5407
  7236  000406  0100               	movlb	0	; () banked
  7237  000408  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7238  00040A  E11D               	bnz	l5409
  7239  00040C  0E0D               	movlw	13
  7240  00040E  0100               	movlb	0	; () banked
  7241  000410  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7242  000412  B0D8               	btfsc	status,0,c
  7243  000414  D018               	goto	l5409
  7244  000416                     l5407:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;doprnt.c: 1113: fval += fround(prec);
  7248  000416  C0CC  F093         	movff	sprintf@fval,___ftadd@f1
  7249  00041A  C0CD  F094         	movff	sprintf@fval+1,___ftadd@f1+1
  7250  00041E  C0CE  F095         	movff	sprintf@fval+2,___ftadd@f1+2
  7251  000422  0100               	movlb	0	; () banked
  7252  000424  51CF               	movf	sprintf@prec& (0+255),w,b
  7253  000426  EC44  F00E         	call	_fround
  7254  00042A  C089  F096         	movff	?_fround,___ftadd@f2
  7255  00042E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
  7256  000432  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
  7257  000436  EC9A  F00F         	call	___ftadd	;wreg free
  7258  00043A  C093  F0CC         	movff	?___ftadd,sprintf@fval
  7259  00043E  C094  F0CD         	movff	?___ftadd+1,sprintf@fval+1
  7260  000442  C095  F0CE         	movff	?___ftadd+2,sprintf@fval+2
  7261  000446                     l5409:
  7262                           
  7263                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7264  000446  0100               	movlb	0	; () banked
  7265  000448  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7266  00044A  D008               	goto	l5411
  7267  00044C  0100               	movlb	0	; () banked
  7268  00044E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7269  000450  E12A               	bnz	l5417
  7270  000452  0E0A               	movlw	10
  7271  000454  0100               	movlb	0	; () banked
  7272  000456  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7273  000458  B0D8               	btfsc	status,0,c
  7274  00045A  D025               	goto	l5417
  7275  00045C                     l5411:
  7276                           
  7277                           ; BSR set to: 0
  7278  00045C  0100               	movlb	0	; () banked
  7279  00045E  51CC               	movf	sprintf@fval& (0+255),w,b
  7280  000460  0100               	movlb	0	; () banked
  7281  000462  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7282  000464  0100               	movlb	0	; () banked
  7283  000466  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7284  000468  B4D8               	btfsc	status,2,c
  7285  00046A  D063               	goto	l5431
  7286                           
  7287                           ; BSR set to: 0
  7288  00046C  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7289  000470  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7290  000474  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7291  000478  EC79  F015         	call	___fttol	;wreg free
  7292  00047C  0100               	movlb	0	; () banked
  7293  00047E  5190               	movf	?___fttol& (0+255),w,b
  7294  000480  0100               	movlb	0	; () banked
  7295  000482  1191               	iorwf	(?___fttol+1)& (0+255),w,b
  7296  000484  0100               	movlb	0	; () banked
  7297  000486  1192               	iorwf	(?___fttol+2)& (0+255),w,b
  7298  000488  0100               	movlb	0	; () banked
  7299  00048A  1193               	iorwf	(?___fttol+3)& (0+255),w,b
  7300  00048C  A4D8               	btfss	status,2,c
  7301  00048E  D051               	goto	l5431
  7302                           
  7303                           ; BSR set to: 0
  7304  000490  0100               	movlb	0	; () banked
  7305  000492  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7306  000494  D04E               	goto	l5431
  7307  000496  0100               	movlb	0	; () banked
  7308  000498  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7309  00049A  E105               	bnz	l5417
  7310  00049C  0E02               	movlw	2
  7311  00049E  0100               	movlb	0	; () banked
  7312  0004A0  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7313  0004A2  A0D8               	btfss	status,0,c
  7314  0004A4  D046               	goto	l5431
  7315  0004A6                     l5417:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7319  0004A6  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7320  0004AA  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7321  0004AE  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7322  0004B2  0E70               	movlw	112
  7323  0004B4  0100               	movlb	0	; () banked
  7324  0004B6  6F74               	movwf	___ftge@ff2& (0+255),b
  7325  0004B8  0E89               	movlw	137
  7326  0004BA  0100               	movlb	0	; () banked
  7327  0004BC  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7328  0004BE  0E40               	movlw	64
  7329  0004C0  0100               	movlb	0	; () banked
  7330  0004C2  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7331  0004C4  ECE7  F018         	call	___ftge	;wreg free
  7332  0004C8  0100               	movlb	0	; () banked
  7333  0004CA  B0D8               	btfsc	status,0,c
  7334  0004CC  D003               	goto	l5421
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7338  0004CE  0100               	movlb	0	; () banked
  7339  0004D0  0EF7               	movlw	247
  7340  0004D2  D002               	goto	L4
  7341  0004D4                     l5421:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7345  0004D4  0100               	movlb	0	; () banked
  7346  0004D6  0EF8               	movlw	248
  7347  0004D8                     L4:
  7348  0004D8  27CA               	addwf	sprintf@exp& (0+255),f,b
  7349  0004DA  0EFF               	movlw	255
  7350  0004DC  23CB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;doprnt.c: 1124: }
  7354                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7355                           
  7356                           ; BSR set to: 0
  7357  0004DE  0100               	movlb	0	; () banked
  7358  0004E0  51CA               	movf	sprintf@exp& (0+255),w,b
  7359  0004E2  ECF5  F009         	call	_scale
  7360  0004E6  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7361  0004EA  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7362  0004EE  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7363                           
  7364                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7365  0004F2  C0CC  F071         	movff	sprintf@fval,__tdiv_to_l_@f1
  7366  0004F6  C0CD  F072         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7367  0004FA  C0CE  F073         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7368  0004FE  C0C2  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7369  000502  C0C3  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7370  000506  C0C4  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7371  00050A  EC6D  F013         	call	__tdiv_to_l_	;wreg free
  7372  00050E  C071  F0C6         	movff	?__tdiv_to_l_,sprintf@val
  7373  000512  C072  F0C7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7374  000516  C073  F0C8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7375  00051A  C074  F0C9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7376                           
  7377                           ;doprnt.c: 1129: fval = 0.0;
  7378  00051E  0E00               	movlw	0
  7379  000520  0100               	movlb	0	; () banked
  7380  000522  6FCC               	movwf	sprintf@fval& (0+255),b
  7381  000524  0E00               	movlw	0
  7382  000526  0100               	movlb	0	; () banked
  7383  000528  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  7384  00052A  0E00               	movlw	0
  7385  00052C  0100               	movlb	0	; () banked
  7386  00052E  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  7387                           
  7388                           ;doprnt.c: 1130: } else {
  7389  000530  D033               	goto	l5435
  7390  000532                     l5431:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7394  000532  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7395  000536  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7396  00053A  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7397  00053E  EC79  F015         	call	___fttol	;wreg free
  7398  000542  C090  F0C6         	movff	?___fttol,sprintf@val
  7399  000546  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7400  00054A  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7401  00054E  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7402                           
  7403                           ;doprnt.c: 1132: fval -= (double)val;
  7404  000552  C0CC  F09F         	movff	sprintf@fval,___ftsub@f1
  7405  000556  C0CD  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
  7406  00055A  C0CE  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
  7407  00055E  C0C6  F076         	movff	sprintf@val,___lltoft@c
  7408  000562  C0C7  F077         	movff	sprintf@val+1,___lltoft@c+1
  7409  000566  C0C8  F078         	movff	sprintf@val+2,___lltoft@c+2
  7410  00056A  C0C9  F079         	movff	sprintf@val+3,___lltoft@c+3
  7411  00056E  EC42  F01B         	call	___lltoft	;wreg free
  7412  000572  C076  F0A2         	movff	?___lltoft,___ftsub@f2
  7413  000576  C077  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
  7414  00057A  C078  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
  7415  00057E  ECFD  F01B         	call	___ftsub	;wreg free
  7416  000582  C09F  F0CC         	movff	?___ftsub,sprintf@fval
  7417  000586  C0A0  F0CD         	movff	?___ftsub+1,sprintf@fval+1
  7418  00058A  C0A1  F0CE         	movff	?___ftsub+2,sprintf@fval+2
  7419                           
  7420                           ;doprnt.c: 1133: exp = 0;
  7421  00058E  0E00               	movlw	0
  7422  000590  0100               	movlb	0	; () banked
  7423  000592  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7424  000594  0E00               	movlw	0
  7425  000596  6FCA               	movwf	sprintf@exp& (0+255),b
  7426  000598                     l5435:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;doprnt.c: 1134: }
  7430                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7431  000598  0E01               	movlw	1
  7432  00059A  0100               	movlb	0	; () banked
  7433  00059C  6FD1               	movwf	sprintf@c& (0+255),b
  7434  00059E                     l5437:
  7435                           
  7436                           ; BSR set to: 0
  7437  00059E  0E0A               	movlw	10
  7438  0005A0  0100               	movlb	0	; () banked
  7439  0005A2  19D1               	xorwf	sprintf@c& (0+255),w,b
  7440  0005A4  B4D8               	btfsc	status,2,c
  7441  0005A6  D01E               	goto	l5449
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;doprnt.c: 1137: if(val < dpowers[c])
  7445                           
  7446                           ; BSR set to: 0
  7447                           
  7448                           ; BSR set to: 0
  7449  0005A8  0100               	movlb	0	; () banked
  7450  0005AA  51D1               	movf	sprintf@c& (0+255),w,b
  7451  0005AC  0D04               	mullw	4
  7452  0005AE  0EF5               	movlw	low _dpowers
  7453  0005B0  24F3               	addwf	prodl,w,c
  7454  0005B2  6EF6               	movwf	tblptrl,c
  7455  0005B4  0E7E               	movlw	high _dpowers
  7456  0005B6  20F4               	addwfc	prodh,w,c
  7457  0005B8  6EF7               	movwf	tblptrh,c
  7458  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7459  0005BA                     	endif
  7460  0005BA  0009               	tblrd		*+
  7461  0005BC  50F5               	movf	tablat,w,c
  7462  0005BE  0100               	movlb	0	; () banked
  7463  0005C0  5DC6               	subwf	sprintf@val& (0+255),w,b
  7464  0005C2  0009               	tblrd		*+
  7465  0005C4  50F5               	movf	tablat,w,c
  7466  0005C6  0100               	movlb	0	; () banked
  7467  0005C8  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7468  0005CA  0009               	tblrd		*+
  7469  0005CC  50F5               	movf	tablat,w,c
  7470  0005CE  0100               	movlb	0	; () banked
  7471  0005D0  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7472  0005D2  0009               	tblrd		*+
  7473  0005D4  50F5               	movf	tablat,w,c
  7474  0005D6  0100               	movlb	0	; () banked
  7475  0005D8  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7476  0005DA  A0D8               	btfss	status,0,c
  7477  0005DC  D003               	goto	l5449
  7478                           
  7479                           ; BSR set to: 0
  7480                           
  7481                           ; BSR set to: 0
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;doprnt.c: 1138: break;
  7485  0005DE  0100               	movlb	0	; () banked
  7486  0005E0  2BD1               	incf	sprintf@c& (0+255),f,b
  7487  0005E2  D7DD               	goto	l5437
  7488  0005E4                     l5449:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;doprnt.c: 1142: width -= prec + c + exp;
  7492  0005E4  C0D1  F0B3         	movff	sprintf@c,??_sprintf
  7493  0005E8  0100               	movlb	0	; () banked
  7494  0005EA  6BB4               	clrf	(??_sprintf+1)& (0+255),b
  7495  0005EC  BFB3               	btfsc	??_sprintf& (0+255),7,b
  7496  0005EE  07B4               	decf	(??_sprintf+1)& (0+255),f,b
  7497  0005F0  0100               	movlb	0	; () banked
  7498  0005F2  51CF               	movf	sprintf@prec& (0+255),w,b
  7499  0005F4  0100               	movlb	0	; () banked
  7500  0005F6  27B3               	addwf	??_sprintf& (0+255),f,b
  7501  0005F8  0100               	movlb	0	; () banked
  7502  0005FA  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7503  0005FC  0100               	movlb	0	; () banked
  7504  0005FE  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7505  000600  0100               	movlb	0	; () banked
  7506  000602  51CA               	movf	sprintf@exp& (0+255),w,b
  7507  000604  0100               	movlb	0	; () banked
  7508  000606  27B3               	addwf	??_sprintf& (0+255),f,b
  7509  000608  0100               	movlb	0	; () banked
  7510  00060A  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7511  00060C  0100               	movlb	0	; () banked
  7512  00060E  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7513  000610  0100               	movlb	0	; () banked
  7514  000612  51B3               	movf	??_sprintf& (0+255),w,b
  7515  000614  0100               	movlb	0	; () banked
  7516  000616  5FC0               	subwf	sprintf@width& (0+255),f,b
  7517  000618  0100               	movlb	0	; () banked
  7518  00061A  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  7519  00061C  0100               	movlb	0	; () banked
  7520  00061E  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7521                           
  7522                           ;doprnt.c: 1143: if(
  7523                           ;doprnt.c: 1147: prec)
  7524  000620  0100               	movlb	0	; () banked
  7525  000622  51CF               	movf	sprintf@prec& (0+255),w,b
  7526  000624  0100               	movlb	0	; () banked
  7527  000626  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7528  000628  B4D8               	btfsc	status,2,c
  7529  00062A  D004               	goto	l5453
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;doprnt.c: 1148: width--;
  7533  00062C  0100               	movlb	0	; () banked
  7534  00062E  07C0               	decf	sprintf@width& (0+255),f,b
  7535  000630  A0D8               	btfss	status,0,c
  7536  000632  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7537  000634                     l5453:
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;doprnt.c: 1149: if(flag & 0x03)
  7541  000634  0E03               	movlw	3
  7542  000636  0100               	movlb	0	; () banked
  7543  000638  15BE               	andwf	sprintf@flag& (0+255),w,b
  7544  00063A  0100               	movlb	0	; () banked
  7545  00063C  6FB3               	movwf	??_sprintf& (0+255),b
  7546  00063E  0E00               	movlw	0
  7547  000640  0100               	movlb	0	; () banked
  7548  000642  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7549  000644  0100               	movlb	0	; () banked
  7550  000646  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7551  000648  0100               	movlb	0	; () banked
  7552  00064A  51B3               	movf	??_sprintf& (0+255),w,b
  7553  00064C  0100               	movlb	0	; () banked
  7554  00064E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7555  000650  B4D8               	btfsc	status,2,c
  7556  000652  D00E               	goto	l5463
  7557  000654  D009               	goto	l5461
  7558  000656                     l5457:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7562  000656  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7563  00065A  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7564  00065E  0E20               	movlw	32
  7565  000660  6EDF               	movwf	indf2,c
  7566                           
  7567                           ; BSR set to: 0
  7568  000662  0100               	movlb	0	; () banked
  7569  000664  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7570  000666  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7571  000668                     l5461:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;doprnt.c: 1182: width--;
  7575  000668  0100               	movlb	0	; () banked
  7576  00066A  07C0               	decf	sprintf@width& (0+255),f,b
  7577  00066C  A0D8               	btfss	status,0,c
  7578  00066E  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7579  000670                     l5463:
  7580                           
  7581                           ; BSR set to: 0
  7582  000670  0100               	movlb	0	; () banked
  7583  000672  BFC1               	btfsc	(sprintf@width+1)& (0+255),7,b
  7584  000674  D007               	goto	l5465
  7585  000676  0100               	movlb	0	; () banked
  7586  000678  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  7587  00067A  E1ED               	bnz	l5457
  7588  00067C  0100               	movlb	0	; () banked
  7589  00067E  05C0               	decf	sprintf@width& (0+255),w,b
  7590  000680  B0D8               	btfsc	status,0,c
  7591  000682  D7E9               	goto	l5457
  7592  000684                     l5465:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;doprnt.c: 1183: }
  7596                           ;doprnt.c: 1188: if(flag & 0x03)
  7597  000684  0E03               	movlw	3
  7598  000686  0100               	movlb	0	; () banked
  7599  000688  15BE               	andwf	sprintf@flag& (0+255),w,b
  7600  00068A  0100               	movlb	0	; () banked
  7601  00068C  6FB3               	movwf	??_sprintf& (0+255),b
  7602  00068E  0E00               	movlw	0
  7603  000690  0100               	movlb	0	; () banked
  7604  000692  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7605  000694  0100               	movlb	0	; () banked
  7606  000696  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7607  000698  0100               	movlb	0	; () banked
  7608  00069A  51B3               	movf	??_sprintf& (0+255),w,b
  7609  00069C  0100               	movlb	0	; () banked
  7610  00069E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7611  0006A0  B4D8               	btfsc	status,2,c
  7612  0006A2  D055               	goto	l5479
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7616  0006A4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7617  0006A8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7618  0006AC  0E2D               	movlw	45
  7619  0006AE  D04D               	goto	L5
  7620  0006B0                     l5469:
  7621                           
  7622                           ; BSR set to: 0
  7623  0006B0  0100               	movlb	0	; () banked
  7624  0006B2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7625  0006B4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;doprnt.c: 1195: }
  7629                           ;doprnt.c: 1196: while(c--) {
  7630  0006B6  D04B               	goto	l5479
  7631  0006B8                     l5471:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;doprnt.c: 1200: {
  7635                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7636  0006B8  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7637  0006BC  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7638  0006C0  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7639  0006C4  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7640  0006C8  0100               	movlb	0	; () banked
  7641  0006CA  51D1               	movf	sprintf@c& (0+255),w,b
  7642  0006CC  0D04               	mullw	4
  7643  0006CE  0EF5               	movlw	low _dpowers
  7644  0006D0  24F3               	addwf	prodl,w,c
  7645  0006D2  6EF6               	movwf	tblptrl,c
  7646  0006D4  0E7E               	movlw	high _dpowers
  7647  0006D6  20F4               	addwfc	prodh,w,c
  7648  0006D8  6EF7               	movwf	tblptrh,c
  7649  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7650  0006DA                     	endif
  7651  0006DA  0009               	tblrd		*+
  7652  0006DC  CFF5 F075          	movff	tablat,___lldiv@divisor
  7653  0006E0  0009               	tblrd		*+
  7654  0006E2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7655  0006E6  0009               	tblrd		*+
  7656  0006E8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7657  0006EC  000A               	tblrd		*-
  7658  0006EE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7659  0006F2  EC43  F019         	call	___lldiv	;wreg free
  7660  0006F6  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7661  0006FA  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7662  0006FE  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7663  000702  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7664                           
  7665                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7666  000706  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7667  00070A  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7668  00070E  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7669  000712  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7670  000716  0E0A               	movlw	10
  7671  000718  0100               	movlb	0	; () banked
  7672  00071A  6F7D               	movwf	___llmod@divisor& (0+255),b
  7673  00071C  0E00               	movlw	0
  7674  00071E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7675  000720  0E00               	movlw	0
  7676  000722  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7677  000724  0E00               	movlw	0
  7678  000726  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7679  000728  EC38  F01A         	call	___llmod	;wreg free
  7680  00072C  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7681  000730  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7682  000734  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7683  000738  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7684                           
  7685                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7686  00073C  0100               	movlb	0	; () banked
  7687  00073E  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7688  000740  0F30               	addlw	48
  7689  000742  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7690  000746  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7691  00074A                     L5:
  7692  00074A  6EDF               	movwf	indf2,c
  7693  00074C  D7B1               	goto	l5469
  7694  00074E                     l5479:
  7695                           
  7696                           ; BSR set to: 0
  7697  00074E  0100               	movlb	0	; () banked
  7698  000750  07D1               	decf	sprintf@c& (0+255),f,b
  7699  000752  0100               	movlb	0	; () banked
  7700  000754  29D1               	incf	sprintf@c& (0+255),w,b
  7701  000756  B4D8               	btfsc	status,2,c
  7702  000758  D00E               	goto	l5487
  7703  00075A  D7AE               	goto	l5471
  7704  00075C                     l5481:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7708  00075C  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7709  000760  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7710  000764  0E30               	movlw	48
  7711  000766  6EDF               	movwf	indf2,c
  7712                           
  7713                           ; BSR set to: 0
  7714  000768  0100               	movlb	0	; () banked
  7715  00076A  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7716  00076C  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;doprnt.c: 1209: exp--;
  7720  00076E  0100               	movlb	0	; () banked
  7721  000770  07CA               	decf	sprintf@exp& (0+255),f,b
  7722  000772  A0D8               	btfss	status,0,c
  7723  000774  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7724  000776                     l5487:
  7725                           
  7726                           ; BSR set to: 0
  7727  000776  0100               	movlb	0	; () banked
  7728  000778  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7729  00077A  D007               	goto	l5489
  7730  00077C  0100               	movlb	0	; () banked
  7731  00077E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7732  000780  E1ED               	bnz	l5481
  7733  000782  0100               	movlb	0	; () banked
  7734  000784  05CA               	decf	sprintf@exp& (0+255),w,b
  7735  000786  B0D8               	btfsc	status,0,c
  7736  000788  D7E9               	goto	l5481
  7737  00078A                     l5489:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;doprnt.c: 1210: }
  7741                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7742  00078A  0100               	movlb	0	; () banked
  7743  00078C  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7744  00078E  D00C               	goto	l476
  7745  000790  0100               	movlb	0	; () banked
  7746  000792  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7747  000794  E105               	bnz	u5780
  7748  000796  0E09               	movlw	9
  7749  000798  0100               	movlb	0	; () banked
  7750  00079A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7751  00079C  A0D8               	btfss	status,0,c
  7752  00079E  D004               	goto	l476
  7753  0007A0                     u5780:
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7757  0007A0  0E08               	movlw	8
  7758  0007A2  0100               	movlb	0	; () banked
  7759  0007A4  6FD1               	movwf	sprintf@c& (0+255),b
  7760  0007A6  D002               	goto	l5493
  7761  0007A8                     l476:
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;doprnt.c: 1213: else
  7765                           ;doprnt.c: 1214: c = prec;
  7766  0007A8  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  7767  0007AC                     l5493:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;doprnt.c: 1215: prec -= c;
  7771  0007AC  0100               	movlb	0	; () banked
  7772  0007AE  51D1               	movf	sprintf@c& (0+255),w,b
  7773  0007B0  0100               	movlb	0	; () banked
  7774  0007B2  5FCF               	subwf	sprintf@prec& (0+255),f,b
  7775  0007B4  0E00               	movlw	0
  7776  0007B6  0100               	movlb	0	; () banked
  7777  0007B8  BFD1               	btfsc	sprintf@c& (0+255),7,b
  7778  0007BA  0EFF               	movlw	255
  7779  0007BC  0100               	movlb	0	; () banked
  7780  0007BE  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;doprnt.c: 1219: if(c)
  7784  0007C0  0100               	movlb	0	; () banked
  7785  0007C2  51D1               	movf	sprintf@c& (0+255),w,b
  7786  0007C4  0100               	movlb	0	; () banked
  7787  0007C6  B4D8               	btfsc	status,2,c
  7788  0007C8  D009               	goto	l5501
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7792  0007CA  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7793  0007CE  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7794  0007D2  0E2E               	movlw	46
  7795  0007D4  6EDF               	movwf	indf2,c
  7796                           
  7797                           ; BSR set to: 0
  7798  0007D6  0100               	movlb	0	; () banked
  7799  0007D8  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7800  0007DA  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7801  0007DC                     l5501:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7805  0007DC  0100               	movlb	0	; () banked
  7806  0007DE  51D1               	movf	sprintf@c& (0+255),w,b
  7807  0007E0  ECF5  F009         	call	_scale
  7808  0007E4  C089  F0B9         	movff	?_scale,_sprintf$2172
  7809  0007E8  C08A  F0BA         	movff	?_scale+1,_sprintf$2172+1
  7810  0007EC  C08B  F0BB         	movff	?_scale+2,_sprintf$2172+2
  7811                           
  7812                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7813  0007F0  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7814  0007F4  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7815  0007F8  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7816  0007FC  C0B9  F07D         	movff	_sprintf$2172,___ftmul@f1
  7817  000800  C0BA  F07E         	movff	_sprintf$2172+1,___ftmul@f1+1
  7818  000804  C0BB  F07F         	movff	_sprintf$2172+2,___ftmul@f1+2
  7819  000808  ECD0  F014         	call	___ftmul	;wreg free
  7820  00080C  C07D  F090         	movff	?___ftmul,___fttol@f1
  7821  000810  C07E  F091         	movff	?___ftmul+1,___fttol@f1+1
  7822  000814  C07F  F092         	movff	?___ftmul+2,___fttol@f1+2
  7823  000818  EC79  F015         	call	___fttol	;wreg free
  7824  00081C  C090  F0C6         	movff	?___fttol,sprintf@val
  7825  000820  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7826  000824  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7827  000828  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7828                           
  7829                           ;doprnt.c: 1228: while(c--) {
  7830  00082C  D074               	goto	l5515
  7831  00082E                     l5505:
  7832                           
  7833                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7834  00082E  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7835  000832  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7836  000836  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7837  00083A  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7838  00083E  0100               	movlb	0	; () banked
  7839  000840  51D1               	movf	sprintf@c& (0+255),w,b
  7840  000842  0D04               	mullw	4
  7841  000844  0EF5               	movlw	low _dpowers
  7842  000846  24F3               	addwf	prodl,w,c
  7843  000848  6EF6               	movwf	tblptrl,c
  7844  00084A  0E7E               	movlw	high _dpowers
  7845  00084C  20F4               	addwfc	prodh,w,c
  7846  00084E  6EF7               	movwf	tblptrh,c
  7847  000850                     	if	0	;There are less than 3 active tblptr bytes
  7848  000850                     	endif
  7849  000850  0009               	tblrd		*+
  7850  000852  CFF5 F075          	movff	tablat,___lldiv@divisor
  7851  000856  0009               	tblrd		*+
  7852  000858  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7853  00085C  0009               	tblrd		*+
  7854  00085E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7855  000862  000A               	tblrd		*-
  7856  000864  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7857  000868  EC43  F019         	call	___lldiv	;wreg free
  7858  00086C  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7859  000870  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7860  000874  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7861  000878  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7862                           
  7863                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7864  00087C  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7865  000880  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7866  000884  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7867  000888  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7868  00088C  0E0A               	movlw	10
  7869  00088E  0100               	movlb	0	; () banked
  7870  000890  6F7D               	movwf	___llmod@divisor& (0+255),b
  7871  000892  0E00               	movlw	0
  7872  000894  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7873  000896  0E00               	movlw	0
  7874  000898  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7875  00089A  0E00               	movlw	0
  7876  00089C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7877  00089E  EC38  F01A         	call	___llmod	;wreg free
  7878  0008A2  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7879  0008A6  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7880  0008AA  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7881  0008AE  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7882                           
  7883                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7884  0008B2  0100               	movlb	0	; () banked
  7885  0008B4  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7886  0008B6  0F30               	addlw	48
  7887  0008B8  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7888  0008BC  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7889  0008C0  6EDF               	movwf	indf2,c
  7890                           
  7891                           ; BSR set to: 0
  7892  0008C2  0100               	movlb	0	; () banked
  7893  0008C4  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7894  0008C6  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;doprnt.c: 1232: val %= dpowers[c];
  7898  0008C8  C0C6  F079         	movff	sprintf@val,___llmod@dividend
  7899  0008CC  C0C7  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7900  0008D0  C0C8  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7901  0008D4  C0C9  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7902  0008D8  0100               	movlb	0	; () banked
  7903  0008DA  51D1               	movf	sprintf@c& (0+255),w,b
  7904  0008DC  0D04               	mullw	4
  7905  0008DE  0EF5               	movlw	low _dpowers
  7906  0008E0  24F3               	addwf	prodl,w,c
  7907  0008E2  6EF6               	movwf	tblptrl,c
  7908  0008E4  0E7E               	movlw	high _dpowers
  7909  0008E6  20F4               	addwfc	prodh,w,c
  7910  0008E8  6EF7               	movwf	tblptrh,c
  7911  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7912  0008EA                     	endif
  7913  0008EA  0009               	tblrd		*+
  7914  0008EC  CFF5 F07D          	movff	tablat,___llmod@divisor
  7915  0008F0  0009               	tblrd		*+
  7916  0008F2  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7917  0008F6  0009               	tblrd		*+
  7918  0008F8  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7919  0008FC  000A               	tblrd		*-
  7920  0008FE  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7921  000902  EC38  F01A         	call	___llmod	;wreg free
  7922  000906  C079  F0C6         	movff	?___llmod,sprintf@val
  7923  00090A  C07A  F0C7         	movff	?___llmod+1,sprintf@val+1
  7924  00090E  C07B  F0C8         	movff	?___llmod+2,sprintf@val+2
  7925  000912  C07C  F0C9         	movff	?___llmod+3,sprintf@val+3
  7926  000916                     l5515:
  7927  000916  0100               	movlb	0	; () banked
  7928  000918  07D1               	decf	sprintf@c& (0+255),f,b
  7929  00091A  0100               	movlb	0	; () banked
  7930  00091C  29D1               	incf	sprintf@c& (0+255),w,b
  7931  00091E  B4D8               	btfsc	status,2,c
  7932  000920  D00E               	goto	l5523
  7933  000922  D785               	goto	l5505
  7934  000924                     l5517:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7938  000924  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7939  000928  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7940  00092C  0E30               	movlw	48
  7941  00092E  6EDF               	movwf	indf2,c
  7942                           
  7943                           ; BSR set to: 0
  7944  000930  0100               	movlb	0	; () banked
  7945  000932  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7946  000934  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;doprnt.c: 1237: prec--;
  7950  000936  0100               	movlb	0	; () banked
  7951  000938  07CF               	decf	sprintf@prec& (0+255),f,b
  7952  00093A  A0D8               	btfss	status,0,c
  7953  00093C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  7954  00093E                     l5523:
  7955                           
  7956                           ; BSR set to: 0
  7957  00093E  0100               	movlb	0	; () banked
  7958  000940  51CF               	movf	sprintf@prec& (0+255),w,b
  7959  000942  0100               	movlb	0	; () banked
  7960  000944  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7961  000946  B4D8               	btfsc	status,2,c
  7962  000948  D169               	goto	l5605
  7963  00094A  D7EC               	goto	l5517
  7964  00094C                     l5525:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;doprnt.c: 1246: }
  7968                           ;doprnt.c: 1253: {
  7969                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7970  00094C  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7971  000950  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7972  000954  CFDE F0C6          	movff	postinc2,sprintf@val
  7973  000958  CFDD F0C7          	movff	postdec2,sprintf@val+1
  7974  00095C  0100               	movlb	0	; () banked
  7975  00095E  0E00               	movlw	0
  7976  000960  BFC7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7977  000962  0EFF               	movlw	-1
  7978  000964  6FC8               	movwf	(sprintf@val+2)& (0+255),b
  7979  000966  6FC9               	movwf	(sprintf@val+3)& (0+255),b
  7980                           
  7981                           ; BSR set to: 0
  7982  000968  0E02               	movlw	2
  7983  00096A  0100               	movlb	0	; () banked
  7984  00096C  27BC               	addwf	sprintf@ap& (0+255),f,b
  7985  00096E  0E00               	movlw	0
  7986  000970  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;doprnt.c: 1261: if((long)val < 0) {
  7990  000972  0100               	movlb	0	; () banked
  7991  000974  AFC9               	btfss	(sprintf@val+3)& (0+255),7,b
  7992  000976  D00C               	goto	l5535
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;doprnt.c: 1262: flag |= 0x03;
  7996  000978  0E03               	movlw	3
  7997  00097A  0100               	movlb	0	; () banked
  7998  00097C  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;doprnt.c: 1263: val = -val;
  8002  00097E  0100               	movlb	0	; () banked
  8003  000980  1FC9               	comf	(sprintf@val+3)& (0+255),f,b
  8004  000982  1FC8               	comf	(sprintf@val+2)& (0+255),f,b
  8005  000984  1FC7               	comf	(sprintf@val+1)& (0+255),f,b
  8006  000986  6DC6               	negf	sprintf@val& (0+255),b
  8007  000988  0E00               	movlw	0
  8008  00098A  23C7               	addwfc	(sprintf@val+1)& (0+255),f,b
  8009  00098C  23C8               	addwfc	(sprintf@val+2)& (0+255),f,b
  8010  00098E  23C9               	addwfc	(sprintf@val+3)& (0+255),f,b
  8011  000990                     l5535:
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;doprnt.c: 1264: }
  8015                           ;doprnt.c: 1266: }
  8016                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8017  000990  0100               	movlb	0	; () banked
  8018  000992  51CF               	movf	sprintf@prec& (0+255),w,b
  8019  000994  0100               	movlb	0	; () banked
  8020  000996  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8021  000998  A4D8               	btfss	status,2,c
  8022  00099A  D00D               	goto	l5541
  8023                           
  8024                           ; BSR set to: 0
  8025  00099C  0100               	movlb	0	; () banked
  8026  00099E  51C6               	movf	sprintf@val& (0+255),w,b
  8027  0009A0  0100               	movlb	0	; () banked
  8028  0009A2  11C7               	iorwf	(sprintf@val+1)& (0+255),w,b
  8029  0009A4  0100               	movlb	0	; () banked
  8030  0009A6  11C8               	iorwf	(sprintf@val+2)& (0+255),w,b
  8031  0009A8  0100               	movlb	0	; () banked
  8032  0009AA  11C9               	iorwf	(sprintf@val+3)& (0+255),w,b
  8033  0009AC  A4D8               	btfss	status,2,c
  8034  0009AE  D003               	goto	l5541
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;doprnt.c: 1291: prec++;
  8038  0009B0  0100               	movlb	0	; () banked
  8039  0009B2  4BCF               	infsnz	sprintf@prec& (0+255),f,b
  8040  0009B4  2BD0               	incf	(sprintf@prec+1)& (0+255),f,b
  8041  0009B6                     l5541:
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8045  0009B6  0E01               	movlw	1
  8046  0009B8  0100               	movlb	0	; () banked
  8047  0009BA  6FD1               	movwf	sprintf@c& (0+255),b
  8048  0009BC                     l5543:
  8049                           
  8050                           ; BSR set to: 0
  8051  0009BC  0E0A               	movlw	10
  8052  0009BE  0100               	movlb	0	; () banked
  8053  0009C0  19D1               	xorwf	sprintf@c& (0+255),w,b
  8054  0009C2  B4D8               	btfsc	status,2,c
  8055  0009C4  D01E               	goto	l5555
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;doprnt.c: 1306: if(val < dpowers[c])
  8059                           
  8060                           ; BSR set to: 0
  8061                           
  8062                           ; BSR set to: 0
  8063  0009C6  0100               	movlb	0	; () banked
  8064  0009C8  51D1               	movf	sprintf@c& (0+255),w,b
  8065  0009CA  0D04               	mullw	4
  8066  0009CC  0EF5               	movlw	low _dpowers
  8067  0009CE  24F3               	addwf	prodl,w,c
  8068  0009D0  6EF6               	movwf	tblptrl,c
  8069  0009D2  0E7E               	movlw	high _dpowers
  8070  0009D4  20F4               	addwfc	prodh,w,c
  8071  0009D6  6EF7               	movwf	tblptrh,c
  8072  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8073  0009D8                     	endif
  8074  0009D8  0009               	tblrd		*+
  8075  0009DA  50F5               	movf	tablat,w,c
  8076  0009DC  0100               	movlb	0	; () banked
  8077  0009DE  5DC6               	subwf	sprintf@val& (0+255),w,b
  8078  0009E0  0009               	tblrd		*+
  8079  0009E2  50F5               	movf	tablat,w,c
  8080  0009E4  0100               	movlb	0	; () banked
  8081  0009E6  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  8082  0009E8  0009               	tblrd		*+
  8083  0009EA  50F5               	movf	tablat,w,c
  8084  0009EC  0100               	movlb	0	; () banked
  8085  0009EE  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  8086  0009F0  0009               	tblrd		*+
  8087  0009F2  50F5               	movf	tablat,w,c
  8088  0009F4  0100               	movlb	0	; () banked
  8089  0009F6  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  8090  0009F8  A0D8               	btfss	status,0,c
  8091  0009FA  D003               	goto	l5555
  8092                           
  8093                           ; BSR set to: 0
  8094                           
  8095                           ; BSR set to: 0
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;doprnt.c: 1307: break;
  8099  0009FC  0100               	movlb	0	; () banked
  8100  0009FE  2BD1               	incf	sprintf@c& (0+255),f,b
  8101  000A00  D7DD               	goto	l5543
  8102  000A02                     l5555:
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;doprnt.c: 1339: if(c < prec)
  8106  000A02  0E80               	movlw	128
  8107  000A04  0100               	movlb	0	; () banked
  8108  000A06  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8109  000A08  0E7F               	movlw	127
  8110  000A0A  0100               	movlb	0	; () banked
  8111  000A0C  6FB3               	movwf	??_sprintf& (0+255),b
  8112  000A0E  0100               	movlb	0	; () banked
  8113  000A10  51CF               	movf	sprintf@prec& (0+255),w,b
  8114  000A12  0100               	movlb	0	; () banked
  8115  000A14  5DD1               	subwf	sprintf@c& (0+255),w,b
  8116  000A16  0100               	movlb	0	; () banked
  8117  000A18  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8118  000A1A  0A80               	xorlw	128
  8119  000A1C  0100               	movlb	0	; () banked
  8120  000A1E  59B3               	subwfb	??_sprintf& (0+255),w,b
  8121  000A20  B0D8               	btfsc	status,0,c
  8122  000A22  D003               	goto	l5559
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;doprnt.c: 1340: c = prec;
  8126  000A24  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  8127  000A28  D018               	goto	l5563
  8128  000A2A                     l5559:
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;doprnt.c: 1341: else if(prec < c)
  8132  000A2A  0100               	movlb	0	; () banked
  8133  000A2C  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8134  000A2E  0A80               	xorlw	128
  8135  000A30  0100               	movlb	0	; () banked
  8136  000A32  6FB3               	movwf	??_sprintf& (0+255),b
  8137  000A34  0100               	movlb	0	; () banked
  8138  000A36  51D1               	movf	sprintf@c& (0+255),w,b
  8139  000A38  0100               	movlb	0	; () banked
  8140  000A3A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8141  000A3C  0E80               	movlw	128
  8142  000A3E  0100               	movlb	0	; () banked
  8143  000A40  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8144  000A42  0E7F               	movlw	127
  8145  000A44  0100               	movlb	0	; () banked
  8146  000A46  59B3               	subwfb	??_sprintf& (0+255),w,b
  8147  000A48  B0D8               	btfsc	status,0,c
  8148  000A4A  D007               	goto	l5563
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;doprnt.c: 1342: prec = c;
  8152  000A4C  0100               	movlb	0	; () banked
  8153  000A4E  51D1               	movf	sprintf@c& (0+255),w,b
  8154  000A50  0100               	movlb	0	; () banked
  8155  000A52  6FCF               	movwf	sprintf@prec& (0+255),b
  8156  000A54  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
  8157  000A56  BFCF               	btfsc	sprintf@prec& (0+255),7,b
  8158  000A58  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8159  000A5A                     l5563:
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8163  000A5A  0100               	movlb	0	; () banked
  8164  000A5C  51C0               	movf	sprintf@width& (0+255),w,b
  8165  000A5E  0100               	movlb	0	; () banked
  8166  000A60  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8167  000A62  B4D8               	btfsc	status,2,c
  8168  000A64  D014               	goto	l5569
  8169                           
  8170                           ; BSR set to: 0
  8171  000A66  0E03               	movlw	3
  8172  000A68  0100               	movlb	0	; () banked
  8173  000A6A  15BE               	andwf	sprintf@flag& (0+255),w,b
  8174  000A6C  0100               	movlb	0	; () banked
  8175  000A6E  6FB3               	movwf	??_sprintf& (0+255),b
  8176  000A70  0E00               	movlw	0
  8177  000A72  0100               	movlb	0	; () banked
  8178  000A74  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8179  000A76  0100               	movlb	0	; () banked
  8180  000A78  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8181  000A7A  0100               	movlb	0	; () banked
  8182  000A7C  51B3               	movf	??_sprintf& (0+255),w,b
  8183  000A7E  0100               	movlb	0	; () banked
  8184  000A80  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8185  000A82  B4D8               	btfsc	status,2,c
  8186  000A84  D004               	goto	l5569
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;doprnt.c: 1346: width--;
  8190  000A86  0100               	movlb	0	; () banked
  8191  000A88  07C0               	decf	sprintf@width& (0+255),f,b
  8192  000A8A  A0D8               	btfss	status,0,c
  8193  000A8C  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8194  000A8E                     l5569:
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8198  000A8E  0100               	movlb	0	; () banked
  8199  000A90  ADBF               	btfss	(sprintf@flag+1)& (0+255),6,b
  8200  000A92  D01E               	goto	l5577
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;doprnt.c: 1349: if(width > prec)
  8204  000A94  0100               	movlb	0	; () banked
  8205  000A96  51C0               	movf	sprintf@width& (0+255),w,b
  8206  000A98  0100               	movlb	0	; () banked
  8207  000A9A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8208  000A9C  0100               	movlb	0	; () banked
  8209  000A9E  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8210  000AA0  0A80               	xorlw	128
  8211  000AA2  0100               	movlb	0	; () banked
  8212  000AA4  6FB3               	movwf	??_sprintf& (0+255),b
  8213  000AA6  0100               	movlb	0	; () banked
  8214  000AA8  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8215  000AAA  0A80               	xorlw	128
  8216  000AAC  0100               	movlb	0	; () banked
  8217  000AAE  59B3               	subwfb	??_sprintf& (0+255),w,b
  8218  000AB0  B0D8               	btfsc	status,0,c
  8219  000AB2  D009               	goto	l5575
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;doprnt.c: 1350: width -= prec;
  8223  000AB4  0100               	movlb	0	; () banked
  8224  000AB6  51CF               	movf	sprintf@prec& (0+255),w,b
  8225  000AB8  0100               	movlb	0	; () banked
  8226  000ABA  5FC0               	subwf	sprintf@width& (0+255),f,b
  8227  000ABC  0100               	movlb	0	; () banked
  8228  000ABE  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8229  000AC0  0100               	movlb	0	; () banked
  8230  000AC2  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8231  000AC4  D005               	goto	l5577
  8232  000AC6                     l5575:
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;doprnt.c: 1351: else
  8236                           ;doprnt.c: 1352: width = 0;
  8237  000AC6  0E00               	movlw	0
  8238  000AC8  0100               	movlb	0	; () banked
  8239  000ACA  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8240  000ACC  0E00               	movlw	0
  8241  000ACE  6FC0               	movwf	sprintf@width& (0+255),b
  8242  000AD0                     l5577:
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;doprnt.c: 1353: }
  8246                           ;doprnt.c: 1381: if(width > c)
  8247  000AD0  0E80               	movlw	128
  8248  000AD2  0100               	movlb	0	; () banked
  8249  000AD4  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8250  000AD6  0E7F               	movlw	127
  8251  000AD8  0100               	movlb	0	; () banked
  8252  000ADA  6FB3               	movwf	??_sprintf& (0+255),b
  8253  000ADC  0100               	movlb	0	; () banked
  8254  000ADE  51C0               	movf	sprintf@width& (0+255),w,b
  8255  000AE0  0100               	movlb	0	; () banked
  8256  000AE2  5DD1               	subwf	sprintf@c& (0+255),w,b
  8257  000AE4  0100               	movlb	0	; () banked
  8258  000AE6  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8259  000AE8  0A80               	xorlw	128
  8260  000AEA  0100               	movlb	0	; () banked
  8261  000AEC  59B3               	subwfb	??_sprintf& (0+255),w,b
  8262  000AEE  B0D8               	btfsc	status,0,c
  8263  000AF0  D00B               	goto	l5581
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;doprnt.c: 1382: width -= c;
  8267  000AF2  0100               	movlb	0	; () banked
  8268  000AF4  51D1               	movf	sprintf@c& (0+255),w,b
  8269  000AF6  0100               	movlb	0	; () banked
  8270  000AF8  5FC0               	subwf	sprintf@width& (0+255),f,b
  8271  000AFA  0E00               	movlw	0
  8272  000AFC  0100               	movlb	0	; () banked
  8273  000AFE  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8274  000B00  0EFF               	movlw	255
  8275  000B02  0100               	movlb	0	; () banked
  8276  000B04  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8277  000B06  D005               	goto	l5583
  8278  000B08                     l5581:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;doprnt.c: 1383: else
  8282                           ;doprnt.c: 1384: width = 0;
  8283  000B08  0E00               	movlw	0
  8284  000B0A  0100               	movlb	0	; () banked
  8285  000B0C  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8286  000B0E  0E00               	movlw	0
  8287  000B10  6FC0               	movwf	sprintf@width& (0+255),b
  8288  000B12                     l5583:
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;doprnt.c: 1422: {
  8292                           ;doprnt.c: 1424: if(width
  8293                           ;doprnt.c: 1428: )
  8294  000B12  0100               	movlb	0	; () banked
  8295  000B14  51C0               	movf	sprintf@width& (0+255),w,b
  8296  000B16  0100               	movlb	0	; () banked
  8297  000B18  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8298  000B1A  B4D8               	btfsc	status,2,c
  8299  000B1C  D013               	goto	l5591
  8300  000B1E                     l5585:
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8304  000B1E  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8305  000B22  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8306  000B26  0E20               	movlw	32
  8307  000B28  6EDF               	movwf	indf2,c
  8308                           
  8309                           ; BSR set to: 0
  8310  000B2A  0100               	movlb	0	; () banked
  8311  000B2C  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8312  000B2E  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;doprnt.c: 1431: while(--width);
  8316  000B30  0100               	movlb	0	; () banked
  8317  000B32  07C0               	decf	sprintf@width& (0+255),f,b
  8318  000B34  A0D8               	btfss	status,0,c
  8319  000B36  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8320  000B38  0100               	movlb	0	; () banked
  8321  000B3A  51C0               	movf	sprintf@width& (0+255),w,b
  8322  000B3C  0100               	movlb	0	; () banked
  8323  000B3E  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8324  000B40  A4D8               	btfss	status,2,c
  8325  000B42  D7ED               	goto	l5585
  8326  000B44                     l5591:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;doprnt.c: 1438: if(flag & 0x03)
  8330  000B44  0E03               	movlw	3
  8331  000B46  0100               	movlb	0	; () banked
  8332  000B48  15BE               	andwf	sprintf@flag& (0+255),w,b
  8333  000B4A  0100               	movlb	0	; () banked
  8334  000B4C  6FB3               	movwf	??_sprintf& (0+255),b
  8335  000B4E  0E00               	movlw	0
  8336  000B50  0100               	movlb	0	; () banked
  8337  000B52  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8338  000B54  0100               	movlb	0	; () banked
  8339  000B56  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8340  000B58  0100               	movlb	0	; () banked
  8341  000B5A  51B3               	movf	??_sprintf& (0+255),w,b
  8342  000B5C  0100               	movlb	0	; () banked
  8343  000B5E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8344  000B60  B4D8               	btfsc	status,2,c
  8345  000B62  D051               	goto	l5603
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8349  000B64  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8350  000B68  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8351  000B6C  0E2D               	movlw	45
  8352  000B6E  6EDF               	movwf	indf2,c
  8353  000B70  D047               	goto	l5601
  8354  000B72                     l5597:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;doprnt.c: 1478: {
  8358                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8359  000B72  C0CF  F0B3         	movff	sprintf@prec,??_sprintf
  8360  000B76  C0D0  F0B4         	movff	sprintf@prec+1,??_sprintf+1
  8361  000B7A  0100               	movlb	0	; () banked
  8362  000B7C  90D8               	bcf	status,0,c
  8363  000B7E  37B3               	rlcf	??_sprintf& (0+255),f,b
  8364  000B80  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8365  000B82  0100               	movlb	0	; () banked
  8366  000B84  90D8               	bcf	status,0,c
  8367  000B86  37B3               	rlcf	??_sprintf& (0+255),f,b
  8368  000B88  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8369  000B8A  0EF5               	movlw	low _dpowers
  8370  000B8C  0100               	movlb	0	; () banked
  8371  000B8E  25B3               	addwf	??_sprintf& (0+255),w,b
  8372  000B90  6EF6               	movwf	tblptrl,c
  8373  000B92  0E7E               	movlw	high _dpowers
  8374  000B94  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8375  000B96  6EF7               	movwf	tblptrh,c
  8376  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8377  000B98                     	endif
  8378  000B98  0009               	tblrd		*+
  8379  000B9A  CFF5 F075          	movff	tablat,___lldiv@divisor
  8380  000B9E  0009               	tblrd		*+
  8381  000BA0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8382  000BA4  0009               	tblrd		*+
  8383  000BA6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8384  000BAA  000A               	tblrd		*-
  8385  000BAC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8386  000BB0  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  8387  000BB4  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8388  000BB8  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8389  000BBC  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8390  000BC0  EC43  F019         	call	___lldiv	;wreg free
  8391  000BC4  C071  F079         	movff	?___lldiv,___llmod@dividend
  8392  000BC8  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8393  000BCC  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8394  000BD0  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8395  000BD4  0E0A               	movlw	10
  8396  000BD6  0100               	movlb	0	; () banked
  8397  000BD8  6F7D               	movwf	___llmod@divisor& (0+255),b
  8398  000BDA  0E00               	movlw	0
  8399  000BDC  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8400  000BDE  0E00               	movlw	0
  8401  000BE0  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8402  000BE2  0E00               	movlw	0
  8403  000BE4  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8404  000BE6  EC38  F01A         	call	___llmod	;wreg free
  8405  000BEA  0100               	movlb	0	; () banked
  8406  000BEC  5179               	movf	?___llmod& (0+255),w,b
  8407  000BEE  0F30               	addlw	48
  8408  000BF0  0100               	movlb	0	; () banked
  8409  000BF2  6FD1               	movwf	sprintf@c& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;doprnt.c: 1523: }
  8413                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8414  000BF4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8415  000BF8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8416  000BFC  C0D1  FFDF         	movff	sprintf@c,indf2
  8417  000C00                     l5601:
  8418                           
  8419                           ; BSR set to: 0
  8420  000C00  0100               	movlb	0	; () banked
  8421  000C02  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8422  000C04  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8423  000C06                     l5603:
  8424                           
  8425                           ; BSR set to: 0
  8426  000C06  0100               	movlb	0	; () banked
  8427  000C08  07CF               	decf	sprintf@prec& (0+255),f,b
  8428  000C0A  A0D8               	btfss	status,0,c
  8429  000C0C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8430  000C0E  0100               	movlb	0	; () banked
  8431  000C10  29CF               	incf	sprintf@prec& (0+255),w,b
  8432  000C12  E1AF               	bnz	l5597
  8433  000C14  0100               	movlb	0	; () banked
  8434  000C16  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
  8435  000C18  A4D8               	btfss	status,2,c
  8436  000C1A  D7AB               	goto	l5597
  8437  000C1C                     l5605:
  8438                           
  8439                           ; BSR set to: 0
  8440  000C1C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  8441  000C20  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  8442  000C24  0100               	movlb	0	; () banked
  8443  000C26  4BA7               	infsnz	sprintf@f& (0+255),f,b
  8444  000C28  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  8445  000C2A                     	if	0	;tblptru may be non-zero
  8446  000C2A                     	endif
  8447  000C2A                     	if	0	;tblptru may be non-zero
  8448  000C2A                     	endif
  8449  000C2A  0008               	tblrd		*
  8450  000C2C  CFF5 F0D1          	movff	tablat,sprintf@c
  8451  000C30  0100               	movlb	0	; () banked
  8452  000C32  51D1               	movf	sprintf@c& (0+255),w,b
  8453  000C34  A4D8               	btfss	status,2,c
  8454  000C36  EF5D  F000         	goto	l5319
  8455  000C3A                     l5607:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;doprnt.c: 1538: *sp = 0;
  8459  000C3A  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8460  000C3E  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8461  000C42  0E00               	movlw	0
  8462  000C44  6EDF               	movwf	indf2,c
  8463  000C46  0012               	return	
  8464  000C48                     __end_of_sprintf:
  8465                           	opt stack 0
  8466                           tblptru	equ	0xFF8
  8467                           tblptrh	equ	0xFF7
  8468                           tblptrl	equ	0xFF6
  8469                           tablat	equ	0xFF5
  8470                           prodh	equ	0xFF4
  8471                           prodl	equ	0xFF3
  8472                           indf0	equ	0xFEF
  8473                           postinc0	equ	0xFEE
  8474                           fsr0h	equ	0xFEA
  8475                           fsr0l	equ	0xFE9
  8476                           wreg	equ	0xFE8
  8477                           indf1	equ	0xFE7
  8478                           postdec1	equ	0xFE5
  8479                           fsr1h	equ	0xFE2
  8480                           fsr1l	equ	0xFE1
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           fsr2h	equ	0xFDA
  8485                           fsr2l	equ	0xFD9
  8486                           status	equ	0xFD8
  8487                           
  8488 ;; *************** function _scale *****************
  8489 ;; Defined at:
  8490 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  scl             1    wreg     char 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;  scl             1   47[BANK0 ] char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  3   41[BANK0 ] char 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8504 ;;      Params:         0       3       0       0       0       0       0
  8505 ;;      Locals:         0       4       0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0
  8507 ;;      Totals:         0       7       0       0       0       0       0
  8508 ;;Total ram usage:        7 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    5
  8511 ;; This function calls:
  8512 ;;		___awdiv
  8513 ;;		___awmod
  8514 ;;		___ftmul
  8515 ;;		___wmul
  8516 ;; This function is called by:
  8517 ;;		_sprintf
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text32
  8522  0013EA                     __ptext32:
  8523                           	opt stack 0
  8524  0013EA                     _scale:
  8525                           	opt stack 22
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;incstack = 0
  8529                           ;scale@scl stored from wreg
  8530  0013EA  0100               	movlb	0	; () banked
  8531  0013EC  6F8F               	movwf	scale@scl& (0+255),b
  8532                           
  8533                           ;doprnt.c: 428: if(scl < 0) {
  8534  0013EE  0100               	movlb	0	; () banked
  8535  0013F0  AF8F               	btfss	scale@scl& (0+255),7,b
  8536  0013F2  D12A               	goto	l4991
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;doprnt.c: 429: scl = -scl;
  8540  0013F4  0100               	movlb	0	; () banked
  8541  0013F6  6D8F               	negf	scale@scl& (0+255),b
  8542                           
  8543                           ;doprnt.c: 430: if(scl>=110)
  8544  0013F8  0100               	movlb	0	; () banked
  8545  0013FA  518F               	movf	scale@scl& (0+255),w,b
  8546  0013FC  0A80               	xorlw	128
  8547  0013FE  0F12               	addlw	-238
  8548  001400  A0D8               	btfss	status,0,c
  8549  001402  D0AC               	goto	l4981
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8553  001404  0E00               	movlw	0
  8554  001406  0100               	movlb	0	; () banked
  8555  001408  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8556  00140A  0E03               	movlw	3
  8557  00140C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8558  00140E  0E00               	movlw	0
  8559  001410  0100               	movlb	0	; () banked
  8560  001412  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8561  001414  0E0A               	movlw	10
  8562  001416  6F77               	movwf	___awdiv@divisor& (0+255),b
  8563  001418  0E00               	movlw	0
  8564  00141A  0100               	movlb	0	; () banked
  8565  00141C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8566  00141E  0E64               	movlw	100
  8567  001420  6F73               	movwf	___awmod@divisor& (0+255),b
  8568  001422  0100               	movlb	0	; () banked
  8569  001424  518F               	movf	scale@scl& (0+255),w,b
  8570  001426  0100               	movlb	0	; () banked
  8571  001428  6F71               	movwf	___awmod@dividend& (0+255),b
  8572  00142A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8573  00142C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8574  00142E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8575  001430  ECEE  F019         	call	___awmod	;wreg free
  8576  001434  C071  F075         	movff	?___awmod,___awdiv@dividend
  8577  001438  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8578  00143C  EC9B  F019         	call	___awdiv	;wreg free
  8579  001440  0E09               	movlw	9
  8580  001442  0100               	movlb	0	; () banked
  8581  001444  2575               	addwf	?___awdiv& (0+255),w,b
  8582  001446  0100               	movlb	0	; () banked
  8583  001448  6F79               	movwf	___wmul@multiplier& (0+255),b
  8584  00144A  0E00               	movlw	0
  8585  00144C  0100               	movlb	0	; () banked
  8586  00144E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8587  001450  0100               	movlb	0	; () banked
  8588  001452  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8589  001454  EC65  F01D         	call	___wmul	;wreg free
  8590  001458  0E44               	movlw	low __npowers_
  8591  00145A  0100               	movlb	0	; () banked
  8592  00145C  2579               	addwf	?___wmul& (0+255),w,b
  8593  00145E  6EF6               	movwf	tblptrl,c
  8594  001460  0E7F               	movlw	high __npowers_
  8595  001462  0100               	movlb	0	; () banked
  8596  001464  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8597  001466  6EF7               	movwf	tblptrh,c
  8598  001468                     	if	0	;There are less than 3 active tblptr bytes
  8599  001468                     	endif
  8600  001468  0009               	tblrd		*+
  8601  00146A  CFF5 F080          	movff	tablat,___ftmul@f2
  8602  00146E  0009               	tblrd		*+
  8603  001470  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8604  001474  000A               	tblrd		*-
  8605  001476  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8606  00147A  0E00               	movlw	0
  8607  00147C  0100               	movlb	0	; () banked
  8608  00147E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8609  001480  0E64               	movlw	100
  8610  001482  6F77               	movwf	___awdiv@divisor& (0+255),b
  8611  001484  0100               	movlb	0	; () banked
  8612  001486  518F               	movf	scale@scl& (0+255),w,b
  8613  001488  0100               	movlb	0	; () banked
  8614  00148A  6F75               	movwf	___awdiv@dividend& (0+255),b
  8615  00148C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8616  00148E  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8617  001490  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8618  001492  EC9B  F019         	call	___awdiv	;wreg free
  8619  001496  0E12               	movlw	18
  8620  001498  0100               	movlb	0	; () banked
  8621  00149A  2575               	addwf	?___awdiv& (0+255),w,b
  8622  00149C  0100               	movlb	0	; () banked
  8623  00149E  6F79               	movwf	___wmul@multiplier& (0+255),b
  8624  0014A0  0E00               	movlw	0
  8625  0014A2  0100               	movlb	0	; () banked
  8626  0014A4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8627  0014A6  0100               	movlb	0	; () banked
  8628  0014A8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8629  0014AA  0E00               	movlw	0
  8630  0014AC  0100               	movlb	0	; () banked
  8631  0014AE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8632  0014B0  0E03               	movlw	3
  8633  0014B2  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8634  0014B4  EC65  F01D         	call	___wmul	;wreg free
  8635  0014B8  0E44               	movlw	low __npowers_
  8636  0014BA  0100               	movlb	0	; () banked
  8637  0014BC  2579               	addwf	?___wmul& (0+255),w,b
  8638  0014BE  6EF6               	movwf	tblptrl,c
  8639  0014C0  0E7F               	movlw	high __npowers_
  8640  0014C2  0100               	movlb	0	; () banked
  8641  0014C4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8642  0014C6  6EF7               	movwf	tblptrh,c
  8643  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8644  0014C8                     	endif
  8645  0014C8  0009               	tblrd		*+
  8646  0014CA  CFF5 F07D          	movff	tablat,___ftmul@f1
  8647  0014CE  0009               	tblrd		*+
  8648  0014D0  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8649  0014D4  000A               	tblrd		*-
  8650  0014D6  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8651  0014DA  ECD0  F014         	call	___ftmul	;wreg free
  8652  0014DE  C07D  F08C         	movff	?___ftmul,_scale$2171
  8653  0014E2  C07E  F08D         	movff	?___ftmul+1,_scale$2171+1
  8654  0014E6  C07F  F08E         	movff	?___ftmul+2,_scale$2171+2
  8655                           
  8656                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8657  0014EA  C08C  F07D         	movff	_scale$2171,___ftmul@f1
  8658  0014EE  C08D  F07E         	movff	_scale$2171+1,___ftmul@f1+1
  8659  0014F2  C08E  F07F         	movff	_scale$2171+2,___ftmul@f1+2
  8660  0014F6  0E00               	movlw	0
  8661  0014F8  0100               	movlb	0	; () banked
  8662  0014FA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8663  0014FC  0E03               	movlw	3
  8664  0014FE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8665  001500  0E00               	movlw	0
  8666  001502  0100               	movlb	0	; () banked
  8667  001504  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8668  001506  0E0A               	movlw	10
  8669  001508  6F73               	movwf	___awmod@divisor& (0+255),b
  8670  00150A  0100               	movlb	0	; () banked
  8671  00150C  518F               	movf	scale@scl& (0+255),w,b
  8672  00150E  0100               	movlb	0	; () banked
  8673  001510  6F71               	movwf	___awmod@dividend& (0+255),b
  8674  001512  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8675  001514  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8676  001516  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8677  001518  ECEE  F019         	call	___awmod	;wreg free
  8678  00151C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8679  001520  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8680  001524  EC65  F01D         	call	___wmul	;wreg free
  8681  001528  0E44               	movlw	low __npowers_
  8682  00152A  0100               	movlb	0	; () banked
  8683  00152C  2579               	addwf	?___wmul& (0+255),w,b
  8684  00152E  6EF6               	movwf	tblptrl,c
  8685  001530  0E7F               	movlw	high __npowers_
  8686  001532  0100               	movlb	0	; () banked
  8687  001534  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8688  001536  6EF7               	movwf	tblptrh,c
  8689  001538                     	if	0	;There are less than 3 active tblptr bytes
  8690  001538                     	endif
  8691  001538  0009               	tblrd		*+
  8692  00153A  CFF5 F080          	movff	tablat,___ftmul@f2
  8693  00153E  0009               	tblrd		*+
  8694  001540  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8695  001544  000A               	tblrd		*-
  8696  001546  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8697  00154A  ECD0  F014         	call	___ftmul	;wreg free
  8698  00154E  C07D  F089         	movff	?___ftmul,?_scale
  8699  001552  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8700  001556  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8701  00155A  0012               	return	
  8702  00155C                     l4981:
  8703                           
  8704                           ;doprnt.c: 432: else if(scl > 10)
  8705  00155C  0100               	movlb	0	; () banked
  8706  00155E  518F               	movf	scale@scl& (0+255),w,b
  8707  001560  0A80               	xorlw	128
  8708  001562  0F75               	addlw	-139
  8709  001564  A0D8               	btfss	status,0,c
  8710  001566  D05D               	goto	l4987
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8714  001568  0E00               	movlw	0
  8715  00156A  0100               	movlb	0	; () banked
  8716  00156C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8717  00156E  0E0A               	movlw	10
  8718  001570  6F77               	movwf	___awdiv@divisor& (0+255),b
  8719  001572  0100               	movlb	0	; () banked
  8720  001574  518F               	movf	scale@scl& (0+255),w,b
  8721  001576  0100               	movlb	0	; () banked
  8722  001578  6F75               	movwf	___awdiv@dividend& (0+255),b
  8723  00157A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8724  00157C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8725  00157E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8726  001580  EC9B  F019         	call	___awdiv	;wreg free
  8727  001584  0E09               	movlw	9
  8728  001586  0100               	movlb	0	; () banked
  8729  001588  2575               	addwf	?___awdiv& (0+255),w,b
  8730  00158A  0100               	movlb	0	; () banked
  8731  00158C  6F79               	movwf	___wmul@multiplier& (0+255),b
  8732  00158E  0E00               	movlw	0
  8733  001590  0100               	movlb	0	; () banked
  8734  001592  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8735  001594  0100               	movlb	0	; () banked
  8736  001596  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8737  001598  0E00               	movlw	0
  8738  00159A  0100               	movlb	0	; () banked
  8739  00159C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8740  00159E  0E03               	movlw	3
  8741  0015A0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8742  0015A2  EC65  F01D         	call	___wmul	;wreg free
  8743  0015A6  0E44               	movlw	low __npowers_
  8744  0015A8  0100               	movlb	0	; () banked
  8745  0015AA  2579               	addwf	?___wmul& (0+255),w,b
  8746  0015AC  6EF6               	movwf	tblptrl,c
  8747  0015AE  0E7F               	movlw	high __npowers_
  8748  0015B0  0100               	movlb	0	; () banked
  8749  0015B2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8750  0015B4  6EF7               	movwf	tblptrh,c
  8751  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8752  0015B6                     	endif
  8753  0015B6  0009               	tblrd		*+
  8754  0015B8  CFF5 F07D          	movff	tablat,___ftmul@f1
  8755  0015BC  0009               	tblrd		*+
  8756  0015BE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8757  0015C2  000A               	tblrd		*-
  8758  0015C4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8759  0015C8  0E00               	movlw	0
  8760  0015CA  0100               	movlb	0	; () banked
  8761  0015CC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8762  0015CE  0E03               	movlw	3
  8763  0015D0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8764  0015D2  0E00               	movlw	0
  8765  0015D4  0100               	movlb	0	; () banked
  8766  0015D6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8767  0015D8  0E0A               	movlw	10
  8768  0015DA  6F73               	movwf	___awmod@divisor& (0+255),b
  8769  0015DC  0100               	movlb	0	; () banked
  8770  0015DE  518F               	movf	scale@scl& (0+255),w,b
  8771  0015E0  0100               	movlb	0	; () banked
  8772  0015E2  6F71               	movwf	___awmod@dividend& (0+255),b
  8773  0015E4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8774  0015E6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8775  0015E8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8776  0015EA  ECEE  F019         	call	___awmod	;wreg free
  8777  0015EE  C071  F079         	movff	?___awmod,___wmul@multiplier
  8778  0015F2  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8779  0015F6  EC65  F01D         	call	___wmul	;wreg free
  8780  0015FA  0E44               	movlw	low __npowers_
  8781  0015FC  0100               	movlb	0	; () banked
  8782  0015FE  2579               	addwf	?___wmul& (0+255),w,b
  8783  001600  6EF6               	movwf	tblptrl,c
  8784  001602  0E7F               	movlw	high __npowers_
  8785  001604  0100               	movlb	0	; () banked
  8786  001606  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8787  001608  6EF7               	movwf	tblptrh,c
  8788  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8789  00160A                     	endif
  8790  00160A  0009               	tblrd		*+
  8791  00160C  CFF5 F080          	movff	tablat,___ftmul@f2
  8792  001610  0009               	tblrd		*+
  8793  001612  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8794  001616  000A               	tblrd		*-
  8795  001618  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8796  00161C  ECD0  F014         	call	___ftmul	;wreg free
  8797  001620  D796               	goto	L6
  8798  001622                     l4987:
  8799                           
  8800                           ;doprnt.c: 434: return _npowers_[scl];
  8801  001622  0100               	movlb	0	; () banked
  8802  001624  518F               	movf	scale@scl& (0+255),w,b
  8803  001626  0D03               	mullw	3
  8804  001628  0E44               	movlw	low __npowers_
  8805  00162A  24F3               	addwf	prodl,w,c
  8806  00162C  6EF6               	movwf	tblptrl,c
  8807  00162E  0E7F               	movlw	high __npowers_
  8808  001630  20F4               	addwfc	prodh,w,c
  8809  001632  6EF7               	movwf	tblptrh,c
  8810  001634                     	if	0	;There are less than 3 active tblptr bytes
  8811  001634                     	endif
  8812  001634  0009               	tblrd		*+
  8813  001636  CFF5 F089          	movff	tablat,?_scale
  8814  00163A  0009               	tblrd		*+
  8815  00163C  CFF5 F08A          	movff	tablat,?_scale+1
  8816  001640  000A               	tblrd		*-
  8817  001642  CFF5 F08B          	movff	tablat,?_scale+2
  8818                           
  8819                           ; BSR set to: 0
  8820  001646  0012               	return	
  8821  001648                     l4991:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;doprnt.c: 435: }
  8825                           ;doprnt.c: 436: if(scl>=110)
  8826  001648  0100               	movlb	0	; () banked
  8827  00164A  518F               	movf	scale@scl& (0+255),w,b
  8828  00164C  0A80               	xorlw	128
  8829  00164E  0F12               	addlw	-238
  8830  001650  A0D8               	btfss	status,0,c
  8831  001652  D0AC               	goto	l4999
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8835  001654  0E00               	movlw	0
  8836  001656  0100               	movlb	0	; () banked
  8837  001658  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8838  00165A  0E03               	movlw	3
  8839  00165C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8840  00165E  0E00               	movlw	0
  8841  001660  0100               	movlb	0	; () banked
  8842  001662  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8843  001664  0E0A               	movlw	10
  8844  001666  6F77               	movwf	___awdiv@divisor& (0+255),b
  8845  001668  0E00               	movlw	0
  8846  00166A  0100               	movlb	0	; () banked
  8847  00166C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8848  00166E  0E64               	movlw	100
  8849  001670  6F73               	movwf	___awmod@divisor& (0+255),b
  8850  001672  0100               	movlb	0	; () banked
  8851  001674  518F               	movf	scale@scl& (0+255),w,b
  8852  001676  0100               	movlb	0	; () banked
  8853  001678  6F71               	movwf	___awmod@dividend& (0+255),b
  8854  00167A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8855  00167C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8856  00167E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8857  001680  ECEE  F019         	call	___awmod	;wreg free
  8858  001684  C071  F075         	movff	?___awmod,___awdiv@dividend
  8859  001688  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8860  00168C  EC9B  F019         	call	___awdiv	;wreg free
  8861  001690  0E09               	movlw	9
  8862  001692  0100               	movlb	0	; () banked
  8863  001694  2575               	addwf	?___awdiv& (0+255),w,b
  8864  001696  0100               	movlb	0	; () banked
  8865  001698  6F79               	movwf	___wmul@multiplier& (0+255),b
  8866  00169A  0E00               	movlw	0
  8867  00169C  0100               	movlb	0	; () banked
  8868  00169E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8869  0016A0  0100               	movlb	0	; () banked
  8870  0016A2  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8871  0016A4  EC65  F01D         	call	___wmul	;wreg free
  8872  0016A8  0E1D               	movlw	low __powers_
  8873  0016AA  0100               	movlb	0	; () banked
  8874  0016AC  2579               	addwf	?___wmul& (0+255),w,b
  8875  0016AE  6EF6               	movwf	tblptrl,c
  8876  0016B0  0E7F               	movlw	high __powers_
  8877  0016B2  0100               	movlb	0	; () banked
  8878  0016B4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8879  0016B6  6EF7               	movwf	tblptrh,c
  8880  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8881  0016B8                     	endif
  8882  0016B8  0009               	tblrd		*+
  8883  0016BA  CFF5 F080          	movff	tablat,___ftmul@f2
  8884  0016BE  0009               	tblrd		*+
  8885  0016C0  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8886  0016C4  000A               	tblrd		*-
  8887  0016C6  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8888  0016CA  0E00               	movlw	0
  8889  0016CC  0100               	movlb	0	; () banked
  8890  0016CE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8891  0016D0  0E64               	movlw	100
  8892  0016D2  6F77               	movwf	___awdiv@divisor& (0+255),b
  8893  0016D4  0100               	movlb	0	; () banked
  8894  0016D6  518F               	movf	scale@scl& (0+255),w,b
  8895  0016D8  0100               	movlb	0	; () banked
  8896  0016DA  6F75               	movwf	___awdiv@dividend& (0+255),b
  8897  0016DC  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8898  0016DE  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8899  0016E0  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8900  0016E2  EC9B  F019         	call	___awdiv	;wreg free
  8901  0016E6  0E12               	movlw	18
  8902  0016E8  0100               	movlb	0	; () banked
  8903  0016EA  2575               	addwf	?___awdiv& (0+255),w,b
  8904  0016EC  0100               	movlb	0	; () banked
  8905  0016EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  8906  0016F0  0E00               	movlw	0
  8907  0016F2  0100               	movlb	0	; () banked
  8908  0016F4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8909  0016F6  0100               	movlb	0	; () banked
  8910  0016F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8911  0016FA  0E00               	movlw	0
  8912  0016FC  0100               	movlb	0	; () banked
  8913  0016FE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8914  001700  0E03               	movlw	3
  8915  001702  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8916  001704  EC65  F01D         	call	___wmul	;wreg free
  8917  001708  0E1D               	movlw	low __powers_
  8918  00170A  0100               	movlb	0	; () banked
  8919  00170C  2579               	addwf	?___wmul& (0+255),w,b
  8920  00170E  6EF6               	movwf	tblptrl,c
  8921  001710  0E7F               	movlw	high __powers_
  8922  001712  0100               	movlb	0	; () banked
  8923  001714  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8924  001716  6EF7               	movwf	tblptrh,c
  8925  001718                     	if	0	;There are less than 3 active tblptr bytes
  8926  001718                     	endif
  8927  001718  0009               	tblrd		*+
  8928  00171A  CFF5 F07D          	movff	tablat,___ftmul@f1
  8929  00171E  0009               	tblrd		*+
  8930  001720  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8931  001724  000A               	tblrd		*-
  8932  001726  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8933  00172A  ECD0  F014         	call	___ftmul	;wreg free
  8934  00172E  C07D  F08C         	movff	?___ftmul,_scale$2171
  8935  001732  C07E  F08D         	movff	?___ftmul+1,_scale$2171+1
  8936  001736  C07F  F08E         	movff	?___ftmul+2,_scale$2171+2
  8937                           
  8938                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8939  00173A  C08C  F07D         	movff	_scale$2171,___ftmul@f1
  8940  00173E  C08D  F07E         	movff	_scale$2171+1,___ftmul@f1+1
  8941  001742  C08E  F07F         	movff	_scale$2171+2,___ftmul@f1+2
  8942  001746  0E00               	movlw	0
  8943  001748  0100               	movlb	0	; () banked
  8944  00174A  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8945  00174C  0E03               	movlw	3
  8946  00174E  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8947  001750  0E00               	movlw	0
  8948  001752  0100               	movlb	0	; () banked
  8949  001754  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8950  001756  0E0A               	movlw	10
  8951  001758  6F73               	movwf	___awmod@divisor& (0+255),b
  8952  00175A  0100               	movlb	0	; () banked
  8953  00175C  518F               	movf	scale@scl& (0+255),w,b
  8954  00175E  0100               	movlb	0	; () banked
  8955  001760  6F71               	movwf	___awmod@dividend& (0+255),b
  8956  001762  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8957  001764  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8958  001766  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8959  001768  ECEE  F019         	call	___awmod	;wreg free
  8960  00176C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8961  001770  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8962  001774  EC65  F01D         	call	___wmul	;wreg free
  8963  001778  0E1D               	movlw	low __powers_
  8964  00177A  0100               	movlb	0	; () banked
  8965  00177C  2579               	addwf	?___wmul& (0+255),w,b
  8966  00177E  6EF6               	movwf	tblptrl,c
  8967  001780  0E7F               	movlw	high __powers_
  8968  001782  0100               	movlb	0	; () banked
  8969  001784  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8970  001786  6EF7               	movwf	tblptrh,c
  8971  001788                     	if	0	;There are less than 3 active tblptr bytes
  8972  001788                     	endif
  8973  001788  0009               	tblrd		*+
  8974  00178A  CFF5 F080          	movff	tablat,___ftmul@f2
  8975  00178E  0009               	tblrd		*+
  8976  001790  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8977  001794  000A               	tblrd		*-
  8978  001796  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8979  00179A  ECD0  F014         	call	___ftmul	;wreg free
  8980  00179E  C07D  F089         	movff	?___ftmul,?_scale
  8981  0017A2  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8982  0017A6  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8983  0017AA  0012               	return	
  8984  0017AC                     l4999:
  8985                           
  8986                           ;doprnt.c: 438: else if(scl > 10)
  8987  0017AC  0100               	movlb	0	; () banked
  8988  0017AE  518F               	movf	scale@scl& (0+255),w,b
  8989  0017B0  0A80               	xorlw	128
  8990  0017B2  0F75               	addlw	-139
  8991  0017B4  A0D8               	btfss	status,0,c
  8992  0017B6  D05D               	goto	l5005
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8996  0017B8  0E00               	movlw	0
  8997  0017BA  0100               	movlb	0	; () banked
  8998  0017BC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8999  0017BE  0E0A               	movlw	10
  9000  0017C0  6F77               	movwf	___awdiv@divisor& (0+255),b
  9001  0017C2  0100               	movlb	0	; () banked
  9002  0017C4  518F               	movf	scale@scl& (0+255),w,b
  9003  0017C6  0100               	movlb	0	; () banked
  9004  0017C8  6F75               	movwf	___awdiv@dividend& (0+255),b
  9005  0017CA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9006  0017CC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  9007  0017CE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9008  0017D0  EC9B  F019         	call	___awdiv	;wreg free
  9009  0017D4  0E09               	movlw	9
  9010  0017D6  0100               	movlb	0	; () banked
  9011  0017D8  2575               	addwf	?___awdiv& (0+255),w,b
  9012  0017DA  0100               	movlb	0	; () banked
  9013  0017DC  6F79               	movwf	___wmul@multiplier& (0+255),b
  9014  0017DE  0E00               	movlw	0
  9015  0017E0  0100               	movlb	0	; () banked
  9016  0017E2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9017  0017E4  0100               	movlb	0	; () banked
  9018  0017E6  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9019  0017E8  0E00               	movlw	0
  9020  0017EA  0100               	movlb	0	; () banked
  9021  0017EC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9022  0017EE  0E03               	movlw	3
  9023  0017F0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9024  0017F2  EC65  F01D         	call	___wmul	;wreg free
  9025  0017F6  0E1D               	movlw	low __powers_
  9026  0017F8  0100               	movlb	0	; () banked
  9027  0017FA  2579               	addwf	?___wmul& (0+255),w,b
  9028  0017FC  6EF6               	movwf	tblptrl,c
  9029  0017FE  0E7F               	movlw	high __powers_
  9030  001800  0100               	movlb	0	; () banked
  9031  001802  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9032  001804  6EF7               	movwf	tblptrh,c
  9033  001806                     	if	0	;There are less than 3 active tblptr bytes
  9034  001806                     	endif
  9035  001806  0009               	tblrd		*+
  9036  001808  CFF5 F07D          	movff	tablat,___ftmul@f1
  9037  00180C  0009               	tblrd		*+
  9038  00180E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9039  001812  000A               	tblrd		*-
  9040  001814  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9041  001818  0E00               	movlw	0
  9042  00181A  0100               	movlb	0	; () banked
  9043  00181C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9044  00181E  0E03               	movlw	3
  9045  001820  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9046  001822  0E00               	movlw	0
  9047  001824  0100               	movlb	0	; () banked
  9048  001826  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9049  001828  0E0A               	movlw	10
  9050  00182A  6F73               	movwf	___awmod@divisor& (0+255),b
  9051  00182C  0100               	movlb	0	; () banked
  9052  00182E  518F               	movf	scale@scl& (0+255),w,b
  9053  001830  0100               	movlb	0	; () banked
  9054  001832  6F71               	movwf	___awmod@dividend& (0+255),b
  9055  001834  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9056  001836  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9057  001838  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9058  00183A  ECEE  F019         	call	___awmod	;wreg free
  9059  00183E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9060  001842  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9061  001846  EC65  F01D         	call	___wmul	;wreg free
  9062  00184A  0E1D               	movlw	low __powers_
  9063  00184C  0100               	movlb	0	; () banked
  9064  00184E  2579               	addwf	?___wmul& (0+255),w,b
  9065  001850  6EF6               	movwf	tblptrl,c
  9066  001852  0E7F               	movlw	high __powers_
  9067  001854  0100               	movlb	0	; () banked
  9068  001856  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9069  001858  6EF7               	movwf	tblptrh,c
  9070  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9071  00185A                     	endif
  9072  00185A  0009               	tblrd		*+
  9073  00185C  CFF5 F080          	movff	tablat,___ftmul@f2
  9074  001860  0009               	tblrd		*+
  9075  001862  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9076  001866  000A               	tblrd		*-
  9077  001868  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9078  00186C  ECD0  F014         	call	___ftmul	;wreg free
  9079  001870  D796               	goto	L7
  9080  001872                     l5005:
  9081                           
  9082                           ;doprnt.c: 440: return _powers_[scl];
  9083  001872  0100               	movlb	0	; () banked
  9084  001874  518F               	movf	scale@scl& (0+255),w,b
  9085  001876  0D03               	mullw	3
  9086  001878  0E1D               	movlw	low __powers_
  9087  00187A  24F3               	addwf	prodl,w,c
  9088  00187C  6EF6               	movwf	tblptrl,c
  9089  00187E  0E7F               	movlw	high __powers_
  9090  001880  20F4               	addwfc	prodh,w,c
  9091  001882  6EF7               	movwf	tblptrh,c
  9092  001884                     	if	0	;There are less than 3 active tblptr bytes
  9093  001884                     	endif
  9094  001884  0009               	tblrd		*+
  9095  001886  CFF5 F089          	movff	tablat,?_scale
  9096  00188A  0009               	tblrd		*+
  9097  00188C  CFF5 F08A          	movff	tablat,?_scale+1
  9098  001890  000A               	tblrd		*-
  9099  001892  CFF5 F08B          	movff	tablat,?_scale+2
  9100  001896  0012               	return	
  9101  001898                     __end_of_scale:
  9102                           	opt stack 0
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           indf0	equ	0xFEF
  9110                           postinc0	equ	0xFEE
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           indf1	equ	0xFE7
  9115                           postdec1	equ	0xFE5
  9116                           fsr1h	equ	0xFE2
  9117                           fsr1l	equ	0xFE1
  9118                           indf2	equ	0xFDF
  9119                           postinc2	equ	0xFDE
  9120                           postdec2	equ	0xFDD
  9121                           fsr2h	equ	0xFDA
  9122                           fsr2l	equ	0xFD9
  9123                           status	equ	0xFD8
  9124                           
  9125 ;; *************** function _isdigit *****************
  9126 ;; Defined at:
  9127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  c               1    wreg     unsigned char 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  c               1   35[COMRAM] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;		None               void
  9134 ;; Registers used:
  9135 ;;		wreg, status,2, status,0
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9141 ;;      Params:         0       0       0       0       0       0       0
  9142 ;;      Locals:         2       0       0       0       0       0       0
  9143 ;;      Temps:          1       0       0       0       0       0       0
  9144 ;;      Totals:         3       0       0       0       0       0       0
  9145 ;;Total ram usage:        3 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:    3
  9148 ;; This function calls:
  9149 ;;		Nothing
  9150 ;; This function is called by:
  9151 ;;		_sprintf
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text33
  9156  003C30                     __ptext33:
  9157                           	opt stack 0
  9158  003C30                     _isdigit:
  9159                           	opt stack 24
  9160                           
  9161                           ;incstack = 0
  9162                           ;isdigit@c stored from wreg
  9163  003C30  6E24               	movwf	isdigit@c,c
  9164  003C32  0E00               	movlw	0
  9165  003C34  6E23               	movwf	_isdigit$1811,c
  9166  003C36  0E3A               	movlw	58
  9167  003C38  6024               	cpfslt	isdigit@c,c
  9168  003C3A  D005               	goto	l5017
  9169  003C3C  0E2F               	movlw	47
  9170  003C3E  6424               	cpfsgt	isdigit@c,c
  9171  003C40  D002               	goto	l5017
  9172  003C42  0E01               	movlw	1
  9173  003C44  6E23               	movwf	_isdigit$1811,c
  9174  003C46                     l5017:
  9175  003C46  C023  F022         	movff	_isdigit$1811,??_isdigit
  9176  003C4A  3022               	rrcf	??_isdigit,w,c
  9177  003C4C  0012               	return	
  9178  003C4E                     __end_of_isdigit:
  9179                           	opt stack 0
  9180                           tblptru	equ	0xFF8
  9181                           tblptrh	equ	0xFF7
  9182                           tblptrl	equ	0xFF6
  9183                           tablat	equ	0xFF5
  9184                           prodh	equ	0xFF4
  9185                           prodl	equ	0xFF3
  9186                           indf0	equ	0xFEF
  9187                           postinc0	equ	0xFEE
  9188                           fsr0h	equ	0xFEA
  9189                           fsr0l	equ	0xFE9
  9190                           wreg	equ	0xFE8
  9191                           indf1	equ	0xFE7
  9192                           postdec1	equ	0xFE5
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           indf2	equ	0xFDF
  9196                           postinc2	equ	0xFDE
  9197                           postdec2	equ	0xFDD
  9198                           fsr2h	equ	0xFDA
  9199                           fsr2l	equ	0xFD9
  9200                           status	equ	0xFD8
  9201                           
  9202 ;; *************** function _fround *****************
  9203 ;; Defined at:
  9204 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  prec            1    wreg     unsigned char 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  prec            1   50[BANK0 ] unsigned char 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  3   41[BANK0 ] unsigned char 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9218 ;;      Params:         0       3       0       0       0       0       0
  9219 ;;      Locals:         0       7       0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0
  9221 ;;      Totals:         0      10       0       0       0       0       0
  9222 ;;Total ram usage:       10 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:    5
  9225 ;; This function calls:
  9226 ;;		___awdiv
  9227 ;;		___awmod
  9228 ;;		___ftmul
  9229 ;;		___wmul
  9230 ;; This function is called by:
  9231 ;;		_sprintf
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           	psect	text34
  9236  001C88                     __ptext34:
  9237                           	opt stack 0
  9238  001C88                     _fround:
  9239                           	opt stack 22
  9240                           
  9241                           ;incstack = 0
  9242                           ;fround@prec stored from wreg
  9243  001C88  0100               	movlb	0	; () banked
  9244  001C8A  6F92               	movwf	fround@prec& (0+255),b
  9245                           
  9246                           ;doprnt.c: 413: if(prec>=110)
  9247  001C8C  0E6D               	movlw	109
  9248  001C8E  0100               	movlb	0	; () banked
  9249  001C90  6592               	cpfsgt	fround@prec& (0+255),b
  9250  001C92  D0BA               	goto	l4959
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9254  001C94  0E00               	movlw	0
  9255  001C96  0100               	movlb	0	; () banked
  9256  001C98  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9257  001C9A  0E03               	movlw	3
  9258  001C9C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9259  001C9E  0E00               	movlw	0
  9260  001CA0  0100               	movlb	0	; () banked
  9261  001CA2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9262  001CA4  0E0A               	movlw	10
  9263  001CA6  6F77               	movwf	___awdiv@divisor& (0+255),b
  9264  001CA8  0E00               	movlw	0
  9265  001CAA  0100               	movlb	0	; () banked
  9266  001CAC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9267  001CAE  0E64               	movlw	100
  9268  001CB0  6F73               	movwf	___awmod@divisor& (0+255),b
  9269  001CB2  C092  F071         	movff	fround@prec,___awmod@dividend
  9270  001CB6  0100               	movlb	0	; () banked
  9271  001CB8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9272  001CBA  ECEE  F019         	call	___awmod	;wreg free
  9273  001CBE  C071  F075         	movff	?___awmod,___awdiv@dividend
  9274  001CC2  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  9275  001CC6  EC9B  F019         	call	___awdiv	;wreg free
  9276  001CCA  0E09               	movlw	9
  9277  001CCC  0100               	movlb	0	; () banked
  9278  001CCE  2575               	addwf	?___awdiv& (0+255),w,b
  9279  001CD0  0100               	movlb	0	; () banked
  9280  001CD2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9281  001CD4  0E00               	movlw	0
  9282  001CD6  0100               	movlb	0	; () banked
  9283  001CD8  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9284  001CDA  0100               	movlb	0	; () banked
  9285  001CDC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9286  001CDE  EC65  F01D         	call	___wmul	;wreg free
  9287  001CE2  0E44               	movlw	low __npowers_
  9288  001CE4  0100               	movlb	0	; () banked
  9289  001CE6  2579               	addwf	?___wmul& (0+255),w,b
  9290  001CE8  6EF6               	movwf	tblptrl,c
  9291  001CEA  0E7F               	movlw	high __npowers_
  9292  001CEC  0100               	movlb	0	; () banked
  9293  001CEE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9294  001CF0  6EF7               	movwf	tblptrh,c
  9295  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  9296  001CF2                     	endif
  9297  001CF2  0009               	tblrd		*+
  9298  001CF4  CFF5 F080          	movff	tablat,___ftmul@f2
  9299  001CF8  0009               	tblrd		*+
  9300  001CFA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9301  001CFE  000A               	tblrd		*-
  9302  001D00  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9303  001D04  0E00               	movlw	0
  9304  001D06  0100               	movlb	0	; () banked
  9305  001D08  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9306  001D0A  0E64               	movlw	100
  9307  001D0C  6F77               	movwf	___awdiv@divisor& (0+255),b
  9308  001D0E  C092  F075         	movff	fround@prec,___awdiv@dividend
  9309  001D12  0100               	movlb	0	; () banked
  9310  001D14  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9311  001D16  EC9B  F019         	call	___awdiv	;wreg free
  9312  001D1A  0E12               	movlw	18
  9313  001D1C  0100               	movlb	0	; () banked
  9314  001D1E  2575               	addwf	?___awdiv& (0+255),w,b
  9315  001D20  0100               	movlb	0	; () banked
  9316  001D22  6F79               	movwf	___wmul@multiplier& (0+255),b
  9317  001D24  0E00               	movlw	0
  9318  001D26  0100               	movlb	0	; () banked
  9319  001D28  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9320  001D2A  0100               	movlb	0	; () banked
  9321  001D2C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9322  001D2E  0E00               	movlw	0
  9323  001D30  0100               	movlb	0	; () banked
  9324  001D32  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9325  001D34  0E03               	movlw	3
  9326  001D36  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9327  001D38  EC65  F01D         	call	___wmul	;wreg free
  9328  001D3C  0E44               	movlw	low __npowers_
  9329  001D3E  0100               	movlb	0	; () banked
  9330  001D40  2579               	addwf	?___wmul& (0+255),w,b
  9331  001D42  6EF6               	movwf	tblptrl,c
  9332  001D44  0E7F               	movlw	high __npowers_
  9333  001D46  0100               	movlb	0	; () banked
  9334  001D48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9335  001D4A  6EF7               	movwf	tblptrh,c
  9336  001D4C                     	if	0	;There are less than 3 active tblptr bytes
  9337  001D4C                     	endif
  9338  001D4C  0009               	tblrd		*+
  9339  001D4E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9340  001D52  0009               	tblrd		*+
  9341  001D54  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9342  001D58  000A               	tblrd		*-
  9343  001D5A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9344  001D5E  ECD0  F014         	call	___ftmul	;wreg free
  9345  001D62  C07D  F08F         	movff	?___ftmul,_fround$2169
  9346  001D66  C07E  F090         	movff	?___ftmul+1,_fround$2169+1
  9347  001D6A  C07F  F091         	movff	?___ftmul+2,_fround$2169+2
  9348                           
  9349                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9350  001D6E  0E00               	movlw	0
  9351  001D70  0100               	movlb	0	; () banked
  9352  001D72  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9353  001D74  0E03               	movlw	3
  9354  001D76  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9355  001D78  0E00               	movlw	0
  9356  001D7A  0100               	movlb	0	; () banked
  9357  001D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9358  001D7E  0E0A               	movlw	10
  9359  001D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9360  001D82  C092  F071         	movff	fround@prec,___awmod@dividend
  9361  001D86  0100               	movlb	0	; () banked
  9362  001D88  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9363  001D8A  ECEE  F019         	call	___awmod	;wreg free
  9364  001D8E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9365  001D92  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9366  001D96  EC65  F01D         	call	___wmul	;wreg free
  9367  001D9A  0E44               	movlw	low __npowers_
  9368  001D9C  0100               	movlb	0	; () banked
  9369  001D9E  2579               	addwf	?___wmul& (0+255),w,b
  9370  001DA0  6EF6               	movwf	tblptrl,c
  9371  001DA2  0E7F               	movlw	high __npowers_
  9372  001DA4  0100               	movlb	0	; () banked
  9373  001DA6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9374  001DA8  6EF7               	movwf	tblptrh,c
  9375  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9376  001DAA                     	endif
  9377  001DAA  0009               	tblrd		*+
  9378  001DAC  CFF5 F080          	movff	tablat,___ftmul@f2
  9379  001DB0  0009               	tblrd		*+
  9380  001DB2  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9381  001DB6  000A               	tblrd		*-
  9382  001DB8  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9383  001DBC  C08F  F07D         	movff	_fround$2169,___ftmul@f1
  9384  001DC0  C090  F07E         	movff	_fround$2169+1,___ftmul@f1+1
  9385  001DC4  C091  F07F         	movff	_fround$2169+2,___ftmul@f1+2
  9386  001DC8  ECD0  F014         	call	___ftmul	;wreg free
  9387  001DCC  C07D  F08C         	movff	?___ftmul,_fround$2170
  9388  001DD0  C07E  F08D         	movff	?___ftmul+1,_fround$2170+1
  9389  001DD4  C07F  F08E         	movff	?___ftmul+2,_fround$2170+2
  9390                           
  9391                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9392  001DD8  C08C  F07D         	movff	_fround$2170,___ftmul@f1
  9393  001DDC  C08D  F07E         	movff	_fround$2170+1,___ftmul@f1+1
  9394  001DE0  C08E  F07F         	movff	_fround$2170+2,___ftmul@f1+2
  9395  001DE4  0E00               	movlw	0
  9396  001DE6  0100               	movlb	0	; () banked
  9397  001DE8  6F80               	movwf	___ftmul@f2& (0+255),b
  9398  001DEA  0E00               	movlw	0
  9399  001DEC  0100               	movlb	0	; () banked
  9400  001DEE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9401  001DF0  0E3F               	movlw	63
  9402  001DF2  0100               	movlb	0	; () banked
  9403  001DF4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9404  001DF6  ECD0  F014         	call	___ftmul	;wreg free
  9405  001DFA  C07D  F089         	movff	?___ftmul,?_fround
  9406  001DFE  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9407  001E02  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9408  001E06  0012               	return	
  9409  001E08                     l4959:
  9410                           
  9411                           ;doprnt.c: 415: else if(prec > 10)
  9412  001E08  0E0A               	movlw	10
  9413  001E0A  0100               	movlb	0	; () banked
  9414  001E0C  6592               	cpfsgt	fround@prec& (0+255),b
  9415  001E0E  D06E               	goto	l4967
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9419  001E10  0E00               	movlw	0
  9420  001E12  0100               	movlb	0	; () banked
  9421  001E14  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9422  001E16  0E03               	movlw	3
  9423  001E18  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9424  001E1A  0E00               	movlw	0
  9425  001E1C  0100               	movlb	0	; () banked
  9426  001E1E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9427  001E20  0E0A               	movlw	10
  9428  001E22  6F73               	movwf	___awmod@divisor& (0+255),b
  9429  001E24  C092  F071         	movff	fround@prec,___awmod@dividend
  9430  001E28  0100               	movlb	0	; () banked
  9431  001E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9432  001E2C  ECEE  F019         	call	___awmod	;wreg free
  9433  001E30  C071  F079         	movff	?___awmod,___wmul@multiplier
  9434  001E34  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9435  001E38  EC65  F01D         	call	___wmul	;wreg free
  9436  001E3C  0E44               	movlw	low __npowers_
  9437  001E3E  0100               	movlb	0	; () banked
  9438  001E40  2579               	addwf	?___wmul& (0+255),w,b
  9439  001E42  6EF6               	movwf	tblptrl,c
  9440  001E44  0E7F               	movlw	high __npowers_
  9441  001E46  0100               	movlb	0	; () banked
  9442  001E48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9443  001E4A  6EF7               	movwf	tblptrh,c
  9444  001E4C                     	if	0	;There are less than 3 active tblptr bytes
  9445  001E4C                     	endif
  9446  001E4C  0009               	tblrd		*+
  9447  001E4E  CFF5 F080          	movff	tablat,___ftmul@f2
  9448  001E52  0009               	tblrd		*+
  9449  001E54  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9450  001E58  000A               	tblrd		*-
  9451  001E5A  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9452  001E5E  0E00               	movlw	0
  9453  001E60  0100               	movlb	0	; () banked
  9454  001E62  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9455  001E64  0E0A               	movlw	10
  9456  001E66  6F77               	movwf	___awdiv@divisor& (0+255),b
  9457  001E68  C092  F075         	movff	fround@prec,___awdiv@dividend
  9458  001E6C  0100               	movlb	0	; () banked
  9459  001E6E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9460  001E70  EC9B  F019         	call	___awdiv	;wreg free
  9461  001E74  0E09               	movlw	9
  9462  001E76  0100               	movlb	0	; () banked
  9463  001E78  2575               	addwf	?___awdiv& (0+255),w,b
  9464  001E7A  0100               	movlb	0	; () banked
  9465  001E7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9466  001E7E  0E00               	movlw	0
  9467  001E80  0100               	movlb	0	; () banked
  9468  001E82  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9469  001E84  0100               	movlb	0	; () banked
  9470  001E86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9471  001E88  0E00               	movlw	0
  9472  001E8A  0100               	movlb	0	; () banked
  9473  001E8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9474  001E8E  0E03               	movlw	3
  9475  001E90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9476  001E92  EC65  F01D         	call	___wmul	;wreg free
  9477  001E96  0E44               	movlw	low __npowers_
  9478  001E98  0100               	movlb	0	; () banked
  9479  001E9A  2579               	addwf	?___wmul& (0+255),w,b
  9480  001E9C  6EF6               	movwf	tblptrl,c
  9481  001E9E  0E7F               	movlw	high __npowers_
  9482  001EA0  0100               	movlb	0	; () banked
  9483  001EA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9484  001EA4  6EF7               	movwf	tblptrh,c
  9485  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  9486  001EA6                     	endif
  9487  001EA6  0009               	tblrd		*+
  9488  001EA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9489  001EAC  0009               	tblrd		*+
  9490  001EAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9491  001EB2  000A               	tblrd		*-
  9492  001EB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9493  001EB8  ECD0  F014         	call	___ftmul	;wreg free
  9494  001EBC  C07D  F08F         	movff	?___ftmul,_fround$2169
  9495  001EC0  C07E  F090         	movff	?___ftmul+1,_fround$2169+1
  9496  001EC4  C07F  F091         	movff	?___ftmul+2,_fround$2169+2
  9497                           
  9498                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9499  001EC8  C08F  F07D         	movff	_fround$2169,___ftmul@f1
  9500  001ECC  C090  F07E         	movff	_fround$2169+1,___ftmul@f1+1
  9501  001ED0  C091  F07F         	movff	_fround$2169+2,___ftmul@f1+2
  9502  001ED4  0E00               	movlw	0
  9503  001ED6  0100               	movlb	0	; () banked
  9504  001ED8  6F80               	movwf	___ftmul@f2& (0+255),b
  9505  001EDA  0E00               	movlw	0
  9506  001EDC  0100               	movlb	0	; () banked
  9507  001EDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9508  001EE0  0E3F               	movlw	63
  9509  001EE2  0100               	movlb	0	; () banked
  9510  001EE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9511  001EE6  ECD0  F014         	call	___ftmul	;wreg free
  9512  001EEA  D787               	goto	L8
  9513  001EEC                     l4967:
  9514                           
  9515                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9516  001EEC  0100               	movlb	0	; () banked
  9517  001EEE  5192               	movf	fround@prec& (0+255),w,b
  9518  001EF0  0D03               	mullw	3
  9519  001EF2  0E44               	movlw	low __npowers_
  9520  001EF4  24F3               	addwf	prodl,w,c
  9521  001EF6  6EF6               	movwf	tblptrl,c
  9522  001EF8  0E7F               	movlw	high __npowers_
  9523  001EFA  20F4               	addwfc	prodh,w,c
  9524  001EFC  6EF7               	movwf	tblptrh,c
  9525  001EFE                     	if	0	;There are less than 3 active tblptr bytes
  9526  001EFE                     	endif
  9527  001EFE  0009               	tblrd		*+
  9528  001F00  CFF5 F07D          	movff	tablat,___ftmul@f1
  9529  001F04  0009               	tblrd		*+
  9530  001F06  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9531  001F0A  000A               	tblrd		*-
  9532  001F0C  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9533  001F10  0E00               	movlw	0
  9534  001F12  0100               	movlb	0	; () banked
  9535  001F14  6F80               	movwf	___ftmul@f2& (0+255),b
  9536  001F16  0E00               	movlw	0
  9537  001F18  0100               	movlb	0	; () banked
  9538  001F1A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9539  001F1C  0E3F               	movlw	63
  9540  001F1E  0100               	movlb	0	; () banked
  9541  001F20  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9542  001F22  ECD0  F014         	call	___ftmul	;wreg free
  9543  001F26  C07D  F089         	movff	?___ftmul,?_fround
  9544  001F2A  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9545  001F2E  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9546  001F32  0012               	return	
  9547  001F34                     __end_of_fround:
  9548                           	opt stack 0
  9549                           tblptru	equ	0xFF8
  9550                           tblptrh	equ	0xFF7
  9551                           tblptrl	equ	0xFF6
  9552                           tablat	equ	0xFF5
  9553                           prodh	equ	0xFF4
  9554                           prodl	equ	0xFF3
  9555                           indf0	equ	0xFEF
  9556                           postinc0	equ	0xFEE
  9557                           fsr0h	equ	0xFEA
  9558                           fsr0l	equ	0xFE9
  9559                           wreg	equ	0xFE8
  9560                           indf1	equ	0xFE7
  9561                           postdec1	equ	0xFE5
  9562                           fsr1h	equ	0xFE2
  9563                           fsr1l	equ	0xFE1
  9564                           indf2	equ	0xFDF
  9565                           postinc2	equ	0xFDE
  9566                           postdec2	equ	0xFDD
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function ___wmul *****************
  9572 ;; Defined at:
  9573 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  multiplier      2   25[BANK0 ] unsigned int 
  9576 ;;  multiplicand    2   27[BANK0 ] unsigned int 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  product         2   39[COMRAM] unsigned int 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2   25[BANK0 ] unsigned int 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0, prodl, prodh
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9588 ;;      Params:         0       4       0       0       0       0       0
  9589 ;;      Locals:         2       0       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0
  9591 ;;      Totals:         2       4       0       0       0       0       0
  9592 ;;Total ram usage:        6 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    3
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_fround
  9599 ;;		_scale
  9600 ;;		_sprintf
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text35
  9605  003ACA                     __ptext35:
  9606                           	opt stack 0
  9607  003ACA                     ___wmul:
  9608                           	opt stack 23
  9609                           
  9610                           ;incstack = 0
  9611  003ACA  0100               	movlb	0	; () banked
  9612  003ACC  5179               	movf	___wmul@multiplier& (0+255),w,b
  9613  003ACE  0100               	movlb	0	; () banked
  9614  003AD0  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9615  003AD2  CFF3 F028          	movff	prodl,___wmul@product
  9616  003AD6  CFF4 F029          	movff	prodh,___wmul@product+1
  9617  003ADA  0100               	movlb	0	; () banked
  9618  003ADC  5179               	movf	___wmul@multiplier& (0+255),w,b
  9619  003ADE  0100               	movlb	0	; () banked
  9620  003AE0  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9621  003AE2  50F3               	movf	prodl,w,c
  9622  003AE4  2629               	addwf	___wmul@product+1,f,c
  9623  003AE6  0100               	movlb	0	; () banked
  9624  003AE8  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9625  003AEA  0100               	movlb	0	; () banked
  9626  003AEC  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9627  003AEE  50F3               	movf	prodl,w,c
  9628  003AF0  2629               	addwf	___wmul@product+1,f,c
  9629                           
  9630                           ; BSR set to: 0
  9631  003AF2  C028  F079         	movff	___wmul@product,?___wmul
  9632  003AF6  C029  F07A         	movff	___wmul@product+1,?___wmul+1
  9633  003AFA  0012               	return	
  9634  003AFC                     __end_of___wmul:
  9635                           	opt stack 0
  9636                           tblptru	equ	0xFF8
  9637                           tblptrh	equ	0xFF7
  9638                           tblptrl	equ	0xFF6
  9639                           tablat	equ	0xFF5
  9640                           prodh	equ	0xFF4
  9641                           prodl	equ	0xFF3
  9642                           indf0	equ	0xFEF
  9643                           postinc0	equ	0xFEE
  9644                           fsr0h	equ	0xFEA
  9645                           fsr0l	equ	0xFE9
  9646                           wreg	equ	0xFE8
  9647                           indf1	equ	0xFE7
  9648                           postdec1	equ	0xFE5
  9649                           fsr1h	equ	0xFE2
  9650                           fsr1l	equ	0xFE1
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           postdec2	equ	0xFDD
  9654                           fsr2h	equ	0xFDA
  9655                           fsr2l	equ	0xFD9
  9656                           status	equ	0xFD8
  9657                           
  9658 ;; *************** function ___ftmul *****************
  9659 ;; Defined at:
  9660 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  f1              3   29[BANK0 ] float 
  9663 ;;  f2              3   32[BANK0 ] float 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  9666 ;;  sign            1   40[BANK0 ] unsigned char 
  9667 ;;  cntr            1   39[BANK0 ] unsigned char 
  9668 ;;  exp             1   35[BANK0 ] unsigned char 
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  3   29[BANK0 ] float 
  9671 ;; Registers used:
  9672 ;;		wreg, status,2, status,0, cstack
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9678 ;;      Params:         0       6       0       0       0       0       0
  9679 ;;      Locals:         0       6       0       0       0       0       0
  9680 ;;      Temps:          3       0       0       0       0       0       0
  9681 ;;      Totals:         3      12       0       0       0       0       0
  9682 ;;Total ram usage:       15 bytes
  9683 ;; Hardware stack levels used:    1
  9684 ;; Hardware stack levels required when called:    4
  9685 ;; This function calls:
  9686 ;;		___ftpack
  9687 ;; This function is called by:
  9688 ;;		_util_getBatteryVoltage
  9689 ;;		_util_getSolarCurrent
  9690 ;;		_util_getBatteryCurrent
  9691 ;;		_util_getTemperature
  9692 ;;		_fround
  9693 ;;		_scale
  9694 ;;		_sprintf
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text36
  9699  0029A0                     __ptext36:
  9700                           	opt stack 0
  9701  0029A0                     ___ftmul:
  9702                           	opt stack 24
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;incstack = 0
  9706  0029A0  C07F  F02A         	movff	___ftmul@f1+2,??___ftmul
  9707  0029A4  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9708  0029A6  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9709  0029A8  0100               	movlb	0	; () banked
  9710  0029AA  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9711  0029AC  362A               	rlcf	??___ftmul& (0+255),f,c
  9712  0029AE  E301               	bnc	u4781
  9713  0029B0  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9714  0029B2                     u4781:
  9715  0029B2  502A               	movf	??___ftmul,w,c
  9716  0029B4  0100               	movlb	0	; () banked
  9717  0029B6  6F83               	movwf	___ftmul@exp& (0+255),b
  9718  0029B8  0100               	movlb	0	; () banked
  9719  0029BA  5183               	movf	___ftmul@exp& (0+255),w,b
  9720  0029BC  A4D8               	btfss	status,2,c
  9721  0029BE  D00A               	goto	l4757
  9722                           
  9723                           ; BSR set to: 0
  9724  0029C0  0E00               	movlw	0
  9725  0029C2  0100               	movlb	0	; () banked
  9726  0029C4  6F7D               	movwf	?___ftmul& (0+255),b
  9727  0029C6  0E00               	movlw	0
  9728  0029C8  0100               	movlb	0	; () banked
  9729  0029CA  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9730  0029CC  0E00               	movlw	0
  9731  0029CE  0100               	movlb	0	; () banked
  9732  0029D0  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9733                           
  9734                           ; BSR set to: 0
  9735  0029D2  0012               	return	
  9736  0029D4                     l4757:
  9737                           
  9738                           ; BSR set to: 0
  9739  0029D4  C082  F02A         	movff	___ftmul@f2+2,??___ftmul
  9740  0029D8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9741  0029DA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9742  0029DC  0100               	movlb	0	; () banked
  9743  0029DE  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9744  0029E0  362A               	rlcf	??___ftmul& (0+255),f,c
  9745  0029E2  E301               	bnc	u4801
  9746  0029E4  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9747  0029E6                     u4801:
  9748  0029E6  502A               	movf	??___ftmul,w,c
  9749  0029E8  0100               	movlb	0	; () banked
  9750  0029EA  6F88               	movwf	___ftmul@sign& (0+255),b
  9751  0029EC  0100               	movlb	0	; () banked
  9752  0029EE  5188               	movf	___ftmul@sign& (0+255),w,b
  9753  0029F0  A4D8               	btfss	status,2,c
  9754  0029F2  D00A               	goto	l4763
  9755                           
  9756                           ; BSR set to: 0
  9757  0029F4  0E00               	movlw	0
  9758  0029F6  0100               	movlb	0	; () banked
  9759  0029F8  6F7D               	movwf	?___ftmul& (0+255),b
  9760  0029FA  0E00               	movlw	0
  9761  0029FC  0100               	movlb	0	; () banked
  9762  0029FE  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9763  002A00  0E00               	movlw	0
  9764  002A02  0100               	movlb	0	; () banked
  9765  002A04  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9766                           
  9767                           ; BSR set to: 0
  9768  002A06  0012               	return	
  9769  002A08                     l4763:
  9770                           
  9771                           ; BSR set to: 0
  9772  002A08  0100               	movlb	0	; () banked
  9773  002A0A  5188               	movf	___ftmul@sign& (0+255),w,b
  9774  002A0C  0F7B               	addlw	123
  9775  002A0E  0100               	movlb	0	; () banked
  9776  002A10  2783               	addwf	___ftmul@exp& (0+255),f,b
  9777                           
  9778                           ; BSR set to: 0
  9779  002A12  C07F  F088         	movff	___ftmul@f1+2,___ftmul@sign
  9780  002A16  0100               	movlb	0	; () banked
  9781  002A18  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9782  002A1A  0100               	movlb	0	; () banked
  9783  002A1C  1B88               	xorwf	___ftmul@sign& (0+255),f,b
  9784  002A1E  0E80               	movlw	128
  9785  002A20  0100               	movlb	0	; () banked
  9786  002A22  1788               	andwf	___ftmul@sign& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 0
  9789  002A24  0100               	movlb	0	; () banked
  9790  002A26  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9791                           
  9792                           ; BSR set to: 0
  9793  002A28  0100               	movlb	0	; () banked
  9794  002A2A  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9795                           
  9796                           ; BSR set to: 0
  9797  002A2C  0EFF               	movlw	255
  9798  002A2E  0100               	movlb	0	; () banked
  9799  002A30  1780               	andwf	___ftmul@f2& (0+255),f,b
  9800  002A32  0EFF               	movlw	255
  9801  002A34  0100               	movlb	0	; () banked
  9802  002A36  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9803  002A38  0E00               	movlw	0
  9804  002A3A  0100               	movlb	0	; () banked
  9805  002A3C  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9806                           
  9807                           ; BSR set to: 0
  9808  002A3E  0E00               	movlw	0
  9809  002A40  0100               	movlb	0	; () banked
  9810  002A42  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
  9811  002A44  0E00               	movlw	0
  9812  002A46  0100               	movlb	0	; () banked
  9813  002A48  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9814  002A4A  0E00               	movlw	0
  9815  002A4C  0100               	movlb	0	; () banked
  9816  002A4E  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9817                           
  9818                           ; BSR set to: 0
  9819  002A50  0E07               	movlw	7
  9820  002A52  0100               	movlb	0	; () banked
  9821  002A54  6F87               	movwf	___ftmul@cntr& (0+255),b
  9822  002A56                     l4777:
  9823                           
  9824                           ; BSR set to: 0
  9825  002A56  0100               	movlb	0	; () banked
  9826  002A58  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9827  002A5A  D00C               	goto	l4781
  9828                           
  9829                           ; BSR set to: 0
  9830  002A5C  0100               	movlb	0	; () banked
  9831  002A5E  5180               	movf	___ftmul@f2& (0+255),w,b
  9832  002A60  0100               	movlb	0	; () banked
  9833  002A62  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9834  002A64  0100               	movlb	0	; () banked
  9835  002A66  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9836  002A68  0100               	movlb	0	; () banked
  9837  002A6A  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9838  002A6C  0100               	movlb	0	; () banked
  9839  002A6E  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9840  002A70  0100               	movlb	0	; () banked
  9841  002A72  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9842  002A74                     l4781:
  9843                           
  9844                           ; BSR set to: 0
  9845  002A74  0100               	movlb	0	; () banked
  9846  002A76  90D8               	bcf	status,0,c
  9847  002A78  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9848  002A7A  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9849  002A7C  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9850  002A7E  0100               	movlb	0	; () banked
  9851  002A80  90D8               	bcf	status,0,c
  9852  002A82  3780               	rlcf	___ftmul@f2& (0+255),f,b
  9853  002A84  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9854  002A86  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9855                           
  9856                           ; BSR set to: 0
  9857  002A88  0100               	movlb	0	; () banked
  9858  002A8A  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9859  002A8C  D7E4               	goto	l4777
  9860                           
  9861                           ; BSR set to: 0
  9862                           
  9863                           ; BSR set to: 0
  9864  002A8E  0E09               	movlw	9
  9865  002A90  0100               	movlb	0	; () banked
  9866  002A92  6F87               	movwf	___ftmul@cntr& (0+255),b
  9867  002A94                     l4787:
  9868                           
  9869                           ; BSR set to: 0
  9870  002A94  0100               	movlb	0	; () banked
  9871  002A96  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9872  002A98  D00C               	goto	l4791
  9873                           
  9874                           ; BSR set to: 0
  9875  002A9A  0100               	movlb	0	; () banked
  9876  002A9C  5180               	movf	___ftmul@f2& (0+255),w,b
  9877  002A9E  0100               	movlb	0	; () banked
  9878  002AA0  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9879  002AA2  0100               	movlb	0	; () banked
  9880  002AA4  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9881  002AA6  0100               	movlb	0	; () banked
  9882  002AA8  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9883  002AAA  0100               	movlb	0	; () banked
  9884  002AAC  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9885  002AAE  0100               	movlb	0	; () banked
  9886  002AB0  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9887  002AB2                     l4791:
  9888                           
  9889                           ; BSR set to: 0
  9890  002AB2  0100               	movlb	0	; () banked
  9891  002AB4  90D8               	bcf	status,0,c
  9892  002AB6  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9893  002AB8  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9894  002ABA  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9895  002ABC  0100               	movlb	0	; () banked
  9896  002ABE  90D8               	bcf	status,0,c
  9897  002AC0  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9898  002AC2  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9899  002AC4  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9900                           
  9901                           ; BSR set to: 0
  9902  002AC6  0100               	movlb	0	; () banked
  9903  002AC8  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9904  002ACA  D7E4               	goto	l4787
  9905                           
  9906                           ; BSR set to: 0
  9907                           
  9908                           ; BSR set to: 0
  9909  002ACC  C084  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  9910  002AD0  C085  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9911  002AD4  C086  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9912  002AD8  C083  F074         	movff	___ftmul@exp,___ftpack@exp
  9913  002ADC  C088  F075         	movff	___ftmul@sign,___ftpack@sign
  9914  002AE0  EC44  F017         	call	___ftpack	;wreg free
  9915  002AE4  C071  F07D         	movff	?___ftpack,?___ftmul
  9916  002AE8  C072  F07E         	movff	?___ftpack+1,?___ftmul+1
  9917  002AEC  C073  F07F         	movff	?___ftpack+2,?___ftmul+2
  9918  002AF0  0012               	return	
  9919  002AF2                     __end_of___ftmul:
  9920                           	opt stack 0
  9921                           tblptru	equ	0xFF8
  9922                           tblptrh	equ	0xFF7
  9923                           tblptrl	equ	0xFF6
  9924                           tablat	equ	0xFF5
  9925                           prodh	equ	0xFF4
  9926                           prodl	equ	0xFF3
  9927                           indf0	equ	0xFEF
  9928                           postinc0	equ	0xFEE
  9929                           fsr0h	equ	0xFEA
  9930                           fsr0l	equ	0xFE9
  9931                           wreg	equ	0xFE8
  9932                           indf1	equ	0xFE7
  9933                           postdec1	equ	0xFE5
  9934                           fsr1h	equ	0xFE2
  9935                           fsr1l	equ	0xFE1
  9936                           indf2	equ	0xFDF
  9937                           postinc2	equ	0xFDE
  9938                           postdec2	equ	0xFDD
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8
  9942                           
  9943 ;; *************** function ___awmod *****************
  9944 ;; Defined at:
  9945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  dividend        2   17[BANK0 ] int 
  9948 ;;  divisor         2   19[BANK0 ] int 
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;  sign            1   34[COMRAM] unsigned char 
  9951 ;;  counter         1   33[COMRAM] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  2   17[BANK0 ] int 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9961 ;;      Params:         0       4       0       0       0       0       0
  9962 ;;      Locals:         2       0       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0
  9964 ;;      Totals:         2       4       0       0       0       0       0
  9965 ;;Total ram usage:        6 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    3
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_fround
  9972 ;;		_scale
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text37
  9977  0033DC                     __ptext37:
  9978                           	opt stack 0
  9979  0033DC                     ___awmod:
  9980                           	opt stack 23
  9981                           
  9982                           ;incstack = 0
  9983  0033DC  0E00               	movlw	0
  9984  0033DE  6E23               	movwf	___awmod@sign,c
  9985  0033E0  0100               	movlb	0	; () banked
  9986  0033E2  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9987  0033E4  D007               	goto	l4851
  9988                           
  9989                           ; BSR set to: 0
  9990  0033E6  0100               	movlb	0	; () banked
  9991  0033E8  6D71               	negf	___awmod@dividend& (0+255),b
  9992  0033EA  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
  9993  0033EC  B0D8               	btfsc	status,0,c
  9994  0033EE  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
  9995                           
  9996                           ; BSR set to: 0
  9997  0033F0  0E01               	movlw	1
  9998  0033F2  6E23               	movwf	___awmod@sign,c
  9999  0033F4                     l4851:
 10000                           
 10001                           ; BSR set to: 0
 10002  0033F4  0100               	movlb	0	; () banked
 10003  0033F6  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10004  0033F8  D005               	goto	l4855
 10005                           
 10006                           ; BSR set to: 0
 10007  0033FA  0100               	movlb	0	; () banked
 10008  0033FC  6D73               	negf	___awmod@divisor& (0+255),b
 10009  0033FE  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10010  003400  B0D8               	btfsc	status,0,c
 10011  003402  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10012  003404                     l4855:
 10013                           
 10014                           ; BSR set to: 0
 10015  003404  0100               	movlb	0	; () banked
 10016  003406  5173               	movf	___awmod@divisor& (0+255),w,b
 10017  003408  0100               	movlb	0	; () banked
 10018  00340A  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10019  00340C  B4D8               	btfsc	status,2,c
 10020  00340E  D023               	goto	l4871
 10021                           
 10022                           ; BSR set to: 0
 10023  003410  0E01               	movlw	1
 10024  003412  6E22               	movwf	___awmod@counter,c
 10025  003414  D005               	goto	l4861
 10026  003416                     l4859:
 10027                           
 10028                           ; BSR set to: 0
 10029  003416  0100               	movlb	0	; () banked
 10030  003418  90D8               	bcf	status,0,c
 10031  00341A  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10032  00341C  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10033  00341E  2A22               	incf	___awmod@counter,f,c
 10034  003420                     l4861:
 10035                           
 10036                           ; BSR set to: 0
 10037  003420  0100               	movlb	0	; () banked
 10038  003422  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10039  003424  D7F8               	goto	l4859
 10040  003426                     l4863:
 10041                           
 10042                           ; BSR set to: 0
 10043  003426  0100               	movlb	0	; () banked
 10044  003428  5173               	movf	___awmod@divisor& (0+255),w,b
 10045  00342A  0100               	movlb	0	; () banked
 10046  00342C  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10047  00342E  0100               	movlb	0	; () banked
 10048  003430  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10049  003432  0100               	movlb	0	; () banked
 10050  003434  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10051  003436  A0D8               	btfss	status,0,c
 10052  003438  D008               	goto	l4867
 10053                           
 10054                           ; BSR set to: 0
 10055  00343A  0100               	movlb	0	; () banked
 10056  00343C  5173               	movf	___awmod@divisor& (0+255),w,b
 10057  00343E  0100               	movlb	0	; () banked
 10058  003440  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10059  003442  0100               	movlb	0	; () banked
 10060  003444  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10061  003446  0100               	movlb	0	; () banked
 10062  003448  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10063  00344A                     l4867:
 10064                           
 10065                           ; BSR set to: 0
 10066  00344A  0100               	movlb	0	; () banked
 10067  00344C  90D8               	bcf	status,0,c
 10068  00344E  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10069  003450  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10070                           
 10071                           ; BSR set to: 0
 10072  003452  2E22               	decfsz	___awmod@counter,f,c
 10073  003454  D7E8               	goto	l4863
 10074  003456                     l4871:
 10075                           
 10076                           ; BSR set to: 0
 10077  003456  5023               	movf	___awmod@sign,w,c
 10078  003458  B4D8               	btfsc	status,2,c
 10079  00345A  D005               	goto	l4875
 10080                           
 10081                           ; BSR set to: 0
 10082  00345C  0100               	movlb	0	; () banked
 10083  00345E  6D71               	negf	___awmod@dividend& (0+255),b
 10084  003460  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10085  003462  B0D8               	btfsc	status,0,c
 10086  003464  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10087  003466                     l4875:
 10088                           
 10089                           ; BSR set to: 0
 10090  003466  C071  F071         	movff	___awmod@dividend,?___awmod
 10091  00346A  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10092  00346E  0012               	return	
 10093  003470                     __end_of___awmod:
 10094                           	opt stack 0
 10095                           tblptru	equ	0xFF8
 10096                           tblptrh	equ	0xFF7
 10097                           tblptrl	equ	0xFF6
 10098                           tablat	equ	0xFF5
 10099                           prodh	equ	0xFF4
 10100                           prodl	equ	0xFF3
 10101                           indf0	equ	0xFEF
 10102                           postinc0	equ	0xFEE
 10103                           fsr0h	equ	0xFEA
 10104                           fsr0l	equ	0xFE9
 10105                           wreg	equ	0xFE8
 10106                           indf1	equ	0xFE7
 10107                           postdec1	equ	0xFE5
 10108                           fsr1h	equ	0xFE2
 10109                           fsr1l	equ	0xFE1
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           postdec2	equ	0xFDD
 10113                           fsr2h	equ	0xFDA
 10114                           fsr2l	equ	0xFD9
 10115                           status	equ	0xFD8
 10116                           
 10117 ;; *************** function ___awdiv *****************
 10118 ;; Defined at:
 10119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  dividend        2   21[BANK0 ] int 
 10122 ;;  divisor         2   23[BANK0 ] int 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  quotient        2   37[COMRAM] int 
 10125 ;;  sign            1   36[COMRAM] unsigned char 
 10126 ;;  counter         1   35[COMRAM] unsigned char 
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  2   21[BANK0 ] int 
 10129 ;; Registers used:
 10130 ;;		wreg, status,2, status,0
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10136 ;;      Params:         0       4       0       0       0       0       0
 10137 ;;      Locals:         4       0       0       0       0       0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0
 10139 ;;      Totals:         4       4       0       0       0       0       0
 10140 ;;Total ram usage:        8 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    3
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_fround
 10147 ;;		_scale
 10148 ;;		_sprintf
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text38
 10153  003336                     __ptext38:
 10154                           	opt stack 0
 10155  003336                     ___awdiv:
 10156                           	opt stack 23
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;incstack = 0
 10160  003336  0E00               	movlw	0
 10161  003338  6E25               	movwf	___awdiv@sign,c
 10162  00333A  0100               	movlb	0	; () banked
 10163  00333C  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10164  00333E  D007               	goto	l4807
 10165                           
 10166                           ; BSR set to: 0
 10167  003340  0100               	movlb	0	; () banked
 10168  003342  6D77               	negf	___awdiv@divisor& (0+255),b
 10169  003344  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10170  003346  B0D8               	btfsc	status,0,c
 10171  003348  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10172                           
 10173                           ; BSR set to: 0
 10174  00334A  0E01               	movlw	1
 10175  00334C  6E25               	movwf	___awdiv@sign,c
 10176  00334E                     l4807:
 10177                           
 10178                           ; BSR set to: 0
 10179  00334E  0100               	movlb	0	; () banked
 10180  003350  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10181  003352  D007               	goto	l4813
 10182                           
 10183                           ; BSR set to: 0
 10184  003354  0100               	movlb	0	; () banked
 10185  003356  6D75               	negf	___awdiv@dividend& (0+255),b
 10186  003358  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10187  00335A  B0D8               	btfsc	status,0,c
 10188  00335C  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10189                           
 10190                           ; BSR set to: 0
 10191  00335E  0E01               	movlw	1
 10192  003360  1A25               	xorwf	___awdiv@sign,f,c
 10193  003362                     l4813:
 10194                           
 10195                           ; BSR set to: 0
 10196  003362  0E00               	movlw	0
 10197  003364  6E27               	movwf	___awdiv@quotient+1,c
 10198  003366  0E00               	movlw	0
 10199  003368  6E26               	movwf	___awdiv@quotient,c
 10200                           
 10201                           ; BSR set to: 0
 10202  00336A  0100               	movlb	0	; () banked
 10203  00336C  5177               	movf	___awdiv@divisor& (0+255),w,b
 10204  00336E  0100               	movlb	0	; () banked
 10205  003370  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10206  003372  B4D8               	btfsc	status,2,c
 10207  003374  D027               	goto	l4835
 10208                           
 10209                           ; BSR set to: 0
 10210  003376  0E01               	movlw	1
 10211  003378  6E24               	movwf	___awdiv@counter,c
 10212  00337A  D005               	goto	l4821
 10213  00337C                     l4819:
 10214                           
 10215                           ; BSR set to: 0
 10216  00337C  0100               	movlb	0	; () banked
 10217  00337E  90D8               	bcf	status,0,c
 10218  003380  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 10219  003382  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10220  003384  2A24               	incf	___awdiv@counter,f,c
 10221  003386                     l4821:
 10222                           
 10223                           ; BSR set to: 0
 10224  003386  0100               	movlb	0	; () banked
 10225  003388  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10226  00338A  D7F8               	goto	l4819
 10227  00338C                     l4823:
 10228                           
 10229                           ; BSR set to: 0
 10230  00338C  90D8               	bcf	status,0,c
 10231  00338E  3626               	rlcf	___awdiv@quotient,f,c
 10232  003390  3627               	rlcf	___awdiv@quotient+1,f,c
 10233                           
 10234                           ; BSR set to: 0
 10235  003392  0100               	movlb	0	; () banked
 10236  003394  5177               	movf	___awdiv@divisor& (0+255),w,b
 10237  003396  0100               	movlb	0	; () banked
 10238  003398  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 10239  00339A  0100               	movlb	0	; () banked
 10240  00339C  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10241  00339E  0100               	movlb	0	; () banked
 10242  0033A0  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10243  0033A2  A0D8               	btfss	status,0,c
 10244  0033A4  D009               	goto	l4831
 10245                           
 10246                           ; BSR set to: 0
 10247  0033A6  0100               	movlb	0	; () banked
 10248  0033A8  5177               	movf	___awdiv@divisor& (0+255),w,b
 10249  0033AA  0100               	movlb	0	; () banked
 10250  0033AC  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 10251  0033AE  0100               	movlb	0	; () banked
 10252  0033B0  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10253  0033B2  0100               	movlb	0	; () banked
 10254  0033B4  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10255                           
 10256                           ; BSR set to: 0
 10257  0033B6  8026               	bsf	___awdiv@quotient,0,c
 10258  0033B8                     l4831:
 10259                           
 10260                           ; BSR set to: 0
 10261  0033B8  0100               	movlb	0	; () banked
 10262  0033BA  90D8               	bcf	status,0,c
 10263  0033BC  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10264  0033BE  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 10265                           
 10266                           ; BSR set to: 0
 10267  0033C0  2E24               	decfsz	___awdiv@counter,f,c
 10268  0033C2  D7E4               	goto	l4823
 10269  0033C4                     l4835:
 10270                           
 10271                           ; BSR set to: 0
 10272  0033C4  5025               	movf	___awdiv@sign,w,c
 10273  0033C6  B4D8               	btfsc	status,2,c
 10274  0033C8  D004               	goto	l4839
 10275                           
 10276                           ; BSR set to: 0
 10277  0033CA  6C26               	negf	___awdiv@quotient,c
 10278  0033CC  1E27               	comf	___awdiv@quotient+1,f,c
 10279  0033CE  B0D8               	btfsc	status,0,c
 10280  0033D0  2A27               	incf	___awdiv@quotient+1,f,c
 10281  0033D2                     l4839:
 10282                           
 10283                           ; BSR set to: 0
 10284  0033D2  C026  F075         	movff	___awdiv@quotient,?___awdiv
 10285  0033D6  C027  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 10286  0033DA  0012               	return	
 10287  0033DC                     __end_of___awdiv:
 10288                           	opt stack 0
 10289                           tblptru	equ	0xFF8
 10290                           tblptrh	equ	0xFF7
 10291                           tblptrl	equ	0xFF6
 10292                           tablat	equ	0xFF5
 10293                           prodh	equ	0xFF4
 10294                           prodl	equ	0xFF3
 10295                           indf0	equ	0xFEF
 10296                           postinc0	equ	0xFEE
 10297                           fsr0h	equ	0xFEA
 10298                           fsr0l	equ	0xFE9
 10299                           wreg	equ	0xFE8
 10300                           indf1	equ	0xFE7
 10301                           postdec1	equ	0xFE5
 10302                           fsr1h	equ	0xFE2
 10303                           fsr1l	equ	0xFE1
 10304                           indf2	equ	0xFDF
 10305                           postinc2	equ	0xFDE
 10306                           postdec2	equ	0xFDD
 10307                           fsr2h	equ	0xFDA
 10308                           fsr2l	equ	0xFD9
 10309                           status	equ	0xFD8
 10310                           
 10311 ;; *************** function __tdiv_to_l_ *****************
 10312 ;; Defined at:
 10313 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  f1              3   17[BANK0 ] float 
 10316 ;;  f2              3   20[BANK0 ] float 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  quot            4   36[COMRAM] unsigned long 
 10319 ;;  exp1            1   41[COMRAM] unsigned char 
 10320 ;;  cntr            1   40[COMRAM] unsigned char 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  4   17[BANK0 ] unsigned long 
 10323 ;; Registers used:
 10324 ;;		wreg, status,2, status,0
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10330 ;;      Params:         0       6       0       0       0       0       0
 10331 ;;      Locals:         6       0       0       0       0       0       0
 10332 ;;      Temps:          3       0       0       0       0       0       0
 10333 ;;      Totals:         9       6       0       0       0       0       0
 10334 ;;Total ram usage:       15 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:    3
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_sprintf
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text39
 10345  0026DA                     __ptext39:
 10346                           	opt stack 0
 10347  0026DA                     __tdiv_to_l_:
 10348                           	opt stack 24
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;incstack = 0
 10352  0026DA  C073  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10353  0026DE  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10354  0026E0  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10355  0026E2  0100               	movlb	0	; () banked
 10356  0026E4  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10357  0026E6  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10358  0026E8  E301               	bnc	u5111
 10359  0026EA  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10360  0026EC                     u5111:
 10361  0026EC  5022               	movf	??__tdiv_to_l_,w,c
 10362  0026EE  6E2A               	movwf	__tdiv_to_l_@exp1,c
 10363  0026F0  502A               	movf	__tdiv_to_l_@exp1,w,c
 10364  0026F2  A4D8               	btfss	status,2,c
 10365  0026F4  D00A               	goto	l5027
 10366                           
 10367                           ; BSR set to: 0
 10368  0026F6  0E00               	movlw	0
 10369  0026F8  0100               	movlb	0	; () banked
 10370  0026FA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10371  0026FC  0E00               	movlw	0
 10372  0026FE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10373  002700  0E00               	movlw	0
 10374  002702  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10375  002704  0E00               	movlw	0
 10376  002706  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10377                           
 10378                           ; BSR set to: 0
 10379  002708  0012               	return	
 10380  00270A                     l5027:
 10381                           
 10382                           ; BSR set to: 0
 10383  00270A  C076  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10384  00270E  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10385  002710  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10386  002712  0100               	movlb	0	; () banked
 10387  002714  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10388  002716  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10389  002718  E301               	bnc	u5131
 10390  00271A  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10391  00271C                     u5131:
 10392  00271C  5022               	movf	??__tdiv_to_l_,w,c
 10393  00271E  6E29               	movwf	__tdiv_to_l_@cntr,c
 10394  002720  5029               	movf	__tdiv_to_l_@cntr,w,c
 10395  002722  A4D8               	btfss	status,2,c
 10396  002724  D00A               	goto	l5033
 10397                           
 10398                           ; BSR set to: 0
 10399  002726  0E00               	movlw	0
 10400  002728  0100               	movlb	0	; () banked
 10401  00272A  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10402  00272C  0E00               	movlw	0
 10403  00272E  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10404  002730  0E00               	movlw	0
 10405  002732  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10406  002734  0E00               	movlw	0
 10407  002736  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10408                           
 10409                           ; BSR set to: 0
 10410  002738  0012               	return	
 10411  00273A                     l5033:
 10412                           
 10413                           ; BSR set to: 0
 10414  00273A  0100               	movlb	0	; () banked
 10415  00273C  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10416                           
 10417                           ; BSR set to: 0
 10418  00273E  0EFF               	movlw	255
 10419  002740  0100               	movlb	0	; () banked
 10420  002742  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10421  002744  0EFF               	movlw	255
 10422  002746  0100               	movlb	0	; () banked
 10423  002748  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10424  00274A  0E00               	movlw	0
 10425  00274C  0100               	movlb	0	; () banked
 10426  00274E  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10427  002750  0100               	movlb	0	; () banked
 10428  002752  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10429                           
 10430                           ; BSR set to: 0
 10431  002754  0EFF               	movlw	255
 10432  002756  0100               	movlb	0	; () banked
 10433  002758  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10434  00275A  0EFF               	movlw	255
 10435  00275C  0100               	movlb	0	; () banked
 10436  00275E  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10437  002760  0E00               	movlw	0
 10438  002762  0100               	movlb	0	; () banked
 10439  002764  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10440                           
 10441                           ; BSR set to: 0
 10442  002766  0E00               	movlw	0
 10443  002768  6E25               	movwf	__tdiv_to_l_@quot,c
 10444  00276A  0E00               	movlw	0
 10445  00276C  6E26               	movwf	__tdiv_to_l_@quot+1,c
 10446  00276E  0E00               	movlw	0
 10447  002770  6E27               	movwf	__tdiv_to_l_@quot+2,c
 10448  002772  0E00               	movlw	0
 10449  002774  6E28               	movwf	__tdiv_to_l_@quot+3,c
 10450                           
 10451                           ; BSR set to: 0
 10452  002776  0E7F               	movlw	127
 10453  002778  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10454                           
 10455                           ; BSR set to: 0
 10456  00277A  5029               	movf	__tdiv_to_l_@cntr,w,c
 10457  00277C  0F98               	addlw	152
 10458  00277E  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10459                           
 10460                           ; BSR set to: 0
 10461  002780  0E18               	movlw	24
 10462  002782  6E29               	movwf	__tdiv_to_l_@cntr,c
 10463  002784                     l814:
 10464                           
 10465                           ; BSR set to: 0
 10466  002784  90D8               	bcf	status,0,c
 10467  002786  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10468  002788  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10469  00278A  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10470  00278C  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10471                           
 10472                           ; BSR set to: 0
 10473  00278E  0100               	movlb	0	; () banked
 10474  002790  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10475  002792  0100               	movlb	0	; () banked
 10476  002794  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10477  002796  0100               	movlb	0	; () banked
 10478  002798  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10479  00279A  0100               	movlb	0	; () banked
 10480  00279C  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10481  00279E  0100               	movlb	0	; () banked
 10482  0027A0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10483  0027A2  0100               	movlb	0	; () banked
 10484  0027A4  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10485  0027A6  A0D8               	btfss	status,0,c
 10486  0027A8  D00D               	goto	l815
 10487                           
 10488                           ; BSR set to: 0
 10489  0027AA  0100               	movlb	0	; () banked
 10490  0027AC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10491  0027AE  0100               	movlb	0	; () banked
 10492  0027B0  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10493  0027B2  0100               	movlb	0	; () banked
 10494  0027B4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10495  0027B6  0100               	movlb	0	; () banked
 10496  0027B8  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10497  0027BA  0100               	movlb	0	; () banked
 10498  0027BC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10499  0027BE  0100               	movlb	0	; () banked
 10500  0027C0  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10501                           
 10502                           ; BSR set to: 0
 10503  0027C2  8025               	bsf	__tdiv_to_l_@quot,0,c
 10504  0027C4                     l815:
 10505                           
 10506                           ; BSR set to: 0
 10507  0027C4  0100               	movlb	0	; () banked
 10508  0027C6  90D8               	bcf	status,0,c
 10509  0027C8  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10510  0027CA  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10511  0027CC  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10512                           
 10513                           ; BSR set to: 0
 10514  0027CE  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 10515  0027D0  D7D9               	goto	l814
 10516                           
 10517                           ; BSR set to: 0
 10518                           
 10519                           ; BSR set to: 0
 10520  0027D2  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 10521  0027D4  D017               	goto	l5067
 10522                           
 10523                           ; BSR set to: 0
 10524  0027D6  502A               	movf	__tdiv_to_l_@exp1,w,c
 10525  0027D8  0A80               	xorlw	128
 10526  0027DA  0F97               	addlw	151
 10527  0027DC  B0D8               	btfsc	status,0,c
 10528  0027DE  D00A               	goto	l5063
 10529                           
 10530                           ; BSR set to: 0
 10531  0027E0  0E00               	movlw	0
 10532  0027E2  0100               	movlb	0	; () banked
 10533  0027E4  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10534  0027E6  0E00               	movlw	0
 10535  0027E8  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10536  0027EA  0E00               	movlw	0
 10537  0027EC  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10538  0027EE  0E00               	movlw	0
 10539  0027F0  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10540                           
 10541                           ; BSR set to: 0
 10542  0027F2  0012               	return	
 10543  0027F4                     l5063:
 10544  0027F4  90D8               	bcf	status,0,c
 10545  0027F6  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 10546  0027F8  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 10547  0027FA  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 10548  0027FC  3225               	rrcf	__tdiv_to_l_@quot,f,c
 10549  0027FE  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 10550  002800  D7F9               	goto	l5063
 10551  002802  D016               	goto	l821
 10552  002804                     l5067:
 10553  002804  0E17               	movlw	23
 10554  002806  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 10555  002808  D010               	goto	l5075
 10556  00280A  0E00               	movlw	0
 10557  00280C  0100               	movlb	0	; () banked
 10558  00280E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10559  002810  0E00               	movlw	0
 10560  002812  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10561  002814  0E00               	movlw	0
 10562  002816  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10563  002818  0E00               	movlw	0
 10564  00281A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567  00281C  0012               	return	
 10568  00281E                     l5073:
 10569  00281E  90D8               	bcf	status,0,c
 10570  002820  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10571  002822  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10572  002824  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10573  002826  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10574  002828  062A               	decf	__tdiv_to_l_@exp1,f,c
 10575  00282A                     l5075:
 10576  00282A  502A               	movf	__tdiv_to_l_@exp1,w,c
 10577  00282C  A4D8               	btfss	status,2,c
 10578  00282E  D7F7               	goto	l5073
 10579  002830                     l821:
 10580  002830  C025  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10581  002834  C026  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10582  002838  C027  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10583  00283C  C028  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10584  002840  0012               	return		;funcret
 10585  002842                     __end_of__tdiv_to_l_:
 10586                           	opt stack 0
 10587                           tblptru	equ	0xFF8
 10588                           tblptrh	equ	0xFF7
 10589                           tblptrl	equ	0xFF6
 10590                           tablat	equ	0xFF5
 10591                           prodh	equ	0xFF4
 10592                           prodl	equ	0xFF3
 10593                           indf0	equ	0xFEF
 10594                           postinc0	equ	0xFEE
 10595                           fsr0h	equ	0xFEA
 10596                           fsr0l	equ	0xFE9
 10597                           wreg	equ	0xFE8
 10598                           indf1	equ	0xFE7
 10599                           postdec1	equ	0xFE5
 10600                           fsr1h	equ	0xFE2
 10601                           fsr1l	equ	0xFE1
 10602                           indf2	equ	0xFDF
 10603                           postinc2	equ	0xFDE
 10604                           postdec2	equ	0xFDD
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function __div_to_l_ *****************
 10610 ;; Defined at:
 10611 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  f1              3   17[BANK0 ] unsigned long 
 10614 ;;  f2              3   20[BANK0 ] unsigned long 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  quot            4   33[COMRAM] unsigned long 
 10617 ;;  exp1            1   38[COMRAM] unsigned char 
 10618 ;;  cntr            1   37[COMRAM] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  4   17[BANK0 ] unsigned long 
 10621 ;; Registers used:
 10622 ;;		wreg, status,2, status,0
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10628 ;;      Params:         0       6       0       0       0       0       0
 10629 ;;      Locals:         6       0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0
 10631 ;;      Totals:         6       6       0       0       0       0       0
 10632 ;;Total ram usage:       12 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:    3
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_sprintf
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           	psect	text40
 10643  002842                     __ptext40:
 10644                           	opt stack 0
 10645  002842                     __div_to_l_:
 10646                           	opt stack 24
 10647                           
 10648                           ;incstack = 0
 10649  002842  0100               	movlb	0	; () banked
 10650  002844  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10651  002846  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10652  002848  6E27               	movwf	__div_to_l_@exp1,c
 10653  00284A  5027               	movf	__div_to_l_@exp1,w,c
 10654  00284C  A4D8               	btfss	status,2,c
 10655  00284E  D00A               	goto	l5083
 10656                           
 10657                           ; BSR set to: 0
 10658  002850  0E00               	movlw	0
 10659  002852  0100               	movlb	0	; () banked
 10660  002854  6F71               	movwf	?__div_to_l_& (0+255),b
 10661  002856  0E00               	movlw	0
 10662  002858  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10663  00285A  0E00               	movlw	0
 10664  00285C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10665  00285E  0E00               	movlw	0
 10666  002860  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10667                           
 10668                           ; BSR set to: 0
 10669  002862  0012               	return	
 10670  002864                     l5083:
 10671                           
 10672                           ; BSR set to: 0
 10673  002864  0100               	movlb	0	; () banked
 10674  002866  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10675  002868  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10676  00286A  6E26               	movwf	__div_to_l_@cntr,c
 10677  00286C  5026               	movf	__div_to_l_@cntr,w,c
 10678  00286E  A4D8               	btfss	status,2,c
 10679  002870  D00A               	goto	l5089
 10680                           
 10681                           ; BSR set to: 0
 10682  002872  0E00               	movlw	0
 10683  002874  0100               	movlb	0	; () banked
 10684  002876  6F71               	movwf	?__div_to_l_& (0+255),b
 10685  002878  0E00               	movlw	0
 10686  00287A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10687  00287C  0E00               	movlw	0
 10688  00287E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10689  002880  0E00               	movlw	0
 10690  002882  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10691                           
 10692                           ; BSR set to: 0
 10693  002884  0012               	return	
 10694  002886                     l5089:
 10695                           
 10696                           ; BSR set to: 0
 10697  002886  0100               	movlb	0	; () banked
 10698  002888  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10699                           
 10700                           ; BSR set to: 0
 10701  00288A  0EFF               	movlw	255
 10702  00288C  0100               	movlb	0	; () banked
 10703  00288E  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10704  002890  0EFF               	movlw	255
 10705  002892  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10706  002894  0EFF               	movlw	255
 10707  002896  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10708  002898  0E00               	movlw	0
 10709  00289A  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 0
 10712  00289C  0100               	movlb	0	; () banked
 10713  00289E  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10714  0028A0  0EFF               	movlw	255
 10715  0028A2  0100               	movlb	0	; () banked
 10716  0028A4  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10717  0028A6  0EFF               	movlw	255
 10718  0028A8  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10719  0028AA  0EFF               	movlw	255
 10720  0028AC  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10721  0028AE  0E00               	movlw	0
 10722  0028B0  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10723                           
 10724                           ; BSR set to: 0
 10725  0028B2  0E00               	movlw	0
 10726  0028B4  6E22               	movwf	__div_to_l_@quot,c
 10727  0028B6  0E00               	movlw	0
 10728  0028B8  6E23               	movwf	__div_to_l_@quot+1,c
 10729  0028BA  0E00               	movlw	0
 10730  0028BC  6E24               	movwf	__div_to_l_@quot+2,c
 10731  0028BE  0E00               	movlw	0
 10732  0028C0  6E25               	movwf	__div_to_l_@quot+3,c
 10733                           
 10734                           ; BSR set to: 0
 10735  0028C2  0E7F               	movlw	127
 10736  0028C4  5E27               	subwf	__div_to_l_@exp1,f,c
 10737                           
 10738                           ; BSR set to: 0
 10739  0028C6  5026               	movf	__div_to_l_@cntr,w,c
 10740  0028C8  0FA0               	addlw	160
 10741  0028CA  5E27               	subwf	__div_to_l_@exp1,f,c
 10742                           
 10743                           ; BSR set to: 0
 10744  0028CC  0E20               	movlw	32
 10745  0028CE  6E26               	movwf	__div_to_l_@cntr,c
 10746  0028D0                     l5103:
 10747                           
 10748                           ; BSR set to: 0
 10749  0028D0  90D8               	bcf	status,0,c
 10750  0028D2  3622               	rlcf	__div_to_l_@quot,f,c
 10751  0028D4  3623               	rlcf	__div_to_l_@quot+1,f,c
 10752  0028D6  3624               	rlcf	__div_to_l_@quot+2,f,c
 10753  0028D8  3625               	rlcf	__div_to_l_@quot+3,f,c
 10754                           
 10755                           ; BSR set to: 0
 10756  0028DA  0100               	movlb	0	; () banked
 10757  0028DC  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10758  0028DE  0100               	movlb	0	; () banked
 10759  0028E0  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10760  0028E2  0100               	movlb	0	; () banked
 10761  0028E4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10762  0028E6  0100               	movlb	0	; () banked
 10763  0028E8  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10764  0028EA  0100               	movlb	0	; () banked
 10765  0028EC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10766  0028EE  0100               	movlb	0	; () banked
 10767  0028F0  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10768  0028F2  0100               	movlb	0	; () banked
 10769  0028F4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10770  0028F6  0100               	movlb	0	; () banked
 10771  0028F8  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10772  0028FA  A0D8               	btfss	status,0,c
 10773  0028FC  D011               	goto	l5111
 10774                           
 10775                           ; BSR set to: 0
 10776  0028FE  0100               	movlb	0	; () banked
 10777  002900  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10778  002902  0100               	movlb	0	; () banked
 10779  002904  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10780  002906  0100               	movlb	0	; () banked
 10781  002908  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10782  00290A  0100               	movlb	0	; () banked
 10783  00290C  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10784  00290E  0100               	movlb	0	; () banked
 10785  002910  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10786  002912  0100               	movlb	0	; () banked
 10787  002914  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10788  002916  0100               	movlb	0	; () banked
 10789  002918  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10790  00291A  0100               	movlb	0	; () banked
 10791  00291C  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10792                           
 10793                           ; BSR set to: 0
 10794  00291E  8022               	bsf	__div_to_l_@quot,0,c
 10795  002920                     l5111:
 10796                           
 10797                           ; BSR set to: 0
 10798  002920  0100               	movlb	0	; () banked
 10799  002922  90D8               	bcf	status,0,c
 10800  002924  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10801  002926  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10802  002928  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10803  00292A  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10804                           
 10805                           ; BSR set to: 0
 10806  00292C  2E26               	decfsz	__div_to_l_@cntr,f,c
 10807  00292E  D7D0               	goto	l5103
 10808                           
 10809                           ; BSR set to: 0
 10810                           
 10811                           ; BSR set to: 0
 10812  002930  AE27               	btfss	__div_to_l_@exp1,7,c
 10813  002932  D017               	goto	l5127
 10814                           
 10815                           ; BSR set to: 0
 10816  002934  5027               	movf	__div_to_l_@exp1,w,c
 10817  002936  0A80               	xorlw	128
 10818  002938  0F9F               	addlw	159
 10819  00293A  B0D8               	btfsc	status,0,c
 10820  00293C  D00A               	goto	l5123
 10821                           
 10822                           ; BSR set to: 0
 10823  00293E  0E00               	movlw	0
 10824  002940  0100               	movlb	0	; () banked
 10825  002942  6F71               	movwf	?__div_to_l_& (0+255),b
 10826  002944  0E00               	movlw	0
 10827  002946  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10828  002948  0E00               	movlw	0
 10829  00294A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10830  00294C  0E00               	movlw	0
 10831  00294E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10832                           
 10833                           ; BSR set to: 0
 10834  002950  0012               	return	
 10835  002952                     l5123:
 10836  002952  90D8               	bcf	status,0,c
 10837  002954  3225               	rrcf	__div_to_l_@quot+3,f,c
 10838  002956  3224               	rrcf	__div_to_l_@quot+2,f,c
 10839  002958  3223               	rrcf	__div_to_l_@quot+1,f,c
 10840  00295A  3222               	rrcf	__div_to_l_@quot,f,c
 10841  00295C  3E27               	incfsz	__div_to_l_@exp1,f,c
 10842  00295E  D7F9               	goto	l5123
 10843  002960  D016               	goto	l717
 10844  002962                     l5127:
 10845  002962  0E1F               	movlw	31
 10846  002964  6427               	cpfsgt	__div_to_l_@exp1,c
 10847  002966  D010               	goto	l5135
 10848  002968  0E00               	movlw	0
 10849  00296A  0100               	movlb	0	; () banked
 10850  00296C  6F71               	movwf	?__div_to_l_& (0+255),b
 10851  00296E  0E00               	movlw	0
 10852  002970  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10853  002972  0E00               	movlw	0
 10854  002974  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10855  002976  0E00               	movlw	0
 10856  002978  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10857                           
 10858                           ; BSR set to: 0
 10859  00297A  0012               	return	
 10860  00297C                     l5133:
 10861  00297C  90D8               	bcf	status,0,c
 10862  00297E  3622               	rlcf	__div_to_l_@quot,f,c
 10863  002980  3623               	rlcf	__div_to_l_@quot+1,f,c
 10864  002982  3624               	rlcf	__div_to_l_@quot+2,f,c
 10865  002984  3625               	rlcf	__div_to_l_@quot+3,f,c
 10866  002986  0627               	decf	__div_to_l_@exp1,f,c
 10867  002988                     l5135:
 10868  002988  5027               	movf	__div_to_l_@exp1,w,c
 10869  00298A  A4D8               	btfss	status,2,c
 10870  00298C  D7F7               	goto	l5133
 10871  00298E                     l717:
 10872  00298E  C022  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10873  002992  C023  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10874  002996  C024  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10875  00299A  C025  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10876  00299E  0012               	return		;funcret
 10877  0029A0                     __end_of__div_to_l_:
 10878                           	opt stack 0
 10879                           tblptru	equ	0xFF8
 10880                           tblptrh	equ	0xFF7
 10881                           tblptrl	equ	0xFF6
 10882                           tablat	equ	0xFF5
 10883                           prodh	equ	0xFF4
 10884                           prodl	equ	0xFF3
 10885                           indf0	equ	0xFEF
 10886                           postinc0	equ	0xFEE
 10887                           fsr0h	equ	0xFEA
 10888                           fsr0l	equ	0xFE9
 10889                           wreg	equ	0xFE8
 10890                           indf1	equ	0xFE7
 10891                           postdec1	equ	0xFE5
 10892                           fsr1h	equ	0xFE2
 10893                           fsr1l	equ	0xFE1
 10894                           indf2	equ	0xFDF
 10895                           postinc2	equ	0xFDE
 10896                           postdec2	equ	0xFDD
 10897                           fsr2h	equ	0xFDA
 10898                           fsr2l	equ	0xFD9
 10899                           status	equ	0xFD8
 10900                           
 10901 ;; *************** function ___lltoft *****************
 10902 ;; Defined at:
 10903 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  c               4   22[BANK0 ] unsigned long 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  exp             1   40[COMRAM] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  3   22[BANK0 ] float 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0, cstack
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10917 ;;      Params:         0       4       0       0       0       0       0
 10918 ;;      Locals:         1       0       0       0       0       0       0
 10919 ;;      Temps:          4       0       0       0       0       0       0
 10920 ;;      Totals:         5       4       0       0       0       0       0
 10921 ;;Total ram usage:        9 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:    4
 10924 ;; This function calls:
 10925 ;;		___ftpack
 10926 ;; This function is called by:
 10927 ;;		_sprintf
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931                           	psect	text41
 10932  003684                     __ptext41:
 10933                           	opt stack 0
 10934  003684                     ___lltoft:
 10935                           	opt stack 23
 10936                           
 10937                           ;incstack = 0
 10938  003684  0E8E               	movlw	142
 10939  003686  6E29               	movwf	___lltoft@exp,c
 10940  003688  D007               	goto	l5209
 10941  00368A                     l5207:
 10942  00368A  0100               	movlb	0	; () banked
 10943  00368C  90D8               	bcf	status,0,c
 10944  00368E  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10945  003690  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10946  003692  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10947  003694  3376               	rrcf	___lltoft@c& (0+255),f,b
 10948  003696  2A29               	incf	___lltoft@exp,f,c
 10949  003698                     l5209:
 10950  003698  0E00               	movlw	0
 10951  00369A  0100               	movlb	0	; () banked
 10952  00369C  1576               	andwf	___lltoft@c& (0+255),w,b
 10953  00369E  6E25               	movwf	??___lltoft& (0+255),c
 10954  0036A0  0E00               	movlw	0
 10955  0036A2  0100               	movlb	0	; () banked
 10956  0036A4  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 10957  0036A6  6E26               	movwf	(??___lltoft+1)& (0+255),c
 10958  0036A8  0E00               	movlw	0
 10959  0036AA  0100               	movlb	0	; () banked
 10960  0036AC  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 10961  0036AE  6E27               	movwf	(??___lltoft+2)& (0+255),c
 10962  0036B0  0EFF               	movlw	255
 10963  0036B2  0100               	movlb	0	; () banked
 10964  0036B4  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 10965  0036B6  6E28               	movwf	(??___lltoft+3)& (0+255),c
 10966  0036B8  5025               	movf	??___lltoft,w,c
 10967  0036BA  1026               	iorwf	??___lltoft+1,w,c
 10968  0036BC  1027               	iorwf	??___lltoft+2,w,c
 10969  0036BE  1028               	iorwf	??___lltoft+3,w,c
 10970  0036C0  A4D8               	btfss	status,2,c
 10971  0036C2  D7E3               	goto	l5207
 10972                           
 10973                           ; BSR set to: 0
 10974                           
 10975                           ; BSR set to: 0
 10976  0036C4  C076  F071         	movff	___lltoft@c,___ftpack@arg
 10977  0036C8  C077  F072         	movff	___lltoft@c+1,___ftpack@arg+1
 10978  0036CC  C078  F073         	movff	___lltoft@c+2,___ftpack@arg+2
 10979  0036D0  C029  F074         	movff	___lltoft@exp,___ftpack@exp
 10980  0036D4  0E00               	movlw	0
 10981  0036D6  0100               	movlb	0	; () banked
 10982  0036D8  6F75               	movwf	___ftpack@sign& (0+255),b
 10983  0036DA  EC44  F017         	call	___ftpack	;wreg free
 10984  0036DE  C071  F076         	movff	?___ftpack,?___lltoft
 10985  0036E2  C072  F077         	movff	?___ftpack+1,?___lltoft+1
 10986  0036E6  C073  F078         	movff	?___ftpack+2,?___lltoft+2
 10987  0036EA  0012               	return	
 10988  0036EC                     __end_of___lltoft:
 10989                           	opt stack 0
 10990                           tblptru	equ	0xFF8
 10991                           tblptrh	equ	0xFF7
 10992                           tblptrl	equ	0xFF6
 10993                           tablat	equ	0xFF5
 10994                           prodh	equ	0xFF4
 10995                           prodl	equ	0xFF3
 10996                           indf0	equ	0xFEF
 10997                           postinc0	equ	0xFEE
 10998                           fsr0h	equ	0xFEA
 10999                           fsr0l	equ	0xFE9
 11000                           wreg	equ	0xFE8
 11001                           indf1	equ	0xFE7
 11002                           postdec1	equ	0xFE5
 11003                           fsr1h	equ	0xFE2
 11004                           fsr1l	equ	0xFE1
 11005                           indf2	equ	0xFDF
 11006                           postinc2	equ	0xFDE
 11007                           postdec2	equ	0xFDD
 11008                           fsr2h	equ	0xFDA
 11009                           fsr2l	equ	0xFD9
 11010                           status	equ	0xFD8
 11011                           
 11012 ;; *************** function ___llmod *****************
 11013 ;; Defined at:
 11014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  dividend        4   25[BANK0 ] unsigned long 
 11017 ;;  divisor         4   29[BANK0 ] unsigned long 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  counter         1   38[COMRAM] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  4   25[BANK0 ] unsigned long 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11029 ;;      Params:         0       8       0       0       0       0       0
 11030 ;;      Locals:         1       0       0       0       0       0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0
 11032 ;;      Totals:         1       8       0       0       0       0       0
 11033 ;;Total ram usage:        9 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    3
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_sprintf
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text42
 11044  003470                     __ptext42:
 11045                           	opt stack 0
 11046  003470                     ___llmod:
 11047                           	opt stack 24
 11048                           
 11049                           ;incstack = 0
 11050  003470  0100               	movlb	0	; () banked
 11051  003472  517D               	movf	___llmod@divisor& (0+255),w,b
 11052  003474  0100               	movlb	0	; () banked
 11053  003476  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11054  003478  0100               	movlb	0	; () banked
 11055  00347A  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11056  00347C  0100               	movlb	0	; () banked
 11057  00347E  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11058  003480  B4D8               	btfsc	status,2,c
 11059  003482  D037               	goto	l906
 11060                           
 11061                           ; BSR set to: 0
 11062  003484  0E01               	movlw	1
 11063  003486  6E27               	movwf	___llmod@counter,c
 11064  003488  D007               	goto	l5195
 11065  00348A                     l5193:
 11066                           
 11067                           ; BSR set to: 0
 11068  00348A  0100               	movlb	0	; () banked
 11069  00348C  90D8               	bcf	status,0,c
 11070  00348E  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11071  003490  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11072  003492  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11073  003494  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11074  003496  2A27               	incf	___llmod@counter,f,c
 11075  003498                     l5195:
 11076                           
 11077                           ; BSR set to: 0
 11078  003498  0100               	movlb	0	; () banked
 11079  00349A  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11080  00349C  D7F6               	goto	l5193
 11081  00349E                     l5197:
 11082                           
 11083                           ; BSR set to: 0
 11084  00349E  0100               	movlb	0	; () banked
 11085  0034A0  517D               	movf	___llmod@divisor& (0+255),w,b
 11086  0034A2  0100               	movlb	0	; () banked
 11087  0034A4  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11088  0034A6  0100               	movlb	0	; () banked
 11089  0034A8  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11090  0034AA  0100               	movlb	0	; () banked
 11091  0034AC  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11092  0034AE  0100               	movlb	0	; () banked
 11093  0034B0  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11094  0034B2  0100               	movlb	0	; () banked
 11095  0034B4  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11096  0034B6  0100               	movlb	0	; () banked
 11097  0034B8  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11098  0034BA  0100               	movlb	0	; () banked
 11099  0034BC  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11100  0034BE  A0D8               	btfss	status,0,c
 11101  0034C0  D010               	goto	l5201
 11102                           
 11103                           ; BSR set to: 0
 11104  0034C2  0100               	movlb	0	; () banked
 11105  0034C4  517D               	movf	___llmod@divisor& (0+255),w,b
 11106  0034C6  0100               	movlb	0	; () banked
 11107  0034C8  5F79               	subwf	___llmod@dividend& (0+255),f,b
 11108  0034CA  0100               	movlb	0	; () banked
 11109  0034CC  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11110  0034CE  0100               	movlb	0	; () banked
 11111  0034D0  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11112  0034D2  0100               	movlb	0	; () banked
 11113  0034D4  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11114  0034D6  0100               	movlb	0	; () banked
 11115  0034D8  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11116  0034DA  0100               	movlb	0	; () banked
 11117  0034DC  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11118  0034DE  0100               	movlb	0	; () banked
 11119  0034E0  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11120  0034E2                     l5201:
 11121                           
 11122                           ; BSR set to: 0
 11123  0034E2  0100               	movlb	0	; () banked
 11124  0034E4  90D8               	bcf	status,0,c
 11125  0034E6  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11126  0034E8  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11127  0034EA  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11128  0034EC  337D               	rrcf	___llmod@divisor& (0+255),f,b
 11129                           
 11130                           ; BSR set to: 0
 11131  0034EE  2E27               	decfsz	___llmod@counter,f,c
 11132  0034F0  D7D6               	goto	l5197
 11133  0034F2                     l906:
 11134                           
 11135                           ; BSR set to: 0
 11136  0034F2  C079  F079         	movff	___llmod@dividend,?___llmod
 11137  0034F6  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 11138  0034FA  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 11139  0034FE  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 11140                           
 11141                           ; BSR set to: 0
 11142  003502  0012               	return		;funcret
 11143  003504                     __end_of___llmod:
 11144                           	opt stack 0
 11145                           tblptru	equ	0xFF8
 11146                           tblptrh	equ	0xFF7
 11147                           tblptrl	equ	0xFF6
 11148                           tablat	equ	0xFF5
 11149                           prodh	equ	0xFF4
 11150                           prodl	equ	0xFF3
 11151                           indf0	equ	0xFEF
 11152                           postinc0	equ	0xFEE
 11153                           fsr0h	equ	0xFEA
 11154                           fsr0l	equ	0xFE9
 11155                           wreg	equ	0xFE8
 11156                           indf1	equ	0xFE7
 11157                           postdec1	equ	0xFE5
 11158                           fsr1h	equ	0xFE2
 11159                           fsr1l	equ	0xFE1
 11160                           indf2	equ	0xFDF
 11161                           postinc2	equ	0xFDE
 11162                           postdec2	equ	0xFDD
 11163                           fsr2h	equ	0xFDA
 11164                           fsr2l	equ	0xFD9
 11165                           status	equ	0xFD8
 11166                           
 11167 ;; *************** function ___lldiv *****************
 11168 ;; Defined at:
 11169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  dividend        4   17[BANK0 ] unsigned long 
 11172 ;;  divisor         4   21[BANK0 ] unsigned long 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  quotient        4   33[COMRAM] unsigned long 
 11175 ;;  counter         1   37[COMRAM] unsigned char 
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  4   17[BANK0 ] unsigned long 
 11178 ;; Registers used:
 11179 ;;		wreg, status,2, status,0
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11185 ;;      Params:         0       8       0       0       0       0       0
 11186 ;;      Locals:         5       0       0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0
 11188 ;;      Totals:         5       8       0       0       0       0       0
 11189 ;;Total ram usage:       13 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    3
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_sprintf
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text43
 11200  003286                     __ptext43:
 11201                           	opt stack 0
 11202  003286                     ___lldiv:
 11203                           	opt stack 24
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;incstack = 0
 11207  003286  0E00               	movlw	0
 11208  003288  6E22               	movwf	___lldiv@quotient,c
 11209  00328A  0E00               	movlw	0
 11210  00328C  6E23               	movwf	___lldiv@quotient+1,c
 11211  00328E  0E00               	movlw	0
 11212  003290  6E24               	movwf	___lldiv@quotient+2,c
 11213  003292  0E00               	movlw	0
 11214  003294  6E25               	movwf	___lldiv@quotient+3,c
 11215  003296  0100               	movlb	0	; () banked
 11216  003298  5175               	movf	___lldiv@divisor& (0+255),w,b
 11217  00329A  0100               	movlb	0	; () banked
 11218  00329C  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11219  00329E  0100               	movlb	0	; () banked
 11220  0032A0  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11221  0032A2  0100               	movlb	0	; () banked
 11222  0032A4  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11223  0032A6  B4D8               	btfsc	status,2,c
 11224  0032A8  D03D               	goto	l896
 11225                           
 11226                           ; BSR set to: 0
 11227  0032AA  0E01               	movlw	1
 11228  0032AC  6E26               	movwf	___lldiv@counter,c
 11229  0032AE  D007               	goto	l5175
 11230  0032B0                     l5173:
 11231                           
 11232                           ; BSR set to: 0
 11233  0032B0  0100               	movlb	0	; () banked
 11234  0032B2  90D8               	bcf	status,0,c
 11235  0032B4  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11236  0032B6  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11237  0032B8  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11238  0032BA  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11239  0032BC  2A26               	incf	___lldiv@counter,f,c
 11240  0032BE                     l5175:
 11241                           
 11242                           ; BSR set to: 0
 11243  0032BE  0100               	movlb	0	; () banked
 11244  0032C0  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11245  0032C2  D7F6               	goto	l5173
 11246  0032C4                     l5177:
 11247                           
 11248                           ; BSR set to: 0
 11249  0032C4  90D8               	bcf	status,0,c
 11250  0032C6  3622               	rlcf	___lldiv@quotient,f,c
 11251  0032C8  3623               	rlcf	___lldiv@quotient+1,f,c
 11252  0032CA  3624               	rlcf	___lldiv@quotient+2,f,c
 11253  0032CC  3625               	rlcf	___lldiv@quotient+3,f,c
 11254                           
 11255                           ; BSR set to: 0
 11256  0032CE  0100               	movlb	0	; () banked
 11257  0032D0  5175               	movf	___lldiv@divisor& (0+255),w,b
 11258  0032D2  0100               	movlb	0	; () banked
 11259  0032D4  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11260  0032D6  0100               	movlb	0	; () banked
 11261  0032D8  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11262  0032DA  0100               	movlb	0	; () banked
 11263  0032DC  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11264  0032DE  0100               	movlb	0	; () banked
 11265  0032E0  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11266  0032E2  0100               	movlb	0	; () banked
 11267  0032E4  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11268  0032E6  0100               	movlb	0	; () banked
 11269  0032E8  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11270  0032EA  0100               	movlb	0	; () banked
 11271  0032EC  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11272  0032EE  A0D8               	btfss	status,0,c
 11273  0032F0  D011               	goto	l5185
 11274                           
 11275                           ; BSR set to: 0
 11276  0032F2  0100               	movlb	0	; () banked
 11277  0032F4  5175               	movf	___lldiv@divisor& (0+255),w,b
 11278  0032F6  0100               	movlb	0	; () banked
 11279  0032F8  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11280  0032FA  0100               	movlb	0	; () banked
 11281  0032FC  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11282  0032FE  0100               	movlb	0	; () banked
 11283  003300  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11284  003302  0100               	movlb	0	; () banked
 11285  003304  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11286  003306  0100               	movlb	0	; () banked
 11287  003308  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11288  00330A  0100               	movlb	0	; () banked
 11289  00330C  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11290  00330E  0100               	movlb	0	; () banked
 11291  003310  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11292                           
 11293                           ; BSR set to: 0
 11294  003312  8022               	bsf	___lldiv@quotient,0,c
 11295  003314                     l5185:
 11296                           
 11297                           ; BSR set to: 0
 11298  003314  0100               	movlb	0	; () banked
 11299  003316  90D8               	bcf	status,0,c
 11300  003318  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11301  00331A  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11302  00331C  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11303  00331E  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11304                           
 11305                           ; BSR set to: 0
 11306  003320  2E26               	decfsz	___lldiv@counter,f,c
 11307  003322  D7D0               	goto	l5177
 11308  003324                     l896:
 11309                           
 11310                           ; BSR set to: 0
 11311  003324  C022  F071         	movff	___lldiv@quotient,?___lldiv
 11312  003328  C023  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11313  00332C  C024  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11314  003330  C025  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11315                           
 11316                           ; BSR set to: 0
 11317  003334  0012               	return		;funcret
 11318  003336                     __end_of___lldiv:
 11319                           	opt stack 0
 11320                           tblptru	equ	0xFF8
 11321                           tblptrh	equ	0xFF7
 11322                           tblptrl	equ	0xFF6
 11323                           tablat	equ	0xFF5
 11324                           prodh	equ	0xFF4
 11325                           prodl	equ	0xFF3
 11326                           indf0	equ	0xFEF
 11327                           postinc0	equ	0xFEE
 11328                           fsr0h	equ	0xFEA
 11329                           fsr0l	equ	0xFE9
 11330                           wreg	equ	0xFE8
 11331                           indf1	equ	0xFE7
 11332                           postdec1	equ	0xFE5
 11333                           fsr1h	equ	0xFE2
 11334                           fsr1l	equ	0xFE1
 11335                           indf2	equ	0xFDF
 11336                           postinc2	equ	0xFDE
 11337                           postdec2	equ	0xFDD
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342 ;; *************** function ___fttol *****************
 11343 ;; Defined at:
 11344 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  f1              3   48[BANK0 ] float 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  lval            4   58[BANK0 ] unsigned long 
 11349 ;;  exp1            1   62[BANK0 ] unsigned char 
 11350 ;;  sign1           1   57[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  4   48[BANK0 ] long 
 11353 ;; Registers used:
 11354 ;;		wreg, status,2, status,0
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11360 ;;      Params:         0       4       0       0       0       0       0
 11361 ;;      Locals:         0       6       0       0       0       0       0
 11362 ;;      Temps:          0       5       0       0       0       0       0
 11363 ;;      Totals:         0      15       0       0       0       0       0
 11364 ;;Total ram usage:       15 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    3
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_util_getSolarCurrent
 11371 ;;		_util_getBatteryCurrent
 11372 ;;		_sprintf
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text44
 11377  002AF2                     __ptext44:
 11378                           	opt stack 0
 11379  002AF2                     ___fttol:
 11380                           	opt stack 25
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;incstack = 0
 11384  002AF2  C092  F094         	movff	___fttol@f1+2,??___fttol
 11385  002AF6  0100               	movlb	0	; () banked
 11386  002AF8  6B95               	clrf	(??___fttol+1)& (0+255),b
 11387  002AFA  6B96               	clrf	(??___fttol+2)& (0+255),b
 11388  002AFC  0100               	movlb	0	; () banked
 11389  002AFE  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11390  002B00  0100               	movlb	0	; () banked
 11391  002B02  3794               	rlcf	??___fttol& (0+255),f,b
 11392  002B04  E301               	bnc	u3121
 11393  002B06  8195               	bsf	(??___fttol+1)& (0+255),0,b
 11394  002B08                     u3121:
 11395  002B08  0100               	movlb	0	; () banked
 11396  002B0A  5194               	movf	??___fttol& (0+255),w,b
 11397  002B0C  0100               	movlb	0	; () banked
 11398  002B0E  6F9E               	movwf	___fttol@exp1& (0+255),b
 11399  002B10  0100               	movlb	0	; () banked
 11400  002B12  519E               	movf	___fttol@exp1& (0+255),w,b
 11401  002B14  A4D8               	btfss	status,2,c
 11402  002B16  D00A               	goto	l3487
 11403                           
 11404                           ; BSR set to: 0
 11405  002B18  0E00               	movlw	0
 11406  002B1A  0100               	movlb	0	; () banked
 11407  002B1C  6F90               	movwf	?___fttol& (0+255),b
 11408  002B1E  0E00               	movlw	0
 11409  002B20  6F91               	movwf	(?___fttol+1)& (0+255),b
 11410  002B22  0E00               	movlw	0
 11411  002B24  6F92               	movwf	(?___fttol+2)& (0+255),b
 11412  002B26  0E00               	movlw	0
 11413  002B28  6F93               	movwf	(?___fttol+3)& (0+255),b
 11414                           
 11415                           ; BSR set to: 0
 11416  002B2A  0012               	return	
 11417  002B2C                     l3487:
 11418                           
 11419                           ; BSR set to: 0
 11420  002B2C  0E17               	movlw	23
 11421  002B2E  0100               	movlb	0	; () banked
 11422  002B30  6F94               	movwf	??___fttol& (0+255),b
 11423  002B32  C090  F095         	movff	___fttol@f1,??___fttol+1
 11424  002B36  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 11425  002B3A  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 11426  002B3E  0100               	movlb	0	; () banked
 11427  002B40  2994               	incf	??___fttol& (0+255),w,b
 11428  002B42  0100               	movlb	0	; () banked
 11429  002B44  6F98               	movwf	(??___fttol+4)& (0+255),b
 11430  002B46  D005               	goto	u3140
 11431  002B48                     u3145:
 11432  002B48  0100               	movlb	0	; () banked
 11433  002B4A  90D8               	bcf	status,0,c
 11434  002B4C  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 11435  002B4E  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 11436  002B50  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 11437  002B52                     u3140:
 11438  002B52  0100               	movlb	0	; () banked
 11439  002B54  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 11440  002B56  D7F8               	goto	u3145
 11441  002B58  0100               	movlb	0	; () banked
 11442  002B5A  5195               	movf	(??___fttol+1)& (0+255),w,b
 11443  002B5C  0100               	movlb	0	; () banked
 11444  002B5E  6F99               	movwf	___fttol@sign1& (0+255),b
 11445                           
 11446                           ; BSR set to: 0
 11447  002B60  0100               	movlb	0	; () banked
 11448  002B62  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 11449                           
 11450                           ; BSR set to: 0
 11451  002B64  0EFF               	movlw	255
 11452  002B66  0100               	movlb	0	; () banked
 11453  002B68  1790               	andwf	___fttol@f1& (0+255),f,b
 11454  002B6A  0EFF               	movlw	255
 11455  002B6C  0100               	movlb	0	; () banked
 11456  002B6E  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 11457  002B70  0E00               	movlw	0
 11458  002B72  0100               	movlb	0	; () banked
 11459  002B74  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 11460                           
 11461                           ; BSR set to: 0
 11462  002B76  0100               	movlb	0	; () banked
 11463  002B78  5190               	movf	___fttol@f1& (0+255),w,b
 11464  002B7A  0100               	movlb	0	; () banked
 11465  002B7C  6F9A               	movwf	___fttol@lval& (0+255),b
 11466  002B7E  0100               	movlb	0	; () banked
 11467  002B80  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 11468  002B82  0100               	movlb	0	; () banked
 11469  002B84  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 11470  002B86  0100               	movlb	0	; () banked
 11471  002B88  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 11472  002B8A  0100               	movlb	0	; () banked
 11473  002B8C  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 11474  002B8E  0100               	movlb	0	; () banked
 11475  002B90  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 11476                           
 11477                           ; BSR set to: 0
 11478  002B92  0E8E               	movlw	142
 11479  002B94  0100               	movlb	0	; () banked
 11480  002B96  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 11481                           
 11482                           ; BSR set to: 0
 11483  002B98  0100               	movlb	0	; () banked
 11484  002B9A  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 11485  002B9C  D01A               	goto	l3509
 11486                           
 11487                           ; BSR set to: 0
 11488  002B9E  0100               	movlb	0	; () banked
 11489  002BA0  519E               	movf	___fttol@exp1& (0+255),w,b
 11490  002BA2  0A80               	xorlw	128
 11491  002BA4  0F8F               	addlw	143
 11492  002BA6  B0D8               	btfsc	status,0,c
 11493  002BA8  D00A               	goto	l3505
 11494                           
 11495                           ; BSR set to: 0
 11496  002BAA  0E00               	movlw	0
 11497  002BAC  0100               	movlb	0	; () banked
 11498  002BAE  6F90               	movwf	?___fttol& (0+255),b
 11499  002BB0  0E00               	movlw	0
 11500  002BB2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11501  002BB4  0E00               	movlw	0
 11502  002BB6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11503  002BB8  0E00               	movlw	0
 11504  002BBA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11505                           
 11506                           ; BSR set to: 0
 11507  002BBC  0012               	return	
 11508  002BBE                     l3505:
 11509                           
 11510                           ; BSR set to: 0
 11511  002BBE  0100               	movlb	0	; () banked
 11512  002BC0  90D8               	bcf	status,0,c
 11513  002BC2  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11514  002BC4  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11515  002BC6  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11516  002BC8  339A               	rrcf	___fttol@lval& (0+255),f,b
 11517                           
 11518                           ; BSR set to: 0
 11519  002BCA  0100               	movlb	0	; () banked
 11520  002BCC  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 11521  002BCE  D7F7               	goto	l3505
 11522                           
 11523                           ; BSR set to: 0
 11524  002BD0  D01B               	goto	l3519
 11525  002BD2                     l3509:
 11526                           
 11527                           ; BSR set to: 0
 11528  002BD2  0E17               	movlw	23
 11529  002BD4  0100               	movlb	0	; () banked
 11530  002BD6  659E               	cpfsgt	___fttol@exp1& (0+255),b
 11531  002BD8  D012               	goto	l3517
 11532                           
 11533                           ; BSR set to: 0
 11534  002BDA  0E00               	movlw	0
 11535  002BDC  0100               	movlb	0	; () banked
 11536  002BDE  6F90               	movwf	?___fttol& (0+255),b
 11537  002BE0  0E00               	movlw	0
 11538  002BE2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11539  002BE4  0E00               	movlw	0
 11540  002BE6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11541  002BE8  0E00               	movlw	0
 11542  002BEA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11543                           
 11544                           ; BSR set to: 0
 11545  002BEC  0012               	return	
 11546  002BEE                     l3515:
 11547                           
 11548                           ; BSR set to: 0
 11549  002BEE  0100               	movlb	0	; () banked
 11550  002BF0  90D8               	bcf	status,0,c
 11551  002BF2  379A               	rlcf	___fttol@lval& (0+255),f,b
 11552  002BF4  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11553  002BF6  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11554  002BF8  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11555  002BFA  0100               	movlb	0	; () banked
 11556  002BFC  079E               	decf	___fttol@exp1& (0+255),f,b
 11557  002BFE                     l3517:
 11558                           
 11559                           ; BSR set to: 0
 11560  002BFE  0100               	movlb	0	; () banked
 11561  002C00  519E               	movf	___fttol@exp1& (0+255),w,b
 11562  002C02  0100               	movlb	0	; () banked
 11563  002C04  A4D8               	btfss	status,2,c
 11564  002C06  D7F3               	goto	l3515
 11565  002C08                     l3519:
 11566                           
 11567                           ; BSR set to: 0
 11568  002C08  0100               	movlb	0	; () banked
 11569  002C0A  5199               	movf	___fttol@sign1& (0+255),w,b
 11570  002C0C  0100               	movlb	0	; () banked
 11571  002C0E  B4D8               	btfsc	status,2,c
 11572  002C10  D009               	goto	l3523
 11573                           
 11574                           ; BSR set to: 0
 11575  002C12  0100               	movlb	0	; () banked
 11576  002C14  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 11577  002C16  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 11578  002C18  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 11579  002C1A  6D9A               	negf	___fttol@lval& (0+255),b
 11580  002C1C  0E00               	movlw	0
 11581  002C1E  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11582  002C20  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11583  002C22  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11584  002C24                     l3523:
 11585                           
 11586                           ; BSR set to: 0
 11587  002C24  C09A  F090         	movff	___fttol@lval,?___fttol
 11588  002C28  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 11589  002C2C  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 11590  002C30  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 11591  002C34  0012               	return	
 11592  002C36                     __end_of___fttol:
 11593                           	opt stack 0
 11594                           tblptru	equ	0xFF8
 11595                           tblptrh	equ	0xFF7
 11596                           tblptrl	equ	0xFF6
 11597                           tablat	equ	0xFF5
 11598                           prodh	equ	0xFF4
 11599                           prodl	equ	0xFF3
 11600                           indf0	equ	0xFEF
 11601                           postinc0	equ	0xFEE
 11602                           fsr0h	equ	0xFEA
 11603                           fsr0l	equ	0xFE9
 11604                           wreg	equ	0xFE8
 11605                           indf1	equ	0xFE7
 11606                           postdec1	equ	0xFE5
 11607                           fsr1h	equ	0xFE2
 11608                           fsr1l	equ	0xFE1
 11609                           indf2	equ	0xFDF
 11610                           postinc2	equ	0xFDE
 11611                           postdec2	equ	0xFDD
 11612                           fsr2h	equ	0xFDA
 11613                           fsr2l	equ	0xFD9
 11614                           status	equ	0xFD8
 11615                           
 11616 ;; *************** function ___ftsub *****************
 11617 ;; Defined at:
 11618 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  f1              3   63[BANK0 ] float 
 11621 ;;  f2              3   66[BANK0 ] float 
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  3   63[BANK0 ] float 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0, cstack
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11633 ;;      Params:         0       6       0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0
 11636 ;;      Totals:         0       6       0       0       0       0       0
 11637 ;;Total ram usage:        6 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:    5
 11640 ;; This function calls:
 11641 ;;		___ftadd
 11642 ;; This function is called by:
 11643 ;;		_sprintf
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text45
 11648  0037FA                     __ptext45:
 11649                           	opt stack 0
 11650  0037FA                     ___ftsub:
 11651                           	opt stack 22
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;incstack = 0
 11655  0037FA  0100               	movlb	0	; () banked
 11656  0037FC  51A2               	movf	___ftsub@f2& (0+255),w,b
 11657  0037FE  0100               	movlb	0	; () banked
 11658  003800  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11659  003802  0100               	movlb	0	; () banked
 11660  003804  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11661  003806  B4D8               	btfsc	status,2,c
 11662  003808  D009               	goto	l5141
 11663                           
 11664                           ; BSR set to: 0
 11665  00380A  0E00               	movlw	0
 11666  00380C  0100               	movlb	0	; () banked
 11667  00380E  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 11668  003810  0E00               	movlw	0
 11669  003812  0100               	movlb	0	; () banked
 11670  003814  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11671  003816  0E80               	movlw	128
 11672  003818  0100               	movlb	0	; () banked
 11673  00381A  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11674  00381C                     l5141:
 11675                           
 11676                           ; BSR set to: 0
 11677  00381C  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 11678  003820  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 11679  003824  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 11680  003828  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 11681  00382C  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 11682  003830  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 11683  003834  EC9A  F00F         	call	___ftadd	;wreg free
 11684  003838  C093  F09F         	movff	?___ftadd,?___ftsub
 11685  00383C  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 11686  003840  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 11687  003844  0012               	return	
 11688  003846                     __end_of___ftsub:
 11689                           	opt stack 0
 11690                           tblptru	equ	0xFF8
 11691                           tblptrh	equ	0xFF7
 11692                           tblptrl	equ	0xFF6
 11693                           tablat	equ	0xFF5
 11694                           prodh	equ	0xFF4
 11695                           prodl	equ	0xFF3
 11696                           indf0	equ	0xFEF
 11697                           postinc0	equ	0xFEE
 11698                           fsr0h	equ	0xFEA
 11699                           fsr0l	equ	0xFE9
 11700                           wreg	equ	0xFE8
 11701                           indf1	equ	0xFE7
 11702                           postdec1	equ	0xFE5
 11703                           fsr1h	equ	0xFE2
 11704                           fsr1l	equ	0xFE1
 11705                           indf2	equ	0xFDF
 11706                           postinc2	equ	0xFDE
 11707                           postdec2	equ	0xFDD
 11708                           fsr2h	equ	0xFDA
 11709                           fsr2l	equ	0xFD9
 11710                           status	equ	0xFD8
 11711                           
 11712 ;; *************** function ___ftadd *****************
 11713 ;; Defined at:
 11714 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;  f1              3   51[BANK0 ] float 
 11717 ;;  f2              3   54[BANK0 ] float 
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;  exp1            1   62[BANK0 ] unsigned char 
 11720 ;;  exp2            1   61[BANK0 ] unsigned char 
 11721 ;;  sign            1   60[BANK0 ] unsigned char 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  3   51[BANK0 ] float 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11731 ;;      Params:         0       6       0       0       0       0       0
 11732 ;;      Locals:         0       3       0       0       0       0       0
 11733 ;;      Temps:          0       3       0       0       0       0       0
 11734 ;;      Totals:         0      12       0       0       0       0       0
 11735 ;;Total ram usage:       12 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    4
 11738 ;; This function calls:
 11739 ;;		___ftpack
 11740 ;; This function is called by:
 11741 ;;		_util_getTemperature
 11742 ;;		_sprintf
 11743 ;;		___ftsub
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text46
 11748  001F34                     __ptext46:
 11749                           	opt stack 0
 11750  001F34                     ___ftadd:
 11751                           	opt stack 24
 11752                           
 11753                           ;incstack = 0
 11754  001F34  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 11755  001F38  0100               	movlb	0	; () banked
 11756  001F3A  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11757  001F3C  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11758  001F3E  0100               	movlb	0	; () banked
 11759  001F40  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11760  001F42  0100               	movlb	0	; () banked
 11761  001F44  3799               	rlcf	??___ftadd& (0+255),f,b
 11762  001F46  E301               	bnc	u4571
 11763  001F48  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11764  001F4A                     u4571:
 11765  001F4A  0100               	movlb	0	; () banked
 11766  001F4C  5199               	movf	??___ftadd& (0+255),w,b
 11767  001F4E  0100               	movlb	0	; () banked
 11768  001F50  6F9E               	movwf	___ftadd@exp1& (0+255),b
 11769  001F52  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 11770  001F56  0100               	movlb	0	; () banked
 11771  001F58  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11772  001F5A  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11773  001F5C  0100               	movlb	0	; () banked
 11774  001F5E  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11775  001F60  0100               	movlb	0	; () banked
 11776  001F62  3799               	rlcf	??___ftadd& (0+255),f,b
 11777  001F64  E301               	bnc	u4581
 11778  001F66  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11779  001F68                     u4581:
 11780  001F68  0100               	movlb	0	; () banked
 11781  001F6A  5199               	movf	??___ftadd& (0+255),w,b
 11782  001F6C  0100               	movlb	0	; () banked
 11783  001F6E  6F9D               	movwf	___ftadd@exp2& (0+255),b
 11784                           
 11785                           ; BSR set to: 0
 11786  001F70  0100               	movlb	0	; () banked
 11787  001F72  519E               	movf	___ftadd@exp1& (0+255),w,b
 11788  001F74  0100               	movlb	0	; () banked
 11789  001F76  B4D8               	btfsc	status,2,c
 11790  001F78  D011               	goto	l772
 11791                           
 11792                           ; BSR set to: 0
 11793  001F7A  0100               	movlb	0	; () banked
 11794  001F7C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11795  001F7E  0100               	movlb	0	; () banked
 11796  001F80  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11797  001F82  B0D8               	btfsc	status,0,c
 11798  001F84  D012               	goto	l4689
 11799                           
 11800                           ; BSR set to: 0
 11801  001F86  0100               	movlb	0	; () banked
 11802  001F88  519E               	movf	___ftadd@exp1& (0+255),w,b
 11803  001F8A  0800               	sublw	0
 11804  001F8C  0100               	movlb	0	; () banked
 11805  001F8E  259D               	addwf	___ftadd@exp2& (0+255),w,b
 11806  001F90  0100               	movlb	0	; () banked
 11807  001F92  6F99               	movwf	??___ftadd& (0+255),b
 11808  001F94  0E18               	movlw	24
 11809  001F96  0100               	movlb	0	; () banked
 11810  001F98  6599               	cpfsgt	??___ftadd& (0+255),b
 11811  001F9A  D007               	goto	l4689
 11812  001F9C                     l772:
 11813                           
 11814                           ; BSR set to: 0
 11815  001F9C  C096  F093         	movff	___ftadd@f2,?___ftadd
 11816  001FA0  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 11817  001FA4  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 11818  001FA8  0012               	return	
 11819  001FAA                     l4689:
 11820                           
 11821                           ; BSR set to: 0
 11822  001FAA  0100               	movlb	0	; () banked
 11823  001FAC  519D               	movf	___ftadd@exp2& (0+255),w,b
 11824  001FAE  0100               	movlb	0	; () banked
 11825  001FB0  B4D8               	btfsc	status,2,c
 11826  001FB2  D011               	goto	l776
 11827                           
 11828                           ; BSR set to: 0
 11829  001FB4  0100               	movlb	0	; () banked
 11830  001FB6  519E               	movf	___ftadd@exp1& (0+255),w,b
 11831  001FB8  0100               	movlb	0	; () banked
 11832  001FBA  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11833  001FBC  B0D8               	btfsc	status,0,c
 11834  001FBE  D012               	goto	l4695
 11835                           
 11836                           ; BSR set to: 0
 11837  001FC0  0100               	movlb	0	; () banked
 11838  001FC2  519D               	movf	___ftadd@exp2& (0+255),w,b
 11839  001FC4  0800               	sublw	0
 11840  001FC6  0100               	movlb	0	; () banked
 11841  001FC8  259E               	addwf	___ftadd@exp1& (0+255),w,b
 11842  001FCA  0100               	movlb	0	; () banked
 11843  001FCC  6F99               	movwf	??___ftadd& (0+255),b
 11844  001FCE  0E18               	movlw	24
 11845  001FD0  0100               	movlb	0	; () banked
 11846  001FD2  6599               	cpfsgt	??___ftadd& (0+255),b
 11847  001FD4  D007               	goto	l4695
 11848  001FD6                     l776:
 11849                           
 11850                           ; BSR set to: 0
 11851  001FD6  C093  F093         	movff	___ftadd@f1,?___ftadd
 11852  001FDA  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 11853  001FDE  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 11854  001FE2  0012               	return	
 11855  001FE4                     l4695:
 11856                           
 11857                           ; BSR set to: 0
 11858  001FE4  0E06               	movlw	6
 11859  001FE6  0100               	movlb	0	; () banked
 11860  001FE8  6F9C               	movwf	___ftadd@sign& (0+255),b
 11861                           
 11862                           ; BSR set to: 0
 11863  001FEA  0100               	movlb	0	; () banked
 11864  001FEC  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11865  001FEE  D002               	goto	l4701
 11866                           
 11867                           ; BSR set to: 0
 11868  001FF0  0100               	movlb	0	; () banked
 11869  001FF2  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 11870  001FF4                     l4701:
 11871                           
 11872                           ; BSR set to: 0
 11873  001FF4  0100               	movlb	0	; () banked
 11874  001FF6  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11875  001FF8  D002               	goto	l778
 11876                           
 11877                           ; BSR set to: 0
 11878  001FFA  0100               	movlb	0	; () banked
 11879  001FFC  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 11880  001FFE                     l778:
 11881                           
 11882                           ; BSR set to: 0
 11883  001FFE  0100               	movlb	0	; () banked
 11884  002000  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11885                           
 11886                           ; BSR set to: 0
 11887  002002  0EFF               	movlw	255
 11888  002004  0100               	movlb	0	; () banked
 11889  002006  1793               	andwf	___ftadd@f1& (0+255),f,b
 11890  002008  0EFF               	movlw	255
 11891  00200A  0100               	movlb	0	; () banked
 11892  00200C  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11893  00200E  0E00               	movlw	0
 11894  002010  0100               	movlb	0	; () banked
 11895  002012  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11896  002014  0100               	movlb	0	; () banked
 11897  002016  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11898                           
 11899                           ; BSR set to: 0
 11900  002018  0EFF               	movlw	255
 11901  00201A  0100               	movlb	0	; () banked
 11902  00201C  1796               	andwf	___ftadd@f2& (0+255),f,b
 11903  00201E  0EFF               	movlw	255
 11904  002020  0100               	movlb	0	; () banked
 11905  002022  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11906  002024  0E00               	movlw	0
 11907  002026  0100               	movlb	0	; () banked
 11908  002028  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11909                           
 11910                           ; BSR set to: 0
 11911  00202A  0100               	movlb	0	; () banked
 11912  00202C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11913  00202E  0100               	movlb	0	; () banked
 11914  002030  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11915  002032  B0D8               	btfsc	status,0,c
 11916  002034  D025               	goto	l4721
 11917  002036                     l4711:
 11918                           
 11919                           ; BSR set to: 0
 11920  002036  0100               	movlb	0	; () banked
 11921  002038  90D8               	bcf	status,0,c
 11922  00203A  3796               	rlcf	___ftadd@f2& (0+255),f,b
 11923  00203C  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11924  00203E  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11925  002040  0100               	movlb	0	; () banked
 11926  002042  079D               	decf	___ftadd@exp2& (0+255),f,b
 11927                           
 11928                           ; BSR set to: 0
 11929  002044  0100               	movlb	0	; () banked
 11930  002046  519E               	movf	___ftadd@exp1& (0+255),w,b
 11931  002048  0100               	movlb	0	; () banked
 11932  00204A  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11933  00204C  B4D8               	btfsc	status,2,c
 11934  00204E  D011               	goto	l4719
 11935                           
 11936                           ; BSR set to: 0
 11937  002050  0100               	movlb	0	; () banked
 11938  002052  079C               	decf	___ftadd@sign& (0+255),f,b
 11939  002054  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11940  002058  0E07               	movlw	7
 11941  00205A  0100               	movlb	0	; () banked
 11942  00205C  1799               	andwf	??___ftadd& (0+255),f,b
 11943  00205E  B4D8               	btfsc	status,2,c
 11944  002060  D008               	goto	l4719
 11945  002062  D7E9               	goto	l4711
 11946  002064                     l4717:
 11947                           
 11948                           ; BSR set to: 0
 11949  002064  0100               	movlb	0	; () banked
 11950  002066  90D8               	bcf	status,0,c
 11951  002068  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11952  00206A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11953  00206C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 11954  00206E  0100               	movlb	0	; () banked
 11955  002070  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 11956  002072                     l4719:
 11957                           
 11958                           ; BSR set to: 0
 11959  002072  0100               	movlb	0	; () banked
 11960  002074  519D               	movf	___ftadd@exp2& (0+255),w,b
 11961  002076  0100               	movlb	0	; () banked
 11962  002078  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11963  00207A  B4D8               	btfsc	status,2,c
 11964  00207C  D02B               	goto	l787
 11965  00207E  D7F2               	goto	l4717
 11966  002080                     l4721:
 11967                           
 11968                           ; BSR set to: 0
 11969  002080  0100               	movlb	0	; () banked
 11970  002082  519E               	movf	___ftadd@exp1& (0+255),w,b
 11971  002084  0100               	movlb	0	; () banked
 11972  002086  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11973  002088  B0D8               	btfsc	status,0,c
 11974  00208A  D024               	goto	l787
 11975  00208C                     l4723:
 11976                           
 11977                           ; BSR set to: 0
 11978  00208C  0100               	movlb	0	; () banked
 11979  00208E  90D8               	bcf	status,0,c
 11980  002090  3793               	rlcf	___ftadd@f1& (0+255),f,b
 11981  002092  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11982  002094  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11983  002096  0100               	movlb	0	; () banked
 11984  002098  079E               	decf	___ftadd@exp1& (0+255),f,b
 11985                           
 11986                           ; BSR set to: 0
 11987  00209A  0100               	movlb	0	; () banked
 11988  00209C  519E               	movf	___ftadd@exp1& (0+255),w,b
 11989  00209E  0100               	movlb	0	; () banked
 11990  0020A0  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11991  0020A2  B4D8               	btfsc	status,2,c
 11992  0020A4  D011               	goto	l4731
 11993                           
 11994                           ; BSR set to: 0
 11995  0020A6  0100               	movlb	0	; () banked
 11996  0020A8  079C               	decf	___ftadd@sign& (0+255),f,b
 11997  0020AA  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11998  0020AE  0E07               	movlw	7
 11999  0020B0  0100               	movlb	0	; () banked
 12000  0020B2  1799               	andwf	??___ftadd& (0+255),f,b
 12001  0020B4  B4D8               	btfsc	status,2,c
 12002  0020B6  D008               	goto	l4731
 12003  0020B8  D7E9               	goto	l4723
 12004  0020BA                     l4729:
 12005                           
 12006                           ; BSR set to: 0
 12007  0020BA  0100               	movlb	0	; () banked
 12008  0020BC  90D8               	bcf	status,0,c
 12009  0020BE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12010  0020C0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12011  0020C2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 12012  0020C4  0100               	movlb	0	; () banked
 12013  0020C6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 12014  0020C8                     l4731:
 12015                           
 12016                           ; BSR set to: 0
 12017  0020C8  0100               	movlb	0	; () banked
 12018  0020CA  519D               	movf	___ftadd@exp2& (0+255),w,b
 12019  0020CC  0100               	movlb	0	; () banked
 12020  0020CE  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 12021  0020D0  A4D8               	btfss	status,2,c
 12022  0020D2  D7F3               	goto	l4729
 12023  0020D4                     l787:
 12024                           
 12025                           ; BSR set to: 0
 12026  0020D4  0100               	movlb	0	; () banked
 12027  0020D6  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 12028  0020D8  D012               	goto	l796
 12029                           
 12030                           ; BSR set to: 0
 12031  0020DA  0EFF               	movlw	255
 12032  0020DC  0100               	movlb	0	; () banked
 12033  0020DE  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 12034  0020E0  0EFF               	movlw	255
 12035  0020E2  0100               	movlb	0	; () banked
 12036  0020E4  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12037  0020E6  0EFF               	movlw	255
 12038  0020E8  0100               	movlb	0	; () banked
 12039  0020EA  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12040  0020EC  0E01               	movlw	1
 12041  0020EE  0100               	movlb	0	; () banked
 12042  0020F0  2793               	addwf	___ftadd@f1& (0+255),f,b
 12043  0020F2  0E00               	movlw	0
 12044  0020F4  0100               	movlb	0	; () banked
 12045  0020F6  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12046  0020F8  0E00               	movlw	0
 12047  0020FA  0100               	movlb	0	; () banked
 12048  0020FC  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12049  0020FE                     l796:
 12050                           
 12051                           ; BSR set to: 0
 12052  0020FE  0100               	movlb	0	; () banked
 12053  002100  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 12054  002102  D012               	goto	l4737
 12055                           
 12056                           ; BSR set to: 0
 12057  002104  0EFF               	movlw	255
 12058  002106  0100               	movlb	0	; () banked
 12059  002108  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12060  00210A  0EFF               	movlw	255
 12061  00210C  0100               	movlb	0	; () banked
 12062  00210E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12063  002110  0EFF               	movlw	255
 12064  002112  0100               	movlb	0	; () banked
 12065  002114  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12066  002116  0E01               	movlw	1
 12067  002118  0100               	movlb	0	; () banked
 12068  00211A  2796               	addwf	___ftadd@f2& (0+255),f,b
 12069  00211C  0E00               	movlw	0
 12070  00211E  0100               	movlb	0	; () banked
 12071  002120  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12072  002122  0E00               	movlw	0
 12073  002124  0100               	movlb	0	; () banked
 12074  002126  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12075  002128                     l4737:
 12076                           
 12077                           ; BSR set to: 0
 12078  002128  0E00               	movlw	0
 12079  00212A  0100               	movlb	0	; () banked
 12080  00212C  6F9C               	movwf	___ftadd@sign& (0+255),b
 12081                           
 12082                           ; BSR set to: 0
 12083  00212E  0100               	movlb	0	; () banked
 12084  002130  5193               	movf	___ftadd@f1& (0+255),w,b
 12085  002132  0100               	movlb	0	; () banked
 12086  002134  2796               	addwf	___ftadd@f2& (0+255),f,b
 12087  002136  0100               	movlb	0	; () banked
 12088  002138  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 12089  00213A  0100               	movlb	0	; () banked
 12090  00213C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12091  00213E  0100               	movlb	0	; () banked
 12092  002140  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 12093  002142  0100               	movlb	0	; () banked
 12094  002144  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12095                           
 12096                           ; BSR set to: 0
 12097  002146  0100               	movlb	0	; () banked
 12098  002148  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12099  00214A  D015               	goto	l4747
 12100                           
 12101                           ; BSR set to: 0
 12102  00214C  0EFF               	movlw	255
 12103  00214E  0100               	movlb	0	; () banked
 12104  002150  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12105  002152  0EFF               	movlw	255
 12106  002154  0100               	movlb	0	; () banked
 12107  002156  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12108  002158  0EFF               	movlw	255
 12109  00215A  0100               	movlb	0	; () banked
 12110  00215C  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12111  00215E  0E01               	movlw	1
 12112  002160  0100               	movlb	0	; () banked
 12113  002162  2796               	addwf	___ftadd@f2& (0+255),f,b
 12114  002164  0E00               	movlw	0
 12115  002166  0100               	movlb	0	; () banked
 12116  002168  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12117  00216A  0E00               	movlw	0
 12118  00216C  0100               	movlb	0	; () banked
 12119  00216E  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12120                           
 12121                           ; BSR set to: 0
 12122  002170  0E01               	movlw	1
 12123  002172  0100               	movlb	0	; () banked
 12124  002174  6F9C               	movwf	___ftadd@sign& (0+255),b
 12125  002176                     l4747:
 12126                           
 12127                           ; BSR set to: 0
 12128  002176  C096  F071         	movff	___ftadd@f2,___ftpack@arg
 12129  00217A  C097  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
 12130  00217E  C098  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
 12131  002182  C09E  F074         	movff	___ftadd@exp1,___ftpack@exp
 12132  002186  C09C  F075         	movff	___ftadd@sign,___ftpack@sign
 12133  00218A  EC44  F017         	call	___ftpack	;wreg free
 12134  00218E  C071  F093         	movff	?___ftpack,?___ftadd
 12135  002192  C072  F094         	movff	?___ftpack+1,?___ftadd+1
 12136  002196  C073  F095         	movff	?___ftpack+2,?___ftadd+2
 12137  00219A  0012               	return	
 12138  00219C                     __end_of___ftadd:
 12139                           	opt stack 0
 12140                           tblptru	equ	0xFF8
 12141                           tblptrh	equ	0xFF7
 12142                           tblptrl	equ	0xFF6
 12143                           tablat	equ	0xFF5
 12144                           prodh	equ	0xFF4
 12145                           prodl	equ	0xFF3
 12146                           indf0	equ	0xFEF
 12147                           postinc0	equ	0xFEE
 12148                           fsr0h	equ	0xFEA
 12149                           fsr0l	equ	0xFE9
 12150                           wreg	equ	0xFE8
 12151                           indf1	equ	0xFE7
 12152                           postdec1	equ	0xFE5
 12153                           fsr1h	equ	0xFE2
 12154                           fsr1l	equ	0xFE1
 12155                           indf2	equ	0xFDF
 12156                           postinc2	equ	0xFDE
 12157                           postdec2	equ	0xFDD
 12158                           fsr2h	equ	0xFDA
 12159                           fsr2l	equ	0xFD9
 12160                           status	equ	0xFD8
 12161                           
 12162 ;; *************** function ___ftpack *****************
 12163 ;; Defined at:
 12164 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;  arg             3   17[BANK0 ] unsigned um
 12167 ;;  exp             1   20[BANK0 ] unsigned char 
 12168 ;;  sign            1   21[BANK0 ] unsigned char 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  3   17[BANK0 ] float 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12180 ;;      Params:         0       5       0       0       0       0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0
 12182 ;;      Temps:          3       0       0       0       0       0       0
 12183 ;;      Totals:         3       5       0       0       0       0       0
 12184 ;;Total ram usage:        8 bytes
 12185 ;; Hardware stack levels used:    1
 12186 ;; Hardware stack levels required when called:    3
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		___awtoft
 12191 ;;		___ftadd
 12192 ;;		___ftdiv
 12193 ;;		___ftmul
 12194 ;;		___lltoft
 12195 ;;		___lwtoft
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text47
 12200  002E88                     __ptext47:
 12201                           	opt stack 0
 12202  002E88                     ___ftpack:
 12203                           	opt stack 24
 12204                           
 12205                           ;incstack = 0
 12206  002E88  0100               	movlb	0	; () banked
 12207  002E8A  5174               	movf	___ftpack@exp& (0+255),w,b
 12208  002E8C  0100               	movlb	0	; () banked
 12209  002E8E  B4D8               	btfsc	status,2,c
 12210  002E90  D008               	goto	l4599
 12211                           
 12212                           ; BSR set to: 0
 12213  002E92  0100               	movlb	0	; () banked
 12214  002E94  5171               	movf	___ftpack@arg& (0+255),w,b
 12215  002E96  0100               	movlb	0	; () banked
 12216  002E98  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12217  002E9A  0100               	movlb	0	; () banked
 12218  002E9C  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12219  002E9E  A4D8               	btfss	status,2,c
 12220  002EA0  D011               	goto	l4605
 12221  002EA2                     l4599:
 12222                           
 12223                           ; BSR set to: 0
 12224  002EA2  0E00               	movlw	0
 12225  002EA4  0100               	movlb	0	; () banked
 12226  002EA6  6F71               	movwf	?___ftpack& (0+255),b
 12227  002EA8  0E00               	movlw	0
 12228  002EAA  0100               	movlb	0	; () banked
 12229  002EAC  6F72               	movwf	(?___ftpack+1)& (0+255),b
 12230  002EAE  0E00               	movlw	0
 12231  002EB0  0100               	movlb	0	; () banked
 12232  002EB2  6F73               	movwf	(?___ftpack+2)& (0+255),b
 12233                           
 12234                           ; BSR set to: 0
 12235  002EB4  0012               	return	
 12236  002EB6                     l4603:
 12237                           
 12238                           ; BSR set to: 0
 12239  002EB6  0100               	movlb	0	; () banked
 12240  002EB8  2B74               	incf	___ftpack@exp& (0+255),f,b
 12241  002EBA  0100               	movlb	0	; () banked
 12242  002EBC  90D8               	bcf	status,0,c
 12243  002EBE  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12244  002EC0  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12245  002EC2  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12246  002EC4                     l4605:
 12247                           
 12248                           ; BSR set to: 0
 12249  002EC4  0E00               	movlw	0
 12250  002EC6  0100               	movlb	0	; () banked
 12251  002EC8  1571               	andwf	___ftpack@arg& (0+255),w,b
 12252  002ECA  6E22               	movwf	??___ftpack& (0+255),c
 12253  002ECC  0E00               	movlw	0
 12254  002ECE  0100               	movlb	0	; () banked
 12255  002ED0  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12256  002ED2  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12257  002ED4  0EFE               	movlw	254
 12258  002ED6  0100               	movlb	0	; () banked
 12259  002ED8  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12260  002EDA  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12261  002EDC  5022               	movf	??___ftpack,w,c
 12262  002EDE  1023               	iorwf	??___ftpack+1,w,c
 12263  002EE0  1024               	iorwf	??___ftpack+2,w,c
 12264  002EE2  B4D8               	btfsc	status,2,c
 12265  002EE4  D011               	goto	l4611
 12266  002EE6  D7E7               	goto	l4603
 12267  002EE8                     l4607:
 12268                           
 12269                           ; BSR set to: 0
 12270  002EE8  0100               	movlb	0	; () banked
 12271  002EEA  2B74               	incf	___ftpack@exp& (0+255),f,b
 12272                           
 12273                           ; BSR set to: 0
 12274  002EEC  0E01               	movlw	1
 12275  002EEE  0100               	movlb	0	; () banked
 12276  002EF0  2771               	addwf	___ftpack@arg& (0+255),f,b
 12277  002EF2  0E00               	movlw	0
 12278  002EF4  0100               	movlb	0	; () banked
 12279  002EF6  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12280  002EF8  0E00               	movlw	0
 12281  002EFA  0100               	movlb	0	; () banked
 12282  002EFC  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12283  002EFE  0100               	movlb	0	; () banked
 12284  002F00  90D8               	bcf	status,0,c
 12285  002F02  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12286  002F04  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12287  002F06  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12288  002F08                     l4611:
 12289                           
 12290                           ; BSR set to: 0
 12291  002F08  0E00               	movlw	0
 12292  002F0A  0100               	movlb	0	; () banked
 12293  002F0C  1571               	andwf	___ftpack@arg& (0+255),w,b
 12294  002F0E  6E22               	movwf	??___ftpack& (0+255),c
 12295  002F10  0E00               	movlw	0
 12296  002F12  0100               	movlb	0	; () banked
 12297  002F14  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12298  002F16  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12299  002F18  0EFF               	movlw	255
 12300  002F1A  0100               	movlb	0	; () banked
 12301  002F1C  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12302  002F1E  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12303  002F20  5022               	movf	??___ftpack,w,c
 12304  002F22  1023               	iorwf	??___ftpack+1,w,c
 12305  002F24  1024               	iorwf	??___ftpack+2,w,c
 12306  002F26  B4D8               	btfsc	status,2,c
 12307  002F28  D008               	goto	l4615
 12308  002F2A  D7DE               	goto	l4607
 12309  002F2C                     l4613:
 12310                           
 12311                           ; BSR set to: 0
 12312  002F2C  0100               	movlb	0	; () banked
 12313  002F2E  0774               	decf	___ftpack@exp& (0+255),f,b
 12314  002F30  0100               	movlb	0	; () banked
 12315  002F32  90D8               	bcf	status,0,c
 12316  002F34  3771               	rlcf	___ftpack@arg& (0+255),f,b
 12317  002F36  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12318  002F38  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12319  002F3A                     l4615:
 12320                           
 12321                           ; BSR set to: 0
 12322  002F3A  0100               	movlb	0	; () banked
 12323  002F3C  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12324  002F3E  D004               	goto	l749
 12325                           
 12326                           ; BSR set to: 0
 12327  002F40  0E02               	movlw	2
 12328  002F42  0100               	movlb	0	; () banked
 12329  002F44  6174               	cpfslt	___ftpack@exp& (0+255),b
 12330  002F46  D7F2               	goto	l4613
 12331  002F48                     l749:
 12332                           
 12333                           ; BSR set to: 0
 12334  002F48  0100               	movlb	0	; () banked
 12335  002F4A  B174               	btfsc	___ftpack@exp& (0+255),0,b
 12336  002F4C  D002               	goto	l4621
 12337                           
 12338                           ; BSR set to: 0
 12339  002F4E  0100               	movlb	0	; () banked
 12340  002F50  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12341  002F52                     l4621:
 12342                           
 12343                           ; BSR set to: 0
 12344  002F52  0100               	movlb	0	; () banked
 12345  002F54  90D8               	bcf	status,0,c
 12346  002F56  3374               	rrcf	___ftpack@exp& (0+255),f,b
 12347  002F58  0100               	movlb	0	; () banked
 12348  002F5A  5174               	movf	___ftpack@exp& (0+255),w,b
 12349  002F5C  0100               	movlb	0	; () banked
 12350  002F5E  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12351                           
 12352                           ; BSR set to: 0
 12353  002F60  0100               	movlb	0	; () banked
 12354  002F62  5175               	movf	___ftpack@sign& (0+255),w,b
 12355  002F64  0100               	movlb	0	; () banked
 12356  002F66  B4D8               	btfsc	status,2,c
 12357  002F68  D002               	goto	l4627
 12358                           
 12359                           ; BSR set to: 0
 12360  002F6A  0100               	movlb	0	; () banked
 12361  002F6C  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12362  002F6E                     l4627:
 12363                           
 12364                           ; BSR set to: 0
 12365  002F6E  C071  F071         	movff	___ftpack@arg,?___ftpack
 12366  002F72  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
 12367  002F76  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
 12368  002F7A  0012               	return	
 12369  002F7C                     __end_of___ftpack:
 12370                           	opt stack 0
 12371                           tblptru	equ	0xFF8
 12372                           tblptrh	equ	0xFF7
 12373                           tblptrl	equ	0xFF6
 12374                           tablat	equ	0xFF5
 12375                           prodh	equ	0xFF4
 12376                           prodl	equ	0xFF3
 12377                           indf0	equ	0xFEF
 12378                           postinc0	equ	0xFEE
 12379                           fsr0h	equ	0xFEA
 12380                           fsr0l	equ	0xFE9
 12381                           wreg	equ	0xFE8
 12382                           indf1	equ	0xFE7
 12383                           postdec1	equ	0xFE5
 12384                           fsr1h	equ	0xFE2
 12385                           fsr1l	equ	0xFE1
 12386                           indf2	equ	0xFDF
 12387                           postinc2	equ	0xFDE
 12388                           postdec2	equ	0xFDD
 12389                           fsr2h	equ	0xFDA
 12390                           fsr2l	equ	0xFD9
 12391                           status	equ	0xFD8
 12392                           
 12393 ;; *************** function ___ftneg *****************
 12394 ;; Defined at:
 12395 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  f1              3   17[BANK0 ] float 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;		None
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  3   17[BANK0 ] float 
 12402 ;; Registers used:
 12403 ;;		wreg, status,2, status,0
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12409 ;;      Params:         0       3       0       0       0       0       0
 12410 ;;      Locals:         0       0       0       0       0       0       0
 12411 ;;      Temps:          0       0       0       0       0       0       0
 12412 ;;      Totals:         0       3       0       0       0       0       0
 12413 ;;Total ram usage:        3 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; Hardware stack levels required when called:    3
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		_sprintf
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text48
 12424  003B8E                     __ptext48:
 12425                           	opt stack 0
 12426  003B8E                     ___ftneg:
 12427                           	opt stack 24
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;incstack = 0
 12431  003B8E  0100               	movlb	0	; () banked
 12432  003B90  5171               	movf	___ftneg@f1& (0+255),w,b
 12433  003B92  0100               	movlb	0	; () banked
 12434  003B94  1172               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12435  003B96  0100               	movlb	0	; () banked
 12436  003B98  1173               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12437  003B9A  B4D8               	btfsc	status,2,c
 12438  003B9C  D009               	goto	l846
 12439                           
 12440                           ; BSR set to: 0
 12441  003B9E  0E00               	movlw	0
 12442  003BA0  0100               	movlb	0	; () banked
 12443  003BA2  1B71               	xorwf	___ftneg@f1& (0+255),f,b
 12444  003BA4  0E00               	movlw	0
 12445  003BA6  0100               	movlb	0	; () banked
 12446  003BA8  1B72               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12447  003BAA  0E80               	movlw	128
 12448  003BAC  0100               	movlb	0	; () banked
 12449  003BAE  1B73               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12450  003BB0                     l846:
 12451                           
 12452                           ; BSR set to: 0
 12453  003BB0  C071  F071         	movff	___ftneg@f1,?___ftneg
 12454  003BB4  C072  F072         	movff	___ftneg@f1+1,?___ftneg+1
 12455  003BB8  C073  F073         	movff	___ftneg@f1+2,?___ftneg+2
 12456                           
 12457                           ; BSR set to: 0
 12458  003BBC  0012               	return		;funcret
 12459  003BBE                     __end_of___ftneg:
 12460                           	opt stack 0
 12461                           tblptru	equ	0xFF8
 12462                           tblptrh	equ	0xFF7
 12463                           tblptrl	equ	0xFF6
 12464                           tablat	equ	0xFF5
 12465                           prodh	equ	0xFF4
 12466                           prodl	equ	0xFF3
 12467                           indf0	equ	0xFEF
 12468                           postinc0	equ	0xFEE
 12469                           fsr0h	equ	0xFEA
 12470                           fsr0l	equ	0xFE9
 12471                           wreg	equ	0xFE8
 12472                           indf1	equ	0xFE7
 12473                           postdec1	equ	0xFE5
 12474                           fsr1h	equ	0xFE2
 12475                           fsr1l	equ	0xFE1
 12476                           indf2	equ	0xFDF
 12477                           postinc2	equ	0xFDE
 12478                           postdec2	equ	0xFDD
 12479                           fsr2h	equ	0xFDA
 12480                           fsr2l	equ	0xFD9
 12481                           status	equ	0xFD8
 12482                           
 12483 ;; *************** function ___ftge *****************
 12484 ;; Defined at:
 12485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  ff1             3   17[BANK0 ] float 
 12488 ;;  ff2             3   20[BANK0 ] float 
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;		None
 12491 ;; Return value:  Size  Location     Type
 12492 ;;		None               void
 12493 ;; Registers used:
 12494 ;;		wreg, status,2, status,0
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 0/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12500 ;;      Params:         0       6       0       0       0       0       0
 12501 ;;      Locals:         0       0       0       0       0       0       0
 12502 ;;      Temps:          3       0       0       0       0       0       0
 12503 ;;      Totals:         3       6       0       0       0       0       0
 12504 ;;Total ram usage:        9 bytes
 12505 ;; Hardware stack levels used:    1
 12506 ;; Hardware stack levels required when called:    3
 12507 ;; This function calls:
 12508 ;;		Nothing
 12509 ;; This function is called by:
 12510 ;;		_sprintf
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text49
 12515  0031CE                     __ptext49:
 12516                           	opt stack 0
 12517  0031CE                     ___ftge:
 12518                           	opt stack 24
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;incstack = 0
 12522  0031CE  0100               	movlb	0	; () banked
 12523  0031D0  AF73               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12524  0031D2  D019               	goto	l5149
 12525                           
 12526                           ; BSR set to: 0
 12527  0031D4  C071  F022         	movff	___ftge@ff1,??___ftge
 12528  0031D8  C072  F023         	movff	___ftge@ff1+1,??___ftge+1
 12529  0031DC  C073  F024         	movff	___ftge@ff1+2,??___ftge+2
 12530  0031E0  1E22               	comf	??___ftge,f,c
 12531  0031E2  1E23               	comf	??___ftge+1,f,c
 12532  0031E4  1E24               	comf	??___ftge+2,f,c
 12533  0031E6  2A22               	incf	??___ftge,f,c
 12534  0031E8  0E00               	movlw	0
 12535  0031EA  2223               	addwfc	??___ftge+1,f,c
 12536  0031EC  2224               	addwfc	??___ftge+2,f,c
 12537  0031EE  0E00               	movlw	0
 12538  0031F0  2422               	addwf	??___ftge,w,c
 12539  0031F2  0100               	movlb	0	; () banked
 12540  0031F4  6F71               	movwf	___ftge@ff1& (0+255),b
 12541  0031F6  0E00               	movlw	0
 12542  0031F8  2023               	addwfc	??___ftge+1,w,c
 12543  0031FA  0100               	movlb	0	; () banked
 12544  0031FC  6F72               	movwf	(___ftge@ff1+1)& (0+255),b
 12545  0031FE  0E80               	movlw	128
 12546  003200  2024               	addwfc	??___ftge+2,w,c
 12547  003202  0100               	movlb	0	; () banked
 12548  003204  6F73               	movwf	(___ftge@ff1+2)& (0+255),b
 12549  003206                     l5149:
 12550                           
 12551                           ; BSR set to: 0
 12552  003206  0100               	movlb	0	; () banked
 12553  003208  AF76               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12554  00320A  D019               	goto	l5153
 12555                           
 12556                           ; BSR set to: 0
 12557  00320C  C074  F022         	movff	___ftge@ff2,??___ftge
 12558  003210  C075  F023         	movff	___ftge@ff2+1,??___ftge+1
 12559  003214  C076  F024         	movff	___ftge@ff2+2,??___ftge+2
 12560  003218  1E22               	comf	??___ftge,f,c
 12561  00321A  1E23               	comf	??___ftge+1,f,c
 12562  00321C  1E24               	comf	??___ftge+2,f,c
 12563  00321E  2A22               	incf	??___ftge,f,c
 12564  003220  0E00               	movlw	0
 12565  003222  2223               	addwfc	??___ftge+1,f,c
 12566  003224  2224               	addwfc	??___ftge+2,f,c
 12567  003226  0E00               	movlw	0
 12568  003228  2422               	addwf	??___ftge,w,c
 12569  00322A  0100               	movlb	0	; () banked
 12570  00322C  6F74               	movwf	___ftge@ff2& (0+255),b
 12571  00322E  0E00               	movlw	0
 12572  003230  2023               	addwfc	??___ftge+1,w,c
 12573  003232  0100               	movlb	0	; () banked
 12574  003234  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
 12575  003236  0E80               	movlw	128
 12576  003238  2024               	addwfc	??___ftge+2,w,c
 12577  00323A  0100               	movlb	0	; () banked
 12578  00323C  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
 12579  00323E                     l5153:
 12580                           
 12581                           ; BSR set to: 0
 12582  00323E  0E00               	movlw	0
 12583  003240  0100               	movlb	0	; () banked
 12584  003242  1B71               	xorwf	___ftge@ff1& (0+255),f,b
 12585  003244  0E00               	movlw	0
 12586  003246  0100               	movlb	0	; () banked
 12587  003248  1B72               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12588  00324A  0E80               	movlw	128
 12589  00324C  0100               	movlb	0	; () banked
 12590  00324E  1B73               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12591                           
 12592                           ; BSR set to: 0
 12593  003250  0E00               	movlw	0
 12594  003252  0100               	movlb	0	; () banked
 12595  003254  1B74               	xorwf	___ftge@ff2& (0+255),f,b
 12596  003256  0E00               	movlw	0
 12597  003258  0100               	movlb	0	; () banked
 12598  00325A  1B75               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12599  00325C  0E80               	movlw	128
 12600  00325E  0100               	movlb	0	; () banked
 12601  003260  1B76               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12602  003262  0100               	movlb	0	; () banked
 12603  003264  5174               	movf	___ftge@ff2& (0+255),w,b
 12604  003266  0100               	movlb	0	; () banked
 12605  003268  5D71               	subwf	___ftge@ff1& (0+255),w,b
 12606  00326A  0100               	movlb	0	; () banked
 12607  00326C  5175               	movf	(___ftge@ff2+1)& (0+255),w,b
 12608  00326E  0100               	movlb	0	; () banked
 12609  003270  5972               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12610  003272  0100               	movlb	0	; () banked
 12611  003274  5176               	movf	(___ftge@ff2+2)& (0+255),w,b
 12612  003276  0100               	movlb	0	; () banked
 12613  003278  5973               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12614  00327A  B0D8               	btfsc	status,0,c
 12615  00327C  D002               	goto	l5159
 12616                           
 12617                           ; BSR set to: 0
 12618  00327E  90D8               	bcf	status,0,c
 12619  003280  0012               	return	
 12620  003282                     l5159:
 12621                           
 12622                           ; BSR set to: 0
 12623  003282  80D8               	bsf	status,0,c
 12624                           
 12625                           ; BSR set to: 0
 12626  003284  0012               	return	
 12627  003286                     __end_of___ftge:
 12628                           	opt stack 0
 12629                           tblptru	equ	0xFF8
 12630                           tblptrh	equ	0xFF7
 12631                           tblptrl	equ	0xFF6
 12632                           tablat	equ	0xFF5
 12633                           prodh	equ	0xFF4
 12634                           prodl	equ	0xFF3
 12635                           indf0	equ	0xFEF
 12636                           postinc0	equ	0xFEE
 12637                           fsr0h	equ	0xFEA
 12638                           fsr0l	equ	0xFE9
 12639                           wreg	equ	0xFE8
 12640                           indf1	equ	0xFE7
 12641                           postdec1	equ	0xFE5
 12642                           fsr1h	equ	0xFE2
 12643                           fsr1l	equ	0xFE1
 12644                           indf2	equ	0xFDF
 12645                           postinc2	equ	0xFDE
 12646                           postdec2	equ	0xFDD
 12647                           fsr2h	equ	0xFDA
 12648                           fsr2l	equ	0xFD9
 12649                           status	equ	0xFD8
 12650                           
 12651 ;; *************** function _memset *****************
 12652 ;; Defined at:
 12653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  p1              2   17[BANK0 ] PTR void 
 12656 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12657 ;;  c               2   19[BANK0 ] int 
 12658 ;;  n               2   21[BANK0 ] unsigned int 
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  p               2   33[COMRAM] PTR unsigned char 
 12661 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  2   17[BANK0 ] PTR void 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12671 ;;      Params:         0       6       0       0       0       0       0
 12672 ;;      Locals:         2       0       0       0       0       0       0
 12673 ;;      Temps:          0       0       0       0       0       0       0
 12674 ;;      Totals:         2       6       0       0       0       0       0
 12675 ;;Total ram usage:        8 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:    3
 12678 ;; This function calls:
 12679 ;;		Nothing
 12680 ;; This function is called by:
 12681 ;;		_util_beacon_transmission
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           	psect	text50
 12686  003AFC                     __ptext50:
 12687                           	opt stack 0
 12688  003AFC                     _memset:
 12689                           	opt stack 25
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;incstack = 0
 12693  003AFC  C071  F022         	movff	memset@p1,memset@p
 12694  003B00  C072  F023         	movff	memset@p1+1,memset@p+1
 12695  003B04  D008               	goto	l5309
 12696  003B06                     l5305:
 12697  003B06  C022  FFD9         	movff	memset@p,fsr2l
 12698  003B0A  C023  FFDA         	movff	memset@p+1,fsr2h
 12699  003B0E  C073  FFDF         	movff	memset@c,indf2
 12700  003B12  4A22               	infsnz	memset@p,f,c
 12701  003B14  2A23               	incf	memset@p+1,f,c
 12702  003B16                     l5309:
 12703  003B16  0100               	movlb	0	; () banked
 12704  003B18  0775               	decf	memset@n& (0+255),f,b
 12705  003B1A  A0D8               	btfss	status,0,c
 12706  003B1C  0776               	decf	(memset@n+1)& (0+255),f,b
 12707  003B1E  0100               	movlb	0	; () banked
 12708  003B20  2975               	incf	memset@n& (0+255),w,b
 12709  003B22  E1F1               	bnz	l5305
 12710  003B24  0100               	movlb	0	; () banked
 12711  003B26  2976               	incf	(memset@n+1)& (0+255),w,b
 12712  003B28  B4D8               	btfsc	status,2,c
 12713  003B2A  0012               	return	
 12714  003B2C  D7EC               	goto	l5305
 12715  003B2E                     __end_of_memset:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           indf0	equ	0xFEF
 12724                           postinc0	equ	0xFEE
 12725                           fsr0h	equ	0xFEA
 12726                           fsr0l	equ	0xFE9
 12727                           wreg	equ	0xFE8
 12728                           indf1	equ	0xFE7
 12729                           postdec1	equ	0xFE5
 12730                           fsr1h	equ	0xFE2
 12731                           fsr1l	equ	0xFE1
 12732                           indf2	equ	0xFDF
 12733                           postinc2	equ	0xFDE
 12734                           postdec2	equ	0xFDD
 12735                           fsr2h	equ	0xFDA
 12736                           fsr2l	equ	0xFD9
 12737                           status	equ	0xFD8
 12738                           
 12739 ;; *************** function _initialize *****************
 12740 ;; Defined at:
 12741 ;;		line 17 in file "easat2_util_initialize.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  1    wreg      void 
 12748 ;; Registers used:
 12749 ;;		wreg, status,2, cstack
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12755 ;;      Params:         0       0       0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0
 12758 ;;      Totals:         0       0       0       0       0       0       0
 12759 ;;Total ram usage:        0 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    4
 12762 ;; This function calls:
 12763 ;;		_util_timer1_initialize
 12764 ;; This function is called by:
 12765 ;;		_main
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           	psect	text51
 12770  003590                     __ptext51:
 12771                           	opt stack 0
 12772  003590                     _initialize:
 12773                           	opt stack 26
 12774                           
 12775                           ;easat2_util_initialize.c: 26: VREFCON0bits.FVREN = 1;
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;incstack = 0
 12779  003590  010F               	movlb	15	; () banked
 12780  003592  8F42               	bsf	66,7,b	;volatile
 12781                           
 12782                           ;easat2_util_initialize.c: 27: VREFCON0bits.FVRS0 = 0;
 12783  003594  010F               	movlb	15	; () banked
 12784  003596  9942               	bcf	66,4,b	;volatile
 12785                           
 12786                           ;easat2_util_initialize.c: 28: VREFCON0bits.FVRS1 = 1;
 12787  003598  010F               	movlb	15	; () banked
 12788  00359A  8B42               	bsf	66,5,b	;volatile
 12789                           
 12790                           ;easat2_util_initialize.c: 30: VREFCON0bits.FVRST = 1;
 12791  00359C  010F               	movlb	15	; () banked
 12792  00359E  8D42               	bsf	66,6,b	;volatile
 12793                           
 12794                           ; BSR set to: 15
 12795                           ;easat2_util_initialize.c: 35: ADCON1 = 0x08;
 12796  0035A0  0E08               	movlw	8
 12797  0035A2  6EC1               	movwf	4033,c	;volatile
 12798                           
 12799                           ;easat2_util_initialize.c: 36: ADCON2 = 0xAF;
 12800  0035A4  0EAF               	movlw	175
 12801  0035A6  6EC0               	movwf	4032,c	;volatile
 12802                           
 12803                           ; BSR set to: 15
 12804                           ;easat2_util_initialize.c: 40: TRISAbits.TRISA0 = 1;
 12805  0035A8  8092               	bsf	3986,0,c	;volatile
 12806                           
 12807                           ; BSR set to: 15
 12808                           ;easat2_util_initialize.c: 41: TRISAbits.TRISA1 = 1;
 12809  0035AA  8292               	bsf	3986,1,c	;volatile
 12810                           
 12811                           ; BSR set to: 15
 12812                           ;easat2_util_initialize.c: 42: TRISAbits.TRISA2 = 1;
 12813  0035AC  8492               	bsf	3986,2,c	;volatile
 12814                           
 12815                           ; BSR set to: 15
 12816                           ;easat2_util_initialize.c: 43: TRISAbits.TRISA3 = 1;
 12817  0035AE  8692               	bsf	3986,3,c	;volatile
 12818                           
 12819                           ; BSR set to: 15
 12820                           ;easat2_util_initialize.c: 44: TRISAbits.TRISA4 = 1;
 12821  0035B0  8892               	bsf	3986,4,c	;volatile
 12822                           
 12823                           ; BSR set to: 15
 12824                           ;easat2_util_initialize.c: 45: TRISAbits.TRISA5 = 1;
 12825  0035B2  8A92               	bsf	3986,5,c	;volatile
 12826                           
 12827                           ; BSR set to: 15
 12828                           ;easat2_util_initialize.c: 52: ANSELAbits.ANSA0 = 1;
 12829  0035B4  010F               	movlb	15	; () banked
 12830  0035B6  8138               	bsf	56,0,b	;volatile
 12831                           
 12832                           ; BSR set to: 15
 12833                           ;easat2_util_initialize.c: 53: ANSELAbits.ANSA1 = 1;
 12834  0035B8  010F               	movlb	15	; () banked
 12835  0035BA  8338               	bsf	56,1,b	;volatile
 12836                           
 12837                           ; BSR set to: 15
 12838                           ;easat2_util_initialize.c: 54: ANSELAbits.ANSA2 = 1;
 12839  0035BC  010F               	movlb	15	; () banked
 12840  0035BE  8538               	bsf	56,2,b	;volatile
 12841                           
 12842                           ; BSR set to: 15
 12843                           ;easat2_util_initialize.c: 55: ANSELAbits.ANSA3 = 0;
 12844  0035C0  010F               	movlb	15	; () banked
 12845  0035C2  9738               	bcf	56,3,b	;volatile
 12846                           
 12847                           ; BSR set to: 15
 12848                           ;easat2_util_initialize.c: 57: ANSELAbits.ANSA5 = 1;
 12849  0035C4  010F               	movlb	15	; () banked
 12850  0035C6  8B38               	bsf	56,5,b	;volatile
 12851                           
 12852                           ; BSR set to: 15
 12853                           ;easat2_util_initialize.c: 61: LATAbits.LATA0 = 0;
 12854  0035C8  9089               	bcf	3977,0,c	;volatile
 12855                           
 12856                           ; BSR set to: 15
 12857                           ;easat2_util_initialize.c: 62: LATAbits.LATA1 = 0;
 12858  0035CA  9289               	bcf	3977,1,c	;volatile
 12859                           
 12860                           ; BSR set to: 15
 12861                           ;easat2_util_initialize.c: 63: LATAbits.LATA2 = 0;
 12862  0035CC  9489               	bcf	3977,2,c	;volatile
 12863                           
 12864                           ; BSR set to: 15
 12865                           ;easat2_util_initialize.c: 64: LATAbits.LATA3 = 0;
 12866  0035CE  9689               	bcf	3977,3,c	;volatile
 12867                           
 12868                           ; BSR set to: 15
 12869                           ;easat2_util_initialize.c: 65: LATAbits.LATA4 = 0;
 12870  0035D0  9889               	bcf	3977,4,c	;volatile
 12871                           
 12872                           ; BSR set to: 15
 12873                           ;easat2_util_initialize.c: 66: LATAbits.LATA5 = 0;
 12874  0035D2  9A89               	bcf	3977,5,c	;volatile
 12875                           
 12876                           ; BSR set to: 15
 12877                           ;easat2_util_initialize.c: 73: TRISDbits.TRISD0 = 0;
 12878  0035D4  9095               	bcf	3989,0,c	;volatile
 12879                           
 12880                           ; BSR set to: 15
 12881                           ;easat2_util_initialize.c: 74: TRISDbits.TRISD1 = 0;
 12882  0035D6  9295               	bcf	3989,1,c	;volatile
 12883                           
 12884                           ; BSR set to: 15
 12885                           ;easat2_util_initialize.c: 75: TRISDbits.TRISD2 = 0;
 12886  0035D8  9495               	bcf	3989,2,c	;volatile
 12887                           
 12888                           ; BSR set to: 15
 12889                           ;easat2_util_initialize.c: 76: TRISDbits.TRISD3 = 0;
 12890  0035DA  9695               	bcf	3989,3,c	;volatile
 12891                           
 12892                           ; BSR set to: 15
 12893                           ;easat2_util_initialize.c: 77: TRISDbits.TRISD4 = 0;
 12894  0035DC  9895               	bcf	3989,4,c	;volatile
 12895                           
 12896                           ; BSR set to: 15
 12897                           ;easat2_util_initialize.c: 78: TRISDbits.TRISD5 = 0;
 12898  0035DE  9A95               	bcf	3989,5,c	;volatile
 12899                           
 12900                           ; BSR set to: 15
 12901                           ;easat2_util_initialize.c: 79: TRISDbits.TRISD6 = 0;
 12902  0035E0  9C95               	bcf	3989,6,c	;volatile
 12903                           
 12904                           ; BSR set to: 15
 12905                           ;easat2_util_initialize.c: 80: TRISDbits.TRISD7 = 0;
 12906  0035E2  9E95               	bcf	3989,7,c	;volatile
 12907                           
 12908                           ; BSR set to: 15
 12909                           ;easat2_util_initialize.c: 84: ANSELDbits.ANSD0 = 0;
 12910  0035E4  010F               	movlb	15	; () banked
 12911  0035E6  913B               	bcf	59,0,b	;volatile
 12912                           
 12913                           ; BSR set to: 15
 12914                           ;easat2_util_initialize.c: 85: ANSELDbits.ANSD1 = 0;
 12915  0035E8  010F               	movlb	15	; () banked
 12916  0035EA  933B               	bcf	59,1,b	;volatile
 12917                           
 12918                           ; BSR set to: 15
 12919                           ;easat2_util_initialize.c: 86: ANSELDbits.ANSD2 = 0;
 12920  0035EC  010F               	movlb	15	; () banked
 12921  0035EE  953B               	bcf	59,2,b	;volatile
 12922                           
 12923                           ; BSR set to: 15
 12924                           ;easat2_util_initialize.c: 87: ANSELDbits.ANSD3 = 0;
 12925  0035F0  010F               	movlb	15	; () banked
 12926  0035F2  973B               	bcf	59,3,b	;volatile
 12927                           
 12928                           ; BSR set to: 15
 12929                           ;easat2_util_initialize.c: 88: ANSELDbits.ANSD4 = 0;
 12930  0035F4  010F               	movlb	15	; () banked
 12931  0035F6  993B               	bcf	59,4,b	;volatile
 12932                           
 12933                           ; BSR set to: 15
 12934                           ;easat2_util_initialize.c: 89: ANSELDbits.ANSD5 = 0;
 12935  0035F8  010F               	movlb	15	; () banked
 12936  0035FA  9B3B               	bcf	59,5,b	;volatile
 12937                           
 12938                           ; BSR set to: 15
 12939                           ;easat2_util_initialize.c: 90: ANSELDbits.ANSD6 = 0;
 12940  0035FC  010F               	movlb	15	; () banked
 12941  0035FE  9D3B               	bcf	59,6,b	;volatile
 12942                           
 12943                           ; BSR set to: 15
 12944                           ;easat2_util_initialize.c: 91: ANSELDbits.ANSD7 = 0;
 12945  003600  010F               	movlb	15	; () banked
 12946  003602  9F3B               	bcf	59,7,b	;volatile
 12947                           
 12948                           ; BSR set to: 15
 12949                           ;easat2_util_initialize.c: 95: LATDbits.LATD0 = 0;
 12950  003604  908C               	bcf	3980,0,c	;volatile
 12951                           
 12952                           ; BSR set to: 15
 12953                           ;easat2_util_initialize.c: 96: LATDbits.LATD1 = 0;
 12954  003606  928C               	bcf	3980,1,c	;volatile
 12955                           
 12956                           ; BSR set to: 15
 12957                           ;easat2_util_initialize.c: 97: LATDbits.LATD2 = 0;
 12958  003608  948C               	bcf	3980,2,c	;volatile
 12959                           
 12960                           ; BSR set to: 15
 12961                           ;easat2_util_initialize.c: 98: LATDbits.LATD3 = 0;
 12962  00360A  968C               	bcf	3980,3,c	;volatile
 12963                           
 12964                           ; BSR set to: 15
 12965                           ;easat2_util_initialize.c: 99: LATDbits.LATD4 = 0;
 12966  00360C  988C               	bcf	3980,4,c	;volatile
 12967                           
 12968                           ; BSR set to: 15
 12969                           ;easat2_util_initialize.c: 100: LATDbits.LATD5 = 0;
 12970  00360E  9A8C               	bcf	3980,5,c	;volatile
 12971                           
 12972                           ; BSR set to: 15
 12973                           ;easat2_util_initialize.c: 101: LATDbits.LATD6 = 0;
 12974  003610  9C8C               	bcf	3980,6,c	;volatile
 12975                           
 12976                           ; BSR set to: 15
 12977                           ;easat2_util_initialize.c: 102: LATDbits.LATD7 = 0;
 12978  003612  9E8C               	bcf	3980,7,c	;volatile
 12979                           
 12980                           ; BSR set to: 15
 12981                           ;easat2_util_initialize.c: 106: util_timer1_initialize();
 12982  003614  ECF4  F01D         	call	_util_timer1_initialize	;wreg free
 12983  003618  0012               	return		;funcret
 12984  00361A                     __end_of_initialize:
 12985                           	opt stack 0
 12986                           tblptru	equ	0xFF8
 12987                           tblptrh	equ	0xFF7
 12988                           tblptrl	equ	0xFF6
 12989                           tablat	equ	0xFF5
 12990                           prodh	equ	0xFF4
 12991                           prodl	equ	0xFF3
 12992                           indf0	equ	0xFEF
 12993                           postinc0	equ	0xFEE
 12994                           fsr0h	equ	0xFEA
 12995                           fsr0l	equ	0xFE9
 12996                           wreg	equ	0xFE8
 12997                           indf1	equ	0xFE7
 12998                           postdec1	equ	0xFE5
 12999                           fsr1h	equ	0xFE2
 13000                           fsr1l	equ	0xFE1
 13001                           indf2	equ	0xFDF
 13002                           postinc2	equ	0xFDE
 13003                           postdec2	equ	0xFDD
 13004                           fsr2h	equ	0xFDA
 13005                           fsr2l	equ	0xFD9
 13006                           status	equ	0xFD8
 13007                           
 13008 ;; *************** function _util_timer1_initialize *****************
 13009 ;; Defined at:
 13010 ;;		line 19 in file "easat2_util_timer.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;		None
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;		None
 13015 ;; Return value:  Size  Location     Type
 13016 ;;                  1    wreg      void 
 13017 ;; Registers used:
 13018 ;;		wreg, status,2
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13024 ;;      Params:         0       0       0       0       0       0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0
 13026 ;;      Temps:          0       0       0       0       0       0       0
 13027 ;;      Totals:         0       0       0       0       0       0       0
 13028 ;;Total ram usage:        0 bytes
 13029 ;; Hardware stack levels used:    1
 13030 ;; Hardware stack levels required when called:    3
 13031 ;; This function calls:
 13032 ;;		Nothing
 13033 ;; This function is called by:
 13034 ;;		_initialize
 13035 ;; This function uses a non-reentrant model
 13036 ;;
 13037                           
 13038                           	psect	text52
 13039  003BE8                     __ptext52:
 13040                           	opt stack 0
 13041  003BE8                     _util_timer1_initialize:
 13042                           	opt stack 26
 13043                           
 13044                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 13045                           
 13046                           ;incstack = 0
 13047  003BE8  8ED0               	bsf	4048,7,c	;volatile
 13048                           
 13049                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 13050  003BEA  90CD               	bcf	4045,0,c	;volatile
 13051                           
 13052                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 13053  003BEC  9CCD               	bcf	4045,6,c	;volatile
 13054                           
 13055                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 13056  003BEE  9ECD               	bcf	4045,7,c	;volatile
 13057                           
 13058                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 13059  003BF0  9ACD               	bcf	4045,5,c	;volatile
 13060                           
 13061                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 13062  003BF2  98CD               	bcf	4045,4,c	;volatile
 13063                           
 13064                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 13065  003BF4  96CD               	bcf	4045,3,c	;volatile
 13066                           
 13067                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 13068  003BF6  82CD               	bsf	4045,1,c	;volatile
 13069                           
 13070                           ;easat2_util_timer.c: 53: TMR1H = 0xEC;
 13071  003BF8  0EEC               	movlw	236
 13072  003BFA  6ECF               	movwf	4047,c	;volatile
 13073                           
 13074                           ;easat2_util_timer.c: 54: TMR1L = 0x77 ; 60535;
 13075  003BFC  0E77               	movlw	119
 13076  003BFE  6ECE               	movwf	4046,c	;volatile
 13077                           
 13078                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 13079  003C00  809D               	bsf	3997,0,c	;volatile
 13080                           
 13081                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 13082  003C02  809F               	bsf	3999,0,c	;volatile
 13083                           
 13084                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 13085  003C04  909E               	bcf	3998,0,c	;volatile
 13086                           
 13087                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 13088  003C06  80CD               	bsf	4045,0,c	;volatile
 13089                           
 13090                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 13091  003C08  9CF2               	bcf	intcon,6,c	;volatile
 13092                           
 13093                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 13094  003C0A  8EF2               	bsf	intcon,7,c	;volatile
 13095  003C0C  0012               	return		;funcret
 13096  003C0E                     __end_of_util_timer1_initialize:
 13097                           	opt stack 0
 13098                           tblptru	equ	0xFF8
 13099                           tblptrh	equ	0xFF7
 13100                           tblptrl	equ	0xFF6
 13101                           tablat	equ	0xFF5
 13102                           prodh	equ	0xFF4
 13103                           prodl	equ	0xFF3
 13104                           intcon	equ	0xFF2
 13105                           indf0	equ	0xFEF
 13106                           postinc0	equ	0xFEE
 13107                           fsr0h	equ	0xFEA
 13108                           fsr0l	equ	0xFE9
 13109                           wreg	equ	0xFE8
 13110                           indf1	equ	0xFE7
 13111                           postdec1	equ	0xFE5
 13112                           fsr1h	equ	0xFE2
 13113                           fsr1l	equ	0xFE1
 13114                           indf2	equ	0xFDF
 13115                           postinc2	equ	0xFDE
 13116                           postdec2	equ	0xFDD
 13117                           fsr2h	equ	0xFDA
 13118                           fsr2l	equ	0xFD9
 13119                           status	equ	0xFD8
 13120                           
 13121 ;; *************** function _low_priority_int *****************
 13122 ;; Defined at:
 13123 ;;		line 223 in file "easat2_util_timer.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;		None
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;		None
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1    wreg      void 
 13130 ;; Registers used:
 13131 ;;		None
 13132 ;; Tracked objects:
 13133 ;;		On entry : 0/0
 13134 ;;		On exit  : 0/0
 13135 ;;		Unchanged: 0/0
 13136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13137 ;;      Params:         0       0       0       0       0       0       0
 13138 ;;      Locals:         0       0       0       0       0       0       0
 13139 ;;      Temps:          0      17       0       0       0       0       0
 13140 ;;      Totals:         0      17       0       0       0       0       0
 13141 ;;Total ram usage:       17 bytes
 13142 ;; Hardware stack levels used:    1
 13143 ;; Hardware stack levels required when called:    2
 13144 ;; This function calls:
 13145 ;;		Nothing
 13146 ;; This function is called by:
 13147 ;;		Interrupt level 1
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151                           	psect	intcodelo
 13152  000018                     __pintcodelo:
 13153                           	opt stack 0
 13154  000018                     _low_priority_int:
 13155                           	opt stack 21
 13156                           
 13157                           ;incstack = 0
 13158  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13159  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13160  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13161  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13162  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13163  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13164  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13165  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13166  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13167  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13168  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13169  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13170  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13171  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13172  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13173  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13174  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13175  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13176  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13177  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13178  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13179  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13180  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13181  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13182  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13183  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13184  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13185  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13186  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13187  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13188  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13189  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13190  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13191  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13192  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13193  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13194  0000A4  0010               	retfie	
 13195  0000A6                     __end_of_low_priority_int:
 13196                           	opt stack 0
 13197                           pclatu	equ	0xFFB
 13198                           pclath	equ	0xFFA
 13199                           tblptru	equ	0xFF8
 13200                           tblptrh	equ	0xFF7
 13201                           tblptrl	equ	0xFF6
 13202                           tablat	equ	0xFF5
 13203                           prodh	equ	0xFF4
 13204                           prodl	equ	0xFF3
 13205                           intcon	equ	0xFF2
 13206                           indf0	equ	0xFEF
 13207                           postinc0	equ	0xFEE
 13208                           fsr0h	equ	0xFEA
 13209                           fsr0l	equ	0xFE9
 13210                           wreg	equ	0xFE8
 13211                           indf1	equ	0xFE7
 13212                           postdec1	equ	0xFE5
 13213                           fsr1h	equ	0xFE2
 13214                           fsr1l	equ	0xFE1
 13215                           bsr	equ	0xFE0
 13216                           indf2	equ	0xFDF
 13217                           postinc2	equ	0xFDE
 13218                           postdec2	equ	0xFDD
 13219                           fsr2h	equ	0xFDA
 13220                           fsr2l	equ	0xFD9
 13221                           status	equ	0xFD8
 13222                           
 13223 ;; *************** function _high_priority_int *****************
 13224 ;; Defined at:
 13225 ;;		line 74 in file "easat2_util_timer.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;		None
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;  i               2   31[COMRAM] int 
 13230 ;;  sample          2   29[COMRAM] unsigned int 
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      void 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13240 ;;      Params:         0       0       0       0       0       0       0
 13241 ;;      Locals:         4       0       0       0       0       0       0
 13242 ;;      Temps:         19       0       0       0       0       0       0
 13243 ;;      Totals:        23       0       0       0       0       0       0
 13244 ;;Total ram usage:       23 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:    1
 13247 ;; This function calls:
 13248 ;;		___ltdiv
 13249 ;; This function is called by:
 13250 ;;		Interrupt level 2
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           	psect	intcode
 13255  000008                     __pintcode:
 13256                           	opt stack 0
 13257  000008                     _high_priority_int:
 13258                           	opt stack 21
 13259                           
 13260                           ;incstack = 0
 13261  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13262  00000A  EFCE  F010         	goto	int_func
 13263                           pclatu	equ	0xFFB
 13264                           pclath	equ	0xFFA
 13265                           tblptru	equ	0xFF8
 13266                           tblptrh	equ	0xFF7
 13267                           tblptrl	equ	0xFF6
 13268                           tablat	equ	0xFF5
 13269                           prodh	equ	0xFF4
 13270                           prodl	equ	0xFF3
 13271                           intcon	equ	0xFF2
 13272                           indf0	equ	0xFEF
 13273                           postinc0	equ	0xFEE
 13274                           fsr0h	equ	0xFEA
 13275                           fsr0l	equ	0xFE9
 13276                           wreg	equ	0xFE8
 13277                           indf1	equ	0xFE7
 13278                           postdec1	equ	0xFE5
 13279                           fsr1h	equ	0xFE2
 13280                           fsr1l	equ	0xFE1
 13281                           bsr	equ	0xFE0
 13282                           indf2	equ	0xFDF
 13283                           postinc2	equ	0xFDE
 13284                           postdec2	equ	0xFDD
 13285                           fsr2h	equ	0xFDA
 13286                           fsr2l	equ	0xFD9
 13287                           status	equ	0xFD8
 13288                           
 13289                           	psect	intcode_body
 13290  00219C                     __pintcode_body:
 13291                           	opt stack 21
 13292  00219C                     int_func:
 13293                           	opt stack 21
 13294  00219C  CFFA F010          	movff	pclath,??_high_priority_int+5
 13295  0021A0  CFFB F011          	movff	pclatu,??_high_priority_int+6
 13296  0021A4  CFE9 F012          	movff	fsr0l,??_high_priority_int+7
 13297  0021A8  CFEA F013          	movff	fsr0h,??_high_priority_int+8
 13298  0021AC  CFE1 F014          	movff	fsr1l,??_high_priority_int+9
 13299  0021B0  CFE2 F015          	movff	fsr1h,??_high_priority_int+10
 13300  0021B4  CFD9 F016          	movff	fsr2l,??_high_priority_int+11
 13301  0021B8  CFDA F017          	movff	fsr2h,??_high_priority_int+12
 13302  0021BC  CFF3 F018          	movff	prodl,??_high_priority_int+13
 13303  0021C0  CFF4 F019          	movff	prodh,??_high_priority_int+14
 13304  0021C4  CFF6 F01A          	movff	tblptrl,??_high_priority_int+15
 13305  0021C8  CFF7 F01B          	movff	tblptrh,??_high_priority_int+16
 13306  0021CC  CFF8 F01C          	movff	tblptru,??_high_priority_int+17
 13307  0021D0  CFF5 F01D          	movff	tablat,??_high_priority_int+18
 13308                           
 13309                           ;easat2_util_timer.c: 76: static unsigned int samples[100];
 13310                           ;easat2_util_timer.c: 77: static int sample_position = 0;
 13311                           ;easat2_util_timer.c: 78: static unsigned short long noise_mean_value = 32000;
 13312                           ;easat2_util_timer.c: 79: static unsigned int activation_thresold = 32000;
 13313                           ;easat2_util_timer.c: 80: static int times_thresold_exceeded = 0;
 13314                           ;easat2_util_timer.c: 81: static int cycles_transmitter_active = 0;
 13315                           ;easat2_util_timer.c: 82: static int is_transmitter_active = 0;
 13316                           ;easat2_util_timer.c: 84: static int valid_samples = 0;
 13317  0021D4  0E00               	movlw	0
 13318  0021D6  6E1F               	movwf	high_priority_int@sample+1,c
 13319  0021D8  0E00               	movlw	0
 13320  0021DA  6E1E               	movwf	high_priority_int@sample,c
 13321                           
 13322                           ;easat2_util_timer.c: 90: if (PIR1bits.TMR1IF) {
 13323  0021DC  A09E               	btfss	3998,0,c	;volatile
 13324  0021DE  D0D1               	goto	i2l222
 13325                           
 13326                           ;easat2_util_timer.c: 94: TMR1H = 0xEC;
 13327  0021E0  0EEC               	movlw	236
 13328  0021E2  6ECF               	movwf	4047,c	;volatile
 13329                           
 13330                           ;easat2_util_timer.c: 95: TMR1L = 0x77 ; 60535;
 13331  0021E4  0E77               	movlw	119
 13332  0021E6  6ECE               	movwf	4046,c	;volatile
 13333  0021E8  0004               	clrwdt		;# 
 13334                           
 13335                           ;easat2_util_timer.c: 112: tmr1_interrupt_number++;
 13336  0021EA  4A37               	infsnz	_tmr1_interrupt_number,f,c
 13337  0021EC  2A38               	incf	_tmr1_interrupt_number+1,f,c
 13338                           
 13339                           ;easat2_util_timer.c: 116: if (tmr1_interrupt_number == 50) {
 13340  0021EE  0E32               	movlw	50
 13341  0021F0  1837               	xorwf	_tmr1_interrupt_number,w,c
 13342  0021F2  1038               	iorwf	_tmr1_interrupt_number+1,w,c
 13343  0021F4  A4D8               	btfss	status,2,c
 13344  0021F6  D010               	goto	i2l4509
 13345                           
 13346                           ;easat2_util_timer.c: 119: PORTDbits.RD4 = !PORTDbits.RD4;
 13347  0021F8  B883               	btfsc	3971,4,c	;volatile
 13348  0021FA  D003               	goto	i2u428_40
 13349  0021FC  6A0B               	clrf	??_high_priority_int& (0+255),c
 13350  0021FE  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13351  002200  D001               	goto	i2u429_48
 13352  002202                     i2u428_40:
 13353  002202  6A0B               	clrf	??_high_priority_int& (0+255),c
 13354  002204                     i2u429_48:
 13355  002204  3A0B               	swapf	??_high_priority_int,f,c
 13356  002206  5083               	movf	3971,w,c	;volatile
 13357  002208  180B               	xorwf	??_high_priority_int,w,c
 13358  00220A  0BEF               	andlw	-17
 13359  00220C  180B               	xorwf	??_high_priority_int,w,c
 13360  00220E  6E83               	movwf	3971,c	;volatile
 13361                           
 13362                           ;easat2_util_timer.c: 121: tmr1_interrupt_number = 0;
 13363  002210  0E00               	movlw	0
 13364  002212  6E38               	movwf	_tmr1_interrupt_number+1,c
 13365  002214  0E00               	movlw	0
 13366  002216  6E37               	movwf	_tmr1_interrupt_number,c
 13367  002218                     i2l4509:
 13368                           
 13369                           ;easat2_util_timer.c: 123: }
 13370                           ;easat2_util_timer.c: 127: if (valid_samples < 100) valid_samples++;
 13371  002218  BE2E               	btfsc	high_priority_int@valid_samples+1,7,c
 13372  00221A  D006               	goto	i2l4511
 13373  00221C  502E               	movf	high_priority_int@valid_samples+1,w,c
 13374  00221E  E106               	bnz	i2l4513
 13375  002220  0E64               	movlw	100
 13376  002222  5C2D               	subwf	high_priority_int@valid_samples,w,c
 13377  002224  B0D8               	btfsc	status,0,c
 13378  002226  D002               	goto	i2l4513
 13379  002228                     i2l4511:
 13380  002228  4A2D               	infsnz	high_priority_int@valid_samples,f,c
 13381  00222A  2A2E               	incf	high_priority_int@valid_samples+1,f,c
 13382  00222C                     i2l4513:
 13383                           
 13384                           ;easat2_util_timer.c: 140: ADCON0bits.CHS = 4;
 13385  00222C  94C2               	bcf	4034,2,c	;volatile
 13386  00222E  96C2               	bcf	4034,3,c	;volatile
 13387  002230  88C2               	bsf	4034,4,c	;volatile
 13388  002232  9AC2               	bcf	4034,5,c	;volatile
 13389  002234  9CC2               	bcf	4034,6,c	;volatile
 13390                           
 13391                           ;easat2_util_timer.c: 141: ADCON0bits.ADON = 1;
 13392  002236  80C2               	bsf	4034,0,c	;volatile
 13393                           
 13394                           ;easat2_util_timer.c: 142: PIR1bits.ADIF = 0;
 13395  002238  9C9E               	bcf	3998,6,c	;volatile
 13396                           
 13397                           ;easat2_util_timer.c: 144: ADCON0bits.GO = 1;
 13398  00223A  82C2               	bsf	4034,1,c	;volatile
 13399  00223C                     i2l210:
 13400  00223C  AC9E               	btfss	3998,6,c	;volatile
 13401  00223E  D7FE               	goto	i2l210
 13402                           
 13403                           ;easat2_util_timer.c: 147: sample = ADRES;
 13404  002240  CFC3 F01E          	movff	4035,high_priority_int@sample	;volatile
 13405  002244  CFC4 F01F          	movff	4036,high_priority_int@sample+1	;volatile
 13406                           
 13407                           ;easat2_util_timer.c: 149: PIR1bits.ADIF = 0;
 13408  002248  9C9E               	bcf	3998,6,c	;volatile
 13409                           
 13410                           ;easat2_util_timer.c: 150: ADCON0bits.ADON = 0;
 13411  00224A  90C2               	bcf	4034,0,c	;volatile
 13412                           
 13413                           ;easat2_util_timer.c: 152: if (is_transmitter_active) cycles_transmitter_active++;
 13414  00224C  502F               	movf	high_priority_int@is_transmitter_active,w,c
 13415  00224E  1030               	iorwf	high_priority_int@is_transmitter_active+1,w,c
 13416  002250  B4D8               	btfsc	status,2,c
 13417  002252  D002               	goto	i2l4525
 13418  002254  4A31               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13419  002256  2A32               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13420  002258                     i2l4525:
 13421                           
 13422                           ;easat2_util_timer.c: 157: if (sample > 128 && sample > activation_thresold) {
 13423  002258  501F               	movf	high_priority_int@sample+1,w,c
 13424  00225A  E104               	bnz	i2u433_40
 13425  00225C  0E81               	movlw	129
 13426  00225E  5C1E               	subwf	high_priority_int@sample,w,c
 13427  002260  A0D8               	btfss	status,0,c
 13428  002262  D01B               	goto	i2l4537
 13429  002264                     i2u433_40:
 13430  002264  501E               	movf	high_priority_int@sample,w,c
 13431  002266  5C3C               	subwf	high_priority_int@activation_thresold,w,c
 13432  002268  501F               	movf	high_priority_int@sample+1,w,c
 13433  00226A  583D               	subwfb	high_priority_int@activation_thresold+1,w,c
 13434  00226C  B0D8               	btfsc	status,0,c
 13435  00226E  D015               	goto	i2l4537
 13436                           
 13437                           ;easat2_util_timer.c: 159: times_thresold_exceeded++;
 13438  002270  4A33               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 13439  002272  2A34               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 13440                           
 13441                           ;easat2_util_timer.c: 161: if (times_thresold_exceeded == 200) {
 13442  002274  0EC8               	movlw	200
 13443  002276  1833               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 13444  002278  1034               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 13445  00227A  A4D8               	btfss	status,2,c
 13446  00227C  D081               	goto	i2l4571
 13447                           
 13448                           ;easat2_util_timer.c: 166: PORTDbits.RD6 = 1;
 13449  00227E  8C83               	bsf	3971,6,c	;volatile
 13450                           
 13451                           ;easat2_util_timer.c: 168: is_transmitter_active = 1;
 13452  002280  0E00               	movlw	0
 13453  002282  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13454  002284  0E01               	movlw	1
 13455  002286  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13456                           
 13457                           ;easat2_util_timer.c: 169: cycles_transmitter_active = 0;
 13458  002288  0E00               	movlw	0
 13459  00228A  6E32               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13460  00228C  0E00               	movlw	0
 13461  00228E  6E31               	movwf	high_priority_int@cycles_transmitter_active,c
 13462                           
 13463                           ;easat2_util_timer.c: 171: times_thresold_exceeded = 0;
 13464  002290  0E00               	movlw	0
 13465  002292  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13466  002294  0E00               	movlw	0
 13467  002296  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13468                           
 13469                           ;easat2_util_timer.c: 173: }
 13470                           ;easat2_util_timer.c: 176: } else {
 13471  002298  D073               	goto	i2l4571
 13472  00229A                     i2l4537:
 13473                           
 13474                           ;easat2_util_timer.c: 178: times_thresold_exceeded = 0;
 13475  00229A  0E00               	movlw	0
 13476  00229C  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13477  00229E  0E00               	movlw	0
 13478  0022A0  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13479                           
 13480                           ;easat2_util_timer.c: 180: if (cycles_transmitter_active == 12000) {
 13481  0022A2  0EE0               	movlw	224
 13482  0022A4  1831               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13483  0022A6  E109               	bnz	i2l4545
 13484  0022A8  0E2E               	movlw	46
 13485  0022AA  1832               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13486  0022AC  A4D8               	btfss	status,2,c
 13487  0022AE  D005               	goto	i2l4545
 13488                           
 13489                           ;easat2_util_timer.c: 182: PORTDbits.RD6 = 0;
 13490  0022B0  9C83               	bcf	3971,6,c	;volatile
 13491                           
 13492                           ;easat2_util_timer.c: 183: is_transmitter_active = 0;
 13493  0022B2  0E00               	movlw	0
 13494  0022B4  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13495  0022B6  0E00               	movlw	0
 13496  0022B8  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13497  0022BA                     i2l4545:
 13498                           
 13499                           ;easat2_util_timer.c: 184: }
 13500                           ;easat2_util_timer.c: 186: samples[sample_position++] = sample;
 13501  0022BA  90D8               	bcf	status,0,c
 13502  0022BC  3435               	rlcf	high_priority_int@sample_position,w,c
 13503  0022BE  6ED9               	movwf	fsr2l,c
 13504  0022C0  3436               	rlcf	high_priority_int@sample_position+1,w,c
 13505  0022C2  6EDA               	movwf	fsr2h,c
 13506  0022C4  0E00               	movlw	low high_priority_int@samples
 13507  0022C6  26D9               	addwf	fsr2l,f,c
 13508  0022C8  0E02               	movlw	high high_priority_int@samples
 13509  0022CA  22DA               	addwfc	fsr2h,f,c
 13510  0022CC  C01E  FFDE         	movff	high_priority_int@sample,postinc2
 13511  0022D0  C01F  FFDD         	movff	high_priority_int@sample+1,postdec2
 13512  0022D4  4A35               	infsnz	high_priority_int@sample_position,f,c
 13513  0022D6  2A36               	incf	high_priority_int@sample_position+1,f,c
 13514                           
 13515                           ;easat2_util_timer.c: 189: if (sample_position == 100) sample_position = 0;
 13516  0022D8  0E64               	movlw	100
 13517  0022DA  1835               	xorwf	high_priority_int@sample_position,w,c
 13518  0022DC  1036               	iorwf	high_priority_int@sample_position+1,w,c
 13519  0022DE  A4D8               	btfss	status,2,c
 13520  0022E0  D004               	goto	i2l4553
 13521  0022E2  0E00               	movlw	0
 13522  0022E4  6E36               	movwf	high_priority_int@sample_position+1,c
 13523  0022E6  0E00               	movlw	0
 13524  0022E8  6E35               	movwf	high_priority_int@sample_position,c
 13525  0022EA                     i2l4553:
 13526                           
 13527                           ;easat2_util_timer.c: 191: if (valid_samples == 100) {
 13528  0022EA  0E64               	movlw	100
 13529  0022EC  182D               	xorwf	high_priority_int@valid_samples,w,c
 13530  0022EE  102E               	iorwf	high_priority_int@valid_samples+1,w,c
 13531  0022F0  A4D8               	btfss	status,2,c
 13532  0022F2  D046               	goto	i2l4571
 13533                           
 13534                           ;easat2_util_timer.c: 194: noise_mean_value = 0;
 13535  0022F4  0E00               	movlw	0
 13536  0022F6  6E39               	movwf	high_priority_int@noise_mean_value,c
 13537  0022F8  0E00               	movlw	0
 13538  0022FA  6E3A               	movwf	high_priority_int@noise_mean_value+1,c
 13539  0022FC  0E00               	movlw	0
 13540  0022FE  6E3B               	movwf	high_priority_int@noise_mean_value+2,c
 13541                           
 13542                           ;easat2_util_timer.c: 196: for (int i = 0; i < 100; i++)
 13543  002300  0E00               	movlw	0
 13544  002302  6E21               	movwf	high_priority_int@i+1,c
 13545  002304  0E00               	movlw	0
 13546  002306  6E20               	movwf	high_priority_int@i,c
 13547  002308                     i2l4557:
 13548  002308  BE21               	btfsc	high_priority_int@i+1,7,c
 13549  00230A  D006               	goto	i2l4561
 13550  00230C  5021               	movf	high_priority_int@i+1,w,c
 13551  00230E  E11F               	bnz	i2l4567
 13552  002310  0E64               	movlw	100
 13553  002312  5C20               	subwf	high_priority_int@i,w,c
 13554  002314  B0D8               	btfsc	status,0,c
 13555  002316  D01B               	goto	i2l4567
 13556  002318                     i2l4561:
 13557                           
 13558                           ;easat2_util_timer.c: 197: noise_mean_value += samples[i];
 13559  002318  90D8               	bcf	status,0,c
 13560  00231A  3420               	rlcf	high_priority_int@i,w,c
 13561  00231C  6ED9               	movwf	fsr2l,c
 13562  00231E  3421               	rlcf	high_priority_int@i+1,w,c
 13563  002320  6EDA               	movwf	fsr2h,c
 13564  002322  0E00               	movlw	low high_priority_int@samples
 13565  002324  26D9               	addwf	fsr2l,f,c
 13566  002326  0E02               	movlw	high high_priority_int@samples
 13567  002328  22DA               	addwfc	fsr2h,f,c
 13568  00232A  CFDE F00B          	movff	postinc2,??_high_priority_int
 13569  00232E  CFDD F00C          	movff	postdec2,??_high_priority_int+1
 13570  002332  C00B  F00D         	movff	??_high_priority_int,??_high_priority_int+2
 13571  002336  C00C  F00E         	movff	??_high_priority_int+1,??_high_priority_int+3
 13572  00233A  6A0F               	clrf	(??_high_priority_int+4)& (0+255),c
 13573  00233C  500D               	movf	??_high_priority_int+2,w,c
 13574  00233E  2639               	addwf	high_priority_int@noise_mean_value,f,c
 13575  002340  500E               	movf	??_high_priority_int+3,w,c
 13576  002342  223A               	addwfc	high_priority_int@noise_mean_value+1,f,c
 13577  002344  500F               	movf	??_high_priority_int+4,w,c
 13578  002346  223B               	addwfc	high_priority_int@noise_mean_value+2,f,c
 13579  002348  4A20               	infsnz	high_priority_int@i,f,c
 13580  00234A  2A21               	incf	high_priority_int@i+1,f,c
 13581  00234C  D7DD               	goto	i2l4557
 13582  00234E                     i2l4567:
 13583                           
 13584                           ;easat2_util_timer.c: 200: noise_mean_value = (unsigned short long)(noise_mean_value / 1
      +                          00);
 13585  00234E  C039  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 13586  002352  C03A  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 13587  002356  C03B  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 13588  00235A  0E64               	movlw	100
 13589  00235C  6E04               	movwf	___ltdiv@divisor,c
 13590  00235E  0E00               	movlw	0
 13591  002360  6E05               	movwf	___ltdiv@divisor+1,c
 13592  002362  0E00               	movlw	0
 13593  002364  6E06               	movwf	___ltdiv@divisor+2,c
 13594  002366  EC0D  F01B         	call	___ltdiv	;wreg free
 13595  00236A  C001  F039         	movff	?___ltdiv,high_priority_int@noise_mean_value
 13596  00236E  C002  F03A         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 13597  002372  C003  F03B         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 13598                           
 13599                           ;easat2_util_timer.c: 205: activation_thresold = noise_mean_value * 2;
 13600  002376  90D8               	bcf	status,0,c
 13601  002378  3439               	rlcf	high_priority_int@noise_mean_value,w,c
 13602  00237A  6E3C               	movwf	high_priority_int@activation_thresold,c
 13603  00237C  343A               	rlcf	high_priority_int@noise_mean_value+1,w,c
 13604  00237E  6E3D               	movwf	high_priority_int@activation_thresold+1,c
 13605  002380                     i2l4571:
 13606                           
 13607                           ;easat2_util_timer.c: 207: }
 13608                           ;easat2_util_timer.c: 209: }
 13609                           ;easat2_util_timer.c: 214: PIR1bits.TMR1IF=0;
 13610  002380  909E               	bcf	3998,0,c	;volatile
 13611  002382                     i2l222:
 13612  002382  C01D  FFF5         	movff	??_high_priority_int+18,tablat
 13613  002386  C01C  FFF8         	movff	??_high_priority_int+17,tblptru
 13614  00238A  C01B  FFF7         	movff	??_high_priority_int+16,tblptrh
 13615  00238E  C01A  FFF6         	movff	??_high_priority_int+15,tblptrl
 13616  002392  C019  FFF4         	movff	??_high_priority_int+14,prodh
 13617  002396  C018  FFF3         	movff	??_high_priority_int+13,prodl
 13618  00239A  C017  FFDA         	movff	??_high_priority_int+12,fsr2h
 13619  00239E  C016  FFD9         	movff	??_high_priority_int+11,fsr2l
 13620  0023A2  C015  FFE2         	movff	??_high_priority_int+10,fsr1h
 13621  0023A6  C014  FFE1         	movff	??_high_priority_int+9,fsr1l
 13622  0023AA  C013  FFEA         	movff	??_high_priority_int+8,fsr0h
 13623  0023AE  C012  FFE9         	movff	??_high_priority_int+7,fsr0l
 13624  0023B2  C011  FFFB         	movff	??_high_priority_int+6,pclatu
 13625  0023B6  C010  FFFA         	movff	??_high_priority_int+5,pclath
 13626  0023BA  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13627  0023BC  0011               	retfie		f
 13628  0023BE                     __end_of_high_priority_int:
 13629                           	opt stack 0
 13630                           pclatu	equ	0xFFB
 13631                           pclath	equ	0xFFA
 13632                           tblptru	equ	0xFF8
 13633                           tblptrh	equ	0xFF7
 13634                           tblptrl	equ	0xFF6
 13635                           tablat	equ	0xFF5
 13636                           prodh	equ	0xFF4
 13637                           prodl	equ	0xFF3
 13638                           intcon	equ	0xFF2
 13639                           indf0	equ	0xFEF
 13640                           postinc0	equ	0xFEE
 13641                           fsr0h	equ	0xFEA
 13642                           fsr0l	equ	0xFE9
 13643                           wreg	equ	0xFE8
 13644                           indf1	equ	0xFE7
 13645                           postdec1	equ	0xFE5
 13646                           fsr1h	equ	0xFE2
 13647                           fsr1l	equ	0xFE1
 13648                           bsr	equ	0xFE0
 13649                           indf2	equ	0xFDF
 13650                           postinc2	equ	0xFDE
 13651                           postdec2	equ	0xFDD
 13652                           fsr2h	equ	0xFDA
 13653                           fsr2l	equ	0xFD9
 13654                           status	equ	0xFD8
 13655                           
 13656 ;; *************** function ___ltdiv *****************
 13657 ;; Defined at:
 13658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ltdiv.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;  dividend        3    0[COMRAM] unsigned um
 13661 ;;  divisor         3    3[COMRAM] unsigned um
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;  quotient        3    6[COMRAM] unsigned um
 13664 ;;  counter         1    9[COMRAM] unsigned char 
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  3    0[COMRAM] unsigned um
 13667 ;; Registers used:
 13668 ;;		wreg, status,2, status,0
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13674 ;;      Params:         6       0       0       0       0       0       0
 13675 ;;      Locals:         4       0       0       0       0       0       0
 13676 ;;      Temps:          0       0       0       0       0       0       0
 13677 ;;      Totals:        10       0       0       0       0       0       0
 13678 ;;Total ram usage:       10 bytes
 13679 ;; Hardware stack levels used:    1
 13680 ;; This function calls:
 13681 ;;		Nothing
 13682 ;; This function is called by:
 13683 ;;		_high_priority_int
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           	psect	text55
 13688  00361A                     __ptext55:
 13689                           	opt stack 0
 13690  00361A                     ___ltdiv:
 13691                           	opt stack 21
 13692                           
 13693                           ;incstack = 0
 13694  00361A  0E00               	movlw	0
 13695  00361C  6E07               	movwf	___ltdiv@quotient,c
 13696  00361E  0E00               	movlw	0
 13697  003620  6E08               	movwf	___ltdiv@quotient+1,c
 13698  003622  0E00               	movlw	0
 13699  003624  6E09               	movwf	___ltdiv@quotient+2,c
 13700  003626  5004               	movf	___ltdiv@divisor,w,c
 13701  003628  1005               	iorwf	___ltdiv@divisor+1,w,c
 13702  00362A  1006               	iorwf	___ltdiv@divisor+2,w,c
 13703  00362C  B4D8               	btfsc	status,2,c
 13704  00362E  D023               	goto	i2l924
 13705  003630  0E01               	movlw	1
 13706  003632  6E0A               	movwf	___ltdiv@counter,c
 13707  003634  D005               	goto	i2l4479
 13708  003636                     i2l4477:
 13709  003636  90D8               	bcf	status,0,c
 13710  003638  3604               	rlcf	___ltdiv@divisor,f,c
 13711  00363A  3605               	rlcf	___ltdiv@divisor+1,f,c
 13712  00363C  3606               	rlcf	___ltdiv@divisor+2,f,c
 13713  00363E  2A0A               	incf	___ltdiv@counter,f,c
 13714  003640                     i2l4479:
 13715  003640  AE06               	btfss	___ltdiv@divisor+2,7,c
 13716  003642  D7F9               	goto	i2l4477
 13717  003644                     i2l4481:
 13718  003644  90D8               	bcf	status,0,c
 13719  003646  3607               	rlcf	___ltdiv@quotient,f,c
 13720  003648  3608               	rlcf	___ltdiv@quotient+1,f,c
 13721  00364A  3609               	rlcf	___ltdiv@quotient+2,f,c
 13722  00364C  5004               	movf	___ltdiv@divisor,w,c
 13723  00364E  5C01               	subwf	___ltdiv@dividend,w,c
 13724  003650  5005               	movf	___ltdiv@divisor+1,w,c
 13725  003652  5802               	subwfb	___ltdiv@dividend+1,w,c
 13726  003654  5006               	movf	___ltdiv@divisor+2,w,c
 13727  003656  5803               	subwfb	___ltdiv@dividend+2,w,c
 13728  003658  A0D8               	btfss	status,0,c
 13729  00365A  D007               	goto	i2l929
 13730  00365C  5004               	movf	___ltdiv@divisor,w,c
 13731  00365E  5E01               	subwf	___ltdiv@dividend,f,c
 13732  003660  5005               	movf	___ltdiv@divisor+1,w,c
 13733  003662  5A02               	subwfb	___ltdiv@dividend+1,f,c
 13734  003664  5006               	movf	___ltdiv@divisor+2,w,c
 13735  003666  5A03               	subwfb	___ltdiv@dividend+2,f,c
 13736  003668  8007               	bsf	___ltdiv@quotient,0,c
 13737  00366A                     i2l929:
 13738  00366A  90D8               	bcf	status,0,c
 13739  00366C  3206               	rrcf	___ltdiv@divisor+2,f,c
 13740  00366E  3205               	rrcf	___ltdiv@divisor+1,f,c
 13741  003670  3204               	rrcf	___ltdiv@divisor,f,c
 13742  003672  2E0A               	decfsz	___ltdiv@counter,f,c
 13743  003674  D7E7               	goto	i2l4481
 13744  003676                     i2l924:
 13745  003676  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 13746  00367A  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13747  00367E  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13748  003682  0012               	return		;funcret
 13749  003684                     __end_of___ltdiv:
 13750                           	opt stack 0
 13751                           pclatu	equ	0xFFB
 13752                           pclath	equ	0xFFA
 13753                           tblptru	equ	0xFF8
 13754                           tblptrh	equ	0xFF7
 13755                           tblptrl	equ	0xFF6
 13756                           tablat	equ	0xFF5
 13757                           prodh	equ	0xFF4
 13758                           prodl	equ	0xFF3
 13759                           intcon	equ	0xFF2
 13760                           indf0	equ	0xFEF
 13761                           postinc0	equ	0xFEE
 13762                           fsr0h	equ	0xFEA
 13763                           fsr0l	equ	0xFE9
 13764                           wreg	equ	0xFE8
 13765                           indf1	equ	0xFE7
 13766                           postdec1	equ	0xFE5
 13767                           fsr1h	equ	0xFE2
 13768                           fsr1l	equ	0xFE1
 13769                           bsr	equ	0xFE0
 13770                           indf2	equ	0xFDF
 13771                           postinc2	equ	0xFDE
 13772                           postdec2	equ	0xFDD
 13773                           fsr2h	equ	0xFDA
 13774                           fsr2l	equ	0xFD9
 13775                           status	equ	0xFD8
 13776                           pclatu	equ	0xFFB
 13777                           pclath	equ	0xFFA
 13778                           tblptru	equ	0xFF8
 13779                           tblptrh	equ	0xFF7
 13780                           tblptrl	equ	0xFF6
 13781                           tablat	equ	0xFF5
 13782                           prodh	equ	0xFF4
 13783                           prodl	equ	0xFF3
 13784                           intcon	equ	0xFF2
 13785                           indf0	equ	0xFEF
 13786                           postinc0	equ	0xFEE
 13787                           fsr0h	equ	0xFEA
 13788                           fsr0l	equ	0xFE9
 13789                           wreg	equ	0xFE8
 13790                           indf1	equ	0xFE7
 13791                           postdec1	equ	0xFE5
 13792                           fsr1h	equ	0xFE2
 13793                           fsr1l	equ	0xFE1
 13794                           bsr	equ	0xFE0
 13795                           indf2	equ	0xFDF
 13796                           postinc2	equ	0xFDE
 13797                           postdec2	equ	0xFDD
 13798                           fsr2h	equ	0xFDA
 13799                           fsr2l	equ	0xFD9
 13800                           status	equ	0xFD8
 13801                           
 13802                           	psect	rparam
 13803  0000                     pclatu	equ	0xFFB
 13804                           pclath	equ	0xFFA
 13805                           tblptru	equ	0xFF8
 13806                           tblptrh	equ	0xFF7
 13807                           tblptrl	equ	0xFF6
 13808                           tablat	equ	0xFF5
 13809                           prodh	equ	0xFF4
 13810                           prodl	equ	0xFF3
 13811                           intcon	equ	0xFF2
 13812                           indf0	equ	0xFEF
 13813                           postinc0	equ	0xFEE
 13814                           fsr0h	equ	0xFEA
 13815                           fsr0l	equ	0xFE9
 13816                           wreg	equ	0xFE8
 13817                           indf1	equ	0xFE7
 13818                           postdec1	equ	0xFE5
 13819                           fsr1h	equ	0xFE2
 13820                           fsr1l	equ	0xFE1
 13821                           bsr	equ	0xFE0
 13822                           indf2	equ	0xFDF
 13823                           postinc2	equ	0xFDE
 13824                           postdec2	equ	0xFDD
 13825                           fsr2h	equ	0xFDA
 13826                           fsr2l	equ	0xFD9
 13827                           status	equ	0xFD8
 13828                           
 13829                           	psect	temp
 13830  00003E                     btemp:
 13831                           	opt stack 0
 13832  00003E                     	ds	1
 13833  0000                     int$flags	set	btemp
 13834                           pclatu	equ	0xFFB
 13835                           pclath	equ	0xFFA
 13836                           tblptru	equ	0xFF8
 13837                           tblptrh	equ	0xFF7
 13838                           tblptrl	equ	0xFF6
 13839                           tablat	equ	0xFF5
 13840                           prodh	equ	0xFF4
 13841                           prodl	equ	0xFF3
 13842                           intcon	equ	0xFF2
 13843                           indf0	equ	0xFEF
 13844                           postinc0	equ	0xFEE
 13845                           fsr0h	equ	0xFEA
 13846                           fsr0l	equ	0xFE9
 13847                           wreg	equ	0xFE8
 13848                           indf1	equ	0xFE7
 13849                           postdec1	equ	0xFE5
 13850                           fsr1h	equ	0xFE2
 13851                           fsr1l	equ	0xFE1
 13852                           bsr	equ	0xFE0
 13853                           indf2	equ	0xFDF
 13854                           postinc2	equ	0xFDE
 13855                           postdec2	equ	0xFDD
 13856                           fsr2h	equ	0xFDA
 13857                           fsr2l	equ	0xFD9
 13858                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      61
    BANK0           160    134     134
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_mins
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134161
                         _initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  134161
                                            124 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             23 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             41 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             63 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             36 COMRAM     5     5      0
                                             19 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             33 COMRAM     3     3      0
                                             19 BANK0     18    16      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             19 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             37 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             36 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             41 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   74084
                                            114 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6832
                                             42 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5741
                                             38 COMRAM     4     4      0
                                             19 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     222
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     222
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             69 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             41 COMRAM     3     3      0
                                             29 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             35 COMRAM     4     4      0
                                             21 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             33 COMRAM     9     9      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             33 COMRAM     6     6      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             36 COMRAM     5     5      0
                                             22 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             38 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             33 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             48 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             51 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             33 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             33 COMRAM     3     3      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             33 COMRAM     2     2      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   23    23      0     426
                                             10 COMRAM    23    23      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (10) ___ltdiv                                            10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3D       1       64.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259       9        0.0%
DATA                 0      0     259      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Mar 20 12:09:12 2017

                     util_onewire_read_byte@value 0093              high_priority_int@activation_thresold 003C  
                            util_getTemperature@i 01CC                                                l24 3504  
                                              l26 3580                                                l93 3144  
                                              l99 2FB0                                      ___awdiv@sign 0025  
                                              bsr 000FE0                               ___wmul@multiplicand 007B  
                __end_of_util_beacon_transmission 2E88                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 009E  
                                    ___ftadd@exp2 009D                                      ___ftadd@sign 009C  
                                             l105 307A                                               l156 39EA  
                                             l333 3A60                                               l326 3A2C  
                                             l385 3B74                                               l379 3B44  
                                             l476 07A8                                               l717 298E  
                                             l821 2830                                               l814 2784  
                                             l815 27C4                                               l807 2D40  
                                             l906 34F2                                               l772 1F9C  
                                             l749 2F48                                               l846 3BB0  
                                             l776 1FD6                                               l778 1FFE  
                                             l787 20D4                                               l796 20FE  
                                             l896 3324                           ??_util_onewire_read_bit 0022  
                                    __CFG_CPB$OFF 000000                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13EA                   __size_of_util_timer1_initialize 0026  
                                    ___awmod@sign 0023                    ??_util_transmit_morse_sequence 0027  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0073  
                                    ___ftdiv@cntr 007F                                      ___ftdiv@sign 0084  
                                            l5005 1872                                              l5111 2920  
                                            l5103 28D0                                              l3505 2BBE  
                                            l5201 34E2                                              l5033 273A  
                                            l5017 3C46                                              l3523 2C24  
                                            l3515 2BEE                                              l5123 2952  
                                            l5027 270A                                              l5141 381C  
                                            l3517 2BFE                                              l3509 2BD2  
                                            l5133 297C                                              l5221 39B0  
                                            l3519 2C08                                              l5207 368A  
                                            l5135 2988                                              l5127 2962  
                                            l5063 27F4                                              l5305 3B06  
                                            l5153 323E                                              l5209 3698  
                                            l5073 281E                                              l5401 03D2  
                                            l5313 3AA2                                              l5217 399E  
                                            l4611 2F08                                              l4603 2EB6  
                                            l5083 2864                                              l5075 282A  
                                            l5067 2804                                              l5411 045C  
                                            l5331 010C                                              l5315 3AAC  
                                            l5309 3B16                                              l5149 3206  
                                            l4621 2F52                                              l4613 2F2C  
                                            l4605 2EC4                                              l4701 1FF4  
                                            l5173 32B0                                              l5501 07DC  
                                            l5421 04D4                                              l5405 0400  
                                            l5325 00DA                                              l6109 3572  
                                            l5159 3282                                              l4615 2F3A  
                                            l4607 2EE8                                              l4711 2036  
                                            l3487 2B2C                                              l5175 32BE  
                                            l5431 0532                                              l5407 0416  
                                            l5351 0206                                              l5319 00BA  
                                            l4721 2080                                              l5185 3314  
                                            l5177 32C4                                              l5193 348A  
                                            l5089 2886                                              l5601 0C00  
                                            l5505 082E                                              l5417 04A6  
                                            l5409 0446                                              l5361 0250  
                                            l5345 01AA                                              l4633 375A  
                                            l4627 2F6E                                              l4731 20C8  
                                            l4723 208C                                              l5195 3498  
                                            l5603 0C06                                              l5523 093E  
                                            l5515 0916                                              l5435 0598  
                                            l5355 0216                                              l5339 0182  
                                            l4635 375E                                              l4717 2064  
                                            l5197 349E                                              l4821 3386  
                                            l4813 3362                                              l5541 09B6  
                                            l5517 0924                                              l5461 0668  
                                            l5453 0634                                              l5437 059E  
                                            l5525 094C                                              l5349 01F0  
                                            l5605 0C1C                                              l5613 3896  
                                            l5701 1B5A                                              l4719 2072  
                                            l4831 33B8                                              l4823 338C  
                                            l4807 334E                                              l5543 09BC  
                                            l5535 0990                                              l5471 06B8  
                                            l5463 0670                                              l5367 026A  
                                            l5607 0C3A                                              l5359 021C  
                                            l5615 389A                                              l4591 3B38  
                                            l5703 1B6C                                              l5631 18E4  
                                            l5711 1C82                                              l5623 189C  
                                            l4737 2128                                              l4729 20BA  
                                            l5481 075C                                              l5465 0684  
                                            l5457 0656                                              l5449 05E4  
                                            l5393 0362                                              l5377 02B0  
                                            l5617 38AA                                              l4665 3A4E  
                                            l4649 3A1A                                              l5705 1B7E  
                                            l5641 193E                                              l5633 18F6  
                                            l5625 18AE                                              l4747 2176  
                                            l4819 337C                                              l4835 33C4  
                                            l4851 33F4                                              l4763 2A08  
                                            l5563 0A5A                                              l5555 0A02  
                                            l5619 38B4                                              l4579 3B68  
                                            l4931 36F6                                              l5651 1998  
                                            l5643 1950                                              l5635 1908  
                                            l5627 18C0                                              l4861 3420  
                                            l4781 2A74                                              l4757 29D4  
                                            l5581 0B08                                              l5493 07AC  
                                            l5469 06B0                                              l4933 36FC  
                                            l5661 19F2                                              l5653 19AA  
                                            l5645 1962                                              l5637 191A  
                                            l5629 18D2                                              l5709 1B84  
                                            l5725 2C9E                                              l4599 2EA2  
                                            l4695 1FE4                                              l4839 33D2  
                                            l4863 3426                                              l4871 3456  
                                            l4855 3404                                              l4791 2AB2  
                                            l5591 0B44                                              l5583 0B12  
                                            l5575 0AC6                                              l5559 0A2A  
                                            l5487 0776                                              l5479 074E  
                                            l4943 3732                                              l5671 1A4C  
                                            l5663 1A04                                              l5655 19BC  
                                            l5647 1974                                              l5639 192C  
                                            l5719 2C6A                                              l4689 1FAA  
                                            l4777 2A56                                              l5585 0B1E  
                                            l5577 0AD0                                              l5569 0A8E  
                                            l5489 078A                                              l4937 3702  
                                            l5681 1AA6                                              l5673 1A5E  
                                            l5665 1A16                                              l5657 19CE  
                                            l5649 1986                                              l5745 2CFE  
                                            l4881 37B0                                              l4875 3466  
                                            l4867 344A                                              l4859 3416  
                                            l4787 2A94                                              l4939 372A  
                                            l5691 1B00                                              l5683 1AB8  
                                            l5675 1A70                                              l5667 1A28  
                                            l5659 19E0                                              l4883 37B8  
                                            l5851 0D66                                              l4981 155C  
                                            l5597 0B72                                              l5693 1B12  
                                            l5685 1ACA                                              l5677 1A82  
                                            l5669 1A3A                                              l4893 37DC  
                                            l5933 0FFE                                              l5853 0D6A  
                                            l5845 0D3C                                              l4967 1EEC  
                                            l4959 1E08                                              l4991 1648  
                                            l5695 1B24                                              l5687 1ADC  
                                            l5679 1A94                                              l5767 396C  
                                            l4887 37C8                                              l4895 37E0  
                                            l5943 103A                                              l5927 0FDA  
                                            l5935 100A                                              l5919 0FAA  
                                            l5839 0D12                                              l5697 1B36  
                                            l5689 1AEE                                              l5873 0E58  
                                            l5865 0DB0                                              l5849 0D50  
                                            l4987 1622                                              l5699 1B48  
                                            l5939 101E                                              l5875 0E62  
                                            l5891 0EEC                                              l5859 0D8C  
                                            l5893 0EF6                                              l5869 0E42  
                                            l4999 17AC                                              l5983 2E46  
                                            l5887 0EE4                                              l5879 0E78  
                                            l5991 38DC                                              l5897 0F0C  
                                            l5987 2E62                                              l5995 38F0  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3121 2B08  
                                            u3140 2B52                                              u5000 3A80  
                                            u3145 2B48                                              u5111 26EC  
                                            u5008 3A82                                              u5131 271C  
                                            u6021 2C48                                              u4510 377E  
                                            u5400 393C                                              u6041 2C7C  
                                            u4540 3A2C                                              u4517 3774  
                                            u5415 25CC                                              u4560 3A60  
                                            u5408 393E                                              u4801 29E6  
                                            u5425 25EE                                              u4571 1F4A  
                                            u5435 2610                                              u4581 1F68  
                                            u5445 2632                                              u6407 3A8A  
                                            u5455 2434                                              u6184 0EA8  
                                            u6417 3B3A                                              u5465 244A  
                                            u6185 0EA0                                              u6427 3B6A  
                                            u5475 2460                                              u4781 29B2  
                                            u6357 39E4                                              u5590 02F6  
                                            u6367 39EE                                              u6377 3920  
                                            u5595 02EA                                              u6387 392A  
                                            u5780 07A0                                              u6397 3946  
                        ??_util_onewire_read_byte 0075                                high_priority_int@i 0020  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 3C7E                                      ___ftpack@arg 0071  
                                    ___ftpack@exp 0074                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 003E                                     __CFG_BORV$190 000000  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
 __end_of_util_transmit_space_between_dots_dashes 3C7E  __size_of_util_transmit_space_between_dots_dashes 0010  
       ??_util_transmit_space_between_dots_dashes 0025          ?_util_transmit_space_between_dots_dashes 0001  
         _util_transmit_space_between_dots_dashes 3C6E                                      _sprintf$2172 00B9  
                                    ___ftmul@cntr 0087                                      ___param_bank 000000  
                                    ___ftmul@sign 0088                                      ___fttol@exp1 009E  
                                    ___fttol@lval 009A                                _util_transmit_dash 3A32  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
             __end_of_util_waits_delay_hundred_us 3B8E                       _util_waits_delay_hundred_us 3B5E  
                                 __end_of___awdiv 33DC                                             _ADRES 000FC3  
                                 __end_of___ftadd 219C                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 3470  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 2D76                                   __end_of___ftneg 3BBE  
                                 __end_of___lldiv 3336                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2AF2                                   ___awdiv@divisor 0077  
                                 __end_of___llmod 3504                                   __end_of___ftsub 3846  
                                 __end_of___fttol 2C36                                   __end_of___ltdiv 3684  
                     __size_of_util_onewire_reset 0042                                             i2l210 223C  
                                           i2l222 2382                                     __CFG_WDTEN$ON 000000  
                                           i2l924 3676                                             i2l929 366A  
                                 ___awdiv@counter 0024                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                               ?_util_transmit_dash 0001  
                              ??_low_priority_int 0060                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0029  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                      __end_of_util_getSolarCurrent 3046  
                                   __CFG_WRTB$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                                   ___awtoft@sign 0025                                   __end_of_dpowers 7F1D  
                                           _scale 13EA                                   __end_of_isdigit 3C4E  
                              __CFG_MCLRE$EXTMCLR 000000                                     ___ftpack@sign 0075  
                        ??_util_onewire_write_bit 0022                         util_waits_delay_secs@secs 0073  
                                  __CFG_BOREN$OFF 000000                                             pclath 000FFA  
                                           tablat 000FF5                 high_priority_int@noise_mean_value 0039  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3B5E  
                                 __end_of_sprintf 0C48                            _util_timer1_initialize 3BE8  
                            ??_util_transmit_dash 0025                           util_waits_delay_hours@i 007A  
                  util_getTemperature@bit_in_byte 01C7                                   __initialization 3846  
                       util_beacon_transmission@i 01C0                                      __end_of_main 3C8A  
                    __end_of_util_transmit_letter 1C88                                            ??_main 002D  
                                   ___fttol@sign1 0099                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 0168                        util_onewire_read_bit@value 0023  
                       util_getSolarCurrent@value 00A1                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0089                                  ___awdiv@dividend 0075  
                                __end_of___awtoft 3994                                  __end_of___ftpack 2F7C  
                  high_priority_int@valid_samples 002D                                  __end_of___lltoft 36EC  
                                          i2l4511 2228                                            i2l4513 222C  
                                          i2l4525 2258                                            i2l4509 2218  
                                          i2l4481 3644                                            i2l4561 2318  
                                          i2l4553 22EA                                            i2l4545 22BA  
                                          i2l4537 229A                                            i2l4571 2380  
                                          i2l4477 3636                                            i2l4557 2308  
                                          i2l4479 3640                                            i2l4567 234E  
                                __end_of___lwtoft 3BE8                   __size_of_util_onewire_read_byte 0194  
               __size_of_util_beacon_transmission 0112                         ?_util_beacon_transmission 00D2  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F44  
                        ?_util_onewire_write_byte 0073                                            ___ftge 31CE  
                      util_onewire_read_byte@bit0 0083                        util_onewire_read_byte@bit1 0085  
                      util_onewire_read_byte@bit2 0087                        util_onewire_read_byte@bit3 0089  
                      util_onewire_read_byte@bit4 008B                        util_onewire_read_byte@bit5 008D  
                      util_onewire_read_byte@bit6 008F                        util_onewire_read_byte@bit7 0091  
                         ??_util_waits_delay_mins 002A                           ??_util_waits_delay_secs 0025  
                                          ___wmul 3ACA                                         ??___awdiv 0024  
                                       ??___ftadd 0099                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 0022                                         ??___ftdiv 0026  
                                       ??___ftneg 0022                                         ??___lldiv 0022  
                                       ??___ftmul 002A                                         ??___llmod 0027  
                                       ??___ftsub 002D                                         ??___fttol 0094  
                                       ??___ltdiv 0007                       util_onewire_write_byte@bit0 0075  
                     util_onewire_write_byte@bit1 0077                       util_onewire_write_byte@bit2 0079  
                     util_onewire_write_byte@bit3 007B                       util_onewire_write_byte@bit4 007D  
                     util_onewire_write_byte@bit5 007F                       util_onewire_write_byte@bit6 0081  
                     util_onewire_write_byte@bit7 0083                                            _memset 3AFC  
                                          _fround 1C88                                            clear_0 386C  
                                          clear_1 3878                                  ___awdiv@quotient 0026  
                                 ___awmod@divisor 0073                                   ___awmod@counter 0022  
                     util_waits_delay_hours@hours 0077                                            _strcat 388C  
                                          _strcpy 3A98                                            _strlen 3750  
                           ___ftmul@f3_as_product 0084                                      __pdataCOMRAM 0039  
                                       ??_isdigit 0022                                      __mediumconst 7EF4  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                                         ??_sprintf 00B3  
                                 __CFG_HFOFST$OFF 000000                          ??_util_getBatteryCurrent 002D  
                 __size_of_util_onewire_write_bit 0034                                        __accesstop 0060  
                         __end_of__initialization 387E                                   __CFG_PBADEN$OFF 000000  
                                      ___ftadd@f1 0093                                        ___ftadd@f2 0096  
                                      ___ftge@ff1 0071                                        ___ftge@ff2 0074  
                                   ___rparam_used 000001                                        ___ftdiv@f1 0079  
                                      ___ftdiv@f2 007C                                        ___ftdiv@f3 0080  
                        ??_util_getBatteryVoltage 002D                                        ___ftneg@f1 0071  
                                      ___awtoft@c 0076                                        ___ftmul@f1 007D  
                                      ___ftmul@f2 0080                                        ___ftsub@f1 009F  
                                      ___ftsub@f2 00A2                                        ___fttol@f1 0090  
                                  __pcstackCOMRAM 0001                              _util_getSolarCurrent 2F7C  
                                      ___lltoft@c 0076                          main_loop@battery_current 00E1  
                                   __end_of_scale 1898                            _util_onewire_read_byte 23BE  
                                      ___lwtoft@c 0076                                        __div_to_l_ 2842  
                        main_loop@battery_voltage 00E3                    __size_of_util_onewire_read_bit 0032  
                   __end_of_util_onewire_read_bit 3A98                                   __div_to_l_@exp1 0027  
                                 __div_to_l_@cntr 0026                                           ??_scale 002D  
                                 __div_to_l_@quot 0022                                      sprintf@width 00C0  
       __end_of_util_transmit_space_between_words 3C5E        __size_of_util_transmit_space_between_words 0010  
             ??_util_transmit_space_between_words 0025                ?_util_transmit_space_between_words 0001  
               _util_transmit_space_between_words 3C4E                                        __pbssBANK2 0200  
                              __size_of_main_loop 008C                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1898                                     __div_to_l_@f1 0071  
                                   __div_to_l_@f2 0074                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 009F                                           ?___ftge 0071  
                    util_onewire_write_bit@bit_in 0071                                           ?___wmul 0079  
                high_priority_int@sample_position 0035                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 39CA                                           ?_memset 0071  
                                         ?_fround 0089                                         ?___awtoft 0076  
                                       ?___ftpack 0071                                 _high_priority_int 0008  
                                       ?___lltoft 0076                                           ?_strcat 0071  
                                         ?_strcpy 0071                                           ?_strlen 0071  
                                       ?___lwtoft 0076                                ?_high_priority_int 0001  
                             ??_high_priority_int 000B                      __size_of_util_getTemperature 07A2  
                         ?_util_timer1_initialize 0001                             ?_util_transmit_letter 0001  
            __size_of_util_waits_delay_hundred_us 0030                   __size_of_util_getBatteryCurrent 00CA  
                       __size_of_low_priority_int 008E                              util_waits_delay_ms@i 0023  
                    util_waits_delay_mins@minutes 0075                                   __CFG_PWRTEN$OFF 000000  
                               __end_of__npowers_ 7F6B                                           __Hparam 0000  
                 __size_of_util_getBatteryVoltage 00BE                                        _scale$2171 008C  
            __end_of_util_transmit_morse_sequence 3750             __size_of_util_transmit_morse_sequence 0064  
                    _util_transmit_morse_sequence 36EC                                           __Lparam 0000  
                      util_getTemperature@bit_mem 0100       __end_of_util_transmit_space_between_letters 3C6E  
    __size_of_util_transmit_space_between_letters 0010             ??_util_transmit_space_between_letters 0025  
            ?_util_transmit_space_between_letters 0001               _util_transmit_space_between_letters 3C5E  
                                 __size_of___ftge 00B8                                           ___awdiv 3336  
                                         ___ftadd 1F34                                           ___awmod 33DC  
                                         ___ftdiv 2C36                                           ___ftneg 3B8E  
                                         ___lldiv 3286                                   __size_of___wmul 0032  
                                         ___ftmul 29A0                          ??_util_waits_delay_hours 0079  
                                         ___llmod 3470                                           ___ftsub 37FA  
                     util_getTemperature@byte_mem 0190                                           ___fttol 2AF2  
                                         ___ltdiv 361A                         __end_of_high_priority_int 23BE  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 3954  
                               __end_of_main_loop 3590                                           __pcinit 3846  
                                      ??___awtoft 0025                                        ??___ftpack 0022  
                                 __size_of_memset 0032                                   __size_of_fround 02AC  
                                         __ramtop 0600                                        _initialize 3590  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0025  
                                         __ptext0 3C7E                                           __ptext1 3504  
                                         __ptext2 38D0                                           __ptext3 3994  
                                         __ptext4 0C48                                           __ptext5 37A6  
                                         __ptext6 2552                                           __ptext7 39CA  
                                         __ptext8 3912                                           __ptext9 23BE  
                                      ??___lwtoft 0025                                   __size_of_strcat 0044  
                                 __size_of_strcpy 0032                                   __size_of_strlen 0056  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0071  
                                         _dpowers 7EF5                       util_getTemperature@num_byte 01C5  
                                         _isdigit 3C30                                  ___awmod@dividend 0071  
                    util_onewire_write_byte@value 0073                  ??_util_transmit_buzzer_1ms_cycle 0025  
                 ?_util_transmit_buzzer_1ms_cycle 0001                    __end_of_util_timer1_initialize 3C0E  
                            main_loop@temperature 00DC                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0029                                    __pintcode_body 219C  
                            end_of_initialization 387E                      util_waits_delay_hundred_us@i 0023  
                                         memset@c 0073                                           memset@n 0075  
                                         memset@p 0022                                     __Lmediumconst 7EF4  
                                         int_func 219C                       __size_of_util_transmit_dash 0034  
                                 ___lldiv@divisor 0075                                  ___ltdiv@dividend 0001  
                          ??_util_getSolarCurrent 002D                                   ___lldiv@counter 0026  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 0030                                           postinc0 000FEE  
                                         postinc2 000FDE             util_beacon_transmission@solar_current 00D5  
                  __size_of_util_waits_delay_mins 0036                                    __tdiv_to_l_@f1 0071  
                                  __tdiv_to_l_@f2 0074                    __size_of_util_waits_delay_secs 0054  
                   __end_of_util_waits_delay_mins 39CA                            _util_getBatteryCurrent 3046  
                   __end_of_util_waits_delay_secs 37FA                                           strlen@s 0071  
                                   ??__tdiv_to_l_ 0022                                         _PORTAbits 000F80  
                                       _PORTDbits 000F83                           high_priority_int@sample 001E  
                          _util_getBatteryVoltage 3110                  __size_of_util_onewire_write_byte 0188  
                        _util_getTemperature$2165 01A7                          _util_getTemperature$2166 01AA  
                        _util_getTemperature$2167 01AD                          _util_getTemperature$2168 01B0  
                                       _TRISAbits 000F92                                         _TRISDbits 000F95  
                                ___ltdiv@quotient 0007                            ??_util_transmit_letter 002B  
                                     ___ftdiv@exp 0083             util_beacon_transmission@BEACON_BUFFER 0180  
                             __size_of__div_to_l_ 015E                                       ___ftmul@exp 0083  
                         ?_util_onewire_read_byte 0073                                 _util_transmit_dot 39FE  
                      __size_of_high_priority_int 23B6                                    __end_of___ftge 3286  
                 __size_of_util_waits_delay_hours 0042                                    __end_of___wmul 3AFC  
                              ?_util_transmit_dot 0001                                     __pidataCOMRAM 3C8A  
                                     ?_initialize 0001                                    __end_of_memset 3B2E  
                                  __end_of_fround 1F34                                    __end_of_strcat 38D0  
                                  __end_of_strcpy 3ACA                                    __end_of_strlen 37A6  
               util_waits_delay_hundred_us@hun_us 0071                               start_initialization 3846  
                             ??_util_transmit_dot 0025                            util_waits_delay_mins@i 002B  
                          util_waits_delay_secs@i 0026                            util_waits_delay_secs@j 0028  
                             __end_of__tdiv_to_l_ 2842                          _util_beacon_transmission 2D76  
             util_beacon_transmission@temperature 00D9                                  _low_priority_int 0018  
                                 ___llmod@divisor 007D                                   ___llmod@counter 0027  
                             util_transmit_dash@i 0025                    __end_of_util_onewire_read_byte 2552  
                       __end_of_util_transmit_dot 3A32                           ?_util_onewire_write_bit 0071  
                                        ??___ftge 0022                                          ??___wmul 0028  
                             _util_getTemperature 0C48                                          ??_memset 0022  
                                        ??_fround 002D                                     sprintf@tmpval 00C2  
                                        ??_strcat 0022                                          ??_strcpy 0022  
                                        ??_strlen 0022                      ?_util_waits_delay_hundred_us 0071  
                                      fround@prec 0092                                 __size_of___awtoft 0040  
                               __size_of___ftpack 00F4                                 __size_of___lltoft 0068  
                                     __pbssCOMRAM 002D                                 __size_of___lwtoft 002A  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$1811 0023                             _util_onewire_read_bit 3A66  
                            ?_util_getTemperature 009F                            _util_waits_delay_hours 38D0  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00BE  
                                     sprintf@fval 00CC             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00CF                               __size_of_initialize 008A  
                  __end_of_util_onewire_write_bit 39FE                                         __pintcode 0008  
                                   __pmediumconst 7EF4                                          ?___awdiv 0075  
                                        ?___ftadd 0093                                          ?___awmod 0071  
                                        ?___ftdiv 0079                                          ?___ftneg 0071  
                                        ?___lldiv 0071                                          ?___ftmul 007D  
                                        ?___llmod 0079                                          ?___ftsub 009F  
                                       __npowers_ 7F44                                          ?___fttol 0090  
                                        ?___ltdiv 0001                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 26DA  
                                    ??__div_to_l_ 0022                           _util_onewire_write_byte 2552  
                                        ?_isdigit 0001                                         _main_loop 3504  
                   ??_util_waits_delay_hundred_us 0022        high_priority_int@cycles_transmitter_active 0031  
                             _util_waits_delay_ms 3B2E                             ??_util_getTemperature 00A2  
                              _util_onewire_reset 3912                                          ?_sprintf 00A5  
                                  __size_of_scale 04AE                       util_getBatteryVoltage@value 008C  
                                  ___wmul@product 0028                                          _LATAbits 000F89  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0071  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 0034                                          i2u433_40 2264  
                                 ___ltdiv@divisor 0004                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 29A0                                          i2u428_40 2202  
                                        i2u429_48 2204            __end_of_util_transmit_buzzer_1ms_cycle 3C30  
         __size_of_util_transmit_buzzer_1ms_cycle 0022                    _util_transmit_buzzer_1ms_cycle 3C0E  
                         ?_util_getBatteryCurrent 009F                                   ___ltdiv@counter 000A  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 0071           util_beacon_transmission@battery_current 00D7  
                         ?_util_getBatteryVoltage 0089                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0079                              ??_util_onewire_reset 0022  
                      util_transmit_letter@letter 002B                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00D2                            ?_util_onewire_read_bit 0071  
                     util_getBatteryCurrent@value 00A1                                         copy_data0 385A  
                           util_waits_delay_ms@ms 0071                        __end_of_util_transmit_dash 3A66  
          high_priority_int@is_transmitter_active 002F                    __end_of_util_getBatteryCurrent 3110  
                                        __Hrparam 0000                                util_transmit_dot@i 0025  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 0022  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
                  __end_of_util_getBatteryVoltage 31CE                                  __size_of___awdiv 00A6  
                                __size_of___ftadd 0268                                  __size_of___awmod 0094  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0030  
                                __size_of___lldiv 00B0                                  __size_of___ftmul 0152  
                       ??_util_onewire_write_byte 0022                                  __size_of___llmod 0094  
                                __size_of___ftsub 004C                                  __size_of___fttol 0144  
                                __size_of___ltdiv 006A                                      ??_initialize 0022  
                                        ___awtoft 3954                                          ___ftpack 2E88  
                                     _fround$2170 008C                                       _fround$2169 008F  
                        __end_of_low_priority_int 00A6                                          ___lltoft 3684  
                      ??_util_beacon_transmission 002D                             _util_waits_delay_mins 3994  
                           _util_waits_delay_secs 37A6                                        _ANSELAbits 000F38  
                                        ___lwtoft 3BBE                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00CA                                        sprintf@val 00C6  
                                      strcat@from 0073                                  __size_of_isdigit 001E  
                                        __ptext10 3A66                                          __ptext11 2C36  
                                        __ptext20 3C5E                                          __ptext12 3954  
                                        __ptext21 36EC                                          __ptext13 2F7C  
                                        __ptext30 388C                                          __ptext22 3C6E  
                                        __ptext14 3110                                          __ptext31 00AA  
                                        __ptext23 39FE                                          __ptext15 3046  
                                        __ptext40 2842                                          __ptext32 13EA  
                                        __ptext24 3A32                                          __ptext16 3BBE  
                                        __ptext41 3684                                          __ptext33 3C30  
                                        __ptext25 3B2E                                          __ptext17 2D76  
                                        __ptext50 3AFC                                          __ptext42 3470  
                                        __ptext34 1C88                                          __ptext26 3C0E  
                                        __ptext18 1898                                          __ptext51 3590  
                                        __ptext43 3286                                          __ptext35 3ACA  
                                        __ptext27 3B5E                                          __ptext19 3C4E  
                                        __ptext52 3BE8                                          __ptext44 2AF2  
                                        __ptext36 29A0                                          __ptext28 3750  
                                        __ptext45 37FA                                          __ptext37 33DC  
                                        __ptext29 3A98                                          __ptext46 1F34  
                                        __ptext38 3336                                          __ptext55 361A  
                                        __ptext47 2E88                                          __ptext39 26DA  
                                        __ptext48 3B8E                                          __ptext49 31CE  
                                        __powers_ 7F1D                                  __size_of_sprintf 0B9E  
                                      strcpy@from 0073                     __size_of_util_transmit_letter 03F0  
                util_getSolarCurrent@solarCurrent 00A4                                     __size_of_main 000C  
                      util_onewire_reset@presence 0023                                __end_of_initialize 361A  
                                        int$flags 003E                     ?_util_transmit_morse_sequence 0073  
                   util_getBatteryVoltage@voltage 008F                             _tmr1_interrupt_number 0037  
                        ??_util_timer1_initialize 0022                                       ??_main_loop 002D  
                                      _INTCONbits 000FF2                           ?_util_waits_delay_hours 0077  
                                        isdigit@c 0024                                          memset@p1 0071  
                          main_loop@solar_current 00DF                                          scale@scl 008F  
                 __end_of_util_onewire_write_byte 26DA                                          intlevel1 0000  
                                        intlevel2 0000                                         sprintf@ap 00BC  
                                __tdiv_to_l_@exp1 002A                                  __tdiv_to_l_@cntr 0029  
                                       sprintf@sp 00A5                                  __tdiv_to_l_@quot 0025  
                                    _VREFCON0bits 000F42                                  ___lldiv@dividend 0071  
                          ?_util_waits_delay_mins 0075                            ?_util_waits_delay_secs 0073  
                                    ?__tdiv_to_l_ 0071                                          sprintf@c 00D1  
                                        sprintf@f 00A7                                          strcat@cp 0022  
                                        strcat@to 0071                    __end_of_util_waits_delay_hours 3912  
                                ___lldiv@quotient 0022                                          strcpy@cp 0022  
                                        strlen@cp 0024                                          strcpy@to 0071  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
        high_priority_int@times_thresold_exceeded 0033              util_getBatteryCurrent@batteryCurrent 00A4  
