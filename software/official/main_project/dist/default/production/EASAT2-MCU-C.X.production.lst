

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Apr 01 12:54:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 1.41
    77                           ; Generated 25/01/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F45K22 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  003CC0                     __pidataCOMRAM:
   113                           	opt stack 0
   114                           
   115                           ;initializer for high_priority_int@noise_mean_value
   116  003CC0  00                 	db	0
   117  003CC1  7D                 	db	125
   118  003CC2  00                 	db	0
   119                           
   120                           ;initializer for high_priority_int@activation_thresold
   121  003CC3  7D00               	dw	32000
   122                           
   123                           	psect	mediumconst
   124  007EF4                     __pmediumconst:
   125                           	opt stack 0
   126  007EF4  00                 	db	0
   127  007EF5                     _dpowers:
   128                           	opt stack 0
   129  007EF5  0001               	dw	1
   130  007EF7  0000               	dw	0
   131  007EF9  000A               	dw	10
   132  007EFB  0000               	dw	0
   133  007EFD  0064               	dw	100
   134  007EFF  0000               	dw	0
   135  007F01  03E8               	dw	1000
   136  007F03  0000               	dw	0
   137  007F05  2710               	dw	10000
   138  007F07  0000               	dw	0
   139  007F09  86A0               	dw	34464
   140  007F0B  0001               	dw	1
   141  007F0D  4240               	dw	16960
   142  007F0F  000F               	dw	15
   143  007F11  9680               	dw	38528
   144  007F13  0098               	dw	152
   145  007F15  E100               	dw	57600
   146  007F17  05F5               	dw	1525
   147  007F19  CA00               	dw	51712
   148  007F1B  3B9A               	dw	15258
   149  007F1D                     __end_of_dpowers:
   150                           	opt stack 0
   151  007F1D                     __powers_:
   152                           	opt stack 0
   153  007F1D  00                 	db	0
   154  007F1E  80                 	db	128
   155  007F1F  3F                 	db	63
   156  007F20  00                 	db	0
   157  007F21  20                 	db	32
   158  007F22  41                 	db	65
   159  007F23  00                 	db	0
   160  007F24  C8                 	db	200
   161  007F25  42                 	db	66
   162  007F26  00                 	db	0
   163  007F27  7A                 	db	122
   164  007F28  44                 	db	68
   165  007F29  40                 	db	64
   166  007F2A  1C                 	db	28
   167  007F2B  46                 	db	70
   168  007F2C  50                 	db	80
   169  007F2D  C3                 	db	195
   170  007F2E  47                 	db	71
   171  007F2F  24                 	db	36
   172  007F30  74                 	db	116
   173  007F31  49                 	db	73
   174  007F32  97                 	db	151
   175  007F33  18                 	db	24
   176  007F34  4B                 	db	75
   177  007F35  BC                 	db	188
   178  007F36  BE                 	db	190
   179  007F37  4C                 	db	76
   180  007F38  6B                 	db	107
   181  007F39  6E                 	db	110
   182  007F3A  4E                 	db	78
   183  007F3B  03                 	db	3
   184  007F3C  15                 	db	21
   185  007F3D  50                 	db	80
   186  007F3E  79                 	db	121
   187  007F3F  AD                 	db	173
   188  007F40  60                 	db	96
   189  007F41  F3                 	db	243
   190  007F42  49                 	db	73
   191  007F43  71                 	db	113
   192  007F44                     __end_of__powers_:
   193                           	opt stack 0
   194  007F44                     __npowers_:
   195                           	opt stack 0
   196  007F44  00                 	db	0
   197  007F45  80                 	db	128
   198  007F46  3F                 	db	63
   199  007F47  CD                 	db	205
   200  007F48  CC                 	db	204
   201  007F49  3D                 	db	61
   202  007F4A  D7                 	db	215
   203  007F4B  23                 	db	35
   204  007F4C  3C                 	db	60
   205  007F4D  12                 	db	18
   206  007F4E  83                 	db	131
   207  007F4F  3A                 	db	58
   208  007F50  B7                 	db	183
   209  007F51  D1                 	db	209
   210  007F52  38                 	db	56
   211  007F53  C6                 	db	198
   212  007F54  27                 	db	39
   213  007F55  37                 	db	55
   214  007F56  38                 	db	56
   215  007F57  86                 	db	134
   216  007F58  35                 	db	53
   217  007F59  C0                 	db	192
   218  007F5A  D6                 	db	214
   219  007F5B  33                 	db	51
   220  007F5C  CC                 	db	204
   221  007F5D  2B                 	db	43
   222  007F5E  32                 	db	50
   223  007F5F  70                 	db	112
   224  007F60  89                 	db	137
   225  007F61  30                 	db	48
   226  007F62  E7                 	db	231
   227  007F63  DB                 	db	219
   228  007F64  2E                 	db	46
   229  007F65  E5                 	db	229
   230  007F66  3C                 	db	60
   231  007F67  1E                 	db	30
   232  007F68  42                 	db	66
   233  007F69  A2                 	db	162
   234  007F6A  0D                 	db	13
   235  007F6B                     __end_of__npowers_:
   236                           	opt stack 0
   237  0000                     _ANSELDbits	set	3899
   238  0000                     _ANSELBbits	set	3897
   239  0000                     _ANSELAbits	set	3896
   240  0000                     _VREFCON0bits	set	3906
   241  0000                     _ADRES	set	4035
   242  0000                     _PORTBbits	set	3969
   243  0000                     _PORTDbits	set	3971
   244  0000                     _INTCONbits	set	4082
   245  0000                     _IPR1bits	set	3999
   246  0000                     _PIE1bits	set	3997
   247  0000                     _TMR1L	set	4046
   248  0000                     _TMR1H	set	4047
   249  0000                     _T1CONbits	set	4045
   250  0000                     _RCONbits	set	4048
   251  0000                     _PORTAbits	set	3968
   252  0000                     _PIR1bits	set	3998
   253  0000                     _ADCON0bits	set	4034
   254  0000                     _LATDbits	set	3980
   255  0000                     _TRISDbits	set	3989
   256  0000                     _LATBbits	set	3978
   257  0000                     _TRISBbits	set	3987
   258  0000                     _LATAbits	set	3977
   259  0000                     _TRISAbits	set	3986
   260  0000                     _ADCON2	set	4032
   261  0000                     _ADCON1	set	4033
   262  007F6B                     STR_2:
   263  007F6B  20                 	db	32
   264  007F6C  25                 	db	37
   265  007F6D  2E                 	db	46
   266  007F6E  31                 	db	49	;'1'
   267  007F6F  66                 	db	102	;'f'
   268  007F70  20                 	db	32
   269  007F71  25                 	db	37
   270  007F72  2E                 	db	46
   271  007F73  31                 	db	49	;'1'
   272  007F74  66                 	db	102	;'f'
   273  007F75  20                 	db	32
   274  007F76  25                 	db	37
   275  007F77  33                 	db	51	;'3'
   276  007F78  2E                 	db	46
   277  007F79  30                 	db	48	;'0'
   278  007F7A  64                 	db	100	;'d'
   279  007F7B  20                 	db	32
   280  007F7C  25                 	db	37
   281  007F7D  33                 	db	51	;'3'
   282  007F7E  2E                 	db	46
   283  007F7F  30                 	db	48	;'0'
   284  007F80  64                 	db	100	;'d'
   285  007F81  00                 	db	0
   286  007F82                     STR_39:
   287  007F82  2D                 	db	45
   288  007F83  2D                 	db	45
   289  007F84  2E                 	db	46
   290  007F85  2E                 	db	46
   291  007F86  2D                 	db	45
   292  007F87  2D                 	db	45
   293  007F88  00                 	db	0
   294  007F89                     STR_42:
   295  007F89  2E                 	db	46
   296  007F8A  2D                 	db	45
   297  007F8B  2E                 	db	46
   298  007F8C  2D                 	db	45
   299  007F8D  2E                 	db	46
   300  007F8E  2D                 	db	45
   301  007F8F  00                 	db	0
   302  007F90                     STR_43:
   303  007F90  2D                 	db	45
   304  007F91  2E                 	db	46
   305  007F92  2E                 	db	46
   306  007F93  2E                 	db	46
   307  007F94  2E                 	db	46
   308  007F95  2D                 	db	45
   309  007F96  00                 	db	0
   310  007F97                     STR_40:
   311  007F97  2E                 	db	46
   312  007F98  2E                 	db	46
   313  007F99  2D                 	db	45
   314  007F9A  2D                 	db	45
   315  007F9B  2E                 	db	46
   316  007F9C  2E                 	db	46
   317  007F9D  00                 	db	0
   318  007F9E                     STR_1:
   319  007F9E  45                 	db	69	;'E'
   320  007F9F  41                 	db	65	;'A'
   321  007FA0  53                 	db	83	;'S'
   322  007FA1  41                 	db	65	;'A'
   323  007FA2  54                 	db	84	;'T'
   324  007FA3  32                 	db	50	;'2'
   325  007FA4  00                 	db	0
   326  007FA5                     STR_29:
   327  007FA5  2D                 	db	45
   328  007FA6  2D                 	db	45
   329  007FA7  2D                 	db	45
   330  007FA8  2D                 	db	45
   331  007FA9  2D                 	db	45
   332  007FAA  00                 	db	0
   333  007FAB                     STR_30:
   334  007FAB  2E                 	db	46
   335  007FAC  2D                 	db	45
   336  007FAD  2D                 	db	45
   337  007FAE  2D                 	db	45
   338  007FAF  2D                 	db	45
   339  007FB0  00                 	db	0
   340  007FB1                     STR_31:
   341  007FB1  2E                 	db	46
   342  007FB2  2E                 	db	46
   343  007FB3  2D                 	db	45
   344  007FB4  2D                 	db	45
   345  007FB5  2D                 	db	45
   346  007FB6  00                 	db	0
   347  007FB7                     STR_32:
   348  007FB7  2E                 	db	46
   349  007FB8  2E                 	db	46
   350  007FB9  2E                 	db	46
   351  007FBA  2D                 	db	45
   352  007FBB  2D                 	db	45
   353  007FBC  00                 	db	0
   354  007FBD                     STR_38:
   355  007FBD  2D                 	db	45
   356  007FBE  2D                 	db	45
   357  007FBF  2D                 	db	45
   358  007FC0  2D                 	db	45
   359  007FC1  2E                 	db	46
   360  007FC2  00                 	db	0
   361  007FC3                     STR_41:
   362  007FC3  2D                 	db	45
   363  007FC4  2E                 	db	46
   364  007FC5  2E                 	db	46
   365  007FC6  2D                 	db	45
   366  007FC7  2E                 	db	46
   367  007FC8  00                 	db	0
   368  007FC9                     STR_37:
   369  007FC9  2D                 	db	45
   370  007FCA  2D                 	db	45
   371  007FCB  2D                 	db	45
   372  007FCC  2E                 	db	46
   373  007FCD  2E                 	db	46
   374  007FCE  00                 	db	0
   375  007FCF                     STR_36:
   376  007FCF  2D                 	db	45
   377  007FD0  2D                 	db	45
   378  007FD1  2E                 	db	46
   379  007FD2  2E                 	db	46
   380  007FD3  2E                 	db	46
   381  007FD4  00                 	db	0
   382  007FD5                     STR_35:
   383  007FD5  2D                 	db	45
   384  007FD6  2E                 	db	46
   385  007FD7  2E                 	db	46
   386  007FD8  2E                 	db	46
   387  007FD9  2E                 	db	46
   388  007FDA  00                 	db	0
   389  007FDB                     STR_34:
   390  007FDB  2E                 	db	46
   391  007FDC  2E                 	db	46
   392  007FDD  2E                 	db	46
   393  007FDE  2E                 	db	46
   394  007FDF  2E                 	db	46
   395  007FE0  00                 	db	0
   396  007FE1                     STR_27:
   397  007FE1  2D                 	db	45
   398  007FE2  2E                 	db	46
   399  007FE3  2D                 	db	45
   400  007FE4  2D                 	db	45
   401  007FE5  00                 	db	0
   402  007FE6                     STR_19:
   403  007FE6  2D                 	db	45
   404  007FE7  2D                 	db	45
   405  007FE8  2E                 	db	46
   406  007FE9  2D                 	db	45
   407  007FEA  00                 	db	0
   408  007FEB                     STR_26:
   409  007FEB  2D                 	db	45
   410  007FEC  2E                 	db	46
   411  007FED  2E                 	db	46
   412  007FEE  2D                 	db	45
   413  007FEF  00                 	db	0
   414  007FF0                     STR_18:
   415  007FF0  2E                 	db	46
   416  007FF1  2D                 	db	45
   417  007FF2  2D                 	db	45
   418  007FF3  2E                 	db	46
   419  007FF4  00                 	db	0
   420  007FF5                     STR_5:
   421  007FF5  2D                 	db	45
   422  007FF6  2E                 	db	46
   423  007FF7  2D                 	db	45
   424  007FF8  2E                 	db	46
   425  007FF9  00                 	db	0
   426  007FFA                     STR_14:
   427  007FFA  2E                 	db	46
   428  007FFB  2D                 	db	45
   429  007FFC  2E                 	db	46
   430  007FFD  2E                 	db	46
   431  007FFE  00                 	db	0
   432  0000                     
   433                           ; #config settings
   434  007FFF  00                 	db	0	; dummy byte at the end
   435  0000                     
   436                           	psect	cinit
   437  003872                     __pcinit:
   438                           	opt stack 0
   439  003872                     start_initialization:
   440                           	opt stack 0
   441  003872                     __initialization:
   442                           	opt stack 0
   443                           
   444                           ; Initialize objects allocated to COMRAM (5 bytes)
   445                           ; load TBLPTR registers with __pidataCOMRAM
   446  003872  0EC0               	movlw	low __pidataCOMRAM
   447  003874  6EF6               	movwf	tblptrl,c
   448  003876  0E3C               	movlw	high __pidataCOMRAM
   449  003878  6EF7               	movwf	tblptrh,c
   450  00387A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   451  00387C  6EF8               	movwf	tblptru,c
   452  00387E  EE00  F039         	lfsr	0,__pdataCOMRAM
   453  003882  EE10 F005          	lfsr	1,5
   454  003886                     copy_data0:
   455  003886  0009               	tblrd		*+
   456  003888  CFF5 FFEE          	movff	tablat,postinc0
   457  00388C  50E5               	movf	postdec1,w,c
   458  00388E  50E1               	movf	fsr1l,w,c
   459  003890  E1FA               	bnz	copy_data0
   460                           
   461                           ; Clear objects allocated to BANK2 (200 bytes)
   462  003892  EE02  F000         	lfsr	0,__pbssBANK2
   463  003896  0EC8               	movlw	200
   464  003898                     clear_0:
   465  003898  6AEE               	clrf	postinc0,c
   466  00389A  06E8               	decf	wreg,f,c
   467  00389C  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to COMRAM (12 bytes)
   470  00389E  EE00  F02D         	lfsr	0,__pbssCOMRAM
   471  0038A2  0E0C               	movlw	12
   472  0038A4                     clear_1:
   473  0038A4  6AEE               	clrf	postinc0,c
   474  0038A6  06E8               	decf	wreg,f,c
   475  0038A8  E1FD               	bnz	clear_1
   476  0038AA                     end_of_initialization:
   477                           	opt stack 0
   478  0038AA                     __end_of__initialization:
   479                           	opt stack 0
   480  0038AA  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   481  0038AC  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   482  0038AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   483  0038B0  6EF8               	movwf	tblptru,c
   484  0038B2  0100               	movlb	0
   485  0038B4  EF55  F01E         	goto	_main	;jump to C main() function
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	bssCOMRAM
   496  00002D                     __pbssCOMRAM:
   497                           	opt stack 0
   498  00002D                     high_priority_int@valid_samples:
   499                           	opt stack 0
   500  00002D                     	ds	2
   501  00002F                     high_priority_int@is_transmitter_active:
   502                           	opt stack 0
   503  00002F                     	ds	2
   504  000031                     high_priority_int@cycles_transmitter_active:
   505                           	opt stack 0
   506  000031                     	ds	2
   507  000033                     high_priority_int@times_thresold_exceeded:
   508                           	opt stack 0
   509  000033                     	ds	2
   510  000035                     high_priority_int@sample_position:
   511                           	opt stack 0
   512  000035                     	ds	2
   513  000037                     _tmr1_interrupt_number:
   514                           	opt stack 0
   515  000037                     	ds	2
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           postdec1	equ	0xFE5
   523                           fsr1l	equ	0xFE1
   524                           
   525                           	psect	dataCOMRAM
   526  000039                     __pdataCOMRAM:
   527                           	opt stack 0
   528  000039                     high_priority_int@noise_mean_value:
   529                           	opt stack 0
   530  000039                     	ds	3
   531  00003C                     high_priority_int@activation_thresold:
   532                           	opt stack 0
   533  00003C                     	ds	2
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	bssBANK2
   544  000200                     __pbssBANK2:
   545                           	opt stack 0
   546  000200                     high_priority_int@samples:
   547                           	opt stack 0
   548  000200                     	ds	200
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	cstackBANK1
   559  000100                     __pcstackBANK1:
   560                           	opt stack 0
   561  000100                     util_beacon_transmission@BEACON_MESSAGE:
   562                           	opt stack 0
   563  000100                     util_getTemperature@bit_mem:
   564                           	opt stack 0
   565                           
   566                           ; 144 bytes @ 0x0
   567  000100                     	ds	128
   568  000180                     util_beacon_transmission@BEACON_BUFFER:
   569                           	opt stack 0
   570                           
   571                           ; 64 bytes @ 0x80
   572  000180                     	ds	16
   573  000190                     util_getTemperature@byte_mem:
   574                           	opt stack 0
   575                           
   576                           ; 18 bytes @ 0x90
   577  000190                     	ds	18
   578  0001A2                     util_getTemperature@num_bit:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0xA2
   582  0001A2                     	ds	2
   583  0001A4                     util_getTemperature@sign:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0xA4
   587  0001A4                     	ds	3
   588  0001A7                     _util_getTemperature$2417:
   589                           	opt stack 0
   590                           
   591                           ; 3 bytes @ 0xA7
   592  0001A7                     	ds	3
   593  0001AA                     _util_getTemperature$2418:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0xAA
   597  0001AA                     	ds	3
   598  0001AD                     _util_getTemperature$2419:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0xAD
   602  0001AD                     	ds	3
   603  0001B0                     _util_getTemperature$2420:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0xB0
   607  0001B0                     	ds	3
   608  0001B3                     util_getTemperature@shift_reg_bit0:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0xB3
   612  0001B3                     	ds	2
   613  0001B5                     util_getTemperature@shift_reg_bit1:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0xB5
   617  0001B5                     	ds	2
   618  0001B7                     util_getTemperature@shift_reg_bit2:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0xB7
   622  0001B7                     	ds	2
   623  0001B9                     util_getTemperature@shift_reg_bit3:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0xB9
   627  0001B9                     	ds	2
   628  0001BB                     util_getTemperature@shift_reg_bit4:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0xBB
   632  0001BB                     	ds	2
   633  0001BD                     util_getTemperature@shift_reg_bit5:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xBD
   637  0001BD                     	ds	2
   638  0001BF                     util_getTemperature@shift_reg_bit6:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xBF
   642  0001BF                     	ds	1
   643  0001C0                     util_beacon_transmission@i:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0xC0
   647  0001C0                     	ds	1
   648  0001C1                     util_getTemperature@shift_reg_bit7:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0xC1
   652  0001C1                     	ds	2
   653  0001C3                     util_getTemperature@shift_reg_bit_temp:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0xC3
   657  0001C3                     	ds	2
   658  0001C5                     util_getTemperature@num_byte:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0xC5
   662  0001C5                     	ds	2
   663  0001C7                     util_getTemperature@bit_in_byte:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xC7
   667  0001C7                     	ds	2
   668  0001C9                     util_getTemperature@temperature:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0xC9
   672  0001C9                     	ds	3
   673  0001CC                     util_getTemperature@i:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0xCC
   677  0001CC                     	ds	2
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           
   687                           	psect	cstackBANK0
   688  000060                     __pcstackBANK0:
   689                           	opt stack 0
   690  000060                     ??_low_priority_int:
   691                           
   692                           ; 1 bytes @ 0x0
   693  000060                     	ds	17
   694  000071                     ?_util_onewire_reset:
   695                           	opt stack 0
   696  000071                     ?_util_onewire_read_bit:
   697                           	opt stack 0
   698  000071                     ?_strlen:
   699                           	opt stack 0
   700  000071                     ?___awmod:
   701                           	opt stack 0
   702  000071                     ?___ftpack:
   703                           	opt stack 0
   704  000071                     ?___ftneg:
   705                           	opt stack 0
   706  000071                     ?__tdiv_to_l_:
   707                           	opt stack 0
   708  000071                     ?__div_to_l_:
   709                           	opt stack 0
   710  000071                     ?___lldiv:
   711                           	opt stack 0
   712  000071                     util_onewire_write_bit@bit_in:
   713                           	opt stack 0
   714  000071                     util_waits_delay_ms@ms:
   715                           	opt stack 0
   716  000071                     util_waits_delay_hundred_us@hun_us:
   717                           	opt stack 0
   718  000071                     ___awmod@dividend:
   719                           	opt stack 0
   720  000071                     memset@p1:
   721                           	opt stack 0
   722  000071                     strcat@to:
   723                           	opt stack 0
   724  000071                     strcpy@to:
   725                           	opt stack 0
   726  000071                     strlen@s:
   727                           	opt stack 0
   728  000071                     __div_to_l_@f1:
   729                           	opt stack 0
   730  000071                     ___ftpack@arg:
   731                           	opt stack 0
   732  000071                     __tdiv_to_l_@f1:
   733                           	opt stack 0
   734  000071                     ___ftge@ff1:
   735                           	opt stack 0
   736  000071                     ___ftneg@f1:
   737                           	opt stack 0
   738  000071                     ___lldiv@dividend:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x11
   742  000071                     	ds	2
   743  000073                     ?_util_onewire_read_byte:
   744                           	opt stack 0
   745  000073                     util_onewire_write_byte@value:
   746                           	opt stack 0
   747  000073                     util_transmit_morse_sequence@morse_sequence:
   748                           	opt stack 0
   749  000073                     util_waits_delay_secs@secs:
   750                           	opt stack 0
   751  000073                     ___awmod@divisor:
   752                           	opt stack 0
   753  000073                     memset@c:
   754                           	opt stack 0
   755  000073                     strcat@from:
   756                           	opt stack 0
   757  000073                     strcpy@from:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x13
   761  000073                     	ds	1
   762  000074                     ___ftpack@exp:
   763                           	opt stack 0
   764  000074                     __div_to_l_@f2:
   765                           	opt stack 0
   766  000074                     __tdiv_to_l_@f2:
   767                           	opt stack 0
   768  000074                     ___ftge@ff2:
   769                           	opt stack 0
   770                           
   771                           ; 3 bytes @ 0x14
   772  000074                     	ds	1
   773  000075                     ??_util_onewire_read_byte:
   774  000075                     ?___awdiv:
   775                           	opt stack 0
   776  000075                     ___ftpack@sign:
   777                           	opt stack 0
   778  000075                     util_onewire_write_byte@bit0:
   779                           	opt stack 0
   780  000075                     util_waits_delay_mins@minutes:
   781                           	opt stack 0
   782  000075                     ___awdiv@dividend:
   783                           	opt stack 0
   784  000075                     memset@n:
   785                           	opt stack 0
   786  000075                     ___lldiv@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x15
   790  000075                     	ds	1
   791  000076                     ?___awtoft:
   792                           	opt stack 0
   793  000076                     ?___lltoft:
   794                           	opt stack 0
   795  000076                     ?___lwtoft:
   796                           	opt stack 0
   797  000076                     ___awtoft@c:
   798                           	opt stack 0
   799  000076                     ___lwtoft@c:
   800                           	opt stack 0
   801  000076                     ___lltoft@c:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x16
   805  000076                     	ds	1
   806  000077                     util_onewire_write_byte@bit1:
   807                           	opt stack 0
   808  000077                     util_waits_delay_hours@hours:
   809                           	opt stack 0
   810  000077                     ___awdiv@divisor:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x17
   814  000077                     	ds	2
   815  000079                     ??_util_waits_delay_hours:
   816  000079                     ?___wmul:
   817                           	opt stack 0
   818  000079                     ?___ftdiv:
   819                           	opt stack 0
   820  000079                     ?___llmod:
   821                           	opt stack 0
   822  000079                     util_onewire_write_byte@bit2:
   823                           	opt stack 0
   824  000079                     ___wmul@multiplier:
   825                           	opt stack 0
   826  000079                     ___ftdiv@f1:
   827                           	opt stack 0
   828  000079                     ___llmod@dividend:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x19
   832  000079                     	ds	1
   833  00007A                     util_waits_delay_hours@i:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x1A
   837  00007A                     	ds	1
   838  00007B                     util_onewire_write_byte@bit3:
   839                           	opt stack 0
   840  00007B                     ___wmul@multiplicand:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x1B
   844  00007B                     	ds	1
   845  00007C                     ___ftdiv@f2:
   846                           	opt stack 0
   847                           
   848                           ; 3 bytes @ 0x1C
   849  00007C                     	ds	1
   850  00007D                     ?___ftmul:
   851                           	opt stack 0
   852  00007D                     util_onewire_write_byte@bit4:
   853                           	opt stack 0
   854  00007D                     ___ftmul@f1:
   855                           	opt stack 0
   856  00007D                     ___llmod@divisor:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x1D
   860  00007D                     	ds	2
   861  00007F                     ___ftdiv@cntr:
   862                           	opt stack 0
   863  00007F                     util_onewire_write_byte@bit5:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x1F
   867  00007F                     	ds	1
   868  000080                     ___ftdiv@f3:
   869                           	opt stack 0
   870  000080                     ___ftmul@f2:
   871                           	opt stack 0
   872                           
   873                           ; 3 bytes @ 0x20
   874  000080                     	ds	1
   875  000081                     util_onewire_write_byte@bit6:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x21
   879  000081                     	ds	2
   880  000083                     ___ftdiv@exp:
   881                           	opt stack 0
   882  000083                     ___ftmul@exp:
   883                           	opt stack 0
   884  000083                     util_onewire_write_byte@bit7:
   885                           	opt stack 0
   886  000083                     util_onewire_read_byte@bit0:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x23
   890  000083                     	ds	1
   891  000084                     ___ftdiv@sign:
   892                           	opt stack 0
   893  000084                     ___ftmul@f3_as_product:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x24
   897  000084                     	ds	1
   898  000085                     util_onewire_read_byte@bit1:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x25
   902  000085                     	ds	2
   903  000087                     ___ftmul@cntr:
   904                           	opt stack 0
   905  000087                     util_onewire_read_byte@bit2:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x27
   909  000087                     	ds	1
   910  000088                     ___ftmul@sign:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x28
   914  000088                     	ds	1
   915  000089                     ?_util_getBatteryVoltage:
   916                           	opt stack 0
   917  000089                     ?_fround:
   918                           	opt stack 0
   919  000089                     ?_scale:
   920                           	opt stack 0
   921  000089                     util_onewire_read_byte@bit3:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x29
   925  000089                     	ds	2
   926  00008B                     util_onewire_read_byte@bit4:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x2B
   930  00008B                     	ds	1
   931  00008C                     util_getBatteryVoltage@value:
   932                           	opt stack 0
   933  00008C                     _fround$2422:
   934                           	opt stack 0
   935  00008C                     _scale$2423:
   936                           	opt stack 0
   937                           
   938                           ; 3 bytes @ 0x2C
   939  00008C                     	ds	1
   940  00008D                     util_onewire_read_byte@bit5:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x2D
   944  00008D                     	ds	2
   945  00008F                     scale@scl:
   946                           	opt stack 0
   947  00008F                     util_onewire_read_byte@bit6:
   948                           	opt stack 0
   949  00008F                     util_getBatteryVoltage@voltage:
   950                           	opt stack 0
   951  00008F                     _fround$2421:
   952                           	opt stack 0
   953                           
   954                           ; 3 bytes @ 0x2F
   955  00008F                     	ds	1
   956  000090                     ?___fttol:
   957                           	opt stack 0
   958  000090                     ___fttol@f1:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0x30
   962  000090                     	ds	1
   963  000091                     util_onewire_read_byte@bit7:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x31
   967  000091                     	ds	1
   968  000092                     fround@prec:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x32
   972  000092                     	ds	1
   973  000093                     ?___ftadd:
   974                           	opt stack 0
   975  000093                     util_onewire_read_byte@value:
   976                           	opt stack 0
   977  000093                     ___ftadd@f1:
   978                           	opt stack 0
   979                           
   980                           ; 3 bytes @ 0x33
   981  000093                     	ds	1
   982  000094                     ??___fttol:
   983                           
   984                           ; 1 bytes @ 0x34
   985  000094                     	ds	2
   986  000096                     ___ftadd@f2:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0x36
   990  000096                     	ds	3
   991  000099                     ??___ftadd:
   992  000099                     ___fttol@sign1:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x39
   996  000099                     	ds	1
   997  00009A                     ___fttol@lval:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x3A
  1001  00009A                     	ds	2
  1002  00009C                     ___ftadd@sign:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x3C
  1006  00009C                     	ds	1
  1007  00009D                     ___ftadd@exp2:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x3D
  1011  00009D                     	ds	1
  1012  00009E                     ___ftadd@exp1:
  1013                           	opt stack 0
  1014  00009E                     ___fttol@exp1:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x3E
  1018  00009E                     	ds	1
  1019  00009F                     ?_util_getSolarCurrent:
  1020                           	opt stack 0
  1021  00009F                     ?_util_getBatteryCurrent:
  1022                           	opt stack 0
  1023  00009F                     ?_util_getTemperature:
  1024                           	opt stack 0
  1025  00009F                     ?___ftsub:
  1026                           	opt stack 0
  1027  00009F                     ___ftsub@f1:
  1028                           	opt stack 0
  1029                           
  1030                           ; 3 bytes @ 0x3F
  1031  00009F                     	ds	2
  1032  0000A1                     util_getSolarCurrent@value:
  1033                           	opt stack 0
  1034  0000A1                     util_getBatteryCurrent@value:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x41
  1038  0000A1                     	ds	1
  1039  0000A2                     ??_util_getTemperature:
  1040  0000A2                     ___ftsub@f2:
  1041                           	opt stack 0
  1042                           
  1043                           ; 3 bytes @ 0x42
  1044  0000A2                     	ds	2
  1045  0000A4                     util_getSolarCurrent@solarCurrent:
  1046                           	opt stack 0
  1047  0000A4                     util_getBatteryCurrent@batteryCurrent:
  1048                           	opt stack 0
  1049                           
  1050                           ; 3 bytes @ 0x44
  1051  0000A4                     	ds	1
  1052  0000A5                     ?_sprintf:
  1053                           	opt stack 0
  1054  0000A5                     sprintf@sp:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x45
  1058  0000A5                     	ds	2
  1059  0000A7                     sprintf@f:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x47
  1063  0000A7                     	ds	12
  1064  0000B3                     ??_sprintf:
  1065                           
  1066                           ; 1 bytes @ 0x53
  1067  0000B3                     	ds	6
  1068  0000B9                     _sprintf$2424:
  1069                           	opt stack 0
  1070                           
  1071                           ; 3 bytes @ 0x59
  1072  0000B9                     	ds	3
  1073  0000BC                     sprintf@ap:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x5C
  1077  0000BC                     	ds	2
  1078  0000BE                     sprintf@flag:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x5E
  1082  0000BE                     	ds	2
  1083  0000C0                     sprintf@width:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0x60
  1087  0000C0                     	ds	2
  1088  0000C2                     sprintf@tmpval:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x62
  1092  0000C2                     	ds	4
  1093  0000C6                     sprintf@val:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x66
  1097  0000C6                     	ds	4
  1098  0000CA                     sprintf@exp:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x6A
  1102  0000CA                     	ds	2
  1103  0000CC                     sprintf@fval:
  1104                           	opt stack 0
  1105                           
  1106                           ; 3 bytes @ 0x6C
  1107  0000CC                     	ds	3
  1108  0000CF                     sprintf@prec:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x6F
  1112  0000CF                     	ds	2
  1113  0000D1                     sprintf@c:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x71
  1117  0000D1                     	ds	1
  1118  0000D2                     util_beacon_transmission@battery_voltage:
  1119                           	opt stack 0
  1120                           
  1121                           ; 3 bytes @ 0x72
  1122  0000D2                     	ds	3
  1123  0000D5                     util_beacon_transmission@solar_current:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x75
  1127  0000D5                     	ds	2
  1128  0000D7                     util_beacon_transmission@battery_current:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x77
  1132  0000D7                     	ds	2
  1133  0000D9                     util_beacon_transmission@temperature:
  1134                           	opt stack 0
  1135                           
  1136                           ; 3 bytes @ 0x79
  1137  0000D9                     	ds	3
  1138  0000DC                     main_loop@temperature:
  1139                           	opt stack 0
  1140                           
  1141                           ; 3 bytes @ 0x7C
  1142  0000DC                     	ds	3
  1143  0000DF                     main_loop@solar_current:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0x7F
  1147  0000DF                     	ds	2
  1148  0000E1                     main_loop@battery_current:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x81
  1152  0000E1                     	ds	2
  1153  0000E3                     main_loop@battery_voltage:
  1154                           	opt stack 0
  1155                           
  1156                           ; 3 bytes @ 0x83
  1157  0000E3                     	ds	3
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           
  1167                           	psect	cstackCOMRAM
  1168  000001                     __pcstackCOMRAM:
  1169                           	opt stack 0
  1170  000001                     ?___ltdiv:
  1171                           	opt stack 0
  1172  000001                     ___ltdiv@dividend:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x0
  1176  000001                     	ds	3
  1177  000004                     ___ltdiv@divisor:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x3
  1181  000004                     	ds	3
  1182  000007                     ___ltdiv@quotient:
  1183                           	opt stack 0
  1184                           
  1185                           ; 3 bytes @ 0x6
  1186  000007                     	ds	3
  1187  00000A                     ___ltdiv@counter:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x9
  1191  00000A                     	ds	1
  1192  00000B                     ??_high_priority_int:
  1193                           
  1194                           ; 1 bytes @ 0xA
  1195  00000B                     	ds	19
  1196  00001E                     high_priority_int@sample:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x1D
  1200  00001E                     	ds	2
  1201  000020                     high_priority_int@i:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x1F
  1205  000020                     	ds	2
  1206  000022                     ??_util_onewire_reset:
  1207  000022                     ??_util_onewire_write_byte:
  1208  000022                     ??_util_onewire_read_bit:
  1209  000022                     ??_strlen:
  1210  000022                     ??_util_waits_delay_ms:
  1211  000022                     ??_util_waits_delay_hundred_us:
  1212  000022                     ??_isdigit:
  1213  000022                     ??__tdiv_to_l_:
  1214  000022                     ??___ftpack:
  1215  000022                     ??___ftge:
  1216  000022                     ___awmod@counter:
  1217                           	opt stack 0
  1218  000022                     memset@p:
  1219                           	opt stack 0
  1220  000022                     strcat@cp:
  1221                           	opt stack 0
  1222  000022                     strcpy@cp:
  1223                           	opt stack 0
  1224  000022                     __div_to_l_@quot:
  1225                           	opt stack 0
  1226  000022                     ___lldiv@quotient:
  1227                           	opt stack 0
  1228                           
  1229                           ; 4 bytes @ 0x21
  1230  000022                     	ds	1
  1231  000023                     ___awmod@sign:
  1232                           	opt stack 0
  1233  000023                     _isdigit$2063:
  1234                           	opt stack 0
  1235  000023                     util_onewire_reset@presence:
  1236                           	opt stack 0
  1237  000023                     util_onewire_read_bit@value:
  1238                           	opt stack 0
  1239  000023                     util_waits_delay_ms@i:
  1240                           	opt stack 0
  1241  000023                     util_waits_delay_hundred_us@i:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x22
  1245  000023                     	ds	1
  1246  000024                     ___awdiv@counter:
  1247                           	opt stack 0
  1248  000024                     isdigit@c:
  1249                           	opt stack 0
  1250  000024                     strlen@cp:
  1251                           	opt stack 0
  1252                           
  1253                           ; 2 bytes @ 0x23
  1254  000024                     	ds	1
  1255  000025                     ??_util_waits_delay_secs:
  1256  000025                     ??___lltoft:
  1257  000025                     ___awdiv@sign:
  1258                           	opt stack 0
  1259  000025                     ___awtoft@sign:
  1260                           	opt stack 0
  1261  000025                     util_transmit_dot@i:
  1262                           	opt stack 0
  1263  000025                     util_transmit_dash@i:
  1264                           	opt stack 0
  1265  000025                     __tdiv_to_l_@quot:
  1266                           	opt stack 0
  1267                           
  1268                           ; 4 bytes @ 0x24
  1269  000025                     	ds	1
  1270  000026                     ??___ftdiv:
  1271  000026                     __div_to_l_@cntr:
  1272                           	opt stack 0
  1273  000026                     ___lldiv@counter:
  1274                           	opt stack 0
  1275  000026                     util_waits_delay_secs@i:
  1276                           	opt stack 0
  1277  000026                     ___awdiv@quotient:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x25
  1281  000026                     	ds	1
  1282  000027                     ??_util_transmit_morse_sequence:
  1283  000027                     __div_to_l_@exp1:
  1284                           	opt stack 0
  1285  000027                     ___llmod@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x26
  1289  000027                     	ds	1
  1290  000028                     util_waits_delay_secs@j:
  1291                           	opt stack 0
  1292  000028                     ___wmul@product:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x27
  1296  000028                     	ds	1
  1297  000029                     __tdiv_to_l_@cntr:
  1298                           	opt stack 0
  1299  000029                     ___lltoft@exp:
  1300                           	opt stack 0
  1301  000029                     util_transmit_morse_sequence@i:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x28
  1305  000029                     	ds	1
  1306  00002A                     ??_util_waits_delay_mins:
  1307  00002A                     ??___ftmul:
  1308  00002A                     __tdiv_to_l_@exp1:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x29
  1312  00002A                     	ds	1
  1313  00002B                     util_transmit_letter@letter:
  1314                           	opt stack 0
  1315  00002B                     util_waits_delay_mins@i:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x2A
  1319  00002B                     	ds	2
  1320  00002D                     tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           
  1329                           ; 1 bytes @ 0x2C
  1330 ;;
  1331 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1332 ;;
  1333 ;; *************** function _main *****************
  1334 ;; Defined at:
  1335 ;;		line 19 in file "easat2_main_mcu.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         0       0       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels required when called:   10
  1355 ;; This function calls:
  1356 ;;		_initialize
  1357 ;;		_main_loop
  1358 ;; This function is called by:
  1359 ;;		Startup code after reset
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text0
  1364  003CAA                     __ptext0:
  1365                           	opt stack 0
  1366  003CAA                     _main:
  1367                           	opt stack 21
  1368                           
  1369                           ;easat2_main_mcu.c: 22: initialize();
  1370                           
  1371                           ;incstack = 0
  1372  003CAA  EC5B  F01E         	call	_initialize	;wreg free
  1373                           
  1374                           ;easat2_main_mcu.c: 25: main_loop();
  1375  003CAE  ECDD  F01A         	call	_main_loop	;wreg free
  1376  003CB2  EF53  F000         	goto	start
  1377  003CB6                     __end_of_main:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           postinc0	equ	0xFEE
  1384                           wreg	equ	0xFE8
  1385                           postdec1	equ	0xFE5
  1386                           fsr1l	equ	0xFE1
  1387                           
  1388 ;; *************** function _main_loop *****************
  1389 ;; Defined at:
  1390 ;;		line 31 in file "easat2_main_mcu.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  battery_volt    3  131[BANK0 ] float 
  1395 ;;  temperature     3  124[BANK0 ] float 
  1396 ;;  battery_curr    2  129[BANK0 ] int 
  1397 ;;  solar_curren    2  127[BANK0 ] int 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1407 ;;      Params:         0       0       0       0       0       0       0
  1408 ;;      Locals:         0      10       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0
  1410 ;;      Totals:         0      10       0       0       0       0       0
  1411 ;;Total ram usage:       10 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    9
  1414 ;; This function calls:
  1415 ;;		_util_beacon_transmission
  1416 ;;		_util_getBatteryCurrent
  1417 ;;		_util_getBatteryVoltage
  1418 ;;		_util_getSolarCurrent
  1419 ;;		_util_getTemperature
  1420 ;;		_util_waits_delay_hours
  1421 ;;		_util_waits_delay_mins
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text1
  1428  0035BA                     __ptext1:
  1429                           	opt stack 0
  1430  0035BA                     _main_loop:
  1431                           	opt stack 21
  1432  0035BA                     l24:
  1433  0035BA  0004               	clrwdt		;# 
  1434                           
  1435                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1436  0035BC  EC88  F018         	call	_util_getBatteryVoltage	;wreg free
  1437  0035C0  C089  F0E3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1438  0035C4  C08A  F0E4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1439  0035C8  C08B  F0E5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1440                           
  1441                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1442  0035CC  ECBE  F017         	call	_util_getSolarCurrent	;wreg free
  1443  0035D0  C09F  F0DF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1444  0035D4  C0A0  F0E0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1445                           
  1446                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1447  0035D8  EC23  F018         	call	_util_getBatteryCurrent	;wreg free
  1448  0035DC  C09F  F0E1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1449  0035E0  C0A0  F0E2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1450                           
  1451                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1452  0035E4  EC24  F006         	call	_util_getTemperature	;wreg free
  1453  0035E8  C09F  F0DC         	movff	?_util_getTemperature,main_loop@temperature
  1454  0035EC  C0A0  F0DD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1455  0035F0  C0A1  F0DE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1456                           
  1457                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1458  0035F4  0100               	movlb	0	; () banked
  1459  0035F6  BFE5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1460  0035F8  D017               	goto	l6236
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1464  0035FA  C0E3  F0D2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1465  0035FE  C0E4  F0D3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1466  003602  C0E5  F0D4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1467  003606  C0DF  F0D5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1468  00360A  C0E0  F0D6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1469  00360E  C0E1  F0D7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1470  003612  C0E2  F0D8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1471  003616  C0DC  F0D9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1472  00361A  C0DD  F0DA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1473  00361E  C0DE  F0DB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1474  003622  ECBB  F016         	call	_util_beacon_transmission	;wreg free
  1475                           
  1476                           ;easat2_main_mcu.c: 62: } else {
  1477  003626  D007               	goto	l26
  1478  003628                     l6236:
  1479                           
  1480                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1481  003628  0E00               	movlw	0
  1482  00362A  0100               	movlb	0	; () banked
  1483  00362C  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1484  00362E  0E02               	movlw	2
  1485  003630  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1486  003632  EC7E  F01C         	call	_util_waits_delay_hours	;wreg free
  1487  003636                     l26:
  1488                           
  1489                           ;easat2_main_mcu.c: 65: }
  1490                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1491  003636  0E00               	movlw	0
  1492  003638  0100               	movlb	0	; () banked
  1493  00363A  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1494  00363C  0E03               	movlw	3
  1495  00363E  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1496  003640  ECE0  F01C         	call	_util_waits_delay_mins	;wreg free
  1497                           
  1498                           ;easat2_main_mcu.c: 71: } while (1);
  1499  003644  D7BA               	goto	l24
  1500  003646                     __end_of_main_loop:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postdec1	equ	0xFE5
  1509                           fsr1l	equ	0xFE1
  1510                           
  1511 ;; *************** function _util_waits_delay_hours *****************
  1512 ;; Defined at:
  1513 ;;		line 17 in file "easat2_util_waits.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  hours           2   23[BANK0 ] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  i               2   26[BANK0 ] int 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1527 ;;      Params:         0       2       0       0       0       0       0
  1528 ;;      Locals:         0       2       0       0       0       0       0
  1529 ;;      Temps:          0       1       0       0       0       0       0
  1530 ;;      Totals:         0       5       0       0       0       0       0
  1531 ;;Total ram usage:        5 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    6
  1534 ;; This function calls:
  1535 ;;		_util_waits_delay_mins
  1536 ;; This function is called by:
  1537 ;;		_main_loop
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text2
  1542  0038FC                     __ptext2:
  1543                           	opt stack 0
  1544  0038FC                     _util_waits_delay_hours:
  1545                           	opt stack 23
  1546                           
  1547                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1548                           
  1549                           ;incstack = 0
  1550  0038FC  0E00               	movlw	0
  1551  0038FE  0100               	movlb	0	; () banked
  1552  003900  6F7B               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1553  003902  0E00               	movlw	0
  1554  003904  6F7A               	movwf	util_waits_delay_hours@i& (0+255),b
  1555  003906  D00A               	goto	l6084
  1556  003908                     l6080:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1560  003908  0E00               	movlw	0
  1561  00390A  0100               	movlb	0	; () banked
  1562  00390C  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1563  00390E  0E3C               	movlw	60
  1564  003910  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1565  003912  ECE0  F01C         	call	_util_waits_delay_mins	;wreg free
  1566  003916  0100               	movlb	0	; () banked
  1567  003918  4B7A               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1568  00391A  2B7B               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1569  00391C                     l6084:
  1570                           
  1571                           ; BSR set to: 0
  1572  00391C  0100               	movlb	0	; () banked
  1573  00391E  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1574  003920  0100               	movlb	0	; () banked
  1575  003922  5D7A               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1576  003924  0100               	movlb	0	; () banked
  1577  003926  517B               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1578  003928  0A80               	xorlw	128
  1579  00392A  0100               	movlb	0	; () banked
  1580  00392C  6F79               	movwf	??_util_waits_delay_hours& (0+255),b
  1581  00392E  0100               	movlb	0	; () banked
  1582  003930  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1583  003932  0A80               	xorlw	128
  1584  003934  0100               	movlb	0	; () banked
  1585  003936  5979               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1586  003938  B0D8               	btfsc	status,0,c
  1587  00393A  0012               	return	
  1588  00393C  D7E5               	goto	l6080
  1589  00393E                     __end_of_util_waits_delay_hours:
  1590                           	opt stack 0
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           status	equ	0xFD8
  1600                           
  1601 ;; *************** function _util_waits_delay_mins *****************
  1602 ;; Defined at:
  1603 ;;		line 24 in file "easat2_util_waits.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  minutes         2   21[BANK0 ] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  i               2   42[COMRAM] int 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1617 ;;      Params:         0       2       0       0       0       0       0
  1618 ;;      Locals:         2       0       0       0       0       0       0
  1619 ;;      Temps:          1       0       0       0       0       0       0
  1620 ;;      Totals:         3       2       0       0       0       0       0
  1621 ;;Total ram usage:        5 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    5
  1624 ;; This function calls:
  1625 ;;		_util_waits_delay_secs
  1626 ;; This function is called by:
  1627 ;;		_main_loop
  1628 ;;		_util_waits_delay_hours
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text3
  1633  0039C0                     __ptext3:
  1634                           	opt stack 0
  1635  0039C0                     _util_waits_delay_mins:
  1636                           	opt stack 24
  1637                           
  1638                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;incstack = 0
  1642  0039C0  0E00               	movlw	0
  1643  0039C2  6E2C               	movwf	util_waits_delay_mins@i+1,c
  1644  0039C4  0E00               	movlw	0
  1645  0039C6  6E2B               	movwf	util_waits_delay_mins@i,c
  1646  0039C8  D009               	goto	l5310
  1647  0039CA                     l5306:
  1648                           
  1649                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1650  0039CA  0E00               	movlw	0
  1651  0039CC  0100               	movlb	0	; () banked
  1652  0039CE  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1653  0039D0  0E3C               	movlw	60
  1654  0039D2  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1655  0039D4  ECE9  F01B         	call	_util_waits_delay_secs	;wreg free
  1656  0039D8  4A2B               	infsnz	util_waits_delay_mins@i,f,c
  1657  0039DA  2A2C               	incf	util_waits_delay_mins@i+1,f,c
  1658  0039DC                     l5310:
  1659  0039DC  0100               	movlb	0	; () banked
  1660  0039DE  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1661  0039E0  5C2B               	subwf	util_waits_delay_mins@i,w,c
  1662  0039E2  502C               	movf	util_waits_delay_mins@i+1,w,c
  1663  0039E4  0A80               	xorlw	128
  1664  0039E6  6E2A               	movwf	??_util_waits_delay_mins& (0+255),c
  1665  0039E8  0100               	movlb	0	; () banked
  1666  0039EA  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1667  0039EC  0A80               	xorlw	128
  1668  0039EE  582A               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1669  0039F0  B0D8               	btfsc	status,0,c
  1670  0039F2  0012               	return	
  1671  0039F4  D7EA               	goto	l5306
  1672  0039F6                     __end_of_util_waits_delay_mins:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1l	equ	0xFE1
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _util_getTemperature *****************
  1685 ;; Defined at:
  1686 ;;		line 118 in file "easat2_util_inputs.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  bit_mem       144    0[BANK1 ] int [72]
  1691 ;;  byte_mem       18  144[BANK1 ] int [9]
  1692 ;;  temperature     3  201[BANK1 ] float 
  1693 ;;  sign            3  164[BANK1 ] float 
  1694 ;;  i               2  204[BANK1 ] int 
  1695 ;;  bit_in_byte     2  199[BANK1 ] int 
  1696 ;;  num_byte        2  197[BANK1 ] int 
  1697 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1698 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1699 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1700 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1701 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1702 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1703 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1704 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1705 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1706 ;;  num_bit         2  162[BANK1 ] int 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  3   63[BANK0 ] float 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       3       0       0       0       0       0
  1717 ;;      Locals:         0       0     206       0       0       0       0
  1718 ;;      Temps:          0       3       0       0       0       0       0
  1719 ;;      Totals:         0       6     206       0       0       0       0
  1720 ;;Total ram usage:      212 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    5
  1723 ;; This function calls:
  1724 ;;		___awtoft
  1725 ;;		___ftadd
  1726 ;;		___ftdiv
  1727 ;;		___ftmul
  1728 ;;		_util_onewire_read_byte
  1729 ;;		_util_onewire_reset
  1730 ;;		_util_onewire_write_byte
  1731 ;;		_util_waits_delay_secs
  1732 ;; This function is called by:
  1733 ;;		_main_loop
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text4
  1738  000C48                     __ptext4:
  1739                           	opt stack 0
  1740  000C48                     _util_getTemperature:
  1741                           	opt stack 24
  1742                           
  1743                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1744                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1745                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;incstack = 0
  1749  000C48  0E00               	movlw	0
  1750  000C4A  0101               	movlb	1	; () banked
  1751  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1752  000C4E  0E00               	movlw	0
  1753  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1754                           
  1755                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1756  000C52  0E00               	movlw	0
  1757  000C54  0101               	movlb	1	; () banked
  1758  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1759  000C58  0E00               	movlw	0
  1760  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1761                           
  1762                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1763  000C5C  0E00               	movlw	0
  1764  000C5E  0101               	movlb	1	; () banked
  1765  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1766  000C62  0E00               	movlw	0
  1767  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1768                           
  1769                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1770  000C66  0E00               	movlw	0
  1771  000C68  0101               	movlb	1	; () banked
  1772  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1773  000C6C  0E00               	movlw	0
  1774  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1775                           
  1776                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1777  000C70  0E00               	movlw	0
  1778  000C72  0101               	movlb	1	; () banked
  1779  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1780  000C76  0E00               	movlw	0
  1781  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1782                           
  1783                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1784  000C7A  0E00               	movlw	0
  1785  000C7C  0101               	movlb	1	; () banked
  1786  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1787  000C80  0E00               	movlw	0
  1788  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1789                           
  1790                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1791  000C84  0E00               	movlw	0
  1792  000C86  0101               	movlb	1	; () banked
  1793  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1794  000C8A  0E00               	movlw	0
  1795  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1796                           
  1797                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1798  000C8E  0E00               	movlw	0
  1799  000C90  0101               	movlb	1	; () banked
  1800  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1801  000C94  0E00               	movlw	0
  1802  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1803                           
  1804                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1805  000C98  0E00               	movlw	0
  1806  000C9A  0101               	movlb	1	; () banked
  1807  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1808  000C9E  0E00               	movlw	0
  1809  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1810                           
  1811                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1812  000CA2  0E00               	movlw	0
  1813  000CA4  0101               	movlb	1	; () banked
  1814  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1815  000CA8  0E00               	movlw	0
  1816  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1817  000CAC  0E00               	movlw	0
  1818  000CAE  0101               	movlb	1	; () banked
  1819  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1820  000CB2  0E00               	movlw	0
  1821  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1822  000CB6  0E00               	movlw	0
  1823  000CB8  0101               	movlb	1	; () banked
  1824  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1825  000CBC  0E00               	movlw	0
  1826  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1827                           
  1828                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1829  000CC0  0E00               	movlw	0
  1830  000CC2  0101               	movlb	1	; () banked
  1831  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1832  000CC6  0E00               	movlw	0
  1833  000CC8  0101               	movlb	1	; () banked
  1834  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1835  000CCC  0E00               	movlw	0
  1836  000CCE  0101               	movlb	1	; () banked
  1837  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1838                           
  1839                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1840  000CD2  0E00               	movlw	0
  1841  000CD4  0101               	movlb	1	; () banked
  1842  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1843  000CD8  0E80               	movlw	128
  1844  000CDA  0101               	movlb	1	; () banked
  1845  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1846  000CDE  0E3F               	movlw	63
  1847  000CE0  0101               	movlb	1	; () banked
  1848  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1849                           
  1850                           ;easat2_util_inputs.c: 137: int i = 0;
  1851  000CE4  0E00               	movlw	0
  1852  000CE6  0101               	movlb	1	; () banked
  1853  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1854  000CEA  0E00               	movlw	0
  1855  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1856                           
  1857                           ; BSR set to: 1
  1858                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1859  000CEE  EC9F  F01C         	call	_util_onewire_reset	;wreg free
  1860  000CF2  0100               	movlb	0	; () banked
  1861  000CF4  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1862  000CF6  0100               	movlb	0	; () banked
  1863  000CF8  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1864  000CFA  B4D8               	btfsc	status,2,c
  1865  000CFC  D00A               	goto	l5928
  1866                           
  1867                           ; BSR set to: 0
  1868  000CFE  0E33               	movlw	51
  1869  000D00  0100               	movlb	0	; () banked
  1870  000D02  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1871  000D04  0EC6               	movlw	198
  1872  000D06  0100               	movlb	0	; () banked
  1873  000D08  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1874  000D0A  0EC2               	movlw	194
  1875  000D0C  0100               	movlb	0	; () banked
  1876  000D0E  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879  000D10  0012               	return	
  1880  000D12                     l5928:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1884  000D12  0E00               	movlw	0
  1885  000D14  0100               	movlb	0	; () banked
  1886  000D16  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1887  000D18  0ECC               	movlw	204
  1888  000D1A  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1889  000D1C  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1890                           
  1891                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1892  000D20  0E00               	movlw	0
  1893  000D22  0100               	movlb	0	; () banked
  1894  000D24  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1895  000D26  0E44               	movlw	68
  1896  000D28  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1897  000D2A  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1898                           
  1899                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1900  000D2E  8692               	bsf	3986,3,c	;volatile
  1901                           
  1902                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1903  000D30  0E00               	movlw	0
  1904  000D32  0101               	movlb	1	; () banked
  1905  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1906  000D36  0E00               	movlw	0
  1907  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1908  000D3A  D00A               	goto	l5938
  1909  000D3C                     l5934:
  1910                           
  1911                           ; BSR set to: 1
  1912                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1913  000D3C  0E00               	movlw	0
  1914  000D3E  0100               	movlb	0	; () banked
  1915  000D40  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1916  000D42  0E01               	movlw	1
  1917  000D44  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1918  000D46  ECE9  F01B         	call	_util_waits_delay_secs	;wreg free
  1919  000D4A  0101               	movlb	1	; () banked
  1920  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1921  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1922  000D50                     l5938:
  1923                           
  1924                           ; BSR set to: 1
  1925  000D50  0101               	movlb	1	; () banked
  1926  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1927  000D54  D008               	goto	l5940
  1928  000D56  0101               	movlb	1	; () banked
  1929  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1930  000D5A  E107               	bnz	l5942
  1931  000D5C  0E05               	movlw	5
  1932  000D5E  0101               	movlb	1	; () banked
  1933  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1934  000D62  B0D8               	btfsc	status,0,c
  1935  000D64  D002               	goto	l5942
  1936  000D66                     l5940:
  1937                           
  1938                           ; BSR set to: 1
  1939  000D66  A680               	btfss	3968,3,c	;volatile
  1940  000D68  D7E9               	goto	l5934
  1941  000D6A                     l5942:
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1945  000D6A  0E05               	movlw	5
  1946  000D6C  0101               	movlb	1	; () banked
  1947  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1948  000D70  0101               	movlb	1	; () banked
  1949  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1950  000D74  A4D8               	btfss	status,2,c
  1951  000D76  D00A               	goto	l5948
  1952                           
  1953                           ; BSR set to: 1
  1954  000D78  0E66               	movlw	102
  1955  000D7A  0100               	movlb	0	; () banked
  1956  000D7C  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1957  000D7E  0EC6               	movlw	198
  1958  000D80  0100               	movlb	0	; () banked
  1959  000D82  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1960  000D84  0EC2               	movlw	194
  1961  000D86  0100               	movlb	0	; () banked
  1962  000D88  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1963                           
  1964                           ; BSR set to: 0
  1965  000D8A  0012               	return	
  1966  000D8C                     l5948:
  1967                           
  1968                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1969  000D8C  EC9F  F01C         	call	_util_onewire_reset	;wreg free
  1970  000D90  0100               	movlb	0	; () banked
  1971  000D92  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1972  000D94  0100               	movlb	0	; () banked
  1973  000D96  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1974  000D98  B4D8               	btfsc	status,2,c
  1975  000D9A  D00A               	goto	l5954
  1976                           
  1977                           ; BSR set to: 0
  1978  000D9C  0E9A               	movlw	154
  1979  000D9E  0100               	movlb	0	; () banked
  1980  000DA0  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1981  000DA2  0EC6               	movlw	198
  1982  000DA4  0100               	movlb	0	; () banked
  1983  000DA6  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1984  000DA8  0EC2               	movlw	194
  1985  000DAA  0100               	movlb	0	; () banked
  1986  000DAC  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989  000DAE  0012               	return	
  1990  000DB0                     l5954:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1994  000DB0  0E00               	movlw	0
  1995  000DB2  0100               	movlb	0	; () banked
  1996  000DB4  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1997  000DB6  0ECC               	movlw	204
  1998  000DB8  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1999  000DBA  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2000                           
  2001                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  2002  000DBE  0E00               	movlw	0
  2003  000DC0  0100               	movlb	0	; () banked
  2004  000DC2  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2005  000DC4  0EBE               	movlw	190
  2006  000DC6  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  2007  000DC8  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2008                           
  2009                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  2010  000DCC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2011  000DD0  C073  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2012  000DD4  C074  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2013                           
  2014                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  2015  000DD8  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2016  000DDC  C073  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2017  000DE0  C074  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2018                           
  2019                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  2020  000DE4  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2021  000DE8  C073  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2022  000DEC  C074  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2023                           
  2024                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  2025  000DF0  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2026  000DF4  C073  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2027  000DF8  C074  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2028                           
  2029                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2030  000DFC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2031  000E00  C073  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2032  000E04  C074  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2033                           
  2034                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2035  000E08  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2036  000E0C  C073  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2037  000E10  C074  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2038                           
  2039                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2040  000E14  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2041  000E18  C073  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2042  000E1C  C074  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2043                           
  2044                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2045  000E20  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2046  000E24  C073  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2047  000E28  C074  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2048                           
  2049                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2050  000E2C  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2051  000E30  C073  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2052  000E34  C074  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2053                           
  2054                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2055  000E38  0E00               	movlw	0
  2056  000E3A  0101               	movlb	1	; () banked
  2057  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2058  000E3E  0E00               	movlw	0
  2059  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2060  000E42                     l5958:
  2061                           
  2062                           ; BSR set to: 1
  2063  000E42  0101               	movlb	1	; () banked
  2064  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2065  000E46  D008               	goto	l5962
  2066  000E48  0101               	movlb	1	; () banked
  2067  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2068  000E4C  E14F               	bnz	l5980
  2069  000E4E  0E09               	movlw	9
  2070  000E50  0101               	movlb	1	; () banked
  2071  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2072  000E54  B0D8               	btfsc	status,0,c
  2073  000E56  D04A               	goto	l5980
  2074  000E58                     l5962:
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2078  000E58  0E00               	movlw	0
  2079  000E5A  0101               	movlb	1	; () banked
  2080  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2081  000E5E  0E00               	movlw	0
  2082  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2083  000E62                     l5964:
  2084                           
  2085                           ; BSR set to: 1
  2086  000E62  0101               	movlb	1	; () banked
  2087  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2088  000E66  D008               	goto	l5968
  2089  000E68  0101               	movlb	1	; () banked
  2090  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2091  000E6C  E13B               	bnz	l5976
  2092  000E6E  0E08               	movlw	8
  2093  000E70  0101               	movlb	1	; () banked
  2094  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2095  000E74  B0D8               	btfsc	status,0,c
  2096  000E76  D036               	goto	l5976
  2097  000E78                     l5968:
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2101  000E78  C1C7  F0A2         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2102  000E7C  90D8               	bcf	status,0,c
  2103  000E7E  0101               	movlb	1	; () banked
  2104  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2105  000E82  6ED9               	movwf	fsr2l,c
  2106  000E84  0101               	movlb	1	; () banked
  2107  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2108  000E88  6EDA               	movwf	fsr2h,c
  2109  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2110  000E8C  26D9               	addwf	fsr2l,f,c
  2111  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2112  000E90  22DA               	addwfc	fsr2h,f,c
  2113  000E92  CFDE F0A3          	movff	postinc2,??_util_getTemperature+1
  2114  000E96  CFDD F0A4          	movff	postdec2,??_util_getTemperature+2
  2115  000E9A  0100               	movlb	0	; () banked
  2116  000E9C  2BA2               	incf	??_util_getTemperature& (0+255),f,b
  2117  000E9E  D004               	goto	u6184
  2118  000EA0                     u6185:
  2119  000EA0  0100               	movlb	0	; () banked
  2120  000EA2  35A4               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2121  000EA4  33A4               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2122  000EA6  33A3               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2123  000EA8                     u6184:
  2124  000EA8  0100               	movlb	0	; () banked
  2125  000EAA  2FA2               	decfsz	??_util_getTemperature& (0+255),f,b
  2126  000EAC  D7F9               	goto	u6185
  2127  000EAE  0E01               	movlw	1
  2128  000EB0  0100               	movlb	0	; () banked
  2129  000EB2  17A3               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2130  000EB4  0E00               	movlw	0
  2131  000EB6  17A4               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2132  000EB8  90D8               	bcf	status,0,c
  2133  000EBA  0101               	movlb	1	; () banked
  2134  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2135  000EBE  6ED9               	movwf	fsr2l,c
  2136  000EC0  0101               	movlb	1	; () banked
  2137  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2138  000EC4  6EDA               	movwf	fsr2h,c
  2139  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2140  000EC8  26D9               	addwf	fsr2l,f,c
  2141  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2142  000ECC  22DA               	addwfc	fsr2h,f,c
  2143  000ECE  C0A3  FFDE         	movff	??_util_getTemperature+1,postinc2
  2144  000ED2  C0A4  FFDD         	movff	??_util_getTemperature+2,postdec2
  2145                           
  2146                           ; BSR set to: 1
  2147  000ED6  0101               	movlb	1	; () banked
  2148  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2149  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2150                           
  2151                           ; BSR set to: 1
  2152  000EDC  0101               	movlb	1	; () banked
  2153  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2154  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2155  000EE2  D7BF               	goto	l5964
  2156  000EE4                     l5976:
  2157                           
  2158                           ; BSR set to: 1
  2159  000EE4  0101               	movlb	1	; () banked
  2160  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2161  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2162  000EEA  D7AB               	goto	l5958
  2163  000EEC                     l5980:
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;easat2_util_inputs.c: 205: }
  2167                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2168  000EEC  0E00               	movlw	0
  2169  000EEE  0101               	movlb	1	; () banked
  2170  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2171  000EF2  0E00               	movlw	0
  2172  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2173  000EF6                     l5982:
  2174                           
  2175                           ; BSR set to: 1
  2176  000EF6  0101               	movlb	1	; () banked
  2177  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2178  000EFA  D008               	goto	l5986
  2179  000EFC  0101               	movlb	1	; () banked
  2180  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2181  000F00  E154               	bnz	l6008
  2182  000F02  0E48               	movlw	72
  2183  000F04  0101               	movlb	1	; () banked
  2184  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2185  000F08  B0D8               	btfsc	status,0,c
  2186  000F0A  D04F               	goto	l6008
  2187  000F0C                     l5986:
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2191  000F0C  90D8               	bcf	status,0,c
  2192  000F0E  0101               	movlb	1	; () banked
  2193  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2194  000F12  6ED9               	movwf	fsr2l,c
  2195  000F14  0101               	movlb	1	; () banked
  2196  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2197  000F18  6EDA               	movwf	fsr2h,c
  2198  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2199  000F1C  26D9               	addwf	fsr2l,f,c
  2200  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2201  000F20  22DA               	addwfc	fsr2h,f,c
  2202  000F22  CFDE F0A2          	movff	postinc2,??_util_getTemperature
  2203  000F26  CFDD F0A3          	movff	postdec2,??_util_getTemperature+1
  2204  000F2A  0101               	movlb	1	; () banked
  2205  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2206  000F2E  0100               	movlb	0	; () banked
  2207  000F30  19A2               	xorwf	??_util_getTemperature& (0+255),w,b
  2208  000F32  0101               	movlb	1	; () banked
  2209  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2210  000F36  0101               	movlb	1	; () banked
  2211  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2212  000F3A  0100               	movlb	0	; () banked
  2213  000F3C  19A3               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2214  000F3E  0101               	movlb	1	; () banked
  2215  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2216                           
  2217                           ; BSR set to: 1
  2218                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2219  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2220  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2224  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2225  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2229  000F52  0101               	movlb	1	; () banked
  2230  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2231  000F56  0101               	movlb	1	; () banked
  2232  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2233  000F5A  0101               	movlb	1	; () banked
  2234  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2235  000F5E  0101               	movlb	1	; () banked
  2236  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2237  000F62  0101               	movlb	1	; () banked
  2238  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2239  000F66  0101               	movlb	1	; () banked
  2240  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2244  000F6A  0101               	movlb	1	; () banked
  2245  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2246  000F6E  0101               	movlb	1	; () banked
  2247  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2248  000F72  0101               	movlb	1	; () banked
  2249  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2250  000F76  0101               	movlb	1	; () banked
  2251  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2252  000F7A  0101               	movlb	1	; () banked
  2253  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2254  000F7E  0101               	movlb	1	; () banked
  2255  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2259  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2260  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2264  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2265  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2269  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2270  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2274  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2275  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2276                           
  2277                           ; BSR set to: 1
  2278  000FA2  0101               	movlb	1	; () banked
  2279  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2280  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2281  000FA8  D7A6               	goto	l5982
  2282  000FAA                     l6008:
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;easat2_util_inputs.c: 225: }
  2286                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2287                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2288                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2289  000FAA  0101               	movlb	1	; () banked
  2290  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2291  000FAE  0101               	movlb	1	; () banked
  2292  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2293  000FB2  A4D8               	btfss	status,2,c
  2294  000FB4  D02A               	goto	l6024
  2295                           
  2296                           ; BSR set to: 1
  2297  000FB6  0101               	movlb	1	; () banked
  2298  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2299  000FBA  0101               	movlb	1	; () banked
  2300  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2301  000FBE  A4D8               	btfss	status,2,c
  2302  000FC0  D024               	goto	l6024
  2303                           
  2304                           ; BSR set to: 1
  2305  000FC2  0101               	movlb	1	; () banked
  2306  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2307  000FC6  0101               	movlb	1	; () banked
  2308  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2309  000FCA  B4D8               	btfsc	status,2,c
  2310  000FCC  D006               	goto	l6016
  2311                           
  2312                           ; BSR set to: 1
  2313  000FCE  0101               	movlb	1	; () banked
  2314  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2315  000FD2  0101               	movlb	1	; () banked
  2316  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2317  000FD6  A4D8               	btfss	status,2,c
  2318  000FD8  D018               	goto	l6024
  2319  000FDA                     l6016:
  2320                           
  2321                           ; BSR set to: 1
  2322  000FDA  0101               	movlb	1	; () banked
  2323  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2324  000FDE  0101               	movlb	1	; () banked
  2325  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2326  000FE2  A4D8               	btfss	status,2,c
  2327  000FE4  D012               	goto	l6024
  2328                           
  2329                           ; BSR set to: 1
  2330  000FE6  0101               	movlb	1	; () banked
  2331  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2332  000FEA  0101               	movlb	1	; () banked
  2333  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2334  000FEE  B4D8               	btfsc	status,2,c
  2335  000FF0  D006               	goto	l6022
  2336                           
  2337                           ; BSR set to: 1
  2338  000FF2  0101               	movlb	1	; () banked
  2339  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2340  000FF6  0101               	movlb	1	; () banked
  2341  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2342  000FFA  A4D8               	btfss	status,2,c
  2343  000FFC  D006               	goto	l6024
  2344  000FFE                     l6022:
  2345                           
  2346                           ; BSR set to: 1
  2347  000FFE  0101               	movlb	1	; () banked
  2348  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2349  001002  0101               	movlb	1	; () banked
  2350  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2351  001006  B4D8               	btfsc	status,2,c
  2352  001008  D00A               	goto	l6028
  2353  00100A                     l6024:
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;easat2_util_inputs.c: 232: return -99.7;
  2357  00100A  0E66               	movlw	102
  2358  00100C  0100               	movlb	0	; () banked
  2359  00100E  6F9F               	movwf	?_util_getTemperature& (0+255),b
  2360  001010  0EC7               	movlw	199
  2361  001012  0100               	movlb	0	; () banked
  2362  001014  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  2363  001016  0EC2               	movlw	194
  2364  001018  0100               	movlb	0	; () banked
  2365  00101A  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  2366                           
  2367                           ; BSR set to: 0
  2368  00101C  0012               	return	
  2369  00101E                     l6028:
  2370                           
  2371                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2372  00101E  0101               	movlb	1	; () banked
  2373  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2374  001022  0101               	movlb	1	; () banked
  2375  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2376  001026  A4D8               	btfss	status,2,c
  2377  001028  D008               	goto	l6032
  2378                           
  2379                           ; BSR set to: 1
  2380  00102A  0E00               	movlw	0
  2381  00102C  0101               	movlb	1	; () banked
  2382  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2383  001030  0E80               	movlw	128
  2384  001032  0101               	movlb	1	; () banked
  2385  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2386  001036  0E3F               	movlw	63
  2387  001038  D007               	goto	L1
  2388  00103A                     l6032:
  2389                           
  2390                           ; BSR set to: 1
  2391  00103A  0E00               	movlw	0
  2392  00103C  0101               	movlb	1	; () banked
  2393  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2394  001040  0E80               	movlw	128
  2395  001042  0101               	movlb	1	; () banked
  2396  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2397  001046  0EBF               	movlw	191
  2398  001048                     L1:
  2399  001048  0101               	movlb	1	; () banked
  2400  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2404                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2405                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2406                           
  2407                           ; BSR set to: 1
  2408  00104C  0E00               	movlw	0
  2409  00104E  0100               	movlb	0	; () banked
  2410  001050  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2411  001052  0E00               	movlw	0
  2412  001054  0100               	movlb	0	; () banked
  2413  001056  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2414  001058  0E41               	movlw	65
  2415  00105A  0100               	movlb	0	; () banked
  2416  00105C  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2417  00105E  C102  F076         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2418  001062  C103  F077         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2419  001066  ECC0  F01C         	call	___awtoft	;wreg free
  2420  00106A  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2421  00106E  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2422  001072  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2423  001076  EC1B  F016         	call	___ftdiv	;wreg free
  2424  00107A  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2425  00107E  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2426  001082  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2427  001086  0E00               	movlw	0
  2428  001088  0100               	movlb	0	; () banked
  2429  00108A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2430  00108C  0E80               	movlw	128
  2431  00108E  0100               	movlb	0	; () banked
  2432  001090  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2433  001092  0E41               	movlw	65
  2434  001094  0100               	movlb	0	; () banked
  2435  001096  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2436  001098  C100  F076         	movff	util_getTemperature@bit_mem,___awtoft@c
  2437  00109C  C101  F077         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2438  0010A0  ECC0  F01C         	call	___awtoft	;wreg free
  2439  0010A4  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2440  0010A8  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2441  0010AC  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2442  0010B0  EC1B  F016         	call	___ftdiv	;wreg free
  2443  0010B4  C079  F093         	movff	?___ftdiv,___ftadd@f1
  2444  0010B8  C07A  F094         	movff	?___ftdiv+1,___ftadd@f1+1
  2445  0010BC  C07B  F095         	movff	?___ftdiv+2,___ftadd@f1+2
  2446  0010C0  EC9A  F00F         	call	___ftadd	;wreg free
  2447  0010C4  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2417
  2448  0010C8  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2417+1
  2449  0010CC  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2417+2
  2450                           
  2451                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2452                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2453                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2454  0010D0  0E00               	movlw	0
  2455  0010D2  0100               	movlb	0	; () banked
  2456  0010D4  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2457  0010D6  0E80               	movlw	128
  2458  0010D8  0100               	movlb	0	; () banked
  2459  0010DA  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2460  0010DC  0E40               	movlw	64
  2461  0010DE  0100               	movlb	0	; () banked
  2462  0010E0  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2463  0010E2  C104  F076         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2464  0010E6  C105  F077         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2465  0010EA  ECC0  F01C         	call	___awtoft	;wreg free
  2466  0010EE  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2467  0010F2  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2468  0010F6  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2469  0010FA  EC1B  F016         	call	___ftdiv	;wreg free
  2470  0010FE  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2471  001102  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2472  001106  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2473  00110A  C1A7  F093         	movff	_util_getTemperature$2417,___ftadd@f1
  2474  00110E  C1A8  F094         	movff	_util_getTemperature$2417+1,___ftadd@f1+1
  2475  001112  C1A9  F095         	movff	_util_getTemperature$2417+2,___ftadd@f1+2
  2476  001116  EC9A  F00F         	call	___ftadd	;wreg free
  2477  00111A  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2418
  2478  00111E  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2418+1
  2479  001122  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2418+2
  2480                           
  2481                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2482                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2483                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2484  001126  0E00               	movlw	0
  2485  001128  0100               	movlb	0	; () banked
  2486  00112A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2487  00112C  0E00               	movlw	0
  2488  00112E  0100               	movlb	0	; () banked
  2489  001130  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2490  001132  0E40               	movlw	64
  2491  001134  0100               	movlb	0	; () banked
  2492  001136  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2493  001138  C106  F076         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2494  00113C  C107  F077         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2495  001140  ECC0  F01C         	call	___awtoft	;wreg free
  2496  001144  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2497  001148  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2498  00114C  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2499  001150  EC1B  F016         	call	___ftdiv	;wreg free
  2500  001154  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2501  001158  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2502  00115C  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2503  001160  C1AA  F093         	movff	_util_getTemperature$2418,___ftadd@f1
  2504  001164  C1AB  F094         	movff	_util_getTemperature$2418+1,___ftadd@f1+1
  2505  001168  C1AC  F095         	movff	_util_getTemperature$2418+2,___ftadd@f1+2
  2506  00116C  EC9A  F00F         	call	___ftadd	;wreg free
  2507  001170  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2419
  2508  001174  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2419+1
  2509  001178  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2419+2
  2510                           
  2511                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2512                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2513                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2514  00117C  C108  F076         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2515  001180  C109  F077         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2516  001184  ECC0  F01C         	call	___awtoft	;wreg free
  2517  001188  C076  F096         	movff	?___awtoft,___ftadd@f2
  2518  00118C  C077  F097         	movff	?___awtoft+1,___ftadd@f2+1
  2519  001190  C078  F098         	movff	?___awtoft+2,___ftadd@f2+2
  2520  001194  C1AD  F093         	movff	_util_getTemperature$2419,___ftadd@f1
  2521  001198  C1AE  F094         	movff	_util_getTemperature$2419+1,___ftadd@f1+1
  2522  00119C  C1AF  F095         	movff	_util_getTemperature$2419+2,___ftadd@f1+2
  2523  0011A0  EC9A  F00F         	call	___ftadd	;wreg free
  2524  0011A4  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2420
  2525  0011A8  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2420+1
  2526  0011AC  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2420+2
  2527                           
  2528                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2529                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2530                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2531  0011B0  C1B0  F093         	movff	_util_getTemperature$2420,___ftadd@f1
  2532  0011B4  C1B1  F094         	movff	_util_getTemperature$2420+1,___ftadd@f1+1
  2533  0011B8  C1B2  F095         	movff	_util_getTemperature$2420+2,___ftadd@f1+2
  2534  0011BC  0E00               	movlw	0
  2535  0011BE  0100               	movlb	0	; () banked
  2536  0011C0  6F80               	movwf	___ftmul@f2& (0+255),b
  2537  0011C2  0E00               	movlw	0
  2538  0011C4  0100               	movlb	0	; () banked
  2539  0011C6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2540  0011C8  0E40               	movlw	64
  2541  0011CA  0100               	movlb	0	; () banked
  2542  0011CC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2543  0011CE  C10A  F076         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2544  0011D2  C10B  F077         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2545  0011D6  ECC0  F01C         	call	___awtoft	;wreg free
  2546  0011DA  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2547  0011DE  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2548  0011E2  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2549  0011E6  ECD0  F014         	call	___ftmul	;wreg free
  2550  0011EA  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2551  0011EE  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2552  0011F2  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2553  0011F6  EC9A  F00F         	call	___ftadd	;wreg free
  2554  0011FA  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2555  0011FE  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2556  001202  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2557                           
  2558                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2559                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2560                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2561                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2562  001206  0E00               	movlw	0
  2563  001208  0100               	movlb	0	; () banked
  2564  00120A  6F80               	movwf	___ftmul@f2& (0+255),b
  2565  00120C  0E00               	movlw	0
  2566  00120E  0100               	movlb	0	; () banked
  2567  001210  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2568  001212  0E41               	movlw	65
  2569  001214  0100               	movlb	0	; () banked
  2570  001216  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2571  001218  C10E  F076         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2572  00121C  C10F  F077         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2573  001220  ECC0  F01C         	call	___awtoft	;wreg free
  2574  001224  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2575  001228  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2576  00122C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2577  001230  ECD0  F014         	call	___ftmul	;wreg free
  2578  001234  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2579  001238  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2580  00123C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2581  001240  0E00               	movlw	0
  2582  001242  0100               	movlb	0	; () banked
  2583  001244  6F80               	movwf	___ftmul@f2& (0+255),b
  2584  001246  0E80               	movlw	128
  2585  001248  0100               	movlb	0	; () banked
  2586  00124A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2587  00124C  0E40               	movlw	64
  2588  00124E  0100               	movlb	0	; () banked
  2589  001250  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2590  001252  C10C  F076         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2591  001256  C10D  F077         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2592  00125A  ECC0  F01C         	call	___awtoft	;wreg free
  2593  00125E  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2594  001262  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2595  001266  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2596  00126A  ECD0  F014         	call	___ftmul	;wreg free
  2597  00126E  C07D  F093         	movff	?___ftmul,___ftadd@f1
  2598  001272  C07E  F094         	movff	?___ftmul+1,___ftadd@f1+1
  2599  001276  C07F  F095         	movff	?___ftmul+2,___ftadd@f1+2
  2600  00127A  EC9A  F00F         	call	___ftadd	;wreg free
  2601  00127E  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2417
  2602  001282  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2417+1
  2603  001286  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2417+2
  2604                           
  2605                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2606                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2607                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2608                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2609  00128A  0E00               	movlw	0
  2610  00128C  0100               	movlb	0	; () banked
  2611  00128E  6F80               	movwf	___ftmul@f2& (0+255),b
  2612  001290  0E80               	movlw	128
  2613  001292  0100               	movlb	0	; () banked
  2614  001294  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2615  001296  0E41               	movlw	65
  2616  001298  0100               	movlb	0	; () banked
  2617  00129A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2618  00129C  C110  F076         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2619  0012A0  C111  F077         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2620  0012A4  ECC0  F01C         	call	___awtoft	;wreg free
  2621  0012A8  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2622  0012AC  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2623  0012B0  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2624  0012B4  ECD0  F014         	call	___ftmul	;wreg free
  2625  0012B8  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2626  0012BC  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2627  0012C0  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2628  0012C4  C1A7  F093         	movff	_util_getTemperature$2417,___ftadd@f1
  2629  0012C8  C1A8  F094         	movff	_util_getTemperature$2417+1,___ftadd@f1+1
  2630  0012CC  C1A9  F095         	movff	_util_getTemperature$2417+2,___ftadd@f1+2
  2631  0012D0  EC9A  F00F         	call	___ftadd	;wreg free
  2632  0012D4  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2418
  2633  0012D8  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2418+1
  2634  0012DC  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2418+2
  2635                           
  2636                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2637                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2638                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2639                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2640  0012E0  0E00               	movlw	0
  2641  0012E2  0100               	movlb	0	; () banked
  2642  0012E4  6F80               	movwf	___ftmul@f2& (0+255),b
  2643  0012E6  0E00               	movlw	0
  2644  0012E8  0100               	movlb	0	; () banked
  2645  0012EA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2646  0012EC  0E42               	movlw	66
  2647  0012EE  0100               	movlb	0	; () banked
  2648  0012F0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2649  0012F2  C112  F076         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2650  0012F6  C113  F077         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2651  0012FA  ECC0  F01C         	call	___awtoft	;wreg free
  2652  0012FE  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2653  001302  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2654  001306  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2655  00130A  ECD0  F014         	call	___ftmul	;wreg free
  2656  00130E  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2657  001312  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2658  001316  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2659  00131A  C1AA  F093         	movff	_util_getTemperature$2418,___ftadd@f1
  2660  00131E  C1AB  F094         	movff	_util_getTemperature$2418+1,___ftadd@f1+1
  2661  001322  C1AC  F095         	movff	_util_getTemperature$2418+2,___ftadd@f1+2
  2662  001326  EC9A  F00F         	call	___ftadd	;wreg free
  2663  00132A  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2419
  2664  00132E  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2419+1
  2665  001332  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2419+2
  2666                           
  2667                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2668                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2669                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2670                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2671  001336  0E00               	movlw	0
  2672  001338  0100               	movlb	0	; () banked
  2673  00133A  6F80               	movwf	___ftmul@f2& (0+255),b
  2674  00133C  0E80               	movlw	128
  2675  00133E  0100               	movlb	0	; () banked
  2676  001340  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2677  001342  0E42               	movlw	66
  2678  001344  0100               	movlb	0	; () banked
  2679  001346  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2680  001348  C114  F076         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2681  00134C  C115  F077         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2682  001350  ECC0  F01C         	call	___awtoft	;wreg free
  2683  001354  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2684  001358  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2685  00135C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2686  001360  ECD0  F014         	call	___ftmul	;wreg free
  2687  001364  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2688  001368  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2689  00136C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2690  001370  C1AD  F093         	movff	_util_getTemperature$2419,___ftadd@f1
  2691  001374  C1AE  F094         	movff	_util_getTemperature$2419+1,___ftadd@f1+1
  2692  001378  C1AF  F095         	movff	_util_getTemperature$2419+2,___ftadd@f1+2
  2693  00137C  EC9A  F00F         	call	___ftadd	;wreg free
  2694  001380  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2420
  2695  001384  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2420+1
  2696  001388  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2420+2
  2697                           
  2698                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2699                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2700                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2701                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2702  00138C  C1B0  F093         	movff	_util_getTemperature$2420,___ftadd@f1
  2703  001390  C1B1  F094         	movff	_util_getTemperature$2420+1,___ftadd@f1+1
  2704  001394  C1B2  F095         	movff	_util_getTemperature$2420+2,___ftadd@f1+2
  2705  001398  C1C9  F096         	movff	util_getTemperature@temperature,___ftadd@f2
  2706  00139C  C1CA  F097         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2707  0013A0  C1CB  F098         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2708  0013A4  EC9A  F00F         	call	___ftadd	;wreg free
  2709  0013A8  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2710  0013AC  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2711  0013B0  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2712                           
  2713                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2714  0013B4  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2715  0013B8  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2716  0013BC  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2717  0013C0  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2718  0013C4  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2719  0013C8  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2720  0013CC  ECD0  F014         	call	___ftmul	;wreg free
  2721  0013D0  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2722  0013D4  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2723  0013D8  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2724                           
  2725                           ;easat2_util_inputs.c: 248: return temperature;
  2726  0013DC  C1C9  F09F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2727  0013E0  C1CA  F0A0         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2728  0013E4  C1CB  F0A1         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2729  0013E8  0012               	return	
  2730  0013EA                     __end_of_util_getTemperature:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1l	equ	0xFE1
  2740                           postinc2	equ	0xFDE
  2741                           postdec2	equ	0xFDD
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _util_waits_delay_secs *****************
  2747 ;; Defined at:
  2748 ;;		line 31 in file "easat2_util_waits.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  secs            2   19[BANK0 ] int 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  j               2   39[COMRAM] int 
  2753 ;;  i               2   37[COMRAM] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       2       0       0       0       0       0
  2764 ;;      Locals:         4       0       0       0       0       0       0
  2765 ;;      Temps:          1       0       0       0       0       0       0
  2766 ;;      Totals:         5       2       0       0       0       0       0
  2767 ;;Total ram usage:        7 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    4
  2770 ;; This function calls:
  2771 ;;		_util_waits_delay_ms
  2772 ;; This function is called by:
  2773 ;;		_util_getTemperature
  2774 ;;		_util_waits_delay_mins
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text5
  2779  0037D2                     __ptext5:
  2780                           	opt stack 0
  2781  0037D2                     _util_waits_delay_secs:
  2782                           	opt stack 24
  2783                           
  2784                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2785                           
  2786                           ;incstack = 0
  2787  0037D2  0E00               	movlw	0
  2788  0037D4  6E27               	movwf	util_waits_delay_secs@i+1,c
  2789  0037D6  0E00               	movlw	0
  2790  0037D8  6E26               	movwf	util_waits_delay_secs@i,c
  2791  0037DA  D018               	goto	l4984
  2792  0037DC                     l4970:
  2793                           
  2794                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2795  0037DC  0E00               	movlw	0
  2796  0037DE  6E29               	movwf	util_waits_delay_secs@j+1,c
  2797  0037E0  0E00               	movlw	0
  2798  0037E2  6E28               	movwf	util_waits_delay_secs@j,c
  2799  0037E4                     l4972:
  2800  0037E4  BE29               	btfsc	util_waits_delay_secs@j+1,7,c
  2801  0037E6  D006               	goto	l4976
  2802  0037E8  5029               	movf	util_waits_delay_secs@j+1,w,c
  2803  0037EA  E10E               	bnz	l4982
  2804  0037EC  0E0A               	movlw	10
  2805  0037EE  5C28               	subwf	util_waits_delay_secs@j,w,c
  2806  0037F0  B0D8               	btfsc	status,0,c
  2807  0037F2  D00A               	goto	l4982
  2808  0037F4                     l4976:
  2809                           
  2810                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2811  0037F4  0E00               	movlw	0
  2812  0037F6  0100               	movlb	0	; () banked
  2813  0037F8  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2814  0037FA  0E64               	movlw	100
  2815  0037FC  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  2816  0037FE  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  2817  003802  4A28               	infsnz	util_waits_delay_secs@j,f,c
  2818  003804  2A29               	incf	util_waits_delay_secs@j+1,f,c
  2819  003806  D7EE               	goto	l4972
  2820  003808                     l4982:
  2821  003808  4A26               	infsnz	util_waits_delay_secs@i,f,c
  2822  00380A  2A27               	incf	util_waits_delay_secs@i+1,f,c
  2823  00380C                     l4984:
  2824  00380C  0100               	movlb	0	; () banked
  2825  00380E  5173               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2826  003810  5C26               	subwf	util_waits_delay_secs@i,w,c
  2827  003812  5027               	movf	util_waits_delay_secs@i+1,w,c
  2828  003814  0A80               	xorlw	128
  2829  003816  6E25               	movwf	??_util_waits_delay_secs& (0+255),c
  2830  003818  0100               	movlb	0	; () banked
  2831  00381A  5174               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2832  00381C  0A80               	xorlw	128
  2833  00381E  5825               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2834  003820  B0D8               	btfsc	status,0,c
  2835  003822  0012               	return	
  2836  003824  D7DB               	goto	l4970
  2837  003826                     __end_of_util_waits_delay_secs:
  2838                           	opt stack 0
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           postdec1	equ	0xFE5
  2846                           fsr1l	equ	0xFE1
  2847                           postinc2	equ	0xFDE
  2848                           postdec2	equ	0xFDD
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _util_onewire_write_byte *****************
  2854 ;; Defined at:
  2855 ;;		line 62 in file "easat2_util_onewire.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  value           2   19[BANK0 ] int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  bit7            2   35[BANK0 ] int 
  2860 ;;  bit6            2   33[BANK0 ] int 
  2861 ;;  bit5            2   31[BANK0 ] int 
  2862 ;;  bit4            2   29[BANK0 ] int 
  2863 ;;  bit3            2   27[BANK0 ] int 
  2864 ;;  bit2            2   25[BANK0 ] int 
  2865 ;;  bit1            2   23[BANK0 ] int 
  2866 ;;  bit0            2   21[BANK0 ] int 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2876 ;;      Params:         0       2       0       0       0       0       0
  2877 ;;      Locals:         0      16       0       0       0       0       0
  2878 ;;      Temps:          3       0       0       0       0       0       0
  2879 ;;      Totals:         3      18       0       0       0       0       0
  2880 ;;Total ram usage:       21 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    4
  2883 ;; This function calls:
  2884 ;;		_util_onewire_write_bit
  2885 ;; This function is called by:
  2886 ;;		_util_getTemperature
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text6
  2891  002552                     __ptext6:
  2892                           	opt stack 0
  2893  002552                     _util_onewire_write_byte:
  2894                           	opt stack 24
  2895                           
  2896                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2897                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;incstack = 0
  2901  002552  0E01               	movlw	1
  2902  002554  0100               	movlb	0	; () banked
  2903  002556  1573               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2904  002558  0100               	movlb	0	; () banked
  2905  00255A  6F75               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2906  00255C  0100               	movlb	0	; () banked
  2907  00255E  6B76               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2908                           
  2909                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2910  002560  0100               	movlb	0	; () banked
  2911  002562  3574               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2912  002564  3174               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2913  002566  6E23               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2914  002568  0100               	movlb	0	; () banked
  2915  00256A  3173               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2916  00256C  6E22               	movwf	??_util_onewire_write_byte& (0+255),c
  2917  00256E  0E01               	movlw	1
  2918  002570  1422               	andwf	??_util_onewire_write_byte,w,c
  2919  002572  0100               	movlb	0	; () banked
  2920  002574  6F77               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2921  002576  0100               	movlb	0	; () banked
  2922  002578  6B78               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2923                           
  2924                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2925  00257A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2926  00257E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2927  002582  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2928  002584  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2929  002586  3222               	rrcf	??_util_onewire_write_byte,f,c
  2930  002588  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2931  00258A  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2932  00258C  3222               	rrcf	??_util_onewire_write_byte,f,c
  2933  00258E  0E01               	movlw	1
  2934  002590  1422               	andwf	??_util_onewire_write_byte,w,c
  2935  002592  0100               	movlb	0	; () banked
  2936  002594  6F79               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2937  002596  0100               	movlb	0	; () banked
  2938  002598  6B7A               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2939                           
  2940                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2941  00259A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2942  00259E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2943  0025A2  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2944  0025A4  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2945  0025A6  3222               	rrcf	??_util_onewire_write_byte,f,c
  2946  0025A8  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2947  0025AA  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2948  0025AC  3222               	rrcf	??_util_onewire_write_byte,f,c
  2949  0025AE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2950  0025B0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2951  0025B2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2952  0025B4  0E01               	movlw	1
  2953  0025B6  1422               	andwf	??_util_onewire_write_byte,w,c
  2954  0025B8  0100               	movlb	0	; () banked
  2955  0025BA  6F7B               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2956  0025BC  0100               	movlb	0	; () banked
  2957  0025BE  6B7C               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2958                           
  2959                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2960  0025C0  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2961  0025C4  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2962  0025C8  0E04               	movlw	4
  2963  0025CA  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2964  0025CC                     u5415:
  2965  0025CC  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2966  0025CE  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2967  0025D0  3222               	rrcf	??_util_onewire_write_byte,f,c
  2968  0025D2  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2969  0025D4  D7FB               	goto	u5415
  2970  0025D6  0E01               	movlw	1
  2971  0025D8  1422               	andwf	??_util_onewire_write_byte,w,c
  2972  0025DA  0100               	movlb	0	; () banked
  2973  0025DC  6F7D               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2974  0025DE  0100               	movlb	0	; () banked
  2975  0025E0  6B7E               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2976                           
  2977                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2978  0025E2  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2979  0025E6  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2980  0025EA  0E05               	movlw	5
  2981  0025EC  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2982  0025EE                     u5425:
  2983  0025EE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2984  0025F0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2985  0025F2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2986  0025F4  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2987  0025F6  D7FB               	goto	u5425
  2988  0025F8  0E01               	movlw	1
  2989  0025FA  1422               	andwf	??_util_onewire_write_byte,w,c
  2990  0025FC  0100               	movlb	0	; () banked
  2991  0025FE  6F7F               	movwf	util_onewire_write_byte@bit5& (0+255),b
  2992  002600  0100               	movlb	0	; () banked
  2993  002602  6B80               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  2994                           
  2995                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2996  002604  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2997  002608  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2998  00260C  0E06               	movlw	6
  2999  00260E  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3000  002610                     u5435:
  3001  002610  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3002  002612  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3003  002614  3222               	rrcf	??_util_onewire_write_byte,f,c
  3004  002616  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3005  002618  D7FB               	goto	u5435
  3006  00261A  0E01               	movlw	1
  3007  00261C  1422               	andwf	??_util_onewire_write_byte,w,c
  3008  00261E  0100               	movlb	0	; () banked
  3009  002620  6F81               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3010  002622  0100               	movlb	0	; () banked
  3011  002624  6B82               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3012                           
  3013                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3014  002626  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3015  00262A  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3016  00262E  0E07               	movlw	7
  3017  002630  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3018  002632                     u5445:
  3019  002632  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3020  002634  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3021  002636  3222               	rrcf	??_util_onewire_write_byte,f,c
  3022  002638  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3023  00263A  D7FB               	goto	u5445
  3024  00263C  0E01               	movlw	1
  3025  00263E  1422               	andwf	??_util_onewire_write_byte,w,c
  3026  002640  0100               	movlb	0	; () banked
  3027  002642  6F83               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3028  002644  0100               	movlb	0	; () banked
  3029  002646  6B84               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3033  002648  C075  F071         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3034  00264C  C076  F072         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3035  002650  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3036                           
  3037                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3038  002654  D000               	nop2		;2 cycle nop
  3039  002656  D000               	nop2		;2 cycle nop
  3040  002658  F000               	nop	
  3041                           
  3042                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3043  00265A  C077  F071         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3044  00265E  C078  F072         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3045  002662  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3046                           
  3047                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3048  002666  D000               	nop2		;2 cycle nop
  3049  002668  D000               	nop2		;2 cycle nop
  3050  00266A  F000               	nop	
  3051                           
  3052                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3053  00266C  C079  F071         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3054  002670  C07A  F072         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3055  002674  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3056                           
  3057                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3058  002678  D000               	nop2		;2 cycle nop
  3059  00267A  D000               	nop2		;2 cycle nop
  3060  00267C  F000               	nop	
  3061                           
  3062                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3063  00267E  C07B  F071         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3064  002682  C07C  F072         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3065  002686  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3066                           
  3067                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3068  00268A  D000               	nop2		;2 cycle nop
  3069  00268C  D000               	nop2		;2 cycle nop
  3070  00268E  F000               	nop	
  3071                           
  3072                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3073  002690  C07D  F071         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3074  002694  C07E  F072         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3075  002698  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3076                           
  3077                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3078  00269C  D000               	nop2		;2 cycle nop
  3079  00269E  D000               	nop2		;2 cycle nop
  3080  0026A0  F000               	nop	
  3081                           
  3082                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3083  0026A2  C07F  F071         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3084  0026A6  C080  F072         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3085  0026AA  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3086                           
  3087                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3088  0026AE  D000               	nop2		;2 cycle nop
  3089  0026B0  D000               	nop2		;2 cycle nop
  3090  0026B2  F000               	nop	
  3091                           
  3092                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3093  0026B4  C081  F071         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3094  0026B8  C082  F072         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3095  0026BC  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3096                           
  3097                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3098  0026C0  D000               	nop2		;2 cycle nop
  3099  0026C2  D000               	nop2		;2 cycle nop
  3100  0026C4  F000               	nop	
  3101                           
  3102                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3103  0026C6  C083  F071         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3104  0026CA  C084  F072         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3105  0026CE  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3106                           
  3107                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3108  0026D2  D000               	nop2		;2 cycle nop
  3109  0026D4  D000               	nop2		;2 cycle nop
  3110  0026D6  F000               	nop	
  3111  0026D8  0012               	return		;funcret
  3112  0026DA                     __end_of_util_onewire_write_byte:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           postdec1	equ	0xFE5
  3121                           fsr1l	equ	0xFE1
  3122                           postinc2	equ	0xFDE
  3123                           postdec2	equ	0xFDD
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _util_onewire_write_bit *****************
  3129 ;; Defined at:
  3130 ;;		line 121 in file "easat2_util_onewire.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  bit_in          2   17[BANK0 ] int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3144 ;;      Params:         0       2       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0
  3147 ;;      Totals:         0       2       0       0       0       0       0
  3148 ;;Total ram usage:        2 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    3
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_util_onewire_write_byte
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text7
  3159  0039F6                     __ptext7:
  3160                           	opt stack 0
  3161  0039F6                     _util_onewire_write_bit:
  3162                           	opt stack 24
  3163                           
  3164                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3165                           
  3166                           ;incstack = 0
  3167  0039F6  9692               	bcf	3986,3,c	;volatile
  3168                           
  3169                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3170  0039F8  0100               	movlb	0	; () banked
  3171  0039FA  5171               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3172  0039FC  0100               	movlb	0	; () banked
  3173  0039FE  1172               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3174  003A00  B4D8               	btfsc	status,2,c
  3175  003A02  D009               	goto	l167
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3179  003A04  9680               	bcf	3968,3,c	;volatile
  3180                           
  3181                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3182  003A06  D000               	nop2		;2 cycle nop
  3183  003A08  D000               	nop2		;2 cycle nop
  3184  003A0A  F000               	nop	
  3185                           
  3186                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3187  003A0C  8680               	bsf	3968,3,c	;volatile
  3188                           
  3189                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3190  003A0E  0E09               	movlw	9
  3191  003A10                     u6357:
  3192  003A10  2EE8               	decfsz	wreg,f,c
  3193  003A12  D7FE               	bra	u6357
  3194                           
  3195                           ;easat2_util_onewire.c: 141: } else {
  3196  003A14  0012               	return	
  3197  003A16                     l167:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3201  003A16  9680               	bcf	3968,3,c	;volatile
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3205  003A18  0E0B               	movlw	11
  3206  003A1A                     u6367:
  3207  003A1A  2EE8               	decfsz	wreg,f,c
  3208  003A1C  D7FE               	bra	u6367
  3209  003A1E  D000               	nop2	
  3210                           
  3211                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3212  003A20  8680               	bsf	3968,3,c	;volatile
  3213                           
  3214                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3215  003A22  D000               	nop2		;2 cycle nop
  3216  003A24  D000               	nop2		;2 cycle nop
  3217  003A26  F000               	nop	
  3218  003A28  0012               	return	
  3219  003A2A                     __end_of_util_onewire_write_bit:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           postdec1	equ	0xFE5
  3228                           fsr1l	equ	0xFE1
  3229                           postinc2	equ	0xFDE
  3230                           postdec2	equ	0xFDD
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _util_onewire_reset *****************
  3236 ;; Defined at:
  3237 ;;		line 18 in file "easat2_util_onewire.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  presence        2   34[COMRAM] int 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2   17[BANK0 ] int 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         0       2       0       0       0       0       0
  3252 ;;      Locals:         2       0       0       0       0       0       0
  3253 ;;      Temps:          1       0       0       0       0       0       0
  3254 ;;      Totals:         3       2       0       0       0       0       0
  3255 ;;Total ram usage:        5 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    3
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_util_getTemperature
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text8
  3266  00393E                     __ptext8:
  3267                           	opt stack 0
  3268  00393E                     _util_onewire_reset:
  3269                           	opt stack 25
  3270                           
  3271                           ;easat2_util_onewire.c: 20: int presence = 1;
  3272                           
  3273                           ;incstack = 0
  3274  00393E  0E00               	movlw	0
  3275  003940  6E24               	movwf	util_onewire_reset@presence+1,c
  3276  003942  0E01               	movlw	1
  3277  003944  6E23               	movwf	util_onewire_reset@presence,c
  3278                           
  3279                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3280  003946  9692               	bcf	3986,3,c	;volatile
  3281                           
  3282                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3283  003948  9680               	bcf	3968,3,c	;volatile
  3284                           
  3285                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3286  00394A  0E5D               	movlw	93
  3287  00394C                     u6377:
  3288  00394C  2EE8               	decfsz	wreg,f,c
  3289  00394E  D7FE               	bra	u6377
  3290  003950  F000               	nop	
  3291                           
  3292                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3293  003952  8680               	bsf	3968,3,c	;volatile
  3294                           
  3295                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3296  003954  0E0B               	movlw	11
  3297  003956                     u6387:
  3298  003956  2EE8               	decfsz	wreg,f,c
  3299  003958  D7FE               	bra	u6387
  3300  00395A  D000               	nop2	
  3301                           
  3302                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3303  00395C  8692               	bsf	3986,3,c	;volatile
  3304                           
  3305                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3306  00395E  A680               	btfss	3968,3,c	;volatile
  3307  003960  D003               	goto	u5400
  3308  003962  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3309  003964  2A22               	incf	??_util_onewire_reset& (0+255),f,c
  3310  003966  D001               	goto	u5408
  3311  003968                     u5400:
  3312  003968  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3313  00396A                     u5408:
  3314  00396A  5022               	movf	??_util_onewire_reset,w,c
  3315  00396C  6E23               	movwf	util_onewire_reset@presence,c
  3316  00396E  6A24               	clrf	util_onewire_reset@presence+1,c
  3317                           
  3318                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3319  003970  0E46               	movlw	70
  3320  003972                     u6397:
  3321  003972  2EE8               	decfsz	wreg,f,c
  3322  003974  D7FE               	bra	u6397
  3323                           
  3324                           ;easat2_util_onewire.c: 56: return presence;
  3325  003976  C023  F071         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3326  00397A  C024  F072         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3327  00397E  0012               	return	
  3328  003980                     __end_of_util_onewire_reset:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           postdec1	equ	0xFE5
  3337                           fsr1l	equ	0xFE1
  3338                           postinc2	equ	0xFDE
  3339                           postdec2	equ	0xFDD
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _util_onewire_read_byte *****************
  3345 ;; Defined at:
  3346 ;;		line 96 in file "easat2_util_onewire.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  value           2   51[BANK0 ] int 
  3351 ;;  bit7            2   49[BANK0 ] int 
  3352 ;;  bit6            2   47[BANK0 ] int 
  3353 ;;  bit5            2   45[BANK0 ] int 
  3354 ;;  bit4            2   43[BANK0 ] int 
  3355 ;;  bit3            2   41[BANK0 ] int 
  3356 ;;  bit2            2   39[BANK0 ] int 
  3357 ;;  bit1            2   37[BANK0 ] int 
  3358 ;;  bit0            2   35[BANK0 ] int 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2   19[BANK0 ] int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3368 ;;      Params:         0       2       0       0       0       0       0
  3369 ;;      Locals:         0      18       0       0       0       0       0
  3370 ;;      Temps:          0      14       0       0       0       0       0
  3371 ;;      Totals:         0      34       0       0       0       0       0
  3372 ;;Total ram usage:       34 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    4
  3375 ;; This function calls:
  3376 ;;		_util_onewire_read_bit
  3377 ;; This function is called by:
  3378 ;;		_util_getTemperature
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text9
  3383  0023BE                     __ptext9:
  3384                           	opt stack 0
  3385  0023BE                     _util_onewire_read_byte:
  3386                           	opt stack 24
  3387                           
  3388                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3389                           ;easat2_util_onewire.c: 99: int value = 0;
  3390                           
  3391                           ;incstack = 0
  3392  0023BE  0E00               	movlw	0
  3393  0023C0  0100               	movlb	0	; () banked
  3394  0023C2  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3395  0023C4  0E00               	movlw	0
  3396  0023C6  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3400  0023C8  8692               	bsf	3986,3,c	;volatile
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3404  0023CA  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3405  0023CE  C071  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3406  0023D2  C072  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3407                           
  3408                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3409  0023D6  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3410  0023DA  C071  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3411  0023DE  C072  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3412                           
  3413                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3414  0023E2  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3415  0023E6  C071  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3416  0023EA  C072  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3417                           
  3418                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3419  0023EE  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3420  0023F2  C071  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3421  0023F6  C072  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3422                           
  3423                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3424  0023FA  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3425  0023FE  C071  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3426  002402  C072  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3427                           
  3428                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3429  002406  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3430  00240A  C071  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3431  00240E  C072  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3432                           
  3433                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3434  002412  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3435  002416  C071  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3436  00241A  C072  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3437                           
  3438                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3439  00241E  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3440  002422  C071  F091         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3441  002426  C072  F092         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3442                           
  3443                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3444                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3445  00242A  C091  F075         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3446  00242E  C092  F076         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3447  002432  0E07               	movlw	7
  3448  002434                     u5455:
  3449  002434  90D8               	bcf	status,0,c
  3450  002436  0100               	movlb	0	; () banked
  3451  002438  3775               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3452  00243A  3776               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3453  00243C  2EE8               	decfsz	wreg,f,c
  3454  00243E  D7FA               	goto	u5455
  3455  002440  C08F  F077         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3456  002444  C090  F078         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3457  002448  0E06               	movlw	6
  3458  00244A                     u5465:
  3459  00244A  90D8               	bcf	status,0,c
  3460  00244C  0100               	movlb	0	; () banked
  3461  00244E  3777               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3462  002450  3778               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3463  002452  2EE8               	decfsz	wreg,f,c
  3464  002454  D7FA               	goto	u5465
  3465  002456  C08D  F079         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3466  00245A  C08E  F07A         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3467  00245E  0E05               	movlw	5
  3468  002460                     u5475:
  3469  002460  90D8               	bcf	status,0,c
  3470  002462  0100               	movlb	0	; () banked
  3471  002464  3779               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3472  002466  377A               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3473  002468  2EE8               	decfsz	wreg,f,c
  3474  00246A  D7FA               	goto	u5475
  3475  00246C  C08B  F07B         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3476  002470  C08C  F07C         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3477  002474  0100               	movlb	0	; () banked
  3478  002476  3B7B               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3479  002478  3B7C               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3480  00247A  0EF0               	movlw	240
  3481  00247C  177C               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3482  00247E  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3483  002480  0B0F               	andlw	15
  3484  002482  137C               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3485  002484  0EF0               	movlw	240
  3486  002486  177B               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3487  002488  C089  F07D         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3488  00248C  C08A  F07E         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3489  002490  0100               	movlb	0	; () banked
  3490  002492  90D8               	bcf	status,0,c
  3491  002494  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3492  002496  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3493  002498  0100               	movlb	0	; () banked
  3494  00249A  90D8               	bcf	status,0,c
  3495  00249C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3496  00249E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3497  0024A0  0100               	movlb	0	; () banked
  3498  0024A2  90D8               	bcf	status,0,c
  3499  0024A4  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3500  0024A6  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3501  0024A8  C087  F07F         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3502  0024AC  C088  F080         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3503  0024B0  0100               	movlb	0	; () banked
  3504  0024B2  90D8               	bcf	status,0,c
  3505  0024B4  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3506  0024B6  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3507  0024B8  0100               	movlb	0	; () banked
  3508  0024BA  90D8               	bcf	status,0,c
  3509  0024BC  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3510  0024BE  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3511  0024C0  C085  F081         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3512  0024C4  C086  F082         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3513  0024C8  90D8               	bcf	status,0,c
  3514  0024CA  0100               	movlb	0	; () banked
  3515  0024CC  3781               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3516  0024CE  3782               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3517  0024D0  0100               	movlb	0	; () banked
  3518  0024D2  517F               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3519  0024D4  0100               	movlb	0	; () banked
  3520  0024D6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3521  0024D8  0100               	movlb	0	; () banked
  3522  0024DA  5180               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3523  0024DC  0100               	movlb	0	; () banked
  3524  0024DE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3525  0024E0  0100               	movlb	0	; () banked
  3526  0024E2  517D               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3527  0024E4  0100               	movlb	0	; () banked
  3528  0024E6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3529  0024E8  0100               	movlb	0	; () banked
  3530  0024EA  517E               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3531  0024EC  0100               	movlb	0	; () banked
  3532  0024EE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3533  0024F0  0100               	movlb	0	; () banked
  3534  0024F2  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3535  0024F4  0100               	movlb	0	; () banked
  3536  0024F6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3537  0024F8  0100               	movlb	0	; () banked
  3538  0024FA  517C               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3539  0024FC  0100               	movlb	0	; () banked
  3540  0024FE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3541  002500  0100               	movlb	0	; () banked
  3542  002502  5179               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3543  002504  0100               	movlb	0	; () banked
  3544  002506  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3545  002508  0100               	movlb	0	; () banked
  3546  00250A  517A               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3547  00250C  0100               	movlb	0	; () banked
  3548  00250E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3549  002510  0100               	movlb	0	; () banked
  3550  002512  5177               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3551  002514  0100               	movlb	0	; () banked
  3552  002516  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3553  002518  0100               	movlb	0	; () banked
  3554  00251A  5178               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3555  00251C  0100               	movlb	0	; () banked
  3556  00251E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3557  002520  0100               	movlb	0	; () banked
  3558  002522  5175               	movf	??_util_onewire_read_byte& (0+255),w,b
  3559  002524  0100               	movlb	0	; () banked
  3560  002526  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3561  002528  0100               	movlb	0	; () banked
  3562  00252A  5176               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3563  00252C  0100               	movlb	0	; () banked
  3564  00252E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3565  002530  0100               	movlb	0	; () banked
  3566  002532  5183               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3567  002534  0100               	movlb	0	; () banked
  3568  002536  2581               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3569  002538  0100               	movlb	0	; () banked
  3570  00253A  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3571  00253C  0100               	movlb	0	; () banked
  3572  00253E  5184               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3573  002540  0100               	movlb	0	; () banked
  3574  002542  2182               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3575  002544  0100               	movlb	0	; () banked
  3576  002546  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;easat2_util_onewire.c: 116: return value;
  3580  002548  C093  F073         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3581  00254C  C094  F074         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3582  002550  0012               	return	
  3583  002552                     __end_of_util_onewire_read_byte:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           postdec1	equ	0xFE5
  3592                           fsr1l	equ	0xFE1
  3593                           postinc2	equ	0xFDE
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _util_onewire_read_bit *****************
  3600 ;; Defined at:
  3601 ;;		line 162 in file "easat2_util_onewire.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  value           2   34[COMRAM] int 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2   17[BANK0 ] int 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       2       0       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0       0       0
  3617 ;;      Temps:          1       0       0       0       0       0       0
  3618 ;;      Totals:         3       2       0       0       0       0       0
  3619 ;;Total ram usage:        5 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    3
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_util_onewire_read_byte
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text10
  3630  003A92                     __ptext10:
  3631                           	opt stack 0
  3632  003A92                     _util_onewire_read_bit:
  3633                           	opt stack 24
  3634                           
  3635                           ;easat2_util_onewire.c: 164: int value = 0;
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;incstack = 0
  3639  003A92  0E00               	movlw	0
  3640  003A94  6E24               	movwf	util_onewire_read_bit@value+1,c
  3641  003A96  0E00               	movlw	0
  3642  003A98  6E23               	movwf	util_onewire_read_bit@value,c
  3643                           
  3644                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3645  003A9A  9692               	bcf	3986,3,c	;volatile
  3646                           
  3647                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3648  003A9C  9680               	bcf	3968,3,c	;volatile
  3649                           
  3650                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3651                           
  3652                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3653  003A9E  8680               	bsf	3968,3,c	;volatile
  3654                           
  3655                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3656  003AA0  D000               	nop2		;2 cycle nop
  3657                           
  3658                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3659  003AA2  A680               	btfss	3968,3,c	;volatile
  3660  003AA4  D003               	goto	u5000
  3661  003AA6  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3662  003AA8  2A22               	incf	??_util_onewire_read_bit& (0+255),f,c
  3663  003AAA  D001               	goto	u5008
  3664  003AAC                     u5000:
  3665  003AAC  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3666  003AAE                     u5008:
  3667  003AAE  5022               	movf	??_util_onewire_read_bit,w,c
  3668  003AB0  6E23               	movwf	util_onewire_read_bit@value,c
  3669  003AB2  6A24               	clrf	util_onewire_read_bit@value+1,c
  3670                           
  3671                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3672  003AB4  0E0A               	movlw	10
  3673  003AB6                     u6407:
  3674  003AB6  2EE8               	decfsz	wreg,f,c
  3675  003AB8  D7FE               	bra	u6407
  3676                           
  3677                           ;easat2_util_onewire.c: 187: return value;
  3678  003ABA  C023  F071         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3679  003ABE  C024  F072         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3680  003AC2  0012               	return	
  3681  003AC4                     __end_of_util_onewire_read_bit:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1l	equ	0xFE1
  3691                           postinc2	equ	0xFDE
  3692                           postdec2	equ	0xFDD
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function ___ftdiv *****************
  3698 ;; Defined at:
  3699 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  f1              3   25[BANK0 ] float 
  3702 ;;  f2              3   28[BANK0 ] float 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  f3              3   32[BANK0 ] float 
  3705 ;;  sign            1   36[BANK0 ] unsigned char 
  3706 ;;  exp             1   35[BANK0 ] unsigned char 
  3707 ;;  cntr            1   31[BANK0 ] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  3   25[BANK0 ] float 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3717 ;;      Params:         0       6       0       0       0       0       0
  3718 ;;      Locals:         0       6       0       0       0       0       0
  3719 ;;      Temps:          3       0       0       0       0       0       0
  3720 ;;      Totals:         3      12       0       0       0       0       0
  3721 ;;Total ram usage:       15 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    4
  3724 ;; This function calls:
  3725 ;;		___ftpack
  3726 ;; This function is called by:
  3727 ;;		_util_getTemperature
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text11
  3732  002C36                     __ptext11:
  3733                           	opt stack 0
  3734  002C36                     ___ftdiv:
  3735                           	opt stack 24
  3736                           
  3737                           ;incstack = 0
  3738  002C36  C07B  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3739  002C3A  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3740  002C3C  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3741  002C3E  0100               	movlb	0	; () banked
  3742  002C40  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3743  002C42  3626               	rlcf	??___ftdiv& (0+255),f,c
  3744  002C44  E301               	bnc	u6021
  3745  002C46  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3746  002C48                     u6021:
  3747  002C48  5026               	movf	??___ftdiv,w,c
  3748  002C4A  0100               	movlb	0	; () banked
  3749  002C4C  6F83               	movwf	___ftdiv@exp& (0+255),b
  3750  002C4E  0100               	movlb	0	; () banked
  3751  002C50  5183               	movf	___ftdiv@exp& (0+255),w,b
  3752  002C52  A4D8               	btfss	status,2,c
  3753  002C54  D00A               	goto	l5808
  3754                           
  3755                           ; BSR set to: 0
  3756  002C56  0E00               	movlw	0
  3757  002C58  0100               	movlb	0	; () banked
  3758  002C5A  6F79               	movwf	?___ftdiv& (0+255),b
  3759  002C5C  0E00               	movlw	0
  3760  002C5E  0100               	movlb	0	; () banked
  3761  002C60  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3762  002C62  0E00               	movlw	0
  3763  002C64  0100               	movlb	0	; () banked
  3764  002C66  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3765                           
  3766                           ; BSR set to: 0
  3767  002C68  0012               	return	
  3768  002C6A                     l5808:
  3769                           
  3770                           ; BSR set to: 0
  3771  002C6A  C07E  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3772  002C6E  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3773  002C70  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3774  002C72  0100               	movlb	0	; () banked
  3775  002C74  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3776  002C76  3626               	rlcf	??___ftdiv& (0+255),f,c
  3777  002C78  E301               	bnc	u6041
  3778  002C7A  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3779  002C7C                     u6041:
  3780  002C7C  5026               	movf	??___ftdiv,w,c
  3781  002C7E  0100               	movlb	0	; () banked
  3782  002C80  6F84               	movwf	___ftdiv@sign& (0+255),b
  3783  002C82  0100               	movlb	0	; () banked
  3784  002C84  5184               	movf	___ftdiv@sign& (0+255),w,b
  3785  002C86  A4D8               	btfss	status,2,c
  3786  002C88  D00A               	goto	l5814
  3787                           
  3788                           ; BSR set to: 0
  3789  002C8A  0E00               	movlw	0
  3790  002C8C  0100               	movlb	0	; () banked
  3791  002C8E  6F79               	movwf	?___ftdiv& (0+255),b
  3792  002C90  0E00               	movlw	0
  3793  002C92  0100               	movlb	0	; () banked
  3794  002C94  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3795  002C96  0E00               	movlw	0
  3796  002C98  0100               	movlb	0	; () banked
  3797  002C9A  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3798                           
  3799                           ; BSR set to: 0
  3800  002C9C  0012               	return	
  3801  002C9E                     l5814:
  3802                           
  3803                           ; BSR set to: 0
  3804  002C9E  0E00               	movlw	0
  3805  002CA0  0100               	movlb	0	; () banked
  3806  002CA2  6F80               	movwf	___ftdiv@f3& (0+255),b
  3807  002CA4  0E00               	movlw	0
  3808  002CA6  0100               	movlb	0	; () banked
  3809  002CA8  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3810  002CAA  0E00               	movlw	0
  3811  002CAC  0100               	movlb	0	; () banked
  3812  002CAE  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815  002CB0  0100               	movlb	0	; () banked
  3816  002CB2  5184               	movf	___ftdiv@sign& (0+255),w,b
  3817  002CB4  0F89               	addlw	137
  3818  002CB6  0100               	movlb	0	; () banked
  3819  002CB8  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3820                           
  3821                           ; BSR set to: 0
  3822  002CBA  C07B  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3823                           
  3824                           ; BSR set to: 0
  3825  002CBE  0100               	movlb	0	; () banked
  3826  002CC0  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3827  002CC2  0100               	movlb	0	; () banked
  3828  002CC4  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3829                           
  3830                           ; BSR set to: 0
  3831  002CC6  0E80               	movlw	128
  3832  002CC8  0100               	movlb	0	; () banked
  3833  002CCA  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3834                           
  3835                           ; BSR set to: 0
  3836  002CCC  0100               	movlb	0	; () banked
  3837  002CCE  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3838                           
  3839                           ; BSR set to: 0
  3840  002CD0  0EFF               	movlw	255
  3841  002CD2  0100               	movlb	0	; () banked
  3842  002CD4  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3843  002CD6  0EFF               	movlw	255
  3844  002CD8  0100               	movlb	0	; () banked
  3845  002CDA  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3846  002CDC  0E00               	movlw	0
  3847  002CDE  0100               	movlb	0	; () banked
  3848  002CE0  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3849                           
  3850                           ; BSR set to: 0
  3851  002CE2  0100               	movlb	0	; () banked
  3852  002CE4  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3853                           
  3854                           ; BSR set to: 0
  3855  002CE6  0EFF               	movlw	255
  3856  002CE8  0100               	movlb	0	; () banked
  3857  002CEA  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3858  002CEC  0EFF               	movlw	255
  3859  002CEE  0100               	movlb	0	; () banked
  3860  002CF0  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3861  002CF2  0E00               	movlw	0
  3862  002CF4  0100               	movlb	0	; () banked
  3863  002CF6  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3864                           
  3865                           ; BSR set to: 0
  3866  002CF8  0E18               	movlw	24
  3867  002CFA  0100               	movlb	0	; () banked
  3868  002CFC  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3869  002CFE                     l5834:
  3870                           
  3871                           ; BSR set to: 0
  3872  002CFE  0100               	movlb	0	; () banked
  3873  002D00  90D8               	bcf	status,0,c
  3874  002D02  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3875  002D04  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3876  002D06  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3877                           
  3878                           ; BSR set to: 0
  3879  002D08  0100               	movlb	0	; () banked
  3880  002D0A  517C               	movf	___ftdiv@f2& (0+255),w,b
  3881  002D0C  0100               	movlb	0	; () banked
  3882  002D0E  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3883  002D10  0100               	movlb	0	; () banked
  3884  002D12  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3885  002D14  0100               	movlb	0	; () banked
  3886  002D16  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3887  002D18  0100               	movlb	0	; () banked
  3888  002D1A  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3889  002D1C  0100               	movlb	0	; () banked
  3890  002D1E  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3891  002D20  A0D8               	btfss	status,0,c
  3892  002D22  D00E               	goto	l820
  3893                           
  3894                           ; BSR set to: 0
  3895  002D24  0100               	movlb	0	; () banked
  3896  002D26  517C               	movf	___ftdiv@f2& (0+255),w,b
  3897  002D28  0100               	movlb	0	; () banked
  3898  002D2A  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3899  002D2C  0100               	movlb	0	; () banked
  3900  002D2E  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3901  002D30  0100               	movlb	0	; () banked
  3902  002D32  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3903  002D34  0100               	movlb	0	; () banked
  3904  002D36  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3905  002D38  0100               	movlb	0	; () banked
  3906  002D3A  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3907                           
  3908                           ; BSR set to: 0
  3909  002D3C  0100               	movlb	0	; () banked
  3910  002D3E  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3911  002D40                     l820:
  3912                           
  3913                           ; BSR set to: 0
  3914  002D40  0100               	movlb	0	; () banked
  3915  002D42  90D8               	bcf	status,0,c
  3916  002D44  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3917  002D46  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3918  002D48  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3919                           
  3920                           ; BSR set to: 0
  3921  002D4A  0100               	movlb	0	; () banked
  3922  002D4C  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3923  002D4E  D7D7               	goto	l5834
  3924                           
  3925                           ; BSR set to: 0
  3926                           
  3927                           ; BSR set to: 0
  3928  002D50  C080  F071         	movff	___ftdiv@f3,___ftpack@arg
  3929  002D54  C081  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3930  002D58  C082  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3931  002D5C  C083  F074         	movff	___ftdiv@exp,___ftpack@exp
  3932  002D60  C084  F075         	movff	___ftdiv@sign,___ftpack@sign
  3933  002D64  EC44  F017         	call	___ftpack	;wreg free
  3934  002D68  C071  F079         	movff	?___ftpack,?___ftdiv
  3935  002D6C  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3936  002D70  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3937  002D74  0012               	return	
  3938  002D76                     __end_of___ftdiv:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1l	equ	0xFE1
  3948                           postinc2	equ	0xFDE
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function ___awtoft *****************
  3955 ;; Defined at:
  3956 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  c               2   22[BANK0 ] int 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  sign            1   36[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  3   22[BANK0 ] float 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3970 ;;      Params:         0       3       0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0
  3973 ;;      Totals:         1       3       0       0       0       0       0
  3974 ;;Total ram usage:        4 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    4
  3977 ;; This function calls:
  3978 ;;		___ftpack
  3979 ;; This function is called by:
  3980 ;;		_util_getTemperature
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text12
  3985  003980                     __ptext12:
  3986                           	opt stack 0
  3987  003980                     ___awtoft:
  3988                           	opt stack 24
  3989                           
  3990                           ;incstack = 0
  3991  003980  0E00               	movlw	0
  3992  003982  6E25               	movwf	___awtoft@sign,c
  3993  003984  0100               	movlb	0	; () banked
  3994  003986  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
  3995  003988  D007               	goto	l5856
  3996                           
  3997                           ; BSR set to: 0
  3998  00398A  0100               	movlb	0	; () banked
  3999  00398C  6D76               	negf	___awtoft@c& (0+255),b
  4000  00398E  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
  4001  003990  B0D8               	btfsc	status,0,c
  4002  003992  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
  4003                           
  4004                           ; BSR set to: 0
  4005  003994  0E01               	movlw	1
  4006  003996  6E25               	movwf	___awtoft@sign,c
  4007  003998                     l5856:
  4008                           
  4009                           ; BSR set to: 0
  4010  003998  C076  F071         	movff	___awtoft@c,___ftpack@arg
  4011  00399C  C077  F072         	movff	___awtoft@c+1,___ftpack@arg+1
  4012  0039A0  0100               	movlb	0	; () banked
  4013  0039A2  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4014  0039A4  0E8E               	movlw	142
  4015  0039A6  0100               	movlb	0	; () banked
  4016  0039A8  6F74               	movwf	___ftpack@exp& (0+255),b
  4017  0039AA  C025  F075         	movff	___awtoft@sign,___ftpack@sign
  4018  0039AE  EC44  F017         	call	___ftpack	;wreg free
  4019  0039B2  C071  F076         	movff	?___ftpack,?___awtoft
  4020  0039B6  C072  F077         	movff	?___ftpack+1,?___awtoft+1
  4021  0039BA  C073  F078         	movff	?___ftpack+2,?___awtoft+2
  4022  0039BE  0012               	return	
  4023  0039C0                     __end_of___awtoft:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           postinc0	equ	0xFEE
  4030                           wreg	equ	0xFE8
  4031                           postdec1	equ	0xFE5
  4032                           fsr1l	equ	0xFE1
  4033                           postinc2	equ	0xFDE
  4034                           postdec2	equ	0xFDD
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _util_getSolarCurrent *****************
  4040 ;; Defined at:
  4041 ;;		line 52 in file "easat2_util_inputs.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  solarCurrent    3   68[BANK0 ] float 
  4046 ;;  value           3   65[BANK0 ] float 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2   63[BANK0 ] int 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         0       2       0       0       0       0       0
  4057 ;;      Locals:         0       6       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0
  4059 ;;      Totals:         0       8       0       0       0       0       0
  4060 ;;Total ram usage:        8 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    5
  4063 ;; This function calls:
  4064 ;;		___ftmul
  4065 ;;		___fttol
  4066 ;;		___lwtoft
  4067 ;; This function is called by:
  4068 ;;		_main_loop
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text13
  4073  002F7C                     __ptext13:
  4074                           	opt stack 0
  4075  002F7C                     _util_getSolarCurrent:
  4076                           	opt stack 24
  4077                           
  4078                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4079                           
  4080                           ;incstack = 0
  4081  002F7C  0E00               	movlw	0
  4082  002F7E  0100               	movlb	0	; () banked
  4083  002F80  6FA1               	movwf	util_getSolarCurrent@value& (0+255),b
  4084  002F82  0E00               	movlw	0
  4085  002F84  0100               	movlb	0	; () banked
  4086  002F86  6FA2               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4087  002F88  0E00               	movlw	0
  4088  002F8A  0100               	movlb	0	; () banked
  4089  002F8C  6FA3               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4090  002F8E  0E00               	movlw	0
  4091  002F90  0100               	movlb	0	; () banked
  4092  002F92  6FA4               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4093  002F94  0E00               	movlw	0
  4094  002F96  0100               	movlb	0	; () banked
  4095  002F98  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4096  002F9A  0E00               	movlw	0
  4097  002F9C  0100               	movlb	0	; () banked
  4098  002F9E  6FA6               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4102  002FA0  84C2               	bsf	4034,2,c	;volatile
  4103  002FA2  96C2               	bcf	4034,3,c	;volatile
  4104  002FA4  98C2               	bcf	4034,4,c	;volatile
  4105  002FA6  9AC2               	bcf	4034,5,c	;volatile
  4106  002FA8  9CC2               	bcf	4034,6,c	;volatile
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4110  002FAA  80C2               	bsf	4034,0,c	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4114  002FAC  9C9E               	bcf	3998,6,c	;volatile
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4118  002FAE  82C2               	bsf	4034,1,c	;volatile
  4119  002FB0                     l110:
  4120  002FB0  AC9E               	btfss	3998,6,c	;volatile
  4121  002FB2  D7FE               	goto	l110
  4122                           
  4123                           ;easat2_util_inputs.c: 63: value = ADRES;
  4124  002FB4  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4125  002FB8  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4126  002FBC  ECF5  F01D         	call	___lwtoft	;wreg free
  4127  002FC0  C076  F0A1         	movff	?___lwtoft,util_getSolarCurrent@value
  4128  002FC4  C077  F0A2         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4129  002FC8  C078  F0A3         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4130                           
  4131                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4132  002FCC  9C9E               	bcf	3998,6,c	;volatile
  4133                           
  4134                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4135  002FCE  90C2               	bcf	4034,0,c	;volatile
  4136                           
  4137                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4138  002FD0  C0A1  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4139  002FD4  C0A2  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4140  002FD8  C0A3  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4141  002FDC  0E33               	movlw	51
  4142  002FDE  0100               	movlb	0	; () banked
  4143  002FE0  6F80               	movwf	___ftmul@f2& (0+255),b
  4144  002FE2  0E03               	movlw	3
  4145  002FE4  0100               	movlb	0	; () banked
  4146  002FE6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4147  002FE8  0E3B               	movlw	59
  4148  002FEA  0100               	movlb	0	; () banked
  4149  002FEC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4150  002FEE  ECD0  F014         	call	___ftmul	;wreg free
  4151  002FF2  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4152  002FF6  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4153  002FFA  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4154                           
  4155                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4156  002FFE  C0A4  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4157  003002  C0A5  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4158  003006  C0A6  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4159  00300A  0E00               	movlw	0
  4160  00300C  0100               	movlb	0	; () banked
  4161  00300E  6F80               	movwf	___ftmul@f2& (0+255),b
  4162  003010  0E80               	movlw	128
  4163  003012  0100               	movlb	0	; () banked
  4164  003014  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4165  003016  0E3F               	movlw	63
  4166  003018  0100               	movlb	0	; () banked
  4167  00301A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4168  00301C  ECD0  F014         	call	___ftmul	;wreg free
  4169  003020  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4170  003024  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4171  003028  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4172                           
  4173                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4174  00302C  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4175  003030  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4176  003034  C0A6  F092         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4177  003038  EC79  F015         	call	___fttol	;wreg free
  4178  00303C  C090  F09F         	movff	?___fttol,?_util_getSolarCurrent
  4179  003040  C091  F0A0         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4180  003044  0012               	return	
  4181  003046                     __end_of_util_getSolarCurrent:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           postdec1	equ	0xFE5
  4190                           fsr1l	equ	0xFE1
  4191                           postinc2	equ	0xFDE
  4192                           postdec2	equ	0xFDD
  4193                           fsr2h	equ	0xFDA
  4194                           fsr2l	equ	0xFD9
  4195                           status	equ	0xFD8
  4196                           
  4197 ;; *************** function _util_getBatteryVoltage *****************
  4198 ;; Defined at:
  4199 ;;		line 19 in file "easat2_util_inputs.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;		None
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  voltage         3   47[BANK0 ] float 
  4204 ;;  value           3   44[BANK0 ] float 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  3   41[BANK0 ] float 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4214 ;;      Params:         0       3       0       0       0       0       0
  4215 ;;      Locals:         0       6       0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0
  4217 ;;      Totals:         0       9       0       0       0       0       0
  4218 ;;Total ram usage:        9 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    5
  4221 ;; This function calls:
  4222 ;;		___ftmul
  4223 ;;		___lwtoft
  4224 ;; This function is called by:
  4225 ;;		_main_loop
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text14
  4230  003110                     __ptext14:
  4231                           	opt stack 0
  4232  003110                     _util_getBatteryVoltage:
  4233                           	opt stack 24
  4234                           
  4235                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4236                           
  4237                           ;incstack = 0
  4238  003110  0E00               	movlw	0
  4239  003112  0100               	movlb	0	; () banked
  4240  003114  6F8C               	movwf	util_getBatteryVoltage@value& (0+255),b
  4241  003116  0E00               	movlw	0
  4242  003118  0100               	movlb	0	; () banked
  4243  00311A  6F8D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4244  00311C  0E00               	movlw	0
  4245  00311E  0100               	movlb	0	; () banked
  4246  003120  6F8E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4247  003122  0E00               	movlw	0
  4248  003124  0100               	movlb	0	; () banked
  4249  003126  6F8F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4250  003128  0E00               	movlw	0
  4251  00312A  0100               	movlb	0	; () banked
  4252  00312C  6F90               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4253  00312E  0E00               	movlw	0
  4254  003130  0100               	movlb	0	; () banked
  4255  003132  6F91               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4259  003134  94C2               	bcf	4034,2,c	;volatile
  4260  003136  96C2               	bcf	4034,3,c	;volatile
  4261  003138  98C2               	bcf	4034,4,c	;volatile
  4262  00313A  9AC2               	bcf	4034,5,c	;volatile
  4263  00313C  9CC2               	bcf	4034,6,c	;volatile
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4267  00313E  80C2               	bsf	4034,0,c	;volatile
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4271  003140  9C9E               	bcf	3998,6,c	;volatile
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4275  003142  82C2               	bsf	4034,1,c	;volatile
  4276  003144                     l104:
  4277  003144  AC9E               	btfss	3998,6,c	;volatile
  4278  003146  D7FE               	goto	l104
  4279                           
  4280                           ;easat2_util_inputs.c: 30: value = ADRES;
  4281  003148  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4282  00314C  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4283  003150  ECF5  F01D         	call	___lwtoft	;wreg free
  4284  003154  C076  F08C         	movff	?___lwtoft,util_getBatteryVoltage@value
  4285  003158  C077  F08D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4286  00315C  C078  F08E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4287                           
  4288                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4289  003160  9C9E               	bcf	3998,6,c	;volatile
  4290                           
  4291                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4292  003162  90C2               	bcf	4034,0,c	;volatile
  4293                           
  4294                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4295  003164  C08C  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4296  003168  C08D  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4297  00316C  C08E  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4298  003170  0E33               	movlw	51
  4299  003172  0100               	movlb	0	; () banked
  4300  003174  6F80               	movwf	___ftmul@f2& (0+255),b
  4301  003176  0E03               	movlw	3
  4302  003178  0100               	movlb	0	; () banked
  4303  00317A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4304  00317C  0E3B               	movlw	59
  4305  00317E  0100               	movlb	0	; () banked
  4306  003180  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4307  003182  ECD0  F014         	call	___ftmul	;wreg free
  4308  003186  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4309  00318A  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4310  00318E  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4311                           
  4312                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4313  003192  C08F  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4314  003196  C090  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4315  00319A  C091  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4316  00319E  0E66               	movlw	102
  4317  0031A0  0100               	movlb	0	; () banked
  4318  0031A2  6F80               	movwf	___ftmul@f2& (0+255),b
  4319  0031A4  0EB6               	movlw	182
  4320  0031A6  0100               	movlb	0	; () banked
  4321  0031A8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4322  0031AA  0E40               	movlw	64
  4323  0031AC  0100               	movlb	0	; () banked
  4324  0031AE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4325  0031B0  ECD0  F014         	call	___ftmul	;wreg free
  4326  0031B4  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4327  0031B8  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4328  0031BC  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4329                           
  4330                           ;easat2_util_inputs.c: 46: return voltage;
  4331  0031C0  C08F  F089         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4332  0031C4  C090  F08A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4333  0031C8  C091  F08B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4334  0031CC  0012               	return	
  4335  0031CE                     __end_of_util_getBatteryVoltage:
  4336                           	opt stack 0
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           postinc0	equ	0xFEE
  4342                           wreg	equ	0xFE8
  4343                           postdec1	equ	0xFE5
  4344                           fsr1l	equ	0xFE1
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _util_getBatteryCurrent *****************
  4352 ;; Defined at:
  4353 ;;		line 85 in file "easat2_util_inputs.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  batteryCurre    3   68[BANK0 ] float 
  4358 ;;  value           3   65[BANK0 ] float 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2   63[BANK0 ] int 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       2       0       0       0       0       0
  4369 ;;      Locals:         0       6       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0
  4371 ;;      Totals:         0       8       0       0       0       0       0
  4372 ;;Total ram usage:        8 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    5
  4375 ;; This function calls:
  4376 ;;		___ftmul
  4377 ;;		___fttol
  4378 ;;		___lwtoft
  4379 ;; This function is called by:
  4380 ;;		_main_loop
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text15
  4385  003046                     __ptext15:
  4386                           	opt stack 0
  4387  003046                     _util_getBatteryCurrent:
  4388                           	opt stack 24
  4389                           
  4390                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4391                           
  4392                           ;incstack = 0
  4393  003046  0E00               	movlw	0
  4394  003048  0100               	movlb	0	; () banked
  4395  00304A  6FA1               	movwf	util_getBatteryCurrent@value& (0+255),b
  4396  00304C  0E00               	movlw	0
  4397  00304E  0100               	movlb	0	; () banked
  4398  003050  6FA2               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4399  003052  0E00               	movlw	0
  4400  003054  0100               	movlb	0	; () banked
  4401  003056  6FA3               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4402  003058  0E00               	movlw	0
  4403  00305A  0100               	movlb	0	; () banked
  4404  00305C  6FA4               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4405  00305E  0E00               	movlw	0
  4406  003060  0100               	movlb	0	; () banked
  4407  003062  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4408  003064  0E00               	movlw	0
  4409  003066  0100               	movlb	0	; () banked
  4410  003068  6FA6               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4414  00306A  94C2               	bcf	4034,2,c	;volatile
  4415  00306C  96C2               	bcf	4034,3,c	;volatile
  4416  00306E  88C2               	bsf	4034,4,c	;volatile
  4417  003070  8AC2               	bsf	4034,5,c	;volatile
  4418  003072  9CC2               	bcf	4034,6,c	;volatile
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4422  003074  80C2               	bsf	4034,0,c	;volatile
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4426  003076  9C9E               	bcf	3998,6,c	;volatile
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4430  003078  82C2               	bsf	4034,1,c	;volatile
  4431  00307A                     l116:
  4432  00307A  AC9E               	btfss	3998,6,c	;volatile
  4433  00307C  D7FE               	goto	l116
  4434                           
  4435                           ;easat2_util_inputs.c: 96: value = ADRES;
  4436  00307E  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4437  003082  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4438  003086  ECF5  F01D         	call	___lwtoft	;wreg free
  4439  00308A  C076  F0A1         	movff	?___lwtoft,util_getBatteryCurrent@value
  4440  00308E  C077  F0A2         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4441  003092  C078  F0A3         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4442                           
  4443                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4444  003096  9C9E               	bcf	3998,6,c	;volatile
  4445                           
  4446                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4447  003098  90C2               	bcf	4034,0,c	;volatile
  4448                           
  4449                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4450  00309A  C0A1  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4451  00309E  C0A2  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4452  0030A2  C0A3  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4453  0030A6  0E33               	movlw	51
  4454  0030A8  0100               	movlb	0	; () banked
  4455  0030AA  6F80               	movwf	___ftmul@f2& (0+255),b
  4456  0030AC  0E03               	movlw	3
  4457  0030AE  0100               	movlb	0	; () banked
  4458  0030B0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4459  0030B2  0E3B               	movlw	59
  4460  0030B4  0100               	movlb	0	; () banked
  4461  0030B6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4462  0030B8  ECD0  F014         	call	___ftmul	;wreg free
  4463  0030BC  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4464  0030C0  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4465  0030C4  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4466                           
  4467                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4468  0030C8  C0A4  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4469  0030CC  C0A5  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4470  0030D0  C0A6  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4471  0030D4  0E00               	movlw	0
  4472  0030D6  0100               	movlb	0	; () banked
  4473  0030D8  6F80               	movwf	___ftmul@f2& (0+255),b
  4474  0030DA  0E80               	movlw	128
  4475  0030DC  0100               	movlb	0	; () banked
  4476  0030DE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4477  0030E0  0E3F               	movlw	63
  4478  0030E2  0100               	movlb	0	; () banked
  4479  0030E4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4480  0030E6  ECD0  F014         	call	___ftmul	;wreg free
  4481  0030EA  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4482  0030EE  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4483  0030F2  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4484                           
  4485                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4486  0030F6  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4487  0030FA  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4488  0030FE  C0A6  F092         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4489  003102  EC79  F015         	call	___fttol	;wreg free
  4490  003106  C090  F09F         	movff	?___fttol,?_util_getBatteryCurrent
  4491  00310A  C091  F0A0         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4492  00310E  0012               	return	
  4493  003110                     __end_of_util_getBatteryCurrent:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           postdec1	equ	0xFE5
  4502                           fsr1l	equ	0xFE1
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function ___lwtoft *****************
  4510 ;; Defined at:
  4511 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  c               2   22[BANK0 ] unsigned int 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  3   22[BANK0 ] float 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4525 ;;      Params:         0       3       0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0
  4528 ;;      Totals:         0       3       0       0       0       0       0
  4529 ;;Total ram usage:        3 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    4
  4532 ;; This function calls:
  4533 ;;		___ftpack
  4534 ;; This function is called by:
  4535 ;;		_util_getBatteryVoltage
  4536 ;;		_util_getSolarCurrent
  4537 ;;		_util_getBatteryCurrent
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text16
  4542  003BEA                     __ptext16:
  4543                           	opt stack 0
  4544  003BEA                     ___lwtoft:
  4545                           	opt stack 24
  4546                           
  4547                           ;incstack = 0
  4548  003BEA  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  4549  003BEE  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  4550  003BF2  0100               	movlb	0	; () banked
  4551  003BF4  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4552  003BF6  0E8E               	movlw	142
  4553  003BF8  0100               	movlb	0	; () banked
  4554  003BFA  6F74               	movwf	___ftpack@exp& (0+255),b
  4555  003BFC  0E00               	movlw	0
  4556  003BFE  0100               	movlb	0	; () banked
  4557  003C00  6F75               	movwf	___ftpack@sign& (0+255),b
  4558  003C02  EC44  F017         	call	___ftpack	;wreg free
  4559  003C06  C071  F076         	movff	?___ftpack,?___lwtoft
  4560  003C0A  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  4561  003C0E  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  4562  003C12  0012               	return	
  4563  003C14                     __end_of___lwtoft:
  4564                           	opt stack 0
  4565                           tblptru	equ	0xFF8
  4566                           tblptrh	equ	0xFF7
  4567                           tblptrl	equ	0xFF6
  4568                           tablat	equ	0xFF5
  4569                           postinc0	equ	0xFEE
  4570                           wreg	equ	0xFE8
  4571                           postdec1	equ	0xFE5
  4572                           fsr1l	equ	0xFE1
  4573                           postinc2	equ	0xFDE
  4574                           postdec2	equ	0xFDD
  4575                           fsr2h	equ	0xFDA
  4576                           fsr2l	equ	0xFD9
  4577                           status	equ	0xFD8
  4578                           
  4579 ;; *************** function _util_beacon_transmission *****************
  4580 ;; Defined at:
  4581 ;;		line 21 in file "easat2_util_transmission.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  battery_volt    3  114[BANK0 ] float 
  4584 ;;  solar_curren    2  117[BANK0 ] int 
  4585 ;;  battery_curr    2  119[BANK0 ] int 
  4586 ;;  temperature     3  121[BANK0 ] float 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  i               2  192[BANK1 ] int 
  4589 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4590 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4600 ;;      Params:         0      10       0       0       0       0       0
  4601 ;;      Locals:         0       0     194       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0
  4603 ;;      Totals:         0      10     194       0       0       0       0
  4604 ;;Total ram usage:      204 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    8
  4607 ;; This function calls:
  4608 ;;		_memset
  4609 ;;		_sprintf
  4610 ;;		_strcat
  4611 ;;		_strcpy
  4612 ;;		_strlen
  4613 ;;		_util_transmit_letter
  4614 ;; This function is called by:
  4615 ;;		_main_loop
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text17
  4620  002D76                     __ptext17:
  4621                           	opt stack 0
  4622  002D76                     _util_beacon_transmission:
  4623                           	opt stack 21
  4624                           
  4625                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4626                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4627                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4628                           
  4629                           ;incstack = 0
  4630  002D76  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4631  002D78  0100               	movlb	0	; () banked
  4632  002D7A  6F71               	movwf	memset@p1& (0+255),b
  4633  002D7C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4634  002D7E  0100               	movlb	0	; () banked
  4635  002D80  6F72               	movwf	(memset@p1+1)& (0+255),b
  4636  002D82  0E00               	movlw	0
  4637  002D84  0100               	movlb	0	; () banked
  4638  002D86  6F74               	movwf	(memset@c+1)& (0+255),b
  4639  002D88  0E00               	movlw	0
  4640  002D8A  6F73               	movwf	memset@c& (0+255),b
  4641  002D8C  0E00               	movlw	0
  4642  002D8E  0100               	movlb	0	; () banked
  4643  002D90  6F76               	movwf	(memset@n+1)& (0+255),b
  4644  002D92  0E80               	movlw	128
  4645  002D94  6F75               	movwf	memset@n& (0+255),b
  4646  002D96  EC94  F01D         	call	_memset	;wreg free
  4647                           
  4648                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4649  002D9A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4650  002D9C  0100               	movlb	0	; () banked
  4651  002D9E  6F71               	movwf	strcpy@to& (0+255),b
  4652  002DA0  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4653  002DA2  0100               	movlb	0	; () banked
  4654  002DA4  6F72               	movwf	(strcpy@to+1)& (0+255),b
  4655  002DA6  0E9E               	movlw	low STR_1
  4656  002DA8  0100               	movlb	0	; () banked
  4657  002DAA  6F73               	movwf	strcpy@from& (0+255),b
  4658  002DAC  0E7F               	movlw	high STR_1
  4659  002DAE  0100               	movlb	0	; () banked
  4660  002DB0  6F74               	movwf	(strcpy@from+1)& (0+255),b
  4661  002DB2  EC62  F01D         	call	_strcpy	;wreg free
  4662                           
  4663                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4664  002DB6  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4665  002DB8  0100               	movlb	0	; () banked
  4666  002DBA  6F71               	movwf	memset@p1& (0+255),b
  4667  002DBC  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4668  002DBE  0100               	movlb	0	; () banked
  4669  002DC0  6F72               	movwf	(memset@p1+1)& (0+255),b
  4670  002DC2  0E00               	movlw	0
  4671  002DC4  0100               	movlb	0	; () banked
  4672  002DC6  6F74               	movwf	(memset@c+1)& (0+255),b
  4673  002DC8  0E00               	movlw	0
  4674  002DCA  6F73               	movwf	memset@c& (0+255),b
  4675  002DCC  0E00               	movlw	0
  4676  002DCE  0100               	movlb	0	; () banked
  4677  002DD0  6F76               	movwf	(memset@n+1)& (0+255),b
  4678  002DD2  0E40               	movlw	64
  4679  002DD4  6F75               	movwf	memset@n& (0+255),b
  4680  002DD6  EC94  F01D         	call	_memset	;wreg free
  4681                           
  4682                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4683                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4684  002DDA  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4685  002DDC  0100               	movlb	0	; () banked
  4686  002DDE  6FA5               	movwf	sprintf@sp& (0+255),b
  4687  002DE0  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4688  002DE2  0100               	movlb	0	; () banked
  4689  002DE4  6FA6               	movwf	(sprintf@sp+1)& (0+255),b
  4690  002DE6  0E6B               	movlw	low STR_2
  4691  002DE8  0100               	movlb	0	; () banked
  4692  002DEA  6FA7               	movwf	sprintf@f& (0+255),b
  4693  002DEC  0E7F               	movlw	high STR_2
  4694  002DEE  0100               	movlb	0	; () banked
  4695  002DF0  6FA8               	movwf	(sprintf@f+1)& (0+255),b
  4696  002DF2  C0D9  F0A9         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4697  002DF6  C0DA  F0AA         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4698  002DFA  C0DB  F0AB         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4699  002DFE  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4700  002E02  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4701  002E06  C0D4  F0AE         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4702  002E0A  C0D5  F0AF         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4703  002E0E  C0D6  F0B0         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4704  002E12  C0D7  F0B1         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4705  002E16  C0D8  F0B2         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4706  002E1A  EC55  F000         	call	_sprintf	;wreg free
  4707                           
  4708                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4709  002E1E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4710  002E20  0100               	movlb	0	; () banked
  4711  002E22  6F71               	movwf	strcat@to& (0+255),b
  4712  002E24  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4713  002E26  0100               	movlb	0	; () banked
  4714  002E28  6F72               	movwf	(strcat@to+1)& (0+255),b
  4715  002E2A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4716  002E2C  0100               	movlb	0	; () banked
  4717  002E2E  6F73               	movwf	strcat@from& (0+255),b
  4718  002E30  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4719  002E32  0100               	movlb	0	; () banked
  4720  002E34  6F74               	movwf	(strcat@from+1)& (0+255),b
  4721  002E36  EC5C  F01C         	call	_strcat	;wreg free
  4722                           
  4723                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4724  002E3A  0E00               	movlw	0
  4725  002E3C  0101               	movlb	1	; () banked
  4726  002E3E  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4727  002E40  0E00               	movlw	0
  4728  002E42  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4729  002E44  D00E               	goto	l6076
  4730  002E46                     l6072:
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4734  002E46  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4735  002E48  0101               	movlb	1	; () banked
  4736  002E4A  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4737  002E4C  6ED9               	movwf	fsr2l,c
  4738  002E4E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4739  002E50  0101               	movlb	1	; () banked
  4740  002E52  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4741  002E54  6EDA               	movwf	fsr2h,c
  4742  002E56  50DF               	movf	indf2,w,c
  4743  002E58  EC4C  F00C         	call	_util_transmit_letter
  4744  002E5C  0101               	movlb	1	; () banked
  4745  002E5E  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4746  002E60  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4747  002E62                     l6076:
  4748                           
  4749                           ; BSR set to: 1
  4750  002E62  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4751  002E64  0100               	movlb	0	; () banked
  4752  002E66  6F71               	movwf	strlen@s& (0+255),b
  4753  002E68  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4754  002E6A  0100               	movlb	0	; () banked
  4755  002E6C  6F72               	movwf	(strlen@s+1)& (0+255),b
  4756  002E6E  ECBE  F01B         	call	_strlen	;wreg free
  4757  002E72  0100               	movlb	0	; () banked
  4758  002E74  5171               	movf	?_strlen& (0+255),w,b
  4759  002E76  0101               	movlb	1	; () banked
  4760  002E78  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4761  002E7A  0100               	movlb	0	; () banked
  4762  002E7C  5172               	movf	(?_strlen+1)& (0+255),w,b
  4763  002E7E  0101               	movlb	1	; () banked
  4764  002E80  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4765  002E82  B0D8               	btfsc	status,0,c
  4766  002E84  0012               	return	
  4767  002E86  D7DF               	goto	l6072
  4768  002E88                     __end_of_util_beacon_transmission:
  4769                           	opt stack 0
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           postdec1	equ	0xFE5
  4777                           fsr1l	equ	0xFE1
  4778                           indf2	equ	0xFDF
  4779                           postinc2	equ	0xFDE
  4780                           postdec2	equ	0xFDD
  4781                           fsr2h	equ	0xFDA
  4782                           fsr2l	equ	0xFD9
  4783                           status	equ	0xFD8
  4784                           
  4785 ;; *************** function _util_transmit_letter *****************
  4786 ;; Defined at:
  4787 ;;		line 52 in file "easat2_util_transmission.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  letter          1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  letter          1   42[COMRAM] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4801 ;;      Params:         0       0       0       0       0       0       0
  4802 ;;      Locals:         1       0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0
  4804 ;;      Totals:         1       0       0       0       0       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    7
  4808 ;; This function calls:
  4809 ;;		_util_transmit_morse_sequence
  4810 ;;		_util_transmit_space_between_letters
  4811 ;;		_util_transmit_space_between_words
  4812 ;; This function is called by:
  4813 ;;		_util_beacon_transmission
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text18
  4818  001898                     __ptext18:
  4819                           	opt stack 0
  4820  001898                     _util_transmit_letter:
  4821                           	opt stack 21
  4822                           
  4823                           ; BSR set to: 1
  4824                           ;incstack = 0
  4825                           ;util_transmit_letter@letter stored from wreg
  4826  001898  6E2B               	movwf	util_transmit_letter@letter,c
  4827                           
  4828                           ;easat2_util_transmission.c: 54: switch (letter) {
  4829  00189A  D174               	goto	l5798
  4830  00189C                     l5712:
  4831                           
  4832                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4833  00189C  0EE8               	movlw	low (STR_19+2)
  4834  00189E  0100               	movlb	0	; () banked
  4835  0018A0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4836  0018A2  0E7F               	movlw	high (STR_19+2)
  4837  0018A4  0100               	movlb	0	; () banked
  4838  0018A6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4839  0018A8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4840                           
  4841                           ;easat2_util_transmission.c: 61: break;
  4842  0018AC  D1EA               	goto	l5800
  4843  0018AE                     l5714:
  4844                           
  4845                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4846  0018AE  0ED0               	movlw	low (STR_36+1)
  4847  0018B0  0100               	movlb	0	; () banked
  4848  0018B2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4849  0018B4  0E7F               	movlw	high (STR_36+1)
  4850  0018B6  0100               	movlb	0	; () banked
  4851  0018B8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4852  0018BA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4853                           
  4854                           ;easat2_util_transmission.c: 64: break;
  4855  0018BE  D1E1               	goto	l5800
  4856  0018C0                     l5716:
  4857                           
  4858                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4859  0018C0  0EF5               	movlw	low STR_5
  4860  0018C2  0100               	movlb	0	; () banked
  4861  0018C4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4862  0018C6  0E7F               	movlw	high STR_5
  4863  0018C8  0100               	movlb	0	; () banked
  4864  0018CA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4865  0018CC  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4866                           
  4867                           ;easat2_util_transmission.c: 67: break;
  4868  0018D0  D1D8               	goto	l5800
  4869  0018D2                     l5718:
  4870                           
  4871                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4872  0018D2  0ECB               	movlw	low (STR_37+2)
  4873  0018D4  0100               	movlb	0	; () banked
  4874  0018D6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4875  0018D8  0E7F               	movlw	high (STR_37+2)
  4876  0018DA  0100               	movlb	0	; () banked
  4877  0018DC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4878  0018DE  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4879                           
  4880                           ;easat2_util_transmission.c: 70: break;
  4881  0018E2  D1CF               	goto	l5800
  4882  0018E4                     l5720:
  4883                           
  4884                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4885  0018E4  0EC1               	movlw	low (STR_38+4)
  4886  0018E6  0100               	movlb	0	; () banked
  4887  0018E8  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4888  0018EA  0E7F               	movlw	high (STR_38+4)
  4889  0018EC  0100               	movlb	0	; () banked
  4890  0018EE  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4891  0018F0  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4892                           
  4893                           ;easat2_util_transmission.c: 73: break;
  4894  0018F4  D1C6               	goto	l5800
  4895  0018F6                     l5722:
  4896                           
  4897                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4898  0018F6  0EC4               	movlw	low (STR_41+1)
  4899  0018F8  0100               	movlb	0	; () banked
  4900  0018FA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4901  0018FC  0E7F               	movlw	high (STR_41+1)
  4902  0018FE  0100               	movlb	0	; () banked
  4903  001900  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4904  001902  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4905                           
  4906                           ;easat2_util_transmission.c: 76: break;
  4907  001906  D1BD               	goto	l5800
  4908  001908                     l5724:
  4909                           
  4910                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4911  001908  0EBF               	movlw	low (STR_38+2)
  4912  00190A  0100               	movlb	0	; () banked
  4913  00190C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4914  00190E  0E7F               	movlw	high (STR_38+2)
  4915  001910  0100               	movlb	0	; () banked
  4916  001912  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4917  001914  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4918                           
  4919                           ;easat2_util_transmission.c: 79: break;
  4920  001918  D1B4               	goto	l5800
  4921  00191A                     l5726:
  4922                           
  4923                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4924  00191A  0ED6               	movlw	low (STR_35+1)
  4925  00191C  0100               	movlb	0	; () banked
  4926  00191E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4927  001920  0E7F               	movlw	high (STR_35+1)
  4928  001922  0100               	movlb	0	; () banked
  4929  001924  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4930  001926  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4931                           
  4932                           ;easat2_util_transmission.c: 82: break;
  4933  00192A  D1AB               	goto	l5800
  4934  00192C                     l5728:
  4935                           
  4936                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4937  00192C  0ECC               	movlw	low (STR_37+3)
  4938  00192E  0100               	movlb	0	; () banked
  4939  001930  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4940  001932  0E7F               	movlw	high (STR_37+3)
  4941  001934  0100               	movlb	0	; () banked
  4942  001936  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4943  001938  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4944                           
  4945                           ;easat2_util_transmission.c: 85: break;
  4946  00193C  D1A2               	goto	l5800
  4947  00193E                     l5730:
  4948                           
  4949                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4950  00193E  0EB2               	movlw	low (STR_31+1)
  4951  001940  0100               	movlb	0	; () banked
  4952  001942  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4953  001944  0E7F               	movlw	high (STR_31+1)
  4954  001946  0100               	movlb	0	; () banked
  4955  001948  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4956  00194A  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4957                           
  4958                           ;easat2_util_transmission.c: 88: break;
  4959  00194E  D199               	goto	l5800
  4960  001950                     l5732:
  4961                           
  4962                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4963  001950  0EE7               	movlw	low (STR_19+1)
  4964  001952  0100               	movlb	0	; () banked
  4965  001954  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4966  001956  0E7F               	movlw	high (STR_19+1)
  4967  001958  0100               	movlb	0	; () banked
  4968  00195A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4969  00195C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4970                           
  4971                           ;easat2_util_transmission.c: 91: break;
  4972  001960  D190               	goto	l5800
  4973  001962                     l5734:
  4974                           
  4975                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4976  001962  0EFA               	movlw	low STR_14
  4977  001964  0100               	movlb	0	; () banked
  4978  001966  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4979  001968  0E7F               	movlw	high STR_14
  4980  00196A  0100               	movlb	0	; () banked
  4981  00196C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4982  00196E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4983                           
  4984                           ;easat2_util_transmission.c: 94: break;
  4985  001972  D187               	goto	l5800
  4986  001974                     l5736:
  4987                           
  4988                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4989  001974  0EA8               	movlw	low (STR_29+3)
  4990  001976  0100               	movlb	0	; () banked
  4991  001978  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4992  00197A  0E7F               	movlw	high (STR_29+3)
  4993  00197C  0100               	movlb	0	; () banked
  4994  00197E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4995  001980  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4996                           
  4997                           ;easat2_util_transmission.c: 97: break;
  4998  001984  D17E               	goto	l5800
  4999  001986                     l5738:
  5000                           
  5001                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  5002  001986  0EC0               	movlw	low (STR_38+3)
  5003  001988  0100               	movlb	0	; () banked
  5004  00198A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5005  00198C  0E7F               	movlw	high (STR_38+3)
  5006  00198E  0100               	movlb	0	; () banked
  5007  001990  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5008  001992  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5009                           
  5010                           ;easat2_util_transmission.c: 100: break;
  5011  001996  D175               	goto	l5800
  5012  001998                     l5740:
  5013                           
  5014                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  5015  001998  0EA7               	movlw	low (STR_29+2)
  5016  00199A  0100               	movlb	0	; () banked
  5017  00199C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5018  00199E  0E7F               	movlw	high (STR_29+2)
  5019  0019A0  0100               	movlb	0	; () banked
  5020  0019A2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5021  0019A4  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5022                           
  5023                           ;easat2_util_transmission.c: 103: break;
  5024  0019A8  D16C               	goto	l5800
  5025  0019AA                     l5742:
  5026                           
  5027                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  5028  0019AA  0EF0               	movlw	low STR_18
  5029  0019AC  0100               	movlb	0	; () banked
  5030  0019AE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5031  0019B0  0E7F               	movlw	high STR_18
  5032  0019B2  0100               	movlb	0	; () banked
  5033  0019B4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5034  0019B6  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5035                           
  5036                           ;easat2_util_transmission.c: 106: break;
  5037  0019BA  D163               	goto	l5800
  5038  0019BC                     l5744:
  5039                           
  5040                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  5041  0019BC  0EE6               	movlw	low STR_19
  5042  0019BE  0100               	movlb	0	; () banked
  5043  0019C0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5044  0019C2  0E7F               	movlw	high STR_19
  5045  0019C4  0100               	movlb	0	; () banked
  5046  0019C6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5047  0019C8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5048                           
  5049                           ;easat2_util_transmission.c: 109: break;
  5050  0019CC  D15A               	goto	l5800
  5051  0019CE                     l5746:
  5052                           
  5053                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  5054  0019CE  0EF6               	movlw	low (STR_5+1)
  5055  0019D0  0100               	movlb	0	; () banked
  5056  0019D2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5057  0019D4  0E7F               	movlw	high (STR_5+1)
  5058  0019D6  0100               	movlb	0	; () banked
  5059  0019D8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5060  0019DA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5061                           
  5062                           ;easat2_util_transmission.c: 112: break;
  5063  0019DE  D151               	goto	l5800
  5064  0019E0                     l5748:
  5065                           
  5066                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  5067  0019E0  0ED1               	movlw	low (STR_36+2)
  5068  0019E2  0100               	movlb	0	; () banked
  5069  0019E4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5070  0019E6  0E7F               	movlw	high (STR_36+2)
  5071  0019E8  0100               	movlb	0	; () banked
  5072  0019EA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5073  0019EC  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5074                           
  5075                           ;easat2_util_transmission.c: 115: break;
  5076  0019F0  D148               	goto	l5800
  5077  0019F2                     l5750:
  5078                           
  5079                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  5080  0019F2  0EA9               	movlw	low (STR_29+4)
  5081  0019F4  0100               	movlb	0	; () banked
  5082  0019F6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5083  0019F8  0E7F               	movlw	high (STR_29+4)
  5084  0019FA  0100               	movlb	0	; () banked
  5085  0019FC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5086  0019FE  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5087                           
  5088                           ;easat2_util_transmission.c: 118: break;
  5089  001A02  D13F               	goto	l5800
  5090  001A04                     l5752:
  5091                           
  5092                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  5093  001A04  0EEC               	movlw	low (STR_26+1)
  5094  001A06  0100               	movlb	0	; () banked
  5095  001A08  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5096  001A0A  0E7F               	movlw	high (STR_26+1)
  5097  001A0C  0100               	movlb	0	; () banked
  5098  001A0E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5099  001A10  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5100                           
  5101                           ;easat2_util_transmission.c: 121: break;
  5102  001A14  D136               	goto	l5800
  5103  001A16                     l5754:
  5104                           
  5105                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  5106  001A16  0E92               	movlw	low (STR_43+2)
  5107  001A18  0100               	movlb	0	; () banked
  5108  001A1A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5109  001A1C  0E7F               	movlw	high (STR_43+2)
  5110  001A1E  0100               	movlb	0	; () banked
  5111  001A20  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5112  001A22  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5113                           
  5114                           ;easat2_util_transmission.c: 124: break;
  5115  001A26  D12D               	goto	l5800
  5116  001A28                     l5756:
  5117                           
  5118                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  5119  001A28  0EE2               	movlw	low (STR_27+1)
  5120  001A2A  0100               	movlb	0	; () banked
  5121  001A2C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5122  001A2E  0E7F               	movlw	high (STR_27+1)
  5123  001A30  0100               	movlb	0	; () banked
  5124  001A32  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5125  001A34  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5126                           
  5127                           ;easat2_util_transmission.c: 127: break;
  5128  001A38  D124               	goto	l5800
  5129  001A3A                     l5758:
  5130                           
  5131                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  5132  001A3A  0EEB               	movlw	low STR_26
  5133  001A3C  0100               	movlb	0	; () banked
  5134  001A3E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5135  001A40  0E7F               	movlw	high STR_26
  5136  001A42  0100               	movlb	0	; () banked
  5137  001A44  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5138  001A46  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5139                           
  5140                           ;easat2_util_transmission.c: 130: break;
  5141  001A4A  D11B               	goto	l5800
  5142  001A4C                     l5760:
  5143                           
  5144                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  5145  001A4C  0EE1               	movlw	low STR_27
  5146  001A4E  0100               	movlb	0	; () banked
  5147  001A50  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5148  001A52  0E7F               	movlw	high STR_27
  5149  001A54  0100               	movlb	0	; () banked
  5150  001A56  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5151  001A58  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5152                           
  5153                           ;easat2_util_transmission.c: 133: break;
  5154  001A5C  D112               	goto	l5800
  5155  001A5E                     l5762:
  5156                           
  5157                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  5158  001A5E  0ECA               	movlw	low (STR_37+1)
  5159  001A60  0100               	movlb	0	; () banked
  5160  001A62  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5161  001A64  0E7F               	movlw	high (STR_37+1)
  5162  001A66  0100               	movlb	0	; () banked
  5163  001A68  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5164  001A6A  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5165                           
  5166                           ;easat2_util_transmission.c: 136: break;
  5167  001A6E  D109               	goto	l5800
  5168  001A70                     l5764:
  5169                           
  5170                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  5171  001A70  0EA5               	movlw	low STR_29
  5172  001A72  0100               	movlb	0	; () banked
  5173  001A74  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5174  001A76  0E7F               	movlw	high STR_29
  5175  001A78  0100               	movlb	0	; () banked
  5176  001A7A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5177  001A7C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5178                           
  5179                           ;easat2_util_transmission.c: 139: break;
  5180  001A80  D100               	goto	l5800
  5181  001A82                     l5766:
  5182                           
  5183                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  5184  001A82  0EAB               	movlw	low STR_30
  5185  001A84  0100               	movlb	0	; () banked
  5186  001A86  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5187  001A88  0E7F               	movlw	high STR_30
  5188  001A8A  0100               	movlb	0	; () banked
  5189  001A8C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5190  001A8E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5191                           
  5192                           ;easat2_util_transmission.c: 142: break;
  5193  001A92  D0F7               	goto	l5800
  5194  001A94                     l5768:
  5195                           
  5196                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  5197  001A94  0EB1               	movlw	low STR_31
  5198  001A96  0100               	movlb	0	; () banked
  5199  001A98  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5200  001A9A  0E7F               	movlw	high STR_31
  5201  001A9C  0100               	movlb	0	; () banked
  5202  001A9E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5203  001AA0  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5204                           
  5205                           ;easat2_util_transmission.c: 145: break;
  5206  001AA4  D0EE               	goto	l5800
  5207  001AA6                     l5770:
  5208                           
  5209                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  5210  001AA6  0EB7               	movlw	low STR_32
  5211  001AA8  0100               	movlb	0	; () banked
  5212  001AAA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5213  001AAC  0E7F               	movlw	high STR_32
  5214  001AAE  0100               	movlb	0	; () banked
  5215  001AB0  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5216  001AB2  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5217                           
  5218                           ;easat2_util_transmission.c: 148: break;
  5219  001AB6  D0E5               	goto	l5800
  5220  001AB8                     l5772:
  5221                           
  5222                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  5223  001AB8  0E91               	movlw	low (STR_43+1)
  5224  001ABA  0100               	movlb	0	; () banked
  5225  001ABC  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5226  001ABE  0E7F               	movlw	high (STR_43+1)
  5227  001AC0  0100               	movlb	0	; () banked
  5228  001AC2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5229  001AC4  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5230                           
  5231                           ;easat2_util_transmission.c: 151: break;
  5232  001AC8  D0DC               	goto	l5800
  5233  001ACA                     l5774:
  5234                           
  5235                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  5236  001ACA  0EDB               	movlw	low STR_34
  5237  001ACC  0100               	movlb	0	; () banked
  5238  001ACE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5239  001AD0  0E7F               	movlw	high STR_34
  5240  001AD2  0100               	movlb	0	; () banked
  5241  001AD4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5242  001AD6  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5243                           
  5244                           ;easat2_util_transmission.c: 154: break;
  5245  001ADA  D0D3               	goto	l5800
  5246  001ADC                     l5776:
  5247                           
  5248                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  5249  001ADC  0ED5               	movlw	low STR_35
  5250  001ADE  0100               	movlb	0	; () banked
  5251  001AE0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5252  001AE2  0E7F               	movlw	high STR_35
  5253  001AE4  0100               	movlb	0	; () banked
  5254  001AE6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5255  001AE8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5256                           
  5257                           ;easat2_util_transmission.c: 157: break;
  5258  001AEC  D0CA               	goto	l5800
  5259  001AEE                     l5778:
  5260                           
  5261                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  5262  001AEE  0ECF               	movlw	low STR_36
  5263  001AF0  0100               	movlb	0	; () banked
  5264  001AF2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5265  001AF4  0E7F               	movlw	high STR_36
  5266  001AF6  0100               	movlb	0	; () banked
  5267  001AF8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5268  001AFA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5269                           
  5270                           ;easat2_util_transmission.c: 160: break;
  5271  001AFE  D0C1               	goto	l5800
  5272  001B00                     l5780:
  5273                           
  5274                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  5275  001B00  0EC9               	movlw	low STR_37
  5276  001B02  0100               	movlb	0	; () banked
  5277  001B04  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5278  001B06  0E7F               	movlw	high STR_37
  5279  001B08  0100               	movlb	0	; () banked
  5280  001B0A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5281  001B0C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5282                           
  5283                           ;easat2_util_transmission.c: 163: break;
  5284  001B10  D0B8               	goto	l5800
  5285  001B12                     l5782:
  5286                           
  5287                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  5288  001B12  0EBD               	movlw	low STR_38
  5289  001B14  0100               	movlb	0	; () banked
  5290  001B16  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5291  001B18  0E7F               	movlw	high STR_38
  5292  001B1A  0100               	movlb	0	; () banked
  5293  001B1C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5294  001B1E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5295                           
  5296                           ;easat2_util_transmission.c: 166: break;
  5297  001B22  D0AF               	goto	l5800
  5298  001B24                     l5784:
  5299                           
  5300                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  5301  001B24  0E82               	movlw	low STR_39
  5302  001B26  0100               	movlb	0	; () banked
  5303  001B28  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5304  001B2A  0E7F               	movlw	high STR_39
  5305  001B2C  0100               	movlb	0	; () banked
  5306  001B2E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5307  001B30  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5308                           
  5309                           ;easat2_util_transmission.c: 169: break;
  5310  001B34  D0A6               	goto	l5800
  5311  001B36                     l5786:
  5312                           
  5313                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  5314  001B36  0E97               	movlw	low STR_40
  5315  001B38  0100               	movlb	0	; () banked
  5316  001B3A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5317  001B3C  0E7F               	movlw	high STR_40
  5318  001B3E  0100               	movlb	0	; () banked
  5319  001B40  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5320  001B42  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5321                           
  5322                           ;easat2_util_transmission.c: 172: break;
  5323  001B46  D09D               	goto	l5800
  5324  001B48                     l5788:
  5325                           
  5326                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  5327  001B48  0EC3               	movlw	low STR_41
  5328  001B4A  0100               	movlb	0	; () banked
  5329  001B4C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5330  001B4E  0E7F               	movlw	high STR_41
  5331  001B50  0100               	movlb	0	; () banked
  5332  001B52  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5333  001B54  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5334                           
  5335                           ;easat2_util_transmission.c: 175: break;
  5336  001B58  D094               	goto	l5800
  5337  001B5A                     l5790:
  5338                           
  5339                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  5340  001B5A  0E89               	movlw	low STR_42
  5341  001B5C  0100               	movlb	0	; () banked
  5342  001B5E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5343  001B60  0E7F               	movlw	high STR_42
  5344  001B62  0100               	movlb	0	; () banked
  5345  001B64  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5346  001B66  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5347                           
  5348                           ;easat2_util_transmission.c: 178: break;
  5349  001B6A  D08B               	goto	l5800
  5350  001B6C                     l5792:
  5351                           
  5352                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  5353  001B6C  0E90               	movlw	low STR_43
  5354  001B6E  0100               	movlb	0	; () banked
  5355  001B70  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5356  001B72  0E7F               	movlw	high STR_43
  5357  001B74  0100               	movlb	0	; () banked
  5358  001B76  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5359  001B78  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5360                           
  5361                           ;easat2_util_transmission.c: 181: break;
  5362  001B7C  D082               	goto	l5800
  5363  001B7E                     l5794:
  5364                           
  5365                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  5366  001B7E  EC3D  F01E         	call	_util_transmit_space_between_words	;wreg free
  5367                           
  5368                           ;easat2_util_transmission.c: 188: }
  5369                           
  5370                           ;easat2_util_transmission.c: 186: break;
  5371                           
  5372                           ;easat2_util_transmission.c: 185: default:
  5373                           
  5374                           ;easat2_util_transmission.c: 184: break;
  5375  001B82  D07F               	goto	l5800
  5376  001B84                     l5798:
  5377  001B84  502B               	movf	util_transmit_letter@letter,w,c
  5378                           
  5379                           ; Switch size 1, requested type "space"
  5380                           ; Number of cases is 42, Range of values is 32 to 90
  5381                           ; switch strategies available:
  5382                           ; Name         Instructions Cycles
  5383                           ; simple_byte          127    64 (average)
  5384                           ;	Chosen strategy is simple_byte
  5385  001B86  0A20               	xorlw	32	; case 32
  5386  001B88  B4D8               	btfsc	status,2,c
  5387  001B8A  D7F9               	goto	l5794
  5388  001B8C  0A0C               	xorlw	12	; case 44
  5389  001B8E  B4D8               	btfsc	status,2,c
  5390  001B90  D7C9               	goto	l5784
  5391  001B92  0A01               	xorlw	1	; case 45
  5392  001B94  B4D8               	btfsc	status,2,c
  5393  001B96  D7EA               	goto	l5792
  5394  001B98  0A03               	xorlw	3	; case 46
  5395  001B9A  B4D8               	btfsc	status,2,c
  5396  001B9C  D7DE               	goto	l5790
  5397  001B9E  0A01               	xorlw	1	; case 47
  5398  001BA0  B4D8               	btfsc	status,2,c
  5399  001BA2  D7D2               	goto	l5788
  5400  001BA4  0A1F               	xorlw	31	; case 48
  5401  001BA6  B4D8               	btfsc	status,2,c
  5402  001BA8  D763               	goto	l5764
  5403  001BAA  0A01               	xorlw	1	; case 49
  5404  001BAC  B4D8               	btfsc	status,2,c
  5405  001BAE  D769               	goto	l5766
  5406  001BB0  0A03               	xorlw	3	; case 50
  5407  001BB2  B4D8               	btfsc	status,2,c
  5408  001BB4  D76F               	goto	l5768
  5409  001BB6  0A01               	xorlw	1	; case 51
  5410  001BB8  B4D8               	btfsc	status,2,c
  5411  001BBA  D775               	goto	l5770
  5412  001BBC  0A07               	xorlw	7	; case 52
  5413  001BBE  B4D8               	btfsc	status,2,c
  5414  001BC0  D77B               	goto	l5772
  5415  001BC2  0A01               	xorlw	1	; case 53
  5416  001BC4  B4D8               	btfsc	status,2,c
  5417  001BC6  D781               	goto	l5774
  5418  001BC8  0A03               	xorlw	3	; case 54
  5419  001BCA  B4D8               	btfsc	status,2,c
  5420  001BCC  D787               	goto	l5776
  5421  001BCE  0A01               	xorlw	1	; case 55
  5422  001BD0  B4D8               	btfsc	status,2,c
  5423  001BD2  D78D               	goto	l5778
  5424  001BD4  0A0F               	xorlw	15	; case 56
  5425  001BD6  B4D8               	btfsc	status,2,c
  5426  001BD8  D793               	goto	l5780
  5427  001BDA  0A01               	xorlw	1	; case 57
  5428  001BDC  B4D8               	btfsc	status,2,c
  5429  001BDE  D799               	goto	l5782
  5430  001BE0  0A06               	xorlw	6	; case 63
  5431  001BE2  B4D8               	btfsc	status,2,c
  5432  001BE4  D7A8               	goto	l5786
  5433  001BE6  0A7E               	xorlw	126	; case 65
  5434  001BE8  B4D8               	btfsc	status,2,c
  5435  001BEA  D658               	goto	l5712
  5436  001BEC  0A03               	xorlw	3	; case 66
  5437  001BEE  B4D8               	btfsc	status,2,c
  5438  001BF0  D65E               	goto	l5714
  5439  001BF2  0A01               	xorlw	1	; case 67
  5440  001BF4  B4D8               	btfsc	status,2,c
  5441  001BF6  D664               	goto	l5716
  5442  001BF8  0A07               	xorlw	7	; case 68
  5443  001BFA  B4D8               	btfsc	status,2,c
  5444  001BFC  D66A               	goto	l5718
  5445  001BFE  0A01               	xorlw	1	; case 69
  5446  001C00  B4D8               	btfsc	status,2,c
  5447  001C02  D670               	goto	l5720
  5448  001C04  0A03               	xorlw	3	; case 70
  5449  001C06  B4D8               	btfsc	status,2,c
  5450  001C08  D676               	goto	l5722
  5451  001C0A  0A01               	xorlw	1	; case 71
  5452  001C0C  B4D8               	btfsc	status,2,c
  5453  001C0E  D67C               	goto	l5724
  5454  001C10  0A0F               	xorlw	15	; case 72
  5455  001C12  B4D8               	btfsc	status,2,c
  5456  001C14  D682               	goto	l5726
  5457  001C16  0A01               	xorlw	1	; case 73
  5458  001C18  B4D8               	btfsc	status,2,c
  5459  001C1A  D688               	goto	l5728
  5460  001C1C  0A03               	xorlw	3	; case 74
  5461  001C1E  B4D8               	btfsc	status,2,c
  5462  001C20  D68E               	goto	l5730
  5463  001C22  0A01               	xorlw	1	; case 75
  5464  001C24  B4D8               	btfsc	status,2,c
  5465  001C26  D694               	goto	l5732
  5466  001C28  0A07               	xorlw	7	; case 76
  5467  001C2A  B4D8               	btfsc	status,2,c
  5468  001C2C  D69A               	goto	l5734
  5469  001C2E  0A01               	xorlw	1	; case 77
  5470  001C30  B4D8               	btfsc	status,2,c
  5471  001C32  D6A0               	goto	l5736
  5472  001C34  0A03               	xorlw	3	; case 78
  5473  001C36  B4D8               	btfsc	status,2,c
  5474  001C38  D6A6               	goto	l5738
  5475  001C3A  0A01               	xorlw	1	; case 79
  5476  001C3C  B4D8               	btfsc	status,2,c
  5477  001C3E  D6AC               	goto	l5740
  5478  001C40  0A1F               	xorlw	31	; case 80
  5479  001C42  B4D8               	btfsc	status,2,c
  5480  001C44  D6B2               	goto	l5742
  5481  001C46  0A01               	xorlw	1	; case 81
  5482  001C48  B4D8               	btfsc	status,2,c
  5483  001C4A  D6B8               	goto	l5744
  5484  001C4C  0A03               	xorlw	3	; case 82
  5485  001C4E  B4D8               	btfsc	status,2,c
  5486  001C50  D6BE               	goto	l5746
  5487  001C52  0A01               	xorlw	1	; case 83
  5488  001C54  B4D8               	btfsc	status,2,c
  5489  001C56  D6C4               	goto	l5748
  5490  001C58  0A07               	xorlw	7	; case 84
  5491  001C5A  B4D8               	btfsc	status,2,c
  5492  001C5C  D6CA               	goto	l5750
  5493  001C5E  0A01               	xorlw	1	; case 85
  5494  001C60  B4D8               	btfsc	status,2,c
  5495  001C62  D6D0               	goto	l5752
  5496  001C64  0A03               	xorlw	3	; case 86
  5497  001C66  B4D8               	btfsc	status,2,c
  5498  001C68  D6D6               	goto	l5754
  5499  001C6A  0A01               	xorlw	1	; case 87
  5500  001C6C  B4D8               	btfsc	status,2,c
  5501  001C6E  D6DC               	goto	l5756
  5502  001C70  0A0F               	xorlw	15	; case 88
  5503  001C72  B4D8               	btfsc	status,2,c
  5504  001C74  D6E2               	goto	l5758
  5505  001C76  0A01               	xorlw	1	; case 89
  5506  001C78  B4D8               	btfsc	status,2,c
  5507  001C7A  D6E8               	goto	l5760
  5508  001C7C  0A03               	xorlw	3	; case 90
  5509  001C7E  B4D8               	btfsc	status,2,c
  5510  001C80  D6EE               	goto	l5762
  5511  001C82                     l5800:
  5512                           
  5513                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  5514  001C82  EC45  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5515  001C86  0012               	return		;funcret
  5516  001C88                     __end_of_util_transmit_letter:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           postinc0	equ	0xFEE
  5523                           wreg	equ	0xFE8
  5524                           postdec1	equ	0xFE5
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function _util_transmit_space_between_words *****************
  5534 ;; Defined at:
  5535 ;;		line 304 in file "easat2_util_transmission.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5549 ;;      Params:         0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    4
  5556 ;; This function calls:
  5557 ;;		_util_waits_delay_ms
  5558 ;; This function is called by:
  5559 ;;		_util_transmit_letter
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text19
  5564  003C7A                     __ptext19:
  5565                           	opt stack 0
  5566  003C7A                     _util_transmit_space_between_words:
  5567                           	opt stack 23
  5568                           
  5569                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  5570                           
  5571                           ;incstack = 0
  5572  003C7A  0E02               	movlw	2
  5573  003C7C  0100               	movlb	0	; () banked
  5574  003C7E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5575  003C80  0E0D               	movlw	13
  5576  003C82  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5577  003C84  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5578  003C88  0012               	return		;funcret
  5579  003C8A                     __end_of_util_transmit_space_between_words:
  5580                           	opt stack 0
  5581                           tblptru	equ	0xFF8
  5582                           tblptrh	equ	0xFF7
  5583                           tblptrl	equ	0xFF6
  5584                           tablat	equ	0xFF5
  5585                           postinc0	equ	0xFEE
  5586                           wreg	equ	0xFE8
  5587                           postdec1	equ	0xFE5
  5588                           fsr1l	equ	0xFE1
  5589                           indf2	equ	0xFDF
  5590                           postinc2	equ	0xFDE
  5591                           postdec2	equ	0xFDD
  5592                           fsr2h	equ	0xFDA
  5593                           fsr2l	equ	0xFD9
  5594                           status	equ	0xFD8
  5595                           
  5596 ;; *************** function _util_transmit_space_between_letters *****************
  5597 ;; Defined at:
  5598 ;;		line 297 in file "easat2_util_transmission.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;		None
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      void 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:         0       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0
  5615 ;;      Totals:         0       0       0       0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    4
  5619 ;; This function calls:
  5620 ;;		_util_waits_delay_ms
  5621 ;; This function is called by:
  5622 ;;		_util_transmit_letter
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text20
  5627  003C8A                     __ptext20:
  5628                           	opt stack 0
  5629  003C8A                     _util_transmit_space_between_letters:
  5630                           	opt stack 23
  5631                           
  5632                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  5633                           
  5634                           ;incstack = 0
  5635  003C8A  0E00               	movlw	0
  5636  003C8C  0100               	movlb	0	; () banked
  5637  003C8E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5638  003C90  0EE1               	movlw	225
  5639  003C92  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5640  003C94  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5641  003C98  0012               	return		;funcret
  5642  003C9A                     __end_of_util_transmit_space_between_letters:
  5643                           	opt stack 0
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           postinc0	equ	0xFEE
  5649                           wreg	equ	0xFE8
  5650                           postdec1	equ	0xFE5
  5651                           fsr1l	equ	0xFE1
  5652                           indf2	equ	0xFDF
  5653                           postinc2	equ	0xFDE
  5654                           postdec2	equ	0xFDD
  5655                           fsr2h	equ	0xFDA
  5656                           fsr2l	equ	0xFD9
  5657                           status	equ	0xFD8
  5658                           
  5659 ;; *************** function _util_transmit_morse_sequence *****************
  5660 ;; Defined at:
  5661 ;;		line 201 in file "easat2_util_transmission.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  morse_sequen    2   19[BANK0 ] PTR unsigned char 
  5664 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5665 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5666 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5667 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5668 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5669 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5670 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5671 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5672 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5673 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5674 ;;		 -> STR_3(3), 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  i               2   40[COMRAM] int 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         0       2       0       0       0       0       0
  5687 ;;      Locals:         2       0       0       0       0       0       0
  5688 ;;      Temps:          2       0       0       0       0       0       0
  5689 ;;      Totals:         4       2       0       0       0       0       0
  5690 ;;Total ram usage:        6 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    6
  5693 ;; This function calls:
  5694 ;;		_strlen
  5695 ;;		_util_transmit_dash
  5696 ;;		_util_transmit_dot
  5697 ;;		_util_transmit_space_between_dots_dashes
  5698 ;; This function is called by:
  5699 ;;		_util_transmit_letter
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text21
  5704  003718                     __ptext21:
  5705                           	opt stack 0
  5706  003718                     _util_transmit_morse_sequence:
  5707                           	opt stack 21
  5708                           
  5709                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5710                           
  5711                           ;incstack = 0
  5712  003718  0E00               	movlw	0
  5713  00371A  6E2A               	movwf	util_transmit_morse_sequence@i+1,c
  5714  00371C  0E00               	movlw	0
  5715  00371E  6E29               	movwf	util_transmit_morse_sequence@i,c
  5716  003720  D01E               	goto	l5032
  5717  003722                     l5020:
  5718                           
  5719                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5720  003722  EC15  F01D         	call	_util_transmit_dot	;wreg free
  5721                           
  5722                           ;easat2_util_transmission.c: 211: break;
  5723  003726  D017               	goto	l5028
  5724  003728                     l5022:
  5725                           
  5726                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5727  003728  EC2F  F01D         	call	_util_transmit_dash	;wreg free
  5728                           
  5729                           ;easat2_util_transmission.c: 217: }
  5730                           
  5731                           ;easat2_util_transmission.c: 216: break;
  5732                           
  5733                           ;easat2_util_transmission.c: 215: default:
  5734                           
  5735                           ;easat2_util_transmission.c: 214: break;
  5736  00372C  D014               	goto	l5028
  5737  00372E                     l5026:
  5738  00372E  5029               	movf	util_transmit_morse_sequence@i,w,c
  5739  003730  0100               	movlb	0	; () banked
  5740  003732  2573               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5741  003734  6E27               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5742  003736  502A               	movf	util_transmit_morse_sequence@i+1,w,c
  5743  003738  0100               	movlb	0	; () banked
  5744  00373A  2174               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5745  00373C  6E28               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5746  00373E  C027  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5747  003742  C028  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5748  003746                     	if	0	;tblptru may be non-zero
  5749  003746                     	endif
  5750  003746                     	if	0	;tblptru may be non-zero
  5751  003746                     	endif
  5752  003746  0008               	tblrd		*
  5753  003748  50F5               	movf	tablat,w,c
  5754                           
  5755                           ; Switch size 1, requested type "space"
  5756                           ; Number of cases is 2, Range of values is 45 to 46
  5757                           ; switch strategies available:
  5758                           ; Name         Instructions Cycles
  5759                           ; simple_byte            7     4 (average)
  5760                           ;	Chosen strategy is simple_byte
  5761  00374A  0A2D               	xorlw	45	; case 45
  5762  00374C  B4D8               	btfsc	status,2,c
  5763  00374E  D7EC               	goto	l5022
  5764  003750  0A03               	xorlw	3	; case 46
  5765  003752  B4D8               	btfsc	status,2,c
  5766  003754  D7E6               	goto	l5020
  5767  003756                     l5028:
  5768                           
  5769                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5770  003756  EC4D  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5771  00375A  4A29               	infsnz	util_transmit_morse_sequence@i,f,c
  5772  00375C  2A2A               	incf	util_transmit_morse_sequence@i+1,f,c
  5773  00375E                     l5032:
  5774  00375E  C073  F071         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5775  003762  C074  F072         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5776  003766  ECBE  F01B         	call	_strlen	;wreg free
  5777  00376A  0100               	movlb	0	; () banked
  5778  00376C  5171               	movf	?_strlen& (0+255),w,b
  5779  00376E  5C29               	subwf	util_transmit_morse_sequence@i,w,c
  5780  003770  0100               	movlb	0	; () banked
  5781  003772  5172               	movf	(?_strlen+1)& (0+255),w,b
  5782  003774  582A               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5783  003776  B0D8               	btfsc	status,0,c
  5784  003778  0012               	return	
  5785  00377A  D7D9               	goto	l5026
  5786  00377C                     __end_of_util_transmit_morse_sequence:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           postinc0	equ	0xFEE
  5793                           wreg	equ	0xFE8
  5794                           postdec1	equ	0xFE5
  5795                           fsr1l	equ	0xFE1
  5796                           indf2	equ	0xFDF
  5797                           postinc2	equ	0xFDE
  5798                           postdec2	equ	0xFDD
  5799                           fsr2h	equ	0xFDA
  5800                           fsr2l	equ	0xFD9
  5801                           status	equ	0xFD8
  5802                           
  5803 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5804 ;; Defined at:
  5805 ;;		line 289 in file "easat2_util_transmission.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5819 ;;      Params:         0       0       0       0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0
  5822 ;;      Totals:         0       0       0       0       0       0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    4
  5826 ;; This function calls:
  5827 ;;		_util_waits_delay_ms
  5828 ;; This function is called by:
  5829 ;;		_util_transmit_morse_sequence
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text22
  5834  003C9A                     __ptext22:
  5835                           	opt stack 0
  5836  003C9A                     _util_transmit_space_between_dots_dashes:
  5837                           	opt stack 22
  5838                           
  5839                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;incstack = 0
  5843  003C9A  0E00               	movlw	0
  5844  003C9C  0100               	movlb	0	; () banked
  5845  003C9E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5846  003CA0  0E4B               	movlw	75
  5847  003CA2  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5848  003CA4  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5849  003CA8  0012               	return		;funcret
  5850  003CAA                     __end_of_util_transmit_space_between_dots_dashes:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           postdec1	equ	0xFE5
  5859                           fsr1l	equ	0xFE1
  5860                           indf2	equ	0xFDF
  5861                           postinc2	equ	0xFDE
  5862                           postdec2	equ	0xFDD
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _util_transmit_dot *****************
  5868 ;; Defined at:
  5869 ;;		line 231 in file "easat2_util_transmission.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  i               2   36[COMRAM] int 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5883 ;;      Params:         0       0       0       0       0       0       0
  5884 ;;      Locals:         2       0       0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0
  5886 ;;      Totals:         2       0       0       0       0       0       0
  5887 ;;Total ram usage:        2 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    5
  5890 ;; This function calls:
  5891 ;;		_util_transmit_buzzer_1ms_cycle
  5892 ;;		_util_waits_delay_ms
  5893 ;; This function is called by:
  5894 ;;		_util_transmit_morse_sequence
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text23
  5899  003A2A                     __ptext23:
  5900                           	opt stack 0
  5901  003A2A                     _util_transmit_dot:
  5902                           	opt stack 21
  5903                           
  5904                           ;easat2_util_transmission.c: 235: (PORTDbits.RD1) = 1;
  5905                           
  5906                           ;incstack = 0
  5907  003A2A  8283               	bsf	3971,1,c	;volatile
  5908                           
  5909                           ;easat2_util_transmission.c: 236: (PORTDbits.RD3) = 1;
  5910  003A2C  8683               	bsf	3971,3,c	;volatile
  5911                           
  5912                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5913  003A2E  0E00               	movlw	0
  5914  003A30  6E26               	movwf	util_transmit_dot@i+1,c
  5915  003A32  0E00               	movlw	0
  5916  003A34  6E25               	movwf	util_transmit_dot@i,c
  5917  003A36  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5918  003A38  D006               	goto	l4738
  5919  003A3A  5026               	movf	util_transmit_dot@i+1,w,c
  5920  003A3C  E10D               	bnz	l339
  5921  003A3E  0E4B               	movlw	75
  5922  003A40  5C25               	subwf	util_transmit_dot@i,w,c
  5923  003A42  B0D8               	btfsc	status,0,c
  5924  003A44  D009               	goto	l339
  5925  003A46                     l4738:
  5926                           
  5927                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5928  003A46  EC1D  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5929                           
  5930                           ;easat2_util_transmission.c: 246: else
  5931                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5932  003A4A  4A25               	infsnz	util_transmit_dot@i,f,c
  5933  003A4C  2A26               	incf	util_transmit_dot@i+1,f,c
  5934  003A4E  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5935  003A50  D7FA               	goto	l4738
  5936  003A52  5026               	movf	util_transmit_dot@i+1,w,c
  5937  003A54  E101               	bnz	u4540
  5938  003A56  D7F3               	goto	L2
  5939  003A58                     u4540:
  5940  003A58                     l339:
  5941                           
  5942                           ;easat2_util_transmission.c: 249: }
  5943                           ;easat2_util_transmission.c: 251: (PORTDbits.RD1) = 0;
  5944  003A58  9283               	bcf	3971,1,c	;volatile
  5945                           
  5946                           ;easat2_util_transmission.c: 252: (PORTDbits.RD3) = 0;
  5947  003A5A  9683               	bcf	3971,3,c	;volatile
  5948  003A5C  0012               	return		;funcret
  5949  003A5E                     __end_of_util_transmit_dot:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           postinc0	equ	0xFEE
  5956                           wreg	equ	0xFE8
  5957                           postdec1	equ	0xFE5
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _util_transmit_dash *****************
  5967 ;; Defined at:
  5968 ;;		line 262 in file "easat2_util_transmission.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  i               2   36[COMRAM] int 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5982 ;;      Params:         0       0       0       0       0       0       0
  5983 ;;      Locals:         2       0       0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0
  5985 ;;      Totals:         2       0       0       0       0       0       0
  5986 ;;Total ram usage:        2 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    5
  5989 ;; This function calls:
  5990 ;;		_util_transmit_buzzer_1ms_cycle
  5991 ;;		_util_waits_delay_ms
  5992 ;; This function is called by:
  5993 ;;		_util_transmit_morse_sequence
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text24
  5998  003A5E                     __ptext24:
  5999                           	opt stack 0
  6000  003A5E                     _util_transmit_dash:
  6001                           	opt stack 21
  6002                           
  6003                           ;easat2_util_transmission.c: 266: (PORTDbits.RD1) = 1;
  6004                           
  6005                           ;incstack = 0
  6006  003A5E  8283               	bsf	3971,1,c	;volatile
  6007                           
  6008                           ;easat2_util_transmission.c: 267: (PORTDbits.RD3) = 1;
  6009  003A60  8683               	bsf	3971,3,c	;volatile
  6010                           
  6011                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  6012  003A62  0E00               	movlw	0
  6013  003A64  6E26               	movwf	util_transmit_dash@i+1,c
  6014  003A66  0E00               	movlw	0
  6015  003A68  6E25               	movwf	util_transmit_dash@i,c
  6016  003A6A  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6017  003A6C  D006               	goto	l4754
  6018  003A6E  5026               	movf	util_transmit_dash@i+1,w,c
  6019  003A70  E10D               	bnz	l346
  6020  003A72  0EE1               	movlw	225
  6021  003A74  5C25               	subwf	util_transmit_dash@i,w,c
  6022  003A76  B0D8               	btfsc	status,0,c
  6023  003A78  D009               	goto	l346
  6024  003A7A                     l4754:
  6025                           
  6026                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  6027  003A7A  EC1D  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  6028                           
  6029                           ;easat2_util_transmission.c: 277: else
  6030                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  6031  003A7E  4A25               	infsnz	util_transmit_dash@i,f,c
  6032  003A80  2A26               	incf	util_transmit_dash@i+1,f,c
  6033  003A82  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6034  003A84  D7FA               	goto	l4754
  6035  003A86  5026               	movf	util_transmit_dash@i+1,w,c
  6036  003A88  E101               	bnz	u4560
  6037  003A8A  D7F3               	goto	L3
  6038  003A8C                     u4560:
  6039  003A8C                     l346:
  6040                           
  6041                           ;easat2_util_transmission.c: 280: }
  6042                           ;easat2_util_transmission.c: 282: (PORTDbits.RD1) = 0;
  6043  003A8C  9283               	bcf	3971,1,c	;volatile
  6044                           
  6045                           ;easat2_util_transmission.c: 283: (PORTDbits.RD3) = 0;
  6046  003A8E  9683               	bcf	3971,3,c	;volatile
  6047  003A90  0012               	return		;funcret
  6048  003A92                     __end_of_util_transmit_dash:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postdec1	equ	0xFE5
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _util_waits_delay_ms *****************
  6066 ;; Defined at:
  6067 ;;		line 40 in file "easat2_util_waits.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  ms              2   17[BANK0 ] int 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  i               2   34[COMRAM] int 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6081 ;;      Params:         0       2       0       0       0       0       0
  6082 ;;      Locals:         2       0       0       0       0       0       0
  6083 ;;      Temps:          1       0       0       0       0       0       0
  6084 ;;      Totals:         3       2       0       0       0       0       0
  6085 ;;Total ram usage:        5 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    3
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_util_transmit_dot
  6092 ;;		_util_transmit_dash
  6093 ;;		_util_transmit_space_between_dots_dashes
  6094 ;;		_util_transmit_space_between_letters
  6095 ;;		_util_transmit_space_between_words
  6096 ;;		_util_waits_delay_secs
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text25
  6101  003B5A                     __ptext25:
  6102                           	opt stack 0
  6103  003B5A                     _util_waits_delay_ms:
  6104                           	opt stack 24
  6105                           
  6106                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6107                           
  6108                           ;incstack = 0
  6109  003B5A  0E00               	movlw	0
  6110  003B5C  6E24               	movwf	util_waits_delay_ms@i+1,c
  6111  003B5E  0E00               	movlw	0
  6112  003B60  6E23               	movwf	util_waits_delay_ms@i,c
  6113  003B62  D006               	goto	l392
  6114  003B64                     l4680:
  6115                           
  6116                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6117  003B64  0EA6               	movlw	166
  6118  003B66                     u6417:
  6119  003B66  2EE8               	decfsz	wreg,f,c
  6120  003B68  D7FE               	bra	u6417
  6121  003B6A  D000               	nop2	
  6122  003B6C  4A23               	infsnz	util_waits_delay_ms@i,f,c
  6123  003B6E  2A24               	incf	util_waits_delay_ms@i+1,f,c
  6124  003B70                     l392:
  6125  003B70  0100               	movlb	0	; () banked
  6126  003B72  5171               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6127  003B74  5C23               	subwf	util_waits_delay_ms@i,w,c
  6128  003B76  5024               	movf	util_waits_delay_ms@i+1,w,c
  6129  003B78  0A80               	xorlw	128
  6130  003B7A  6E22               	movwf	??_util_waits_delay_ms& (0+255),c
  6131  003B7C  0100               	movlb	0	; () banked
  6132  003B7E  5172               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6133  003B80  0A80               	xorlw	128
  6134  003B82  5822               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6135  003B84  B0D8               	btfsc	status,0,c
  6136  003B86  0012               	return	
  6137  003B88  D7ED               	goto	l4680
  6138  003B8A                     __end_of_util_waits_delay_ms:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           postdec1	equ	0xFE5
  6147                           fsr1l	equ	0xFE1
  6148                           indf2	equ	0xFDF
  6149                           postinc2	equ	0xFDE
  6150                           postdec2	equ	0xFDD
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8
  6154                           
  6155 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  6156 ;; Defined at:
  6157 ;;		line 310 in file "easat2_util_transmission.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6171 ;;      Params:         0       0       0       0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0
  6174 ;;      Totals:         0       0       0       0       0       0       0
  6175 ;;Total ram usage:        0 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    4
  6178 ;; This function calls:
  6179 ;;		_util_waits_delay_hundred_us
  6180 ;; This function is called by:
  6181 ;;		_util_transmit_dot
  6182 ;;		_util_transmit_dash
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text26
  6187  003C3A                     __ptext26:
  6188                           	opt stack 0
  6189  003C3A                     _util_transmit_buzzer_1ms_cycle:
  6190                           	opt stack 21
  6191                           
  6192                           ;easat2_util_transmission.c: 312: (PORTDbits.RD2) = 1;
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;incstack = 0
  6196  003C3A  8483               	bsf	3971,2,c	;volatile
  6197                           
  6198                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  6199  003C3C  0E00               	movlw	0
  6200  003C3E  0100               	movlb	0	; () banked
  6201  003C40  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6202  003C42  0E05               	movlw	5
  6203  003C44  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6204  003C46  ECC5  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6205                           
  6206                           ;easat2_util_transmission.c: 314: (PORTDbits.RD2) = 0;
  6207  003C4A  9483               	bcf	3971,2,c	;volatile
  6208                           
  6209                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  6210  003C4C  0E00               	movlw	0
  6211  003C4E  0100               	movlb	0	; () banked
  6212  003C50  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6213  003C52  0E05               	movlw	5
  6214  003C54  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6215  003C56  ECC5  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6216  003C5A  0012               	return		;funcret
  6217  003C5C                     __end_of_util_transmit_buzzer_1ms_cycle:
  6218                           	opt stack 0
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           postinc0	equ	0xFEE
  6224                           wreg	equ	0xFE8
  6225                           postdec1	equ	0xFE5
  6226                           fsr1l	equ	0xFE1
  6227                           indf2	equ	0xFDF
  6228                           postinc2	equ	0xFDE
  6229                           postdec2	equ	0xFDD
  6230                           fsr2h	equ	0xFDA
  6231                           fsr2l	equ	0xFD9
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _util_waits_delay_hundred_us *****************
  6235 ;; Defined at:
  6236 ;;		line 47 in file "easat2_util_waits.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  hun_us          2   17[BANK0 ] int 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  i               2   34[COMRAM] int 
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  1    wreg      void 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6250 ;;      Params:         0       2       0       0       0       0       0
  6251 ;;      Locals:         2       0       0       0       0       0       0
  6252 ;;      Temps:          1       0       0       0       0       0       0
  6253 ;;      Totals:         3       2       0       0       0       0       0
  6254 ;;Total ram usage:        5 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    3
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_util_transmit_buzzer_1ms_cycle
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text27
  6265  003B8A                     __ptext27:
  6266                           	opt stack 0
  6267  003B8A                     _util_waits_delay_hundred_us:
  6268                           	opt stack 21
  6269                           
  6270                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  6271                           
  6272                           ;incstack = 0
  6273  003B8A  0E00               	movlw	0
  6274  003B8C  6E24               	movwf	util_waits_delay_hundred_us@i+1,c
  6275  003B8E  0E00               	movlw	0
  6276  003B90  6E23               	movwf	util_waits_delay_hundred_us@i,c
  6277  003B92  D006               	goto	l398
  6278  003B94                     l4668:
  6279                           
  6280                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  6281  003B94  0E10               	movlw	16
  6282  003B96                     u6427:
  6283  003B96  2EE8               	decfsz	wreg,f,c
  6284  003B98  D7FE               	bra	u6427
  6285  003B9A  D000               	nop2	
  6286  003B9C  4A23               	infsnz	util_waits_delay_hundred_us@i,f,c
  6287  003B9E  2A24               	incf	util_waits_delay_hundred_us@i+1,f,c
  6288  003BA0                     l398:
  6289  003BA0  0100               	movlb	0	; () banked
  6290  003BA2  5171               	movf	util_waits_delay_hundred_us@hun_us& (0+255),w,b
  6291  003BA4  5C23               	subwf	util_waits_delay_hundred_us@i,w,c
  6292  003BA6  5024               	movf	util_waits_delay_hundred_us@i+1,w,c
  6293  003BA8  0A80               	xorlw	128
  6294  003BAA  6E22               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  6295  003BAC  0100               	movlb	0	; () banked
  6296  003BAE  5172               	movf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),w,b
  6297  003BB0  0A80               	xorlw	128
  6298  003BB2  5822               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  6299  003BB4  B0D8               	btfsc	status,0,c
  6300  003BB6  0012               	return	
  6301  003BB8  D7ED               	goto	l4668
  6302  003BBA                     __end_of_util_waits_delay_hundred_us:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           postinc0	equ	0xFEE
  6309                           wreg	equ	0xFE8
  6310                           postdec1	equ	0xFE5
  6311                           fsr1l	equ	0xFE1
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           postdec2	equ	0xFDD
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _strlen *****************
  6320 ;; Defined at:
  6321 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  6324 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6325 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6326 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6327 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6328 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6329 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6330 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6331 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6332 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6333 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6334 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  cp              2   35[COMRAM] PTR const unsigned char 
  6337 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6338 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6339 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6340 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6341 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6342 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6343 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6344 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6345 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6346 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6347 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2   17[BANK0 ] unsigned int 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6357 ;;      Params:         0       2       0       0       0       0       0
  6358 ;;      Locals:         2       0       0       0       0       0       0
  6359 ;;      Temps:          2       0       0       0       0       0       0
  6360 ;;      Totals:         4       2       0       0       0       0       0
  6361 ;;Total ram usage:        6 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    3
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_util_beacon_transmission
  6368 ;;		_util_transmit_morse_sequence
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text28
  6373  00377C                     __ptext28:
  6374                           	opt stack 0
  6375  00377C                     _strlen:
  6376                           	opt stack 23
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;incstack = 0
  6380  00377C  C071  F024         	movff	strlen@s,strlen@cp
  6381  003780  C072  F025         	movff	strlen@s+1,strlen@cp+1
  6382  003784  D002               	goto	l4724
  6383  003786                     l4722:
  6384  003786  4A24               	infsnz	strlen@cp,f,c
  6385  003788  2A25               	incf	strlen@cp+1,f,c
  6386  00378A                     l4724:
  6387  00378A  C024  FFF6         	movff	strlen@cp,tblptrl
  6388  00378E  C025  FFF7         	movff	strlen@cp+1,tblptrh
  6389  003792  6AF8               	clrf	tblptru,c
  6390  003794  0E05               	movlw	(high __ramtop+-1)
  6391  003796  64F7               	cpfsgt	tblptrh,c
  6392  003798  D003               	bra	u4517
  6393  00379A  0008               	tblrd		*
  6394  00379C  50F5               	movf	tablat,w,c
  6395  00379E  D005               	bra	u4510
  6396  0037A0                     u4517:
  6397  0037A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6398  0037A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6399  0037A8  50EF               	movf	indf0,w,c
  6400  0037AA                     u4510:
  6401  0037AA  0900               	iorlw	0
  6402  0037AC  A4D8               	btfss	status,2,c
  6403  0037AE  D7EB               	goto	l4722
  6404  0037B0  C071  F022         	movff	strlen@s,??_strlen
  6405  0037B4  C072  F023         	movff	strlen@s+1,??_strlen+1
  6406  0037B8  1E22               	comf	??_strlen,f,c
  6407  0037BA  1E23               	comf	??_strlen+1,f,c
  6408  0037BC  4A22               	infsnz	??_strlen,f,c
  6409  0037BE  2A23               	incf	??_strlen+1,f,c
  6410  0037C0  5024               	movf	strlen@cp,w,c
  6411  0037C2  2422               	addwf	??_strlen,w,c
  6412  0037C4  0100               	movlb	0	; () banked
  6413  0037C6  6F71               	movwf	?_strlen& (0+255),b
  6414  0037C8  5025               	movf	strlen@cp+1,w,c
  6415  0037CA  2023               	addwfc	??_strlen+1,w,c
  6416  0037CC  0100               	movlb	0	; () banked
  6417  0037CE  6F72               	movwf	(?_strlen+1)& (0+255),b
  6418  0037D0  0012               	return	
  6419  0037D2                     __end_of_strlen:
  6420                           	opt stack 0
  6421                           tblptru	equ	0xFF8
  6422                           tblptrh	equ	0xFF7
  6423                           tblptrl	equ	0xFF6
  6424                           tablat	equ	0xFF5
  6425                           indf0	equ	0xFEF
  6426                           postinc0	equ	0xFEE
  6427                           fsr0h	equ	0xFEA
  6428                           fsr0l	equ	0xFE9
  6429                           wreg	equ	0xFE8
  6430                           postdec1	equ	0xFE5
  6431                           fsr1l	equ	0xFE1
  6432                           indf2	equ	0xFDF
  6433                           postinc2	equ	0xFDE
  6434                           postdec2	equ	0xFDD
  6435                           fsr2h	equ	0xFDA
  6436                           fsr2l	equ	0xFD9
  6437                           status	equ	0xFD8
  6438                           
  6439 ;; *************** function _strcpy *****************
  6440 ;; Defined at:
  6441 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6444 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6445 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6446 ;;		 -> STR_1(7), 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6449 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  2   17[BANK0 ] PTR unsigned char 
  6452 ;; Registers used:
  6453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6459 ;;      Params:         0       4       0       0       0       0       0
  6460 ;;      Locals:         2       0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0
  6462 ;;      Totals:         2       4       0       0       0       0       0
  6463 ;;Total ram usage:        6 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    3
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_util_beacon_transmission
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text29
  6474  003AC4                     __ptext29:
  6475                           	opt stack 0
  6476  003AC4                     _strcpy:
  6477                           	opt stack 25
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;incstack = 0
  6481  003AC4  C071  F022         	movff	strcpy@to,strcpy@cp
  6482  003AC8  C072  F023         	movff	strcpy@to+1,strcpy@cp+1
  6483  003ACC  D005               	goto	l5404
  6484  003ACE                     l5402:
  6485  003ACE  4A22               	infsnz	strcpy@cp,f,c
  6486  003AD0  2A23               	incf	strcpy@cp+1,f,c
  6487  003AD2  0100               	movlb	0	; () banked
  6488  003AD4  4B73               	infsnz	strcpy@from& (0+255),f,b
  6489  003AD6  2B74               	incf	(strcpy@from+1)& (0+255),f,b
  6490  003AD8                     l5404:
  6491  003AD8  C073  FFF6         	movff	strcpy@from,tblptrl
  6492  003ADC  C074  FFF7         	movff	strcpy@from+1,tblptrh
  6493  003AE0                     	if	0	;tblptru may be non-zero
  6494  003AE0                     	endif
  6495  003AE0                     	if	0	;tblptru may be non-zero
  6496  003AE0                     	endif
  6497  003AE0  C022  FFD9         	movff	strcpy@cp,fsr2l
  6498  003AE4  C023  FFDA         	movff	strcpy@cp+1,fsr2h
  6499  003AE8  0008               	tblrd		*
  6500  003AEA  CFF5 FFDF          	movff	tablat,indf2
  6501  003AEE  50DF               	movf	indf2,w,c
  6502  003AF0  B4D8               	btfsc	status,2,c
  6503  003AF2  0012               	return	
  6504  003AF4  D7EC               	goto	l5402
  6505  003AF6                     __end_of_strcpy:
  6506                           	opt stack 0
  6507                           tblptru	equ	0xFF8
  6508                           tblptrh	equ	0xFF7
  6509                           tblptrl	equ	0xFF6
  6510                           tablat	equ	0xFF5
  6511                           indf0	equ	0xFEF
  6512                           postinc0	equ	0xFEE
  6513                           fsr0h	equ	0xFEA
  6514                           fsr0l	equ	0xFE9
  6515                           wreg	equ	0xFE8
  6516                           postdec1	equ	0xFE5
  6517                           fsr1l	equ	0xFE1
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function _strcat *****************
  6526 ;; Defined at:
  6527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6530 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6531 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6532 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6535 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  2   17[BANK0 ] PTR unsigned char 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6545 ;;      Params:         0       4       0       0       0       0       0
  6546 ;;      Locals:         2       0       0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0
  6548 ;;      Totals:         2       4       0       0       0       0       0
  6549 ;;Total ram usage:        6 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    3
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_util_beacon_transmission
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text30
  6560  0038B8                     __ptext30:
  6561                           	opt stack 0
  6562  0038B8                     _strcat:
  6563                           	opt stack 25
  6564                           
  6565                           ;incstack = 0
  6566  0038B8  C071  F022         	movff	strcat@to,strcat@cp
  6567  0038BC  C072  F023         	movff	strcat@to+1,strcat@cp+1
  6568  0038C0  D002               	goto	l5704
  6569  0038C2                     l5702:
  6570  0038C2  4A22               	infsnz	strcat@cp,f,c
  6571  0038C4  2A23               	incf	strcat@cp+1,f,c
  6572  0038C6                     l5704:
  6573  0038C6  C022  FFD9         	movff	strcat@cp,fsr2l
  6574  0038CA  C023  FFDA         	movff	strcat@cp+1,fsr2h
  6575  0038CE  50DF               	movf	indf2,w,c
  6576  0038D0  B4D8               	btfsc	status,2,c
  6577  0038D2  D006               	goto	l5708
  6578  0038D4  D7F6               	goto	l5702
  6579  0038D6                     l5706:
  6580  0038D6  4A22               	infsnz	strcat@cp,f,c
  6581  0038D8  2A23               	incf	strcat@cp+1,f,c
  6582  0038DA  0100               	movlb	0	; () banked
  6583  0038DC  4B73               	infsnz	strcat@from& (0+255),f,b
  6584  0038DE  2B74               	incf	(strcat@from+1)& (0+255),f,b
  6585  0038E0                     l5708:
  6586  0038E0  C073  FFD9         	movff	strcat@from,fsr2l
  6587  0038E4  C074  FFDA         	movff	strcat@from+1,fsr2h
  6588  0038E8  C022  FFE1         	movff	strcat@cp,fsr1l
  6589  0038EC  C023  FFE2         	movff	strcat@cp+1,fsr1h
  6590  0038F0  CFDF FFE7          	movff	indf2,indf1
  6591  0038F4  50E7               	movf	indf1,w,c
  6592  0038F6  B4D8               	btfsc	status,2,c
  6593  0038F8  0012               	return	
  6594  0038FA  D7ED               	goto	l5706
  6595  0038FC                     __end_of_strcat:
  6596                           	opt stack 0
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           indf0	equ	0xFEF
  6602                           postinc0	equ	0xFEE
  6603                           fsr0h	equ	0xFEA
  6604                           fsr0l	equ	0xFE9
  6605                           wreg	equ	0xFE8
  6606                           indf1	equ	0xFE7
  6607                           postdec1	equ	0xFE5
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _sprintf *****************
  6618 ;; Defined at:
  6619 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  sp              2   69[BANK0 ] PTR unsigned char 
  6622 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6623 ;;  f               2   71[BANK0 ] PTR const unsigned char 
  6624 ;;		 -> STR_2(23), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  val             4  102[BANK0 ] unsigned long 
  6627 ;;  tmpval          4   98[BANK0 ] struct .
  6628 ;;  fval            3  108[BANK0 ] struct .
  6629 ;;  cp              3    0        PTR const unsigned char 
  6630 ;;  prec            2  111[BANK0 ] int 
  6631 ;;  exp             2  106[BANK0 ] int 
  6632 ;;  width           2   96[BANK0 ] int 
  6633 ;;  flag            2   94[BANK0 ] unsigned short 
  6634 ;;  ap              2   92[BANK0 ] PTR void [1]
  6635 ;;		 -> ?_sprintf(2), 
  6636 ;;  len             2    0        unsigned int 
  6637 ;;  c               1  113[BANK0 ] char 
  6638 ;;  d               1    0        unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  2   69[BANK0 ] int 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6648 ;;      Params:         0      14       0       0       0       0       0
  6649 ;;      Locals:         0      25       0       0       0       0       0
  6650 ;;      Temps:          0       6       0       0       0       0       0
  6651 ;;      Totals:         0      45       0       0       0       0       0
  6652 ;;Total ram usage:       45 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    6
  6655 ;; This function calls:
  6656 ;;		___awdiv
  6657 ;;		___ftadd
  6658 ;;		___ftge
  6659 ;;		___ftmul
  6660 ;;		___ftneg
  6661 ;;		___ftsub
  6662 ;;		___fttol
  6663 ;;		___lldiv
  6664 ;;		___llmod
  6665 ;;		___lltoft
  6666 ;;		___wmul
  6667 ;;		__div_to_l_
  6668 ;;		__tdiv_to_l_
  6669 ;;		_fround
  6670 ;;		_isdigit
  6671 ;;		_scale
  6672 ;; This function is called by:
  6673 ;;		_util_beacon_transmission
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text31
  6678  0000AA                     __ptext31:
  6679                           	opt stack 0
  6680  0000AA                     _sprintf:
  6681                           	opt stack 22
  6682                           
  6683                           ;doprnt.c: 494: va_list ap;
  6684                           ;doprnt.c: 499: signed char c;
  6685                           ;doprnt.c: 501: int width;
  6686                           ;doprnt.c: 504: int prec;
  6687                           ;doprnt.c: 508: unsigned short flag;
  6688                           ;doprnt.c: 515: char d;
  6689                           ;doprnt.c: 516: double fval;
  6690                           ;doprnt.c: 517: int exp;
  6691                           ;doprnt.c: 523: union {
  6692                           ;doprnt.c: 524: unsigned long vd;
  6693                           ;doprnt.c: 525: double integ;
  6694                           ;doprnt.c: 526: } tmpval;
  6695                           ;doprnt.c: 528: unsigned long val;
  6696                           ;doprnt.c: 529: unsigned len;
  6697                           ;doprnt.c: 530: const char * cp;
  6698                           ;doprnt.c: 533: *ap = __va_start();
  6699                           
  6700                           ;incstack = 0
  6701  0000AA  0EA9               	movlw	low (?_sprintf+4)
  6702  0000AC  0100               	movlb	0	; () banked
  6703  0000AE  6FBC               	movwf	sprintf@ap& (0+255),b
  6704  0000B0  0E00               	movlw	high (?_sprintf+4)
  6705  0000B2  0100               	movlb	0	; () banked
  6706  0000B4  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6707                           
  6708                           ;doprnt.c: 536: while(c = *f++) {
  6709  0000B6  EF0E  F006         	goto	l5694
  6710  0000BA                     l5408:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;doprnt.c: 538: if(c != '%')
  6714  0000BA  0E25               	movlw	37
  6715  0000BC  0100               	movlb	0	; () banked
  6716  0000BE  19D1               	xorwf	sprintf@c& (0+255),w,b
  6717  0000C0  B4D8               	btfsc	status,2,c
  6718  0000C2  D00B               	goto	l5414
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;doprnt.c: 540: {
  6722                           ;doprnt.c: 541: ((*sp++ = (c)));
  6723  0000C4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  6724  0000C8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  6725  0000CC  C0D1  FFDF         	movff	sprintf@c,indf2
  6726                           
  6727                           ; BSR set to: 0
  6728  0000D0  0100               	movlb	0	; () banked
  6729  0000D2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  6730  0000D4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  6731                           
  6732                           ;doprnt.c: 542: continue;
  6733  0000D6  EF0E  F006         	goto	l5694
  6734  0000DA                     l5414:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;doprnt.c: 543: }
  6738                           ;doprnt.c: 546: width = 0;
  6739  0000DA  0E00               	movlw	0
  6740  0000DC  0100               	movlb	0	; () banked
  6741  0000DE  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6742  0000E0  0E00               	movlw	0
  6743  0000E2  6FC0               	movwf	sprintf@width& (0+255),b
  6744                           
  6745                           ;doprnt.c: 548: flag = 0;
  6746  0000E4  0E00               	movlw	0
  6747  0000E6  0100               	movlb	0	; () banked
  6748  0000E8  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  6749  0000EA  0E00               	movlw	0
  6750  0000EC  6FBE               	movwf	sprintf@flag& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6754  0000EE  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6755  0000F2  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6756  0000F6                     	if	0	;tblptru may be non-zero
  6757  0000F6                     	endif
  6758  0000F6                     	if	0	;tblptru may be non-zero
  6759  0000F6                     	endif
  6760  0000F6  0008               	tblrd		*
  6761  0000F8  50F5               	movf	tablat,w,c
  6762  0000FA  EC2E  F01E         	call	_isdigit
  6763  0000FE  A0D8               	btfss	status,0,c
  6764  000100  D040               	goto	l5428
  6765                           
  6766                           ;doprnt.c: 598: width = 0;
  6767  000102  0E00               	movlw	0
  6768  000104  0100               	movlb	0	; () banked
  6769  000106  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6770  000108  0E00               	movlw	0
  6771  00010A  6FC0               	movwf	sprintf@width& (0+255),b
  6772  00010C                     l5420:
  6773                           
  6774                           ;doprnt.c: 600: width *= 10;
  6775  00010C  C0C0  F079         	movff	sprintf@width,___wmul@multiplier
  6776  000110  C0C1  F07A         	movff	sprintf@width+1,___wmul@multiplier+1
  6777  000114  0E00               	movlw	0
  6778  000116  0100               	movlb	0	; () banked
  6779  000118  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6780  00011A  0E0A               	movlw	10
  6781  00011C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6782  00011E  EC7B  F01D         	call	___wmul	;wreg free
  6783  000122  C079  F0C0         	movff	?___wmul,sprintf@width
  6784  000126  C07A  F0C1         	movff	?___wmul+1,sprintf@width+1
  6785                           
  6786                           ;doprnt.c: 601: width += *f++ - '0';
  6787  00012A  0ED0               	movlw	208
  6788  00012C  0100               	movlb	0	; () banked
  6789  00012E  6FB3               	movwf	??_sprintf& (0+255),b
  6790  000130  0EFF               	movlw	255
  6791  000132  0100               	movlb	0	; () banked
  6792  000134  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  6793  000136  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6794  00013A  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6795  00013E                     	if	0	;tblptru may be non-zero
  6796  00013E                     	endif
  6797  00013E                     	if	0	;tblptru may be non-zero
  6798  00013E                     	endif
  6799  00013E  0008               	tblrd		*
  6800  000140  50F5               	movf	tablat,w,c
  6801  000142  0100               	movlb	0	; () banked
  6802  000144  6FB5               	movwf	(??_sprintf+2)& (0+255),b
  6803  000146  6BB6               	clrf	(??_sprintf+3)& (0+255),b
  6804  000148  0100               	movlb	0	; () banked
  6805  00014A  51B3               	movf	??_sprintf& (0+255),w,b
  6806  00014C  0100               	movlb	0	; () banked
  6807  00014E  27B5               	addwf	(??_sprintf+2)& (0+255),f,b
  6808  000150  0100               	movlb	0	; () banked
  6809  000152  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  6810  000154  0100               	movlb	0	; () banked
  6811  000156  23B6               	addwfc	(??_sprintf+3)& (0+255),f,b
  6812  000158  0100               	movlb	0	; () banked
  6813  00015A  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  6814  00015C  0100               	movlb	0	; () banked
  6815  00015E  27C0               	addwf	sprintf@width& (0+255),f,b
  6816  000160  0100               	movlb	0	; () banked
  6817  000162  51B6               	movf	(??_sprintf+3)& (0+255),w,b
  6818  000164  0100               	movlb	0	; () banked
  6819  000166  23C1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6820                           
  6821                           ; BSR set to: 0
  6822  000168  0100               	movlb	0	; () banked
  6823  00016A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6824  00016C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6828  00016E  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6829  000172  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6830  000176                     	if	0	;tblptru may be non-zero
  6831  000176                     	endif
  6832  000176                     	if	0	;tblptru may be non-zero
  6833  000176                     	endif
  6834  000176  0008               	tblrd		*
  6835  000178  50F5               	movf	tablat,w,c
  6836  00017A  EC2E  F01E         	call	_isdigit
  6837  00017E  B0D8               	btfsc	status,0,c
  6838  000180  D7C5               	goto	l5420
  6839  000182                     l5428:
  6840                           
  6841                           ;doprnt.c: 608: }
  6842                           ;doprnt.c: 611: if(*f == '.') {
  6843  000182  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6844  000186  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6845  00018A                     	if	0	;tblptru may be non-zero
  6846  00018A                     	endif
  6847  00018A                     	if	0	;tblptru may be non-zero
  6848  00018A                     	endif
  6849  00018A  0008               	tblrd		*
  6850  00018C  50F5               	movf	tablat,w,c
  6851  00018E  0A2E               	xorlw	46
  6852  000190  A4D8               	btfss	status,2,c
  6853  000192  D039               	goto	l5440
  6854                           
  6855                           ;doprnt.c: 612: flag |= 0x4000;
  6856  000194  0100               	movlb	0	; () banked
  6857  000196  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  6858                           
  6859                           ;doprnt.c: 613: f++;
  6860  000198  0100               	movlb	0	; () banked
  6861  00019A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6862  00019C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;doprnt.c: 620: {
  6866                           ;doprnt.c: 621: prec = 0;
  6867  00019E  0E00               	movlw	0
  6868  0001A0  0100               	movlb	0	; () banked
  6869  0001A2  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6870  0001A4  0E00               	movlw	0
  6871  0001A6  6FCF               	movwf	sprintf@prec& (0+255),b
  6872                           
  6873                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6874  0001A8  D023               	goto	l5438
  6875  0001AA                     l5434:
  6876                           
  6877                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6878  0001AA  C0CF  F079         	movff	sprintf@prec,___wmul@multiplier
  6879  0001AE  C0D0  F07A         	movff	sprintf@prec+1,___wmul@multiplier+1
  6880  0001B2  0E00               	movlw	0
  6881  0001B4  0100               	movlb	0	; () banked
  6882  0001B6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6883  0001B8  0E0A               	movlw	10
  6884  0001BA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6885  0001BC  EC7B  F01D         	call	___wmul	;wreg free
  6886  0001C0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6887  0001C4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6888  0001C8                     	if	0	;tblptru may be non-zero
  6889  0001C8                     	endif
  6890  0001C8                     	if	0	;tblptru may be non-zero
  6891  0001C8                     	endif
  6892  0001C8  0008               	tblrd		*
  6893  0001CA  50F5               	movf	tablat,w,c
  6894  0001CC  0100               	movlb	0	; () banked
  6895  0001CE  2779               	addwf	?___wmul& (0+255),f,b
  6896  0001D0  0E00               	movlw	0
  6897  0001D2  0100               	movlb	0	; () banked
  6898  0001D4  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  6899  0001D6  0ED0               	movlw	208
  6900  0001D8  0100               	movlb	0	; () banked
  6901  0001DA  2579               	addwf	?___wmul& (0+255),w,b
  6902  0001DC  0100               	movlb	0	; () banked
  6903  0001DE  6FCF               	movwf	sprintf@prec& (0+255),b
  6904  0001E0  0EFF               	movlw	255
  6905  0001E2  0100               	movlb	0	; () banked
  6906  0001E4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  6907  0001E6  0100               	movlb	0	; () banked
  6908  0001E8  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6909                           
  6910                           ; BSR set to: 0
  6911  0001EA  0100               	movlb	0	; () banked
  6912  0001EC  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6913  0001EE  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6914  0001F0                     l5438:
  6915                           
  6916                           ; BSR set to: 0
  6917  0001F0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6918  0001F4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6919  0001F8                     	if	0	;tblptru may be non-zero
  6920  0001F8                     	endif
  6921  0001F8                     	if	0	;tblptru may be non-zero
  6922  0001F8                     	endif
  6923  0001F8  0008               	tblrd		*
  6924  0001FA  50F5               	movf	tablat,w,c
  6925  0001FC  EC2E  F01E         	call	_isdigit
  6926  000200  A0D8               	btfss	status,0,c
  6927  000202  D00C               	goto	l5448
  6928  000204  D7D2               	goto	l5434
  6929  000206                     l5440:
  6930                           
  6931                           ;doprnt.c: 626: prec = 0;
  6932  000206  0E00               	movlw	0
  6933  000208  0100               	movlb	0	; () banked
  6934  00020A  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6935  00020C  0E00               	movlw	0
  6936  00020E  6FCF               	movwf	sprintf@prec& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;doprnt.c: 628: flag |= 0x1000;
  6940  000210  0100               	movlb	0	; () banked
  6941  000212  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;doprnt.c: 630: }
  6945                           ;doprnt.c: 635: switch(c = *f++) {
  6946  000214  D003               	goto	l5448
  6947  000216                     l5444:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;doprnt.c: 663: flag |= 0x400;
  6951  000216  0100               	movlb	0	; () banked
  6952  000218  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;doprnt.c: 698: case 'i':
  6956                           ;doprnt.c: 699: break;
  6957                           
  6958                           ; BSR set to: 0
  6959                           
  6960                           ;doprnt.c: 697: case 'd':
  6961                           
  6962                           ;doprnt.c: 664: break;
  6963  00021A  D01A               	goto	l5450
  6964  00021C                     l5448:
  6965  00021C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6966  000220  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6967  000224  0100               	movlb	0	; () banked
  6968  000226  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6969  000228  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6970  00022A                     	if	0	;tblptru may be non-zero
  6971  00022A                     	endif
  6972  00022A                     	if	0	;tblptru may be non-zero
  6973  00022A                     	endif
  6974  00022A  0008               	tblrd		*
  6975  00022C  CFF5 F0D1          	movff	tablat,sprintf@c
  6976  000230  0100               	movlb	0	; () banked
  6977  000232  51D1               	movf	sprintf@c& (0+255),w,b
  6978                           
  6979                           ; Switch size 1, requested type "space"
  6980                           ; Number of cases is 4, Range of values is 0 to 105
  6981                           ; switch strategies available:
  6982                           ; Name         Instructions Cycles
  6983                           ; simple_byte           13     7 (average)
  6984                           ;	Chosen strategy is simple_byte
  6985  000234  0A00               	xorlw	0	; case 0
  6986  000236  B4D8               	btfsc	status,2,c
  6987  000238  EF1D  F006         	goto	l5696
  6988  00023C  0A64               	xorlw	100	; case 100
  6989  00023E  B4D8               	btfsc	status,2,c
  6990  000240  D007               	goto	l5450
  6991  000242  0A02               	xorlw	2	; case 102
  6992  000244  B4D8               	btfsc	status,2,c
  6993  000246  D7E7               	goto	l5444
  6994  000248  0A0F               	xorlw	15	; case 105
  6995  00024A  A4D8               	btfss	status,2,c
  6996  00024C  EF0E  F006         	goto	l5694
  6997  000250                     l5450:
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;doprnt.c: 825: if(flag & (0x700)) {
  7001  000250  0E07               	movlw	7
  7002  000252  0100               	movlb	0	; () banked
  7003  000254  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7004  000256  B4D8               	btfsc	status,2,c
  7005  000258  D379               	goto	l5614
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;doprnt.c: 827: if(flag & 0x1000)
  7009  00025A  0100               	movlb	0	; () banked
  7010  00025C  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  7011  00025E  D005               	goto	l5456
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;doprnt.c: 829: prec = 6;
  7015  000260  0E00               	movlw	0
  7016  000262  0100               	movlb	0	; () banked
  7017  000264  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  7018  000266  0E06               	movlw	6
  7019  000268  6FCF               	movwf	sprintf@prec& (0+255),b
  7020  00026A                     l5456:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7024  00026A  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7025  00026E  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7026  000272  CFDE F0CC          	movff	postinc2,sprintf@fval
  7027  000276  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  7028  00027A  CFDD F0CE          	movff	postdec2,sprintf@fval+2
  7029                           
  7030                           ; BSR set to: 0
  7031  00027E  0E03               	movlw	3
  7032  000280  0100               	movlb	0	; () banked
  7033  000282  27BC               	addwf	sprintf@ap& (0+255),f,b
  7034  000284  0E00               	movlw	0
  7035  000286  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;doprnt.c: 831: if(fval < 0.0) {
  7039  000288  0100               	movlb	0	; () banked
  7040  00028A  AFCE               	btfss	(sprintf@fval+2)& (0+255),7,b
  7041  00028C  D011               	goto	l5466
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 832: fval = -fval;
  7045  00028E  C0CC  F071         	movff	sprintf@fval,___ftneg@f1
  7046  000292  C0CD  F072         	movff	sprintf@fval+1,___ftneg@f1+1
  7047  000296  C0CE  F073         	movff	sprintf@fval+2,___ftneg@f1+2
  7048  00029A  ECDD  F01D         	call	___ftneg	;wreg free
  7049  00029E  C071  F0CC         	movff	?___ftneg,sprintf@fval
  7050  0002A2  C072  F0CD         	movff	?___ftneg+1,sprintf@fval+1
  7051  0002A6  C073  F0CE         	movff	?___ftneg+2,sprintf@fval+2
  7052                           
  7053                           ;doprnt.c: 833: flag |= 0x03;
  7054  0002AA  0E03               	movlw	3
  7055  0002AC  0100               	movlb	0	; () banked
  7056  0002AE  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7057  0002B0                     l5466:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;doprnt.c: 834: }
  7061                           ;doprnt.c: 835: exp = 0;
  7062  0002B0  0E00               	movlw	0
  7063  0002B2  0100               	movlb	0	; () banked
  7064  0002B4  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7065  0002B6  0E00               	movlw	0
  7066  0002B8  6FCA               	movwf	sprintf@exp& (0+255),b
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;doprnt.c: 836: if( fval!=0) {
  7070  0002BA  0100               	movlb	0	; () banked
  7071  0002BC  51CC               	movf	sprintf@fval& (0+255),w,b
  7072  0002BE  0100               	movlb	0	; () banked
  7073  0002C0  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7074  0002C2  0100               	movlb	0	; () banked
  7075  0002C4  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7076  0002C6  B4D8               	btfsc	status,2,c
  7077  0002C8  D09B               	goto	l5494
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7081  0002CA  0E82               	movlw	130
  7082  0002CC  0100               	movlb	0	; () banked
  7083  0002CE  6FB3               	movwf	??_sprintf& (0+255),b
  7084  0002D0  0EFF               	movlw	255
  7085  0002D2  0100               	movlb	0	; () banked
  7086  0002D4  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7087  0002D6  C0CC  F0B5         	movff	sprintf@fval,??_sprintf+2
  7088  0002DA  C0CD  F0B6         	movff	sprintf@fval+1,??_sprintf+3
  7089  0002DE  C0CE  F0B7         	movff	sprintf@fval+2,??_sprintf+4
  7090  0002E2  C0CF  F0B8         	movff	sprintf@fval+3,??_sprintf+5
  7091  0002E6  0E10               	movlw	16
  7092  0002E8  D006               	goto	u5590
  7093  0002EA                     u5595:
  7094  0002EA  0100               	movlb	0	; () banked
  7095  0002EC  90D8               	bcf	status,0,c
  7096  0002EE  33B8               	rrcf	(??_sprintf+5)& (0+255),f,b
  7097  0002F0  33B7               	rrcf	(??_sprintf+4)& (0+255),f,b
  7098  0002F2  33B6               	rrcf	(??_sprintf+3)& (0+255),f,b
  7099  0002F4  33B5               	rrcf	(??_sprintf+2)& (0+255),f,b
  7100  0002F6                     u5590:
  7101  0002F6  2EE8               	decfsz	wreg,f,c
  7102  0002F8  D7F8               	goto	u5595
  7103  0002FA  0100               	movlb	0	; () banked
  7104  0002FC  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  7105  0002FE  0100               	movlb	0	; () banked
  7106  000300  25B3               	addwf	??_sprintf& (0+255),w,b
  7107  000302  0100               	movlb	0	; () banked
  7108  000304  6FCA               	movwf	sprintf@exp& (0+255),b
  7109  000306  0E00               	movlw	0
  7110  000308  0100               	movlb	0	; () banked
  7111  00030A  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  7112  00030C  0100               	movlb	0	; () banked
  7113  00030E  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;doprnt.c: 838: exp--;
  7117  000310  0100               	movlb	0	; () banked
  7118  000312  07CA               	decf	sprintf@exp& (0+255),f,b
  7119  000314  A0D8               	btfss	status,0,c
  7120  000316  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;doprnt.c: 839: exp *= 3;
  7124  000318  C0CA  F079         	movff	sprintf@exp,___wmul@multiplier
  7125  00031C  C0CB  F07A         	movff	sprintf@exp+1,___wmul@multiplier+1
  7126  000320  0E00               	movlw	0
  7127  000322  0100               	movlb	0	; () banked
  7128  000324  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7129  000326  0E03               	movlw	3
  7130  000328  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7131  00032A  EC7B  F01D         	call	___wmul	;wreg free
  7132  00032E  C079  F0CA         	movff	?___wmul,sprintf@exp
  7133  000332  C07A  F0CB         	movff	?___wmul+1,sprintf@exp+1
  7134                           
  7135                           ;doprnt.c: 840: exp /= 10;
  7136  000336  C0CA  F075         	movff	sprintf@exp,___awdiv@dividend
  7137  00033A  C0CB  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  7138  00033E  0E00               	movlw	0
  7139  000340  0100               	movlb	0	; () banked
  7140  000342  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7141  000344  0E0A               	movlw	10
  7142  000346  6F77               	movwf	___awdiv@divisor& (0+255),b
  7143  000348  ECF6  F019         	call	___awdiv	;wreg free
  7144  00034C  C075  F0CA         	movff	?___awdiv,sprintf@exp
  7145  000350  C076  F0CB         	movff	?___awdiv+1,sprintf@exp+1
  7146                           
  7147                           ;doprnt.c: 841: if(exp < 0)
  7148  000354  0100               	movlb	0	; () banked
  7149  000356  AFCB               	btfss	(sprintf@exp+1)& (0+255),7,b
  7150  000358  D004               	goto	l5482
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;doprnt.c: 842: exp--;
  7154  00035A  0100               	movlb	0	; () banked
  7155  00035C  07CA               	decf	sprintf@exp& (0+255),f,b
  7156  00035E  A0D8               	btfss	status,0,c
  7157  000360  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7158  000362                     l5482:
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7162  000362  0100               	movlb	0	; () banked
  7163  000364  51CA               	movf	sprintf@exp& (0+255),w,b
  7164  000366  0800               	sublw	0
  7165  000368  ECF5  F009         	call	_scale
  7166  00036C  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7167  000370  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7168  000374  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7169                           
  7170                           ;doprnt.c: 847: tmpval.integ *= fval;
  7171  000378  C0C2  F07D         	movff	sprintf@tmpval,___ftmul@f1
  7172  00037C  C0C3  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7173  000380  C0C4  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7174  000384  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7175  000388  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7176  00038C  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7177  000390  ECD0  F014         	call	___ftmul	;wreg free
  7178  000394  C07D  F0C2         	movff	?___ftmul,sprintf@tmpval
  7179  000398  C07E  F0C3         	movff	?___ftmul+1,sprintf@tmpval+1
  7180  00039C  C07F  F0C4         	movff	?___ftmul+2,sprintf@tmpval+2
  7181                           
  7182                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7183  0003A0  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7184  0003A4  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7185  0003A8  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7186  0003AC  0E00               	movlw	0
  7187  0003AE  0100               	movlb	0	; () banked
  7188  0003B0  6F74               	movwf	___ftge@ff2& (0+255),b
  7189  0003B2  0E80               	movlw	128
  7190  0003B4  0100               	movlb	0	; () banked
  7191  0003B6  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7192  0003B8  0E3F               	movlw	63
  7193  0003BA  0100               	movlb	0	; () banked
  7194  0003BC  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7195  0003BE  ECE7  F018         	call	___ftge	;wreg free
  7196  0003C2  0100               	movlb	0	; () banked
  7197  0003C4  B0D8               	btfsc	status,0,c
  7198  0003C6  D005               	goto	l5490
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;doprnt.c: 849: exp--;
  7202  0003C8  0100               	movlb	0	; () banked
  7203  0003CA  07CA               	decf	sprintf@exp& (0+255),f,b
  7204  0003CC  A0D8               	btfss	status,0,c
  7205  0003CE  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7206  0003D0  D017               	goto	l5494
  7207  0003D2                     l5490:
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7211  0003D2  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7212  0003D6  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7213  0003DA  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7214  0003DE  0E00               	movlw	0
  7215  0003E0  0100               	movlb	0	; () banked
  7216  0003E2  6F74               	movwf	___ftge@ff2& (0+255),b
  7217  0003E4  0E20               	movlw	32
  7218  0003E6  0100               	movlb	0	; () banked
  7219  0003E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7220  0003EA  0E41               	movlw	65
  7221  0003EC  0100               	movlb	0	; () banked
  7222  0003EE  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7223  0003F0  ECE7  F018         	call	___ftge	;wreg free
  7224  0003F4  0100               	movlb	0	; () banked
  7225  0003F6  A0D8               	btfss	status,0,c
  7226  0003F8  D003               	goto	l5494
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;doprnt.c: 851: exp++;
  7230  0003FA  0100               	movlb	0	; () banked
  7231  0003FC  4BCA               	infsnz	sprintf@exp& (0+255),f,b
  7232  0003FE  2BCB               	incf	(sprintf@exp+1)& (0+255),f,b
  7233  000400                     l5494:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;doprnt.c: 852: }
  7237                           ;doprnt.c: 1112: if(prec <= 12)
  7238  000400  0100               	movlb	0	; () banked
  7239  000402  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7240  000404  D008               	goto	l5496
  7241  000406  0100               	movlb	0	; () banked
  7242  000408  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7243  00040A  E11D               	bnz	l5498
  7244  00040C  0E0D               	movlw	13
  7245  00040E  0100               	movlb	0	; () banked
  7246  000410  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7247  000412  B0D8               	btfsc	status,0,c
  7248  000414  D018               	goto	l5498
  7249  000416                     l5496:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;doprnt.c: 1113: fval += fround(prec);
  7253  000416  C0CC  F093         	movff	sprintf@fval,___ftadd@f1
  7254  00041A  C0CD  F094         	movff	sprintf@fval+1,___ftadd@f1+1
  7255  00041E  C0CE  F095         	movff	sprintf@fval+2,___ftadd@f1+2
  7256  000422  0100               	movlb	0	; () banked
  7257  000424  51CF               	movf	sprintf@prec& (0+255),w,b
  7258  000426  EC44  F00E         	call	_fround
  7259  00042A  C089  F096         	movff	?_fround,___ftadd@f2
  7260  00042E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
  7261  000432  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
  7262  000436  EC9A  F00F         	call	___ftadd	;wreg free
  7263  00043A  C093  F0CC         	movff	?___ftadd,sprintf@fval
  7264  00043E  C094  F0CD         	movff	?___ftadd+1,sprintf@fval+1
  7265  000442  C095  F0CE         	movff	?___ftadd+2,sprintf@fval+2
  7266  000446                     l5498:
  7267                           
  7268                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7269  000446  0100               	movlb	0	; () banked
  7270  000448  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7271  00044A  D008               	goto	l5500
  7272  00044C  0100               	movlb	0	; () banked
  7273  00044E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7274  000450  E12A               	bnz	l5506
  7275  000452  0E0A               	movlw	10
  7276  000454  0100               	movlb	0	; () banked
  7277  000456  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7278  000458  B0D8               	btfsc	status,0,c
  7279  00045A  D025               	goto	l5506
  7280  00045C                     l5500:
  7281                           
  7282                           ; BSR set to: 0
  7283  00045C  0100               	movlb	0	; () banked
  7284  00045E  51CC               	movf	sprintf@fval& (0+255),w,b
  7285  000460  0100               	movlb	0	; () banked
  7286  000462  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7287  000464  0100               	movlb	0	; () banked
  7288  000466  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7289  000468  B4D8               	btfsc	status,2,c
  7290  00046A  D063               	goto	l5520
  7291                           
  7292                           ; BSR set to: 0
  7293  00046C  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7294  000470  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7295  000474  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7296  000478  EC79  F015         	call	___fttol	;wreg free
  7297  00047C  0100               	movlb	0	; () banked
  7298  00047E  5190               	movf	?___fttol& (0+255),w,b
  7299  000480  0100               	movlb	0	; () banked
  7300  000482  1191               	iorwf	(?___fttol+1)& (0+255),w,b
  7301  000484  0100               	movlb	0	; () banked
  7302  000486  1192               	iorwf	(?___fttol+2)& (0+255),w,b
  7303  000488  0100               	movlb	0	; () banked
  7304  00048A  1193               	iorwf	(?___fttol+3)& (0+255),w,b
  7305  00048C  A4D8               	btfss	status,2,c
  7306  00048E  D051               	goto	l5520
  7307                           
  7308                           ; BSR set to: 0
  7309  000490  0100               	movlb	0	; () banked
  7310  000492  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7311  000494  D04E               	goto	l5520
  7312  000496  0100               	movlb	0	; () banked
  7313  000498  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7314  00049A  E105               	bnz	l5506
  7315  00049C  0E02               	movlw	2
  7316  00049E  0100               	movlb	0	; () banked
  7317  0004A0  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7318  0004A2  A0D8               	btfss	status,0,c
  7319  0004A4  D046               	goto	l5520
  7320  0004A6                     l5506:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7324  0004A6  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7325  0004AA  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7326  0004AE  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7327  0004B2  0E70               	movlw	112
  7328  0004B4  0100               	movlb	0	; () banked
  7329  0004B6  6F74               	movwf	___ftge@ff2& (0+255),b
  7330  0004B8  0E89               	movlw	137
  7331  0004BA  0100               	movlb	0	; () banked
  7332  0004BC  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7333  0004BE  0E40               	movlw	64
  7334  0004C0  0100               	movlb	0	; () banked
  7335  0004C2  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7336  0004C4  ECE7  F018         	call	___ftge	;wreg free
  7337  0004C8  0100               	movlb	0	; () banked
  7338  0004CA  B0D8               	btfsc	status,0,c
  7339  0004CC  D003               	goto	l5510
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7343  0004CE  0100               	movlb	0	; () banked
  7344  0004D0  0EF7               	movlw	247
  7345  0004D2  D002               	goto	L4
  7346  0004D4                     l5510:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7350  0004D4  0100               	movlb	0	; () banked
  7351  0004D6  0EF8               	movlw	248
  7352  0004D8                     L4:
  7353  0004D8  27CA               	addwf	sprintf@exp& (0+255),f,b
  7354  0004DA  0EFF               	movlw	255
  7355  0004DC  23CB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;doprnt.c: 1124: }
  7359                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7360                           
  7361                           ; BSR set to: 0
  7362  0004DE  0100               	movlb	0	; () banked
  7363  0004E0  51CA               	movf	sprintf@exp& (0+255),w,b
  7364  0004E2  ECF5  F009         	call	_scale
  7365  0004E6  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7366  0004EA  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7367  0004EE  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7368                           
  7369                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7370  0004F2  C0CC  F071         	movff	sprintf@fval,__tdiv_to_l_@f1
  7371  0004F6  C0CD  F072         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7372  0004FA  C0CE  F073         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7373  0004FE  C0C2  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7374  000502  C0C3  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7375  000506  C0C4  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7376  00050A  EC6D  F013         	call	__tdiv_to_l_	;wreg free
  7377  00050E  C071  F0C6         	movff	?__tdiv_to_l_,sprintf@val
  7378  000512  C072  F0C7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7379  000516  C073  F0C8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7380  00051A  C074  F0C9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7381                           
  7382                           ;doprnt.c: 1129: fval = 0.0;
  7383  00051E  0E00               	movlw	0
  7384  000520  0100               	movlb	0	; () banked
  7385  000522  6FCC               	movwf	sprintf@fval& (0+255),b
  7386  000524  0E00               	movlw	0
  7387  000526  0100               	movlb	0	; () banked
  7388  000528  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  7389  00052A  0E00               	movlw	0
  7390  00052C  0100               	movlb	0	; () banked
  7391  00052E  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  7392                           
  7393                           ;doprnt.c: 1130: } else {
  7394  000530  D033               	goto	l5524
  7395  000532                     l5520:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7399  000532  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7400  000536  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7401  00053A  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7402  00053E  EC79  F015         	call	___fttol	;wreg free
  7403  000542  C090  F0C6         	movff	?___fttol,sprintf@val
  7404  000546  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7405  00054A  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7406  00054E  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7407                           
  7408                           ;doprnt.c: 1132: fval -= (double)val;
  7409  000552  C0CC  F09F         	movff	sprintf@fval,___ftsub@f1
  7410  000556  C0CD  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
  7411  00055A  C0CE  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
  7412  00055E  C0C6  F076         	movff	sprintf@val,___lltoft@c
  7413  000562  C0C7  F077         	movff	sprintf@val+1,___lltoft@c+1
  7414  000566  C0C8  F078         	movff	sprintf@val+2,___lltoft@c+2
  7415  00056A  C0C9  F079         	movff	sprintf@val+3,___lltoft@c+3
  7416  00056E  EC58  F01B         	call	___lltoft	;wreg free
  7417  000572  C076  F0A2         	movff	?___lltoft,___ftsub@f2
  7418  000576  C077  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
  7419  00057A  C078  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
  7420  00057E  EC13  F01C         	call	___ftsub	;wreg free
  7421  000582  C09F  F0CC         	movff	?___ftsub,sprintf@fval
  7422  000586  C0A0  F0CD         	movff	?___ftsub+1,sprintf@fval+1
  7423  00058A  C0A1  F0CE         	movff	?___ftsub+2,sprintf@fval+2
  7424                           
  7425                           ;doprnt.c: 1133: exp = 0;
  7426  00058E  0E00               	movlw	0
  7427  000590  0100               	movlb	0	; () banked
  7428  000592  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7429  000594  0E00               	movlw	0
  7430  000596  6FCA               	movwf	sprintf@exp& (0+255),b
  7431  000598                     l5524:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;doprnt.c: 1134: }
  7435                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7436  000598  0E01               	movlw	1
  7437  00059A  0100               	movlb	0	; () banked
  7438  00059C  6FD1               	movwf	sprintf@c& (0+255),b
  7439  00059E                     l5526:
  7440                           
  7441                           ; BSR set to: 0
  7442  00059E  0E0A               	movlw	10
  7443  0005A0  0100               	movlb	0	; () banked
  7444  0005A2  19D1               	xorwf	sprintf@c& (0+255),w,b
  7445  0005A4  B4D8               	btfsc	status,2,c
  7446  0005A6  D01E               	goto	l5538
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;doprnt.c: 1137: if(val < dpowers[c])
  7450                           
  7451                           ; BSR set to: 0
  7452                           
  7453                           ; BSR set to: 0
  7454  0005A8  0100               	movlb	0	; () banked
  7455  0005AA  51D1               	movf	sprintf@c& (0+255),w,b
  7456  0005AC  0D04               	mullw	4
  7457  0005AE  0EF5               	movlw	low _dpowers
  7458  0005B0  24F3               	addwf	prodl,w,c
  7459  0005B2  6EF6               	movwf	tblptrl,c
  7460  0005B4  0E7E               	movlw	high _dpowers
  7461  0005B6  20F4               	addwfc	prodh,w,c
  7462  0005B8  6EF7               	movwf	tblptrh,c
  7463  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7464  0005BA                     	endif
  7465  0005BA  0009               	tblrd		*+
  7466  0005BC  50F5               	movf	tablat,w,c
  7467  0005BE  0100               	movlb	0	; () banked
  7468  0005C0  5DC6               	subwf	sprintf@val& (0+255),w,b
  7469  0005C2  0009               	tblrd		*+
  7470  0005C4  50F5               	movf	tablat,w,c
  7471  0005C6  0100               	movlb	0	; () banked
  7472  0005C8  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7473  0005CA  0009               	tblrd		*+
  7474  0005CC  50F5               	movf	tablat,w,c
  7475  0005CE  0100               	movlb	0	; () banked
  7476  0005D0  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7477  0005D2  0009               	tblrd		*+
  7478  0005D4  50F5               	movf	tablat,w,c
  7479  0005D6  0100               	movlb	0	; () banked
  7480  0005D8  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7481  0005DA  A0D8               	btfss	status,0,c
  7482  0005DC  D003               	goto	l5538
  7483                           
  7484                           ; BSR set to: 0
  7485                           
  7486                           ; BSR set to: 0
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;doprnt.c: 1138: break;
  7490  0005DE  0100               	movlb	0	; () banked
  7491  0005E0  2BD1               	incf	sprintf@c& (0+255),f,b
  7492  0005E2  D7DD               	goto	l5526
  7493  0005E4                     l5538:
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;doprnt.c: 1142: width -= prec + c + exp;
  7497  0005E4  C0D1  F0B3         	movff	sprintf@c,??_sprintf
  7498  0005E8  0100               	movlb	0	; () banked
  7499  0005EA  6BB4               	clrf	(??_sprintf+1)& (0+255),b
  7500  0005EC  BFB3               	btfsc	??_sprintf& (0+255),7,b
  7501  0005EE  07B4               	decf	(??_sprintf+1)& (0+255),f,b
  7502  0005F0  0100               	movlb	0	; () banked
  7503  0005F2  51CF               	movf	sprintf@prec& (0+255),w,b
  7504  0005F4  0100               	movlb	0	; () banked
  7505  0005F6  27B3               	addwf	??_sprintf& (0+255),f,b
  7506  0005F8  0100               	movlb	0	; () banked
  7507  0005FA  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7508  0005FC  0100               	movlb	0	; () banked
  7509  0005FE  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7510  000600  0100               	movlb	0	; () banked
  7511  000602  51CA               	movf	sprintf@exp& (0+255),w,b
  7512  000604  0100               	movlb	0	; () banked
  7513  000606  27B3               	addwf	??_sprintf& (0+255),f,b
  7514  000608  0100               	movlb	0	; () banked
  7515  00060A  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7516  00060C  0100               	movlb	0	; () banked
  7517  00060E  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7518  000610  0100               	movlb	0	; () banked
  7519  000612  51B3               	movf	??_sprintf& (0+255),w,b
  7520  000614  0100               	movlb	0	; () banked
  7521  000616  5FC0               	subwf	sprintf@width& (0+255),f,b
  7522  000618  0100               	movlb	0	; () banked
  7523  00061A  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  7524  00061C  0100               	movlb	0	; () banked
  7525  00061E  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7526                           
  7527                           ;doprnt.c: 1143: if(
  7528                           ;doprnt.c: 1147: prec)
  7529  000620  0100               	movlb	0	; () banked
  7530  000622  51CF               	movf	sprintf@prec& (0+255),w,b
  7531  000624  0100               	movlb	0	; () banked
  7532  000626  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7533  000628  B4D8               	btfsc	status,2,c
  7534  00062A  D004               	goto	l5542
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;doprnt.c: 1148: width--;
  7538  00062C  0100               	movlb	0	; () banked
  7539  00062E  07C0               	decf	sprintf@width& (0+255),f,b
  7540  000630  A0D8               	btfss	status,0,c
  7541  000632  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7542  000634                     l5542:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;doprnt.c: 1149: if(flag & 0x03)
  7546  000634  0E03               	movlw	3
  7547  000636  0100               	movlb	0	; () banked
  7548  000638  15BE               	andwf	sprintf@flag& (0+255),w,b
  7549  00063A  0100               	movlb	0	; () banked
  7550  00063C  6FB3               	movwf	??_sprintf& (0+255),b
  7551  00063E  0E00               	movlw	0
  7552  000640  0100               	movlb	0	; () banked
  7553  000642  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7554  000644  0100               	movlb	0	; () banked
  7555  000646  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7556  000648  0100               	movlb	0	; () banked
  7557  00064A  51B3               	movf	??_sprintf& (0+255),w,b
  7558  00064C  0100               	movlb	0	; () banked
  7559  00064E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7560  000650  B4D8               	btfsc	status,2,c
  7561  000652  D00E               	goto	l5552
  7562  000654  D009               	goto	l5550
  7563  000656                     l5546:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7567  000656  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7568  00065A  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7569  00065E  0E20               	movlw	32
  7570  000660  6EDF               	movwf	indf2,c
  7571                           
  7572                           ; BSR set to: 0
  7573  000662  0100               	movlb	0	; () banked
  7574  000664  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7575  000666  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7576  000668                     l5550:
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;doprnt.c: 1182: width--;
  7580  000668  0100               	movlb	0	; () banked
  7581  00066A  07C0               	decf	sprintf@width& (0+255),f,b
  7582  00066C  A0D8               	btfss	status,0,c
  7583  00066E  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7584  000670                     l5552:
  7585                           
  7586                           ; BSR set to: 0
  7587  000670  0100               	movlb	0	; () banked
  7588  000672  BFC1               	btfsc	(sprintf@width+1)& (0+255),7,b
  7589  000674  D007               	goto	l5554
  7590  000676  0100               	movlb	0	; () banked
  7591  000678  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  7592  00067A  E1ED               	bnz	l5546
  7593  00067C  0100               	movlb	0	; () banked
  7594  00067E  05C0               	decf	sprintf@width& (0+255),w,b
  7595  000680  B0D8               	btfsc	status,0,c
  7596  000682  D7E9               	goto	l5546
  7597  000684                     l5554:
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;doprnt.c: 1183: }
  7601                           ;doprnt.c: 1188: if(flag & 0x03)
  7602  000684  0E03               	movlw	3
  7603  000686  0100               	movlb	0	; () banked
  7604  000688  15BE               	andwf	sprintf@flag& (0+255),w,b
  7605  00068A  0100               	movlb	0	; () banked
  7606  00068C  6FB3               	movwf	??_sprintf& (0+255),b
  7607  00068E  0E00               	movlw	0
  7608  000690  0100               	movlb	0	; () banked
  7609  000692  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7610  000694  0100               	movlb	0	; () banked
  7611  000696  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7612  000698  0100               	movlb	0	; () banked
  7613  00069A  51B3               	movf	??_sprintf& (0+255),w,b
  7614  00069C  0100               	movlb	0	; () banked
  7615  00069E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7616  0006A0  B4D8               	btfsc	status,2,c
  7617  0006A2  D055               	goto	l5568
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7621  0006A4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7622  0006A8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7623  0006AC  0E2D               	movlw	45
  7624  0006AE  D04D               	goto	L5
  7625  0006B0                     l5558:
  7626                           
  7627                           ; BSR set to: 0
  7628  0006B0  0100               	movlb	0	; () banked
  7629  0006B2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7630  0006B4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;doprnt.c: 1195: }
  7634                           ;doprnt.c: 1196: while(c--) {
  7635  0006B6  D04B               	goto	l5568
  7636  0006B8                     l5560:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;doprnt.c: 1200: {
  7640                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7641  0006B8  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7642  0006BC  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7643  0006C0  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7644  0006C4  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7645  0006C8  0100               	movlb	0	; () banked
  7646  0006CA  51D1               	movf	sprintf@c& (0+255),w,b
  7647  0006CC  0D04               	mullw	4
  7648  0006CE  0EF5               	movlw	low _dpowers
  7649  0006D0  24F3               	addwf	prodl,w,c
  7650  0006D2  6EF6               	movwf	tblptrl,c
  7651  0006D4  0E7E               	movlw	high _dpowers
  7652  0006D6  20F4               	addwfc	prodh,w,c
  7653  0006D8  6EF7               	movwf	tblptrh,c
  7654  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7655  0006DA                     	endif
  7656  0006DA  0009               	tblrd		*+
  7657  0006DC  CFF5 F075          	movff	tablat,___lldiv@divisor
  7658  0006E0  0009               	tblrd		*+
  7659  0006E2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7660  0006E6  0009               	tblrd		*+
  7661  0006E8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7662  0006EC  000A               	tblrd		*-
  7663  0006EE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7664  0006F2  EC9E  F019         	call	___lldiv	;wreg free
  7665  0006F6  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7666  0006FA  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7667  0006FE  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7668  000702  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7669                           
  7670                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7671  000706  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7672  00070A  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7673  00070E  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7674  000712  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7675  000716  0E0A               	movlw	10
  7676  000718  0100               	movlb	0	; () banked
  7677  00071A  6F7D               	movwf	___llmod@divisor& (0+255),b
  7678  00071C  0E00               	movlw	0
  7679  00071E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7680  000720  0E00               	movlw	0
  7681  000722  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7682  000724  0E00               	movlw	0
  7683  000726  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7684  000728  EC93  F01A         	call	___llmod	;wreg free
  7685  00072C  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7686  000730  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7687  000734  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7688  000738  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7689                           
  7690                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7691  00073C  0100               	movlb	0	; () banked
  7692  00073E  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7693  000740  0F30               	addlw	48
  7694  000742  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7695  000746  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7696  00074A                     L5:
  7697  00074A  6EDF               	movwf	indf2,c
  7698  00074C  D7B1               	goto	l5558
  7699  00074E                     l5568:
  7700                           
  7701                           ; BSR set to: 0
  7702  00074E  0100               	movlb	0	; () banked
  7703  000750  07D1               	decf	sprintf@c& (0+255),f,b
  7704  000752  0100               	movlb	0	; () banked
  7705  000754  29D1               	incf	sprintf@c& (0+255),w,b
  7706  000756  B4D8               	btfsc	status,2,c
  7707  000758  D00E               	goto	l5576
  7708  00075A  D7AE               	goto	l5560
  7709  00075C                     l5570:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7713  00075C  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7714  000760  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7715  000764  0E30               	movlw	48
  7716  000766  6EDF               	movwf	indf2,c
  7717                           
  7718                           ; BSR set to: 0
  7719  000768  0100               	movlb	0	; () banked
  7720  00076A  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7721  00076C  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;doprnt.c: 1209: exp--;
  7725  00076E  0100               	movlb	0	; () banked
  7726  000770  07CA               	decf	sprintf@exp& (0+255),f,b
  7727  000772  A0D8               	btfss	status,0,c
  7728  000774  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7729  000776                     l5576:
  7730                           
  7731                           ; BSR set to: 0
  7732  000776  0100               	movlb	0	; () banked
  7733  000778  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7734  00077A  D007               	goto	l5578
  7735  00077C  0100               	movlb	0	; () banked
  7736  00077E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7737  000780  E1ED               	bnz	l5570
  7738  000782  0100               	movlb	0	; () banked
  7739  000784  05CA               	decf	sprintf@exp& (0+255),w,b
  7740  000786  B0D8               	btfsc	status,0,c
  7741  000788  D7E9               	goto	l5570
  7742  00078A                     l5578:
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;doprnt.c: 1210: }
  7746                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7747  00078A  0100               	movlb	0	; () banked
  7748  00078C  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7749  00078E  D00C               	goto	l489
  7750  000790  0100               	movlb	0	; () banked
  7751  000792  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7752  000794  E105               	bnz	u5780
  7753  000796  0E09               	movlw	9
  7754  000798  0100               	movlb	0	; () banked
  7755  00079A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7756  00079C  A0D8               	btfss	status,0,c
  7757  00079E  D004               	goto	l489
  7758  0007A0                     u5780:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7762  0007A0  0E08               	movlw	8
  7763  0007A2  0100               	movlb	0	; () banked
  7764  0007A4  6FD1               	movwf	sprintf@c& (0+255),b
  7765  0007A6  D002               	goto	l5582
  7766  0007A8                     l489:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;doprnt.c: 1213: else
  7770                           ;doprnt.c: 1214: c = prec;
  7771  0007A8  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  7772  0007AC                     l5582:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;doprnt.c: 1215: prec -= c;
  7776  0007AC  0100               	movlb	0	; () banked
  7777  0007AE  51D1               	movf	sprintf@c& (0+255),w,b
  7778  0007B0  0100               	movlb	0	; () banked
  7779  0007B2  5FCF               	subwf	sprintf@prec& (0+255),f,b
  7780  0007B4  0E00               	movlw	0
  7781  0007B6  0100               	movlb	0	; () banked
  7782  0007B8  BFD1               	btfsc	sprintf@c& (0+255),7,b
  7783  0007BA  0EFF               	movlw	255
  7784  0007BC  0100               	movlb	0	; () banked
  7785  0007BE  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;doprnt.c: 1219: if(c)
  7789  0007C0  0100               	movlb	0	; () banked
  7790  0007C2  51D1               	movf	sprintf@c& (0+255),w,b
  7791  0007C4  0100               	movlb	0	; () banked
  7792  0007C6  B4D8               	btfsc	status,2,c
  7793  0007C8  D009               	goto	l5590
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7797  0007CA  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7798  0007CE  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7799  0007D2  0E2E               	movlw	46
  7800  0007D4  6EDF               	movwf	indf2,c
  7801                           
  7802                           ; BSR set to: 0
  7803  0007D6  0100               	movlb	0	; () banked
  7804  0007D8  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7805  0007DA  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7806  0007DC                     l5590:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7810  0007DC  0100               	movlb	0	; () banked
  7811  0007DE  51D1               	movf	sprintf@c& (0+255),w,b
  7812  0007E0  ECF5  F009         	call	_scale
  7813  0007E4  C089  F0B9         	movff	?_scale,_sprintf$2424
  7814  0007E8  C08A  F0BA         	movff	?_scale+1,_sprintf$2424+1
  7815  0007EC  C08B  F0BB         	movff	?_scale+2,_sprintf$2424+2
  7816                           
  7817                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7818  0007F0  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7819  0007F4  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7820  0007F8  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7821  0007FC  C0B9  F07D         	movff	_sprintf$2424,___ftmul@f1
  7822  000800  C0BA  F07E         	movff	_sprintf$2424+1,___ftmul@f1+1
  7823  000804  C0BB  F07F         	movff	_sprintf$2424+2,___ftmul@f1+2
  7824  000808  ECD0  F014         	call	___ftmul	;wreg free
  7825  00080C  C07D  F090         	movff	?___ftmul,___fttol@f1
  7826  000810  C07E  F091         	movff	?___ftmul+1,___fttol@f1+1
  7827  000814  C07F  F092         	movff	?___ftmul+2,___fttol@f1+2
  7828  000818  EC79  F015         	call	___fttol	;wreg free
  7829  00081C  C090  F0C6         	movff	?___fttol,sprintf@val
  7830  000820  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7831  000824  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7832  000828  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7833                           
  7834                           ;doprnt.c: 1228: while(c--) {
  7835  00082C  D074               	goto	l5604
  7836  00082E                     l5594:
  7837                           
  7838                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7839  00082E  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7840  000832  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7841  000836  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7842  00083A  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7843  00083E  0100               	movlb	0	; () banked
  7844  000840  51D1               	movf	sprintf@c& (0+255),w,b
  7845  000842  0D04               	mullw	4
  7846  000844  0EF5               	movlw	low _dpowers
  7847  000846  24F3               	addwf	prodl,w,c
  7848  000848  6EF6               	movwf	tblptrl,c
  7849  00084A  0E7E               	movlw	high _dpowers
  7850  00084C  20F4               	addwfc	prodh,w,c
  7851  00084E  6EF7               	movwf	tblptrh,c
  7852  000850                     	if	0	;There are less than 3 active tblptr bytes
  7853  000850                     	endif
  7854  000850  0009               	tblrd		*+
  7855  000852  CFF5 F075          	movff	tablat,___lldiv@divisor
  7856  000856  0009               	tblrd		*+
  7857  000858  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7858  00085C  0009               	tblrd		*+
  7859  00085E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7860  000862  000A               	tblrd		*-
  7861  000864  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7862  000868  EC9E  F019         	call	___lldiv	;wreg free
  7863  00086C  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7864  000870  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7865  000874  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7866  000878  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7867                           
  7868                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7869  00087C  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7870  000880  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7871  000884  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7872  000888  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7873  00088C  0E0A               	movlw	10
  7874  00088E  0100               	movlb	0	; () banked
  7875  000890  6F7D               	movwf	___llmod@divisor& (0+255),b
  7876  000892  0E00               	movlw	0
  7877  000894  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7878  000896  0E00               	movlw	0
  7879  000898  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7880  00089A  0E00               	movlw	0
  7881  00089C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7882  00089E  EC93  F01A         	call	___llmod	;wreg free
  7883  0008A2  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7884  0008A6  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7885  0008AA  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7886  0008AE  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7887                           
  7888                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7889  0008B2  0100               	movlb	0	; () banked
  7890  0008B4  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7891  0008B6  0F30               	addlw	48
  7892  0008B8  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7893  0008BC  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7894  0008C0  6EDF               	movwf	indf2,c
  7895                           
  7896                           ; BSR set to: 0
  7897  0008C2  0100               	movlb	0	; () banked
  7898  0008C4  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7899  0008C6  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;doprnt.c: 1232: val %= dpowers[c];
  7903  0008C8  C0C6  F079         	movff	sprintf@val,___llmod@dividend
  7904  0008CC  C0C7  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7905  0008D0  C0C8  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7906  0008D4  C0C9  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7907  0008D8  0100               	movlb	0	; () banked
  7908  0008DA  51D1               	movf	sprintf@c& (0+255),w,b
  7909  0008DC  0D04               	mullw	4
  7910  0008DE  0EF5               	movlw	low _dpowers
  7911  0008E0  24F3               	addwf	prodl,w,c
  7912  0008E2  6EF6               	movwf	tblptrl,c
  7913  0008E4  0E7E               	movlw	high _dpowers
  7914  0008E6  20F4               	addwfc	prodh,w,c
  7915  0008E8  6EF7               	movwf	tblptrh,c
  7916  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7917  0008EA                     	endif
  7918  0008EA  0009               	tblrd		*+
  7919  0008EC  CFF5 F07D          	movff	tablat,___llmod@divisor
  7920  0008F0  0009               	tblrd		*+
  7921  0008F2  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7922  0008F6  0009               	tblrd		*+
  7923  0008F8  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7924  0008FC  000A               	tblrd		*-
  7925  0008FE  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7926  000902  EC93  F01A         	call	___llmod	;wreg free
  7927  000906  C079  F0C6         	movff	?___llmod,sprintf@val
  7928  00090A  C07A  F0C7         	movff	?___llmod+1,sprintf@val+1
  7929  00090E  C07B  F0C8         	movff	?___llmod+2,sprintf@val+2
  7930  000912  C07C  F0C9         	movff	?___llmod+3,sprintf@val+3
  7931  000916                     l5604:
  7932  000916  0100               	movlb	0	; () banked
  7933  000918  07D1               	decf	sprintf@c& (0+255),f,b
  7934  00091A  0100               	movlb	0	; () banked
  7935  00091C  29D1               	incf	sprintf@c& (0+255),w,b
  7936  00091E  B4D8               	btfsc	status,2,c
  7937  000920  D00E               	goto	l5612
  7938  000922  D785               	goto	l5594
  7939  000924                     l5606:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7943  000924  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7944  000928  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7945  00092C  0E30               	movlw	48
  7946  00092E  6EDF               	movwf	indf2,c
  7947                           
  7948                           ; BSR set to: 0
  7949  000930  0100               	movlb	0	; () banked
  7950  000932  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7951  000934  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;doprnt.c: 1237: prec--;
  7955  000936  0100               	movlb	0	; () banked
  7956  000938  07CF               	decf	sprintf@prec& (0+255),f,b
  7957  00093A  A0D8               	btfss	status,0,c
  7958  00093C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  7959  00093E                     l5612:
  7960                           
  7961                           ; BSR set to: 0
  7962  00093E  0100               	movlb	0	; () banked
  7963  000940  51CF               	movf	sprintf@prec& (0+255),w,b
  7964  000942  0100               	movlb	0	; () banked
  7965  000944  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7966  000946  B4D8               	btfsc	status,2,c
  7967  000948  D169               	goto	l5694
  7968  00094A  D7EC               	goto	l5606
  7969  00094C                     l5614:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;doprnt.c: 1246: }
  7973                           ;doprnt.c: 1253: {
  7974                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7975  00094C  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7976  000950  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7977  000954  CFDE F0C6          	movff	postinc2,sprintf@val
  7978  000958  CFDD F0C7          	movff	postdec2,sprintf@val+1
  7979  00095C  0100               	movlb	0	; () banked
  7980  00095E  0E00               	movlw	0
  7981  000960  BFC7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7982  000962  0EFF               	movlw	-1
  7983  000964  6FC8               	movwf	(sprintf@val+2)& (0+255),b
  7984  000966  6FC9               	movwf	(sprintf@val+3)& (0+255),b
  7985                           
  7986                           ; BSR set to: 0
  7987  000968  0E02               	movlw	2
  7988  00096A  0100               	movlb	0	; () banked
  7989  00096C  27BC               	addwf	sprintf@ap& (0+255),f,b
  7990  00096E  0E00               	movlw	0
  7991  000970  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;doprnt.c: 1261: if((long)val < 0) {
  7995  000972  0100               	movlb	0	; () banked
  7996  000974  AFC9               	btfss	(sprintf@val+3)& (0+255),7,b
  7997  000976  D00C               	goto	l5624
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;doprnt.c: 1262: flag |= 0x03;
  8001  000978  0E03               	movlw	3
  8002  00097A  0100               	movlb	0	; () banked
  8003  00097C  13BE               	iorwf	sprintf@flag& (0+255),f,b
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;doprnt.c: 1263: val = -val;
  8007  00097E  0100               	movlb	0	; () banked
  8008  000980  1FC9               	comf	(sprintf@val+3)& (0+255),f,b
  8009  000982  1FC8               	comf	(sprintf@val+2)& (0+255),f,b
  8010  000984  1FC7               	comf	(sprintf@val+1)& (0+255),f,b
  8011  000986  6DC6               	negf	sprintf@val& (0+255),b
  8012  000988  0E00               	movlw	0
  8013  00098A  23C7               	addwfc	(sprintf@val+1)& (0+255),f,b
  8014  00098C  23C8               	addwfc	(sprintf@val+2)& (0+255),f,b
  8015  00098E  23C9               	addwfc	(sprintf@val+3)& (0+255),f,b
  8016  000990                     l5624:
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;doprnt.c: 1264: }
  8020                           ;doprnt.c: 1266: }
  8021                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8022  000990  0100               	movlb	0	; () banked
  8023  000992  51CF               	movf	sprintf@prec& (0+255),w,b
  8024  000994  0100               	movlb	0	; () banked
  8025  000996  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8026  000998  A4D8               	btfss	status,2,c
  8027  00099A  D00D               	goto	l5630
  8028                           
  8029                           ; BSR set to: 0
  8030  00099C  0100               	movlb	0	; () banked
  8031  00099E  51C6               	movf	sprintf@val& (0+255),w,b
  8032  0009A0  0100               	movlb	0	; () banked
  8033  0009A2  11C7               	iorwf	(sprintf@val+1)& (0+255),w,b
  8034  0009A4  0100               	movlb	0	; () banked
  8035  0009A6  11C8               	iorwf	(sprintf@val+2)& (0+255),w,b
  8036  0009A8  0100               	movlb	0	; () banked
  8037  0009AA  11C9               	iorwf	(sprintf@val+3)& (0+255),w,b
  8038  0009AC  A4D8               	btfss	status,2,c
  8039  0009AE  D003               	goto	l5630
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;doprnt.c: 1291: prec++;
  8043  0009B0  0100               	movlb	0	; () banked
  8044  0009B2  4BCF               	infsnz	sprintf@prec& (0+255),f,b
  8045  0009B4  2BD0               	incf	(sprintf@prec+1)& (0+255),f,b
  8046  0009B6                     l5630:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8050  0009B6  0E01               	movlw	1
  8051  0009B8  0100               	movlb	0	; () banked
  8052  0009BA  6FD1               	movwf	sprintf@c& (0+255),b
  8053  0009BC                     l5632:
  8054                           
  8055                           ; BSR set to: 0
  8056  0009BC  0E0A               	movlw	10
  8057  0009BE  0100               	movlb	0	; () banked
  8058  0009C0  19D1               	xorwf	sprintf@c& (0+255),w,b
  8059  0009C2  B4D8               	btfsc	status,2,c
  8060  0009C4  D01E               	goto	l5644
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;doprnt.c: 1306: if(val < dpowers[c])
  8064                           
  8065                           ; BSR set to: 0
  8066                           
  8067                           ; BSR set to: 0
  8068  0009C6  0100               	movlb	0	; () banked
  8069  0009C8  51D1               	movf	sprintf@c& (0+255),w,b
  8070  0009CA  0D04               	mullw	4
  8071  0009CC  0EF5               	movlw	low _dpowers
  8072  0009CE  24F3               	addwf	prodl,w,c
  8073  0009D0  6EF6               	movwf	tblptrl,c
  8074  0009D2  0E7E               	movlw	high _dpowers
  8075  0009D4  20F4               	addwfc	prodh,w,c
  8076  0009D6  6EF7               	movwf	tblptrh,c
  8077  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8078  0009D8                     	endif
  8079  0009D8  0009               	tblrd		*+
  8080  0009DA  50F5               	movf	tablat,w,c
  8081  0009DC  0100               	movlb	0	; () banked
  8082  0009DE  5DC6               	subwf	sprintf@val& (0+255),w,b
  8083  0009E0  0009               	tblrd		*+
  8084  0009E2  50F5               	movf	tablat,w,c
  8085  0009E4  0100               	movlb	0	; () banked
  8086  0009E6  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  8087  0009E8  0009               	tblrd		*+
  8088  0009EA  50F5               	movf	tablat,w,c
  8089  0009EC  0100               	movlb	0	; () banked
  8090  0009EE  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  8091  0009F0  0009               	tblrd		*+
  8092  0009F2  50F5               	movf	tablat,w,c
  8093  0009F4  0100               	movlb	0	; () banked
  8094  0009F6  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  8095  0009F8  A0D8               	btfss	status,0,c
  8096  0009FA  D003               	goto	l5644
  8097                           
  8098                           ; BSR set to: 0
  8099                           
  8100                           ; BSR set to: 0
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;doprnt.c: 1307: break;
  8104  0009FC  0100               	movlb	0	; () banked
  8105  0009FE  2BD1               	incf	sprintf@c& (0+255),f,b
  8106  000A00  D7DD               	goto	l5632
  8107  000A02                     l5644:
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;doprnt.c: 1339: if(c < prec)
  8111  000A02  0E80               	movlw	128
  8112  000A04  0100               	movlb	0	; () banked
  8113  000A06  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8114  000A08  0E7F               	movlw	127
  8115  000A0A  0100               	movlb	0	; () banked
  8116  000A0C  6FB3               	movwf	??_sprintf& (0+255),b
  8117  000A0E  0100               	movlb	0	; () banked
  8118  000A10  51CF               	movf	sprintf@prec& (0+255),w,b
  8119  000A12  0100               	movlb	0	; () banked
  8120  000A14  5DD1               	subwf	sprintf@c& (0+255),w,b
  8121  000A16  0100               	movlb	0	; () banked
  8122  000A18  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8123  000A1A  0A80               	xorlw	128
  8124  000A1C  0100               	movlb	0	; () banked
  8125  000A1E  59B3               	subwfb	??_sprintf& (0+255),w,b
  8126  000A20  B0D8               	btfsc	status,0,c
  8127  000A22  D003               	goto	l5648
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;doprnt.c: 1340: c = prec;
  8131  000A24  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  8132  000A28  D018               	goto	l5652
  8133  000A2A                     l5648:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;doprnt.c: 1341: else if(prec < c)
  8137  000A2A  0100               	movlb	0	; () banked
  8138  000A2C  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8139  000A2E  0A80               	xorlw	128
  8140  000A30  0100               	movlb	0	; () banked
  8141  000A32  6FB3               	movwf	??_sprintf& (0+255),b
  8142  000A34  0100               	movlb	0	; () banked
  8143  000A36  51D1               	movf	sprintf@c& (0+255),w,b
  8144  000A38  0100               	movlb	0	; () banked
  8145  000A3A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8146  000A3C  0E80               	movlw	128
  8147  000A3E  0100               	movlb	0	; () banked
  8148  000A40  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8149  000A42  0E7F               	movlw	127
  8150  000A44  0100               	movlb	0	; () banked
  8151  000A46  59B3               	subwfb	??_sprintf& (0+255),w,b
  8152  000A48  B0D8               	btfsc	status,0,c
  8153  000A4A  D007               	goto	l5652
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;doprnt.c: 1342: prec = c;
  8157  000A4C  0100               	movlb	0	; () banked
  8158  000A4E  51D1               	movf	sprintf@c& (0+255),w,b
  8159  000A50  0100               	movlb	0	; () banked
  8160  000A52  6FCF               	movwf	sprintf@prec& (0+255),b
  8161  000A54  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
  8162  000A56  BFCF               	btfsc	sprintf@prec& (0+255),7,b
  8163  000A58  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8164  000A5A                     l5652:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8168  000A5A  0100               	movlb	0	; () banked
  8169  000A5C  51C0               	movf	sprintf@width& (0+255),w,b
  8170  000A5E  0100               	movlb	0	; () banked
  8171  000A60  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8172  000A62  B4D8               	btfsc	status,2,c
  8173  000A64  D014               	goto	l5658
  8174                           
  8175                           ; BSR set to: 0
  8176  000A66  0E03               	movlw	3
  8177  000A68  0100               	movlb	0	; () banked
  8178  000A6A  15BE               	andwf	sprintf@flag& (0+255),w,b
  8179  000A6C  0100               	movlb	0	; () banked
  8180  000A6E  6FB3               	movwf	??_sprintf& (0+255),b
  8181  000A70  0E00               	movlw	0
  8182  000A72  0100               	movlb	0	; () banked
  8183  000A74  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8184  000A76  0100               	movlb	0	; () banked
  8185  000A78  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8186  000A7A  0100               	movlb	0	; () banked
  8187  000A7C  51B3               	movf	??_sprintf& (0+255),w,b
  8188  000A7E  0100               	movlb	0	; () banked
  8189  000A80  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8190  000A82  B4D8               	btfsc	status,2,c
  8191  000A84  D004               	goto	l5658
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;doprnt.c: 1346: width--;
  8195  000A86  0100               	movlb	0	; () banked
  8196  000A88  07C0               	decf	sprintf@width& (0+255),f,b
  8197  000A8A  A0D8               	btfss	status,0,c
  8198  000A8C  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8199  000A8E                     l5658:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8203  000A8E  0100               	movlb	0	; () banked
  8204  000A90  ADBF               	btfss	(sprintf@flag+1)& (0+255),6,b
  8205  000A92  D01E               	goto	l5666
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;doprnt.c: 1349: if(width > prec)
  8209  000A94  0100               	movlb	0	; () banked
  8210  000A96  51C0               	movf	sprintf@width& (0+255),w,b
  8211  000A98  0100               	movlb	0	; () banked
  8212  000A9A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8213  000A9C  0100               	movlb	0	; () banked
  8214  000A9E  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8215  000AA0  0A80               	xorlw	128
  8216  000AA2  0100               	movlb	0	; () banked
  8217  000AA4  6FB3               	movwf	??_sprintf& (0+255),b
  8218  000AA6  0100               	movlb	0	; () banked
  8219  000AA8  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8220  000AAA  0A80               	xorlw	128
  8221  000AAC  0100               	movlb	0	; () banked
  8222  000AAE  59B3               	subwfb	??_sprintf& (0+255),w,b
  8223  000AB0  B0D8               	btfsc	status,0,c
  8224  000AB2  D009               	goto	l5664
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;doprnt.c: 1350: width -= prec;
  8228  000AB4  0100               	movlb	0	; () banked
  8229  000AB6  51CF               	movf	sprintf@prec& (0+255),w,b
  8230  000AB8  0100               	movlb	0	; () banked
  8231  000ABA  5FC0               	subwf	sprintf@width& (0+255),f,b
  8232  000ABC  0100               	movlb	0	; () banked
  8233  000ABE  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8234  000AC0  0100               	movlb	0	; () banked
  8235  000AC2  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8236  000AC4  D005               	goto	l5666
  8237  000AC6                     l5664:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;doprnt.c: 1351: else
  8241                           ;doprnt.c: 1352: width = 0;
  8242  000AC6  0E00               	movlw	0
  8243  000AC8  0100               	movlb	0	; () banked
  8244  000ACA  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8245  000ACC  0E00               	movlw	0
  8246  000ACE  6FC0               	movwf	sprintf@width& (0+255),b
  8247  000AD0                     l5666:
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;doprnt.c: 1353: }
  8251                           ;doprnt.c: 1381: if(width > c)
  8252  000AD0  0E80               	movlw	128
  8253  000AD2  0100               	movlb	0	; () banked
  8254  000AD4  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8255  000AD6  0E7F               	movlw	127
  8256  000AD8  0100               	movlb	0	; () banked
  8257  000ADA  6FB3               	movwf	??_sprintf& (0+255),b
  8258  000ADC  0100               	movlb	0	; () banked
  8259  000ADE  51C0               	movf	sprintf@width& (0+255),w,b
  8260  000AE0  0100               	movlb	0	; () banked
  8261  000AE2  5DD1               	subwf	sprintf@c& (0+255),w,b
  8262  000AE4  0100               	movlb	0	; () banked
  8263  000AE6  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8264  000AE8  0A80               	xorlw	128
  8265  000AEA  0100               	movlb	0	; () banked
  8266  000AEC  59B3               	subwfb	??_sprintf& (0+255),w,b
  8267  000AEE  B0D8               	btfsc	status,0,c
  8268  000AF0  D00B               	goto	l5670
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;doprnt.c: 1382: width -= c;
  8272  000AF2  0100               	movlb	0	; () banked
  8273  000AF4  51D1               	movf	sprintf@c& (0+255),w,b
  8274  000AF6  0100               	movlb	0	; () banked
  8275  000AF8  5FC0               	subwf	sprintf@width& (0+255),f,b
  8276  000AFA  0E00               	movlw	0
  8277  000AFC  0100               	movlb	0	; () banked
  8278  000AFE  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8279  000B00  0EFF               	movlw	255
  8280  000B02  0100               	movlb	0	; () banked
  8281  000B04  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8282  000B06  D005               	goto	l5672
  8283  000B08                     l5670:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;doprnt.c: 1383: else
  8287                           ;doprnt.c: 1384: width = 0;
  8288  000B08  0E00               	movlw	0
  8289  000B0A  0100               	movlb	0	; () banked
  8290  000B0C  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8291  000B0E  0E00               	movlw	0
  8292  000B10  6FC0               	movwf	sprintf@width& (0+255),b
  8293  000B12                     l5672:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;doprnt.c: 1422: {
  8297                           ;doprnt.c: 1424: if(width
  8298                           ;doprnt.c: 1428: )
  8299  000B12  0100               	movlb	0	; () banked
  8300  000B14  51C0               	movf	sprintf@width& (0+255),w,b
  8301  000B16  0100               	movlb	0	; () banked
  8302  000B18  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8303  000B1A  B4D8               	btfsc	status,2,c
  8304  000B1C  D013               	goto	l5680
  8305  000B1E                     l5674:
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8309  000B1E  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8310  000B22  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8311  000B26  0E20               	movlw	32
  8312  000B28  6EDF               	movwf	indf2,c
  8313                           
  8314                           ; BSR set to: 0
  8315  000B2A  0100               	movlb	0	; () banked
  8316  000B2C  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8317  000B2E  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;doprnt.c: 1431: while(--width);
  8321  000B30  0100               	movlb	0	; () banked
  8322  000B32  07C0               	decf	sprintf@width& (0+255),f,b
  8323  000B34  A0D8               	btfss	status,0,c
  8324  000B36  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8325  000B38  0100               	movlb	0	; () banked
  8326  000B3A  51C0               	movf	sprintf@width& (0+255),w,b
  8327  000B3C  0100               	movlb	0	; () banked
  8328  000B3E  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8329  000B40  A4D8               	btfss	status,2,c
  8330  000B42  D7ED               	goto	l5674
  8331  000B44                     l5680:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;doprnt.c: 1438: if(flag & 0x03)
  8335  000B44  0E03               	movlw	3
  8336  000B46  0100               	movlb	0	; () banked
  8337  000B48  15BE               	andwf	sprintf@flag& (0+255),w,b
  8338  000B4A  0100               	movlb	0	; () banked
  8339  000B4C  6FB3               	movwf	??_sprintf& (0+255),b
  8340  000B4E  0E00               	movlw	0
  8341  000B50  0100               	movlb	0	; () banked
  8342  000B52  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8343  000B54  0100               	movlb	0	; () banked
  8344  000B56  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8345  000B58  0100               	movlb	0	; () banked
  8346  000B5A  51B3               	movf	??_sprintf& (0+255),w,b
  8347  000B5C  0100               	movlb	0	; () banked
  8348  000B5E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8349  000B60  B4D8               	btfsc	status,2,c
  8350  000B62  D051               	goto	l5692
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8354  000B64  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8355  000B68  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8356  000B6C  0E2D               	movlw	45
  8357  000B6E  6EDF               	movwf	indf2,c
  8358  000B70  D047               	goto	l5690
  8359  000B72                     l5686:
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;doprnt.c: 1478: {
  8363                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8364  000B72  C0CF  F0B3         	movff	sprintf@prec,??_sprintf
  8365  000B76  C0D0  F0B4         	movff	sprintf@prec+1,??_sprintf+1
  8366  000B7A  0100               	movlb	0	; () banked
  8367  000B7C  90D8               	bcf	status,0,c
  8368  000B7E  37B3               	rlcf	??_sprintf& (0+255),f,b
  8369  000B80  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8370  000B82  0100               	movlb	0	; () banked
  8371  000B84  90D8               	bcf	status,0,c
  8372  000B86  37B3               	rlcf	??_sprintf& (0+255),f,b
  8373  000B88  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8374  000B8A  0EF5               	movlw	low _dpowers
  8375  000B8C  0100               	movlb	0	; () banked
  8376  000B8E  25B3               	addwf	??_sprintf& (0+255),w,b
  8377  000B90  6EF6               	movwf	tblptrl,c
  8378  000B92  0E7E               	movlw	high _dpowers
  8379  000B94  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8380  000B96  6EF7               	movwf	tblptrh,c
  8381  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8382  000B98                     	endif
  8383  000B98  0009               	tblrd		*+
  8384  000B9A  CFF5 F075          	movff	tablat,___lldiv@divisor
  8385  000B9E  0009               	tblrd		*+
  8386  000BA0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8387  000BA4  0009               	tblrd		*+
  8388  000BA6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8389  000BAA  000A               	tblrd		*-
  8390  000BAC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8391  000BB0  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  8392  000BB4  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8393  000BB8  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8394  000BBC  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8395  000BC0  EC9E  F019         	call	___lldiv	;wreg free
  8396  000BC4  C071  F079         	movff	?___lldiv,___llmod@dividend
  8397  000BC8  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8398  000BCC  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8399  000BD0  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8400  000BD4  0E0A               	movlw	10
  8401  000BD6  0100               	movlb	0	; () banked
  8402  000BD8  6F7D               	movwf	___llmod@divisor& (0+255),b
  8403  000BDA  0E00               	movlw	0
  8404  000BDC  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8405  000BDE  0E00               	movlw	0
  8406  000BE0  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8407  000BE2  0E00               	movlw	0
  8408  000BE4  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8409  000BE6  EC93  F01A         	call	___llmod	;wreg free
  8410  000BEA  0100               	movlb	0	; () banked
  8411  000BEC  5179               	movf	?___llmod& (0+255),w,b
  8412  000BEE  0F30               	addlw	48
  8413  000BF0  0100               	movlb	0	; () banked
  8414  000BF2  6FD1               	movwf	sprintf@c& (0+255),b
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;doprnt.c: 1523: }
  8418                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8419  000BF4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8420  000BF8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8421  000BFC  C0D1  FFDF         	movff	sprintf@c,indf2
  8422  000C00                     l5690:
  8423                           
  8424                           ; BSR set to: 0
  8425  000C00  0100               	movlb	0	; () banked
  8426  000C02  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8427  000C04  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8428  000C06                     l5692:
  8429                           
  8430                           ; BSR set to: 0
  8431  000C06  0100               	movlb	0	; () banked
  8432  000C08  07CF               	decf	sprintf@prec& (0+255),f,b
  8433  000C0A  A0D8               	btfss	status,0,c
  8434  000C0C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8435  000C0E  0100               	movlb	0	; () banked
  8436  000C10  29CF               	incf	sprintf@prec& (0+255),w,b
  8437  000C12  E1AF               	bnz	l5686
  8438  000C14  0100               	movlb	0	; () banked
  8439  000C16  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
  8440  000C18  A4D8               	btfss	status,2,c
  8441  000C1A  D7AB               	goto	l5686
  8442  000C1C                     l5694:
  8443                           
  8444                           ; BSR set to: 0
  8445  000C1C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  8446  000C20  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  8447  000C24  0100               	movlb	0	; () banked
  8448  000C26  4BA7               	infsnz	sprintf@f& (0+255),f,b
  8449  000C28  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  8450  000C2A                     	if	0	;tblptru may be non-zero
  8451  000C2A                     	endif
  8452  000C2A                     	if	0	;tblptru may be non-zero
  8453  000C2A                     	endif
  8454  000C2A  0008               	tblrd		*
  8455  000C2C  CFF5 F0D1          	movff	tablat,sprintf@c
  8456  000C30  0100               	movlb	0	; () banked
  8457  000C32  51D1               	movf	sprintf@c& (0+255),w,b
  8458  000C34  A4D8               	btfss	status,2,c
  8459  000C36  EF5D  F000         	goto	l5408
  8460  000C3A                     l5696:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;doprnt.c: 1538: *sp = 0;
  8464  000C3A  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8465  000C3E  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8466  000C42  0E00               	movlw	0
  8467  000C44  6EDF               	movwf	indf2,c
  8468  000C46  0012               	return	
  8469  000C48                     __end_of_sprintf:
  8470                           	opt stack 0
  8471                           tblptru	equ	0xFF8
  8472                           tblptrh	equ	0xFF7
  8473                           tblptrl	equ	0xFF6
  8474                           tablat	equ	0xFF5
  8475                           prodh	equ	0xFF4
  8476                           prodl	equ	0xFF3
  8477                           indf0	equ	0xFEF
  8478                           postinc0	equ	0xFEE
  8479                           fsr0h	equ	0xFEA
  8480                           fsr0l	equ	0xFE9
  8481                           wreg	equ	0xFE8
  8482                           indf1	equ	0xFE7
  8483                           postdec1	equ	0xFE5
  8484                           fsr1h	equ	0xFE2
  8485                           fsr1l	equ	0xFE1
  8486                           indf2	equ	0xFDF
  8487                           postinc2	equ	0xFDE
  8488                           postdec2	equ	0xFDD
  8489                           fsr2h	equ	0xFDA
  8490                           fsr2l	equ	0xFD9
  8491                           status	equ	0xFD8
  8492                           
  8493 ;; *************** function _scale *****************
  8494 ;; Defined at:
  8495 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  scl             1    wreg     char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  scl             1   47[BANK0 ] char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  3   41[BANK0 ] char 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8509 ;;      Params:         0       3       0       0       0       0       0
  8510 ;;      Locals:         0       4       0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0
  8512 ;;      Totals:         0       7       0       0       0       0       0
  8513 ;;Total ram usage:        7 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    5
  8516 ;; This function calls:
  8517 ;;		___awdiv
  8518 ;;		___awmod
  8519 ;;		___ftmul
  8520 ;;		___wmul
  8521 ;; This function is called by:
  8522 ;;		_sprintf
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text32
  8527  0013EA                     __ptext32:
  8528                           	opt stack 0
  8529  0013EA                     _scale:
  8530                           	opt stack 22
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;incstack = 0
  8534                           ;scale@scl stored from wreg
  8535  0013EA  0100               	movlb	0	; () banked
  8536  0013EC  6F8F               	movwf	scale@scl& (0+255),b
  8537                           
  8538                           ;doprnt.c: 428: if(scl < 0) {
  8539  0013EE  0100               	movlb	0	; () banked
  8540  0013F0  AF8F               	btfss	scale@scl& (0+255),7,b
  8541  0013F2  D12A               	goto	l5080
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;doprnt.c: 429: scl = -scl;
  8545  0013F4  0100               	movlb	0	; () banked
  8546  0013F6  6D8F               	negf	scale@scl& (0+255),b
  8547                           
  8548                           ;doprnt.c: 430: if(scl>=110)
  8549  0013F8  0100               	movlb	0	; () banked
  8550  0013FA  518F               	movf	scale@scl& (0+255),w,b
  8551  0013FC  0A80               	xorlw	128
  8552  0013FE  0F12               	addlw	-238
  8553  001400  A0D8               	btfss	status,0,c
  8554  001402  D0AC               	goto	l5070
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8558  001404  0E00               	movlw	0
  8559  001406  0100               	movlb	0	; () banked
  8560  001408  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8561  00140A  0E03               	movlw	3
  8562  00140C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8563  00140E  0E00               	movlw	0
  8564  001410  0100               	movlb	0	; () banked
  8565  001412  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8566  001414  0E0A               	movlw	10
  8567  001416  6F77               	movwf	___awdiv@divisor& (0+255),b
  8568  001418  0E00               	movlw	0
  8569  00141A  0100               	movlb	0	; () banked
  8570  00141C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8571  00141E  0E64               	movlw	100
  8572  001420  6F73               	movwf	___awmod@divisor& (0+255),b
  8573  001422  0100               	movlb	0	; () banked
  8574  001424  518F               	movf	scale@scl& (0+255),w,b
  8575  001426  0100               	movlb	0	; () banked
  8576  001428  6F71               	movwf	___awmod@dividend& (0+255),b
  8577  00142A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8578  00142C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8579  00142E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8580  001430  EC49  F01A         	call	___awmod	;wreg free
  8581  001434  C071  F075         	movff	?___awmod,___awdiv@dividend
  8582  001438  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8583  00143C  ECF6  F019         	call	___awdiv	;wreg free
  8584  001440  0E09               	movlw	9
  8585  001442  0100               	movlb	0	; () banked
  8586  001444  2575               	addwf	?___awdiv& (0+255),w,b
  8587  001446  0100               	movlb	0	; () banked
  8588  001448  6F79               	movwf	___wmul@multiplier& (0+255),b
  8589  00144A  0E00               	movlw	0
  8590  00144C  0100               	movlb	0	; () banked
  8591  00144E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8592  001450  0100               	movlb	0	; () banked
  8593  001452  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8594  001454  EC7B  F01D         	call	___wmul	;wreg free
  8595  001458  0E44               	movlw	low __npowers_
  8596  00145A  0100               	movlb	0	; () banked
  8597  00145C  2579               	addwf	?___wmul& (0+255),w,b
  8598  00145E  6EF6               	movwf	tblptrl,c
  8599  001460  0E7F               	movlw	high __npowers_
  8600  001462  0100               	movlb	0	; () banked
  8601  001464  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8602  001466  6EF7               	movwf	tblptrh,c
  8603  001468                     	if	0	;There are less than 3 active tblptr bytes
  8604  001468                     	endif
  8605  001468  0009               	tblrd		*+
  8606  00146A  CFF5 F080          	movff	tablat,___ftmul@f2
  8607  00146E  0009               	tblrd		*+
  8608  001470  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8609  001474  000A               	tblrd		*-
  8610  001476  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8611  00147A  0E00               	movlw	0
  8612  00147C  0100               	movlb	0	; () banked
  8613  00147E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8614  001480  0E64               	movlw	100
  8615  001482  6F77               	movwf	___awdiv@divisor& (0+255),b
  8616  001484  0100               	movlb	0	; () banked
  8617  001486  518F               	movf	scale@scl& (0+255),w,b
  8618  001488  0100               	movlb	0	; () banked
  8619  00148A  6F75               	movwf	___awdiv@dividend& (0+255),b
  8620  00148C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8621  00148E  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8622  001490  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8623  001492  ECF6  F019         	call	___awdiv	;wreg free
  8624  001496  0E12               	movlw	18
  8625  001498  0100               	movlb	0	; () banked
  8626  00149A  2575               	addwf	?___awdiv& (0+255),w,b
  8627  00149C  0100               	movlb	0	; () banked
  8628  00149E  6F79               	movwf	___wmul@multiplier& (0+255),b
  8629  0014A0  0E00               	movlw	0
  8630  0014A2  0100               	movlb	0	; () banked
  8631  0014A4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8632  0014A6  0100               	movlb	0	; () banked
  8633  0014A8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8634  0014AA  0E00               	movlw	0
  8635  0014AC  0100               	movlb	0	; () banked
  8636  0014AE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8637  0014B0  0E03               	movlw	3
  8638  0014B2  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8639  0014B4  EC7B  F01D         	call	___wmul	;wreg free
  8640  0014B8  0E44               	movlw	low __npowers_
  8641  0014BA  0100               	movlb	0	; () banked
  8642  0014BC  2579               	addwf	?___wmul& (0+255),w,b
  8643  0014BE  6EF6               	movwf	tblptrl,c
  8644  0014C0  0E7F               	movlw	high __npowers_
  8645  0014C2  0100               	movlb	0	; () banked
  8646  0014C4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8647  0014C6  6EF7               	movwf	tblptrh,c
  8648  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8649  0014C8                     	endif
  8650  0014C8  0009               	tblrd		*+
  8651  0014CA  CFF5 F07D          	movff	tablat,___ftmul@f1
  8652  0014CE  0009               	tblrd		*+
  8653  0014D0  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8654  0014D4  000A               	tblrd		*-
  8655  0014D6  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8656  0014DA  ECD0  F014         	call	___ftmul	;wreg free
  8657  0014DE  C07D  F08C         	movff	?___ftmul,_scale$2423
  8658  0014E2  C07E  F08D         	movff	?___ftmul+1,_scale$2423+1
  8659  0014E6  C07F  F08E         	movff	?___ftmul+2,_scale$2423+2
  8660                           
  8661                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8662  0014EA  C08C  F07D         	movff	_scale$2423,___ftmul@f1
  8663  0014EE  C08D  F07E         	movff	_scale$2423+1,___ftmul@f1+1
  8664  0014F2  C08E  F07F         	movff	_scale$2423+2,___ftmul@f1+2
  8665  0014F6  0E00               	movlw	0
  8666  0014F8  0100               	movlb	0	; () banked
  8667  0014FA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8668  0014FC  0E03               	movlw	3
  8669  0014FE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8670  001500  0E00               	movlw	0
  8671  001502  0100               	movlb	0	; () banked
  8672  001504  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8673  001506  0E0A               	movlw	10
  8674  001508  6F73               	movwf	___awmod@divisor& (0+255),b
  8675  00150A  0100               	movlb	0	; () banked
  8676  00150C  518F               	movf	scale@scl& (0+255),w,b
  8677  00150E  0100               	movlb	0	; () banked
  8678  001510  6F71               	movwf	___awmod@dividend& (0+255),b
  8679  001512  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8680  001514  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8681  001516  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8682  001518  EC49  F01A         	call	___awmod	;wreg free
  8683  00151C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8684  001520  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8685  001524  EC7B  F01D         	call	___wmul	;wreg free
  8686  001528  0E44               	movlw	low __npowers_
  8687  00152A  0100               	movlb	0	; () banked
  8688  00152C  2579               	addwf	?___wmul& (0+255),w,b
  8689  00152E  6EF6               	movwf	tblptrl,c
  8690  001530  0E7F               	movlw	high __npowers_
  8691  001532  0100               	movlb	0	; () banked
  8692  001534  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8693  001536  6EF7               	movwf	tblptrh,c
  8694  001538                     	if	0	;There are less than 3 active tblptr bytes
  8695  001538                     	endif
  8696  001538  0009               	tblrd		*+
  8697  00153A  CFF5 F080          	movff	tablat,___ftmul@f2
  8698  00153E  0009               	tblrd		*+
  8699  001540  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8700  001544  000A               	tblrd		*-
  8701  001546  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8702  00154A  ECD0  F014         	call	___ftmul	;wreg free
  8703  00154E  C07D  F089         	movff	?___ftmul,?_scale
  8704  001552  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8705  001556  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8706  00155A  0012               	return	
  8707  00155C                     l5070:
  8708                           
  8709                           ;doprnt.c: 432: else if(scl > 10)
  8710  00155C  0100               	movlb	0	; () banked
  8711  00155E  518F               	movf	scale@scl& (0+255),w,b
  8712  001560  0A80               	xorlw	128
  8713  001562  0F75               	addlw	-139
  8714  001564  A0D8               	btfss	status,0,c
  8715  001566  D05D               	goto	l5076
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8719  001568  0E00               	movlw	0
  8720  00156A  0100               	movlb	0	; () banked
  8721  00156C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8722  00156E  0E0A               	movlw	10
  8723  001570  6F77               	movwf	___awdiv@divisor& (0+255),b
  8724  001572  0100               	movlb	0	; () banked
  8725  001574  518F               	movf	scale@scl& (0+255),w,b
  8726  001576  0100               	movlb	0	; () banked
  8727  001578  6F75               	movwf	___awdiv@dividend& (0+255),b
  8728  00157A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8729  00157C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8730  00157E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8731  001580  ECF6  F019         	call	___awdiv	;wreg free
  8732  001584  0E09               	movlw	9
  8733  001586  0100               	movlb	0	; () banked
  8734  001588  2575               	addwf	?___awdiv& (0+255),w,b
  8735  00158A  0100               	movlb	0	; () banked
  8736  00158C  6F79               	movwf	___wmul@multiplier& (0+255),b
  8737  00158E  0E00               	movlw	0
  8738  001590  0100               	movlb	0	; () banked
  8739  001592  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8740  001594  0100               	movlb	0	; () banked
  8741  001596  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8742  001598  0E00               	movlw	0
  8743  00159A  0100               	movlb	0	; () banked
  8744  00159C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8745  00159E  0E03               	movlw	3
  8746  0015A0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8747  0015A2  EC7B  F01D         	call	___wmul	;wreg free
  8748  0015A6  0E44               	movlw	low __npowers_
  8749  0015A8  0100               	movlb	0	; () banked
  8750  0015AA  2579               	addwf	?___wmul& (0+255),w,b
  8751  0015AC  6EF6               	movwf	tblptrl,c
  8752  0015AE  0E7F               	movlw	high __npowers_
  8753  0015B0  0100               	movlb	0	; () banked
  8754  0015B2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8755  0015B4  6EF7               	movwf	tblptrh,c
  8756  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8757  0015B6                     	endif
  8758  0015B6  0009               	tblrd		*+
  8759  0015B8  CFF5 F07D          	movff	tablat,___ftmul@f1
  8760  0015BC  0009               	tblrd		*+
  8761  0015BE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8762  0015C2  000A               	tblrd		*-
  8763  0015C4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8764  0015C8  0E00               	movlw	0
  8765  0015CA  0100               	movlb	0	; () banked
  8766  0015CC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8767  0015CE  0E03               	movlw	3
  8768  0015D0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8769  0015D2  0E00               	movlw	0
  8770  0015D4  0100               	movlb	0	; () banked
  8771  0015D6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8772  0015D8  0E0A               	movlw	10
  8773  0015DA  6F73               	movwf	___awmod@divisor& (0+255),b
  8774  0015DC  0100               	movlb	0	; () banked
  8775  0015DE  518F               	movf	scale@scl& (0+255),w,b
  8776  0015E0  0100               	movlb	0	; () banked
  8777  0015E2  6F71               	movwf	___awmod@dividend& (0+255),b
  8778  0015E4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8779  0015E6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8780  0015E8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8781  0015EA  EC49  F01A         	call	___awmod	;wreg free
  8782  0015EE  C071  F079         	movff	?___awmod,___wmul@multiplier
  8783  0015F2  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8784  0015F6  EC7B  F01D         	call	___wmul	;wreg free
  8785  0015FA  0E44               	movlw	low __npowers_
  8786  0015FC  0100               	movlb	0	; () banked
  8787  0015FE  2579               	addwf	?___wmul& (0+255),w,b
  8788  001600  6EF6               	movwf	tblptrl,c
  8789  001602  0E7F               	movlw	high __npowers_
  8790  001604  0100               	movlb	0	; () banked
  8791  001606  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8792  001608  6EF7               	movwf	tblptrh,c
  8793  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8794  00160A                     	endif
  8795  00160A  0009               	tblrd		*+
  8796  00160C  CFF5 F080          	movff	tablat,___ftmul@f2
  8797  001610  0009               	tblrd		*+
  8798  001612  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8799  001616  000A               	tblrd		*-
  8800  001618  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8801  00161C  ECD0  F014         	call	___ftmul	;wreg free
  8802  001620  D796               	goto	L6
  8803  001622                     l5076:
  8804                           
  8805                           ;doprnt.c: 434: return _npowers_[scl];
  8806  001622  0100               	movlb	0	; () banked
  8807  001624  518F               	movf	scale@scl& (0+255),w,b
  8808  001626  0D03               	mullw	3
  8809  001628  0E44               	movlw	low __npowers_
  8810  00162A  24F3               	addwf	prodl,w,c
  8811  00162C  6EF6               	movwf	tblptrl,c
  8812  00162E  0E7F               	movlw	high __npowers_
  8813  001630  20F4               	addwfc	prodh,w,c
  8814  001632  6EF7               	movwf	tblptrh,c
  8815  001634                     	if	0	;There are less than 3 active tblptr bytes
  8816  001634                     	endif
  8817  001634  0009               	tblrd		*+
  8818  001636  CFF5 F089          	movff	tablat,?_scale
  8819  00163A  0009               	tblrd		*+
  8820  00163C  CFF5 F08A          	movff	tablat,?_scale+1
  8821  001640  000A               	tblrd		*-
  8822  001642  CFF5 F08B          	movff	tablat,?_scale+2
  8823                           
  8824                           ; BSR set to: 0
  8825  001646  0012               	return	
  8826  001648                     l5080:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;doprnt.c: 435: }
  8830                           ;doprnt.c: 436: if(scl>=110)
  8831  001648  0100               	movlb	0	; () banked
  8832  00164A  518F               	movf	scale@scl& (0+255),w,b
  8833  00164C  0A80               	xorlw	128
  8834  00164E  0F12               	addlw	-238
  8835  001650  A0D8               	btfss	status,0,c
  8836  001652  D0AC               	goto	l5088
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8840  001654  0E00               	movlw	0
  8841  001656  0100               	movlb	0	; () banked
  8842  001658  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8843  00165A  0E03               	movlw	3
  8844  00165C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8845  00165E  0E00               	movlw	0
  8846  001660  0100               	movlb	0	; () banked
  8847  001662  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8848  001664  0E0A               	movlw	10
  8849  001666  6F77               	movwf	___awdiv@divisor& (0+255),b
  8850  001668  0E00               	movlw	0
  8851  00166A  0100               	movlb	0	; () banked
  8852  00166C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8853  00166E  0E64               	movlw	100
  8854  001670  6F73               	movwf	___awmod@divisor& (0+255),b
  8855  001672  0100               	movlb	0	; () banked
  8856  001674  518F               	movf	scale@scl& (0+255),w,b
  8857  001676  0100               	movlb	0	; () banked
  8858  001678  6F71               	movwf	___awmod@dividend& (0+255),b
  8859  00167A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8860  00167C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8861  00167E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8862  001680  EC49  F01A         	call	___awmod	;wreg free
  8863  001684  C071  F075         	movff	?___awmod,___awdiv@dividend
  8864  001688  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8865  00168C  ECF6  F019         	call	___awdiv	;wreg free
  8866  001690  0E09               	movlw	9
  8867  001692  0100               	movlb	0	; () banked
  8868  001694  2575               	addwf	?___awdiv& (0+255),w,b
  8869  001696  0100               	movlb	0	; () banked
  8870  001698  6F79               	movwf	___wmul@multiplier& (0+255),b
  8871  00169A  0E00               	movlw	0
  8872  00169C  0100               	movlb	0	; () banked
  8873  00169E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8874  0016A0  0100               	movlb	0	; () banked
  8875  0016A2  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8876  0016A4  EC7B  F01D         	call	___wmul	;wreg free
  8877  0016A8  0E1D               	movlw	low __powers_
  8878  0016AA  0100               	movlb	0	; () banked
  8879  0016AC  2579               	addwf	?___wmul& (0+255),w,b
  8880  0016AE  6EF6               	movwf	tblptrl,c
  8881  0016B0  0E7F               	movlw	high __powers_
  8882  0016B2  0100               	movlb	0	; () banked
  8883  0016B4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8884  0016B6  6EF7               	movwf	tblptrh,c
  8885  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8886  0016B8                     	endif
  8887  0016B8  0009               	tblrd		*+
  8888  0016BA  CFF5 F080          	movff	tablat,___ftmul@f2
  8889  0016BE  0009               	tblrd		*+
  8890  0016C0  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8891  0016C4  000A               	tblrd		*-
  8892  0016C6  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8893  0016CA  0E00               	movlw	0
  8894  0016CC  0100               	movlb	0	; () banked
  8895  0016CE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8896  0016D0  0E64               	movlw	100
  8897  0016D2  6F77               	movwf	___awdiv@divisor& (0+255),b
  8898  0016D4  0100               	movlb	0	; () banked
  8899  0016D6  518F               	movf	scale@scl& (0+255),w,b
  8900  0016D8  0100               	movlb	0	; () banked
  8901  0016DA  6F75               	movwf	___awdiv@dividend& (0+255),b
  8902  0016DC  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8903  0016DE  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8904  0016E0  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8905  0016E2  ECF6  F019         	call	___awdiv	;wreg free
  8906  0016E6  0E12               	movlw	18
  8907  0016E8  0100               	movlb	0	; () banked
  8908  0016EA  2575               	addwf	?___awdiv& (0+255),w,b
  8909  0016EC  0100               	movlb	0	; () banked
  8910  0016EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  8911  0016F0  0E00               	movlw	0
  8912  0016F2  0100               	movlb	0	; () banked
  8913  0016F4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8914  0016F6  0100               	movlb	0	; () banked
  8915  0016F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8916  0016FA  0E00               	movlw	0
  8917  0016FC  0100               	movlb	0	; () banked
  8918  0016FE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8919  001700  0E03               	movlw	3
  8920  001702  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8921  001704  EC7B  F01D         	call	___wmul	;wreg free
  8922  001708  0E1D               	movlw	low __powers_
  8923  00170A  0100               	movlb	0	; () banked
  8924  00170C  2579               	addwf	?___wmul& (0+255),w,b
  8925  00170E  6EF6               	movwf	tblptrl,c
  8926  001710  0E7F               	movlw	high __powers_
  8927  001712  0100               	movlb	0	; () banked
  8928  001714  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8929  001716  6EF7               	movwf	tblptrh,c
  8930  001718                     	if	0	;There are less than 3 active tblptr bytes
  8931  001718                     	endif
  8932  001718  0009               	tblrd		*+
  8933  00171A  CFF5 F07D          	movff	tablat,___ftmul@f1
  8934  00171E  0009               	tblrd		*+
  8935  001720  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8936  001724  000A               	tblrd		*-
  8937  001726  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8938  00172A  ECD0  F014         	call	___ftmul	;wreg free
  8939  00172E  C07D  F08C         	movff	?___ftmul,_scale$2423
  8940  001732  C07E  F08D         	movff	?___ftmul+1,_scale$2423+1
  8941  001736  C07F  F08E         	movff	?___ftmul+2,_scale$2423+2
  8942                           
  8943                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8944  00173A  C08C  F07D         	movff	_scale$2423,___ftmul@f1
  8945  00173E  C08D  F07E         	movff	_scale$2423+1,___ftmul@f1+1
  8946  001742  C08E  F07F         	movff	_scale$2423+2,___ftmul@f1+2
  8947  001746  0E00               	movlw	0
  8948  001748  0100               	movlb	0	; () banked
  8949  00174A  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8950  00174C  0E03               	movlw	3
  8951  00174E  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8952  001750  0E00               	movlw	0
  8953  001752  0100               	movlb	0	; () banked
  8954  001754  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8955  001756  0E0A               	movlw	10
  8956  001758  6F73               	movwf	___awmod@divisor& (0+255),b
  8957  00175A  0100               	movlb	0	; () banked
  8958  00175C  518F               	movf	scale@scl& (0+255),w,b
  8959  00175E  0100               	movlb	0	; () banked
  8960  001760  6F71               	movwf	___awmod@dividend& (0+255),b
  8961  001762  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8962  001764  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8963  001766  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8964  001768  EC49  F01A         	call	___awmod	;wreg free
  8965  00176C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8966  001770  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8967  001774  EC7B  F01D         	call	___wmul	;wreg free
  8968  001778  0E1D               	movlw	low __powers_
  8969  00177A  0100               	movlb	0	; () banked
  8970  00177C  2579               	addwf	?___wmul& (0+255),w,b
  8971  00177E  6EF6               	movwf	tblptrl,c
  8972  001780  0E7F               	movlw	high __powers_
  8973  001782  0100               	movlb	0	; () banked
  8974  001784  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8975  001786  6EF7               	movwf	tblptrh,c
  8976  001788                     	if	0	;There are less than 3 active tblptr bytes
  8977  001788                     	endif
  8978  001788  0009               	tblrd		*+
  8979  00178A  CFF5 F080          	movff	tablat,___ftmul@f2
  8980  00178E  0009               	tblrd		*+
  8981  001790  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8982  001794  000A               	tblrd		*-
  8983  001796  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8984  00179A  ECD0  F014         	call	___ftmul	;wreg free
  8985  00179E  C07D  F089         	movff	?___ftmul,?_scale
  8986  0017A2  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8987  0017A6  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8988  0017AA  0012               	return	
  8989  0017AC                     l5088:
  8990                           
  8991                           ;doprnt.c: 438: else if(scl > 10)
  8992  0017AC  0100               	movlb	0	; () banked
  8993  0017AE  518F               	movf	scale@scl& (0+255),w,b
  8994  0017B0  0A80               	xorlw	128
  8995  0017B2  0F75               	addlw	-139
  8996  0017B4  A0D8               	btfss	status,0,c
  8997  0017B6  D05D               	goto	l5094
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9001  0017B8  0E00               	movlw	0
  9002  0017BA  0100               	movlb	0	; () banked
  9003  0017BC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9004  0017BE  0E0A               	movlw	10
  9005  0017C0  6F77               	movwf	___awdiv@divisor& (0+255),b
  9006  0017C2  0100               	movlb	0	; () banked
  9007  0017C4  518F               	movf	scale@scl& (0+255),w,b
  9008  0017C6  0100               	movlb	0	; () banked
  9009  0017C8  6F75               	movwf	___awdiv@dividend& (0+255),b
  9010  0017CA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9011  0017CC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  9012  0017CE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9013  0017D0  ECF6  F019         	call	___awdiv	;wreg free
  9014  0017D4  0E09               	movlw	9
  9015  0017D6  0100               	movlb	0	; () banked
  9016  0017D8  2575               	addwf	?___awdiv& (0+255),w,b
  9017  0017DA  0100               	movlb	0	; () banked
  9018  0017DC  6F79               	movwf	___wmul@multiplier& (0+255),b
  9019  0017DE  0E00               	movlw	0
  9020  0017E0  0100               	movlb	0	; () banked
  9021  0017E2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9022  0017E4  0100               	movlb	0	; () banked
  9023  0017E6  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9024  0017E8  0E00               	movlw	0
  9025  0017EA  0100               	movlb	0	; () banked
  9026  0017EC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9027  0017EE  0E03               	movlw	3
  9028  0017F0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9029  0017F2  EC7B  F01D         	call	___wmul	;wreg free
  9030  0017F6  0E1D               	movlw	low __powers_
  9031  0017F8  0100               	movlb	0	; () banked
  9032  0017FA  2579               	addwf	?___wmul& (0+255),w,b
  9033  0017FC  6EF6               	movwf	tblptrl,c
  9034  0017FE  0E7F               	movlw	high __powers_
  9035  001800  0100               	movlb	0	; () banked
  9036  001802  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9037  001804  6EF7               	movwf	tblptrh,c
  9038  001806                     	if	0	;There are less than 3 active tblptr bytes
  9039  001806                     	endif
  9040  001806  0009               	tblrd		*+
  9041  001808  CFF5 F07D          	movff	tablat,___ftmul@f1
  9042  00180C  0009               	tblrd		*+
  9043  00180E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9044  001812  000A               	tblrd		*-
  9045  001814  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9046  001818  0E00               	movlw	0
  9047  00181A  0100               	movlb	0	; () banked
  9048  00181C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9049  00181E  0E03               	movlw	3
  9050  001820  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9051  001822  0E00               	movlw	0
  9052  001824  0100               	movlb	0	; () banked
  9053  001826  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9054  001828  0E0A               	movlw	10
  9055  00182A  6F73               	movwf	___awmod@divisor& (0+255),b
  9056  00182C  0100               	movlb	0	; () banked
  9057  00182E  518F               	movf	scale@scl& (0+255),w,b
  9058  001830  0100               	movlb	0	; () banked
  9059  001832  6F71               	movwf	___awmod@dividend& (0+255),b
  9060  001834  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9061  001836  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9062  001838  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9063  00183A  EC49  F01A         	call	___awmod	;wreg free
  9064  00183E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9065  001842  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9066  001846  EC7B  F01D         	call	___wmul	;wreg free
  9067  00184A  0E1D               	movlw	low __powers_
  9068  00184C  0100               	movlb	0	; () banked
  9069  00184E  2579               	addwf	?___wmul& (0+255),w,b
  9070  001850  6EF6               	movwf	tblptrl,c
  9071  001852  0E7F               	movlw	high __powers_
  9072  001854  0100               	movlb	0	; () banked
  9073  001856  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9074  001858  6EF7               	movwf	tblptrh,c
  9075  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9076  00185A                     	endif
  9077  00185A  0009               	tblrd		*+
  9078  00185C  CFF5 F080          	movff	tablat,___ftmul@f2
  9079  001860  0009               	tblrd		*+
  9080  001862  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9081  001866  000A               	tblrd		*-
  9082  001868  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9083  00186C  ECD0  F014         	call	___ftmul	;wreg free
  9084  001870  D796               	goto	L7
  9085  001872                     l5094:
  9086                           
  9087                           ;doprnt.c: 440: return _powers_[scl];
  9088  001872  0100               	movlb	0	; () banked
  9089  001874  518F               	movf	scale@scl& (0+255),w,b
  9090  001876  0D03               	mullw	3
  9091  001878  0E1D               	movlw	low __powers_
  9092  00187A  24F3               	addwf	prodl,w,c
  9093  00187C  6EF6               	movwf	tblptrl,c
  9094  00187E  0E7F               	movlw	high __powers_
  9095  001880  20F4               	addwfc	prodh,w,c
  9096  001882  6EF7               	movwf	tblptrh,c
  9097  001884                     	if	0	;There are less than 3 active tblptr bytes
  9098  001884                     	endif
  9099  001884  0009               	tblrd		*+
  9100  001886  CFF5 F089          	movff	tablat,?_scale
  9101  00188A  0009               	tblrd		*+
  9102  00188C  CFF5 F08A          	movff	tablat,?_scale+1
  9103  001890  000A               	tblrd		*-
  9104  001892  CFF5 F08B          	movff	tablat,?_scale+2
  9105  001896  0012               	return	
  9106  001898                     __end_of_scale:
  9107                           	opt stack 0
  9108                           tblptru	equ	0xFF8
  9109                           tblptrh	equ	0xFF7
  9110                           tblptrl	equ	0xFF6
  9111                           tablat	equ	0xFF5
  9112                           prodh	equ	0xFF4
  9113                           prodl	equ	0xFF3
  9114                           indf0	equ	0xFEF
  9115                           postinc0	equ	0xFEE
  9116                           fsr0h	equ	0xFEA
  9117                           fsr0l	equ	0xFE9
  9118                           wreg	equ	0xFE8
  9119                           indf1	equ	0xFE7
  9120                           postdec1	equ	0xFE5
  9121                           fsr1h	equ	0xFE2
  9122                           fsr1l	equ	0xFE1
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           fsr2h	equ	0xFDA
  9127                           fsr2l	equ	0xFD9
  9128                           status	equ	0xFD8
  9129                           
  9130 ;; *************** function _isdigit *****************
  9131 ;; Defined at:
  9132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  c               1    wreg     unsigned char 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  c               1   35[COMRAM] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;		None               void
  9139 ;; Registers used:
  9140 ;;		wreg, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9146 ;;      Params:         0       0       0       0       0       0       0
  9147 ;;      Locals:         2       0       0       0       0       0       0
  9148 ;;      Temps:          1       0       0       0       0       0       0
  9149 ;;      Totals:         3       0       0       0       0       0       0
  9150 ;;Total ram usage:        3 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    3
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_sprintf
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text33
  9161  003C5C                     __ptext33:
  9162                           	opt stack 0
  9163  003C5C                     _isdigit:
  9164                           	opt stack 24
  9165                           
  9166                           ;incstack = 0
  9167                           ;isdigit@c stored from wreg
  9168  003C5C  6E24               	movwf	isdigit@c,c
  9169  003C5E  0E00               	movlw	0
  9170  003C60  6E23               	movwf	_isdigit$2063,c
  9171  003C62  0E3A               	movlw	58
  9172  003C64  6024               	cpfslt	isdigit@c,c
  9173  003C66  D005               	goto	l5106
  9174  003C68  0E2F               	movlw	47
  9175  003C6A  6424               	cpfsgt	isdigit@c,c
  9176  003C6C  D002               	goto	l5106
  9177  003C6E  0E01               	movlw	1
  9178  003C70  6E23               	movwf	_isdigit$2063,c
  9179  003C72                     l5106:
  9180  003C72  C023  F022         	movff	_isdigit$2063,??_isdigit
  9181  003C76  3022               	rrcf	??_isdigit,w,c
  9182  003C78  0012               	return	
  9183  003C7A                     __end_of_isdigit:
  9184                           	opt stack 0
  9185                           tblptru	equ	0xFF8
  9186                           tblptrh	equ	0xFF7
  9187                           tblptrl	equ	0xFF6
  9188                           tablat	equ	0xFF5
  9189                           prodh	equ	0xFF4
  9190                           prodl	equ	0xFF3
  9191                           indf0	equ	0xFEF
  9192                           postinc0	equ	0xFEE
  9193                           fsr0h	equ	0xFEA
  9194                           fsr0l	equ	0xFE9
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postdec1	equ	0xFE5
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function _fround *****************
  9208 ;; Defined at:
  9209 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  prec            1    wreg     unsigned char 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  prec            1   50[BANK0 ] unsigned char 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  3   41[BANK0 ] unsigned char 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9223 ;;      Params:         0       3       0       0       0       0       0
  9224 ;;      Locals:         0       7       0       0       0       0       0
  9225 ;;      Temps:          0       0       0       0       0       0       0
  9226 ;;      Totals:         0      10       0       0       0       0       0
  9227 ;;Total ram usage:       10 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; Hardware stack levels required when called:    5
  9230 ;; This function calls:
  9231 ;;		___awdiv
  9232 ;;		___awmod
  9233 ;;		___ftmul
  9234 ;;		___wmul
  9235 ;; This function is called by:
  9236 ;;		_sprintf
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text34
  9241  001C88                     __ptext34:
  9242                           	opt stack 0
  9243  001C88                     _fround:
  9244                           	opt stack 22
  9245                           
  9246                           ;incstack = 0
  9247                           ;fround@prec stored from wreg
  9248  001C88  0100               	movlb	0	; () banked
  9249  001C8A  6F92               	movwf	fround@prec& (0+255),b
  9250                           
  9251                           ;doprnt.c: 413: if(prec>=110)
  9252  001C8C  0E6D               	movlw	109
  9253  001C8E  0100               	movlb	0	; () banked
  9254  001C90  6592               	cpfsgt	fround@prec& (0+255),b
  9255  001C92  D0BA               	goto	l5048
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9259  001C94  0E00               	movlw	0
  9260  001C96  0100               	movlb	0	; () banked
  9261  001C98  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9262  001C9A  0E03               	movlw	3
  9263  001C9C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9264  001C9E  0E00               	movlw	0
  9265  001CA0  0100               	movlb	0	; () banked
  9266  001CA2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9267  001CA4  0E0A               	movlw	10
  9268  001CA6  6F77               	movwf	___awdiv@divisor& (0+255),b
  9269  001CA8  0E00               	movlw	0
  9270  001CAA  0100               	movlb	0	; () banked
  9271  001CAC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9272  001CAE  0E64               	movlw	100
  9273  001CB0  6F73               	movwf	___awmod@divisor& (0+255),b
  9274  001CB2  C092  F071         	movff	fround@prec,___awmod@dividend
  9275  001CB6  0100               	movlb	0	; () banked
  9276  001CB8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9277  001CBA  EC49  F01A         	call	___awmod	;wreg free
  9278  001CBE  C071  F075         	movff	?___awmod,___awdiv@dividend
  9279  001CC2  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  9280  001CC6  ECF6  F019         	call	___awdiv	;wreg free
  9281  001CCA  0E09               	movlw	9
  9282  001CCC  0100               	movlb	0	; () banked
  9283  001CCE  2575               	addwf	?___awdiv& (0+255),w,b
  9284  001CD0  0100               	movlb	0	; () banked
  9285  001CD2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9286  001CD4  0E00               	movlw	0
  9287  001CD6  0100               	movlb	0	; () banked
  9288  001CD8  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9289  001CDA  0100               	movlb	0	; () banked
  9290  001CDC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9291  001CDE  EC7B  F01D         	call	___wmul	;wreg free
  9292  001CE2  0E44               	movlw	low __npowers_
  9293  001CE4  0100               	movlb	0	; () banked
  9294  001CE6  2579               	addwf	?___wmul& (0+255),w,b
  9295  001CE8  6EF6               	movwf	tblptrl,c
  9296  001CEA  0E7F               	movlw	high __npowers_
  9297  001CEC  0100               	movlb	0	; () banked
  9298  001CEE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9299  001CF0  6EF7               	movwf	tblptrh,c
  9300  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  9301  001CF2                     	endif
  9302  001CF2  0009               	tblrd		*+
  9303  001CF4  CFF5 F080          	movff	tablat,___ftmul@f2
  9304  001CF8  0009               	tblrd		*+
  9305  001CFA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9306  001CFE  000A               	tblrd		*-
  9307  001D00  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9308  001D04  0E00               	movlw	0
  9309  001D06  0100               	movlb	0	; () banked
  9310  001D08  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9311  001D0A  0E64               	movlw	100
  9312  001D0C  6F77               	movwf	___awdiv@divisor& (0+255),b
  9313  001D0E  C092  F075         	movff	fround@prec,___awdiv@dividend
  9314  001D12  0100               	movlb	0	; () banked
  9315  001D14  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9316  001D16  ECF6  F019         	call	___awdiv	;wreg free
  9317  001D1A  0E12               	movlw	18
  9318  001D1C  0100               	movlb	0	; () banked
  9319  001D1E  2575               	addwf	?___awdiv& (0+255),w,b
  9320  001D20  0100               	movlb	0	; () banked
  9321  001D22  6F79               	movwf	___wmul@multiplier& (0+255),b
  9322  001D24  0E00               	movlw	0
  9323  001D26  0100               	movlb	0	; () banked
  9324  001D28  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9325  001D2A  0100               	movlb	0	; () banked
  9326  001D2C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9327  001D2E  0E00               	movlw	0
  9328  001D30  0100               	movlb	0	; () banked
  9329  001D32  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9330  001D34  0E03               	movlw	3
  9331  001D36  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9332  001D38  EC7B  F01D         	call	___wmul	;wreg free
  9333  001D3C  0E44               	movlw	low __npowers_
  9334  001D3E  0100               	movlb	0	; () banked
  9335  001D40  2579               	addwf	?___wmul& (0+255),w,b
  9336  001D42  6EF6               	movwf	tblptrl,c
  9337  001D44  0E7F               	movlw	high __npowers_
  9338  001D46  0100               	movlb	0	; () banked
  9339  001D48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9340  001D4A  6EF7               	movwf	tblptrh,c
  9341  001D4C                     	if	0	;There are less than 3 active tblptr bytes
  9342  001D4C                     	endif
  9343  001D4C  0009               	tblrd		*+
  9344  001D4E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9345  001D52  0009               	tblrd		*+
  9346  001D54  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9347  001D58  000A               	tblrd		*-
  9348  001D5A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9349  001D5E  ECD0  F014         	call	___ftmul	;wreg free
  9350  001D62  C07D  F08F         	movff	?___ftmul,_fround$2421
  9351  001D66  C07E  F090         	movff	?___ftmul+1,_fround$2421+1
  9352  001D6A  C07F  F091         	movff	?___ftmul+2,_fround$2421+2
  9353                           
  9354                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9355  001D6E  0E00               	movlw	0
  9356  001D70  0100               	movlb	0	; () banked
  9357  001D72  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9358  001D74  0E03               	movlw	3
  9359  001D76  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9360  001D78  0E00               	movlw	0
  9361  001D7A  0100               	movlb	0	; () banked
  9362  001D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9363  001D7E  0E0A               	movlw	10
  9364  001D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9365  001D82  C092  F071         	movff	fround@prec,___awmod@dividend
  9366  001D86  0100               	movlb	0	; () banked
  9367  001D88  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9368  001D8A  EC49  F01A         	call	___awmod	;wreg free
  9369  001D8E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9370  001D92  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9371  001D96  EC7B  F01D         	call	___wmul	;wreg free
  9372  001D9A  0E44               	movlw	low __npowers_
  9373  001D9C  0100               	movlb	0	; () banked
  9374  001D9E  2579               	addwf	?___wmul& (0+255),w,b
  9375  001DA0  6EF6               	movwf	tblptrl,c
  9376  001DA2  0E7F               	movlw	high __npowers_
  9377  001DA4  0100               	movlb	0	; () banked
  9378  001DA6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9379  001DA8  6EF7               	movwf	tblptrh,c
  9380  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9381  001DAA                     	endif
  9382  001DAA  0009               	tblrd		*+
  9383  001DAC  CFF5 F080          	movff	tablat,___ftmul@f2
  9384  001DB0  0009               	tblrd		*+
  9385  001DB2  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9386  001DB6  000A               	tblrd		*-
  9387  001DB8  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9388  001DBC  C08F  F07D         	movff	_fround$2421,___ftmul@f1
  9389  001DC0  C090  F07E         	movff	_fround$2421+1,___ftmul@f1+1
  9390  001DC4  C091  F07F         	movff	_fround$2421+2,___ftmul@f1+2
  9391  001DC8  ECD0  F014         	call	___ftmul	;wreg free
  9392  001DCC  C07D  F08C         	movff	?___ftmul,_fround$2422
  9393  001DD0  C07E  F08D         	movff	?___ftmul+1,_fround$2422+1
  9394  001DD4  C07F  F08E         	movff	?___ftmul+2,_fround$2422+2
  9395                           
  9396                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9397  001DD8  C08C  F07D         	movff	_fround$2422,___ftmul@f1
  9398  001DDC  C08D  F07E         	movff	_fround$2422+1,___ftmul@f1+1
  9399  001DE0  C08E  F07F         	movff	_fround$2422+2,___ftmul@f1+2
  9400  001DE4  0E00               	movlw	0
  9401  001DE6  0100               	movlb	0	; () banked
  9402  001DE8  6F80               	movwf	___ftmul@f2& (0+255),b
  9403  001DEA  0E00               	movlw	0
  9404  001DEC  0100               	movlb	0	; () banked
  9405  001DEE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9406  001DF0  0E3F               	movlw	63
  9407  001DF2  0100               	movlb	0	; () banked
  9408  001DF4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9409  001DF6  ECD0  F014         	call	___ftmul	;wreg free
  9410  001DFA  C07D  F089         	movff	?___ftmul,?_fround
  9411  001DFE  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9412  001E02  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9413  001E06  0012               	return	
  9414  001E08                     l5048:
  9415                           
  9416                           ;doprnt.c: 415: else if(prec > 10)
  9417  001E08  0E0A               	movlw	10
  9418  001E0A  0100               	movlb	0	; () banked
  9419  001E0C  6592               	cpfsgt	fround@prec& (0+255),b
  9420  001E0E  D06E               	goto	l5056
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9424  001E10  0E00               	movlw	0
  9425  001E12  0100               	movlb	0	; () banked
  9426  001E14  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9427  001E16  0E03               	movlw	3
  9428  001E18  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9429  001E1A  0E00               	movlw	0
  9430  001E1C  0100               	movlb	0	; () banked
  9431  001E1E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9432  001E20  0E0A               	movlw	10
  9433  001E22  6F73               	movwf	___awmod@divisor& (0+255),b
  9434  001E24  C092  F071         	movff	fround@prec,___awmod@dividend
  9435  001E28  0100               	movlb	0	; () banked
  9436  001E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9437  001E2C  EC49  F01A         	call	___awmod	;wreg free
  9438  001E30  C071  F079         	movff	?___awmod,___wmul@multiplier
  9439  001E34  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9440  001E38  EC7B  F01D         	call	___wmul	;wreg free
  9441  001E3C  0E44               	movlw	low __npowers_
  9442  001E3E  0100               	movlb	0	; () banked
  9443  001E40  2579               	addwf	?___wmul& (0+255),w,b
  9444  001E42  6EF6               	movwf	tblptrl,c
  9445  001E44  0E7F               	movlw	high __npowers_
  9446  001E46  0100               	movlb	0	; () banked
  9447  001E48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9448  001E4A  6EF7               	movwf	tblptrh,c
  9449  001E4C                     	if	0	;There are less than 3 active tblptr bytes
  9450  001E4C                     	endif
  9451  001E4C  0009               	tblrd		*+
  9452  001E4E  CFF5 F080          	movff	tablat,___ftmul@f2
  9453  001E52  0009               	tblrd		*+
  9454  001E54  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9455  001E58  000A               	tblrd		*-
  9456  001E5A  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9457  001E5E  0E00               	movlw	0
  9458  001E60  0100               	movlb	0	; () banked
  9459  001E62  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9460  001E64  0E0A               	movlw	10
  9461  001E66  6F77               	movwf	___awdiv@divisor& (0+255),b
  9462  001E68  C092  F075         	movff	fround@prec,___awdiv@dividend
  9463  001E6C  0100               	movlb	0	; () banked
  9464  001E6E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9465  001E70  ECF6  F019         	call	___awdiv	;wreg free
  9466  001E74  0E09               	movlw	9
  9467  001E76  0100               	movlb	0	; () banked
  9468  001E78  2575               	addwf	?___awdiv& (0+255),w,b
  9469  001E7A  0100               	movlb	0	; () banked
  9470  001E7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9471  001E7E  0E00               	movlw	0
  9472  001E80  0100               	movlb	0	; () banked
  9473  001E82  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9474  001E84  0100               	movlb	0	; () banked
  9475  001E86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9476  001E88  0E00               	movlw	0
  9477  001E8A  0100               	movlb	0	; () banked
  9478  001E8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9479  001E8E  0E03               	movlw	3
  9480  001E90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9481  001E92  EC7B  F01D         	call	___wmul	;wreg free
  9482  001E96  0E44               	movlw	low __npowers_
  9483  001E98  0100               	movlb	0	; () banked
  9484  001E9A  2579               	addwf	?___wmul& (0+255),w,b
  9485  001E9C  6EF6               	movwf	tblptrl,c
  9486  001E9E  0E7F               	movlw	high __npowers_
  9487  001EA0  0100               	movlb	0	; () banked
  9488  001EA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9489  001EA4  6EF7               	movwf	tblptrh,c
  9490  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  9491  001EA6                     	endif
  9492  001EA6  0009               	tblrd		*+
  9493  001EA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9494  001EAC  0009               	tblrd		*+
  9495  001EAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9496  001EB2  000A               	tblrd		*-
  9497  001EB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9498  001EB8  ECD0  F014         	call	___ftmul	;wreg free
  9499  001EBC  C07D  F08F         	movff	?___ftmul,_fround$2421
  9500  001EC0  C07E  F090         	movff	?___ftmul+1,_fround$2421+1
  9501  001EC4  C07F  F091         	movff	?___ftmul+2,_fround$2421+2
  9502                           
  9503                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9504  001EC8  C08F  F07D         	movff	_fround$2421,___ftmul@f1
  9505  001ECC  C090  F07E         	movff	_fround$2421+1,___ftmul@f1+1
  9506  001ED0  C091  F07F         	movff	_fround$2421+2,___ftmul@f1+2
  9507  001ED4  0E00               	movlw	0
  9508  001ED6  0100               	movlb	0	; () banked
  9509  001ED8  6F80               	movwf	___ftmul@f2& (0+255),b
  9510  001EDA  0E00               	movlw	0
  9511  001EDC  0100               	movlb	0	; () banked
  9512  001EDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9513  001EE0  0E3F               	movlw	63
  9514  001EE2  0100               	movlb	0	; () banked
  9515  001EE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9516  001EE6  ECD0  F014         	call	___ftmul	;wreg free
  9517  001EEA  D787               	goto	L8
  9518  001EEC                     l5056:
  9519                           
  9520                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9521  001EEC  0100               	movlb	0	; () banked
  9522  001EEE  5192               	movf	fround@prec& (0+255),w,b
  9523  001EF0  0D03               	mullw	3
  9524  001EF2  0E44               	movlw	low __npowers_
  9525  001EF4  24F3               	addwf	prodl,w,c
  9526  001EF6  6EF6               	movwf	tblptrl,c
  9527  001EF8  0E7F               	movlw	high __npowers_
  9528  001EFA  20F4               	addwfc	prodh,w,c
  9529  001EFC  6EF7               	movwf	tblptrh,c
  9530  001EFE                     	if	0	;There are less than 3 active tblptr bytes
  9531  001EFE                     	endif
  9532  001EFE  0009               	tblrd		*+
  9533  001F00  CFF5 F07D          	movff	tablat,___ftmul@f1
  9534  001F04  0009               	tblrd		*+
  9535  001F06  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9536  001F0A  000A               	tblrd		*-
  9537  001F0C  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9538  001F10  0E00               	movlw	0
  9539  001F12  0100               	movlb	0	; () banked
  9540  001F14  6F80               	movwf	___ftmul@f2& (0+255),b
  9541  001F16  0E00               	movlw	0
  9542  001F18  0100               	movlb	0	; () banked
  9543  001F1A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9544  001F1C  0E3F               	movlw	63
  9545  001F1E  0100               	movlb	0	; () banked
  9546  001F20  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9547  001F22  ECD0  F014         	call	___ftmul	;wreg free
  9548  001F26  C07D  F089         	movff	?___ftmul,?_fround
  9549  001F2A  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9550  001F2E  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9551  001F32  0012               	return	
  9552  001F34                     __end_of_fround:
  9553                           	opt stack 0
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           indf0	equ	0xFEF
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           indf1	equ	0xFE7
  9566                           postdec1	equ	0xFE5
  9567                           fsr1h	equ	0xFE2
  9568                           fsr1l	equ	0xFE1
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           postdec2	equ	0xFDD
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           
  9576 ;; *************** function ___wmul *****************
  9577 ;; Defined at:
  9578 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  multiplier      2   25[BANK0 ] unsigned int 
  9581 ;;  multiplicand    2   27[BANK0 ] unsigned int 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  product         2   39[COMRAM] unsigned int 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  2   25[BANK0 ] unsigned int 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0, prodl, prodh
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9593 ;;      Params:         0       4       0       0       0       0       0
  9594 ;;      Locals:         2       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0
  9596 ;;      Totals:         2       4       0       0       0       0       0
  9597 ;;Total ram usage:        6 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    3
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_fround
  9604 ;;		_scale
  9605 ;;		_sprintf
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text35
  9610  003AF6                     __ptext35:
  9611                           	opt stack 0
  9612  003AF6                     ___wmul:
  9613                           	opt stack 23
  9614                           
  9615                           ;incstack = 0
  9616  003AF6  0100               	movlb	0	; () banked
  9617  003AF8  5179               	movf	___wmul@multiplier& (0+255),w,b
  9618  003AFA  0100               	movlb	0	; () banked
  9619  003AFC  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9620  003AFE  CFF3 F028          	movff	prodl,___wmul@product
  9621  003B02  CFF4 F029          	movff	prodh,___wmul@product+1
  9622  003B06  0100               	movlb	0	; () banked
  9623  003B08  5179               	movf	___wmul@multiplier& (0+255),w,b
  9624  003B0A  0100               	movlb	0	; () banked
  9625  003B0C  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9626  003B0E  50F3               	movf	prodl,w,c
  9627  003B10  2629               	addwf	___wmul@product+1,f,c
  9628  003B12  0100               	movlb	0	; () banked
  9629  003B14  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9630  003B16  0100               	movlb	0	; () banked
  9631  003B18  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9632  003B1A  50F3               	movf	prodl,w,c
  9633  003B1C  2629               	addwf	___wmul@product+1,f,c
  9634                           
  9635                           ; BSR set to: 0
  9636  003B1E  C028  F079         	movff	___wmul@product,?___wmul
  9637  003B22  C029  F07A         	movff	___wmul@product+1,?___wmul+1
  9638  003B26  0012               	return	
  9639  003B28                     __end_of___wmul:
  9640                           	opt stack 0
  9641                           tblptru	equ	0xFF8
  9642                           tblptrh	equ	0xFF7
  9643                           tblptrl	equ	0xFF6
  9644                           tablat	equ	0xFF5
  9645                           prodh	equ	0xFF4
  9646                           prodl	equ	0xFF3
  9647                           indf0	equ	0xFEF
  9648                           postinc0	equ	0xFEE
  9649                           fsr0h	equ	0xFEA
  9650                           fsr0l	equ	0xFE9
  9651                           wreg	equ	0xFE8
  9652                           indf1	equ	0xFE7
  9653                           postdec1	equ	0xFE5
  9654                           fsr1h	equ	0xFE2
  9655                           fsr1l	equ	0xFE1
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           postdec2	equ	0xFDD
  9659                           fsr2h	equ	0xFDA
  9660                           fsr2l	equ	0xFD9
  9661                           status	equ	0xFD8
  9662                           
  9663 ;; *************** function ___ftmul *****************
  9664 ;; Defined at:
  9665 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  f1              3   29[BANK0 ] float 
  9668 ;;  f2              3   32[BANK0 ] float 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  9671 ;;  sign            1   40[BANK0 ] unsigned char 
  9672 ;;  cntr            1   39[BANK0 ] unsigned char 
  9673 ;;  exp             1   35[BANK0 ] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  3   29[BANK0 ] float 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         0       6       0       0       0       0       0
  9684 ;;      Locals:         0       6       0       0       0       0       0
  9685 ;;      Temps:          3       0       0       0       0       0       0
  9686 ;;      Totals:         3      12       0       0       0       0       0
  9687 ;;Total ram usage:       15 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    4
  9690 ;; This function calls:
  9691 ;;		___ftpack
  9692 ;; This function is called by:
  9693 ;;		_util_getBatteryVoltage
  9694 ;;		_util_getSolarCurrent
  9695 ;;		_util_getBatteryCurrent
  9696 ;;		_util_getTemperature
  9697 ;;		_fround
  9698 ;;		_scale
  9699 ;;		_sprintf
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text36
  9704  0029A0                     __ptext36:
  9705                           	opt stack 0
  9706  0029A0                     ___ftmul:
  9707                           	opt stack 24
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;incstack = 0
  9711  0029A0  C07F  F02A         	movff	___ftmul@f1+2,??___ftmul
  9712  0029A4  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9713  0029A6  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9714  0029A8  0100               	movlb	0	; () banked
  9715  0029AA  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9716  0029AC  362A               	rlcf	??___ftmul& (0+255),f,c
  9717  0029AE  E301               	bnc	u4781
  9718  0029B0  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9719  0029B2                     u4781:
  9720  0029B2  502A               	movf	??___ftmul,w,c
  9721  0029B4  0100               	movlb	0	; () banked
  9722  0029B6  6F83               	movwf	___ftmul@exp& (0+255),b
  9723  0029B8  0100               	movlb	0	; () banked
  9724  0029BA  5183               	movf	___ftmul@exp& (0+255),w,b
  9725  0029BC  A4D8               	btfss	status,2,c
  9726  0029BE  D00A               	goto	l4846
  9727                           
  9728                           ; BSR set to: 0
  9729  0029C0  0E00               	movlw	0
  9730  0029C2  0100               	movlb	0	; () banked
  9731  0029C4  6F7D               	movwf	?___ftmul& (0+255),b
  9732  0029C6  0E00               	movlw	0
  9733  0029C8  0100               	movlb	0	; () banked
  9734  0029CA  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9735  0029CC  0E00               	movlw	0
  9736  0029CE  0100               	movlb	0	; () banked
  9737  0029D0  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9738                           
  9739                           ; BSR set to: 0
  9740  0029D2  0012               	return	
  9741  0029D4                     l4846:
  9742                           
  9743                           ; BSR set to: 0
  9744  0029D4  C082  F02A         	movff	___ftmul@f2+2,??___ftmul
  9745  0029D8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9746  0029DA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9747  0029DC  0100               	movlb	0	; () banked
  9748  0029DE  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9749  0029E0  362A               	rlcf	??___ftmul& (0+255),f,c
  9750  0029E2  E301               	bnc	u4801
  9751  0029E4  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9752  0029E6                     u4801:
  9753  0029E6  502A               	movf	??___ftmul,w,c
  9754  0029E8  0100               	movlb	0	; () banked
  9755  0029EA  6F88               	movwf	___ftmul@sign& (0+255),b
  9756  0029EC  0100               	movlb	0	; () banked
  9757  0029EE  5188               	movf	___ftmul@sign& (0+255),w,b
  9758  0029F0  A4D8               	btfss	status,2,c
  9759  0029F2  D00A               	goto	l4852
  9760                           
  9761                           ; BSR set to: 0
  9762  0029F4  0E00               	movlw	0
  9763  0029F6  0100               	movlb	0	; () banked
  9764  0029F8  6F7D               	movwf	?___ftmul& (0+255),b
  9765  0029FA  0E00               	movlw	0
  9766  0029FC  0100               	movlb	0	; () banked
  9767  0029FE  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9768  002A00  0E00               	movlw	0
  9769  002A02  0100               	movlb	0	; () banked
  9770  002A04  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9771                           
  9772                           ; BSR set to: 0
  9773  002A06  0012               	return	
  9774  002A08                     l4852:
  9775                           
  9776                           ; BSR set to: 0
  9777  002A08  0100               	movlb	0	; () banked
  9778  002A0A  5188               	movf	___ftmul@sign& (0+255),w,b
  9779  002A0C  0F7B               	addlw	123
  9780  002A0E  0100               	movlb	0	; () banked
  9781  002A10  2783               	addwf	___ftmul@exp& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784  002A12  C07F  F088         	movff	___ftmul@f1+2,___ftmul@sign
  9785  002A16  0100               	movlb	0	; () banked
  9786  002A18  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9787  002A1A  0100               	movlb	0	; () banked
  9788  002A1C  1B88               	xorwf	___ftmul@sign& (0+255),f,b
  9789  002A1E  0E80               	movlw	128
  9790  002A20  0100               	movlb	0	; () banked
  9791  002A22  1788               	andwf	___ftmul@sign& (0+255),f,b
  9792                           
  9793                           ; BSR set to: 0
  9794  002A24  0100               	movlb	0	; () banked
  9795  002A26  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9796                           
  9797                           ; BSR set to: 0
  9798  002A28  0100               	movlb	0	; () banked
  9799  002A2A  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9800                           
  9801                           ; BSR set to: 0
  9802  002A2C  0EFF               	movlw	255
  9803  002A2E  0100               	movlb	0	; () banked
  9804  002A30  1780               	andwf	___ftmul@f2& (0+255),f,b
  9805  002A32  0EFF               	movlw	255
  9806  002A34  0100               	movlb	0	; () banked
  9807  002A36  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9808  002A38  0E00               	movlw	0
  9809  002A3A  0100               	movlb	0	; () banked
  9810  002A3C  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  002A3E  0E00               	movlw	0
  9814  002A40  0100               	movlb	0	; () banked
  9815  002A42  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
  9816  002A44  0E00               	movlw	0
  9817  002A46  0100               	movlb	0	; () banked
  9818  002A48  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9819  002A4A  0E00               	movlw	0
  9820  002A4C  0100               	movlb	0	; () banked
  9821  002A4E  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9822                           
  9823                           ; BSR set to: 0
  9824  002A50  0E07               	movlw	7
  9825  002A52  0100               	movlb	0	; () banked
  9826  002A54  6F87               	movwf	___ftmul@cntr& (0+255),b
  9827  002A56                     l4866:
  9828                           
  9829                           ; BSR set to: 0
  9830  002A56  0100               	movlb	0	; () banked
  9831  002A58  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9832  002A5A  D00C               	goto	l4870
  9833                           
  9834                           ; BSR set to: 0
  9835  002A5C  0100               	movlb	0	; () banked
  9836  002A5E  5180               	movf	___ftmul@f2& (0+255),w,b
  9837  002A60  0100               	movlb	0	; () banked
  9838  002A62  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9839  002A64  0100               	movlb	0	; () banked
  9840  002A66  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9841  002A68  0100               	movlb	0	; () banked
  9842  002A6A  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9843  002A6C  0100               	movlb	0	; () banked
  9844  002A6E  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9845  002A70  0100               	movlb	0	; () banked
  9846  002A72  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9847  002A74                     l4870:
  9848                           
  9849                           ; BSR set to: 0
  9850  002A74  0100               	movlb	0	; () banked
  9851  002A76  90D8               	bcf	status,0,c
  9852  002A78  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9853  002A7A  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9854  002A7C  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9855  002A7E  0100               	movlb	0	; () banked
  9856  002A80  90D8               	bcf	status,0,c
  9857  002A82  3780               	rlcf	___ftmul@f2& (0+255),f,b
  9858  002A84  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9859  002A86  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9860                           
  9861                           ; BSR set to: 0
  9862  002A88  0100               	movlb	0	; () banked
  9863  002A8A  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9864  002A8C  D7E4               	goto	l4866
  9865                           
  9866                           ; BSR set to: 0
  9867                           
  9868                           ; BSR set to: 0
  9869  002A8E  0E09               	movlw	9
  9870  002A90  0100               	movlb	0	; () banked
  9871  002A92  6F87               	movwf	___ftmul@cntr& (0+255),b
  9872  002A94                     l4876:
  9873                           
  9874                           ; BSR set to: 0
  9875  002A94  0100               	movlb	0	; () banked
  9876  002A96  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9877  002A98  D00C               	goto	l4880
  9878                           
  9879                           ; BSR set to: 0
  9880  002A9A  0100               	movlb	0	; () banked
  9881  002A9C  5180               	movf	___ftmul@f2& (0+255),w,b
  9882  002A9E  0100               	movlb	0	; () banked
  9883  002AA0  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9884  002AA2  0100               	movlb	0	; () banked
  9885  002AA4  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9886  002AA6  0100               	movlb	0	; () banked
  9887  002AA8  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9888  002AAA  0100               	movlb	0	; () banked
  9889  002AAC  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9890  002AAE  0100               	movlb	0	; () banked
  9891  002AB0  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9892  002AB2                     l4880:
  9893                           
  9894                           ; BSR set to: 0
  9895  002AB2  0100               	movlb	0	; () banked
  9896  002AB4  90D8               	bcf	status,0,c
  9897  002AB6  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9898  002AB8  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9899  002ABA  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9900  002ABC  0100               	movlb	0	; () banked
  9901  002ABE  90D8               	bcf	status,0,c
  9902  002AC0  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9903  002AC2  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9904  002AC4  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9905                           
  9906                           ; BSR set to: 0
  9907  002AC6  0100               	movlb	0	; () banked
  9908  002AC8  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9909  002ACA  D7E4               	goto	l4876
  9910                           
  9911                           ; BSR set to: 0
  9912                           
  9913                           ; BSR set to: 0
  9914  002ACC  C084  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  9915  002AD0  C085  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9916  002AD4  C086  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9917  002AD8  C083  F074         	movff	___ftmul@exp,___ftpack@exp
  9918  002ADC  C088  F075         	movff	___ftmul@sign,___ftpack@sign
  9919  002AE0  EC44  F017         	call	___ftpack	;wreg free
  9920  002AE4  C071  F07D         	movff	?___ftpack,?___ftmul
  9921  002AE8  C072  F07E         	movff	?___ftpack+1,?___ftmul+1
  9922  002AEC  C073  F07F         	movff	?___ftpack+2,?___ftmul+2
  9923  002AF0  0012               	return	
  9924  002AF2                     __end_of___ftmul:
  9925                           	opt stack 0
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           indf0	equ	0xFEF
  9933                           postinc0	equ	0xFEE
  9934                           fsr0h	equ	0xFEA
  9935                           fsr0l	equ	0xFE9
  9936                           wreg	equ	0xFE8
  9937                           indf1	equ	0xFE7
  9938                           postdec1	equ	0xFE5
  9939                           fsr1h	equ	0xFE2
  9940                           fsr1l	equ	0xFE1
  9941                           indf2	equ	0xFDF
  9942                           postinc2	equ	0xFDE
  9943                           postdec2	equ	0xFDD
  9944                           fsr2h	equ	0xFDA
  9945                           fsr2l	equ	0xFD9
  9946                           status	equ	0xFD8
  9947                           
  9948 ;; *************** function ___awmod *****************
  9949 ;; Defined at:
  9950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  dividend        2   17[BANK0 ] int 
  9953 ;;  divisor         2   19[BANK0 ] int 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  sign            1   34[COMRAM] unsigned char 
  9956 ;;  counter         1   33[COMRAM] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  2   17[BANK0 ] int 
  9959 ;; Registers used:
  9960 ;;		wreg, status,2, status,0
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9966 ;;      Params:         0       4       0       0       0       0       0
  9967 ;;      Locals:         2       0       0       0       0       0       0
  9968 ;;      Temps:          0       0       0       0       0       0       0
  9969 ;;      Totals:         2       4       0       0       0       0       0
  9970 ;;Total ram usage:        6 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:    3
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_fround
  9977 ;;		_scale
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           	psect	text37
  9982  003492                     __ptext37:
  9983                           	opt stack 0
  9984  003492                     ___awmod:
  9985                           	opt stack 23
  9986                           
  9987                           ;incstack = 0
  9988  003492  0E00               	movlw	0
  9989  003494  6E23               	movwf	___awmod@sign,c
  9990  003496  0100               	movlb	0	; () banked
  9991  003498  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9992  00349A  D007               	goto	l4940
  9993                           
  9994                           ; BSR set to: 0
  9995  00349C  0100               	movlb	0	; () banked
  9996  00349E  6D71               	negf	___awmod@dividend& (0+255),b
  9997  0034A0  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
  9998  0034A2  B0D8               	btfsc	status,0,c
  9999  0034A4  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10000                           
 10001                           ; BSR set to: 0
 10002  0034A6  0E01               	movlw	1
 10003  0034A8  6E23               	movwf	___awmod@sign,c
 10004  0034AA                     l4940:
 10005                           
 10006                           ; BSR set to: 0
 10007  0034AA  0100               	movlb	0	; () banked
 10008  0034AC  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10009  0034AE  D005               	goto	l4944
 10010                           
 10011                           ; BSR set to: 0
 10012  0034B0  0100               	movlb	0	; () banked
 10013  0034B2  6D73               	negf	___awmod@divisor& (0+255),b
 10014  0034B4  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10015  0034B6  B0D8               	btfsc	status,0,c
 10016  0034B8  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10017  0034BA                     l4944:
 10018                           
 10019                           ; BSR set to: 0
 10020  0034BA  0100               	movlb	0	; () banked
 10021  0034BC  5173               	movf	___awmod@divisor& (0+255),w,b
 10022  0034BE  0100               	movlb	0	; () banked
 10023  0034C0  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10024  0034C2  B4D8               	btfsc	status,2,c
 10025  0034C4  D023               	goto	l4960
 10026                           
 10027                           ; BSR set to: 0
 10028  0034C6  0E01               	movlw	1
 10029  0034C8  6E22               	movwf	___awmod@counter,c
 10030  0034CA  D005               	goto	l4950
 10031  0034CC                     l4948:
 10032                           
 10033                           ; BSR set to: 0
 10034  0034CC  0100               	movlb	0	; () banked
 10035  0034CE  90D8               	bcf	status,0,c
 10036  0034D0  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10037  0034D2  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10038  0034D4  2A22               	incf	___awmod@counter,f,c
 10039  0034D6                     l4950:
 10040                           
 10041                           ; BSR set to: 0
 10042  0034D6  0100               	movlb	0	; () banked
 10043  0034D8  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10044  0034DA  D7F8               	goto	l4948
 10045  0034DC                     l4952:
 10046                           
 10047                           ; BSR set to: 0
 10048  0034DC  0100               	movlb	0	; () banked
 10049  0034DE  5173               	movf	___awmod@divisor& (0+255),w,b
 10050  0034E0  0100               	movlb	0	; () banked
 10051  0034E2  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10052  0034E4  0100               	movlb	0	; () banked
 10053  0034E6  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10054  0034E8  0100               	movlb	0	; () banked
 10055  0034EA  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10056  0034EC  A0D8               	btfss	status,0,c
 10057  0034EE  D008               	goto	l4956
 10058                           
 10059                           ; BSR set to: 0
 10060  0034F0  0100               	movlb	0	; () banked
 10061  0034F2  5173               	movf	___awmod@divisor& (0+255),w,b
 10062  0034F4  0100               	movlb	0	; () banked
 10063  0034F6  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10064  0034F8  0100               	movlb	0	; () banked
 10065  0034FA  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10066  0034FC  0100               	movlb	0	; () banked
 10067  0034FE  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10068  003500                     l4956:
 10069                           
 10070                           ; BSR set to: 0
 10071  003500  0100               	movlb	0	; () banked
 10072  003502  90D8               	bcf	status,0,c
 10073  003504  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10074  003506  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10075                           
 10076                           ; BSR set to: 0
 10077  003508  2E22               	decfsz	___awmod@counter,f,c
 10078  00350A  D7E8               	goto	l4952
 10079  00350C                     l4960:
 10080                           
 10081                           ; BSR set to: 0
 10082  00350C  5023               	movf	___awmod@sign,w,c
 10083  00350E  B4D8               	btfsc	status,2,c
 10084  003510  D005               	goto	l4964
 10085                           
 10086                           ; BSR set to: 0
 10087  003512  0100               	movlb	0	; () banked
 10088  003514  6D71               	negf	___awmod@dividend& (0+255),b
 10089  003516  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10090  003518  B0D8               	btfsc	status,0,c
 10091  00351A  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10092  00351C                     l4964:
 10093                           
 10094                           ; BSR set to: 0
 10095  00351C  C071  F071         	movff	___awmod@dividend,?___awmod
 10096  003520  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10097  003524  0012               	return	
 10098  003526                     __end_of___awmod:
 10099                           	opt stack 0
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           indf0	equ	0xFEF
 10107                           postinc0	equ	0xFEE
 10108                           fsr0h	equ	0xFEA
 10109                           fsr0l	equ	0xFE9
 10110                           wreg	equ	0xFE8
 10111                           indf1	equ	0xFE7
 10112                           postdec1	equ	0xFE5
 10113                           fsr1h	equ	0xFE2
 10114                           fsr1l	equ	0xFE1
 10115                           indf2	equ	0xFDF
 10116                           postinc2	equ	0xFDE
 10117                           postdec2	equ	0xFDD
 10118                           fsr2h	equ	0xFDA
 10119                           fsr2l	equ	0xFD9
 10120                           status	equ	0xFD8
 10121                           
 10122 ;; *************** function ___awdiv *****************
 10123 ;; Defined at:
 10124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  dividend        2   21[BANK0 ] int 
 10127 ;;  divisor         2   23[BANK0 ] int 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  quotient        2   37[COMRAM] int 
 10130 ;;  sign            1   36[COMRAM] unsigned char 
 10131 ;;  counter         1   35[COMRAM] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  2   21[BANK0 ] int 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10141 ;;      Params:         0       4       0       0       0       0       0
 10142 ;;      Locals:         4       0       0       0       0       0       0
 10143 ;;      Temps:          0       0       0       0       0       0       0
 10144 ;;      Totals:         4       4       0       0       0       0       0
 10145 ;;Total ram usage:        8 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    3
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_fround
 10152 ;;		_scale
 10153 ;;		_sprintf
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text38
 10158  0033EC                     __ptext38:
 10159                           	opt stack 0
 10160  0033EC                     ___awdiv:
 10161                           	opt stack 23
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;incstack = 0
 10165  0033EC  0E00               	movlw	0
 10166  0033EE  6E25               	movwf	___awdiv@sign,c
 10167  0033F0  0100               	movlb	0	; () banked
 10168  0033F2  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10169  0033F4  D007               	goto	l4896
 10170                           
 10171                           ; BSR set to: 0
 10172  0033F6  0100               	movlb	0	; () banked
 10173  0033F8  6D77               	negf	___awdiv@divisor& (0+255),b
 10174  0033FA  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10175  0033FC  B0D8               	btfsc	status,0,c
 10176  0033FE  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10177                           
 10178                           ; BSR set to: 0
 10179  003400  0E01               	movlw	1
 10180  003402  6E25               	movwf	___awdiv@sign,c
 10181  003404                     l4896:
 10182                           
 10183                           ; BSR set to: 0
 10184  003404  0100               	movlb	0	; () banked
 10185  003406  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10186  003408  D007               	goto	l4902
 10187                           
 10188                           ; BSR set to: 0
 10189  00340A  0100               	movlb	0	; () banked
 10190  00340C  6D75               	negf	___awdiv@dividend& (0+255),b
 10191  00340E  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10192  003410  B0D8               	btfsc	status,0,c
 10193  003412  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10194                           
 10195                           ; BSR set to: 0
 10196  003414  0E01               	movlw	1
 10197  003416  1A25               	xorwf	___awdiv@sign,f,c
 10198  003418                     l4902:
 10199                           
 10200                           ; BSR set to: 0
 10201  003418  0E00               	movlw	0
 10202  00341A  6E27               	movwf	___awdiv@quotient+1,c
 10203  00341C  0E00               	movlw	0
 10204  00341E  6E26               	movwf	___awdiv@quotient,c
 10205                           
 10206                           ; BSR set to: 0
 10207  003420  0100               	movlb	0	; () banked
 10208  003422  5177               	movf	___awdiv@divisor& (0+255),w,b
 10209  003424  0100               	movlb	0	; () banked
 10210  003426  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10211  003428  B4D8               	btfsc	status,2,c
 10212  00342A  D027               	goto	l4924
 10213                           
 10214                           ; BSR set to: 0
 10215  00342C  0E01               	movlw	1
 10216  00342E  6E24               	movwf	___awdiv@counter,c
 10217  003430  D005               	goto	l4910
 10218  003432                     l4908:
 10219                           
 10220                           ; BSR set to: 0
 10221  003432  0100               	movlb	0	; () banked
 10222  003434  90D8               	bcf	status,0,c
 10223  003436  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 10224  003438  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10225  00343A  2A24               	incf	___awdiv@counter,f,c
 10226  00343C                     l4910:
 10227                           
 10228                           ; BSR set to: 0
 10229  00343C  0100               	movlb	0	; () banked
 10230  00343E  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10231  003440  D7F8               	goto	l4908
 10232  003442                     l4912:
 10233                           
 10234                           ; BSR set to: 0
 10235  003442  90D8               	bcf	status,0,c
 10236  003444  3626               	rlcf	___awdiv@quotient,f,c
 10237  003446  3627               	rlcf	___awdiv@quotient+1,f,c
 10238                           
 10239                           ; BSR set to: 0
 10240  003448  0100               	movlb	0	; () banked
 10241  00344A  5177               	movf	___awdiv@divisor& (0+255),w,b
 10242  00344C  0100               	movlb	0	; () banked
 10243  00344E  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 10244  003450  0100               	movlb	0	; () banked
 10245  003452  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10246  003454  0100               	movlb	0	; () banked
 10247  003456  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10248  003458  A0D8               	btfss	status,0,c
 10249  00345A  D009               	goto	l4920
 10250                           
 10251                           ; BSR set to: 0
 10252  00345C  0100               	movlb	0	; () banked
 10253  00345E  5177               	movf	___awdiv@divisor& (0+255),w,b
 10254  003460  0100               	movlb	0	; () banked
 10255  003462  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 10256  003464  0100               	movlb	0	; () banked
 10257  003466  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10258  003468  0100               	movlb	0	; () banked
 10259  00346A  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10260                           
 10261                           ; BSR set to: 0
 10262  00346C  8026               	bsf	___awdiv@quotient,0,c
 10263  00346E                     l4920:
 10264                           
 10265                           ; BSR set to: 0
 10266  00346E  0100               	movlb	0	; () banked
 10267  003470  90D8               	bcf	status,0,c
 10268  003472  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10269  003474  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 10270                           
 10271                           ; BSR set to: 0
 10272  003476  2E24               	decfsz	___awdiv@counter,f,c
 10273  003478  D7E4               	goto	l4912
 10274  00347A                     l4924:
 10275                           
 10276                           ; BSR set to: 0
 10277  00347A  5025               	movf	___awdiv@sign,w,c
 10278  00347C  B4D8               	btfsc	status,2,c
 10279  00347E  D004               	goto	l4928
 10280                           
 10281                           ; BSR set to: 0
 10282  003480  6C26               	negf	___awdiv@quotient,c
 10283  003482  1E27               	comf	___awdiv@quotient+1,f,c
 10284  003484  B0D8               	btfsc	status,0,c
 10285  003486  2A27               	incf	___awdiv@quotient+1,f,c
 10286  003488                     l4928:
 10287                           
 10288                           ; BSR set to: 0
 10289  003488  C026  F075         	movff	___awdiv@quotient,?___awdiv
 10290  00348C  C027  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 10291  003490  0012               	return	
 10292  003492                     __end_of___awdiv:
 10293                           	opt stack 0
 10294                           tblptru	equ	0xFF8
 10295                           tblptrh	equ	0xFF7
 10296                           tblptrl	equ	0xFF6
 10297                           tablat	equ	0xFF5
 10298                           prodh	equ	0xFF4
 10299                           prodl	equ	0xFF3
 10300                           indf0	equ	0xFEF
 10301                           postinc0	equ	0xFEE
 10302                           fsr0h	equ	0xFEA
 10303                           fsr0l	equ	0xFE9
 10304                           wreg	equ	0xFE8
 10305                           indf1	equ	0xFE7
 10306                           postdec1	equ	0xFE5
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           fsr2h	equ	0xFDA
 10313                           fsr2l	equ	0xFD9
 10314                           status	equ	0xFD8
 10315                           
 10316 ;; *************** function __tdiv_to_l_ *****************
 10317 ;; Defined at:
 10318 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  f1              3   17[BANK0 ] float 
 10321 ;;  f2              3   20[BANK0 ] float 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  quot            4   36[COMRAM] unsigned long 
 10324 ;;  exp1            1   41[COMRAM] unsigned char 
 10325 ;;  cntr            1   40[COMRAM] unsigned char 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  4   17[BANK0 ] unsigned long 
 10328 ;; Registers used:
 10329 ;;		wreg, status,2, status,0
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10335 ;;      Params:         0       6       0       0       0       0       0
 10336 ;;      Locals:         6       0       0       0       0       0       0
 10337 ;;      Temps:          3       0       0       0       0       0       0
 10338 ;;      Totals:         9       6       0       0       0       0       0
 10339 ;;Total ram usage:       15 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:    3
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_sprintf
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text39
 10350  0026DA                     __ptext39:
 10351                           	opt stack 0
 10352  0026DA                     __tdiv_to_l_:
 10353                           	opt stack 24
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;incstack = 0
 10357  0026DA  C073  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10358  0026DE  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10359  0026E0  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10360  0026E2  0100               	movlb	0	; () banked
 10361  0026E4  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10362  0026E6  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10363  0026E8  E301               	bnc	u5111
 10364  0026EA  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10365  0026EC                     u5111:
 10366  0026EC  5022               	movf	??__tdiv_to_l_,w,c
 10367  0026EE  6E2A               	movwf	__tdiv_to_l_@exp1,c
 10368  0026F0  502A               	movf	__tdiv_to_l_@exp1,w,c
 10369  0026F2  A4D8               	btfss	status,2,c
 10370  0026F4  D00A               	goto	l5116
 10371                           
 10372                           ; BSR set to: 0
 10373  0026F6  0E00               	movlw	0
 10374  0026F8  0100               	movlb	0	; () banked
 10375  0026FA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10376  0026FC  0E00               	movlw	0
 10377  0026FE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10378  002700  0E00               	movlw	0
 10379  002702  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10380  002704  0E00               	movlw	0
 10381  002706  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10382                           
 10383                           ; BSR set to: 0
 10384  002708  0012               	return	
 10385  00270A                     l5116:
 10386                           
 10387                           ; BSR set to: 0
 10388  00270A  C076  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10389  00270E  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10390  002710  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10391  002712  0100               	movlb	0	; () banked
 10392  002714  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10393  002716  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10394  002718  E301               	bnc	u5131
 10395  00271A  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10396  00271C                     u5131:
 10397  00271C  5022               	movf	??__tdiv_to_l_,w,c
 10398  00271E  6E29               	movwf	__tdiv_to_l_@cntr,c
 10399  002720  5029               	movf	__tdiv_to_l_@cntr,w,c
 10400  002722  A4D8               	btfss	status,2,c
 10401  002724  D00A               	goto	l5122
 10402                           
 10403                           ; BSR set to: 0
 10404  002726  0E00               	movlw	0
 10405  002728  0100               	movlb	0	; () banked
 10406  00272A  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10407  00272C  0E00               	movlw	0
 10408  00272E  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10409  002730  0E00               	movlw	0
 10410  002732  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10411  002734  0E00               	movlw	0
 10412  002736  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10413                           
 10414                           ; BSR set to: 0
 10415  002738  0012               	return	
 10416  00273A                     l5122:
 10417                           
 10418                           ; BSR set to: 0
 10419  00273A  0100               	movlb	0	; () banked
 10420  00273C  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10421                           
 10422                           ; BSR set to: 0
 10423  00273E  0EFF               	movlw	255
 10424  002740  0100               	movlb	0	; () banked
 10425  002742  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10426  002744  0EFF               	movlw	255
 10427  002746  0100               	movlb	0	; () banked
 10428  002748  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10429  00274A  0E00               	movlw	0
 10430  00274C  0100               	movlb	0	; () banked
 10431  00274E  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10432  002750  0100               	movlb	0	; () banked
 10433  002752  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10434                           
 10435                           ; BSR set to: 0
 10436  002754  0EFF               	movlw	255
 10437  002756  0100               	movlb	0	; () banked
 10438  002758  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10439  00275A  0EFF               	movlw	255
 10440  00275C  0100               	movlb	0	; () banked
 10441  00275E  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10442  002760  0E00               	movlw	0
 10443  002762  0100               	movlb	0	; () banked
 10444  002764  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10445                           
 10446                           ; BSR set to: 0
 10447  002766  0E00               	movlw	0
 10448  002768  6E25               	movwf	__tdiv_to_l_@quot,c
 10449  00276A  0E00               	movlw	0
 10450  00276C  6E26               	movwf	__tdiv_to_l_@quot+1,c
 10451  00276E  0E00               	movlw	0
 10452  002770  6E27               	movwf	__tdiv_to_l_@quot+2,c
 10453  002772  0E00               	movlw	0
 10454  002774  6E28               	movwf	__tdiv_to_l_@quot+3,c
 10455                           
 10456                           ; BSR set to: 0
 10457  002776  0E7F               	movlw	127
 10458  002778  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10459                           
 10460                           ; BSR set to: 0
 10461  00277A  5029               	movf	__tdiv_to_l_@cntr,w,c
 10462  00277C  0F98               	addlw	152
 10463  00277E  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10464                           
 10465                           ; BSR set to: 0
 10466  002780  0E18               	movlw	24
 10467  002782  6E29               	movwf	__tdiv_to_l_@cntr,c
 10468  002784                     l827:
 10469                           
 10470                           ; BSR set to: 0
 10471  002784  90D8               	bcf	status,0,c
 10472  002786  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10473  002788  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10474  00278A  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10475  00278C  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10476                           
 10477                           ; BSR set to: 0
 10478  00278E  0100               	movlb	0	; () banked
 10479  002790  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10480  002792  0100               	movlb	0	; () banked
 10481  002794  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10482  002796  0100               	movlb	0	; () banked
 10483  002798  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10484  00279A  0100               	movlb	0	; () banked
 10485  00279C  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10486  00279E  0100               	movlb	0	; () banked
 10487  0027A0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10488  0027A2  0100               	movlb	0	; () banked
 10489  0027A4  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10490  0027A6  A0D8               	btfss	status,0,c
 10491  0027A8  D00D               	goto	l828
 10492                           
 10493                           ; BSR set to: 0
 10494  0027AA  0100               	movlb	0	; () banked
 10495  0027AC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10496  0027AE  0100               	movlb	0	; () banked
 10497  0027B0  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10498  0027B2  0100               	movlb	0	; () banked
 10499  0027B4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10500  0027B6  0100               	movlb	0	; () banked
 10501  0027B8  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10502  0027BA  0100               	movlb	0	; () banked
 10503  0027BC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10504  0027BE  0100               	movlb	0	; () banked
 10505  0027C0  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10506                           
 10507                           ; BSR set to: 0
 10508  0027C2  8025               	bsf	__tdiv_to_l_@quot,0,c
 10509  0027C4                     l828:
 10510                           
 10511                           ; BSR set to: 0
 10512  0027C4  0100               	movlb	0	; () banked
 10513  0027C6  90D8               	bcf	status,0,c
 10514  0027C8  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10515  0027CA  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10516  0027CC  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10517                           
 10518                           ; BSR set to: 0
 10519  0027CE  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 10520  0027D0  D7D9               	goto	l827
 10521                           
 10522                           ; BSR set to: 0
 10523                           
 10524                           ; BSR set to: 0
 10525  0027D2  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 10526  0027D4  D017               	goto	l5156
 10527                           
 10528                           ; BSR set to: 0
 10529  0027D6  502A               	movf	__tdiv_to_l_@exp1,w,c
 10530  0027D8  0A80               	xorlw	128
 10531  0027DA  0F97               	addlw	151
 10532  0027DC  B0D8               	btfsc	status,0,c
 10533  0027DE  D00A               	goto	l5152
 10534                           
 10535                           ; BSR set to: 0
 10536  0027E0  0E00               	movlw	0
 10537  0027E2  0100               	movlb	0	; () banked
 10538  0027E4  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10539  0027E6  0E00               	movlw	0
 10540  0027E8  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10541  0027EA  0E00               	movlw	0
 10542  0027EC  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10543  0027EE  0E00               	movlw	0
 10544  0027F0  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10545                           
 10546                           ; BSR set to: 0
 10547  0027F2  0012               	return	
 10548  0027F4                     l5152:
 10549  0027F4  90D8               	bcf	status,0,c
 10550  0027F6  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 10551  0027F8  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 10552  0027FA  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 10553  0027FC  3225               	rrcf	__tdiv_to_l_@quot,f,c
 10554  0027FE  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 10555  002800  D7F9               	goto	l5152
 10556  002802  D016               	goto	l834
 10557  002804                     l5156:
 10558  002804  0E17               	movlw	23
 10559  002806  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 10560  002808  D010               	goto	l5164
 10561  00280A  0E00               	movlw	0
 10562  00280C  0100               	movlb	0	; () banked
 10563  00280E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10564  002810  0E00               	movlw	0
 10565  002812  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10566  002814  0E00               	movlw	0
 10567  002816  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10568  002818  0E00               	movlw	0
 10569  00281A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10570                           
 10571                           ; BSR set to: 0
 10572  00281C  0012               	return	
 10573  00281E                     l5162:
 10574  00281E  90D8               	bcf	status,0,c
 10575  002820  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10576  002822  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10577  002824  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10578  002826  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10579  002828  062A               	decf	__tdiv_to_l_@exp1,f,c
 10580  00282A                     l5164:
 10581  00282A  502A               	movf	__tdiv_to_l_@exp1,w,c
 10582  00282C  A4D8               	btfss	status,2,c
 10583  00282E  D7F7               	goto	l5162
 10584  002830                     l834:
 10585  002830  C025  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10586  002834  C026  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10587  002838  C027  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10588  00283C  C028  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10589  002840  0012               	return		;funcret
 10590  002842                     __end_of__tdiv_to_l_:
 10591                           	opt stack 0
 10592                           tblptru	equ	0xFF8
 10593                           tblptrh	equ	0xFF7
 10594                           tblptrl	equ	0xFF6
 10595                           tablat	equ	0xFF5
 10596                           prodh	equ	0xFF4
 10597                           prodl	equ	0xFF3
 10598                           indf0	equ	0xFEF
 10599                           postinc0	equ	0xFEE
 10600                           fsr0h	equ	0xFEA
 10601                           fsr0l	equ	0xFE9
 10602                           wreg	equ	0xFE8
 10603                           indf1	equ	0xFE7
 10604                           postdec1	equ	0xFE5
 10605                           fsr1h	equ	0xFE2
 10606                           fsr1l	equ	0xFE1
 10607                           indf2	equ	0xFDF
 10608                           postinc2	equ	0xFDE
 10609                           postdec2	equ	0xFDD
 10610                           fsr2h	equ	0xFDA
 10611                           fsr2l	equ	0xFD9
 10612                           status	equ	0xFD8
 10613                           
 10614 ;; *************** function __div_to_l_ *****************
 10615 ;; Defined at:
 10616 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  f1              3   17[BANK0 ] unsigned long 
 10619 ;;  f2              3   20[BANK0 ] unsigned long 
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;  quot            4   33[COMRAM] unsigned long 
 10622 ;;  exp1            1   38[COMRAM] unsigned char 
 10623 ;;  cntr            1   37[COMRAM] unsigned char 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  4   17[BANK0 ] unsigned long 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10633 ;;      Params:         0       6       0       0       0       0       0
 10634 ;;      Locals:         6       0       0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0
 10636 ;;      Totals:         6       6       0       0       0       0       0
 10637 ;;Total ram usage:       12 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    3
 10640 ;; This function calls:
 10641 ;;		Nothing
 10642 ;; This function is called by:
 10643 ;;		_sprintf
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text40
 10648  002842                     __ptext40:
 10649                           	opt stack 0
 10650  002842                     __div_to_l_:
 10651                           	opt stack 24
 10652                           
 10653                           ;incstack = 0
 10654  002842  0100               	movlb	0	; () banked
 10655  002844  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10656  002846  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10657  002848  6E27               	movwf	__div_to_l_@exp1,c
 10658  00284A  5027               	movf	__div_to_l_@exp1,w,c
 10659  00284C  A4D8               	btfss	status,2,c
 10660  00284E  D00A               	goto	l5172
 10661                           
 10662                           ; BSR set to: 0
 10663  002850  0E00               	movlw	0
 10664  002852  0100               	movlb	0	; () banked
 10665  002854  6F71               	movwf	?__div_to_l_& (0+255),b
 10666  002856  0E00               	movlw	0
 10667  002858  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10668  00285A  0E00               	movlw	0
 10669  00285C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10670  00285E  0E00               	movlw	0
 10671  002860  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10672                           
 10673                           ; BSR set to: 0
 10674  002862  0012               	return	
 10675  002864                     l5172:
 10676                           
 10677                           ; BSR set to: 0
 10678  002864  0100               	movlb	0	; () banked
 10679  002866  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10680  002868  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10681  00286A  6E26               	movwf	__div_to_l_@cntr,c
 10682  00286C  5026               	movf	__div_to_l_@cntr,w,c
 10683  00286E  A4D8               	btfss	status,2,c
 10684  002870  D00A               	goto	l5178
 10685                           
 10686                           ; BSR set to: 0
 10687  002872  0E00               	movlw	0
 10688  002874  0100               	movlb	0	; () banked
 10689  002876  6F71               	movwf	?__div_to_l_& (0+255),b
 10690  002878  0E00               	movlw	0
 10691  00287A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10692  00287C  0E00               	movlw	0
 10693  00287E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10694  002880  0E00               	movlw	0
 10695  002882  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698  002884  0012               	return	
 10699  002886                     l5178:
 10700                           
 10701                           ; BSR set to: 0
 10702  002886  0100               	movlb	0	; () banked
 10703  002888  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10704                           
 10705                           ; BSR set to: 0
 10706  00288A  0EFF               	movlw	255
 10707  00288C  0100               	movlb	0	; () banked
 10708  00288E  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10709  002890  0EFF               	movlw	255
 10710  002892  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10711  002894  0EFF               	movlw	255
 10712  002896  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10713  002898  0E00               	movlw	0
 10714  00289A  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10715                           
 10716                           ; BSR set to: 0
 10717  00289C  0100               	movlb	0	; () banked
 10718  00289E  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10719  0028A0  0EFF               	movlw	255
 10720  0028A2  0100               	movlb	0	; () banked
 10721  0028A4  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10722  0028A6  0EFF               	movlw	255
 10723  0028A8  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10724  0028AA  0EFF               	movlw	255
 10725  0028AC  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10726  0028AE  0E00               	movlw	0
 10727  0028B0  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10728                           
 10729                           ; BSR set to: 0
 10730  0028B2  0E00               	movlw	0
 10731  0028B4  6E22               	movwf	__div_to_l_@quot,c
 10732  0028B6  0E00               	movlw	0
 10733  0028B8  6E23               	movwf	__div_to_l_@quot+1,c
 10734  0028BA  0E00               	movlw	0
 10735  0028BC  6E24               	movwf	__div_to_l_@quot+2,c
 10736  0028BE  0E00               	movlw	0
 10737  0028C0  6E25               	movwf	__div_to_l_@quot+3,c
 10738                           
 10739                           ; BSR set to: 0
 10740  0028C2  0E7F               	movlw	127
 10741  0028C4  5E27               	subwf	__div_to_l_@exp1,f,c
 10742                           
 10743                           ; BSR set to: 0
 10744  0028C6  5026               	movf	__div_to_l_@cntr,w,c
 10745  0028C8  0FA0               	addlw	160
 10746  0028CA  5E27               	subwf	__div_to_l_@exp1,f,c
 10747                           
 10748                           ; BSR set to: 0
 10749  0028CC  0E20               	movlw	32
 10750  0028CE  6E26               	movwf	__div_to_l_@cntr,c
 10751  0028D0                     l5192:
 10752                           
 10753                           ; BSR set to: 0
 10754  0028D0  90D8               	bcf	status,0,c
 10755  0028D2  3622               	rlcf	__div_to_l_@quot,f,c
 10756  0028D4  3623               	rlcf	__div_to_l_@quot+1,f,c
 10757  0028D6  3624               	rlcf	__div_to_l_@quot+2,f,c
 10758  0028D8  3625               	rlcf	__div_to_l_@quot+3,f,c
 10759                           
 10760                           ; BSR set to: 0
 10761  0028DA  0100               	movlb	0	; () banked
 10762  0028DC  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10763  0028DE  0100               	movlb	0	; () banked
 10764  0028E0  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10765  0028E2  0100               	movlb	0	; () banked
 10766  0028E4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10767  0028E6  0100               	movlb	0	; () banked
 10768  0028E8  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10769  0028EA  0100               	movlb	0	; () banked
 10770  0028EC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10771  0028EE  0100               	movlb	0	; () banked
 10772  0028F0  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10773  0028F2  0100               	movlb	0	; () banked
 10774  0028F4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10775  0028F6  0100               	movlb	0	; () banked
 10776  0028F8  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10777  0028FA  A0D8               	btfss	status,0,c
 10778  0028FC  D011               	goto	l5200
 10779                           
 10780                           ; BSR set to: 0
 10781  0028FE  0100               	movlb	0	; () banked
 10782  002900  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10783  002902  0100               	movlb	0	; () banked
 10784  002904  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10785  002906  0100               	movlb	0	; () banked
 10786  002908  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10787  00290A  0100               	movlb	0	; () banked
 10788  00290C  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10789  00290E  0100               	movlb	0	; () banked
 10790  002910  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10791  002912  0100               	movlb	0	; () banked
 10792  002914  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10793  002916  0100               	movlb	0	; () banked
 10794  002918  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10795  00291A  0100               	movlb	0	; () banked
 10796  00291C  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10797                           
 10798                           ; BSR set to: 0
 10799  00291E  8022               	bsf	__div_to_l_@quot,0,c
 10800  002920                     l5200:
 10801                           
 10802                           ; BSR set to: 0
 10803  002920  0100               	movlb	0	; () banked
 10804  002922  90D8               	bcf	status,0,c
 10805  002924  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10806  002926  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10807  002928  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10808  00292A  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10809                           
 10810                           ; BSR set to: 0
 10811  00292C  2E26               	decfsz	__div_to_l_@cntr,f,c
 10812  00292E  D7D0               	goto	l5192
 10813                           
 10814                           ; BSR set to: 0
 10815                           
 10816                           ; BSR set to: 0
 10817  002930  AE27               	btfss	__div_to_l_@exp1,7,c
 10818  002932  D017               	goto	l5216
 10819                           
 10820                           ; BSR set to: 0
 10821  002934  5027               	movf	__div_to_l_@exp1,w,c
 10822  002936  0A80               	xorlw	128
 10823  002938  0F9F               	addlw	159
 10824  00293A  B0D8               	btfsc	status,0,c
 10825  00293C  D00A               	goto	l5212
 10826                           
 10827                           ; BSR set to: 0
 10828  00293E  0E00               	movlw	0
 10829  002940  0100               	movlb	0	; () banked
 10830  002942  6F71               	movwf	?__div_to_l_& (0+255),b
 10831  002944  0E00               	movlw	0
 10832  002946  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10833  002948  0E00               	movlw	0
 10834  00294A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10835  00294C  0E00               	movlw	0
 10836  00294E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10837                           
 10838                           ; BSR set to: 0
 10839  002950  0012               	return	
 10840  002952                     l5212:
 10841  002952  90D8               	bcf	status,0,c
 10842  002954  3225               	rrcf	__div_to_l_@quot+3,f,c
 10843  002956  3224               	rrcf	__div_to_l_@quot+2,f,c
 10844  002958  3223               	rrcf	__div_to_l_@quot+1,f,c
 10845  00295A  3222               	rrcf	__div_to_l_@quot,f,c
 10846  00295C  3E27               	incfsz	__div_to_l_@exp1,f,c
 10847  00295E  D7F9               	goto	l5212
 10848  002960  D016               	goto	l730
 10849  002962                     l5216:
 10850  002962  0E1F               	movlw	31
 10851  002964  6427               	cpfsgt	__div_to_l_@exp1,c
 10852  002966  D010               	goto	l5224
 10853  002968  0E00               	movlw	0
 10854  00296A  0100               	movlb	0	; () banked
 10855  00296C  6F71               	movwf	?__div_to_l_& (0+255),b
 10856  00296E  0E00               	movlw	0
 10857  002970  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10858  002972  0E00               	movlw	0
 10859  002974  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10860  002976  0E00               	movlw	0
 10861  002978  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10862                           
 10863                           ; BSR set to: 0
 10864  00297A  0012               	return	
 10865  00297C                     l5222:
 10866  00297C  90D8               	bcf	status,0,c
 10867  00297E  3622               	rlcf	__div_to_l_@quot,f,c
 10868  002980  3623               	rlcf	__div_to_l_@quot+1,f,c
 10869  002982  3624               	rlcf	__div_to_l_@quot+2,f,c
 10870  002984  3625               	rlcf	__div_to_l_@quot+3,f,c
 10871  002986  0627               	decf	__div_to_l_@exp1,f,c
 10872  002988                     l5224:
 10873  002988  5027               	movf	__div_to_l_@exp1,w,c
 10874  00298A  A4D8               	btfss	status,2,c
 10875  00298C  D7F7               	goto	l5222
 10876  00298E                     l730:
 10877  00298E  C022  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10878  002992  C023  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10879  002996  C024  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10880  00299A  C025  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10881  00299E  0012               	return		;funcret
 10882  0029A0                     __end_of__div_to_l_:
 10883                           	opt stack 0
 10884                           tblptru	equ	0xFF8
 10885                           tblptrh	equ	0xFF7
 10886                           tblptrl	equ	0xFF6
 10887                           tablat	equ	0xFF5
 10888                           prodh	equ	0xFF4
 10889                           prodl	equ	0xFF3
 10890                           indf0	equ	0xFEF
 10891                           postinc0	equ	0xFEE
 10892                           fsr0h	equ	0xFEA
 10893                           fsr0l	equ	0xFE9
 10894                           wreg	equ	0xFE8
 10895                           indf1	equ	0xFE7
 10896                           postdec1	equ	0xFE5
 10897                           fsr1h	equ	0xFE2
 10898                           fsr1l	equ	0xFE1
 10899                           indf2	equ	0xFDF
 10900                           postinc2	equ	0xFDE
 10901                           postdec2	equ	0xFDD
 10902                           fsr2h	equ	0xFDA
 10903                           fsr2l	equ	0xFD9
 10904                           status	equ	0xFD8
 10905                           
 10906 ;; *************** function ___lltoft *****************
 10907 ;; Defined at:
 10908 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  c               4   22[BANK0 ] unsigned long 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  exp             1   40[COMRAM] unsigned char 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  3   22[BANK0 ] float 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10922 ;;      Params:         0       4       0       0       0       0       0
 10923 ;;      Locals:         1       0       0       0       0       0       0
 10924 ;;      Temps:          4       0       0       0       0       0       0
 10925 ;;      Totals:         5       4       0       0       0       0       0
 10926 ;;Total ram usage:        9 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    4
 10929 ;; This function calls:
 10930 ;;		___ftpack
 10931 ;; This function is called by:
 10932 ;;		_sprintf
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936                           	psect	text41
 10937  0036B0                     __ptext41:
 10938                           	opt stack 0
 10939  0036B0                     ___lltoft:
 10940                           	opt stack 23
 10941                           
 10942                           ;incstack = 0
 10943  0036B0  0E8E               	movlw	142
 10944  0036B2  6E29               	movwf	___lltoft@exp,c
 10945  0036B4  D007               	goto	l5298
 10946  0036B6                     l5296:
 10947  0036B6  0100               	movlb	0	; () banked
 10948  0036B8  90D8               	bcf	status,0,c
 10949  0036BA  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10950  0036BC  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10951  0036BE  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10952  0036C0  3376               	rrcf	___lltoft@c& (0+255),f,b
 10953  0036C2  2A29               	incf	___lltoft@exp,f,c
 10954  0036C4                     l5298:
 10955  0036C4  0E00               	movlw	0
 10956  0036C6  0100               	movlb	0	; () banked
 10957  0036C8  1576               	andwf	___lltoft@c& (0+255),w,b
 10958  0036CA  6E25               	movwf	??___lltoft& (0+255),c
 10959  0036CC  0E00               	movlw	0
 10960  0036CE  0100               	movlb	0	; () banked
 10961  0036D0  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 10962  0036D2  6E26               	movwf	(??___lltoft+1)& (0+255),c
 10963  0036D4  0E00               	movlw	0
 10964  0036D6  0100               	movlb	0	; () banked
 10965  0036D8  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 10966  0036DA  6E27               	movwf	(??___lltoft+2)& (0+255),c
 10967  0036DC  0EFF               	movlw	255
 10968  0036DE  0100               	movlb	0	; () banked
 10969  0036E0  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 10970  0036E2  6E28               	movwf	(??___lltoft+3)& (0+255),c
 10971  0036E4  5025               	movf	??___lltoft,w,c
 10972  0036E6  1026               	iorwf	??___lltoft+1,w,c
 10973  0036E8  1027               	iorwf	??___lltoft+2,w,c
 10974  0036EA  1028               	iorwf	??___lltoft+3,w,c
 10975  0036EC  A4D8               	btfss	status,2,c
 10976  0036EE  D7E3               	goto	l5296
 10977                           
 10978                           ; BSR set to: 0
 10979                           
 10980                           ; BSR set to: 0
 10981  0036F0  C076  F071         	movff	___lltoft@c,___ftpack@arg
 10982  0036F4  C077  F072         	movff	___lltoft@c+1,___ftpack@arg+1
 10983  0036F8  C078  F073         	movff	___lltoft@c+2,___ftpack@arg+2
 10984  0036FC  C029  F074         	movff	___lltoft@exp,___ftpack@exp
 10985  003700  0E00               	movlw	0
 10986  003702  0100               	movlb	0	; () banked
 10987  003704  6F75               	movwf	___ftpack@sign& (0+255),b
 10988  003706  EC44  F017         	call	___ftpack	;wreg free
 10989  00370A  C071  F076         	movff	?___ftpack,?___lltoft
 10990  00370E  C072  F077         	movff	?___ftpack+1,?___lltoft+1
 10991  003712  C073  F078         	movff	?___ftpack+2,?___lltoft+2
 10992  003716  0012               	return	
 10993  003718                     __end_of___lltoft:
 10994                           	opt stack 0
 10995                           tblptru	equ	0xFF8
 10996                           tblptrh	equ	0xFF7
 10997                           tblptrl	equ	0xFF6
 10998                           tablat	equ	0xFF5
 10999                           prodh	equ	0xFF4
 11000                           prodl	equ	0xFF3
 11001                           indf0	equ	0xFEF
 11002                           postinc0	equ	0xFEE
 11003                           fsr0h	equ	0xFEA
 11004                           fsr0l	equ	0xFE9
 11005                           wreg	equ	0xFE8
 11006                           indf1	equ	0xFE7
 11007                           postdec1	equ	0xFE5
 11008                           fsr1h	equ	0xFE2
 11009                           fsr1l	equ	0xFE1
 11010                           indf2	equ	0xFDF
 11011                           postinc2	equ	0xFDE
 11012                           postdec2	equ	0xFDD
 11013                           fsr2h	equ	0xFDA
 11014                           fsr2l	equ	0xFD9
 11015                           status	equ	0xFD8
 11016                           
 11017 ;; *************** function ___llmod *****************
 11018 ;; Defined at:
 11019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  dividend        4   25[BANK0 ] unsigned long 
 11022 ;;  divisor         4   29[BANK0 ] unsigned long 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  counter         1   38[COMRAM] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  4   25[BANK0 ] unsigned long 
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11034 ;;      Params:         0       8       0       0       0       0       0
 11035 ;;      Locals:         1       0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0
 11037 ;;      Totals:         1       8       0       0       0       0       0
 11038 ;;Total ram usage:        9 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    3
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_sprintf
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text42
 11049  003526                     __ptext42:
 11050                           	opt stack 0
 11051  003526                     ___llmod:
 11052                           	opt stack 24
 11053                           
 11054                           ;incstack = 0
 11055  003526  0100               	movlb	0	; () banked
 11056  003528  517D               	movf	___llmod@divisor& (0+255),w,b
 11057  00352A  0100               	movlb	0	; () banked
 11058  00352C  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11059  00352E  0100               	movlb	0	; () banked
 11060  003530  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11061  003532  0100               	movlb	0	; () banked
 11062  003534  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11063  003536  B4D8               	btfsc	status,2,c
 11064  003538  D037               	goto	l919
 11065                           
 11066                           ; BSR set to: 0
 11067  00353A  0E01               	movlw	1
 11068  00353C  6E27               	movwf	___llmod@counter,c
 11069  00353E  D007               	goto	l5284
 11070  003540                     l5282:
 11071                           
 11072                           ; BSR set to: 0
 11073  003540  0100               	movlb	0	; () banked
 11074  003542  90D8               	bcf	status,0,c
 11075  003544  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11076  003546  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11077  003548  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11078  00354A  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11079  00354C  2A27               	incf	___llmod@counter,f,c
 11080  00354E                     l5284:
 11081                           
 11082                           ; BSR set to: 0
 11083  00354E  0100               	movlb	0	; () banked
 11084  003550  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11085  003552  D7F6               	goto	l5282
 11086  003554                     l5286:
 11087                           
 11088                           ; BSR set to: 0
 11089  003554  0100               	movlb	0	; () banked
 11090  003556  517D               	movf	___llmod@divisor& (0+255),w,b
 11091  003558  0100               	movlb	0	; () banked
 11092  00355A  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11093  00355C  0100               	movlb	0	; () banked
 11094  00355E  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11095  003560  0100               	movlb	0	; () banked
 11096  003562  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11097  003564  0100               	movlb	0	; () banked
 11098  003566  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11099  003568  0100               	movlb	0	; () banked
 11100  00356A  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11101  00356C  0100               	movlb	0	; () banked
 11102  00356E  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11103  003570  0100               	movlb	0	; () banked
 11104  003572  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11105  003574  A0D8               	btfss	status,0,c
 11106  003576  D010               	goto	l5290
 11107                           
 11108                           ; BSR set to: 0
 11109  003578  0100               	movlb	0	; () banked
 11110  00357A  517D               	movf	___llmod@divisor& (0+255),w,b
 11111  00357C  0100               	movlb	0	; () banked
 11112  00357E  5F79               	subwf	___llmod@dividend& (0+255),f,b
 11113  003580  0100               	movlb	0	; () banked
 11114  003582  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11115  003584  0100               	movlb	0	; () banked
 11116  003586  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11117  003588  0100               	movlb	0	; () banked
 11118  00358A  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11119  00358C  0100               	movlb	0	; () banked
 11120  00358E  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11121  003590  0100               	movlb	0	; () banked
 11122  003592  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11123  003594  0100               	movlb	0	; () banked
 11124  003596  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11125  003598                     l5290:
 11126                           
 11127                           ; BSR set to: 0
 11128  003598  0100               	movlb	0	; () banked
 11129  00359A  90D8               	bcf	status,0,c
 11130  00359C  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11131  00359E  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11132  0035A0  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11133  0035A2  337D               	rrcf	___llmod@divisor& (0+255),f,b
 11134                           
 11135                           ; BSR set to: 0
 11136  0035A4  2E27               	decfsz	___llmod@counter,f,c
 11137  0035A6  D7D6               	goto	l5286
 11138  0035A8                     l919:
 11139                           
 11140                           ; BSR set to: 0
 11141  0035A8  C079  F079         	movff	___llmod@dividend,?___llmod
 11142  0035AC  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 11143  0035B0  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 11144  0035B4  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 11145                           
 11146                           ; BSR set to: 0
 11147  0035B8  0012               	return		;funcret
 11148  0035BA                     __end_of___llmod:
 11149                           	opt stack 0
 11150                           tblptru	equ	0xFF8
 11151                           tblptrh	equ	0xFF7
 11152                           tblptrl	equ	0xFF6
 11153                           tablat	equ	0xFF5
 11154                           prodh	equ	0xFF4
 11155                           prodl	equ	0xFF3
 11156                           indf0	equ	0xFEF
 11157                           postinc0	equ	0xFEE
 11158                           fsr0h	equ	0xFEA
 11159                           fsr0l	equ	0xFE9
 11160                           wreg	equ	0xFE8
 11161                           indf1	equ	0xFE7
 11162                           postdec1	equ	0xFE5
 11163                           fsr1h	equ	0xFE2
 11164                           fsr1l	equ	0xFE1
 11165                           indf2	equ	0xFDF
 11166                           postinc2	equ	0xFDE
 11167                           postdec2	equ	0xFDD
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function ___lldiv *****************
 11173 ;; Defined at:
 11174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  dividend        4   17[BANK0 ] unsigned long 
 11177 ;;  divisor         4   21[BANK0 ] unsigned long 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  quotient        4   33[COMRAM] unsigned long 
 11180 ;;  counter         1   37[COMRAM] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  4   17[BANK0 ] unsigned long 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11190 ;;      Params:         0       8       0       0       0       0       0
 11191 ;;      Locals:         5       0       0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0
 11193 ;;      Totals:         5       8       0       0       0       0       0
 11194 ;;Total ram usage:       13 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    3
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_sprintf
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text43
 11205  00333C                     __ptext43:
 11206                           	opt stack 0
 11207  00333C                     ___lldiv:
 11208                           	opt stack 24
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;incstack = 0
 11212  00333C  0E00               	movlw	0
 11213  00333E  6E22               	movwf	___lldiv@quotient,c
 11214  003340  0E00               	movlw	0
 11215  003342  6E23               	movwf	___lldiv@quotient+1,c
 11216  003344  0E00               	movlw	0
 11217  003346  6E24               	movwf	___lldiv@quotient+2,c
 11218  003348  0E00               	movlw	0
 11219  00334A  6E25               	movwf	___lldiv@quotient+3,c
 11220  00334C  0100               	movlb	0	; () banked
 11221  00334E  5175               	movf	___lldiv@divisor& (0+255),w,b
 11222  003350  0100               	movlb	0	; () banked
 11223  003352  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11224  003354  0100               	movlb	0	; () banked
 11225  003356  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11226  003358  0100               	movlb	0	; () banked
 11227  00335A  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11228  00335C  B4D8               	btfsc	status,2,c
 11229  00335E  D03D               	goto	l909
 11230                           
 11231                           ; BSR set to: 0
 11232  003360  0E01               	movlw	1
 11233  003362  6E26               	movwf	___lldiv@counter,c
 11234  003364  D007               	goto	l5264
 11235  003366                     l5262:
 11236                           
 11237                           ; BSR set to: 0
 11238  003366  0100               	movlb	0	; () banked
 11239  003368  90D8               	bcf	status,0,c
 11240  00336A  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11241  00336C  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11242  00336E  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11243  003370  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11244  003372  2A26               	incf	___lldiv@counter,f,c
 11245  003374                     l5264:
 11246                           
 11247                           ; BSR set to: 0
 11248  003374  0100               	movlb	0	; () banked
 11249  003376  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11250  003378  D7F6               	goto	l5262
 11251  00337A                     l5266:
 11252                           
 11253                           ; BSR set to: 0
 11254  00337A  90D8               	bcf	status,0,c
 11255  00337C  3622               	rlcf	___lldiv@quotient,f,c
 11256  00337E  3623               	rlcf	___lldiv@quotient+1,f,c
 11257  003380  3624               	rlcf	___lldiv@quotient+2,f,c
 11258  003382  3625               	rlcf	___lldiv@quotient+3,f,c
 11259                           
 11260                           ; BSR set to: 0
 11261  003384  0100               	movlb	0	; () banked
 11262  003386  5175               	movf	___lldiv@divisor& (0+255),w,b
 11263  003388  0100               	movlb	0	; () banked
 11264  00338A  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11265  00338C  0100               	movlb	0	; () banked
 11266  00338E  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11267  003390  0100               	movlb	0	; () banked
 11268  003392  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11269  003394  0100               	movlb	0	; () banked
 11270  003396  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11271  003398  0100               	movlb	0	; () banked
 11272  00339A  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11273  00339C  0100               	movlb	0	; () banked
 11274  00339E  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11275  0033A0  0100               	movlb	0	; () banked
 11276  0033A2  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11277  0033A4  A0D8               	btfss	status,0,c
 11278  0033A6  D011               	goto	l5274
 11279                           
 11280                           ; BSR set to: 0
 11281  0033A8  0100               	movlb	0	; () banked
 11282  0033AA  5175               	movf	___lldiv@divisor& (0+255),w,b
 11283  0033AC  0100               	movlb	0	; () banked
 11284  0033AE  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11285  0033B0  0100               	movlb	0	; () banked
 11286  0033B2  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11287  0033B4  0100               	movlb	0	; () banked
 11288  0033B6  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11289  0033B8  0100               	movlb	0	; () banked
 11290  0033BA  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11291  0033BC  0100               	movlb	0	; () banked
 11292  0033BE  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11293  0033C0  0100               	movlb	0	; () banked
 11294  0033C2  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11295  0033C4  0100               	movlb	0	; () banked
 11296  0033C6  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11297                           
 11298                           ; BSR set to: 0
 11299  0033C8  8022               	bsf	___lldiv@quotient,0,c
 11300  0033CA                     l5274:
 11301                           
 11302                           ; BSR set to: 0
 11303  0033CA  0100               	movlb	0	; () banked
 11304  0033CC  90D8               	bcf	status,0,c
 11305  0033CE  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11306  0033D0  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11307  0033D2  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11308  0033D4  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11309                           
 11310                           ; BSR set to: 0
 11311  0033D6  2E26               	decfsz	___lldiv@counter,f,c
 11312  0033D8  D7D0               	goto	l5266
 11313  0033DA                     l909:
 11314                           
 11315                           ; BSR set to: 0
 11316  0033DA  C022  F071         	movff	___lldiv@quotient,?___lldiv
 11317  0033DE  C023  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11318  0033E2  C024  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11319  0033E6  C025  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11320                           
 11321                           ; BSR set to: 0
 11322  0033EA  0012               	return		;funcret
 11323  0033EC                     __end_of___lldiv:
 11324                           	opt stack 0
 11325                           tblptru	equ	0xFF8
 11326                           tblptrh	equ	0xFF7
 11327                           tblptrl	equ	0xFF6
 11328                           tablat	equ	0xFF5
 11329                           prodh	equ	0xFF4
 11330                           prodl	equ	0xFF3
 11331                           indf0	equ	0xFEF
 11332                           postinc0	equ	0xFEE
 11333                           fsr0h	equ	0xFEA
 11334                           fsr0l	equ	0xFE9
 11335                           wreg	equ	0xFE8
 11336                           indf1	equ	0xFE7
 11337                           postdec1	equ	0xFE5
 11338                           fsr1h	equ	0xFE2
 11339                           fsr1l	equ	0xFE1
 11340                           indf2	equ	0xFDF
 11341                           postinc2	equ	0xFDE
 11342                           postdec2	equ	0xFDD
 11343                           fsr2h	equ	0xFDA
 11344                           fsr2l	equ	0xFD9
 11345                           status	equ	0xFD8
 11346                           
 11347 ;; *************** function ___fttol *****************
 11348 ;; Defined at:
 11349 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  f1              3   48[BANK0 ] float 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  lval            4   58[BANK0 ] unsigned long 
 11354 ;;  exp1            1   62[BANK0 ] unsigned char 
 11355 ;;  sign1           1   57[BANK0 ] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  4   48[BANK0 ] long 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11365 ;;      Params:         0       4       0       0       0       0       0
 11366 ;;      Locals:         0       6       0       0       0       0       0
 11367 ;;      Temps:          0       5       0       0       0       0       0
 11368 ;;      Totals:         0      15       0       0       0       0       0
 11369 ;;Total ram usage:       15 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    3
 11372 ;; This function calls:
 11373 ;;		Nothing
 11374 ;; This function is called by:
 11375 ;;		_util_getSolarCurrent
 11376 ;;		_util_getBatteryCurrent
 11377 ;;		_sprintf
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text44
 11382  002AF2                     __ptext44:
 11383                           	opt stack 0
 11384  002AF2                     ___fttol:
 11385                           	opt stack 25
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;incstack = 0
 11389  002AF2  C092  F094         	movff	___fttol@f1+2,??___fttol
 11390  002AF6  0100               	movlb	0	; () banked
 11391  002AF8  6B95               	clrf	(??___fttol+1)& (0+255),b
 11392  002AFA  6B96               	clrf	(??___fttol+2)& (0+255),b
 11393  002AFC  0100               	movlb	0	; () banked
 11394  002AFE  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11395  002B00  0100               	movlb	0	; () banked
 11396  002B02  3794               	rlcf	??___fttol& (0+255),f,b
 11397  002B04  E301               	bnc	u3121
 11398  002B06  8195               	bsf	(??___fttol+1)& (0+255),0,b
 11399  002B08                     u3121:
 11400  002B08  0100               	movlb	0	; () banked
 11401  002B0A  5194               	movf	??___fttol& (0+255),w,b
 11402  002B0C  0100               	movlb	0	; () banked
 11403  002B0E  6F9E               	movwf	___fttol@exp1& (0+255),b
 11404  002B10  0100               	movlb	0	; () banked
 11405  002B12  519E               	movf	___fttol@exp1& (0+255),w,b
 11406  002B14  A4D8               	btfss	status,2,c
 11407  002B16  D00A               	goto	l3538
 11408                           
 11409                           ; BSR set to: 0
 11410  002B18  0E00               	movlw	0
 11411  002B1A  0100               	movlb	0	; () banked
 11412  002B1C  6F90               	movwf	?___fttol& (0+255),b
 11413  002B1E  0E00               	movlw	0
 11414  002B20  6F91               	movwf	(?___fttol+1)& (0+255),b
 11415  002B22  0E00               	movlw	0
 11416  002B24  6F92               	movwf	(?___fttol+2)& (0+255),b
 11417  002B26  0E00               	movlw	0
 11418  002B28  6F93               	movwf	(?___fttol+3)& (0+255),b
 11419                           
 11420                           ; BSR set to: 0
 11421  002B2A  0012               	return	
 11422  002B2C                     l3538:
 11423                           
 11424                           ; BSR set to: 0
 11425  002B2C  0E17               	movlw	23
 11426  002B2E  0100               	movlb	0	; () banked
 11427  002B30  6F94               	movwf	??___fttol& (0+255),b
 11428  002B32  C090  F095         	movff	___fttol@f1,??___fttol+1
 11429  002B36  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 11430  002B3A  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 11431  002B3E  0100               	movlb	0	; () banked
 11432  002B40  2994               	incf	??___fttol& (0+255),w,b
 11433  002B42  0100               	movlb	0	; () banked
 11434  002B44  6F98               	movwf	(??___fttol+4)& (0+255),b
 11435  002B46  D005               	goto	u3140
 11436  002B48                     u3145:
 11437  002B48  0100               	movlb	0	; () banked
 11438  002B4A  90D8               	bcf	status,0,c
 11439  002B4C  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 11440  002B4E  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 11441  002B50  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 11442  002B52                     u3140:
 11443  002B52  0100               	movlb	0	; () banked
 11444  002B54  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 11445  002B56  D7F8               	goto	u3145
 11446  002B58  0100               	movlb	0	; () banked
 11447  002B5A  5195               	movf	(??___fttol+1)& (0+255),w,b
 11448  002B5C  0100               	movlb	0	; () banked
 11449  002B5E  6F99               	movwf	___fttol@sign1& (0+255),b
 11450                           
 11451                           ; BSR set to: 0
 11452  002B60  0100               	movlb	0	; () banked
 11453  002B62  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 11454                           
 11455                           ; BSR set to: 0
 11456  002B64  0EFF               	movlw	255
 11457  002B66  0100               	movlb	0	; () banked
 11458  002B68  1790               	andwf	___fttol@f1& (0+255),f,b
 11459  002B6A  0EFF               	movlw	255
 11460  002B6C  0100               	movlb	0	; () banked
 11461  002B6E  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 11462  002B70  0E00               	movlw	0
 11463  002B72  0100               	movlb	0	; () banked
 11464  002B74  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467  002B76  0100               	movlb	0	; () banked
 11468  002B78  5190               	movf	___fttol@f1& (0+255),w,b
 11469  002B7A  0100               	movlb	0	; () banked
 11470  002B7C  6F9A               	movwf	___fttol@lval& (0+255),b
 11471  002B7E  0100               	movlb	0	; () banked
 11472  002B80  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 11473  002B82  0100               	movlb	0	; () banked
 11474  002B84  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 11475  002B86  0100               	movlb	0	; () banked
 11476  002B88  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 11477  002B8A  0100               	movlb	0	; () banked
 11478  002B8C  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 11479  002B8E  0100               	movlb	0	; () banked
 11480  002B90  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483  002B92  0E8E               	movlw	142
 11484  002B94  0100               	movlb	0	; () banked
 11485  002B96  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 11486                           
 11487                           ; BSR set to: 0
 11488  002B98  0100               	movlb	0	; () banked
 11489  002B9A  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 11490  002B9C  D01A               	goto	l3560
 11491                           
 11492                           ; BSR set to: 0
 11493  002B9E  0100               	movlb	0	; () banked
 11494  002BA0  519E               	movf	___fttol@exp1& (0+255),w,b
 11495  002BA2  0A80               	xorlw	128
 11496  002BA4  0F8F               	addlw	143
 11497  002BA6  B0D8               	btfsc	status,0,c
 11498  002BA8  D00A               	goto	l3556
 11499                           
 11500                           ; BSR set to: 0
 11501  002BAA  0E00               	movlw	0
 11502  002BAC  0100               	movlb	0	; () banked
 11503  002BAE  6F90               	movwf	?___fttol& (0+255),b
 11504  002BB0  0E00               	movlw	0
 11505  002BB2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11506  002BB4  0E00               	movlw	0
 11507  002BB6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11508  002BB8  0E00               	movlw	0
 11509  002BBA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11510                           
 11511                           ; BSR set to: 0
 11512  002BBC  0012               	return	
 11513  002BBE                     l3556:
 11514                           
 11515                           ; BSR set to: 0
 11516  002BBE  0100               	movlb	0	; () banked
 11517  002BC0  90D8               	bcf	status,0,c
 11518  002BC2  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11519  002BC4  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11520  002BC6  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11521  002BC8  339A               	rrcf	___fttol@lval& (0+255),f,b
 11522                           
 11523                           ; BSR set to: 0
 11524  002BCA  0100               	movlb	0	; () banked
 11525  002BCC  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 11526  002BCE  D7F7               	goto	l3556
 11527                           
 11528                           ; BSR set to: 0
 11529  002BD0  D01B               	goto	l3570
 11530  002BD2                     l3560:
 11531                           
 11532                           ; BSR set to: 0
 11533  002BD2  0E17               	movlw	23
 11534  002BD4  0100               	movlb	0	; () banked
 11535  002BD6  659E               	cpfsgt	___fttol@exp1& (0+255),b
 11536  002BD8  D012               	goto	l3568
 11537                           
 11538                           ; BSR set to: 0
 11539  002BDA  0E00               	movlw	0
 11540  002BDC  0100               	movlb	0	; () banked
 11541  002BDE  6F90               	movwf	?___fttol& (0+255),b
 11542  002BE0  0E00               	movlw	0
 11543  002BE2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11544  002BE4  0E00               	movlw	0
 11545  002BE6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11546  002BE8  0E00               	movlw	0
 11547  002BEA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11548                           
 11549                           ; BSR set to: 0
 11550  002BEC  0012               	return	
 11551  002BEE                     l3566:
 11552                           
 11553                           ; BSR set to: 0
 11554  002BEE  0100               	movlb	0	; () banked
 11555  002BF0  90D8               	bcf	status,0,c
 11556  002BF2  379A               	rlcf	___fttol@lval& (0+255),f,b
 11557  002BF4  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11558  002BF6  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11559  002BF8  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11560  002BFA  0100               	movlb	0	; () banked
 11561  002BFC  079E               	decf	___fttol@exp1& (0+255),f,b
 11562  002BFE                     l3568:
 11563                           
 11564                           ; BSR set to: 0
 11565  002BFE  0100               	movlb	0	; () banked
 11566  002C00  519E               	movf	___fttol@exp1& (0+255),w,b
 11567  002C02  0100               	movlb	0	; () banked
 11568  002C04  A4D8               	btfss	status,2,c
 11569  002C06  D7F3               	goto	l3566
 11570  002C08                     l3570:
 11571                           
 11572                           ; BSR set to: 0
 11573  002C08  0100               	movlb	0	; () banked
 11574  002C0A  5199               	movf	___fttol@sign1& (0+255),w,b
 11575  002C0C  0100               	movlb	0	; () banked
 11576  002C0E  B4D8               	btfsc	status,2,c
 11577  002C10  D009               	goto	l3574
 11578                           
 11579                           ; BSR set to: 0
 11580  002C12  0100               	movlb	0	; () banked
 11581  002C14  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 11582  002C16  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 11583  002C18  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 11584  002C1A  6D9A               	negf	___fttol@lval& (0+255),b
 11585  002C1C  0E00               	movlw	0
 11586  002C1E  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11587  002C20  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11588  002C22  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11589  002C24                     l3574:
 11590                           
 11591                           ; BSR set to: 0
 11592  002C24  C09A  F090         	movff	___fttol@lval,?___fttol
 11593  002C28  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 11594  002C2C  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 11595  002C30  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 11596  002C34  0012               	return	
 11597  002C36                     __end_of___fttol:
 11598                           	opt stack 0
 11599                           tblptru	equ	0xFF8
 11600                           tblptrh	equ	0xFF7
 11601                           tblptrl	equ	0xFF6
 11602                           tablat	equ	0xFF5
 11603                           prodh	equ	0xFF4
 11604                           prodl	equ	0xFF3
 11605                           indf0	equ	0xFEF
 11606                           postinc0	equ	0xFEE
 11607                           fsr0h	equ	0xFEA
 11608                           fsr0l	equ	0xFE9
 11609                           wreg	equ	0xFE8
 11610                           indf1	equ	0xFE7
 11611                           postdec1	equ	0xFE5
 11612                           fsr1h	equ	0xFE2
 11613                           fsr1l	equ	0xFE1
 11614                           indf2	equ	0xFDF
 11615                           postinc2	equ	0xFDE
 11616                           postdec2	equ	0xFDD
 11617                           fsr2h	equ	0xFDA
 11618                           fsr2l	equ	0xFD9
 11619                           status	equ	0xFD8
 11620                           
 11621 ;; *************** function ___ftsub *****************
 11622 ;; Defined at:
 11623 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;  f1              3   63[BANK0 ] float 
 11626 ;;  f2              3   66[BANK0 ] float 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  3   63[BANK0 ] float 
 11631 ;; Registers used:
 11632 ;;		wreg, status,2, status,0, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11638 ;;      Params:         0       6       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0
 11641 ;;      Totals:         0       6       0       0       0       0       0
 11642 ;;Total ram usage:        6 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    5
 11645 ;; This function calls:
 11646 ;;		___ftadd
 11647 ;; This function is called by:
 11648 ;;		_sprintf
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text45
 11653  003826                     __ptext45:
 11654                           	opt stack 0
 11655  003826                     ___ftsub:
 11656                           	opt stack 22
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;incstack = 0
 11660  003826  0100               	movlb	0	; () banked
 11661  003828  51A2               	movf	___ftsub@f2& (0+255),w,b
 11662  00382A  0100               	movlb	0	; () banked
 11663  00382C  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11664  00382E  0100               	movlb	0	; () banked
 11665  003830  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11666  003832  B4D8               	btfsc	status,2,c
 11667  003834  D009               	goto	l5230
 11668                           
 11669                           ; BSR set to: 0
 11670  003836  0E00               	movlw	0
 11671  003838  0100               	movlb	0	; () banked
 11672  00383A  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 11673  00383C  0E00               	movlw	0
 11674  00383E  0100               	movlb	0	; () banked
 11675  003840  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11676  003842  0E80               	movlw	128
 11677  003844  0100               	movlb	0	; () banked
 11678  003846  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11679  003848                     l5230:
 11680                           
 11681                           ; BSR set to: 0
 11682  003848  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 11683  00384C  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 11684  003850  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 11685  003854  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 11686  003858  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 11687  00385C  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 11688  003860  EC9A  F00F         	call	___ftadd	;wreg free
 11689  003864  C093  F09F         	movff	?___ftadd,?___ftsub
 11690  003868  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 11691  00386C  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 11692  003870  0012               	return	
 11693  003872                     __end_of___ftsub:
 11694                           	opt stack 0
 11695                           tblptru	equ	0xFF8
 11696                           tblptrh	equ	0xFF7
 11697                           tblptrl	equ	0xFF6
 11698                           tablat	equ	0xFF5
 11699                           prodh	equ	0xFF4
 11700                           prodl	equ	0xFF3
 11701                           indf0	equ	0xFEF
 11702                           postinc0	equ	0xFEE
 11703                           fsr0h	equ	0xFEA
 11704                           fsr0l	equ	0xFE9
 11705                           wreg	equ	0xFE8
 11706                           indf1	equ	0xFE7
 11707                           postdec1	equ	0xFE5
 11708                           fsr1h	equ	0xFE2
 11709                           fsr1l	equ	0xFE1
 11710                           indf2	equ	0xFDF
 11711                           postinc2	equ	0xFDE
 11712                           postdec2	equ	0xFDD
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function ___ftadd *****************
 11718 ;; Defined at:
 11719 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  f1              3   51[BANK0 ] float 
 11722 ;;  f2              3   54[BANK0 ] float 
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;  exp1            1   62[BANK0 ] unsigned char 
 11725 ;;  exp2            1   61[BANK0 ] unsigned char 
 11726 ;;  sign            1   60[BANK0 ] unsigned char 
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  3   51[BANK0 ] float 
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0, cstack
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11736 ;;      Params:         0       6       0       0       0       0       0
 11737 ;;      Locals:         0       3       0       0       0       0       0
 11738 ;;      Temps:          0       3       0       0       0       0       0
 11739 ;;      Totals:         0      12       0       0       0       0       0
 11740 ;;Total ram usage:       12 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; Hardware stack levels required when called:    4
 11743 ;; This function calls:
 11744 ;;		___ftpack
 11745 ;; This function is called by:
 11746 ;;		_util_getTemperature
 11747 ;;		_sprintf
 11748 ;;		___ftsub
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           	psect	text46
 11753  001F34                     __ptext46:
 11754                           	opt stack 0
 11755  001F34                     ___ftadd:
 11756                           	opt stack 24
 11757                           
 11758                           ;incstack = 0
 11759  001F34  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 11760  001F38  0100               	movlb	0	; () banked
 11761  001F3A  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11762  001F3C  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11763  001F3E  0100               	movlb	0	; () banked
 11764  001F40  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11765  001F42  0100               	movlb	0	; () banked
 11766  001F44  3799               	rlcf	??___ftadd& (0+255),f,b
 11767  001F46  E301               	bnc	u4571
 11768  001F48  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11769  001F4A                     u4571:
 11770  001F4A  0100               	movlb	0	; () banked
 11771  001F4C  5199               	movf	??___ftadd& (0+255),w,b
 11772  001F4E  0100               	movlb	0	; () banked
 11773  001F50  6F9E               	movwf	___ftadd@exp1& (0+255),b
 11774  001F52  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 11775  001F56  0100               	movlb	0	; () banked
 11776  001F58  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11777  001F5A  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11778  001F5C  0100               	movlb	0	; () banked
 11779  001F5E  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11780  001F60  0100               	movlb	0	; () banked
 11781  001F62  3799               	rlcf	??___ftadd& (0+255),f,b
 11782  001F64  E301               	bnc	u4581
 11783  001F66  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11784  001F68                     u4581:
 11785  001F68  0100               	movlb	0	; () banked
 11786  001F6A  5199               	movf	??___ftadd& (0+255),w,b
 11787  001F6C  0100               	movlb	0	; () banked
 11788  001F6E  6F9D               	movwf	___ftadd@exp2& (0+255),b
 11789                           
 11790                           ; BSR set to: 0
 11791  001F70  0100               	movlb	0	; () banked
 11792  001F72  519E               	movf	___ftadd@exp1& (0+255),w,b
 11793  001F74  0100               	movlb	0	; () banked
 11794  001F76  B4D8               	btfsc	status,2,c
 11795  001F78  D011               	goto	l785
 11796                           
 11797                           ; BSR set to: 0
 11798  001F7A  0100               	movlb	0	; () banked
 11799  001F7C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11800  001F7E  0100               	movlb	0	; () banked
 11801  001F80  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11802  001F82  B0D8               	btfsc	status,0,c
 11803  001F84  D012               	goto	l4778
 11804                           
 11805                           ; BSR set to: 0
 11806  001F86  0100               	movlb	0	; () banked
 11807  001F88  519E               	movf	___ftadd@exp1& (0+255),w,b
 11808  001F8A  0800               	sublw	0
 11809  001F8C  0100               	movlb	0	; () banked
 11810  001F8E  259D               	addwf	___ftadd@exp2& (0+255),w,b
 11811  001F90  0100               	movlb	0	; () banked
 11812  001F92  6F99               	movwf	??___ftadd& (0+255),b
 11813  001F94  0E18               	movlw	24
 11814  001F96  0100               	movlb	0	; () banked
 11815  001F98  6599               	cpfsgt	??___ftadd& (0+255),b
 11816  001F9A  D007               	goto	l4778
 11817  001F9C                     l785:
 11818                           
 11819                           ; BSR set to: 0
 11820  001F9C  C096  F093         	movff	___ftadd@f2,?___ftadd
 11821  001FA0  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 11822  001FA4  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 11823  001FA8  0012               	return	
 11824  001FAA                     l4778:
 11825                           
 11826                           ; BSR set to: 0
 11827  001FAA  0100               	movlb	0	; () banked
 11828  001FAC  519D               	movf	___ftadd@exp2& (0+255),w,b
 11829  001FAE  0100               	movlb	0	; () banked
 11830  001FB0  B4D8               	btfsc	status,2,c
 11831  001FB2  D011               	goto	l789
 11832                           
 11833                           ; BSR set to: 0
 11834  001FB4  0100               	movlb	0	; () banked
 11835  001FB6  519E               	movf	___ftadd@exp1& (0+255),w,b
 11836  001FB8  0100               	movlb	0	; () banked
 11837  001FBA  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11838  001FBC  B0D8               	btfsc	status,0,c
 11839  001FBE  D012               	goto	l4784
 11840                           
 11841                           ; BSR set to: 0
 11842  001FC0  0100               	movlb	0	; () banked
 11843  001FC2  519D               	movf	___ftadd@exp2& (0+255),w,b
 11844  001FC4  0800               	sublw	0
 11845  001FC6  0100               	movlb	0	; () banked
 11846  001FC8  259E               	addwf	___ftadd@exp1& (0+255),w,b
 11847  001FCA  0100               	movlb	0	; () banked
 11848  001FCC  6F99               	movwf	??___ftadd& (0+255),b
 11849  001FCE  0E18               	movlw	24
 11850  001FD0  0100               	movlb	0	; () banked
 11851  001FD2  6599               	cpfsgt	??___ftadd& (0+255),b
 11852  001FD4  D007               	goto	l4784
 11853  001FD6                     l789:
 11854                           
 11855                           ; BSR set to: 0
 11856  001FD6  C093  F093         	movff	___ftadd@f1,?___ftadd
 11857  001FDA  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 11858  001FDE  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 11859  001FE2  0012               	return	
 11860  001FE4                     l4784:
 11861                           
 11862                           ; BSR set to: 0
 11863  001FE4  0E06               	movlw	6
 11864  001FE6  0100               	movlb	0	; () banked
 11865  001FE8  6F9C               	movwf	___ftadd@sign& (0+255),b
 11866                           
 11867                           ; BSR set to: 0
 11868  001FEA  0100               	movlb	0	; () banked
 11869  001FEC  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11870  001FEE  D002               	goto	l4790
 11871                           
 11872                           ; BSR set to: 0
 11873  001FF0  0100               	movlb	0	; () banked
 11874  001FF2  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 11875  001FF4                     l4790:
 11876                           
 11877                           ; BSR set to: 0
 11878  001FF4  0100               	movlb	0	; () banked
 11879  001FF6  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11880  001FF8  D002               	goto	l791
 11881                           
 11882                           ; BSR set to: 0
 11883  001FFA  0100               	movlb	0	; () banked
 11884  001FFC  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 11885  001FFE                     l791:
 11886                           
 11887                           ; BSR set to: 0
 11888  001FFE  0100               	movlb	0	; () banked
 11889  002000  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11890                           
 11891                           ; BSR set to: 0
 11892  002002  0EFF               	movlw	255
 11893  002004  0100               	movlb	0	; () banked
 11894  002006  1793               	andwf	___ftadd@f1& (0+255),f,b
 11895  002008  0EFF               	movlw	255
 11896  00200A  0100               	movlb	0	; () banked
 11897  00200C  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11898  00200E  0E00               	movlw	0
 11899  002010  0100               	movlb	0	; () banked
 11900  002012  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11901  002014  0100               	movlb	0	; () banked
 11902  002016  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11903                           
 11904                           ; BSR set to: 0
 11905  002018  0EFF               	movlw	255
 11906  00201A  0100               	movlb	0	; () banked
 11907  00201C  1796               	andwf	___ftadd@f2& (0+255),f,b
 11908  00201E  0EFF               	movlw	255
 11909  002020  0100               	movlb	0	; () banked
 11910  002022  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11911  002024  0E00               	movlw	0
 11912  002026  0100               	movlb	0	; () banked
 11913  002028  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11914                           
 11915                           ; BSR set to: 0
 11916  00202A  0100               	movlb	0	; () banked
 11917  00202C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11918  00202E  0100               	movlb	0	; () banked
 11919  002030  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11920  002032  B0D8               	btfsc	status,0,c
 11921  002034  D025               	goto	l4810
 11922  002036                     l4800:
 11923                           
 11924                           ; BSR set to: 0
 11925  002036  0100               	movlb	0	; () banked
 11926  002038  90D8               	bcf	status,0,c
 11927  00203A  3796               	rlcf	___ftadd@f2& (0+255),f,b
 11928  00203C  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11929  00203E  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11930  002040  0100               	movlb	0	; () banked
 11931  002042  079D               	decf	___ftadd@exp2& (0+255),f,b
 11932                           
 11933                           ; BSR set to: 0
 11934  002044  0100               	movlb	0	; () banked
 11935  002046  519E               	movf	___ftadd@exp1& (0+255),w,b
 11936  002048  0100               	movlb	0	; () banked
 11937  00204A  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11938  00204C  B4D8               	btfsc	status,2,c
 11939  00204E  D011               	goto	l4808
 11940                           
 11941                           ; BSR set to: 0
 11942  002050  0100               	movlb	0	; () banked
 11943  002052  079C               	decf	___ftadd@sign& (0+255),f,b
 11944  002054  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11945  002058  0E07               	movlw	7
 11946  00205A  0100               	movlb	0	; () banked
 11947  00205C  1799               	andwf	??___ftadd& (0+255),f,b
 11948  00205E  B4D8               	btfsc	status,2,c
 11949  002060  D008               	goto	l4808
 11950  002062  D7E9               	goto	l4800
 11951  002064                     l4806:
 11952                           
 11953                           ; BSR set to: 0
 11954  002064  0100               	movlb	0	; () banked
 11955  002066  90D8               	bcf	status,0,c
 11956  002068  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11957  00206A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11958  00206C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 11959  00206E  0100               	movlb	0	; () banked
 11960  002070  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 11961  002072                     l4808:
 11962                           
 11963                           ; BSR set to: 0
 11964  002072  0100               	movlb	0	; () banked
 11965  002074  519D               	movf	___ftadd@exp2& (0+255),w,b
 11966  002076  0100               	movlb	0	; () banked
 11967  002078  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11968  00207A  B4D8               	btfsc	status,2,c
 11969  00207C  D02B               	goto	l800
 11970  00207E  D7F2               	goto	l4806
 11971  002080                     l4810:
 11972                           
 11973                           ; BSR set to: 0
 11974  002080  0100               	movlb	0	; () banked
 11975  002082  519E               	movf	___ftadd@exp1& (0+255),w,b
 11976  002084  0100               	movlb	0	; () banked
 11977  002086  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11978  002088  B0D8               	btfsc	status,0,c
 11979  00208A  D024               	goto	l800
 11980  00208C                     l4812:
 11981                           
 11982                           ; BSR set to: 0
 11983  00208C  0100               	movlb	0	; () banked
 11984  00208E  90D8               	bcf	status,0,c
 11985  002090  3793               	rlcf	___ftadd@f1& (0+255),f,b
 11986  002092  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11987  002094  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11988  002096  0100               	movlb	0	; () banked
 11989  002098  079E               	decf	___ftadd@exp1& (0+255),f,b
 11990                           
 11991                           ; BSR set to: 0
 11992  00209A  0100               	movlb	0	; () banked
 11993  00209C  519E               	movf	___ftadd@exp1& (0+255),w,b
 11994  00209E  0100               	movlb	0	; () banked
 11995  0020A0  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11996  0020A2  B4D8               	btfsc	status,2,c
 11997  0020A4  D011               	goto	l4820
 11998                           
 11999                           ; BSR set to: 0
 12000  0020A6  0100               	movlb	0	; () banked
 12001  0020A8  079C               	decf	___ftadd@sign& (0+255),f,b
 12002  0020AA  C09C  F099         	movff	___ftadd@sign,??___ftadd
 12003  0020AE  0E07               	movlw	7
 12004  0020B0  0100               	movlb	0	; () banked
 12005  0020B2  1799               	andwf	??___ftadd& (0+255),f,b
 12006  0020B4  B4D8               	btfsc	status,2,c
 12007  0020B6  D008               	goto	l4820
 12008  0020B8  D7E9               	goto	l4812
 12009  0020BA                     l4818:
 12010                           
 12011                           ; BSR set to: 0
 12012  0020BA  0100               	movlb	0	; () banked
 12013  0020BC  90D8               	bcf	status,0,c
 12014  0020BE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12015  0020C0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12016  0020C2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 12017  0020C4  0100               	movlb	0	; () banked
 12018  0020C6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 12019  0020C8                     l4820:
 12020                           
 12021                           ; BSR set to: 0
 12022  0020C8  0100               	movlb	0	; () banked
 12023  0020CA  519D               	movf	___ftadd@exp2& (0+255),w,b
 12024  0020CC  0100               	movlb	0	; () banked
 12025  0020CE  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 12026  0020D0  A4D8               	btfss	status,2,c
 12027  0020D2  D7F3               	goto	l4818
 12028  0020D4                     l800:
 12029                           
 12030                           ; BSR set to: 0
 12031  0020D4  0100               	movlb	0	; () banked
 12032  0020D6  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 12033  0020D8  D012               	goto	l809
 12034                           
 12035                           ; BSR set to: 0
 12036  0020DA  0EFF               	movlw	255
 12037  0020DC  0100               	movlb	0	; () banked
 12038  0020DE  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 12039  0020E0  0EFF               	movlw	255
 12040  0020E2  0100               	movlb	0	; () banked
 12041  0020E4  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12042  0020E6  0EFF               	movlw	255
 12043  0020E8  0100               	movlb	0	; () banked
 12044  0020EA  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12045  0020EC  0E01               	movlw	1
 12046  0020EE  0100               	movlb	0	; () banked
 12047  0020F0  2793               	addwf	___ftadd@f1& (0+255),f,b
 12048  0020F2  0E00               	movlw	0
 12049  0020F4  0100               	movlb	0	; () banked
 12050  0020F6  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12051  0020F8  0E00               	movlw	0
 12052  0020FA  0100               	movlb	0	; () banked
 12053  0020FC  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12054  0020FE                     l809:
 12055                           
 12056                           ; BSR set to: 0
 12057  0020FE  0100               	movlb	0	; () banked
 12058  002100  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 12059  002102  D012               	goto	l4826
 12060                           
 12061                           ; BSR set to: 0
 12062  002104  0EFF               	movlw	255
 12063  002106  0100               	movlb	0	; () banked
 12064  002108  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12065  00210A  0EFF               	movlw	255
 12066  00210C  0100               	movlb	0	; () banked
 12067  00210E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12068  002110  0EFF               	movlw	255
 12069  002112  0100               	movlb	0	; () banked
 12070  002114  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12071  002116  0E01               	movlw	1
 12072  002118  0100               	movlb	0	; () banked
 12073  00211A  2796               	addwf	___ftadd@f2& (0+255),f,b
 12074  00211C  0E00               	movlw	0
 12075  00211E  0100               	movlb	0	; () banked
 12076  002120  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12077  002122  0E00               	movlw	0
 12078  002124  0100               	movlb	0	; () banked
 12079  002126  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12080  002128                     l4826:
 12081                           
 12082                           ; BSR set to: 0
 12083  002128  0E00               	movlw	0
 12084  00212A  0100               	movlb	0	; () banked
 12085  00212C  6F9C               	movwf	___ftadd@sign& (0+255),b
 12086                           
 12087                           ; BSR set to: 0
 12088  00212E  0100               	movlb	0	; () banked
 12089  002130  5193               	movf	___ftadd@f1& (0+255),w,b
 12090  002132  0100               	movlb	0	; () banked
 12091  002134  2796               	addwf	___ftadd@f2& (0+255),f,b
 12092  002136  0100               	movlb	0	; () banked
 12093  002138  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 12094  00213A  0100               	movlb	0	; () banked
 12095  00213C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12096  00213E  0100               	movlb	0	; () banked
 12097  002140  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 12098  002142  0100               	movlb	0	; () banked
 12099  002144  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12100                           
 12101                           ; BSR set to: 0
 12102  002146  0100               	movlb	0	; () banked
 12103  002148  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12104  00214A  D015               	goto	l4836
 12105                           
 12106                           ; BSR set to: 0
 12107  00214C  0EFF               	movlw	255
 12108  00214E  0100               	movlb	0	; () banked
 12109  002150  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12110  002152  0EFF               	movlw	255
 12111  002154  0100               	movlb	0	; () banked
 12112  002156  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12113  002158  0EFF               	movlw	255
 12114  00215A  0100               	movlb	0	; () banked
 12115  00215C  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12116  00215E  0E01               	movlw	1
 12117  002160  0100               	movlb	0	; () banked
 12118  002162  2796               	addwf	___ftadd@f2& (0+255),f,b
 12119  002164  0E00               	movlw	0
 12120  002166  0100               	movlb	0	; () banked
 12121  002168  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12122  00216A  0E00               	movlw	0
 12123  00216C  0100               	movlb	0	; () banked
 12124  00216E  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127  002170  0E01               	movlw	1
 12128  002172  0100               	movlb	0	; () banked
 12129  002174  6F9C               	movwf	___ftadd@sign& (0+255),b
 12130  002176                     l4836:
 12131                           
 12132                           ; BSR set to: 0
 12133  002176  C096  F071         	movff	___ftadd@f2,___ftpack@arg
 12134  00217A  C097  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
 12135  00217E  C098  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
 12136  002182  C09E  F074         	movff	___ftadd@exp1,___ftpack@exp
 12137  002186  C09C  F075         	movff	___ftadd@sign,___ftpack@sign
 12138  00218A  EC44  F017         	call	___ftpack	;wreg free
 12139  00218E  C071  F093         	movff	?___ftpack,?___ftadd
 12140  002192  C072  F094         	movff	?___ftpack+1,?___ftadd+1
 12141  002196  C073  F095         	movff	?___ftpack+2,?___ftadd+2
 12142  00219A  0012               	return	
 12143  00219C                     __end_of___ftadd:
 12144                           	opt stack 0
 12145                           tblptru	equ	0xFF8
 12146                           tblptrh	equ	0xFF7
 12147                           tblptrl	equ	0xFF6
 12148                           tablat	equ	0xFF5
 12149                           prodh	equ	0xFF4
 12150                           prodl	equ	0xFF3
 12151                           indf0	equ	0xFEF
 12152                           postinc0	equ	0xFEE
 12153                           fsr0h	equ	0xFEA
 12154                           fsr0l	equ	0xFE9
 12155                           wreg	equ	0xFE8
 12156                           indf1	equ	0xFE7
 12157                           postdec1	equ	0xFE5
 12158                           fsr1h	equ	0xFE2
 12159                           fsr1l	equ	0xFE1
 12160                           indf2	equ	0xFDF
 12161                           postinc2	equ	0xFDE
 12162                           postdec2	equ	0xFDD
 12163                           fsr2h	equ	0xFDA
 12164                           fsr2l	equ	0xFD9
 12165                           status	equ	0xFD8
 12166                           
 12167 ;; *************** function ___ftpack *****************
 12168 ;; Defined at:
 12169 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;  arg             3   17[BANK0 ] unsigned um
 12172 ;;  exp             1   20[BANK0 ] unsigned char 
 12173 ;;  sign            1   21[BANK0 ] unsigned char 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  3   17[BANK0 ] float 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12185 ;;      Params:         0       5       0       0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0
 12187 ;;      Temps:          3       0       0       0       0       0       0
 12188 ;;      Totals:         3       5       0       0       0       0       0
 12189 ;;Total ram usage:        8 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    3
 12192 ;; This function calls:
 12193 ;;		Nothing
 12194 ;; This function is called by:
 12195 ;;		___awtoft
 12196 ;;		___ftadd
 12197 ;;		___ftdiv
 12198 ;;		___ftmul
 12199 ;;		___lltoft
 12200 ;;		___lwtoft
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text47
 12205  002E88                     __ptext47:
 12206                           	opt stack 0
 12207  002E88                     ___ftpack:
 12208                           	opt stack 24
 12209                           
 12210                           ;incstack = 0
 12211  002E88  0100               	movlb	0	; () banked
 12212  002E8A  5174               	movf	___ftpack@exp& (0+255),w,b
 12213  002E8C  0100               	movlb	0	; () banked
 12214  002E8E  B4D8               	btfsc	status,2,c
 12215  002E90  D008               	goto	l4688
 12216                           
 12217                           ; BSR set to: 0
 12218  002E92  0100               	movlb	0	; () banked
 12219  002E94  5171               	movf	___ftpack@arg& (0+255),w,b
 12220  002E96  0100               	movlb	0	; () banked
 12221  002E98  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12222  002E9A  0100               	movlb	0	; () banked
 12223  002E9C  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12224  002E9E  A4D8               	btfss	status,2,c
 12225  002EA0  D011               	goto	l4694
 12226  002EA2                     l4688:
 12227                           
 12228                           ; BSR set to: 0
 12229  002EA2  0E00               	movlw	0
 12230  002EA4  0100               	movlb	0	; () banked
 12231  002EA6  6F71               	movwf	?___ftpack& (0+255),b
 12232  002EA8  0E00               	movlw	0
 12233  002EAA  0100               	movlb	0	; () banked
 12234  002EAC  6F72               	movwf	(?___ftpack+1)& (0+255),b
 12235  002EAE  0E00               	movlw	0
 12236  002EB0  0100               	movlb	0	; () banked
 12237  002EB2  6F73               	movwf	(?___ftpack+2)& (0+255),b
 12238                           
 12239                           ; BSR set to: 0
 12240  002EB4  0012               	return	
 12241  002EB6                     l4692:
 12242                           
 12243                           ; BSR set to: 0
 12244  002EB6  0100               	movlb	0	; () banked
 12245  002EB8  2B74               	incf	___ftpack@exp& (0+255),f,b
 12246  002EBA  0100               	movlb	0	; () banked
 12247  002EBC  90D8               	bcf	status,0,c
 12248  002EBE  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12249  002EC0  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12250  002EC2  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12251  002EC4                     l4694:
 12252                           
 12253                           ; BSR set to: 0
 12254  002EC4  0E00               	movlw	0
 12255  002EC6  0100               	movlb	0	; () banked
 12256  002EC8  1571               	andwf	___ftpack@arg& (0+255),w,b
 12257  002ECA  6E22               	movwf	??___ftpack& (0+255),c
 12258  002ECC  0E00               	movlw	0
 12259  002ECE  0100               	movlb	0	; () banked
 12260  002ED0  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12261  002ED2  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12262  002ED4  0EFE               	movlw	254
 12263  002ED6  0100               	movlb	0	; () banked
 12264  002ED8  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12265  002EDA  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12266  002EDC  5022               	movf	??___ftpack,w,c
 12267  002EDE  1023               	iorwf	??___ftpack+1,w,c
 12268  002EE0  1024               	iorwf	??___ftpack+2,w,c
 12269  002EE2  B4D8               	btfsc	status,2,c
 12270  002EE4  D011               	goto	l4700
 12271  002EE6  D7E7               	goto	l4692
 12272  002EE8                     l4696:
 12273                           
 12274                           ; BSR set to: 0
 12275  002EE8  0100               	movlb	0	; () banked
 12276  002EEA  2B74               	incf	___ftpack@exp& (0+255),f,b
 12277                           
 12278                           ; BSR set to: 0
 12279  002EEC  0E01               	movlw	1
 12280  002EEE  0100               	movlb	0	; () banked
 12281  002EF0  2771               	addwf	___ftpack@arg& (0+255),f,b
 12282  002EF2  0E00               	movlw	0
 12283  002EF4  0100               	movlb	0	; () banked
 12284  002EF6  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12285  002EF8  0E00               	movlw	0
 12286  002EFA  0100               	movlb	0	; () banked
 12287  002EFC  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12288  002EFE  0100               	movlb	0	; () banked
 12289  002F00  90D8               	bcf	status,0,c
 12290  002F02  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12291  002F04  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12292  002F06  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12293  002F08                     l4700:
 12294                           
 12295                           ; BSR set to: 0
 12296  002F08  0E00               	movlw	0
 12297  002F0A  0100               	movlb	0	; () banked
 12298  002F0C  1571               	andwf	___ftpack@arg& (0+255),w,b
 12299  002F0E  6E22               	movwf	??___ftpack& (0+255),c
 12300  002F10  0E00               	movlw	0
 12301  002F12  0100               	movlb	0	; () banked
 12302  002F14  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12303  002F16  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12304  002F18  0EFF               	movlw	255
 12305  002F1A  0100               	movlb	0	; () banked
 12306  002F1C  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12307  002F1E  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12308  002F20  5022               	movf	??___ftpack,w,c
 12309  002F22  1023               	iorwf	??___ftpack+1,w,c
 12310  002F24  1024               	iorwf	??___ftpack+2,w,c
 12311  002F26  B4D8               	btfsc	status,2,c
 12312  002F28  D008               	goto	l4704
 12313  002F2A  D7DE               	goto	l4696
 12314  002F2C                     l4702:
 12315                           
 12316                           ; BSR set to: 0
 12317  002F2C  0100               	movlb	0	; () banked
 12318  002F2E  0774               	decf	___ftpack@exp& (0+255),f,b
 12319  002F30  0100               	movlb	0	; () banked
 12320  002F32  90D8               	bcf	status,0,c
 12321  002F34  3771               	rlcf	___ftpack@arg& (0+255),f,b
 12322  002F36  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12323  002F38  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12324  002F3A                     l4704:
 12325                           
 12326                           ; BSR set to: 0
 12327  002F3A  0100               	movlb	0	; () banked
 12328  002F3C  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12329  002F3E  D004               	goto	l762
 12330                           
 12331                           ; BSR set to: 0
 12332  002F40  0E02               	movlw	2
 12333  002F42  0100               	movlb	0	; () banked
 12334  002F44  6174               	cpfslt	___ftpack@exp& (0+255),b
 12335  002F46  D7F2               	goto	l4702
 12336  002F48                     l762:
 12337                           
 12338                           ; BSR set to: 0
 12339  002F48  0100               	movlb	0	; () banked
 12340  002F4A  B174               	btfsc	___ftpack@exp& (0+255),0,b
 12341  002F4C  D002               	goto	l4710
 12342                           
 12343                           ; BSR set to: 0
 12344  002F4E  0100               	movlb	0	; () banked
 12345  002F50  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12346  002F52                     l4710:
 12347                           
 12348                           ; BSR set to: 0
 12349  002F52  0100               	movlb	0	; () banked
 12350  002F54  90D8               	bcf	status,0,c
 12351  002F56  3374               	rrcf	___ftpack@exp& (0+255),f,b
 12352  002F58  0100               	movlb	0	; () banked
 12353  002F5A  5174               	movf	___ftpack@exp& (0+255),w,b
 12354  002F5C  0100               	movlb	0	; () banked
 12355  002F5E  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12356                           
 12357                           ; BSR set to: 0
 12358  002F60  0100               	movlb	0	; () banked
 12359  002F62  5175               	movf	___ftpack@sign& (0+255),w,b
 12360  002F64  0100               	movlb	0	; () banked
 12361  002F66  B4D8               	btfsc	status,2,c
 12362  002F68  D002               	goto	l4716
 12363                           
 12364                           ; BSR set to: 0
 12365  002F6A  0100               	movlb	0	; () banked
 12366  002F6C  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12367  002F6E                     l4716:
 12368                           
 12369                           ; BSR set to: 0
 12370  002F6E  C071  F071         	movff	___ftpack@arg,?___ftpack
 12371  002F72  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
 12372  002F76  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
 12373  002F7A  0012               	return	
 12374  002F7C                     __end_of___ftpack:
 12375                           	opt stack 0
 12376                           tblptru	equ	0xFF8
 12377                           tblptrh	equ	0xFF7
 12378                           tblptrl	equ	0xFF6
 12379                           tablat	equ	0xFF5
 12380                           prodh	equ	0xFF4
 12381                           prodl	equ	0xFF3
 12382                           indf0	equ	0xFEF
 12383                           postinc0	equ	0xFEE
 12384                           fsr0h	equ	0xFEA
 12385                           fsr0l	equ	0xFE9
 12386                           wreg	equ	0xFE8
 12387                           indf1	equ	0xFE7
 12388                           postdec1	equ	0xFE5
 12389                           fsr1h	equ	0xFE2
 12390                           fsr1l	equ	0xFE1
 12391                           indf2	equ	0xFDF
 12392                           postinc2	equ	0xFDE
 12393                           postdec2	equ	0xFDD
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function ___ftneg *****************
 12399 ;; Defined at:
 12400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  f1              3   17[BANK0 ] float 
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;		None
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  3   17[BANK0 ] float 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12414 ;;      Params:         0       3       0       0       0       0       0
 12415 ;;      Locals:         0       0       0       0       0       0       0
 12416 ;;      Temps:          0       0       0       0       0       0       0
 12417 ;;      Totals:         0       3       0       0       0       0       0
 12418 ;;Total ram usage:        3 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    3
 12421 ;; This function calls:
 12422 ;;		Nothing
 12423 ;; This function is called by:
 12424 ;;		_sprintf
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text48
 12429  003BBA                     __ptext48:
 12430                           	opt stack 0
 12431  003BBA                     ___ftneg:
 12432                           	opt stack 24
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;incstack = 0
 12436  003BBA  0100               	movlb	0	; () banked
 12437  003BBC  5171               	movf	___ftneg@f1& (0+255),w,b
 12438  003BBE  0100               	movlb	0	; () banked
 12439  003BC0  1172               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12440  003BC2  0100               	movlb	0	; () banked
 12441  003BC4  1173               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12442  003BC6  B4D8               	btfsc	status,2,c
 12443  003BC8  D009               	goto	l859
 12444                           
 12445                           ; BSR set to: 0
 12446  003BCA  0E00               	movlw	0
 12447  003BCC  0100               	movlb	0	; () banked
 12448  003BCE  1B71               	xorwf	___ftneg@f1& (0+255),f,b
 12449  003BD0  0E00               	movlw	0
 12450  003BD2  0100               	movlb	0	; () banked
 12451  003BD4  1B72               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12452  003BD6  0E80               	movlw	128
 12453  003BD8  0100               	movlb	0	; () banked
 12454  003BDA  1B73               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12455  003BDC                     l859:
 12456                           
 12457                           ; BSR set to: 0
 12458  003BDC  C071  F071         	movff	___ftneg@f1,?___ftneg
 12459  003BE0  C072  F072         	movff	___ftneg@f1+1,?___ftneg+1
 12460  003BE4  C073  F073         	movff	___ftneg@f1+2,?___ftneg+2
 12461                           
 12462                           ; BSR set to: 0
 12463  003BE8  0012               	return		;funcret
 12464  003BEA                     __end_of___ftneg:
 12465                           	opt stack 0
 12466                           tblptru	equ	0xFF8
 12467                           tblptrh	equ	0xFF7
 12468                           tblptrl	equ	0xFF6
 12469                           tablat	equ	0xFF5
 12470                           prodh	equ	0xFF4
 12471                           prodl	equ	0xFF3
 12472                           indf0	equ	0xFEF
 12473                           postinc0	equ	0xFEE
 12474                           fsr0h	equ	0xFEA
 12475                           fsr0l	equ	0xFE9
 12476                           wreg	equ	0xFE8
 12477                           indf1	equ	0xFE7
 12478                           postdec1	equ	0xFE5
 12479                           fsr1h	equ	0xFE2
 12480                           fsr1l	equ	0xFE1
 12481                           indf2	equ	0xFDF
 12482                           postinc2	equ	0xFDE
 12483                           postdec2	equ	0xFDD
 12484                           fsr2h	equ	0xFDA
 12485                           fsr2l	equ	0xFD9
 12486                           status	equ	0xFD8
 12487                           
 12488 ;; *************** function ___ftge *****************
 12489 ;; Defined at:
 12490 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 12491 ;; Parameters:    Size  Location     Type
 12492 ;;  ff1             3   17[BANK0 ] float 
 12493 ;;  ff2             3   20[BANK0 ] float 
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;		None               void
 12498 ;; Registers used:
 12499 ;;		wreg, status,2, status,0
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12505 ;;      Params:         0       6       0       0       0       0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0
 12507 ;;      Temps:          3       0       0       0       0       0       0
 12508 ;;      Totals:         3       6       0       0       0       0       0
 12509 ;;Total ram usage:        9 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:    3
 12512 ;; This function calls:
 12513 ;;		Nothing
 12514 ;; This function is called by:
 12515 ;;		_sprintf
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text49
 12520  0031CE                     __ptext49:
 12521                           	opt stack 0
 12522  0031CE                     ___ftge:
 12523                           	opt stack 24
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;incstack = 0
 12527  0031CE  0100               	movlb	0	; () banked
 12528  0031D0  AF73               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12529  0031D2  D019               	goto	l5238
 12530                           
 12531                           ; BSR set to: 0
 12532  0031D4  C071  F022         	movff	___ftge@ff1,??___ftge
 12533  0031D8  C072  F023         	movff	___ftge@ff1+1,??___ftge+1
 12534  0031DC  C073  F024         	movff	___ftge@ff1+2,??___ftge+2
 12535  0031E0  1E22               	comf	??___ftge,f,c
 12536  0031E2  1E23               	comf	??___ftge+1,f,c
 12537  0031E4  1E24               	comf	??___ftge+2,f,c
 12538  0031E6  2A22               	incf	??___ftge,f,c
 12539  0031E8  0E00               	movlw	0
 12540  0031EA  2223               	addwfc	??___ftge+1,f,c
 12541  0031EC  2224               	addwfc	??___ftge+2,f,c
 12542  0031EE  0E00               	movlw	0
 12543  0031F0  2422               	addwf	??___ftge,w,c
 12544  0031F2  0100               	movlb	0	; () banked
 12545  0031F4  6F71               	movwf	___ftge@ff1& (0+255),b
 12546  0031F6  0E00               	movlw	0
 12547  0031F8  2023               	addwfc	??___ftge+1,w,c
 12548  0031FA  0100               	movlb	0	; () banked
 12549  0031FC  6F72               	movwf	(___ftge@ff1+1)& (0+255),b
 12550  0031FE  0E80               	movlw	128
 12551  003200  2024               	addwfc	??___ftge+2,w,c
 12552  003202  0100               	movlb	0	; () banked
 12553  003204  6F73               	movwf	(___ftge@ff1+2)& (0+255),b
 12554  003206                     l5238:
 12555                           
 12556                           ; BSR set to: 0
 12557  003206  0100               	movlb	0	; () banked
 12558  003208  AF76               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12559  00320A  D019               	goto	l5242
 12560                           
 12561                           ; BSR set to: 0
 12562  00320C  C074  F022         	movff	___ftge@ff2,??___ftge
 12563  003210  C075  F023         	movff	___ftge@ff2+1,??___ftge+1
 12564  003214  C076  F024         	movff	___ftge@ff2+2,??___ftge+2
 12565  003218  1E22               	comf	??___ftge,f,c
 12566  00321A  1E23               	comf	??___ftge+1,f,c
 12567  00321C  1E24               	comf	??___ftge+2,f,c
 12568  00321E  2A22               	incf	??___ftge,f,c
 12569  003220  0E00               	movlw	0
 12570  003222  2223               	addwfc	??___ftge+1,f,c
 12571  003224  2224               	addwfc	??___ftge+2,f,c
 12572  003226  0E00               	movlw	0
 12573  003228  2422               	addwf	??___ftge,w,c
 12574  00322A  0100               	movlb	0	; () banked
 12575  00322C  6F74               	movwf	___ftge@ff2& (0+255),b
 12576  00322E  0E00               	movlw	0
 12577  003230  2023               	addwfc	??___ftge+1,w,c
 12578  003232  0100               	movlb	0	; () banked
 12579  003234  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
 12580  003236  0E80               	movlw	128
 12581  003238  2024               	addwfc	??___ftge+2,w,c
 12582  00323A  0100               	movlb	0	; () banked
 12583  00323C  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
 12584  00323E                     l5242:
 12585                           
 12586                           ; BSR set to: 0
 12587  00323E  0E00               	movlw	0
 12588  003240  0100               	movlb	0	; () banked
 12589  003242  1B71               	xorwf	___ftge@ff1& (0+255),f,b
 12590  003244  0E00               	movlw	0
 12591  003246  0100               	movlb	0	; () banked
 12592  003248  1B72               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12593  00324A  0E80               	movlw	128
 12594  00324C  0100               	movlb	0	; () banked
 12595  00324E  1B73               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12596                           
 12597                           ; BSR set to: 0
 12598  003250  0E00               	movlw	0
 12599  003252  0100               	movlb	0	; () banked
 12600  003254  1B74               	xorwf	___ftge@ff2& (0+255),f,b
 12601  003256  0E00               	movlw	0
 12602  003258  0100               	movlb	0	; () banked
 12603  00325A  1B75               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12604  00325C  0E80               	movlw	128
 12605  00325E  0100               	movlb	0	; () banked
 12606  003260  1B76               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12607  003262  0100               	movlb	0	; () banked
 12608  003264  5174               	movf	___ftge@ff2& (0+255),w,b
 12609  003266  0100               	movlb	0	; () banked
 12610  003268  5D71               	subwf	___ftge@ff1& (0+255),w,b
 12611  00326A  0100               	movlb	0	; () banked
 12612  00326C  5175               	movf	(___ftge@ff2+1)& (0+255),w,b
 12613  00326E  0100               	movlb	0	; () banked
 12614  003270  5972               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12615  003272  0100               	movlb	0	; () banked
 12616  003274  5176               	movf	(___ftge@ff2+2)& (0+255),w,b
 12617  003276  0100               	movlb	0	; () banked
 12618  003278  5973               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12619  00327A  B0D8               	btfsc	status,0,c
 12620  00327C  D002               	goto	l5248
 12621                           
 12622                           ; BSR set to: 0
 12623  00327E  90D8               	bcf	status,0,c
 12624  003280  0012               	return	
 12625  003282                     l5248:
 12626                           
 12627                           ; BSR set to: 0
 12628  003282  80D8               	bsf	status,0,c
 12629                           
 12630                           ; BSR set to: 0
 12631  003284  0012               	return	
 12632  003286                     __end_of___ftge:
 12633                           	opt stack 0
 12634                           tblptru	equ	0xFF8
 12635                           tblptrh	equ	0xFF7
 12636                           tblptrl	equ	0xFF6
 12637                           tablat	equ	0xFF5
 12638                           prodh	equ	0xFF4
 12639                           prodl	equ	0xFF3
 12640                           indf0	equ	0xFEF
 12641                           postinc0	equ	0xFEE
 12642                           fsr0h	equ	0xFEA
 12643                           fsr0l	equ	0xFE9
 12644                           wreg	equ	0xFE8
 12645                           indf1	equ	0xFE7
 12646                           postdec1	equ	0xFE5
 12647                           fsr1h	equ	0xFE2
 12648                           fsr1l	equ	0xFE1
 12649                           indf2	equ	0xFDF
 12650                           postinc2	equ	0xFDE
 12651                           postdec2	equ	0xFDD
 12652                           fsr2h	equ	0xFDA
 12653                           fsr2l	equ	0xFD9
 12654                           status	equ	0xFD8
 12655                           
 12656 ;; *************** function _memset *****************
 12657 ;; Defined at:
 12658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  p1              2   17[BANK0 ] PTR void 
 12661 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12662 ;;  c               2   19[BANK0 ] int 
 12663 ;;  n               2   21[BANK0 ] unsigned int 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  p               2   33[COMRAM] PTR unsigned char 
 12666 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2   17[BANK0 ] PTR void 
 12669 ;; Registers used:
 12670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12676 ;;      Params:         0       6       0       0       0       0       0
 12677 ;;      Locals:         2       0       0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0
 12679 ;;      Totals:         2       6       0       0       0       0       0
 12680 ;;Total ram usage:        8 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    3
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_util_beacon_transmission
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text50
 12691  003B28                     __ptext50:
 12692                           	opt stack 0
 12693  003B28                     _memset:
 12694                           	opt stack 25
 12695                           
 12696                           ; BSR set to: 0
 12697                           ;incstack = 0
 12698  003B28  C071  F022         	movff	memset@p1,memset@p
 12699  003B2C  C072  F023         	movff	memset@p1+1,memset@p+1
 12700  003B30  D008               	goto	l5398
 12701  003B32                     l5394:
 12702  003B32  C022  FFD9         	movff	memset@p,fsr2l
 12703  003B36  C023  FFDA         	movff	memset@p+1,fsr2h
 12704  003B3A  C073  FFDF         	movff	memset@c,indf2
 12705  003B3E  4A22               	infsnz	memset@p,f,c
 12706  003B40  2A23               	incf	memset@p+1,f,c
 12707  003B42                     l5398:
 12708  003B42  0100               	movlb	0	; () banked
 12709  003B44  0775               	decf	memset@n& (0+255),f,b
 12710  003B46  A0D8               	btfss	status,0,c
 12711  003B48  0776               	decf	(memset@n+1)& (0+255),f,b
 12712  003B4A  0100               	movlb	0	; () banked
 12713  003B4C  2975               	incf	memset@n& (0+255),w,b
 12714  003B4E  E1F1               	bnz	l5394
 12715  003B50  0100               	movlb	0	; () banked
 12716  003B52  2976               	incf	(memset@n+1)& (0+255),w,b
 12717  003B54  B4D8               	btfsc	status,2,c
 12718  003B56  0012               	return	
 12719  003B58  D7EC               	goto	l5394
 12720  003B5A                     __end_of_memset:
 12721                           	opt stack 0
 12722                           tblptru	equ	0xFF8
 12723                           tblptrh	equ	0xFF7
 12724                           tblptrl	equ	0xFF6
 12725                           tablat	equ	0xFF5
 12726                           prodh	equ	0xFF4
 12727                           prodl	equ	0xFF3
 12728                           indf0	equ	0xFEF
 12729                           postinc0	equ	0xFEE
 12730                           fsr0h	equ	0xFEA
 12731                           fsr0l	equ	0xFE9
 12732                           wreg	equ	0xFE8
 12733                           indf1	equ	0xFE7
 12734                           postdec1	equ	0xFE5
 12735                           fsr1h	equ	0xFE2
 12736                           fsr1l	equ	0xFE1
 12737                           indf2	equ	0xFDF
 12738                           postinc2	equ	0xFDE
 12739                           postdec2	equ	0xFDD
 12740                           fsr2h	equ	0xFDA
 12741                           fsr2l	equ	0xFD9
 12742                           status	equ	0xFD8
 12743                           
 12744 ;; *************** function _initialize *****************
 12745 ;; Defined at:
 12746 ;;		line 17 in file "easat2_util_initialize.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;		None
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;		None
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  1    wreg      void 
 12753 ;; Registers used:
 12754 ;;		wreg, status,2, cstack
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12760 ;;      Params:         0       0       0       0       0       0       0
 12761 ;;      Locals:         0       0       0       0       0       0       0
 12762 ;;      Temps:          0       0       0       0       0       0       0
 12763 ;;      Totals:         0       0       0       0       0       0       0
 12764 ;;Total ram usage:        0 bytes
 12765 ;; Hardware stack levels used:    1
 12766 ;; Hardware stack levels required when called:    4
 12767 ;; This function calls:
 12768 ;;		_io_initialize
 12769 ;;		_util_timer1_initialize
 12770 ;; This function is called by:
 12771 ;;		_main
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text51
 12776  003CB6                     __ptext51:
 12777                           	opt stack 0
 12778  003CB6                     _initialize:
 12779                           	opt stack 26
 12780                           
 12781                           ;easat2_util_initialize.c: 19: io_initialize();
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;incstack = 0
 12785  003CB6  EC43  F019         	call	_io_initialize	;wreg free
 12786                           
 12787                           ;easat2_util_initialize.c: 20: util_timer1_initialize();
 12788  003CBA  EC0A  F01E         	call	_util_timer1_initialize	;wreg free
 12789  003CBE  0012               	return		;funcret
 12790  003CC0                     __end_of_initialize:
 12791                           	opt stack 0
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           indf0	equ	0xFEF
 12799                           postinc0	equ	0xFEE
 12800                           fsr0h	equ	0xFEA
 12801                           fsr0l	equ	0xFE9
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postdec1	equ	0xFE5
 12805                           fsr1h	equ	0xFE2
 12806                           fsr1l	equ	0xFE1
 12807                           indf2	equ	0xFDF
 12808                           postinc2	equ	0xFDE
 12809                           postdec2	equ	0xFDD
 12810                           fsr2h	equ	0xFDA
 12811                           fsr2l	equ	0xFD9
 12812                           status	equ	0xFD8
 12813                           
 12814 ;; *************** function _util_timer1_initialize *****************
 12815 ;; Defined at:
 12816 ;;		line 19 in file "easat2_util_timer.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;		None
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;		None
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  1    wreg      void 
 12823 ;; Registers used:
 12824 ;;		wreg, status,2
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12830 ;;      Params:         0       0       0       0       0       0       0
 12831 ;;      Locals:         0       0       0       0       0       0       0
 12832 ;;      Temps:          0       0       0       0       0       0       0
 12833 ;;      Totals:         0       0       0       0       0       0       0
 12834 ;;Total ram usage:        0 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:    3
 12837 ;; This function calls:
 12838 ;;		Nothing
 12839 ;; This function is called by:
 12840 ;;		_initialize
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           	psect	text52
 12845  003C14                     __ptext52:
 12846                           	opt stack 0
 12847  003C14                     _util_timer1_initialize:
 12848                           	opt stack 26
 12849                           
 12850                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 12851                           
 12852                           ;incstack = 0
 12853  003C14  8ED0               	bsf	4048,7,c	;volatile
 12854                           
 12855                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 12856  003C16  90CD               	bcf	4045,0,c	;volatile
 12857                           
 12858                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 12859  003C18  9CCD               	bcf	4045,6,c	;volatile
 12860                           
 12861                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 12862  003C1A  9ECD               	bcf	4045,7,c	;volatile
 12863                           
 12864                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 12865  003C1C  9ACD               	bcf	4045,5,c	;volatile
 12866                           
 12867                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 12868  003C1E  98CD               	bcf	4045,4,c	;volatile
 12869                           
 12870                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 12871  003C20  96CD               	bcf	4045,3,c	;volatile
 12872                           
 12873                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 12874  003C22  82CD               	bsf	4045,1,c	;volatile
 12875                           
 12876                           ;easat2_util_timer.c: 53: TMR1H = 0xEC;
 12877  003C24  0EEC               	movlw	236
 12878  003C26  6ECF               	movwf	4047,c	;volatile
 12879                           
 12880                           ;easat2_util_timer.c: 54: TMR1L = 0x77 ; 60535;
 12881  003C28  0E77               	movlw	119
 12882  003C2A  6ECE               	movwf	4046,c	;volatile
 12883                           
 12884                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 12885  003C2C  809D               	bsf	3997,0,c	;volatile
 12886                           
 12887                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 12888  003C2E  809F               	bsf	3999,0,c	;volatile
 12889                           
 12890                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 12891  003C30  909E               	bcf	3998,0,c	;volatile
 12892                           
 12893                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 12894  003C32  80CD               	bsf	4045,0,c	;volatile
 12895                           
 12896                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 12897  003C34  9CF2               	bcf	intcon,6,c	;volatile
 12898                           
 12899                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 12900  003C36  8EF2               	bsf	intcon,7,c	;volatile
 12901  003C38  0012               	return		;funcret
 12902  003C3A                     __end_of_util_timer1_initialize:
 12903                           	opt stack 0
 12904                           tblptru	equ	0xFF8
 12905                           tblptrh	equ	0xFF7
 12906                           tblptrl	equ	0xFF6
 12907                           tablat	equ	0xFF5
 12908                           prodh	equ	0xFF4
 12909                           prodl	equ	0xFF3
 12910                           intcon	equ	0xFF2
 12911                           indf0	equ	0xFEF
 12912                           postinc0	equ	0xFEE
 12913                           fsr0h	equ	0xFEA
 12914                           fsr0l	equ	0xFE9
 12915                           wreg	equ	0xFE8
 12916                           indf1	equ	0xFE7
 12917                           postdec1	equ	0xFE5
 12918                           fsr1h	equ	0xFE2
 12919                           fsr1l	equ	0xFE1
 12920                           indf2	equ	0xFDF
 12921                           postinc2	equ	0xFDE
 12922                           postdec2	equ	0xFDD
 12923                           fsr2h	equ	0xFDA
 12924                           fsr2l	equ	0xFD9
 12925                           status	equ	0xFD8
 12926                           
 12927 ;; *************** function _io_initialize *****************
 12928 ;; Defined at:
 12929 ;;		line 27 in file "easat2_util_initialize.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;		None
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;		None
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1    wreg      void 
 12936 ;; Registers used:
 12937 ;;		wreg, status,2
 12938 ;; Tracked objects:
 12939 ;;		On entry : 0/0
 12940 ;;		On exit  : 0/0
 12941 ;;		Unchanged: 0/0
 12942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12943 ;;      Params:         0       0       0       0       0       0       0
 12944 ;;      Locals:         0       0       0       0       0       0       0
 12945 ;;      Temps:          0       0       0       0       0       0       0
 12946 ;;      Totals:         0       0       0       0       0       0       0
 12947 ;;Total ram usage:        0 bytes
 12948 ;; Hardware stack levels used:    1
 12949 ;; Hardware stack levels required when called:    3
 12950 ;; This function calls:
 12951 ;;		Nothing
 12952 ;; This function is called by:
 12953 ;;		_initialize
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           	psect	text53
 12958  003286                     __ptext53:
 12959                           	opt stack 0
 12960  003286                     _io_initialize:
 12961                           	opt stack 26
 12962                           
 12963                           ;easat2_util_initialize.c: 36: VREFCON0bits.FVREN = 1;
 12964                           
 12965                           ;incstack = 0
 12966  003286  010F               	movlb	15	; () banked
 12967  003288  8F42               	bsf	66,7,b	;volatile
 12968                           
 12969                           ;easat2_util_initialize.c: 37: VREFCON0bits.FVRS0 = 0;
 12970  00328A  010F               	movlb	15	; () banked
 12971  00328C  9942               	bcf	66,4,b	;volatile
 12972                           
 12973                           ;easat2_util_initialize.c: 38: VREFCON0bits.FVRS1 = 1;
 12974  00328E  010F               	movlb	15	; () banked
 12975  003290  8B42               	bsf	66,5,b	;volatile
 12976                           
 12977                           ;easat2_util_initialize.c: 40: VREFCON0bits.FVRST = 1;
 12978  003292  010F               	movlb	15	; () banked
 12979  003294  8D42               	bsf	66,6,b	;volatile
 12980                           
 12981                           ; BSR set to: 15
 12982                           ;easat2_util_initialize.c: 45: ADCON1 = 0x08;
 12983  003296  0E08               	movlw	8
 12984  003298  6EC1               	movwf	4033,c	;volatile
 12985                           
 12986                           ;easat2_util_initialize.c: 46: ADCON2 = 0xAF;
 12987  00329A  0EAF               	movlw	175
 12988  00329C  6EC0               	movwf	4032,c	;volatile
 12989                           
 12990                           ; BSR set to: 15
 12991                           ;easat2_util_initialize.c: 50: TRISAbits.TRISA0 = 1;
 12992  00329E  8092               	bsf	3986,0,c	;volatile
 12993                           
 12994                           ; BSR set to: 15
 12995                           ;easat2_util_initialize.c: 51: TRISAbits.TRISA1 = 1;
 12996  0032A0  8292               	bsf	3986,1,c	;volatile
 12997                           
 12998                           ; BSR set to: 15
 12999                           ;easat2_util_initialize.c: 52: TRISAbits.TRISA2 = 0;
 13000  0032A2  9492               	bcf	3986,2,c	;volatile
 13001                           
 13002                           ; BSR set to: 15
 13003                           ;easat2_util_initialize.c: 53: TRISAbits.TRISA3 = 1;
 13004  0032A4  8692               	bsf	3986,3,c	;volatile
 13005                           
 13006                           ; BSR set to: 15
 13007                           ;easat2_util_initialize.c: 54: TRISAbits.TRISA4 = 1;
 13008  0032A6  8892               	bsf	3986,4,c	;volatile
 13009                           
 13010                           ; BSR set to: 15
 13011                           ;easat2_util_initialize.c: 55: TRISAbits.TRISA5 = 1;
 13012  0032A8  8A92               	bsf	3986,5,c	;volatile
 13013                           
 13014                           ; BSR set to: 15
 13015                           ;easat2_util_initialize.c: 62: ANSELAbits.ANSA0 = 1;
 13016  0032AA  010F               	movlb	15	; () banked
 13017  0032AC  8138               	bsf	56,0,b	;volatile
 13018                           
 13019                           ; BSR set to: 15
 13020                           ;easat2_util_initialize.c: 63: ANSELAbits.ANSA1 = 1;
 13021  0032AE  010F               	movlb	15	; () banked
 13022  0032B0  8338               	bsf	56,1,b	;volatile
 13023                           
 13024                           ; BSR set to: 15
 13025                           ;easat2_util_initialize.c: 64: ANSELAbits.ANSA2 = 1;
 13026  0032B2  010F               	movlb	15	; () banked
 13027  0032B4  8538               	bsf	56,2,b	;volatile
 13028                           
 13029                           ; BSR set to: 15
 13030                           ;easat2_util_initialize.c: 65: ANSELAbits.ANSA3 = 0;
 13031  0032B6  010F               	movlb	15	; () banked
 13032  0032B8  9738               	bcf	56,3,b	;volatile
 13033                           
 13034                           ; BSR set to: 15
 13035                           ;easat2_util_initialize.c: 67: ANSELAbits.ANSA5 = 1;
 13036  0032BA  010F               	movlb	15	; () banked
 13037  0032BC  8B38               	bsf	56,5,b	;volatile
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;easat2_util_initialize.c: 71: LATAbits.LATA0 = 0;
 13041  0032BE  9089               	bcf	3977,0,c	;volatile
 13042                           
 13043                           ; BSR set to: 15
 13044                           ;easat2_util_initialize.c: 72: LATAbits.LATA1 = 0;
 13045  0032C0  9289               	bcf	3977,1,c	;volatile
 13046                           
 13047                           ; BSR set to: 15
 13048                           ;easat2_util_initialize.c: 73: LATAbits.LATA2 = 0;
 13049  0032C2  9489               	bcf	3977,2,c	;volatile
 13050                           
 13051                           ; BSR set to: 15
 13052                           ;easat2_util_initialize.c: 74: LATAbits.LATA3 = 0;
 13053  0032C4  9689               	bcf	3977,3,c	;volatile
 13054                           
 13055                           ; BSR set to: 15
 13056                           ;easat2_util_initialize.c: 75: LATAbits.LATA4 = 0;
 13057  0032C6  9889               	bcf	3977,4,c	;volatile
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;easat2_util_initialize.c: 76: LATAbits.LATA5 = 0;
 13061  0032C8  9A89               	bcf	3977,5,c	;volatile
 13062                           
 13063                           ; BSR set to: 15
 13064                           ;easat2_util_initialize.c: 83: TRISBbits.TRISB0 = 1;
 13065  0032CA  8093               	bsf	3987,0,c	;volatile
 13066                           
 13067                           ; BSR set to: 15
 13068                           ;easat2_util_initialize.c: 84: TRISBbits.TRISB1 = 0;
 13069  0032CC  9293               	bcf	3987,1,c	;volatile
 13070                           
 13071                           ; BSR set to: 15
 13072                           ;easat2_util_initialize.c: 85: TRISBbits.TRISB2 = 0;
 13073  0032CE  9493               	bcf	3987,2,c	;volatile
 13074                           
 13075                           ; BSR set to: 15
 13076                           ;easat2_util_initialize.c: 86: TRISBbits.TRISB3 = 0;
 13077  0032D0  9693               	bcf	3987,3,c	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;easat2_util_initialize.c: 87: TRISBbits.TRISB4 = 0;
 13081  0032D2  9893               	bcf	3987,4,c	;volatile
 13082                           
 13083                           ; BSR set to: 15
 13084                           ;easat2_util_initialize.c: 88: TRISBbits.TRISB5 = 0;
 13085  0032D4  9A93               	bcf	3987,5,c	;volatile
 13086                           
 13087                           ; BSR set to: 15
 13088                           ;easat2_util_initialize.c: 89: TRISBbits.TRISB6 = 0;
 13089  0032D6  9C93               	bcf	3987,6,c	;volatile
 13090                           
 13091                           ; BSR set to: 15
 13092                           ;easat2_util_initialize.c: 90: TRISBbits.TRISB7 = 0;
 13093  0032D8  9E93               	bcf	3987,7,c	;volatile
 13094                           
 13095                           ; BSR set to: 15
 13096                           ;easat2_util_initialize.c: 94: ANSELBbits.ANSB0 = 1;
 13097  0032DA  010F               	movlb	15	; () banked
 13098  0032DC  8139               	bsf	57,0,b	;volatile
 13099                           
 13100                           ; BSR set to: 15
 13101                           ;easat2_util_initialize.c: 95: ANSELBbits.ANSB1 = 0;
 13102  0032DE  010F               	movlb	15	; () banked
 13103  0032E0  9339               	bcf	57,1,b	;volatile
 13104                           
 13105                           ; BSR set to: 15
 13106                           ;easat2_util_initialize.c: 96: ANSELBbits.ANSB2 = 0;
 13107  0032E2  010F               	movlb	15	; () banked
 13108  0032E4  9539               	bcf	57,2,b	;volatile
 13109                           
 13110                           ; BSR set to: 15
 13111                           ;easat2_util_initialize.c: 97: ANSELBbits.ANSB3 = 0;
 13112  0032E6  010F               	movlb	15	; () banked
 13113  0032E8  9739               	bcf	57,3,b	;volatile
 13114                           
 13115                           ; BSR set to: 15
 13116                           ;easat2_util_initialize.c: 99: ANSELBbits.ANSB5 = 0;
 13117  0032EA  010F               	movlb	15	; () banked
 13118  0032EC  9B39               	bcf	57,5,b	;volatile
 13119                           
 13120                           ; BSR set to: 15
 13121                           ;easat2_util_initialize.c: 103: LATBbits.LATB0 = 0;
 13122  0032EE  908A               	bcf	3978,0,c	;volatile
 13123                           
 13124                           ; BSR set to: 15
 13125                           ;easat2_util_initialize.c: 104: LATBbits.LATB1 = 0;
 13126  0032F0  928A               	bcf	3978,1,c	;volatile
 13127                           
 13128                           ; BSR set to: 15
 13129                           ;easat2_util_initialize.c: 105: LATBbits.LATB2 = 0;
 13130  0032F2  948A               	bcf	3978,2,c	;volatile
 13131                           
 13132                           ; BSR set to: 15
 13133                           ;easat2_util_initialize.c: 106: LATBbits.LATB3 = 0;
 13134  0032F4  968A               	bcf	3978,3,c	;volatile
 13135                           
 13136                           ; BSR set to: 15
 13137                           ;easat2_util_initialize.c: 107: LATBbits.LATB4 = 0;
 13138  0032F6  988A               	bcf	3978,4,c	;volatile
 13139                           
 13140                           ; BSR set to: 15
 13141                           ;easat2_util_initialize.c: 108: LATBbits.LATB5 = 0;
 13142  0032F8  9A8A               	bcf	3978,5,c	;volatile
 13143                           
 13144                           ; BSR set to: 15
 13145                           ;easat2_util_initialize.c: 112: TRISDbits.TRISD0 = 0;
 13146  0032FA  9095               	bcf	3989,0,c	;volatile
 13147                           
 13148                           ; BSR set to: 15
 13149                           ;easat2_util_initialize.c: 113: TRISDbits.TRISD1 = 0;
 13150  0032FC  9295               	bcf	3989,1,c	;volatile
 13151                           
 13152                           ; BSR set to: 15
 13153                           ;easat2_util_initialize.c: 114: TRISDbits.TRISD2 = 0;
 13154  0032FE  9495               	bcf	3989,2,c	;volatile
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;easat2_util_initialize.c: 115: TRISDbits.TRISD3 = 0;
 13158  003300  9695               	bcf	3989,3,c	;volatile
 13159                           
 13160                           ; BSR set to: 15
 13161                           ;easat2_util_initialize.c: 116: TRISDbits.TRISD4 = 0;
 13162  003302  9895               	bcf	3989,4,c	;volatile
 13163                           
 13164                           ; BSR set to: 15
 13165                           ;easat2_util_initialize.c: 117: TRISDbits.TRISD5 = 0;
 13166  003304  9A95               	bcf	3989,5,c	;volatile
 13167                           
 13168                           ; BSR set to: 15
 13169                           ;easat2_util_initialize.c: 118: TRISDbits.TRISD6 = 0;
 13170  003306  9C95               	bcf	3989,6,c	;volatile
 13171                           
 13172                           ; BSR set to: 15
 13173                           ;easat2_util_initialize.c: 119: TRISDbits.TRISD7 = 0;
 13174  003308  9E95               	bcf	3989,7,c	;volatile
 13175                           
 13176                           ; BSR set to: 15
 13177                           ;easat2_util_initialize.c: 123: ANSELDbits.ANSD0 = 0;
 13178  00330A  010F               	movlb	15	; () banked
 13179  00330C  913B               	bcf	59,0,b	;volatile
 13180                           
 13181                           ; BSR set to: 15
 13182                           ;easat2_util_initialize.c: 124: ANSELDbits.ANSD1 = 0;
 13183  00330E  010F               	movlb	15	; () banked
 13184  003310  933B               	bcf	59,1,b	;volatile
 13185                           
 13186                           ; BSR set to: 15
 13187                           ;easat2_util_initialize.c: 125: ANSELDbits.ANSD2 = 0;
 13188  003312  010F               	movlb	15	; () banked
 13189  003314  953B               	bcf	59,2,b	;volatile
 13190                           
 13191                           ; BSR set to: 15
 13192                           ;easat2_util_initialize.c: 126: ANSELDbits.ANSD3 = 0;
 13193  003316  010F               	movlb	15	; () banked
 13194  003318  973B               	bcf	59,3,b	;volatile
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;easat2_util_initialize.c: 127: ANSELDbits.ANSD4 = 0;
 13198  00331A  010F               	movlb	15	; () banked
 13199  00331C  993B               	bcf	59,4,b	;volatile
 13200                           
 13201                           ; BSR set to: 15
 13202                           ;easat2_util_initialize.c: 128: ANSELDbits.ANSD5 = 0;
 13203  00331E  010F               	movlb	15	; () banked
 13204  003320  9B3B               	bcf	59,5,b	;volatile
 13205                           
 13206                           ; BSR set to: 15
 13207                           ;easat2_util_initialize.c: 129: ANSELDbits.ANSD6 = 0;
 13208  003322  010F               	movlb	15	; () banked
 13209  003324  9D3B               	bcf	59,6,b	;volatile
 13210                           
 13211                           ; BSR set to: 15
 13212                           ;easat2_util_initialize.c: 130: ANSELDbits.ANSD7 = 0;
 13213  003326  010F               	movlb	15	; () banked
 13214  003328  9F3B               	bcf	59,7,b	;volatile
 13215                           
 13216                           ; BSR set to: 15
 13217                           ;easat2_util_initialize.c: 134: LATDbits.LATD0 = 0;
 13218  00332A  908C               	bcf	3980,0,c	;volatile
 13219                           
 13220                           ; BSR set to: 15
 13221                           ;easat2_util_initialize.c: 135: LATDbits.LATD1 = 0;
 13222  00332C  928C               	bcf	3980,1,c	;volatile
 13223                           
 13224                           ; BSR set to: 15
 13225                           ;easat2_util_initialize.c: 136: LATDbits.LATD2 = 0;
 13226  00332E  948C               	bcf	3980,2,c	;volatile
 13227                           
 13228                           ; BSR set to: 15
 13229                           ;easat2_util_initialize.c: 137: LATDbits.LATD3 = 0;
 13230  003330  968C               	bcf	3980,3,c	;volatile
 13231                           
 13232                           ; BSR set to: 15
 13233                           ;easat2_util_initialize.c: 138: LATDbits.LATD4 = 0;
 13234  003332  988C               	bcf	3980,4,c	;volatile
 13235                           
 13236                           ; BSR set to: 15
 13237                           ;easat2_util_initialize.c: 139: LATDbits.LATD5 = 0;
 13238  003334  9A8C               	bcf	3980,5,c	;volatile
 13239                           
 13240                           ; BSR set to: 15
 13241                           ;easat2_util_initialize.c: 140: LATDbits.LATD6 = 0;
 13242  003336  9C8C               	bcf	3980,6,c	;volatile
 13243                           
 13244                           ; BSR set to: 15
 13245                           ;easat2_util_initialize.c: 141: LATDbits.LATD7 = 0;
 13246  003338  9E8C               	bcf	3980,7,c	;volatile
 13247                           
 13248                           ; BSR set to: 15
 13249  00333A  0012               	return		;funcret
 13250  00333C                     __end_of_io_initialize:
 13251                           	opt stack 0
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           indf0	equ	0xFEF
 13260                           postinc0	equ	0xFEE
 13261                           fsr0h	equ	0xFEA
 13262                           fsr0l	equ	0xFE9
 13263                           wreg	equ	0xFE8
 13264                           indf1	equ	0xFE7
 13265                           postdec1	equ	0xFE5
 13266                           fsr1h	equ	0xFE2
 13267                           fsr1l	equ	0xFE1
 13268                           indf2	equ	0xFDF
 13269                           postinc2	equ	0xFDE
 13270                           postdec2	equ	0xFDD
 13271                           fsr2h	equ	0xFDA
 13272                           fsr2l	equ	0xFD9
 13273                           status	equ	0xFD8
 13274                           
 13275 ;; *************** function _low_priority_int *****************
 13276 ;; Defined at:
 13277 ;;		line 223 in file "easat2_util_timer.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;		None
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;		None
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  1    wreg      void 
 13284 ;; Registers used:
 13285 ;;		None
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13291 ;;      Params:         0       0       0       0       0       0       0
 13292 ;;      Locals:         0       0       0       0       0       0       0
 13293 ;;      Temps:          0      17       0       0       0       0       0
 13294 ;;      Totals:         0      17       0       0       0       0       0
 13295 ;;Total ram usage:       17 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    2
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		Interrupt level 1
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	intcodelo
 13306  000018                     __pintcodelo:
 13307                           	opt stack 0
 13308  000018                     _low_priority_int:
 13309                           	opt stack 21
 13310                           
 13311                           ; BSR set to: 15
 13312                           ;incstack = 0
 13313  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13314  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13315  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13316  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13317  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13318  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13319  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13320  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13321  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13322  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13323  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13324  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13325  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13326  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13327  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13328  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13329  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13330  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13331  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13332  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13333  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13334  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13335  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13336  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13337  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13338  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13339  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13340  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13341  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13342  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13343  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13344  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13345  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13346  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13347  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13348  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13349  0000A4  0010               	retfie	
 13350  0000A6                     __end_of_low_priority_int:
 13351                           	opt stack 0
 13352                           pclatu	equ	0xFFB
 13353                           pclath	equ	0xFFA
 13354                           tblptru	equ	0xFF8
 13355                           tblptrh	equ	0xFF7
 13356                           tblptrl	equ	0xFF6
 13357                           tablat	equ	0xFF5
 13358                           prodh	equ	0xFF4
 13359                           prodl	equ	0xFF3
 13360                           intcon	equ	0xFF2
 13361                           indf0	equ	0xFEF
 13362                           postinc0	equ	0xFEE
 13363                           fsr0h	equ	0xFEA
 13364                           fsr0l	equ	0xFE9
 13365                           wreg	equ	0xFE8
 13366                           indf1	equ	0xFE7
 13367                           postdec1	equ	0xFE5
 13368                           fsr1h	equ	0xFE2
 13369                           fsr1l	equ	0xFE1
 13370                           bsr	equ	0xFE0
 13371                           indf2	equ	0xFDF
 13372                           postinc2	equ	0xFDE
 13373                           postdec2	equ	0xFDD
 13374                           fsr2h	equ	0xFDA
 13375                           fsr2l	equ	0xFD9
 13376                           status	equ	0xFD8
 13377                           
 13378 ;; *************** function _high_priority_int *****************
 13379 ;; Defined at:
 13380 ;;		line 74 in file "easat2_util_timer.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;		None
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;  i               2   31[COMRAM] int 
 13385 ;;  sample          2   29[COMRAM] unsigned int 
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  1    wreg      void 
 13388 ;; Registers used:
 13389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/0
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13395 ;;      Params:         0       0       0       0       0       0       0
 13396 ;;      Locals:         4       0       0       0       0       0       0
 13397 ;;      Temps:         19       0       0       0       0       0       0
 13398 ;;      Totals:        23       0       0       0       0       0       0
 13399 ;;Total ram usage:       23 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:    1
 13402 ;; This function calls:
 13403 ;;		___ltdiv
 13404 ;; This function is called by:
 13405 ;;		Interrupt level 2
 13406 ;; This function uses a non-reentrant model
 13407 ;;
 13408                           
 13409                           	psect	intcode
 13410  000008                     __pintcode:
 13411                           	opt stack 0
 13412  000008                     _high_priority_int:
 13413                           	opt stack 21
 13414                           
 13415                           ;incstack = 0
 13416  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13417  00000A  EFCE  F010         	goto	int_func
 13418                           pclatu	equ	0xFFB
 13419                           pclath	equ	0xFFA
 13420                           tblptru	equ	0xFF8
 13421                           tblptrh	equ	0xFF7
 13422                           tblptrl	equ	0xFF6
 13423                           tablat	equ	0xFF5
 13424                           prodh	equ	0xFF4
 13425                           prodl	equ	0xFF3
 13426                           intcon	equ	0xFF2
 13427                           indf0	equ	0xFEF
 13428                           postinc0	equ	0xFEE
 13429                           fsr0h	equ	0xFEA
 13430                           fsr0l	equ	0xFE9
 13431                           wreg	equ	0xFE8
 13432                           indf1	equ	0xFE7
 13433                           postdec1	equ	0xFE5
 13434                           fsr1h	equ	0xFE2
 13435                           fsr1l	equ	0xFE1
 13436                           bsr	equ	0xFE0
 13437                           indf2	equ	0xFDF
 13438                           postinc2	equ	0xFDE
 13439                           postdec2	equ	0xFDD
 13440                           fsr2h	equ	0xFDA
 13441                           fsr2l	equ	0xFD9
 13442                           status	equ	0xFD8
 13443                           
 13444                           	psect	intcode_body
 13445  00219C                     __pintcode_body:
 13446                           	opt stack 21
 13447  00219C                     int_func:
 13448                           	opt stack 21
 13449  00219C  CFFA F010          	movff	pclath,??_high_priority_int+5
 13450  0021A0  CFFB F011          	movff	pclatu,??_high_priority_int+6
 13451  0021A4  CFE9 F012          	movff	fsr0l,??_high_priority_int+7
 13452  0021A8  CFEA F013          	movff	fsr0h,??_high_priority_int+8
 13453  0021AC  CFE1 F014          	movff	fsr1l,??_high_priority_int+9
 13454  0021B0  CFE2 F015          	movff	fsr1h,??_high_priority_int+10
 13455  0021B4  CFD9 F016          	movff	fsr2l,??_high_priority_int+11
 13456  0021B8  CFDA F017          	movff	fsr2h,??_high_priority_int+12
 13457  0021BC  CFF3 F018          	movff	prodl,??_high_priority_int+13
 13458  0021C0  CFF4 F019          	movff	prodh,??_high_priority_int+14
 13459  0021C4  CFF6 F01A          	movff	tblptrl,??_high_priority_int+15
 13460  0021C8  CFF7 F01B          	movff	tblptrh,??_high_priority_int+16
 13461  0021CC  CFF8 F01C          	movff	tblptru,??_high_priority_int+17
 13462  0021D0  CFF5 F01D          	movff	tablat,??_high_priority_int+18
 13463                           
 13464                           ;easat2_util_timer.c: 76: static unsigned int samples[100];
 13465                           ;easat2_util_timer.c: 77: static int sample_position = 0;
 13466                           ;easat2_util_timer.c: 78: static unsigned short long noise_mean_value = 32000;
 13467                           ;easat2_util_timer.c: 79: static unsigned int activation_thresold = 32000;
 13468                           ;easat2_util_timer.c: 80: static int times_thresold_exceeded = 0;
 13469                           ;easat2_util_timer.c: 81: static int cycles_transmitter_active = 0;
 13470                           ;easat2_util_timer.c: 82: static int is_transmitter_active = 0;
 13471                           ;easat2_util_timer.c: 84: static int valid_samples = 0;
 13472  0021D4  0E00               	movlw	0
 13473  0021D6  6E1F               	movwf	high_priority_int@sample+1,c
 13474  0021D8  0E00               	movlw	0
 13475  0021DA  6E1E               	movwf	high_priority_int@sample,c
 13476                           
 13477                           ;easat2_util_timer.c: 90: if (PIR1bits.TMR1IF) {
 13478  0021DC  A09E               	btfss	3998,0,c	;volatile
 13479  0021DE  D0D1               	goto	i2l235
 13480                           
 13481                           ;easat2_util_timer.c: 94: TMR1H = 0xEC;
 13482  0021E0  0EEC               	movlw	236
 13483  0021E2  6ECF               	movwf	4047,c	;volatile
 13484                           
 13485                           ;easat2_util_timer.c: 95: TMR1L = 0x77 ; 60535;
 13486  0021E4  0E77               	movlw	119
 13487  0021E6  6ECE               	movwf	4046,c	;volatile
 13488  0021E8  0004               	clrwdt		;# 
 13489                           
 13490                           ;easat2_util_timer.c: 112: tmr1_interrupt_number++;
 13491  0021EA  4A37               	infsnz	_tmr1_interrupt_number,f,c
 13492  0021EC  2A38               	incf	_tmr1_interrupt_number+1,f,c
 13493                           
 13494                           ;easat2_util_timer.c: 116: if (tmr1_interrupt_number == 50) {
 13495  0021EE  0E32               	movlw	50
 13496  0021F0  1837               	xorwf	_tmr1_interrupt_number,w,c
 13497  0021F2  1038               	iorwf	_tmr1_interrupt_number+1,w,c
 13498  0021F4  A4D8               	btfss	status,2,c
 13499  0021F6  D010               	goto	i2l4598
 13500                           
 13501                           ;easat2_util_timer.c: 119: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13502  0021F8  B883               	btfsc	3971,4,c	;volatile
 13503  0021FA  D003               	goto	i2u428_40
 13504  0021FC  6A0B               	clrf	??_high_priority_int& (0+255),c
 13505  0021FE  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13506  002200  D001               	goto	i2u429_48
 13507  002202                     i2u428_40:
 13508  002202  6A0B               	clrf	??_high_priority_int& (0+255),c
 13509  002204                     i2u429_48:
 13510  002204  3A0B               	swapf	??_high_priority_int,f,c
 13511  002206  5083               	movf	3971,w,c	;volatile
 13512  002208  180B               	xorwf	??_high_priority_int,w,c
 13513  00220A  0BEF               	andlw	-17
 13514  00220C  180B               	xorwf	??_high_priority_int,w,c
 13515  00220E  6E83               	movwf	3971,c	;volatile
 13516                           
 13517                           ;easat2_util_timer.c: 121: tmr1_interrupt_number = 0;
 13518  002210  0E00               	movlw	0
 13519  002212  6E38               	movwf	_tmr1_interrupt_number+1,c
 13520  002214  0E00               	movlw	0
 13521  002216  6E37               	movwf	_tmr1_interrupt_number,c
 13522  002218                     i2l4598:
 13523                           
 13524                           ;easat2_util_timer.c: 123: }
 13525                           ;easat2_util_timer.c: 127: if (valid_samples < 100) valid_samples++;
 13526  002218  BE2E               	btfsc	high_priority_int@valid_samples+1,7,c
 13527  00221A  D006               	goto	i2l4600
 13528  00221C  502E               	movf	high_priority_int@valid_samples+1,w,c
 13529  00221E  E106               	bnz	i2l4602
 13530  002220  0E64               	movlw	100
 13531  002222  5C2D               	subwf	high_priority_int@valid_samples,w,c
 13532  002224  B0D8               	btfsc	status,0,c
 13533  002226  D002               	goto	i2l4602
 13534  002228                     i2l4600:
 13535  002228  4A2D               	infsnz	high_priority_int@valid_samples,f,c
 13536  00222A  2A2E               	incf	high_priority_int@valid_samples+1,f,c
 13537  00222C                     i2l4602:
 13538                           
 13539                           ;easat2_util_timer.c: 140: ADCON0bits.CHS = 4;
 13540  00222C  94C2               	bcf	4034,2,c	;volatile
 13541  00222E  96C2               	bcf	4034,3,c	;volatile
 13542  002230  88C2               	bsf	4034,4,c	;volatile
 13543  002232  9AC2               	bcf	4034,5,c	;volatile
 13544  002234  9CC2               	bcf	4034,6,c	;volatile
 13545                           
 13546                           ;easat2_util_timer.c: 141: ADCON0bits.ADON = 1;
 13547  002236  80C2               	bsf	4034,0,c	;volatile
 13548                           
 13549                           ;easat2_util_timer.c: 142: PIR1bits.ADIF = 0;
 13550  002238  9C9E               	bcf	3998,6,c	;volatile
 13551                           
 13552                           ;easat2_util_timer.c: 144: ADCON0bits.GO = 1;
 13553  00223A  82C2               	bsf	4034,1,c	;volatile
 13554  00223C                     i2l223:
 13555  00223C  AC9E               	btfss	3998,6,c	;volatile
 13556  00223E  D7FE               	goto	i2l223
 13557                           
 13558                           ;easat2_util_timer.c: 147: sample = ADRES;
 13559  002240  CFC3 F01E          	movff	4035,high_priority_int@sample	;volatile
 13560  002244  CFC4 F01F          	movff	4036,high_priority_int@sample+1	;volatile
 13561                           
 13562                           ;easat2_util_timer.c: 149: PIR1bits.ADIF = 0;
 13563  002248  9C9E               	bcf	3998,6,c	;volatile
 13564                           
 13565                           ;easat2_util_timer.c: 150: ADCON0bits.ADON = 0;
 13566  00224A  90C2               	bcf	4034,0,c	;volatile
 13567                           
 13568                           ;easat2_util_timer.c: 152: if (is_transmitter_active) cycles_transmitter_active++;
 13569  00224C  502F               	movf	high_priority_int@is_transmitter_active,w,c
 13570  00224E  1030               	iorwf	high_priority_int@is_transmitter_active+1,w,c
 13571  002250  B4D8               	btfsc	status,2,c
 13572  002252  D002               	goto	i2l4614
 13573  002254  4A31               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13574  002256  2A32               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13575  002258                     i2l4614:
 13576                           
 13577                           ;easat2_util_timer.c: 157: if (sample > 128 && sample > activation_thresold) {
 13578  002258  501F               	movf	high_priority_int@sample+1,w,c
 13579  00225A  E104               	bnz	i2u433_40
 13580  00225C  0E81               	movlw	129
 13581  00225E  5C1E               	subwf	high_priority_int@sample,w,c
 13582  002260  A0D8               	btfss	status,0,c
 13583  002262  D01B               	goto	i2l4626
 13584  002264                     i2u433_40:
 13585  002264  501E               	movf	high_priority_int@sample,w,c
 13586  002266  5C3C               	subwf	high_priority_int@activation_thresold,w,c
 13587  002268  501F               	movf	high_priority_int@sample+1,w,c
 13588  00226A  583D               	subwfb	high_priority_int@activation_thresold+1,w,c
 13589  00226C  B0D8               	btfsc	status,0,c
 13590  00226E  D015               	goto	i2l4626
 13591                           
 13592                           ;easat2_util_timer.c: 159: times_thresold_exceeded++;
 13593  002270  4A33               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 13594  002272  2A34               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 13595                           
 13596                           ;easat2_util_timer.c: 161: if (times_thresold_exceeded == 200) {
 13597  002274  0EC8               	movlw	200
 13598  002276  1833               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 13599  002278  1034               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 13600  00227A  A4D8               	btfss	status,2,c
 13601  00227C  D081               	goto	i2l4660
 13602                           
 13603                           ;easat2_util_timer.c: 166: (PORTBbits.RB1) = 1;
 13604  00227E  8281               	bsf	3969,1,c	;volatile
 13605                           
 13606                           ;easat2_util_timer.c: 168: is_transmitter_active = 1;
 13607  002280  0E00               	movlw	0
 13608  002282  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13609  002284  0E01               	movlw	1
 13610  002286  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13611                           
 13612                           ;easat2_util_timer.c: 169: cycles_transmitter_active = 0;
 13613  002288  0E00               	movlw	0
 13614  00228A  6E32               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13615  00228C  0E00               	movlw	0
 13616  00228E  6E31               	movwf	high_priority_int@cycles_transmitter_active,c
 13617                           
 13618                           ;easat2_util_timer.c: 171: times_thresold_exceeded = 0;
 13619  002290  0E00               	movlw	0
 13620  002292  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13621  002294  0E00               	movlw	0
 13622  002296  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13623                           
 13624                           ;easat2_util_timer.c: 173: }
 13625                           ;easat2_util_timer.c: 176: } else {
 13626  002298  D073               	goto	i2l4660
 13627  00229A                     i2l4626:
 13628                           
 13629                           ;easat2_util_timer.c: 178: times_thresold_exceeded = 0;
 13630  00229A  0E00               	movlw	0
 13631  00229C  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13632  00229E  0E00               	movlw	0
 13633  0022A0  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13634                           
 13635                           ;easat2_util_timer.c: 180: if (cycles_transmitter_active == 12000) {
 13636  0022A2  0EE0               	movlw	224
 13637  0022A4  1831               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13638  0022A6  E109               	bnz	i2l4634
 13639  0022A8  0E2E               	movlw	46
 13640  0022AA  1832               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13641  0022AC  A4D8               	btfss	status,2,c
 13642  0022AE  D005               	goto	i2l4634
 13643                           
 13644                           ;easat2_util_timer.c: 182: (PORTBbits.RB1) = 0;
 13645  0022B0  9281               	bcf	3969,1,c	;volatile
 13646                           
 13647                           ;easat2_util_timer.c: 183: is_transmitter_active = 0;
 13648  0022B2  0E00               	movlw	0
 13649  0022B4  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13650  0022B6  0E00               	movlw	0
 13651  0022B8  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13652  0022BA                     i2l4634:
 13653                           
 13654                           ;easat2_util_timer.c: 184: }
 13655                           ;easat2_util_timer.c: 186: samples[sample_position++] = sample;
 13656  0022BA  90D8               	bcf	status,0,c
 13657  0022BC  3435               	rlcf	high_priority_int@sample_position,w,c
 13658  0022BE  6ED9               	movwf	fsr2l,c
 13659  0022C0  3436               	rlcf	high_priority_int@sample_position+1,w,c
 13660  0022C2  6EDA               	movwf	fsr2h,c
 13661  0022C4  0E00               	movlw	low high_priority_int@samples
 13662  0022C6  26D9               	addwf	fsr2l,f,c
 13663  0022C8  0E02               	movlw	high high_priority_int@samples
 13664  0022CA  22DA               	addwfc	fsr2h,f,c
 13665  0022CC  C01E  FFDE         	movff	high_priority_int@sample,postinc2
 13666  0022D0  C01F  FFDD         	movff	high_priority_int@sample+1,postdec2
 13667  0022D4  4A35               	infsnz	high_priority_int@sample_position,f,c
 13668  0022D6  2A36               	incf	high_priority_int@sample_position+1,f,c
 13669                           
 13670                           ;easat2_util_timer.c: 189: if (sample_position == 100) sample_position = 0;
 13671  0022D8  0E64               	movlw	100
 13672  0022DA  1835               	xorwf	high_priority_int@sample_position,w,c
 13673  0022DC  1036               	iorwf	high_priority_int@sample_position+1,w,c
 13674  0022DE  A4D8               	btfss	status,2,c
 13675  0022E0  D004               	goto	i2l4642
 13676  0022E2  0E00               	movlw	0
 13677  0022E4  6E36               	movwf	high_priority_int@sample_position+1,c
 13678  0022E6  0E00               	movlw	0
 13679  0022E8  6E35               	movwf	high_priority_int@sample_position,c
 13680  0022EA                     i2l4642:
 13681                           
 13682                           ;easat2_util_timer.c: 191: if (valid_samples == 100) {
 13683  0022EA  0E64               	movlw	100
 13684  0022EC  182D               	xorwf	high_priority_int@valid_samples,w,c
 13685  0022EE  102E               	iorwf	high_priority_int@valid_samples+1,w,c
 13686  0022F0  A4D8               	btfss	status,2,c
 13687  0022F2  D046               	goto	i2l4660
 13688                           
 13689                           ;easat2_util_timer.c: 194: noise_mean_value = 0;
 13690  0022F4  0E00               	movlw	0
 13691  0022F6  6E39               	movwf	high_priority_int@noise_mean_value,c
 13692  0022F8  0E00               	movlw	0
 13693  0022FA  6E3A               	movwf	high_priority_int@noise_mean_value+1,c
 13694  0022FC  0E00               	movlw	0
 13695  0022FE  6E3B               	movwf	high_priority_int@noise_mean_value+2,c
 13696                           
 13697                           ;easat2_util_timer.c: 196: for (int i = 0; i < 100; i++)
 13698  002300  0E00               	movlw	0
 13699  002302  6E21               	movwf	high_priority_int@i+1,c
 13700  002304  0E00               	movlw	0
 13701  002306  6E20               	movwf	high_priority_int@i,c
 13702  002308                     i2l4646:
 13703  002308  BE21               	btfsc	high_priority_int@i+1,7,c
 13704  00230A  D006               	goto	i2l4650
 13705  00230C  5021               	movf	high_priority_int@i+1,w,c
 13706  00230E  E11F               	bnz	i2l4656
 13707  002310  0E64               	movlw	100
 13708  002312  5C20               	subwf	high_priority_int@i,w,c
 13709  002314  B0D8               	btfsc	status,0,c
 13710  002316  D01B               	goto	i2l4656
 13711  002318                     i2l4650:
 13712                           
 13713                           ;easat2_util_timer.c: 197: noise_mean_value += samples[i];
 13714  002318  90D8               	bcf	status,0,c
 13715  00231A  3420               	rlcf	high_priority_int@i,w,c
 13716  00231C  6ED9               	movwf	fsr2l,c
 13717  00231E  3421               	rlcf	high_priority_int@i+1,w,c
 13718  002320  6EDA               	movwf	fsr2h,c
 13719  002322  0E00               	movlw	low high_priority_int@samples
 13720  002324  26D9               	addwf	fsr2l,f,c
 13721  002326  0E02               	movlw	high high_priority_int@samples
 13722  002328  22DA               	addwfc	fsr2h,f,c
 13723  00232A  CFDE F00B          	movff	postinc2,??_high_priority_int
 13724  00232E  CFDD F00C          	movff	postdec2,??_high_priority_int+1
 13725  002332  C00B  F00D         	movff	??_high_priority_int,??_high_priority_int+2
 13726  002336  C00C  F00E         	movff	??_high_priority_int+1,??_high_priority_int+3
 13727  00233A  6A0F               	clrf	(??_high_priority_int+4)& (0+255),c
 13728  00233C  500D               	movf	??_high_priority_int+2,w,c
 13729  00233E  2639               	addwf	high_priority_int@noise_mean_value,f,c
 13730  002340  500E               	movf	??_high_priority_int+3,w,c
 13731  002342  223A               	addwfc	high_priority_int@noise_mean_value+1,f,c
 13732  002344  500F               	movf	??_high_priority_int+4,w,c
 13733  002346  223B               	addwfc	high_priority_int@noise_mean_value+2,f,c
 13734  002348  4A20               	infsnz	high_priority_int@i,f,c
 13735  00234A  2A21               	incf	high_priority_int@i+1,f,c
 13736  00234C  D7DD               	goto	i2l4646
 13737  00234E                     i2l4656:
 13738                           
 13739                           ;easat2_util_timer.c: 200: noise_mean_value = (unsigned short long)(noise_mean_value / 1
      +                          00);
 13740  00234E  C039  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 13741  002352  C03A  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 13742  002356  C03B  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 13743  00235A  0E64               	movlw	100
 13744  00235C  6E04               	movwf	___ltdiv@divisor,c
 13745  00235E  0E00               	movlw	0
 13746  002360  6E05               	movwf	___ltdiv@divisor+1,c
 13747  002362  0E00               	movlw	0
 13748  002364  6E06               	movwf	___ltdiv@divisor+2,c
 13749  002366  EC23  F01B         	call	___ltdiv	;wreg free
 13750  00236A  C001  F039         	movff	?___ltdiv,high_priority_int@noise_mean_value
 13751  00236E  C002  F03A         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 13752  002372  C003  F03B         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 13753                           
 13754                           ;easat2_util_timer.c: 205: activation_thresold = noise_mean_value * 2;
 13755  002376  90D8               	bcf	status,0,c
 13756  002378  3439               	rlcf	high_priority_int@noise_mean_value,w,c
 13757  00237A  6E3C               	movwf	high_priority_int@activation_thresold,c
 13758  00237C  343A               	rlcf	high_priority_int@noise_mean_value+1,w,c
 13759  00237E  6E3D               	movwf	high_priority_int@activation_thresold+1,c
 13760  002380                     i2l4660:
 13761                           
 13762                           ;easat2_util_timer.c: 207: }
 13763                           ;easat2_util_timer.c: 209: }
 13764                           ;easat2_util_timer.c: 214: PIR1bits.TMR1IF = 0;
 13765  002380  909E               	bcf	3998,0,c	;volatile
 13766  002382                     i2l235:
 13767  002382  C01D  FFF5         	movff	??_high_priority_int+18,tablat
 13768  002386  C01C  FFF8         	movff	??_high_priority_int+17,tblptru
 13769  00238A  C01B  FFF7         	movff	??_high_priority_int+16,tblptrh
 13770  00238E  C01A  FFF6         	movff	??_high_priority_int+15,tblptrl
 13771  002392  C019  FFF4         	movff	??_high_priority_int+14,prodh
 13772  002396  C018  FFF3         	movff	??_high_priority_int+13,prodl
 13773  00239A  C017  FFDA         	movff	??_high_priority_int+12,fsr2h
 13774  00239E  C016  FFD9         	movff	??_high_priority_int+11,fsr2l
 13775  0023A2  C015  FFE2         	movff	??_high_priority_int+10,fsr1h
 13776  0023A6  C014  FFE1         	movff	??_high_priority_int+9,fsr1l
 13777  0023AA  C013  FFEA         	movff	??_high_priority_int+8,fsr0h
 13778  0023AE  C012  FFE9         	movff	??_high_priority_int+7,fsr0l
 13779  0023B2  C011  FFFB         	movff	??_high_priority_int+6,pclatu
 13780  0023B6  C010  FFFA         	movff	??_high_priority_int+5,pclath
 13781  0023BA  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13782  0023BC  0011               	retfie		f
 13783  0023BE                     __end_of_high_priority_int:
 13784                           	opt stack 0
 13785                           pclatu	equ	0xFFB
 13786                           pclath	equ	0xFFA
 13787                           tblptru	equ	0xFF8
 13788                           tblptrh	equ	0xFF7
 13789                           tblptrl	equ	0xFF6
 13790                           tablat	equ	0xFF5
 13791                           prodh	equ	0xFF4
 13792                           prodl	equ	0xFF3
 13793                           intcon	equ	0xFF2
 13794                           indf0	equ	0xFEF
 13795                           postinc0	equ	0xFEE
 13796                           fsr0h	equ	0xFEA
 13797                           fsr0l	equ	0xFE9
 13798                           wreg	equ	0xFE8
 13799                           indf1	equ	0xFE7
 13800                           postdec1	equ	0xFE5
 13801                           fsr1h	equ	0xFE2
 13802                           fsr1l	equ	0xFE1
 13803                           bsr	equ	0xFE0
 13804                           indf2	equ	0xFDF
 13805                           postinc2	equ	0xFDE
 13806                           postdec2	equ	0xFDD
 13807                           fsr2h	equ	0xFDA
 13808                           fsr2l	equ	0xFD9
 13809                           status	equ	0xFD8
 13810                           
 13811 ;; *************** function ___ltdiv *****************
 13812 ;; Defined at:
 13813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ltdiv.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;  dividend        3    0[COMRAM] unsigned um
 13816 ;;  divisor         3    3[COMRAM] unsigned um
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;  quotient        3    6[COMRAM] unsigned um
 13819 ;;  counter         1    9[COMRAM] unsigned char 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  3    0[COMRAM] unsigned um
 13822 ;; Registers used:
 13823 ;;		wreg, status,2, status,0
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13829 ;;      Params:         6       0       0       0       0       0       0
 13830 ;;      Locals:         4       0       0       0       0       0       0
 13831 ;;      Temps:          0       0       0       0       0       0       0
 13832 ;;      Totals:        10       0       0       0       0       0       0
 13833 ;;Total ram usage:       10 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; This function calls:
 13836 ;;		Nothing
 13837 ;; This function is called by:
 13838 ;;		_high_priority_int
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           	psect	text56
 13843  003646                     __ptext56:
 13844                           	opt stack 0
 13845  003646                     ___ltdiv:
 13846                           	opt stack 21
 13847                           
 13848                           ;incstack = 0
 13849  003646  0E00               	movlw	0
 13850  003648  6E07               	movwf	___ltdiv@quotient,c
 13851  00364A  0E00               	movlw	0
 13852  00364C  6E08               	movwf	___ltdiv@quotient+1,c
 13853  00364E  0E00               	movlw	0
 13854  003650  6E09               	movwf	___ltdiv@quotient+2,c
 13855  003652  5004               	movf	___ltdiv@divisor,w,c
 13856  003654  1005               	iorwf	___ltdiv@divisor+1,w,c
 13857  003656  1006               	iorwf	___ltdiv@divisor+2,w,c
 13858  003658  B4D8               	btfsc	status,2,c
 13859  00365A  D023               	goto	i2l937
 13860  00365C  0E01               	movlw	1
 13861  00365E  6E0A               	movwf	___ltdiv@counter,c
 13862  003660  D005               	goto	i2l4568
 13863  003662                     i2l4566:
 13864  003662  90D8               	bcf	status,0,c
 13865  003664  3604               	rlcf	___ltdiv@divisor,f,c
 13866  003666  3605               	rlcf	___ltdiv@divisor+1,f,c
 13867  003668  3606               	rlcf	___ltdiv@divisor+2,f,c
 13868  00366A  2A0A               	incf	___ltdiv@counter,f,c
 13869  00366C                     i2l4568:
 13870  00366C  AE06               	btfss	___ltdiv@divisor+2,7,c
 13871  00366E  D7F9               	goto	i2l4566
 13872  003670                     i2l4570:
 13873  003670  90D8               	bcf	status,0,c
 13874  003672  3607               	rlcf	___ltdiv@quotient,f,c
 13875  003674  3608               	rlcf	___ltdiv@quotient+1,f,c
 13876  003676  3609               	rlcf	___ltdiv@quotient+2,f,c
 13877  003678  5004               	movf	___ltdiv@divisor,w,c
 13878  00367A  5C01               	subwf	___ltdiv@dividend,w,c
 13879  00367C  5005               	movf	___ltdiv@divisor+1,w,c
 13880  00367E  5802               	subwfb	___ltdiv@dividend+1,w,c
 13881  003680  5006               	movf	___ltdiv@divisor+2,w,c
 13882  003682  5803               	subwfb	___ltdiv@dividend+2,w,c
 13883  003684  A0D8               	btfss	status,0,c
 13884  003686  D007               	goto	i2l942
 13885  003688  5004               	movf	___ltdiv@divisor,w,c
 13886  00368A  5E01               	subwf	___ltdiv@dividend,f,c
 13887  00368C  5005               	movf	___ltdiv@divisor+1,w,c
 13888  00368E  5A02               	subwfb	___ltdiv@dividend+1,f,c
 13889  003690  5006               	movf	___ltdiv@divisor+2,w,c
 13890  003692  5A03               	subwfb	___ltdiv@dividend+2,f,c
 13891  003694  8007               	bsf	___ltdiv@quotient,0,c
 13892  003696                     i2l942:
 13893  003696  90D8               	bcf	status,0,c
 13894  003698  3206               	rrcf	___ltdiv@divisor+2,f,c
 13895  00369A  3205               	rrcf	___ltdiv@divisor+1,f,c
 13896  00369C  3204               	rrcf	___ltdiv@divisor,f,c
 13897  00369E  2E0A               	decfsz	___ltdiv@counter,f,c
 13898  0036A0  D7E7               	goto	i2l4570
 13899  0036A2                     i2l937:
 13900  0036A2  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 13901  0036A6  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13902  0036AA  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13903  0036AE  0012               	return		;funcret
 13904  0036B0                     __end_of___ltdiv:
 13905                           	opt stack 0
 13906                           pclatu	equ	0xFFB
 13907                           pclath	equ	0xFFA
 13908                           tblptru	equ	0xFF8
 13909                           tblptrh	equ	0xFF7
 13910                           tblptrl	equ	0xFF6
 13911                           tablat	equ	0xFF5
 13912                           prodh	equ	0xFF4
 13913                           prodl	equ	0xFF3
 13914                           intcon	equ	0xFF2
 13915                           indf0	equ	0xFEF
 13916                           postinc0	equ	0xFEE
 13917                           fsr0h	equ	0xFEA
 13918                           fsr0l	equ	0xFE9
 13919                           wreg	equ	0xFE8
 13920                           indf1	equ	0xFE7
 13921                           postdec1	equ	0xFE5
 13922                           fsr1h	equ	0xFE2
 13923                           fsr1l	equ	0xFE1
 13924                           bsr	equ	0xFE0
 13925                           indf2	equ	0xFDF
 13926                           postinc2	equ	0xFDE
 13927                           postdec2	equ	0xFDD
 13928                           fsr2h	equ	0xFDA
 13929                           fsr2l	equ	0xFD9
 13930                           status	equ	0xFD8
 13931                           pclatu	equ	0xFFB
 13932                           pclath	equ	0xFFA
 13933                           tblptru	equ	0xFF8
 13934                           tblptrh	equ	0xFF7
 13935                           tblptrl	equ	0xFF6
 13936                           tablat	equ	0xFF5
 13937                           prodh	equ	0xFF4
 13938                           prodl	equ	0xFF3
 13939                           intcon	equ	0xFF2
 13940                           indf0	equ	0xFEF
 13941                           postinc0	equ	0xFEE
 13942                           fsr0h	equ	0xFEA
 13943                           fsr0l	equ	0xFE9
 13944                           wreg	equ	0xFE8
 13945                           indf1	equ	0xFE7
 13946                           postdec1	equ	0xFE5
 13947                           fsr1h	equ	0xFE2
 13948                           fsr1l	equ	0xFE1
 13949                           bsr	equ	0xFE0
 13950                           indf2	equ	0xFDF
 13951                           postinc2	equ	0xFDE
 13952                           postdec2	equ	0xFDD
 13953                           fsr2h	equ	0xFDA
 13954                           fsr2l	equ	0xFD9
 13955                           status	equ	0xFD8
 13956                           
 13957                           	psect	rparam
 13958  0000                     pclatu	equ	0xFFB
 13959                           pclath	equ	0xFFA
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           intcon	equ	0xFF2
 13967                           indf0	equ	0xFEF
 13968                           postinc0	equ	0xFEE
 13969                           fsr0h	equ	0xFEA
 13970                           fsr0l	equ	0xFE9
 13971                           wreg	equ	0xFE8
 13972                           indf1	equ	0xFE7
 13973                           postdec1	equ	0xFE5
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           bsr	equ	0xFE0
 13977                           indf2	equ	0xFDF
 13978                           postinc2	equ	0xFDE
 13979                           postdec2	equ	0xFDD
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984                           	psect	temp
 13985  00003E                     btemp:
 13986                           	opt stack 0
 13987  00003E                     	ds	1
 13988  0000                     int$flags	set	btemp
 13989                           pclatu	equ	0xFFB
 13990                           pclath	equ	0xFFA
 13991                           tblptru	equ	0xFF8
 13992                           tblptrh	equ	0xFF7
 13993                           tblptrl	equ	0xFF6
 13994                           tablat	equ	0xFF5
 13995                           prodh	equ	0xFF4
 13996                           prodl	equ	0xFF3
 13997                           intcon	equ	0xFF2
 13998                           indf0	equ	0xFEF
 13999                           postinc0	equ	0xFEE
 14000                           fsr0h	equ	0xFEA
 14001                           fsr0l	equ	0xFE9
 14002                           wreg	equ	0xFE8
 14003                           indf1	equ	0xFE7
 14004                           postdec1	equ	0xFE5
 14005                           fsr1h	equ	0xFE2
 14006                           fsr1l	equ	0xFE1
 14007                           bsr	equ	0xFE0
 14008                           indf2	equ	0xFDF
 14009                           postinc2	equ	0xFDE
 14010                           postdec2	equ	0xFDD
 14011                           fsr2h	equ	0xFDA
 14012                           fsr2l	equ	0xFD9
 14013                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      61
    BANK0           160    134     134
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_mins
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134161
                         _initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  134161
                                            124 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             23 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             41 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             63 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             36 COMRAM     5     5      0
                                             19 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             33 COMRAM     3     3      0
                                             19 BANK0     18    16      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             19 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             37 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             36 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             41 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   74084
                                            114 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6832
                                             42 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5741
                                             38 COMRAM     4     4      0
                                             19 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     222
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     222
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             69 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             41 COMRAM     3     3      0
                                             29 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             35 COMRAM     4     4      0
                                             21 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             33 COMRAM     9     9      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             33 COMRAM     6     6      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             36 COMRAM     5     5      0
                                             22 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             38 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             33 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             48 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             51 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             33 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             33 COMRAM     3     3      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             33 COMRAM     2     2      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                      _io_initialize
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _io_initialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   23    23      0     426
                                             10 COMRAM    23    23      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (10) ___ltdiv                                            10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _io_initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3D       1       64.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259       9        0.0%
DATA                 0      0     259      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Apr 01 12:54:51 2017

                     util_onewire_read_byte@value 0093              high_priority_int@activation_thresold 003C  
                            util_getTemperature@i 01CC                                                l24 35BA  
                                              l26 3636                                      ___awdiv@sign 0025  
                                              bsr 000FE0                               ___wmul@multiplicand 007B  
                __end_of_util_beacon_transmission 2E88                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 009E  
                                    ___ftadd@exp2 009D                                      ___ftadd@sign 009C  
                                             l110 2FB0                                               l104 3144  
                                             l116 307A                                               l167 3A16  
                                             l346 3A8C                                               l339 3A58  
                                             l800 20D4                                               l392 3B70  
                                             l730 298E                                               l820 2D40  
                                             l398 3BA0                                               l809 20FE  
                                             l489 07A8                                               l762 2F48  
                                             l834 2830                                               l827 2784  
                                             l828 27C4                                               l909 33DA  
                                             l791 1FFE                                               l919 35A8  
                                             l785 1F9C                                               l859 3BDC  
                                             l789 1FD6                           ??_util_onewire_read_bit 0022  
                                    __CFG_CPB$OFF 000000                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13EA                   __size_of_util_timer1_initialize 0026  
                                    ___awmod@sign 0023                    ??_util_transmit_morse_sequence 0027  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0073  
                                    ___ftdiv@cntr 007F                                      ___ftdiv@sign 0084  
                                            l5020 3722                                              l5022 3728  
                                            l5200 2920                                              l5032 375E  
                                            l5122 273A                                              l5106 3C72  
                                            l5026 372E                                              l5212 2952  
                                            l5116 270A                                              l5028 3756  
                                            l5230 3848                                              l5222 297C  
                                            l5070 155C                                              l6022 0FFE  
                                            l5310 39DC                                              l3560 2BD2  
                                            l5224 2988                                              l5216 2962  
                                            l5152 27F4                                              l5056 1EEC  
                                            l5048 1E08                                              l5080 1648  
                                            l6032 103A                                              l6016 0FDA  
                                            l6024 100A                                              l6008 0FAA  
                                            l5242 323E                                              l3570 2C08  
                                            l3538 2B2C                                              l5162 281E  
                                            l5402 3ACE                                              l5306 39CA  
                                            l4700 2F08                                              l3556 2BBE  
                                            l5172 2864                                              l5164 282A  
                                            l5156 2804                                              l5076 1622  
                                            l5500 045C                                              l5420 010C  
                                            l5404 3AD8                                              l6028 101E  
                                            l5238 3206                                              l4710 2F52  
                                            l4702 2F2C                                              l3574 2C24  
                                            l3566 2BEE                                              l5262 3366  
                                            l5094 1872                                              l5510 04D4  
                                            l5414 00DA                                              l5248 3282  
                                            l4704 2F3A                                              l4800 2036  
                                            l3568 2BFE                                              l5264 3374  
                                            l5192 28D0                                              l5088 17AC  
                                            l5520 0532                                              l5440 0206  
                                            l5408 00BA                                              l6072 2E46  
                                            l6080 3908                                              l4810 2080  
                                            l5274 33CA                                              l5266 337A  
                                            l5290 3598                                              l5282 3540  
                                            l5178 2886                                              l5506 04A6  
                                            l5450 0250                                              l5434 01AA  
                                            l4722 3786                                              l4716 2F6E  
                                            l4820 20C8                                              l4812 208C  
                                            l5284 354E                                              l5612 093E  
                                            l5604 0916                                              l5524 0598  
                                            l5444 0216                                              l5428 0182  
                                            l4724 378A                                              l6076 2E62  
                                            l6084 391C                                              l6236 3628  
                                            l4806 2064                                              l5286 3554  
                                            l4910 343C                                              l4902 3418  
                                            l5630 09B6                                              l5606 0924  
                                            l5550 0668                                              l5542 0634  
                                            l5526 059E                                              l5614 094C  
                                            l5438 01F0                                              l5702 38C2  
                                            l4808 2072                                              l5296 36B6  
                                            l4920 346E                                              l4912 3442  
                                            l5632 09BC                                              l5624 0990  
                                            l5560 06B8                                              l5552 0670  
                                            l5456 026A                                              l5448 021C  
                                            l5704 38C6                                              l4680 3B64  
                                            l5720 18E4                                              l5800 1C82  
                                            l5712 189C                                              l5394 3B32  
                                            l4826 2128                                              l4818 20BA  
                                            l5298 36C4                                              l5570 075C  
                                            l5554 0684                                              l5546 0656  
                                            l5538 05E4                                              l5490 03D2  
                                            l5482 0362                                              l5466 02B0  
                                            l5706 38D6                                              l4754 3A7A  
                                            l4738 3A46                                              l5730 193E  
                                            l5722 18F6                                              l5714 18AE  
                                            l4692 2EB6                                              l4836 2176  
                                            l4908 3432                                              l4924 347A  
                                            l4940 34AA                                              l4852 2A08  
                                            l5652 0A5A                                              l5644 0A02  
                                            l5708 38E0                                              l4668 3B94  
                                            l5740 1998                                              l5732 1950  
                                            l5724 1908                                              l5716 18C0  
                                            l5398 3B42                                              l4694 2EC4  
                                            l4790 1FF4                                              l4950 34D6  
                                            l4870 2A74                                              l4846 29D4  
                                            l5670 0B08                                              l5590 07DC  
                                            l5582 07AC                                              l5558 06B0  
                                            l5494 0400                                              l5750 19F2  
                                            l5742 19AA                                              l5734 1962  
                                            l5726 191A                                              l5718 18D2  
                                            l5814 2C9E                                              l4696 2EE8  
                                            l4688 2EA2                                              l4784 1FE4  
                                            l4928 3488                                              l4952 34DC  
                                            l4960 350C                                              l4944 34BA  
                                            l4880 2AB2                                              l5680 0B44  
                                            l5672 0B12                                              l5664 0AC6  
                                            l5648 0A2A                                              l5576 0776  
                                            l5568 074E                                              l5496 0416  
                                            l5760 1A4C                                              l5752 1A04  
                                            l5744 19BC                                              l5736 1974  
                                            l5728 192C                                              l5808 2C6A  
                                            l4778 1FAA                                              l4866 2A56  
                                            l5690 0C00                                              l5674 0B1E  
                                            l5666 0AD0                                              l5658 0A8E  
                                            l5594 082E                                              l5578 078A  
                                            l5498 0446                                              l5770 1AA6  
                                            l5762 1A5E                                              l5754 1A16  
                                            l5746 19CE                                              l5738 1986  
                                            l5834 2CFE                                              l4970 37DC  
                                            l4964 351C                                              l4956 3500  
                                            l4948 34CC                                              l4876 2A94  
                                            l5692 0C06                                              l5780 1B00  
                                            l5772 1AB8                                              l5764 1A70  
                                            l5756 1A28                                              l5748 19E0  
                                            l4972 37E4                                              l5940 0D66  
                                            l5686 0B72                                              l5694 0C1C  
                                            l5790 1B5A                                              l5782 1B12  
                                            l5774 1ACA                                              l5766 1A82  
                                            l5758 1A3A                                              l4982 3808  
                                            l5942 0D6A                                              l5934 0D3C  
                                            l4896 3404                                              l5696 0C3A  
                                            l5792 1B6C                                              l5784 1B24  
                                            l5776 1ADC                                              l5768 1A94  
                                            l5856 3998                                              l4976 37F4  
                                            l4984 380C                                              l5928 0D12  
                                            l5794 1B7E                                              l5786 1B36  
                                            l5778 1AEE                                              l5962 0E58  
                                            l5954 0DB0                                              l5938 0D50  
                                            l5788 1B48                                              l5964 0E62  
                                            l5980 0EEC                                              l5948 0D8C  
                                            l5798 1B84                                              l5982 0EF6  
                                            l5958 0E42                                              l5976 0EE4  
                                            l5968 0E78                                              l5986 0F0C  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3121 2B08  
                                            u3140 2B52                                              u5000 3AAC  
                                            u3145 2B48                                              u5111 26EC  
                                            u5008 3AAE                                              u5131 271C  
                                            u6021 2C48                                              u4510 37AA  
                                            u5400 3968                                              u6041 2C7C  
                                            u4540 3A58                                              u4517 37A0  
                                            u5415 25CC                                              u4560 3A8C  
                                            u5408 396A                                              u4801 29E6  
                                            u5425 25EE                                              u4571 1F4A  
                                            u5435 2610                                              u4581 1F68  
                                            u5445 2632                                              u6407 3AB6  
                                            u5455 2434                                              u6184 0EA8  
                                            u6417 3B66                                              u5465 244A  
                                            u6185 0EA0                                              u6427 3B96  
                                            u5475 2460                                              u4781 29B2  
                                            u6357 3A10                                              u5590 02F6  
                                            u6367 3A1A                                              u6377 394C  
                                            u5595 02EA                                              u6387 3956  
                                            u5780 07A0                                              u6397 3972  
                        ??_util_onewire_read_byte 0075                                high_priority_int@i 0020  
                          __size_of_io_initialize 00B6                                      __CFG_WRTC$ON 000000  
                                    __CFG_WRTD$ON 000000                                              _main 3CAA  
                                    ___ftpack@arg 0071                                      ___ftpack@exp 0074  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 003E  
                                   __CFG_BORV$190 000000                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A6  
                                   __CFG_IESO$OFF 000000   __end_of_util_transmit_space_between_dots_dashes 3CAA  
__size_of_util_transmit_space_between_dots_dashes 0010         ??_util_transmit_space_between_dots_dashes 0025  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3C9A  
                                    _sprintf$2424 00B9                                      ___ftmul@cntr 0087  
                                    ___param_bank 000000                                      ___ftmul@sign 0088  
                                    ___fttol@exp1 009E                                      ___fttol@lval 009A  
                              _util_transmit_dash 3A5E                           util_getTemperature@sign 01A4  
                                           ?_main 0001               __end_of_util_waits_delay_hundred_us 3BBA  
                     _util_waits_delay_hundred_us 3B8A                                   __end_of___awdiv 3492  
                                           _ADRES 000FC3                                   __end_of___ftadd 219C  
                                           STR_10 7FD6                                             STR_11 7FCC  
                                           STR_12 7FB2                                             STR_20 7FF6  
                                           STR_13 7FE7                                             STR_21 7FD1  
                                           STR_22 7FA9                                             STR_14 7FFA  
                                           STR_30 7FAB                                             STR_15 7FA8  
                                           STR_23 7FEC                                             STR_31 7FB1  
                                           STR_24 7F92                                             STR_16 7FC0  
                                           STR_32 7FB7                                             STR_40 7F97  
                                           STR_17 7FA7                                             STR_25 7FE2  
                                           STR_33 7F91                                             STR_41 7FC3  
                                           STR_18 7FF0                                             STR_26 7FEB  
                                           STR_34 7FDB                                             STR_42 7F89  
                                           STR_19 7FE6                                             STR_27 7FE1  
                                           STR_35 7FD5                                             STR_43 7F90  
                                           STR_28 7FCA                                             STR_36 7FCF  
                                 __end_of___awmod 3526                                             STR_37 7FC9  
                                           STR_29 7FA5                                             STR_38 7FBD  
                                           STR_39 7F82                                   __end_of___ftdiv 2D76  
                                 __end_of___ftneg 3BEA                                   __end_of___lldiv 33EC  
                               ?_low_priority_int 0001                                   __end_of___ftmul 2AF2  
                                 ___awdiv@divisor 0077                                   __end_of___llmod 35BA  
                                 __end_of___ftsub 3872                                   __end_of___fttol 2C36  
                                 __end_of___ltdiv 36B0                       __size_of_util_onewire_reset 0042  
                                           i2l223 223C                                             i2l235 2382  
                                   __CFG_WDTEN$ON 000000                                             i2l942 3696  
                                           i2l937 36A2                                   ___awdiv@counter 0024  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0060  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0029                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 3046                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 0025  
                                 __end_of_dpowers 7F1D                                             _scale 13EA  
                                 __end_of_isdigit 3C7A                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0075                          ??_util_onewire_write_bit 0022  
                       util_waits_delay_secs@secs 0073                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
               high_priority_int@noise_mean_value 0039                                             status 000FD8  
                     __end_of_util_waits_delay_ms 3B8A                                   __end_of_sprintf 0C48  
                          _util_timer1_initialize 3C14                              ??_util_transmit_dash 0025  
                         util_waits_delay_hours@i 007A                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 3872                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3CB6                      __end_of_util_transmit_letter 1C88  
                                   _io_initialize 3286                                            ??_main 002D  
                                   ___fttol@sign1 0099                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 0168                        util_onewire_read_bit@value 0023  
                       util_getSolarCurrent@value 00A1                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0089                                  ___awdiv@dividend 0075  
                                __end_of___awtoft 39C0                                  __end_of___ftpack 2F7C  
                  high_priority_int@valid_samples 002D                                  __end_of___lltoft 3718  
                                          i2l4600 2228                                            i2l4602 222C  
                                          i2l4614 2258                                            i2l4570 3670  
                                          i2l4650 2318                                            i2l4642 22EA  
                                          i2l4634 22BA                                            i2l4626 229A  
                                          i2l4660 2380                                            i2l4566 3662  
                                          i2l4646 2308                                            i2l4568 366C  
                                          i2l4656 234E                                            i2l4598 2218  
                                __end_of___lwtoft 3C14                   __size_of_util_onewire_read_byte 0194  
               __size_of_util_beacon_transmission 0112                         ?_util_beacon_transmission 00D2  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F44  
                        ?_util_onewire_write_byte 0073                                            ___ftge 31CE  
                      util_onewire_read_byte@bit0 0083                        util_onewire_read_byte@bit1 0085  
                      util_onewire_read_byte@bit2 0087                        util_onewire_read_byte@bit3 0089  
                      util_onewire_read_byte@bit4 008B                        util_onewire_read_byte@bit5 008D  
                      util_onewire_read_byte@bit6 008F                        util_onewire_read_byte@bit7 0091  
                         ??_util_waits_delay_mins 002A                           ??_util_waits_delay_secs 0025  
                                          ___wmul 3AF6                                         ??___awdiv 0024  
                                       ??___ftadd 0099                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 0022                                         ??___ftdiv 0026  
                                       ??___ftneg 0022                                         ??___lldiv 0022  
                                       ??___ftmul 002A                                         ??___llmod 0027  
                                       ??___ftsub 002D                                         ??___fttol 0094  
                                       ??___ltdiv 0007                       util_onewire_write_byte@bit0 0075  
                     util_onewire_write_byte@bit1 0077                       util_onewire_write_byte@bit2 0079  
                     util_onewire_write_byte@bit3 007B                       util_onewire_write_byte@bit4 007D  
                     util_onewire_write_byte@bit5 007F                       util_onewire_write_byte@bit6 0081  
                     util_onewire_write_byte@bit7 0083                                    ?_io_initialize 0001  
                                          _memset 3B28                                            _fround 1C88  
                                          clear_0 3898                                            clear_1 38A4  
                                ___awdiv@quotient 0026                                   ___awmod@divisor 0073  
                                 ___awmod@counter 0022                       util_waits_delay_hours@hours 0077  
                                          _strcat 38B8                                            _strcpy 3AC4  
                                          _strlen 377C                             ___ftmul@f3_as_product 0084  
                                    __pdataCOMRAM 0039                                         ??_isdigit 0022  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00B3                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 002D                   __size_of_util_onewire_write_bit 0034  
                                      __accesstop 0060                           __end_of__initialization 38AA  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 0093  
                                      ___ftadd@f2 0096                                        ___ftge@ff1 0071  
                                      ___ftge@ff2 0074                                     ___rparam_used 000001  
                                      ___ftdiv@f1 0079                                        ___ftdiv@f2 007C  
                                      ___ftdiv@f3 0080                          ??_util_getBatteryVoltage 002D  
                                      ___ftneg@f1 0071                                        ___awtoft@c 0076  
                                      ___ftmul@f1 007D                                        ___ftmul@f2 0080  
                                      ___ftsub@f1 009F                                        ___ftsub@f2 00A2  
                                      ___fttol@f1 0090                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 2F7C                                        ___lltoft@c 0076  
                        main_loop@battery_current 00E1                                     __end_of_scale 1898  
                          _util_onewire_read_byte 23BE                                        ___lwtoft@c 0076  
                                      __div_to_l_ 2842                          main_loop@battery_voltage 00E3  
                  __size_of_util_onewire_read_bit 0032                     __end_of_util_onewire_read_bit 3AC4  
                                 __div_to_l_@exp1 0027                                   __div_to_l_@cntr 0026  
                                         ??_scale 002D                                   __div_to_l_@quot 0022  
                                    sprintf@width 00C0         __end_of_util_transmit_space_between_words 3C8A  
      __size_of_util_transmit_space_between_words 0010               ??_util_transmit_space_between_words 0025  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 3C7A  
                                      __pbssBANK2 0200                                __size_of_main_loop 008C  
                                 __CFG_PLLCFG$OFF 000000                              _util_transmit_letter 1898  
                                   __div_to_l_@f1 0071                                     __div_to_l_@f2 0074  
                              __CFG_CCP2MX$PORTC1 000000                             ?_util_getSolarCurrent 009F  
                                         ?___ftge 0071                                   ??_io_initialize 0022  
                    util_onewire_write_bit@bit_in 0071                                           ?___wmul 0079  
                high_priority_int@sample_position 0035                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 39F6                                           ?_memset 0071  
                                         ?_fround 0089                                         ?___awtoft 0076  
                                       ?___ftpack 0071                                 _high_priority_int 0008  
                                       ?___lltoft 0076                                           ?_strcat 0071  
                                         ?_strcpy 0071                                           ?_strlen 0071  
                                       ?___lwtoft 0076                                ?_high_priority_int 0001  
                             ??_high_priority_int 000B                      __size_of_util_getTemperature 07A2  
                         ?_util_timer1_initialize 0001                             ?_util_transmit_letter 0001  
            __size_of_util_waits_delay_hundred_us 0030                   __size_of_util_getBatteryCurrent 00CA  
                       __size_of_low_priority_int 008E                              util_waits_delay_ms@i 0023  
                    util_waits_delay_mins@minutes 0075                                   __CFG_PWRTEN$OFF 000000  
                               __end_of__npowers_ 7F6B                                           __Hparam 0000  
                 __size_of_util_getBatteryVoltage 00BE                                        _scale$2423 008C  
            __end_of_util_transmit_morse_sequence 377C             __size_of_util_transmit_morse_sequence 0064  
                    _util_transmit_morse_sequence 3718                                           __Lparam 0000  
                      util_getTemperature@bit_mem 0100       __end_of_util_transmit_space_between_letters 3C9A  
    __size_of_util_transmit_space_between_letters 0010             ??_util_transmit_space_between_letters 0025  
            ?_util_transmit_space_between_letters 0001               _util_transmit_space_between_letters 3C8A  
                                 __size_of___ftge 00B8                                           ___awdiv 33EC  
                                         ___ftadd 1F34                                           ___awmod 3492  
                                         ___ftdiv 2C36                                           ___ftneg 3BBA  
                                         ___lldiv 333C                                   __size_of___wmul 0032  
                                         ___ftmul 29A0                          ??_util_waits_delay_hours 0079  
                                         ___llmod 3526                                           ___ftsub 3826  
                     util_getTemperature@byte_mem 0190                                           ___fttol 2AF2  
                                         ___ltdiv 3646                         __end_of_high_priority_int 23BE  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 3980  
                               __end_of_main_loop 3646                                           __pcinit 3872  
                                      ??___awtoft 0025                                        ??___ftpack 0022  
                                 __size_of_memset 0032                                   __size_of_fround 02AC  
                                         __ramtop 0600                                        _initialize 3CB6  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0025  
                                         __ptext0 3CAA                                           __ptext1 35BA  
                                         __ptext2 38FC                                           __ptext3 39C0  
                                         __ptext4 0C48                                           __ptext5 37D2  
                                         __ptext6 2552                                           __ptext7 39F6  
                                         __ptext8 393E                                           __ptext9 23BE  
                                      ??___lwtoft 0025                                   __size_of_strcat 0044  
                                 __size_of_strcpy 0032                                   __size_of_strlen 0056  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0071  
                                         _dpowers 7EF5                       util_getTemperature@num_byte 01C5  
                                         _isdigit 3C5C                                  ___awmod@dividend 0071  
                    util_onewire_write_byte@value 0073                  ??_util_transmit_buzzer_1ms_cycle 0025  
                 ?_util_transmit_buzzer_1ms_cycle 0001                    __end_of_util_timer1_initialize 3C3A  
                            main_loop@temperature 00DC                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0029                                    __pintcode_body 219C  
                            end_of_initialization 38AA                      util_waits_delay_hundred_us@i 0023  
                                         memset@c 0073                                           memset@n 0075  
                                         memset@p 0022                                     __Lmediumconst 7EF4  
                                         int_func 219C                       __size_of_util_transmit_dash 0034  
                                 ___lldiv@divisor 0075                                  ___ltdiv@dividend 0001  
                          ??_util_getSolarCurrent 002D                                   ___lldiv@counter 0026  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 0030                                           postinc0 000FEE  
                                         postinc2 000FDE             util_beacon_transmission@solar_current 00D5  
                  __size_of_util_waits_delay_mins 0036                                    __tdiv_to_l_@f1 0071  
                                  __tdiv_to_l_@f2 0074                    __size_of_util_waits_delay_secs 0054  
                   __end_of_util_waits_delay_mins 39F6                            _util_getBatteryCurrent 3046  
                   __end_of_util_waits_delay_secs 3826                                           strlen@s 0071  
                                   ??__tdiv_to_l_ 0022                                         _PORTAbits 000F80  
                                       _PORTBbits 000F81                                         _PORTDbits 000F83  
                         high_priority_int@sample 001E                            _util_getBatteryVoltage 3110  
                __size_of_util_onewire_write_byte 0188                          _util_getTemperature$2420 01B0  
                        _util_getTemperature$2417 01A7                          _util_getTemperature$2418 01AA  
                        _util_getTemperature$2419 01AD                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ___ltdiv@quotient 0007                            ??_util_transmit_letter 002B  
                                     ___ftdiv@exp 0083             util_beacon_transmission@BEACON_BUFFER 0180  
                             __size_of__div_to_l_ 015E                                       ___ftmul@exp 0083  
                         ?_util_onewire_read_byte 0073                                 _util_transmit_dot 3A2A  
                      __size_of_high_priority_int 23B6                                    __end_of___ftge 3286  
                 __size_of_util_waits_delay_hours 0042                                    __end_of___wmul 3B28  
                              ?_util_transmit_dot 0001                                     __pidataCOMRAM 3CC0  
                                     ?_initialize 0001                                    __end_of_memset 3B5A  
                                  __end_of_fround 1F34                                    __end_of_strcat 38FC  
                                  __end_of_strcpy 3AF6                                    __end_of_strlen 37D2  
               util_waits_delay_hundred_us@hun_us 0071                               start_initialization 3872  
                             ??_util_transmit_dot 0025                            util_waits_delay_mins@i 002B  
                          util_waits_delay_secs@i 0026                            util_waits_delay_secs@j 0028  
                             __end_of__tdiv_to_l_ 2842                          _util_beacon_transmission 2D76  
             util_beacon_transmission@temperature 00D9                                  _low_priority_int 0018  
                                 ___llmod@divisor 007D                                   ___llmod@counter 0027  
                             util_transmit_dash@i 0025                    __end_of_util_onewire_read_byte 2552  
                       __end_of_util_transmit_dot 3A5E                           ?_util_onewire_write_bit 0071  
                                        ??___ftge 0022                                          ??___wmul 0028  
                             _util_getTemperature 0C48                                          ??_memset 0022  
                                        ??_fround 002D                                     sprintf@tmpval 00C2  
                                        ??_strcat 0022                                          ??_strcpy 0022  
                                        ??_strlen 0022                      ?_util_waits_delay_hundred_us 0071  
                                      fround@prec 0092                                 __size_of___awtoft 0040  
                               __size_of___ftpack 00F4                                 __size_of___lltoft 0068  
                                     __pbssCOMRAM 002D                                 __size_of___lwtoft 002A  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$2063 0023                             _util_onewire_read_bit 3A92  
                            ?_util_getTemperature 009F                            _util_waits_delay_hours 38FC  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00BE  
                                     sprintf@fval 00CC             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00CF                               __size_of_initialize 000A  
                  __end_of_util_onewire_write_bit 3A2A                                         __pintcode 0008  
                                   __pmediumconst 7EF4                                          ?___awdiv 0075  
                                        ?___ftadd 0093                                          ?___awmod 0071  
                                        ?___ftdiv 0079                                          ?___ftneg 0071  
                                        ?___lldiv 0071                                          ?___ftmul 007D  
                                        ?___llmod 0079                                          ?___ftsub 009F  
                                       __npowers_ 7F44                                          ?___fttol 0090  
                                        ?___ltdiv 0001                             __end_of_io_initialize 333C  
                                     __pintcodelo 0018                                  __CFG_PRICLKEN$ON 000000  
                                     __tdiv_to_l_ 26DA                                      ??__div_to_l_ 0022  
                         _util_onewire_write_byte 2552                                          ?_isdigit 0001  
                                       _main_loop 35BA                     ??_util_waits_delay_hundred_us 0022  
      high_priority_int@cycles_transmitter_active 0031                               _util_waits_delay_ms 3B5A  
                           ??_util_getTemperature 00A2                                _util_onewire_reset 393E  
                                        ?_sprintf 00A5                                    __size_of_scale 04AE  
                     util_getBatteryVoltage@value 008C                                    ___wmul@product 0028  
                                        _LATAbits 000F89                                          _LATBbits 000F8A  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0071  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 0034                                          i2u433_40 2264  
                                 ___ltdiv@divisor 0004                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 29A0                                          i2u428_40 2202  
                                        i2u429_48 2204            __end_of_util_transmit_buzzer_1ms_cycle 3C5C  
         __size_of_util_transmit_buzzer_1ms_cycle 0022                    _util_transmit_buzzer_1ms_cycle 3C3A  
                         ?_util_getBatteryCurrent 009F                                   ___ltdiv@counter 000A  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 0071           util_beacon_transmission@battery_current 00D7  
                         ?_util_getBatteryVoltage 0089                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0079                              ??_util_onewire_reset 0022  
                      util_transmit_letter@letter 002B                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00D2                            ?_util_onewire_read_bit 0071  
                     util_getBatteryCurrent@value 00A1                                         copy_data0 3886  
                           util_waits_delay_ms@ms 0071                        __end_of_util_transmit_dash 3A92  
          high_priority_int@is_transmitter_active 002F                    __end_of_util_getBatteryCurrent 3110  
                                        __Hrparam 0000                                util_transmit_dot@i 0025  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 0022  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
                  __end_of_util_getBatteryVoltage 31CE                                  __size_of___awdiv 00A6  
                                __size_of___ftadd 0268                                  __size_of___awmod 0094  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0030  
                                __size_of___lldiv 00B0                                  __size_of___ftmul 0152  
                       ??_util_onewire_write_byte 0022                                  __size_of___llmod 0094  
                                __size_of___ftsub 004C                                  __size_of___fttol 0144  
                                __size_of___ltdiv 006A                                      ??_initialize 0022  
                                        ___awtoft 3980                                          ___ftpack 2E88  
                                     _fround$2421 008F                                       _fround$2422 008C  
                        __end_of_low_priority_int 00A6                                          ___lltoft 36B0  
                      ??_util_beacon_transmission 002D                             _util_waits_delay_mins 39C0  
                           _util_waits_delay_secs 37D2                                        _ANSELAbits 000F38  
                                        ___lwtoft 3BEA                                        _ANSELBbits 000F39  
                                      _ANSELDbits 000F3B                                        sprintf@exp 00CA  
                                      sprintf@val 00C6                                        strcat@from 0073  
                                __size_of_isdigit 001E                                          __ptext10 3A92  
                                        __ptext11 2C36                                          __ptext20 3C8A  
                                        __ptext12 3980                                          __ptext21 3718  
                                        __ptext13 2F7C                                          __ptext30 38B8  
                                        __ptext22 3C9A                                          __ptext14 3110  
                                        __ptext31 00AA                                          __ptext23 3A2A  
                                        __ptext15 3046                                          __ptext40 2842  
                                        __ptext32 13EA                                          __ptext24 3A5E  
                                        __ptext16 3BEA                                          __ptext41 36B0  
                                        __ptext33 3C5C                                          __ptext25 3B5A  
                                        __ptext17 2D76                                          __ptext50 3B28  
                                        __ptext42 3526                                          __ptext34 1C88  
                                        __ptext26 3C3A                                          __ptext18 1898  
                                        __ptext51 3CB6                                          __ptext43 333C  
                                        __ptext35 3AF6                                          __ptext27 3B8A  
                                        __ptext19 3C7A                                          __ptext52 3C14  
                                        __ptext44 2AF2                                          __ptext36 29A0  
                                        __ptext28 377C                                          __ptext53 3286  
                                        __ptext45 3826                                          __ptext37 3492  
                                        __ptext29 3AC4                                          __ptext46 1F34  
                                        __ptext38 33EC                                          __ptext47 2E88  
                                        __ptext39 26DA                                          __ptext56 3646  
                                        __ptext48 3BBA                                          __ptext49 31CE  
                                        __powers_ 7F1D                                  __size_of_sprintf 0B9E  
                                      strcpy@from 0073                     __size_of_util_transmit_letter 03F0  
                util_getSolarCurrent@solarCurrent 00A4                                     __size_of_main 000C  
                      util_onewire_reset@presence 0023                                __end_of_initialize 3CC0  
                                        int$flags 003E                     ?_util_transmit_morse_sequence 0073  
                   util_getBatteryVoltage@voltage 008F                             _tmr1_interrupt_number 0037  
                        ??_util_timer1_initialize 0022                                       ??_main_loop 002D  
                                      _INTCONbits 000FF2                           ?_util_waits_delay_hours 0077  
                                        isdigit@c 0024                                          memset@p1 0071  
                          main_loop@solar_current 00DF                                          scale@scl 008F  
                 __end_of_util_onewire_write_byte 26DA                                          intlevel1 0000  
                                        intlevel2 0000                                         sprintf@ap 00BC  
                                __tdiv_to_l_@exp1 002A                                  __tdiv_to_l_@cntr 0029  
                                       sprintf@sp 00A5                                  __tdiv_to_l_@quot 0025  
                                    _VREFCON0bits 000F42                                  ___lldiv@dividend 0071  
                          ?_util_waits_delay_mins 0075                            ?_util_waits_delay_secs 0073  
                                    ?__tdiv_to_l_ 0071                                          sprintf@c 00D1  
                                        sprintf@f 00A7                                          strcat@cp 0022  
                                        strcat@to 0071                    __end_of_util_waits_delay_hours 393E  
                                ___lldiv@quotient 0022                                          strcpy@cp 0022  
                                        strlen@cp 0024                                          strcpy@to 0071  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
        high_priority_int@times_thresold_exceeded 0033              util_getBatteryCurrent@batteryCurrent 00A4  
