

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Apr 12 20:27:57 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 1.40
    79                           ; Generated 01/12/2016 GMT
    80                           ; 
    81                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F45K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  003E0E                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for high_priority_int@noise_mean_value
   118  003E0E  00                 	db	0
   119  003E0F  7D                 	db	125
   120  003E10  00                 	db	0
   121                           
   122                           ;initializer for high_priority_int@activation_thresold
   123  003E11  7D00               	dw	32000
   124                           
   125                           	psect	mediumconst
   126  007EF4                     __pmediumconst:
   127                           	opt stack 0
   128  007EF4  00                 	db	0
   129  007EF5                     _dpowers:
   130                           	opt stack 0
   131  007EF5  0001               	dw	1
   132  007EF7  0000               	dw	0
   133  007EF9  000A               	dw	10
   134  007EFB  0000               	dw	0
   135  007EFD  0064               	dw	100
   136  007EFF  0000               	dw	0
   137  007F01  03E8               	dw	1000
   138  007F03  0000               	dw	0
   139  007F05  2710               	dw	10000
   140  007F07  0000               	dw	0
   141  007F09  86A0               	dw	34464
   142  007F0B  0001               	dw	1
   143  007F0D  4240               	dw	16960
   144  007F0F  000F               	dw	15
   145  007F11  9680               	dw	38528
   146  007F13  0098               	dw	152
   147  007F15  E100               	dw	57600
   148  007F17  05F5               	dw	1525
   149  007F19  CA00               	dw	51712
   150  007F1B  3B9A               	dw	15258
   151  007F1D                     __end_of_dpowers:
   152                           	opt stack 0
   153  007F1D                     __npowers_:
   154                           	opt stack 0
   155  007F1D  00                 	db	0
   156  007F1E  80                 	db	128
   157  007F1F  3F                 	db	63
   158  007F20  CD                 	db	205
   159  007F21  CC                 	db	204
   160  007F22  3D                 	db	61
   161  007F23  D7                 	db	215
   162  007F24  23                 	db	35
   163  007F25  3C                 	db	60
   164  007F26  12                 	db	18
   165  007F27  83                 	db	131
   166  007F28  3A                 	db	58
   167  007F29  B7                 	db	183
   168  007F2A  D1                 	db	209
   169  007F2B  38                 	db	56
   170  007F2C  C6                 	db	198
   171  007F2D  27                 	db	39
   172  007F2E  37                 	db	55
   173  007F2F  38                 	db	56
   174  007F30  86                 	db	134
   175  007F31  35                 	db	53
   176  007F32  C0                 	db	192
   177  007F33  D6                 	db	214
   178  007F34  33                 	db	51
   179  007F35  CC                 	db	204
   180  007F36  2B                 	db	43
   181  007F37  32                 	db	50
   182  007F38  70                 	db	112
   183  007F39  89                 	db	137
   184  007F3A  30                 	db	48
   185  007F3B  E7                 	db	231
   186  007F3C  DB                 	db	219
   187  007F3D  2E                 	db	46
   188  007F3E  E5                 	db	229
   189  007F3F  3C                 	db	60
   190  007F40  1E                 	db	30
   191  007F41  42                 	db	66
   192  007F42  A2                 	db	162
   193  007F43  0D                 	db	13
   194  007F44                     __end_of__npowers_:
   195                           	opt stack 0
   196  007F44                     __powers_:
   197                           	opt stack 0
   198  007F44  00                 	db	0
   199  007F45  80                 	db	128
   200  007F46  3F                 	db	63
   201  007F47  00                 	db	0
   202  007F48  20                 	db	32
   203  007F49  41                 	db	65
   204  007F4A  00                 	db	0
   205  007F4B  C8                 	db	200
   206  007F4C  42                 	db	66
   207  007F4D  00                 	db	0
   208  007F4E  7A                 	db	122
   209  007F4F  44                 	db	68
   210  007F50  40                 	db	64
   211  007F51  1C                 	db	28
   212  007F52  46                 	db	70
   213  007F53  50                 	db	80
   214  007F54  C3                 	db	195
   215  007F55  47                 	db	71
   216  007F56  24                 	db	36
   217  007F57  74                 	db	116
   218  007F58  49                 	db	73
   219  007F59  97                 	db	151
   220  007F5A  18                 	db	24
   221  007F5B  4B                 	db	75
   222  007F5C  BC                 	db	188
   223  007F5D  BE                 	db	190
   224  007F5E  4C                 	db	76
   225  007F5F  6B                 	db	107
   226  007F60  6E                 	db	110
   227  007F61  4E                 	db	78
   228  007F62  03                 	db	3
   229  007F63  15                 	db	21
   230  007F64  50                 	db	80
   231  007F65  79                 	db	121
   232  007F66  AD                 	db	173
   233  007F67  60                 	db	96
   234  007F68  F3                 	db	243
   235  007F69  49                 	db	73
   236  007F6A  71                 	db	113
   237  007F6B                     __end_of__powers_:
   238                           	opt stack 0
   239  0000                     _ANSELAbits	set	3896
   240  0000                     _ANSELBbits	set	3897
   241  0000                     _ANSELDbits	set	3899
   242  0000                     _CCPTMRS0bits	set	3913
   243  0000                     _VREFCON0bits	set	3906
   244  0000                     _ADRES	set	4035
   245  0000                     _ADCON0bits	set	4034
   246  0000                     _ADCON1	set	4033
   247  0000                     _ADCON2	set	4032
   248  0000                     _CCP2CONbits	set	3942
   249  0000                     _CCPR2L	set	3943
   250  0000                     _INTCONbits	set	4082
   251  0000                     _IPR1bits	set	3999
   252  0000                     _LATAbits	set	3977
   253  0000                     _LATBbits	set	3978
   254  0000                     _LATDbits	set	3980
   255  0000                     _PIE1bits	set	3997
   256  0000                     _PIR1bits	set	3998
   257  0000                     _PORTAbits	set	3968
   258  0000                     _PORTBbits	set	3969
   259  0000                     _PORTDbits	set	3971
   260  0000                     _PR2	set	4027
   261  0000                     _PSTR2CONbits	set	3939
   262  0000                     _RCONbits	set	4048
   263  0000                     _T1CONbits	set	4045
   264  0000                     _T2CONbits	set	4026
   265  0000                     _TMR1H	set	4047
   266  0000                     _TMR1L	set	4046
   267  0000                     _TMR2	set	4028
   268  0000                     _TRISAbits	set	3986
   269  0000                     _TRISBbits	set	3987
   270  0000                     _TRISDbits	set	3989
   271  0000                     _WPUB	set	3937
   272  0000                     _RBPU	set	32655
   273  007F6B                     STR_2:
   274  007F6B  20                 	db	32
   275  007F6C  25                 	db	37
   276  007F6D  2E                 	db	46
   277  007F6E  31                 	db	49	;'1'
   278  007F6F  66                 	db	102	;'f'
   279  007F70  20                 	db	32
   280  007F71  25                 	db	37
   281  007F72  2E                 	db	46
   282  007F73  31                 	db	49	;'1'
   283  007F74  66                 	db	102	;'f'
   284  007F75  20                 	db	32
   285  007F76  25                 	db	37
   286  007F77  33                 	db	51	;'3'
   287  007F78  2E                 	db	46
   288  007F79  30                 	db	48	;'0'
   289  007F7A  64                 	db	100	;'d'
   290  007F7B  20                 	db	32
   291  007F7C  25                 	db	37
   292  007F7D  33                 	db	51	;'3'
   293  007F7E  2E                 	db	46
   294  007F7F  30                 	db	48	;'0'
   295  007F80  64                 	db	100	;'d'
   296  007F81  00                 	db	0
   297  007F82                     STR_39:
   298  007F82  2D                 	db	45
   299  007F83  2D                 	db	45
   300  007F84  2E                 	db	46
   301  007F85  2E                 	db	46
   302  007F86  2D                 	db	45
   303  007F87  2D                 	db	45
   304  007F88  00                 	db	0
   305  007F89                     STR_42:
   306  007F89  2E                 	db	46
   307  007F8A  2D                 	db	45
   308  007F8B  2E                 	db	46
   309  007F8C  2D                 	db	45
   310  007F8D  2E                 	db	46
   311  007F8E  2D                 	db	45
   312  007F8F  00                 	db	0
   313  007F90                     STR_43:
   314  007F90  2D                 	db	45
   315  007F91  2E                 	db	46
   316  007F92  2E                 	db	46
   317  007F93  2E                 	db	46
   318  007F94  2E                 	db	46
   319  007F95  2D                 	db	45
   320  007F96  00                 	db	0
   321  007F97                     STR_40:
   322  007F97  2E                 	db	46
   323  007F98  2E                 	db	46
   324  007F99  2D                 	db	45
   325  007F9A  2D                 	db	45
   326  007F9B  2E                 	db	46
   327  007F9C  2E                 	db	46
   328  007F9D  00                 	db	0
   329  007F9E                     STR_1:
   330  007F9E  45                 	db	69	;'E'
   331  007F9F  41                 	db	65	;'A'
   332  007FA0  53                 	db	83	;'S'
   333  007FA1  41                 	db	65	;'A'
   334  007FA2  54                 	db	84	;'T'
   335  007FA3  32                 	db	50	;'2'
   336  007FA4  00                 	db	0
   337  007FA5                     STR_29:
   338  007FA5  2D                 	db	45
   339  007FA6  2D                 	db	45
   340  007FA7  2D                 	db	45
   341  007FA8  2D                 	db	45
   342  007FA9  2D                 	db	45
   343  007FAA  00                 	db	0
   344  007FAB                     STR_30:
   345  007FAB  2E                 	db	46
   346  007FAC  2D                 	db	45
   347  007FAD  2D                 	db	45
   348  007FAE  2D                 	db	45
   349  007FAF  2D                 	db	45
   350  007FB0  00                 	db	0
   351  007FB1                     STR_31:
   352  007FB1  2E                 	db	46
   353  007FB2  2E                 	db	46
   354  007FB3  2D                 	db	45
   355  007FB4  2D                 	db	45
   356  007FB5  2D                 	db	45
   357  007FB6  00                 	db	0
   358  007FB7                     STR_32:
   359  007FB7  2E                 	db	46
   360  007FB8  2E                 	db	46
   361  007FB9  2E                 	db	46
   362  007FBA  2D                 	db	45
   363  007FBB  2D                 	db	45
   364  007FBC  00                 	db	0
   365  007FBD                     STR_38:
   366  007FBD  2D                 	db	45
   367  007FBE  2D                 	db	45
   368  007FBF  2D                 	db	45
   369  007FC0  2D                 	db	45
   370  007FC1  2E                 	db	46
   371  007FC2  00                 	db	0
   372  007FC3                     STR_41:
   373  007FC3  2D                 	db	45
   374  007FC4  2E                 	db	46
   375  007FC5  2E                 	db	46
   376  007FC6  2D                 	db	45
   377  007FC7  2E                 	db	46
   378  007FC8  00                 	db	0
   379  007FC9                     STR_37:
   380  007FC9  2D                 	db	45
   381  007FCA  2D                 	db	45
   382  007FCB  2D                 	db	45
   383  007FCC  2E                 	db	46
   384  007FCD  2E                 	db	46
   385  007FCE  00                 	db	0
   386  007FCF                     STR_36:
   387  007FCF  2D                 	db	45
   388  007FD0  2D                 	db	45
   389  007FD1  2E                 	db	46
   390  007FD2  2E                 	db	46
   391  007FD3  2E                 	db	46
   392  007FD4  00                 	db	0
   393  007FD5                     STR_35:
   394  007FD5  2D                 	db	45
   395  007FD6  2E                 	db	46
   396  007FD7  2E                 	db	46
   397  007FD8  2E                 	db	46
   398  007FD9  2E                 	db	46
   399  007FDA  00                 	db	0
   400  007FDB                     STR_34:
   401  007FDB  2E                 	db	46
   402  007FDC  2E                 	db	46
   403  007FDD  2E                 	db	46
   404  007FDE  2E                 	db	46
   405  007FDF  2E                 	db	46
   406  007FE0  00                 	db	0
   407  007FE1                     STR_27:
   408  007FE1  2D                 	db	45
   409  007FE2  2E                 	db	46
   410  007FE3  2D                 	db	45
   411  007FE4  2D                 	db	45
   412  007FE5  00                 	db	0
   413  007FE6                     STR_19:
   414  007FE6  2D                 	db	45
   415  007FE7  2D                 	db	45
   416  007FE8  2E                 	db	46
   417  007FE9  2D                 	db	45
   418  007FEA  00                 	db	0
   419  007FEB                     STR_26:
   420  007FEB  2D                 	db	45
   421  007FEC  2E                 	db	46
   422  007FED  2E                 	db	46
   423  007FEE  2D                 	db	45
   424  007FEF  00                 	db	0
   425  007FF0                     STR_18:
   426  007FF0  2E                 	db	46
   427  007FF1  2D                 	db	45
   428  007FF2  2D                 	db	45
   429  007FF3  2E                 	db	46
   430  007FF4  00                 	db	0
   431  007FF5                     STR_5:
   432  007FF5  2D                 	db	45
   433  007FF6  2E                 	db	46
   434  007FF7  2D                 	db	45
   435  007FF8  2E                 	db	46
   436  007FF9  00                 	db	0
   437  007FFA                     STR_14:
   438  007FFA  2E                 	db	46
   439  007FFB  2D                 	db	45
   440  007FFC  2E                 	db	46
   441  007FFD  2E                 	db	46
   442  007FFE  00                 	db	0
   443  0000                     
   444                           ; #config settings
   445  007FFF  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           	psect	cinit
   448  003A28                     __pcinit:
   449                           	opt stack 0
   450  003A28                     start_initialization:
   451                           	opt stack 0
   452  003A28                     __initialization:
   453                           	opt stack 0
   454                           
   455                           ; Initialize objects allocated to COMRAM (5 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457  003A28  0E0E               	movlw	low __pidataCOMRAM
   458  003A2A  6EF6               	movwf	tblptrl,c
   459  003A2C  0E3E               	movlw	high __pidataCOMRAM
   460  003A2E  6EF7               	movwf	tblptrh,c
   461  003A30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462  003A32  6EF8               	movwf	tblptru,c
   463  003A34  EE00  F038         	lfsr	0,__pdataCOMRAM
   464  003A38  EE10 F005          	lfsr	1,5
   465  003A3C                     copy_data0:
   466  003A3C  0009               	tblrd		*+
   467  003A3E  CFF5 FFEE          	movff	tablat,postinc0
   468  003A42  50E5               	movf	postdec1,w,c
   469  003A44  50E1               	movf	fsr1l,w,c
   470  003A46  E1FA               	bnz	copy_data0
   471                           
   472                           ; Clear objects allocated to BANK2 (200 bytes)
   473  003A48  EE02  F000         	lfsr	0,__pbssBANK2
   474  003A4C  0EC8               	movlw	200
   475  003A4E                     clear_0:
   476  003A4E  6AEE               	clrf	postinc0,c
   477  003A50  06E8               	decf	wreg,f,c
   478  003A52  E1FD               	bnz	clear_0
   479                           
   480                           ; Clear objects allocated to COMRAM (11 bytes)
   481  003A54  EE00  F02D         	lfsr	0,__pbssCOMRAM
   482  003A58  0E0B               	movlw	11
   483  003A5A                     clear_1:
   484  003A5A  6AEE               	clrf	postinc0,c
   485  003A5C  06E8               	decf	wreg,f,c
   486  003A5E  E1FD               	bnz	clear_1
   487  003A60                     end_of_initialization:
   488                           	opt stack 0
   489  003A60                     __end_of__initialization:
   490                           	opt stack 0
   491  003A60  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   492  003A62  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   493  003A64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   494  003A66  6EF8               	movwf	tblptru,c
   495  003A68  0100               	movlb	0
   496  003A6A  EFF9  F01E         	goto	_main	;jump to C main() function
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	bssCOMRAM
   507  00002D                     __pbssCOMRAM:
   508                           	opt stack 0
   509  00002D                     high_priority_int@cycles_transmitter_active:
   510                           	opt stack 0
   511  00002D                     	ds	2
   512  00002F                     high_priority_int@sample_position:
   513                           	opt stack 0
   514  00002F                     	ds	2
   515  000031                     high_priority_int@times_thresold_exceeded:
   516                           	opt stack 0
   517  000031                     	ds	2
   518  000033                     high_priority_int@tmr1_interrupt_number:
   519                           	opt stack 0
   520  000033                     	ds	2
   521  000035                     high_priority_int@valid_samples:
   522                           	opt stack 0
   523  000035                     	ds	2
   524  000037                     high_priority_int@is_transmitter_active:
   525                           	opt stack 0
   526  000037                     	ds	1
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536                           	psect	dataCOMRAM
   537  000038                     __pdataCOMRAM:
   538                           	opt stack 0
   539  000038                     high_priority_int@noise_mean_value:
   540                           	opt stack 0
   541  000038                     	ds	3
   542  00003B                     high_priority_int@activation_thresold:
   543                           	opt stack 0
   544  00003B                     	ds	2
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	bssBANK2
   555  000200                     __pbssBANK2:
   556                           	opt stack 0
   557  000200                     high_priority_int@samples:
   558                           	opt stack 0
   559  000200                     	ds	200
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           
   569                           	psect	cstackBANK1
   570  000100                     __pcstackBANK1:
   571                           	opt stack 0
   572  000100                     util_beacon_transmission@BEACON_MESSAGE:
   573                           	opt stack 0
   574  000100                     util_getTemperature@bit_mem:
   575                           	opt stack 0
   576                           
   577                           ; 144 bytes @ 0x0
   578  000100                     	ds	128
   579  000180                     util_beacon_transmission@BEACON_BUFFER:
   580                           	opt stack 0
   581                           
   582                           ; 64 bytes @ 0x80
   583  000180                     	ds	16
   584  000190                     util_getTemperature@byte_mem:
   585                           	opt stack 0
   586                           
   587                           ; 18 bytes @ 0x90
   588  000190                     	ds	18
   589  0001A2                     util_getTemperature@num_bit:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0xA2
   593  0001A2                     	ds	2
   594  0001A4                     util_getTemperature@sign:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0xA4
   598  0001A4                     	ds	3
   599  0001A7                     _util_getTemperature$2685:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0xA7
   603  0001A7                     	ds	3
   604  0001AA                     _util_getTemperature$2686:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0xAA
   608  0001AA                     	ds	3
   609  0001AD                     _util_getTemperature$2687:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0xAD
   613  0001AD                     	ds	3
   614  0001B0                     _util_getTemperature$2688:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0xB0
   618  0001B0                     	ds	3
   619  0001B3                     util_getTemperature@shift_reg_bit0:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xB3
   623  0001B3                     	ds	2
   624  0001B5                     util_getTemperature@shift_reg_bit1:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0xB5
   628  0001B5                     	ds	2
   629  0001B7                     util_getTemperature@shift_reg_bit2:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0xB7
   633  0001B7                     	ds	2
   634  0001B9                     util_getTemperature@shift_reg_bit3:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0xB9
   638  0001B9                     	ds	2
   639  0001BB                     util_getTemperature@shift_reg_bit4:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0xBB
   643  0001BB                     	ds	2
   644  0001BD                     util_getTemperature@shift_reg_bit5:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xBD
   648  0001BD                     	ds	2
   649  0001BF                     util_getTemperature@shift_reg_bit6:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xBF
   653  0001BF                     	ds	1
   654  0001C0                     util_beacon_transmission@i:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0xC0
   658  0001C0                     	ds	1
   659  0001C1                     util_getTemperature@shift_reg_bit7:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xC1
   663  0001C1                     	ds	2
   664  0001C3                     util_getTemperature@shift_reg_bit_temp:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xC3
   668  0001C3                     	ds	2
   669  0001C5                     util_getTemperature@num_byte:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xC5
   673  0001C5                     	ds	2
   674  0001C7                     util_getTemperature@bit_in_byte:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xC7
   678  0001C7                     	ds	2
   679  0001C9                     util_getTemperature@temperature:
   680                           	opt stack 0
   681                           
   682                           ; 3 bytes @ 0xC9
   683  0001C9                     	ds	3
   684  0001CC                     util_getTemperature@i:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xCC
   688  0001CC                     	ds	2
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1l	equ	0xFE1
   697                           
   698                           	psect	cstackBANK0
   699  000060                     __pcstackBANK0:
   700                           	opt stack 0
   701  000060                     ??_isdigit:
   702  000060                     ?_util_onewire_reset:
   703                           	opt stack 0
   704  000060                     ?_util_onewire_read_bit:
   705                           	opt stack 0
   706  000060                     ?_strlen:
   707                           	opt stack 0
   708  000060                     ?___awmod:
   709                           	opt stack 0
   710  000060                     ?___ftpack:
   711                           	opt stack 0
   712  000060                     ?___ftneg:
   713                           	opt stack 0
   714  000060                     ?__tdiv_to_l_:
   715                           	opt stack 0
   716  000060                     ?__div_to_l_:
   717                           	opt stack 0
   718  000060                     ?___lldiv:
   719                           	opt stack 0
   720  000060                     util_onewire_write_bit@bit_in:
   721                           	opt stack 0
   722  000060                     util_waits_delay_ms@ms:
   723                           	opt stack 0
   724  000060                     ___awmod@dividend:
   725                           	opt stack 0
   726  000060                     memset@p1:
   727                           	opt stack 0
   728  000060                     strcat@to:
   729                           	opt stack 0
   730  000060                     strcpy@to:
   731                           	opt stack 0
   732  000060                     strlen@s:
   733                           	opt stack 0
   734  000060                     __div_to_l_@f1:
   735                           	opt stack 0
   736  000060                     ___ftpack@arg:
   737                           	opt stack 0
   738  000060                     __tdiv_to_l_@f1:
   739                           	opt stack 0
   740  000060                     ___ftge@ff1:
   741                           	opt stack 0
   742  000060                     ___ftneg@f1:
   743                           	opt stack 0
   744  000060                     ___lldiv@dividend:
   745                           	opt stack 0
   746                           
   747                           ; 4 bytes @ 0x0
   748  000060                     	ds	1
   749  000061                     _isdigit$2319:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x1
   753  000061                     	ds	1
   754  000062                     ??_util_onewire_reset:
   755  000062                     ??_util_onewire_read_bit:
   756  000062                     ??_strlen:
   757  000062                     ??_util_waits_delay_ms:
   758  000062                     isdigit@c:
   759                           	opt stack 0
   760  000062                     util_onewire_write_byte@value:
   761                           	opt stack 0
   762  000062                     ___awmod@divisor:
   763                           	opt stack 0
   764  000062                     memset@c:
   765                           	opt stack 0
   766  000062                     strcat@from:
   767                           	opt stack 0
   768  000062                     strcpy@from:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x2
   772  000062                     	ds	1
   773  000063                     ___ftpack@exp:
   774                           	opt stack 0
   775  000063                     util_onewire_reset@presence:
   776                           	opt stack 0
   777  000063                     util_onewire_read_bit@value:
   778                           	opt stack 0
   779  000063                     util_waits_delay_ms@i:
   780                           	opt stack 0
   781  000063                     __div_to_l_@f2:
   782                           	opt stack 0
   783  000063                     __tdiv_to_l_@f2:
   784                           	opt stack 0
   785  000063                     ___ftge@ff2:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x3
   789  000063                     	ds	1
   790  000064                     ??_util_onewire_write_byte:
   791  000064                     ___awmod@counter:
   792                           	opt stack 0
   793  000064                     ___ftpack@sign:
   794                           	opt stack 0
   795  000064                     memset@n:
   796                           	opt stack 0
   797  000064                     strcat@cp:
   798                           	opt stack 0
   799  000064                     strcpy@cp:
   800                           	opt stack 0
   801  000064                     strlen@cp:
   802                           	opt stack 0
   803  000064                     ___lldiv@divisor:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x4
   807  000064                     	ds	1
   808  000065                     ??___ftpack:
   809  000065                     ?_util_onewire_read_byte:
   810                           	opt stack 0
   811  000065                     ___awmod@sign:
   812                           	opt stack 0
   813  000065                     util_waits_delay_secs@secs:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x5
   817  000065                     	ds	1
   818  000066                     ??__tdiv_to_l_:
   819  000066                     ??___ftge:
   820  000066                     ?___awdiv:
   821                           	opt stack 0
   822  000066                     util_transmit_morse_sequence@morse_sequence:
   823                           	opt stack 0
   824  000066                     ___awdiv@dividend:
   825                           	opt stack 0
   826  000066                     memset@p:
   827                           	opt stack 0
   828  000066                     __div_to_l_@quot:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x6
   832  000066                     	ds	1
   833  000067                     ??_util_waits_delay_secs:
   834  000067                     ??_util_onewire_read_byte:
   835  000067                     util_onewire_write_byte@bit0:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x7
   839  000067                     	ds	1
   840  000068                     ??_util_transmit_morse_sequence:
   841  000068                     ?___awtoft:
   842                           	opt stack 0
   843  000068                     ?___lltoft:
   844                           	opt stack 0
   845  000068                     ?___lwtoft:
   846                           	opt stack 0
   847  000068                     util_waits_delay_secs@i:
   848                           	opt stack 0
   849  000068                     ___awdiv@divisor:
   850                           	opt stack 0
   851  000068                     ___awtoft@c:
   852                           	opt stack 0
   853  000068                     ___lwtoft@c:
   854                           	opt stack 0
   855  000068                     ___lldiv@quotient:
   856                           	opt stack 0
   857  000068                     ___lltoft@c:
   858                           	opt stack 0
   859                           
   860                           ; 4 bytes @ 0x8
   861  000068                     	ds	1
   862  000069                     util_onewire_write_byte@bit1:
   863                           	opt stack 0
   864  000069                     __tdiv_to_l_@quot:
   865                           	opt stack 0
   866                           
   867                           ; 4 bytes @ 0x9
   868  000069                     	ds	1
   869  00006A                     ___awdiv@counter:
   870                           	opt stack 0
   871  00006A                     __div_to_l_@cntr:
   872                           	opt stack 0
   873  00006A                     util_transmit_morse_sequence@i:
   874                           	opt stack 0
   875  00006A                     util_waits_delay_secs@j:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xA
   879  00006A                     	ds	1
   880  00006B                     ___awdiv@sign:
   881                           	opt stack 0
   882  00006B                     ___awtoft@sign:
   883                           	opt stack 0
   884  00006B                     __div_to_l_@exp1:
   885                           	opt stack 0
   886  00006B                     util_onewire_write_byte@bit2:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0xB
   890  00006B                     	ds	1
   891  00006C                     ??___lltoft:
   892  00006C                     ?___ftdiv:
   893                           	opt stack 0
   894  00006C                     util_transmit_letter@letter:
   895                           	opt stack 0
   896  00006C                     ___lldiv@counter:
   897                           	opt stack 0
   898  00006C                     util_waits_delay_mins@minutes:
   899                           	opt stack 0
   900  00006C                     ___awdiv@quotient:
   901                           	opt stack 0
   902  00006C                     ___ftdiv@f1:
   903                           	opt stack 0
   904                           
   905                           ; 3 bytes @ 0xC
   906  00006C                     	ds	1
   907  00006D                     ?___llmod:
   908                           	opt stack 0
   909  00006D                     __tdiv_to_l_@cntr:
   910                           	opt stack 0
   911  00006D                     util_onewire_write_byte@bit3:
   912                           	opt stack 0
   913  00006D                     ___llmod@dividend:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0xD
   917  00006D                     	ds	1
   918  00006E                     ??_util_waits_delay_mins:
   919  00006E                     ?___wmul:
   920                           	opt stack 0
   921  00006E                     __tdiv_to_l_@exp1:
   922                           	opt stack 0
   923  00006E                     ___wmul@multiplier:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0xE
   927  00006E                     	ds	1
   928  00006F                     util_onewire_write_byte@bit4:
   929                           	opt stack 0
   930  00006F                     util_waits_delay_mins@i:
   931                           	opt stack 0
   932  00006F                     ___ftdiv@f2:
   933                           	opt stack 0
   934                           
   935                           ; 3 bytes @ 0xF
   936  00006F                     	ds	1
   937  000070                     ___lltoft@exp:
   938                           	opt stack 0
   939  000070                     ___wmul@multiplicand:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x10
   943  000070                     	ds	1
   944  000071                     util_onewire_write_byte@bit5:
   945                           	opt stack 0
   946  000071                     util_waits_delay_hours@hours:
   947                           	opt stack 0
   948  000071                     ___llmod@divisor:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x11
   952  000071                     	ds	1
   953  000072                     ??___ftdiv:
   954  000072                     ___wmul@product:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x12
   958  000072                     	ds	1
   959  000073                     ??_util_waits_delay_hours:
   960  000073                     util_onewire_write_byte@bit6:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x13
   964  000073                     	ds	1
   965  000074                     ?___ftmul:
   966                           	opt stack 0
   967  000074                     util_waits_delay_hours@i:
   968                           	opt stack 0
   969  000074                     ___ftmul@f1:
   970                           	opt stack 0
   971                           
   972                           ; 3 bytes @ 0x14
   973  000074                     	ds	1
   974  000075                     ___ftdiv@cntr:
   975                           	opt stack 0
   976  000075                     ___llmod@counter:
   977                           	opt stack 0
   978  000075                     util_onewire_write_byte@bit7:
   979                           	opt stack 0
   980  000075                     util_onewire_read_byte@bit0:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x15
   984  000075                     	ds	1
   985  000076                     ___ftdiv@f3:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x16
   989  000076                     	ds	1
   990  000077                     util_onewire_read_byte@bit1:
   991                           	opt stack 0
   992  000077                     ___ftmul@f2:
   993                           	opt stack 0
   994                           
   995                           ; 3 bytes @ 0x17
   996  000077                     	ds	2
   997  000079                     ___ftdiv@exp:
   998                           	opt stack 0
   999  000079                     util_onewire_read_byte@bit2:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x19
  1003  000079                     	ds	1
  1004  00007A                     ??___ftmul:
  1005  00007A                     ___ftdiv@sign:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x1A
  1009  00007A                     	ds	1
  1010  00007B                     util_onewire_read_byte@bit3:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x1B
  1014  00007B                     	ds	2
  1015  00007D                     ___ftmul@exp:
  1016                           	opt stack 0
  1017  00007D                     util_onewire_read_byte@bit4:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x1D
  1021  00007D                     	ds	1
  1022  00007E                     ___ftmul@f3_as_product:
  1023                           	opt stack 0
  1024                           
  1025                           ; 3 bytes @ 0x1E
  1026  00007E                     	ds	1
  1027  00007F                     util_onewire_read_byte@bit5:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x1F
  1031  00007F                     	ds	2
  1032  000081                     ___ftmul@cntr:
  1033                           	opt stack 0
  1034  000081                     util_onewire_read_byte@bit6:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x21
  1038  000081                     	ds	1
  1039  000082                     ___ftmul@sign:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0x22
  1043  000082                     	ds	1
  1044  000083                     ?_util_getBatteryVoltage:
  1045                           	opt stack 0
  1046  000083                     ?_fround:
  1047                           	opt stack 0
  1048  000083                     ?_scale:
  1049                           	opt stack 0
  1050  000083                     util_onewire_read_byte@bit7:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x23
  1054  000083                     	ds	2
  1055  000085                     util_onewire_read_byte@value:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x25
  1059  000085                     	ds	1
  1060  000086                     util_getBatteryVoltage@value:
  1061                           	opt stack 0
  1062  000086                     _fround$2690:
  1063                           	opt stack 0
  1064  000086                     _scale$2691:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x26
  1068  000086                     	ds	3
  1069  000089                     scale@scl:
  1070                           	opt stack 0
  1071  000089                     util_getBatteryVoltage@voltage:
  1072                           	opt stack 0
  1073  000089                     _fround$2689:
  1074                           	opt stack 0
  1075                           
  1076                           ; 3 bytes @ 0x29
  1077  000089                     	ds	1
  1078  00008A                     ?___fttol:
  1079                           	opt stack 0
  1080  00008A                     ___fttol@f1:
  1081                           	opt stack 0
  1082                           
  1083                           ; 3 bytes @ 0x2A
  1084  00008A                     	ds	2
  1085  00008C                     fround@prec:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x2C
  1089  00008C                     	ds	1
  1090  00008D                     ?___ftadd:
  1091                           	opt stack 0
  1092  00008D                     ___ftadd@f1:
  1093                           	opt stack 0
  1094                           
  1095                           ; 3 bytes @ 0x2D
  1096  00008D                     	ds	1
  1097  00008E                     ??___fttol:
  1098                           
  1099                           ; 1 bytes @ 0x2E
  1100  00008E                     	ds	2
  1101  000090                     ___ftadd@f2:
  1102                           	opt stack 0
  1103                           
  1104                           ; 3 bytes @ 0x30
  1105  000090                     	ds	3
  1106  000093                     ??___ftadd:
  1107  000093                     ___fttol@sign1:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x33
  1111  000093                     	ds	1
  1112  000094                     ___fttol@lval:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0x34
  1116  000094                     	ds	2
  1117  000096                     ___ftadd@sign:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x36
  1121  000096                     	ds	1
  1122  000097                     ___ftadd@exp2:
  1123                           	opt stack 0
  1124                           
  1125                           ; 1 bytes @ 0x37
  1126  000097                     	ds	1
  1127  000098                     ___ftadd@exp1:
  1128                           	opt stack 0
  1129  000098                     ___fttol@exp1:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x38
  1133  000098                     	ds	1
  1134  000099                     ?_util_getSolarCurrent:
  1135                           	opt stack 0
  1136  000099                     ?_util_getBatteryCurrent:
  1137                           	opt stack 0
  1138  000099                     ?_util_getTemperature:
  1139                           	opt stack 0
  1140  000099                     ?___ftsub:
  1141                           	opt stack 0
  1142  000099                     ___ftsub@f1:
  1143                           	opt stack 0
  1144                           
  1145                           ; 3 bytes @ 0x39
  1146  000099                     	ds	2
  1147  00009B                     util_getSolarCurrent@value:
  1148                           	opt stack 0
  1149  00009B                     util_getBatteryCurrent@value:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x3B
  1153  00009B                     	ds	1
  1154  00009C                     ??_util_getTemperature:
  1155  00009C                     ___ftsub@f2:
  1156                           	opt stack 0
  1157                           
  1158                           ; 3 bytes @ 0x3C
  1159  00009C                     	ds	2
  1160  00009E                     util_getSolarCurrent@solarCurrent:
  1161                           	opt stack 0
  1162  00009E                     util_getBatteryCurrent@batteryCurrent:
  1163                           	opt stack 0
  1164                           
  1165                           ; 3 bytes @ 0x3E
  1166  00009E                     	ds	1
  1167  00009F                     ?_sprintf:
  1168                           	opt stack 0
  1169  00009F                     sprintf@sp:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x3F
  1173  00009F                     	ds	2
  1174  0000A1                     sprintf@f:
  1175                           	opt stack 0
  1176                           
  1177                           ; 2 bytes @ 0x41
  1178  0000A1                     	ds	12
  1179  0000AD                     ??_sprintf:
  1180                           
  1181                           ; 1 bytes @ 0x4D
  1182  0000AD                     	ds	6
  1183  0000B3                     _sprintf$2692:
  1184                           	opt stack 0
  1185                           
  1186                           ; 3 bytes @ 0x53
  1187  0000B3                     	ds	3
  1188  0000B6                     sprintf@ap:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x56
  1192  0000B6                     	ds	2
  1193  0000B8                     sprintf@flag:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x58
  1197  0000B8                     	ds	2
  1198  0000BA                     sprintf@width:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x5A
  1202  0000BA                     	ds	2
  1203  0000BC                     sprintf@tmpval:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x5C
  1207  0000BC                     	ds	4
  1208  0000C0                     sprintf@val:
  1209                           	opt stack 0
  1210                           
  1211                           ; 4 bytes @ 0x60
  1212  0000C0                     	ds	4
  1213  0000C4                     sprintf@exp:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x64
  1217  0000C4                     	ds	2
  1218  0000C6                     sprintf@fval:
  1219                           	opt stack 0
  1220                           
  1221                           ; 3 bytes @ 0x66
  1222  0000C6                     	ds	3
  1223  0000C9                     sprintf@prec:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x69
  1227  0000C9                     	ds	2
  1228  0000CB                     sprintf@c:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x6B
  1232  0000CB                     	ds	1
  1233  0000CC                     util_beacon_transmission@battery_voltage:
  1234                           	opt stack 0
  1235                           
  1236                           ; 3 bytes @ 0x6C
  1237  0000CC                     	ds	3
  1238  0000CF                     util_beacon_transmission@solar_current:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0x6F
  1242  0000CF                     	ds	2
  1243  0000D1                     util_beacon_transmission@battery_current:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x71
  1247  0000D1                     	ds	2
  1248  0000D3                     util_beacon_transmission@temperature:
  1249                           	opt stack 0
  1250                           
  1251                           ; 3 bytes @ 0x73
  1252  0000D3                     	ds	3
  1253  0000D6                     main_loop@temperature:
  1254                           	opt stack 0
  1255                           
  1256                           ; 3 bytes @ 0x76
  1257  0000D6                     	ds	3
  1258  0000D9                     main_loop@solar_current:
  1259                           	opt stack 0
  1260                           
  1261                           ; 2 bytes @ 0x79
  1262  0000D9                     	ds	2
  1263  0000DB                     main_loop@battery_current:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x7B
  1267  0000DB                     	ds	2
  1268  0000DD                     main_loop@battery_voltage:
  1269                           	opt stack 0
  1270                           
  1271                           ; 3 bytes @ 0x7D
  1272  0000DD                     	ds	3
  1273  0000E0                     tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           postdec1	equ	0xFE5
  1280                           fsr1l	equ	0xFE1
  1281                           
  1282                           ; 1 bytes @ 0x80
  1283                           
  1284                           	psect	cstackCOMRAM
  1285  000001                     __pcstackCOMRAM:
  1286                           	opt stack 0
  1287  000001                     ?___ltdiv:
  1288                           	opt stack 0
  1289  000001                     ___ltdiv@dividend:
  1290                           	opt stack 0
  1291                           
  1292                           ; 3 bytes @ 0x0
  1293  000001                     	ds	3
  1294  000004                     ___ltdiv@divisor:
  1295                           	opt stack 0
  1296                           
  1297                           ; 3 bytes @ 0x3
  1298  000004                     	ds	3
  1299  000007                     ___ltdiv@quotient:
  1300                           	opt stack 0
  1301                           
  1302                           ; 3 bytes @ 0x6
  1303  000007                     	ds	3
  1304  00000A                     ___ltdiv@counter:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x9
  1308  00000A                     	ds	1
  1309  00000B                     ??_high_priority_int:
  1310                           
  1311                           ; 1 bytes @ 0xA
  1312  00000B                     	ds	15
  1313  00001A                     high_priority_int@sample:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x19
  1317  00001A                     	ds	2
  1318  00001C                     ??_low_priority_int:
  1319                           
  1320                           ; 1 bytes @ 0x1B
  1321  00001C                     	ds	17
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331 ;;
  1332 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1333 ;;
  1334 ;; *************** function _main *****************
  1335 ;; Defined at:
  1336 ;;		line 19 in file "easat2_main_mcu.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         0       0       0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels required when called:    9
  1356 ;; This function calls:
  1357 ;;		_init_initialize
  1358 ;;		_main_loop
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text0
  1365  003DF2                     __ptext0:
  1366                           	opt stack 0
  1367  003DF2                     _main:
  1368                           	opt stack 22
  1369                           
  1370                           ;easat2_main_mcu.c: 22: init_initialize();
  1371                           
  1372                           ;incstack = 0
  1373  003DF2  ECD8  F01E         	call	_init_initialize	;wreg free
  1374                           
  1375                           ;easat2_main_mcu.c: 25: main_loop();
  1376  003DF6  EC4B  F01B         	call	_main_loop	;wreg free
  1377  003DFA  EF53  F000         	goto	start
  1378  003DFE                     __end_of_main:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           
  1389 ;; *************** function _main_loop *****************
  1390 ;; Defined at:
  1391 ;;		line 31 in file "easat2_main_mcu.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  battery_volt    3  125[BANK0 ] float 
  1396 ;;  temperature     3  118[BANK0 ] float 
  1397 ;;  battery_curr    2  123[BANK0 ] int 
  1398 ;;  solar_curren    2  121[BANK0 ] int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1408 ;;      Params:         0       0       0       0       0       0       0
  1409 ;;      Locals:         0      10       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0
  1411 ;;      Totals:         0      10       0       0       0       0       0
  1412 ;;Total ram usage:       10 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    8
  1415 ;; This function calls:
  1416 ;;		_util_beacon_transmission
  1417 ;;		_util_getBatteryCurrent
  1418 ;;		_util_getBatteryVoltage
  1419 ;;		_util_getSolarCurrent
  1420 ;;		_util_getTemperature
  1421 ;;		_util_waits_delay_hours
  1422 ;;		_util_waits_delay_mins
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text1
  1429  003696                     __ptext1:
  1430                           	opt stack 0
  1431  003696                     _main_loop:
  1432                           	opt stack 22
  1433  003696                     l66:
  1434  003696  0004               	clrwdt		;# 
  1435                           
  1436                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1437  003698  EC33  F019         	call	_util_getBatteryVoltage	;wreg free
  1438  00369C  C083  F0DD         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1439  0036A0  C084  F0DE         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1440  0036A4  C085  F0DF         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1441                           
  1442                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1443  0036A8  EC05  F018         	call	_util_getSolarCurrent	;wreg free
  1444  0036AC  C099  F0D9         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1445  0036B0  C09A  F0DA         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1446                           
  1447                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1448  0036B4  EC6A  F018         	call	_util_getBatteryCurrent	;wreg free
  1449  0036B8  C099  F0DB         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1450  0036BC  C09A  F0DC         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1451                           
  1452                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1453  0036C0  EC24  F006         	call	_util_getTemperature	;wreg free
  1454  0036C4  C099  F0D6         	movff	?_util_getTemperature,main_loop@temperature
  1455  0036C8  C09A  F0D7         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1456  0036CC  C09B  F0D8         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1457                           
  1458                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1459  0036D0  0100               	movlb	0	; () banked
  1460  0036D2  BFDF               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1461  0036D4  D017               	goto	l6133
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1465  0036D6  C0DD  F0CC         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1466  0036DA  C0DE  F0CD         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1467  0036DE  C0DF  F0CE         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1468  0036E2  C0D9  F0CF         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1469  0036E6  C0DA  F0D0         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1470  0036EA  C0DB  F0D1         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1471  0036EE  C0DC  F0D2         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1472  0036F2  C0D6  F0D3         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1473  0036F6  C0D7  F0D4         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1474  0036FA  C0D8  F0D5         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1475  0036FE  ECF6  F016         	call	_util_beacon_transmission	;wreg free
  1476                           
  1477                           ;easat2_main_mcu.c: 62: } else {
  1478  003702  D007               	goto	l68
  1479  003704                     l6133:
  1480                           
  1481                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1482  003704  0E00               	movlw	0
  1483  003706  0100               	movlb	0	; () banked
  1484  003708  6F72               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1485  00370A  0E02               	movlw	2
  1486  00370C  6F71               	movwf	util_waits_delay_hours@hours& (0+255),b
  1487  00370E  EC59  F01D         	call	_util_waits_delay_hours	;wreg free
  1488  003712                     l68:
  1489                           
  1490                           ;easat2_main_mcu.c: 65: }
  1491                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1492  003712  0E00               	movlw	0
  1493  003714  0100               	movlb	0	; () banked
  1494  003716  6F6D               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1495  003718  0E03               	movlw	3
  1496  00371A  6F6C               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1497  00371C  EC7A  F01D         	call	_util_waits_delay_mins	;wreg free
  1498                           
  1499                           ;easat2_main_mcu.c: 71: } while (1);
  1500  003720  D7BA               	goto	l66
  1501  003722                     __end_of_main_loop:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           
  1512 ;; *************** function _util_waits_delay_hours *****************
  1513 ;; Defined at:
  1514 ;;		line 17 in file "easat2_util_waits.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  hours           2   17[BANK0 ] int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  i               2   20[BANK0 ] int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       2       0       0       0       0       0
  1529 ;;      Locals:         0       2       0       0       0       0       0
  1530 ;;      Temps:          0       1       0       0       0       0       0
  1531 ;;      Totals:         0       5       0       0       0       0       0
  1532 ;;Total ram usage:        5 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    6
  1535 ;; This function calls:
  1536 ;;		_util_waits_delay_mins
  1537 ;; This function is called by:
  1538 ;;		_main_loop
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text2
  1543  003AB2                     __ptext2:
  1544                           	opt stack 0
  1545  003AB2                     _util_waits_delay_hours:
  1546                           	opt stack 23
  1547                           
  1548                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1549                           
  1550                           ;incstack = 0
  1551  003AB2  0E00               	movlw	0
  1552  003AB4  0100               	movlb	0	; () banked
  1553  003AB6  6F75               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1554  003AB8  0E00               	movlw	0
  1555  003ABA  6F74               	movwf	util_waits_delay_hours@i& (0+255),b
  1556  003ABC  D00A               	goto	l6121
  1557  003ABE                     l6117:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1561  003ABE  0E00               	movlw	0
  1562  003AC0  0100               	movlb	0	; () banked
  1563  003AC2  6F6D               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1564  003AC4  0E3C               	movlw	60
  1565  003AC6  6F6C               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1566  003AC8  EC7A  F01D         	call	_util_waits_delay_mins	;wreg free
  1567  003ACC  0100               	movlb	0	; () banked
  1568  003ACE  4B74               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1569  003AD0  2B75               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1570  003AD2                     l6121:
  1571                           
  1572                           ; BSR set to: 0
  1573  003AD2  0100               	movlb	0	; () banked
  1574  003AD4  5171               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1575  003AD6  0100               	movlb	0	; () banked
  1576  003AD8  5D74               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1577  003ADA  0100               	movlb	0	; () banked
  1578  003ADC  5175               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1579  003ADE  0A80               	xorlw	128
  1580  003AE0  0100               	movlb	0	; () banked
  1581  003AE2  6F73               	movwf	??_util_waits_delay_hours& (0+255),b
  1582  003AE4  0100               	movlb	0	; () banked
  1583  003AE6  5172               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1584  003AE8  0A80               	xorlw	128
  1585  003AEA  0100               	movlb	0	; () banked
  1586  003AEC  5973               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1587  003AEE  B0D8               	btfsc	status,0,c
  1588  003AF0  0012               	return	
  1589  003AF2  D7E5               	goto	l6117
  1590  003AF4                     __end_of_util_waits_delay_hours:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           postdec1	equ	0xFE5
  1599                           fsr1l	equ	0xFE1
  1600                           status	equ	0xFD8
  1601                           
  1602 ;; *************** function _util_waits_delay_mins *****************
  1603 ;; Defined at:
  1604 ;;		line 24 in file "easat2_util_waits.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  minutes         2   12[BANK0 ] int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  i               2   15[BANK0 ] int 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       2       0       0       0       0       0
  1619 ;;      Locals:         0       2       0       0       0       0       0
  1620 ;;      Temps:          0       1       0       0       0       0       0
  1621 ;;      Totals:         0       5       0       0       0       0       0
  1622 ;;Total ram usage:        5 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    5
  1625 ;; This function calls:
  1626 ;;		_util_waits_delay_secs
  1627 ;; This function is called by:
  1628 ;;		_main_loop
  1629 ;;		_util_waits_delay_hours
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text3
  1634  003AF4                     __ptext3:
  1635                           	opt stack 0
  1636  003AF4                     _util_waits_delay_mins:
  1637                           	opt stack 24
  1638                           
  1639                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;incstack = 0
  1643  003AF4  0E00               	movlw	0
  1644  003AF6  0100               	movlb	0	; () banked
  1645  003AF8  6F70               	movwf	(util_waits_delay_mins@i+1)& (0+255),b
  1646  003AFA  0E00               	movlw	0
  1647  003AFC  6F6F               	movwf	util_waits_delay_mins@i& (0+255),b
  1648  003AFE  D00A               	goto	l5179
  1649  003B00                     l5175:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1653  003B00  0E00               	movlw	0
  1654  003B02  0100               	movlb	0	; () banked
  1655  003B04  6F66               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1656  003B06  0E3C               	movlw	60
  1657  003B08  6F65               	movwf	util_waits_delay_secs@secs& (0+255),b
  1658  003B0A  EC09  F01C         	call	_util_waits_delay_secs	;wreg free
  1659  003B0E  0100               	movlb	0	; () banked
  1660  003B10  4B6F               	infsnz	util_waits_delay_mins@i& (0+255),f,b
  1661  003B12  2B70               	incf	(util_waits_delay_mins@i+1)& (0+255),f,b
  1662  003B14                     l5179:
  1663                           
  1664                           ; BSR set to: 0
  1665  003B14  0100               	movlb	0	; () banked
  1666  003B16  516C               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1667  003B18  0100               	movlb	0	; () banked
  1668  003B1A  5D6F               	subwf	util_waits_delay_mins@i& (0+255),w,b
  1669  003B1C  0100               	movlb	0	; () banked
  1670  003B1E  5170               	movf	(util_waits_delay_mins@i+1)& (0+255),w,b
  1671  003B20  0A80               	xorlw	128
  1672  003B22  0100               	movlb	0	; () banked
  1673  003B24  6F6E               	movwf	??_util_waits_delay_mins& (0+255),b
  1674  003B26  0100               	movlb	0	; () banked
  1675  003B28  516D               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1676  003B2A  0A80               	xorlw	128
  1677  003B2C  0100               	movlb	0	; () banked
  1678  003B2E  596E               	subwfb	??_util_waits_delay_mins& (0+255),w,b
  1679  003B30  B0D8               	btfsc	status,0,c
  1680  003B32  0012               	return	
  1681  003B34  D7E5               	goto	l5175
  1682  003B36                     __end_of_util_waits_delay_mins:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           postdec1	equ	0xFE5
  1691                           fsr1l	equ	0xFE1
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _util_getTemperature *****************
  1695 ;; Defined at:
  1696 ;;		line 118 in file "easat2_util_inputs.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  bit_mem       144    0[BANK1 ] int [72]
  1701 ;;  byte_mem       18  144[BANK1 ] int [9]
  1702 ;;  temperature     3  201[BANK1 ] float 
  1703 ;;  sign            3  164[BANK1 ] float 
  1704 ;;  i               2  204[BANK1 ] int 
  1705 ;;  bit_in_byte     2  199[BANK1 ] int 
  1706 ;;  num_byte        2  197[BANK1 ] int 
  1707 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1708 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1709 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1710 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1711 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1712 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1713 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1714 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1715 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1716 ;;  num_bit         2  162[BANK1 ] int 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  3   57[BANK0 ] float 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1726 ;;      Params:         0       3       0       0       0       0       0
  1727 ;;      Locals:         0       0     206       0       0       0       0
  1728 ;;      Temps:          0       3       0       0       0       0       0
  1729 ;;      Totals:         0       6     206       0       0       0       0
  1730 ;;Total ram usage:      212 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    5
  1733 ;; This function calls:
  1734 ;;		___awtoft
  1735 ;;		___ftadd
  1736 ;;		___ftdiv
  1737 ;;		___ftmul
  1738 ;;		_util_onewire_read_byte
  1739 ;;		_util_onewire_reset
  1740 ;;		_util_onewire_write_byte
  1741 ;;		_util_waits_delay_secs
  1742 ;; This function is called by:
  1743 ;;		_main_loop
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text4
  1748  000C48                     __ptext4:
  1749                           	opt stack 0
  1750  000C48                     _util_getTemperature:
  1751                           	opt stack 24
  1752                           
  1753                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1754                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1755                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;incstack = 0
  1759  000C48  0E00               	movlw	0
  1760  000C4A  0101               	movlb	1	; () banked
  1761  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1762  000C4E  0E00               	movlw	0
  1763  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1764                           
  1765                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1766  000C52  0E00               	movlw	0
  1767  000C54  0101               	movlb	1	; () banked
  1768  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1769  000C58  0E00               	movlw	0
  1770  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1771                           
  1772                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1773  000C5C  0E00               	movlw	0
  1774  000C5E  0101               	movlb	1	; () banked
  1775  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1776  000C62  0E00               	movlw	0
  1777  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1778                           
  1779                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1780  000C66  0E00               	movlw	0
  1781  000C68  0101               	movlb	1	; () banked
  1782  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1783  000C6C  0E00               	movlw	0
  1784  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1785                           
  1786                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1787  000C70  0E00               	movlw	0
  1788  000C72  0101               	movlb	1	; () banked
  1789  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1790  000C76  0E00               	movlw	0
  1791  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1792                           
  1793                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1794  000C7A  0E00               	movlw	0
  1795  000C7C  0101               	movlb	1	; () banked
  1796  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1797  000C80  0E00               	movlw	0
  1798  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1799                           
  1800                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1801  000C84  0E00               	movlw	0
  1802  000C86  0101               	movlb	1	; () banked
  1803  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1804  000C8A  0E00               	movlw	0
  1805  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1806                           
  1807                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1808  000C8E  0E00               	movlw	0
  1809  000C90  0101               	movlb	1	; () banked
  1810  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1811  000C94  0E00               	movlw	0
  1812  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1813                           
  1814                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1815  000C98  0E00               	movlw	0
  1816  000C9A  0101               	movlb	1	; () banked
  1817  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1818  000C9E  0E00               	movlw	0
  1819  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1820                           
  1821                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1822  000CA2  0E00               	movlw	0
  1823  000CA4  0101               	movlb	1	; () banked
  1824  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1825  000CA8  0E00               	movlw	0
  1826  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1827  000CAC  0E00               	movlw	0
  1828  000CAE  0101               	movlb	1	; () banked
  1829  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1830  000CB2  0E00               	movlw	0
  1831  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1832  000CB6  0E00               	movlw	0
  1833  000CB8  0101               	movlb	1	; () banked
  1834  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1835  000CBC  0E00               	movlw	0
  1836  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1837                           
  1838                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1839  000CC0  0E00               	movlw	0
  1840  000CC2  0101               	movlb	1	; () banked
  1841  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1842  000CC6  0E00               	movlw	0
  1843  000CC8  0101               	movlb	1	; () banked
  1844  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1845  000CCC  0E00               	movlw	0
  1846  000CCE  0101               	movlb	1	; () banked
  1847  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1848                           
  1849                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1850  000CD2  0E00               	movlw	0
  1851  000CD4  0101               	movlb	1	; () banked
  1852  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1853  000CD8  0E80               	movlw	128
  1854  000CDA  0101               	movlb	1	; () banked
  1855  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1856  000CDE  0E3F               	movlw	63
  1857  000CE0  0101               	movlb	1	; () banked
  1858  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1859                           
  1860                           ;easat2_util_inputs.c: 137: int i = 0;
  1861  000CE4  0E00               	movlw	0
  1862  000CE6  0101               	movlb	1	; () banked
  1863  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1864  000CEA  0E00               	movlw	0
  1865  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1869  000CEE  ECA4  F01C         	call	_util_onewire_reset	;wreg free
  1870  000CF2  0100               	movlb	0	; () banked
  1871  000CF4  5160               	movf	?_util_onewire_reset& (0+255),w,b
  1872  000CF6  0100               	movlb	0	; () banked
  1873  000CF8  1161               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1874  000CFA  B4D8               	btfsc	status,2,c
  1875  000CFC  D00A               	goto	l5965
  1876                           
  1877                           ; BSR set to: 0
  1878  000CFE  0E33               	movlw	51
  1879  000D00  0100               	movlb	0	; () banked
  1880  000D02  6F99               	movwf	?_util_getTemperature& (0+255),b
  1881  000D04  0EC6               	movlw	198
  1882  000D06  0100               	movlb	0	; () banked
  1883  000D08  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  1884  000D0A  0EC2               	movlw	194
  1885  000D0C  0100               	movlb	0	; () banked
  1886  000D0E  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  1887                           
  1888                           ; BSR set to: 0
  1889  000D10  0012               	return	
  1890  000D12                     l5965:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1894  000D12  0E00               	movlw	0
  1895  000D14  0100               	movlb	0	; () banked
  1896  000D16  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1897  000D18  0ECC               	movlw	204
  1898  000D1A  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  1899  000D1C  ECC4  F011         	call	_util_onewire_write_byte	;wreg free
  1900                           
  1901                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1902  000D20  0E00               	movlw	0
  1903  000D22  0100               	movlb	0	; () banked
  1904  000D24  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1905  000D26  0E44               	movlw	68
  1906  000D28  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  1907  000D2A  ECC4  F011         	call	_util_onewire_write_byte	;wreg free
  1908                           
  1909                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1910  000D2E  8692               	bsf	3986,3,c	;volatile
  1911                           
  1912                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1913  000D30  0E00               	movlw	0
  1914  000D32  0101               	movlb	1	; () banked
  1915  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1916  000D36  0E00               	movlw	0
  1917  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1918  000D3A  D00A               	goto	l5975
  1919  000D3C                     l5971:
  1920                           
  1921                           ; BSR set to: 1
  1922                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1923  000D3C  0E00               	movlw	0
  1924  000D3E  0100               	movlb	0	; () banked
  1925  000D40  6F66               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1926  000D42  0E01               	movlw	1
  1927  000D44  6F65               	movwf	util_waits_delay_secs@secs& (0+255),b
  1928  000D46  EC09  F01C         	call	_util_waits_delay_secs	;wreg free
  1929  000D4A  0101               	movlb	1	; () banked
  1930  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1931  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1932  000D50                     l5975:
  1933                           
  1934                           ; BSR set to: 1
  1935  000D50  0101               	movlb	1	; () banked
  1936  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1937  000D54  D008               	goto	l5977
  1938  000D56  0101               	movlb	1	; () banked
  1939  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1940  000D5A  E107               	bnz	l5979
  1941  000D5C  0E05               	movlw	5
  1942  000D5E  0101               	movlb	1	; () banked
  1943  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1944  000D62  B0D8               	btfsc	status,0,c
  1945  000D64  D002               	goto	l5979
  1946  000D66                     l5977:
  1947                           
  1948                           ; BSR set to: 1
  1949  000D66  A680               	btfss	3968,3,c	;volatile
  1950  000D68  D7E9               	goto	l5971
  1951  000D6A                     l5979:
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1955  000D6A  0E05               	movlw	5
  1956  000D6C  0101               	movlb	1	; () banked
  1957  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1958  000D70  0101               	movlb	1	; () banked
  1959  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1960  000D74  A4D8               	btfss	status,2,c
  1961  000D76  D00A               	goto	l5985
  1962                           
  1963                           ; BSR set to: 1
  1964  000D78  0E66               	movlw	102
  1965  000D7A  0100               	movlb	0	; () banked
  1966  000D7C  6F99               	movwf	?_util_getTemperature& (0+255),b
  1967  000D7E  0EC6               	movlw	198
  1968  000D80  0100               	movlb	0	; () banked
  1969  000D82  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  1970  000D84  0EC2               	movlw	194
  1971  000D86  0100               	movlb	0	; () banked
  1972  000D88  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  1973                           
  1974                           ; BSR set to: 0
  1975  000D8A  0012               	return	
  1976  000D8C                     l5985:
  1977                           
  1978                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1979  000D8C  ECA4  F01C         	call	_util_onewire_reset	;wreg free
  1980  000D90  0100               	movlb	0	; () banked
  1981  000D92  5160               	movf	?_util_onewire_reset& (0+255),w,b
  1982  000D94  0100               	movlb	0	; () banked
  1983  000D96  1161               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1984  000D98  B4D8               	btfsc	status,2,c
  1985  000D9A  D00A               	goto	l5991
  1986                           
  1987                           ; BSR set to: 0
  1988  000D9C  0E9A               	movlw	154
  1989  000D9E  0100               	movlb	0	; () banked
  1990  000DA0  6F99               	movwf	?_util_getTemperature& (0+255),b
  1991  000DA2  0EC6               	movlw	198
  1992  000DA4  0100               	movlb	0	; () banked
  1993  000DA6  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  1994  000DA8  0EC2               	movlw	194
  1995  000DAA  0100               	movlb	0	; () banked
  1996  000DAC  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  1997                           
  1998                           ; BSR set to: 0
  1999  000DAE  0012               	return	
  2000  000DB0                     l5991:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  2004  000DB0  0E00               	movlw	0
  2005  000DB2  0100               	movlb	0	; () banked
  2006  000DB4  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2007  000DB6  0ECC               	movlw	204
  2008  000DB8  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  2009  000DBA  ECC4  F011         	call	_util_onewire_write_byte	;wreg free
  2010                           
  2011                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  2012  000DBE  0E00               	movlw	0
  2013  000DC0  0100               	movlb	0	; () banked
  2014  000DC2  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2015  000DC4  0EBE               	movlw	190
  2016  000DC6  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  2017  000DC8  ECC4  F011         	call	_util_onewire_write_byte	;wreg free
  2018                           
  2019                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  2020  000DCC  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2021  000DD0  C065  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2022  000DD4  C066  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2023                           
  2024                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  2025  000DD8  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2026  000DDC  C065  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2027  000DE0  C066  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2028                           
  2029                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  2030  000DE4  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2031  000DE8  C065  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2032  000DEC  C066  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2033                           
  2034                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  2035  000DF0  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2036  000DF4  C065  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2037  000DF8  C066  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2038                           
  2039                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2040  000DFC  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2041  000E00  C065  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2042  000E04  C066  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2043                           
  2044                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2045  000E08  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2046  000E0C  C065  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2047  000E10  C066  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2048                           
  2049                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2050  000E14  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2051  000E18  C065  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2052  000E1C  C066  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2053                           
  2054                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2055  000E20  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2056  000E24  C065  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2057  000E28  C066  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2058                           
  2059                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2060  000E2C  EC71  F013         	call	_util_onewire_read_byte	;wreg free
  2061  000E30  C065  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2062  000E34  C066  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2063                           
  2064                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2065  000E38  0E00               	movlw	0
  2066  000E3A  0101               	movlb	1	; () banked
  2067  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2068  000E3E  0E00               	movlw	0
  2069  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2070  000E42                     l5995:
  2071                           
  2072                           ; BSR set to: 1
  2073  000E42  0101               	movlb	1	; () banked
  2074  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2075  000E46  D008               	goto	l5999
  2076  000E48  0101               	movlb	1	; () banked
  2077  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2078  000E4C  E14F               	bnz	l6017
  2079  000E4E  0E09               	movlw	9
  2080  000E50  0101               	movlb	1	; () banked
  2081  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2082  000E54  B0D8               	btfsc	status,0,c
  2083  000E56  D04A               	goto	l6017
  2084  000E58                     l5999:
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2088  000E58  0E00               	movlw	0
  2089  000E5A  0101               	movlb	1	; () banked
  2090  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2091  000E5E  0E00               	movlw	0
  2092  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2093  000E62                     l6001:
  2094                           
  2095                           ; BSR set to: 1
  2096  000E62  0101               	movlb	1	; () banked
  2097  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2098  000E66  D008               	goto	l6005
  2099  000E68  0101               	movlb	1	; () banked
  2100  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2101  000E6C  E13B               	bnz	l6013
  2102  000E6E  0E08               	movlw	8
  2103  000E70  0101               	movlb	1	; () banked
  2104  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2105  000E74  B0D8               	btfsc	status,0,c
  2106  000E76  D036               	goto	l6013
  2107  000E78                     l6005:
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2111  000E78  C1C7  F09C         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2112  000E7C  90D8               	bcf	status,0,c
  2113  000E7E  0101               	movlb	1	; () banked
  2114  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2115  000E82  6ED9               	movwf	fsr2l,c
  2116  000E84  0101               	movlb	1	; () banked
  2117  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2118  000E88  6EDA               	movwf	fsr2h,c
  2119  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2120  000E8C  26D9               	addwf	fsr2l,f,c
  2121  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2122  000E90  22DA               	addwfc	fsr2h,f,c
  2123  000E92  CFDE F09D          	movff	postinc2,??_util_getTemperature+1
  2124  000E96  CFDD F09E          	movff	postdec2,??_util_getTemperature+2
  2125  000E9A  0100               	movlb	0	; () banked
  2126  000E9C  2B9C               	incf	??_util_getTemperature& (0+255),f,b
  2127  000E9E  D004               	goto	u6064
  2128  000EA0                     u6065:
  2129  000EA0  0100               	movlb	0	; () banked
  2130  000EA2  359E               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2131  000EA4  339E               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2132  000EA6  339D               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2133  000EA8                     u6064:
  2134  000EA8  0100               	movlb	0	; () banked
  2135  000EAA  2F9C               	decfsz	??_util_getTemperature& (0+255),f,b
  2136  000EAC  D7F9               	goto	u6065
  2137  000EAE  0E01               	movlw	1
  2138  000EB0  0100               	movlb	0	; () banked
  2139  000EB2  179D               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2140  000EB4  0E00               	movlw	0
  2141  000EB6  179E               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2142  000EB8  90D8               	bcf	status,0,c
  2143  000EBA  0101               	movlb	1	; () banked
  2144  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2145  000EBE  6ED9               	movwf	fsr2l,c
  2146  000EC0  0101               	movlb	1	; () banked
  2147  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2148  000EC4  6EDA               	movwf	fsr2h,c
  2149  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2150  000EC8  26D9               	addwf	fsr2l,f,c
  2151  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2152  000ECC  22DA               	addwfc	fsr2h,f,c
  2153  000ECE  C09D  FFDE         	movff	??_util_getTemperature+1,postinc2
  2154  000ED2  C09E  FFDD         	movff	??_util_getTemperature+2,postdec2
  2155                           
  2156                           ; BSR set to: 1
  2157  000ED6  0101               	movlb	1	; () banked
  2158  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2159  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2160                           
  2161                           ; BSR set to: 1
  2162  000EDC  0101               	movlb	1	; () banked
  2163  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2164  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2165  000EE2  D7BF               	goto	l6001
  2166  000EE4                     l6013:
  2167                           
  2168                           ; BSR set to: 1
  2169  000EE4  0101               	movlb	1	; () banked
  2170  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2171  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2172  000EEA  D7AB               	goto	l5995
  2173  000EEC                     l6017:
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;easat2_util_inputs.c: 205: }
  2177                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2178  000EEC  0E00               	movlw	0
  2179  000EEE  0101               	movlb	1	; () banked
  2180  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2181  000EF2  0E00               	movlw	0
  2182  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2183  000EF6                     l6019:
  2184                           
  2185                           ; BSR set to: 1
  2186  000EF6  0101               	movlb	1	; () banked
  2187  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2188  000EFA  D008               	goto	l6023
  2189  000EFC  0101               	movlb	1	; () banked
  2190  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2191  000F00  E154               	bnz	l6045
  2192  000F02  0E48               	movlw	72
  2193  000F04  0101               	movlb	1	; () banked
  2194  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2195  000F08  B0D8               	btfsc	status,0,c
  2196  000F0A  D04F               	goto	l6045
  2197  000F0C                     l6023:
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2201  000F0C  90D8               	bcf	status,0,c
  2202  000F0E  0101               	movlb	1	; () banked
  2203  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2204  000F12  6ED9               	movwf	fsr2l,c
  2205  000F14  0101               	movlb	1	; () banked
  2206  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2207  000F18  6EDA               	movwf	fsr2h,c
  2208  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2209  000F1C  26D9               	addwf	fsr2l,f,c
  2210  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2211  000F20  22DA               	addwfc	fsr2h,f,c
  2212  000F22  CFDE F09C          	movff	postinc2,??_util_getTemperature
  2213  000F26  CFDD F09D          	movff	postdec2,??_util_getTemperature+1
  2214  000F2A  0101               	movlb	1	; () banked
  2215  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2216  000F2E  0100               	movlb	0	; () banked
  2217  000F30  199C               	xorwf	??_util_getTemperature& (0+255),w,b
  2218  000F32  0101               	movlb	1	; () banked
  2219  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2220  000F36  0101               	movlb	1	; () banked
  2221  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2222  000F3A  0100               	movlb	0	; () banked
  2223  000F3C  199D               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2224  000F3E  0101               	movlb	1	; () banked
  2225  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2229  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2230  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2231                           
  2232                           ; BSR set to: 1
  2233                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2234  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2235  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2239  000F52  0101               	movlb	1	; () banked
  2240  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2241  000F56  0101               	movlb	1	; () banked
  2242  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2243  000F5A  0101               	movlb	1	; () banked
  2244  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2245  000F5E  0101               	movlb	1	; () banked
  2246  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2247  000F62  0101               	movlb	1	; () banked
  2248  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2249  000F66  0101               	movlb	1	; () banked
  2250  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2254  000F6A  0101               	movlb	1	; () banked
  2255  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2256  000F6E  0101               	movlb	1	; () banked
  2257  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2258  000F72  0101               	movlb	1	; () banked
  2259  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2260  000F76  0101               	movlb	1	; () banked
  2261  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2262  000F7A  0101               	movlb	1	; () banked
  2263  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2264  000F7E  0101               	movlb	1	; () banked
  2265  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2269  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2270  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2274  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2275  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2279  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2280  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2284  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2285  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2286                           
  2287                           ; BSR set to: 1
  2288  000FA2  0101               	movlb	1	; () banked
  2289  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2290  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2291  000FA8  D7A6               	goto	l6019
  2292  000FAA                     l6045:
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;easat2_util_inputs.c: 225: }
  2296                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2297                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2298                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2299  000FAA  0101               	movlb	1	; () banked
  2300  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2301  000FAE  0101               	movlb	1	; () banked
  2302  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2303  000FB2  A4D8               	btfss	status,2,c
  2304  000FB4  D02A               	goto	l6061
  2305                           
  2306                           ; BSR set to: 1
  2307  000FB6  0101               	movlb	1	; () banked
  2308  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2309  000FBA  0101               	movlb	1	; () banked
  2310  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2311  000FBE  A4D8               	btfss	status,2,c
  2312  000FC0  D024               	goto	l6061
  2313                           
  2314                           ; BSR set to: 1
  2315  000FC2  0101               	movlb	1	; () banked
  2316  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2317  000FC6  0101               	movlb	1	; () banked
  2318  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2319  000FCA  B4D8               	btfsc	status,2,c
  2320  000FCC  D006               	goto	l6053
  2321                           
  2322                           ; BSR set to: 1
  2323  000FCE  0101               	movlb	1	; () banked
  2324  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2325  000FD2  0101               	movlb	1	; () banked
  2326  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2327  000FD6  A4D8               	btfss	status,2,c
  2328  000FD8  D018               	goto	l6061
  2329  000FDA                     l6053:
  2330                           
  2331                           ; BSR set to: 1
  2332  000FDA  0101               	movlb	1	; () banked
  2333  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2334  000FDE  0101               	movlb	1	; () banked
  2335  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2336  000FE2  A4D8               	btfss	status,2,c
  2337  000FE4  D012               	goto	l6061
  2338                           
  2339                           ; BSR set to: 1
  2340  000FE6  0101               	movlb	1	; () banked
  2341  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2342  000FEA  0101               	movlb	1	; () banked
  2343  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2344  000FEE  B4D8               	btfsc	status,2,c
  2345  000FF0  D006               	goto	l6059
  2346                           
  2347                           ; BSR set to: 1
  2348  000FF2  0101               	movlb	1	; () banked
  2349  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2350  000FF6  0101               	movlb	1	; () banked
  2351  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2352  000FFA  A4D8               	btfss	status,2,c
  2353  000FFC  D006               	goto	l6061
  2354  000FFE                     l6059:
  2355                           
  2356                           ; BSR set to: 1
  2357  000FFE  0101               	movlb	1	; () banked
  2358  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2359  001002  0101               	movlb	1	; () banked
  2360  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2361  001006  B4D8               	btfsc	status,2,c
  2362  001008  D00A               	goto	l6065
  2363  00100A                     l6061:
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;easat2_util_inputs.c: 232: return -99.7;
  2367  00100A  0E66               	movlw	102
  2368  00100C  0100               	movlb	0	; () banked
  2369  00100E  6F99               	movwf	?_util_getTemperature& (0+255),b
  2370  001010  0EC7               	movlw	199
  2371  001012  0100               	movlb	0	; () banked
  2372  001014  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  2373  001016  0EC2               	movlw	194
  2374  001018  0100               	movlb	0	; () banked
  2375  00101A  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  2376                           
  2377                           ; BSR set to: 0
  2378  00101C  0012               	return	
  2379  00101E                     l6065:
  2380                           
  2381                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2382  00101E  0101               	movlb	1	; () banked
  2383  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2384  001022  0101               	movlb	1	; () banked
  2385  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2386  001026  A4D8               	btfss	status,2,c
  2387  001028  D008               	goto	l6069
  2388                           
  2389                           ; BSR set to: 1
  2390  00102A  0E00               	movlw	0
  2391  00102C  0101               	movlb	1	; () banked
  2392  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2393  001030  0E80               	movlw	128
  2394  001032  0101               	movlb	1	; () banked
  2395  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2396  001036  0E3F               	movlw	63
  2397  001038  D007               	goto	L1
  2398  00103A                     l6069:
  2399                           
  2400                           ; BSR set to: 1
  2401  00103A  0E00               	movlw	0
  2402  00103C  0101               	movlb	1	; () banked
  2403  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2404  001040  0E80               	movlw	128
  2405  001042  0101               	movlb	1	; () banked
  2406  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2407  001046  0EBF               	movlw	191
  2408  001048                     L1:
  2409  001048  0101               	movlb	1	; () banked
  2410  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2414                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2415                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2416                           
  2417                           ; BSR set to: 1
  2418  00104C  0E00               	movlw	0
  2419  00104E  0100               	movlb	0	; () banked
  2420  001050  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2421  001052  0E00               	movlw	0
  2422  001054  0100               	movlb	0	; () banked
  2423  001056  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2424  001058  0E41               	movlw	65
  2425  00105A  0100               	movlb	0	; () banked
  2426  00105C  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2427  00105E  C102  F068         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2428  001062  C103  F069         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2429  001066  EC37  F01D         	call	___awtoft	;wreg free
  2430  00106A  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2431  00106E  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2432  001072  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2433  001076  ECAE  F015         	call	___ftdiv	;wreg free
  2434  00107A  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2435  00107E  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2436  001082  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2437  001086  0E00               	movlw	0
  2438  001088  0100               	movlb	0	; () banked
  2439  00108A  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2440  00108C  0E80               	movlw	128
  2441  00108E  0100               	movlb	0	; () banked
  2442  001090  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2443  001092  0E41               	movlw	65
  2444  001094  0100               	movlb	0	; () banked
  2445  001096  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2446  001098  C100  F068         	movff	util_getTemperature@bit_mem,___awtoft@c
  2447  00109C  C101  F069         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2448  0010A0  EC37  F01D         	call	___awtoft	;wreg free
  2449  0010A4  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2450  0010A8  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2451  0010AC  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2452  0010B0  ECAE  F015         	call	___ftdiv	;wreg free
  2453  0010B4  C06C  F08D         	movff	?___ftdiv,___ftadd@f1
  2454  0010B8  C06D  F08E         	movff	?___ftdiv+1,___ftadd@f1+1
  2455  0010BC  C06E  F08F         	movff	?___ftdiv+2,___ftadd@f1+2
  2456  0010C0  EC9C  F00F         	call	___ftadd	;wreg free
  2457  0010C4  C08D  F1A7         	movff	?___ftadd,_util_getTemperature$2685
  2458  0010C8  C08E  F1A8         	movff	?___ftadd+1,_util_getTemperature$2685+1
  2459  0010CC  C08F  F1A9         	movff	?___ftadd+2,_util_getTemperature$2685+2
  2460                           
  2461                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2462                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2463                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2464  0010D0  0E00               	movlw	0
  2465  0010D2  0100               	movlb	0	; () banked
  2466  0010D4  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2467  0010D6  0E80               	movlw	128
  2468  0010D8  0100               	movlb	0	; () banked
  2469  0010DA  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2470  0010DC  0E40               	movlw	64
  2471  0010DE  0100               	movlb	0	; () banked
  2472  0010E0  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2473  0010E2  C104  F068         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2474  0010E6  C105  F069         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2475  0010EA  EC37  F01D         	call	___awtoft	;wreg free
  2476  0010EE  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2477  0010F2  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2478  0010F6  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2479  0010FA  ECAE  F015         	call	___ftdiv	;wreg free
  2480  0010FE  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2481  001102  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2482  001106  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2483  00110A  C1A7  F08D         	movff	_util_getTemperature$2685,___ftadd@f1
  2484  00110E  C1A8  F08E         	movff	_util_getTemperature$2685+1,___ftadd@f1+1
  2485  001112  C1A9  F08F         	movff	_util_getTemperature$2685+2,___ftadd@f1+2
  2486  001116  EC9C  F00F         	call	___ftadd	;wreg free
  2487  00111A  C08D  F1AA         	movff	?___ftadd,_util_getTemperature$2686
  2488  00111E  C08E  F1AB         	movff	?___ftadd+1,_util_getTemperature$2686+1
  2489  001122  C08F  F1AC         	movff	?___ftadd+2,_util_getTemperature$2686+2
  2490                           
  2491                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2492                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2493                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2494  001126  0E00               	movlw	0
  2495  001128  0100               	movlb	0	; () banked
  2496  00112A  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2497  00112C  0E00               	movlw	0
  2498  00112E  0100               	movlb	0	; () banked
  2499  001130  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2500  001132  0E40               	movlw	64
  2501  001134  0100               	movlb	0	; () banked
  2502  001136  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2503  001138  C106  F068         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2504  00113C  C107  F069         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2505  001140  EC37  F01D         	call	___awtoft	;wreg free
  2506  001144  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2507  001148  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2508  00114C  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2509  001150  ECAE  F015         	call	___ftdiv	;wreg free
  2510  001154  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2511  001158  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2512  00115C  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2513  001160  C1AA  F08D         	movff	_util_getTemperature$2686,___ftadd@f1
  2514  001164  C1AB  F08E         	movff	_util_getTemperature$2686+1,___ftadd@f1+1
  2515  001168  C1AC  F08F         	movff	_util_getTemperature$2686+2,___ftadd@f1+2
  2516  00116C  EC9C  F00F         	call	___ftadd	;wreg free
  2517  001170  C08D  F1AD         	movff	?___ftadd,_util_getTemperature$2687
  2518  001174  C08E  F1AE         	movff	?___ftadd+1,_util_getTemperature$2687+1
  2519  001178  C08F  F1AF         	movff	?___ftadd+2,_util_getTemperature$2687+2
  2520                           
  2521                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2522                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2523                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2524  00117C  C108  F068         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2525  001180  C109  F069         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2526  001184  EC37  F01D         	call	___awtoft	;wreg free
  2527  001188  C068  F090         	movff	?___awtoft,___ftadd@f2
  2528  00118C  C069  F091         	movff	?___awtoft+1,___ftadd@f2+1
  2529  001190  C06A  F092         	movff	?___awtoft+2,___ftadd@f2+2
  2530  001194  C1AD  F08D         	movff	_util_getTemperature$2687,___ftadd@f1
  2531  001198  C1AE  F08E         	movff	_util_getTemperature$2687+1,___ftadd@f1+1
  2532  00119C  C1AF  F08F         	movff	_util_getTemperature$2687+2,___ftadd@f1+2
  2533  0011A0  EC9C  F00F         	call	___ftadd	;wreg free
  2534  0011A4  C08D  F1B0         	movff	?___ftadd,_util_getTemperature$2688
  2535  0011A8  C08E  F1B1         	movff	?___ftadd+1,_util_getTemperature$2688+1
  2536  0011AC  C08F  F1B2         	movff	?___ftadd+2,_util_getTemperature$2688+2
  2537                           
  2538                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2539                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2540                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2541  0011B0  C1B0  F08D         	movff	_util_getTemperature$2688,___ftadd@f1
  2542  0011B4  C1B1  F08E         	movff	_util_getTemperature$2688+1,___ftadd@f1+1
  2543  0011B8  C1B2  F08F         	movff	_util_getTemperature$2688+2,___ftadd@f1+2
  2544  0011BC  0E00               	movlw	0
  2545  0011BE  0100               	movlb	0	; () banked
  2546  0011C0  6F77               	movwf	___ftmul@f2& (0+255),b
  2547  0011C2  0E00               	movlw	0
  2548  0011C4  0100               	movlb	0	; () banked
  2549  0011C6  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2550  0011C8  0E40               	movlw	64
  2551  0011CA  0100               	movlb	0	; () banked
  2552  0011CC  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2553  0011CE  C10A  F068         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2554  0011D2  C10B  F069         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2555  0011D6  EC37  F01D         	call	___awtoft	;wreg free
  2556  0011DA  C068  F074         	movff	?___awtoft,___ftmul@f1
  2557  0011DE  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2558  0011E2  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2559  0011E6  ECFF  F014         	call	___ftmul	;wreg free
  2560  0011EA  C074  F090         	movff	?___ftmul,___ftadd@f2
  2561  0011EE  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2562  0011F2  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2563  0011F6  EC9C  F00F         	call	___ftadd	;wreg free
  2564  0011FA  C08D  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2565  0011FE  C08E  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2566  001202  C08F  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2567                           
  2568                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2569                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2570                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2571                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2572  001206  0E00               	movlw	0
  2573  001208  0100               	movlb	0	; () banked
  2574  00120A  6F77               	movwf	___ftmul@f2& (0+255),b
  2575  00120C  0E00               	movlw	0
  2576  00120E  0100               	movlb	0	; () banked
  2577  001210  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2578  001212  0E41               	movlw	65
  2579  001214  0100               	movlb	0	; () banked
  2580  001216  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2581  001218  C10E  F068         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2582  00121C  C10F  F069         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2583  001220  EC37  F01D         	call	___awtoft	;wreg free
  2584  001224  C068  F074         	movff	?___awtoft,___ftmul@f1
  2585  001228  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2586  00122C  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2587  001230  ECFF  F014         	call	___ftmul	;wreg free
  2588  001234  C074  F090         	movff	?___ftmul,___ftadd@f2
  2589  001238  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2590  00123C  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2591  001240  0E00               	movlw	0
  2592  001242  0100               	movlb	0	; () banked
  2593  001244  6F77               	movwf	___ftmul@f2& (0+255),b
  2594  001246  0E80               	movlw	128
  2595  001248  0100               	movlb	0	; () banked
  2596  00124A  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2597  00124C  0E40               	movlw	64
  2598  00124E  0100               	movlb	0	; () banked
  2599  001250  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2600  001252  C10C  F068         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2601  001256  C10D  F069         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2602  00125A  EC37  F01D         	call	___awtoft	;wreg free
  2603  00125E  C068  F074         	movff	?___awtoft,___ftmul@f1
  2604  001262  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2605  001266  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2606  00126A  ECFF  F014         	call	___ftmul	;wreg free
  2607  00126E  C074  F08D         	movff	?___ftmul,___ftadd@f1
  2608  001272  C075  F08E         	movff	?___ftmul+1,___ftadd@f1+1
  2609  001276  C076  F08F         	movff	?___ftmul+2,___ftadd@f1+2
  2610  00127A  EC9C  F00F         	call	___ftadd	;wreg free
  2611  00127E  C08D  F1A7         	movff	?___ftadd,_util_getTemperature$2685
  2612  001282  C08E  F1A8         	movff	?___ftadd+1,_util_getTemperature$2685+1
  2613  001286  C08F  F1A9         	movff	?___ftadd+2,_util_getTemperature$2685+2
  2614                           
  2615                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2616                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2617                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2618                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2619  00128A  0E00               	movlw	0
  2620  00128C  0100               	movlb	0	; () banked
  2621  00128E  6F77               	movwf	___ftmul@f2& (0+255),b
  2622  001290  0E80               	movlw	128
  2623  001292  0100               	movlb	0	; () banked
  2624  001294  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2625  001296  0E41               	movlw	65
  2626  001298  0100               	movlb	0	; () banked
  2627  00129A  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2628  00129C  C110  F068         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2629  0012A0  C111  F069         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2630  0012A4  EC37  F01D         	call	___awtoft	;wreg free
  2631  0012A8  C068  F074         	movff	?___awtoft,___ftmul@f1
  2632  0012AC  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2633  0012B0  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2634  0012B4  ECFF  F014         	call	___ftmul	;wreg free
  2635  0012B8  C074  F090         	movff	?___ftmul,___ftadd@f2
  2636  0012BC  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2637  0012C0  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2638  0012C4  C1A7  F08D         	movff	_util_getTemperature$2685,___ftadd@f1
  2639  0012C8  C1A8  F08E         	movff	_util_getTemperature$2685+1,___ftadd@f1+1
  2640  0012CC  C1A9  F08F         	movff	_util_getTemperature$2685+2,___ftadd@f1+2
  2641  0012D0  EC9C  F00F         	call	___ftadd	;wreg free
  2642  0012D4  C08D  F1AA         	movff	?___ftadd,_util_getTemperature$2686
  2643  0012D8  C08E  F1AB         	movff	?___ftadd+1,_util_getTemperature$2686+1
  2644  0012DC  C08F  F1AC         	movff	?___ftadd+2,_util_getTemperature$2686+2
  2645                           
  2646                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2647                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2648                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2649                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2650  0012E0  0E00               	movlw	0
  2651  0012E2  0100               	movlb	0	; () banked
  2652  0012E4  6F77               	movwf	___ftmul@f2& (0+255),b
  2653  0012E6  0E00               	movlw	0
  2654  0012E8  0100               	movlb	0	; () banked
  2655  0012EA  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2656  0012EC  0E42               	movlw	66
  2657  0012EE  0100               	movlb	0	; () banked
  2658  0012F0  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2659  0012F2  C112  F068         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2660  0012F6  C113  F069         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2661  0012FA  EC37  F01D         	call	___awtoft	;wreg free
  2662  0012FE  C068  F074         	movff	?___awtoft,___ftmul@f1
  2663  001302  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2664  001306  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2665  00130A  ECFF  F014         	call	___ftmul	;wreg free
  2666  00130E  C074  F090         	movff	?___ftmul,___ftadd@f2
  2667  001312  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2668  001316  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2669  00131A  C1AA  F08D         	movff	_util_getTemperature$2686,___ftadd@f1
  2670  00131E  C1AB  F08E         	movff	_util_getTemperature$2686+1,___ftadd@f1+1
  2671  001322  C1AC  F08F         	movff	_util_getTemperature$2686+2,___ftadd@f1+2
  2672  001326  EC9C  F00F         	call	___ftadd	;wreg free
  2673  00132A  C08D  F1AD         	movff	?___ftadd,_util_getTemperature$2687
  2674  00132E  C08E  F1AE         	movff	?___ftadd+1,_util_getTemperature$2687+1
  2675  001332  C08F  F1AF         	movff	?___ftadd+2,_util_getTemperature$2687+2
  2676                           
  2677                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2678                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2679                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2680                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2681  001336  0E00               	movlw	0
  2682  001338  0100               	movlb	0	; () banked
  2683  00133A  6F77               	movwf	___ftmul@f2& (0+255),b
  2684  00133C  0E80               	movlw	128
  2685  00133E  0100               	movlb	0	; () banked
  2686  001340  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2687  001342  0E42               	movlw	66
  2688  001344  0100               	movlb	0	; () banked
  2689  001346  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2690  001348  C114  F068         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2691  00134C  C115  F069         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2692  001350  EC37  F01D         	call	___awtoft	;wreg free
  2693  001354  C068  F074         	movff	?___awtoft,___ftmul@f1
  2694  001358  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2695  00135C  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2696  001360  ECFF  F014         	call	___ftmul	;wreg free
  2697  001364  C074  F090         	movff	?___ftmul,___ftadd@f2
  2698  001368  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2699  00136C  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2700  001370  C1AD  F08D         	movff	_util_getTemperature$2687,___ftadd@f1
  2701  001374  C1AE  F08E         	movff	_util_getTemperature$2687+1,___ftadd@f1+1
  2702  001378  C1AF  F08F         	movff	_util_getTemperature$2687+2,___ftadd@f1+2
  2703  00137C  EC9C  F00F         	call	___ftadd	;wreg free
  2704  001380  C08D  F1B0         	movff	?___ftadd,_util_getTemperature$2688
  2705  001384  C08E  F1B1         	movff	?___ftadd+1,_util_getTemperature$2688+1
  2706  001388  C08F  F1B2         	movff	?___ftadd+2,_util_getTemperature$2688+2
  2707                           
  2708                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2709                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2710                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2711                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2712  00138C  C1B0  F08D         	movff	_util_getTemperature$2688,___ftadd@f1
  2713  001390  C1B1  F08E         	movff	_util_getTemperature$2688+1,___ftadd@f1+1
  2714  001394  C1B2  F08F         	movff	_util_getTemperature$2688+2,___ftadd@f1+2
  2715  001398  C1C9  F090         	movff	util_getTemperature@temperature,___ftadd@f2
  2716  00139C  C1CA  F091         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2717  0013A0  C1CB  F092         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2718  0013A4  EC9C  F00F         	call	___ftadd	;wreg free
  2719  0013A8  C08D  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2720  0013AC  C08E  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2721  0013B0  C08F  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2722                           
  2723                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2724  0013B4  C1C9  F074         	movff	util_getTemperature@temperature,___ftmul@f1
  2725  0013B8  C1CA  F075         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2726  0013BC  C1CB  F076         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2727  0013C0  C1A4  F077         	movff	util_getTemperature@sign,___ftmul@f2
  2728  0013C4  C1A5  F078         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2729  0013C8  C1A6  F079         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2730  0013CC  ECFF  F014         	call	___ftmul	;wreg free
  2731  0013D0  C074  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2732  0013D4  C075  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2733  0013D8  C076  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2734                           
  2735                           ;easat2_util_inputs.c: 248: return temperature;
  2736  0013DC  C1C9  F099         	movff	util_getTemperature@temperature,?_util_getTemperature
  2737  0013E0  C1CA  F09A         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2738  0013E4  C1CB  F09B         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2739  0013E8  0012               	return	
  2740  0013EA                     __end_of_util_getTemperature:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           postdec1	equ	0xFE5
  2749                           fsr1l	equ	0xFE1
  2750                           postinc2	equ	0xFDE
  2751                           postdec2	equ	0xFDD
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _util_waits_delay_secs *****************
  2757 ;; Defined at:
  2758 ;;		line 31 in file "easat2_util_waits.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  secs            2    5[BANK0 ] int 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  j               2   10[BANK0 ] int 
  2763 ;;  i               2    8[BANK0 ] int 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2773 ;;      Params:         0       2       0       0       0       0       0
  2774 ;;      Locals:         0       4       0       0       0       0       0
  2775 ;;      Temps:          0       1       0       0       0       0       0
  2776 ;;      Totals:         0       7       0       0       0       0       0
  2777 ;;Total ram usage:        7 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    4
  2780 ;; This function calls:
  2781 ;;		_util_waits_delay_ms
  2782 ;; This function is called by:
  2783 ;;		_util_getTemperature
  2784 ;;		_util_waits_delay_mins
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text5
  2789  003812                     __ptext5:
  2790                           	opt stack 0
  2791  003812                     _util_waits_delay_secs:
  2792                           	opt stack 24
  2793                           
  2794                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2795                           
  2796                           ;incstack = 0
  2797  003812  0E00               	movlw	0
  2798  003814  0100               	movlb	0	; () banked
  2799  003816  6F69               	movwf	(util_waits_delay_secs@i+1)& (0+255),b
  2800  003818  0E00               	movlw	0
  2801  00381A  6F68               	movwf	util_waits_delay_secs@i& (0+255),b
  2802  00381C  D01E               	goto	l4853
  2803  00381E                     l4839:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2807  00381E  0E00               	movlw	0
  2808  003820  0100               	movlb	0	; () banked
  2809  003822  6F6B               	movwf	(util_waits_delay_secs@j+1)& (0+255),b
  2810  003824  0E00               	movlw	0
  2811  003826  6F6A               	movwf	util_waits_delay_secs@j& (0+255),b
  2812  003828                     l4841:
  2813                           
  2814                           ; BSR set to: 0
  2815  003828  0100               	movlb	0	; () banked
  2816  00382A  BF6B               	btfsc	(util_waits_delay_secs@j+1)& (0+255),7,b
  2817  00382C  D008               	goto	l4845
  2818  00382E  0100               	movlb	0	; () banked
  2819  003830  516B               	movf	(util_waits_delay_secs@j+1)& (0+255),w,b
  2820  003832  E110               	bnz	l4851
  2821  003834  0E0A               	movlw	10
  2822  003836  0100               	movlb	0	; () banked
  2823  003838  5D6A               	subwf	util_waits_delay_secs@j& (0+255),w,b
  2824  00383A  B0D8               	btfsc	status,0,c
  2825  00383C  D00B               	goto	l4851
  2826  00383E                     l4845:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2830  00383E  0E00               	movlw	0
  2831  003840  0100               	movlb	0	; () banked
  2832  003842  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2833  003844  0E64               	movlw	100
  2834  003846  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  2835  003848  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  2836  00384C  0100               	movlb	0	; () banked
  2837  00384E  4B6A               	infsnz	util_waits_delay_secs@j& (0+255),f,b
  2838  003850  2B6B               	incf	(util_waits_delay_secs@j+1)& (0+255),f,b
  2839  003852  D7EA               	goto	l4841
  2840  003854                     l4851:
  2841                           
  2842                           ; BSR set to: 0
  2843  003854  0100               	movlb	0	; () banked
  2844  003856  4B68               	infsnz	util_waits_delay_secs@i& (0+255),f,b
  2845  003858  2B69               	incf	(util_waits_delay_secs@i+1)& (0+255),f,b
  2846  00385A                     l4853:
  2847                           
  2848                           ; BSR set to: 0
  2849  00385A  0100               	movlb	0	; () banked
  2850  00385C  5165               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2851  00385E  0100               	movlb	0	; () banked
  2852  003860  5D68               	subwf	util_waits_delay_secs@i& (0+255),w,b
  2853  003862  0100               	movlb	0	; () banked
  2854  003864  5169               	movf	(util_waits_delay_secs@i+1)& (0+255),w,b
  2855  003866  0A80               	xorlw	128
  2856  003868  0100               	movlb	0	; () banked
  2857  00386A  6F67               	movwf	??_util_waits_delay_secs& (0+255),b
  2858  00386C  0100               	movlb	0	; () banked
  2859  00386E  5166               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2860  003870  0A80               	xorlw	128
  2861  003872  0100               	movlb	0	; () banked
  2862  003874  5967               	subwfb	??_util_waits_delay_secs& (0+255),w,b
  2863  003876  B0D8               	btfsc	status,0,c
  2864  003878  0012               	return	
  2865  00387A  D7D1               	goto	l4839
  2866  00387C                     __end_of_util_waits_delay_secs:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           postdec1	equ	0xFE5
  2875                           fsr1l	equ	0xFE1
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _util_onewire_write_byte *****************
  2883 ;; Defined at:
  2884 ;;		line 62 in file "easat2_util_onewire.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  value           2    2[BANK0 ] int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  bit7            2   21[BANK0 ] int 
  2889 ;;  bit6            2   19[BANK0 ] int 
  2890 ;;  bit5            2   17[BANK0 ] int 
  2891 ;;  bit4            2   15[BANK0 ] int 
  2892 ;;  bit3            2   13[BANK0 ] int 
  2893 ;;  bit2            2   11[BANK0 ] int 
  2894 ;;  bit1            2    9[BANK0 ] int 
  2895 ;;  bit0            2    7[BANK0 ] int 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2905 ;;      Params:         0       2       0       0       0       0       0
  2906 ;;      Locals:         0      16       0       0       0       0       0
  2907 ;;      Temps:          0       3       0       0       0       0       0
  2908 ;;      Totals:         0      21       0       0       0       0       0
  2909 ;;Total ram usage:       21 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    4
  2912 ;; This function calls:
  2913 ;;		_util_onewire_write_bit
  2914 ;; This function is called by:
  2915 ;;		_util_getTemperature
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text6
  2920  002388                     __ptext6:
  2921                           	opt stack 0
  2922  002388                     _util_onewire_write_byte:
  2923                           	opt stack 24
  2924                           
  2925                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2926                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;incstack = 0
  2930  002388  0E01               	movlw	1
  2931  00238A  0100               	movlb	0	; () banked
  2932  00238C  1562               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2933  00238E  0100               	movlb	0	; () banked
  2934  002390  6F67               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2935  002392  0100               	movlb	0	; () banked
  2936  002394  6B68               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2937                           
  2938                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2939  002396  0100               	movlb	0	; () banked
  2940  002398  3563               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2941  00239A  3163               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2942  00239C  0100               	movlb	0	; () banked
  2943  00239E  6F65               	movwf	(??_util_onewire_write_byte+1)& (0+255),b
  2944  0023A0  0100               	movlb	0	; () banked
  2945  0023A2  3162               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2946  0023A4  0100               	movlb	0	; () banked
  2947  0023A6  6F64               	movwf	??_util_onewire_write_byte& (0+255),b
  2948  0023A8  0E01               	movlw	1
  2949  0023AA  0100               	movlb	0	; () banked
  2950  0023AC  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  2951  0023AE  0100               	movlb	0	; () banked
  2952  0023B0  6F69               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2953  0023B2  0100               	movlb	0	; () banked
  2954  0023B4  6B6A               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2955                           
  2956                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2957  0023B6  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2958  0023BA  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2959  0023BE  0100               	movlb	0	; () banked
  2960  0023C0  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2961  0023C2  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2962  0023C4  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2963  0023C6  0100               	movlb	0	; () banked
  2964  0023C8  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2965  0023CA  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2966  0023CC  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2967  0023CE  0E01               	movlw	1
  2968  0023D0  0100               	movlb	0	; () banked
  2969  0023D2  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  2970  0023D4  0100               	movlb	0	; () banked
  2971  0023D6  6F6B               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2972  0023D8  0100               	movlb	0	; () banked
  2973  0023DA  6B6C               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2974                           
  2975                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2976  0023DC  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2977  0023E0  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2978  0023E4  0100               	movlb	0	; () banked
  2979  0023E6  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2980  0023E8  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2981  0023EA  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2982  0023EC  0100               	movlb	0	; () banked
  2983  0023EE  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2984  0023F0  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2985  0023F2  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2986  0023F4  0100               	movlb	0	; () banked
  2987  0023F6  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2988  0023F8  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2989  0023FA  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2990  0023FC  0E01               	movlw	1
  2991  0023FE  0100               	movlb	0	; () banked
  2992  002400  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  2993  002402  0100               	movlb	0	; () banked
  2994  002404  6F6D               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2995  002406  0100               	movlb	0	; () banked
  2996  002408  6B6E               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2997                           
  2998                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2999  00240A  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3000  00240E  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3001  002412  0E04               	movlw	4
  3002  002414  0100               	movlb	0	; () banked
  3003  002416  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3004  002418                     u5295:
  3005  002418  0100               	movlb	0	; () banked
  3006  00241A  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3007  00241C  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3008  00241E  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3009  002420  0100               	movlb	0	; () banked
  3010  002422  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3011  002424  D7F9               	goto	u5295
  3012  002426  0E01               	movlw	1
  3013  002428  0100               	movlb	0	; () banked
  3014  00242A  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3015  00242C  0100               	movlb	0	; () banked
  3016  00242E  6F6F               	movwf	util_onewire_write_byte@bit4& (0+255),b
  3017  002430  0100               	movlb	0	; () banked
  3018  002432  6B70               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  3019                           
  3020                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  3021  002434  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3022  002438  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3023  00243C  0E05               	movlw	5
  3024  00243E  0100               	movlb	0	; () banked
  3025  002440  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3026  002442                     u5305:
  3027  002442  0100               	movlb	0	; () banked
  3028  002444  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3029  002446  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3030  002448  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3031  00244A  0100               	movlb	0	; () banked
  3032  00244C  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3033  00244E  D7F9               	goto	u5305
  3034  002450  0E01               	movlw	1
  3035  002452  0100               	movlb	0	; () banked
  3036  002454  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3037  002456  0100               	movlb	0	; () banked
  3038  002458  6F71               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3039  00245A  0100               	movlb	0	; () banked
  3040  00245C  6B72               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3041                           
  3042                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3043  00245E  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3044  002462  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3045  002466  0E06               	movlw	6
  3046  002468  0100               	movlb	0	; () banked
  3047  00246A  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3048  00246C                     u5315:
  3049  00246C  0100               	movlb	0	; () banked
  3050  00246E  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3051  002470  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3052  002472  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3053  002474  0100               	movlb	0	; () banked
  3054  002476  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3055  002478  D7F9               	goto	u5315
  3056  00247A  0E01               	movlw	1
  3057  00247C  0100               	movlb	0	; () banked
  3058  00247E  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3059  002480  0100               	movlb	0	; () banked
  3060  002482  6F73               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3061  002484  0100               	movlb	0	; () banked
  3062  002486  6B74               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3063                           
  3064                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3065  002488  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3066  00248C  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3067  002490  0E07               	movlw	7
  3068  002492  0100               	movlb	0	; () banked
  3069  002494  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3070  002496                     u5325:
  3071  002496  0100               	movlb	0	; () banked
  3072  002498  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3073  00249A  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3074  00249C  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3075  00249E  0100               	movlb	0	; () banked
  3076  0024A0  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3077  0024A2  D7F9               	goto	u5325
  3078  0024A4  0E01               	movlw	1
  3079  0024A6  0100               	movlb	0	; () banked
  3080  0024A8  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3081  0024AA  0100               	movlb	0	; () banked
  3082  0024AC  6F75               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3083  0024AE  0100               	movlb	0	; () banked
  3084  0024B0  6B76               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3088  0024B2  C067  F060         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3089  0024B6  C068  F061         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3090  0024BA  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3091                           
  3092                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3093  0024BE  D000               	nop2		;2 cycle nop
  3094  0024C0  D000               	nop2		;2 cycle nop
  3095  0024C2  F000               	nop	
  3096                           
  3097                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3098  0024C4  C069  F060         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3099  0024C8  C06A  F061         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3100  0024CC  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3101                           
  3102                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3103  0024D0  D000               	nop2		;2 cycle nop
  3104  0024D2  D000               	nop2		;2 cycle nop
  3105  0024D4  F000               	nop	
  3106                           
  3107                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3108  0024D6  C06B  F060         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3109  0024DA  C06C  F061         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3110  0024DE  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3111                           
  3112                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3113  0024E2  D000               	nop2		;2 cycle nop
  3114  0024E4  D000               	nop2		;2 cycle nop
  3115  0024E6  F000               	nop	
  3116                           
  3117                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3118  0024E8  C06D  F060         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3119  0024EC  C06E  F061         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3120  0024F0  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3121                           
  3122                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3123  0024F4  D000               	nop2		;2 cycle nop
  3124  0024F6  D000               	nop2		;2 cycle nop
  3125  0024F8  F000               	nop	
  3126                           
  3127                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3128  0024FA  C06F  F060         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3129  0024FE  C070  F061         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3130  002502  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3131                           
  3132                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3133  002506  D000               	nop2		;2 cycle nop
  3134  002508  D000               	nop2		;2 cycle nop
  3135  00250A  F000               	nop	
  3136                           
  3137                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3138  00250C  C071  F060         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3139  002510  C072  F061         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3140  002514  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3141                           
  3142                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3143  002518  D000               	nop2		;2 cycle nop
  3144  00251A  D000               	nop2		;2 cycle nop
  3145  00251C  F000               	nop	
  3146                           
  3147                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3148  00251E  C073  F060         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3149  002522  C074  F061         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3150  002526  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3151                           
  3152                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3153  00252A  D000               	nop2		;2 cycle nop
  3154  00252C  D000               	nop2		;2 cycle nop
  3155  00252E  F000               	nop	
  3156                           
  3157                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3158  002530  C075  F060         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3159  002534  C076  F061         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3160  002538  ECF2  F01D         	call	_util_onewire_write_bit	;wreg free
  3161                           
  3162                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3163  00253C  D000               	nop2		;2 cycle nop
  3164  00253E  D000               	nop2		;2 cycle nop
  3165  002540  F000               	nop	
  3166  002542  0012               	return		;funcret
  3167  002544                     __end_of_util_onewire_write_byte:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           postdec1	equ	0xFE5
  3176                           fsr1l	equ	0xFE1
  3177                           postinc2	equ	0xFDE
  3178                           postdec2	equ	0xFDD
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _util_onewire_write_bit *****************
  3184 ;; Defined at:
  3185 ;;		line 121 in file "easat2_util_onewire.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  bit_in          2    0[BANK0 ] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3199 ;;      Params:         0       2       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0
  3202 ;;      Totals:         0       2       0       0       0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    3
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_util_onewire_write_byte
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text7
  3214  003BE4                     __ptext7:
  3215                           	opt stack 0
  3216  003BE4                     _util_onewire_write_bit:
  3217                           	opt stack 24
  3218                           
  3219                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3220                           
  3221                           ;incstack = 0
  3222  003BE4  9692               	bcf	3986,3,c	;volatile
  3223                           
  3224                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3225  003BE6  0100               	movlb	0	; () banked
  3226  003BE8  5160               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3227  003BEA  0100               	movlb	0	; () banked
  3228  003BEC  1161               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3229  003BEE  B4D8               	btfsc	status,2,c
  3230  003BF0  D009               	goto	l175
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3234  003BF2  9680               	bcf	3968,3,c	;volatile
  3235                           
  3236                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3237  003BF4  D000               	nop2		;2 cycle nop
  3238  003BF6  D000               	nop2		;2 cycle nop
  3239  003BF8  F000               	nop	
  3240                           
  3241                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3242  003BFA  8680               	bsf	3968,3,c	;volatile
  3243                           
  3244                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3245  003BFC  0E09               	movlw	9
  3246  003BFE                     u6237:
  3247  003BFE  2EE8               	decfsz	wreg,f,c
  3248  003C00  D7FE               	bra	u6237
  3249                           
  3250                           ;easat2_util_onewire.c: 141: } else {
  3251  003C02  0012               	return	
  3252  003C04                     l175:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3256  003C04  9680               	bcf	3968,3,c	;volatile
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3260  003C06  0E0B               	movlw	11
  3261  003C08                     u6247:
  3262  003C08  2EE8               	decfsz	wreg,f,c
  3263  003C0A  D7FE               	bra	u6247
  3264  003C0C  D000               	nop2	
  3265                           
  3266                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3267  003C0E  8680               	bsf	3968,3,c	;volatile
  3268                           
  3269                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3270  003C10  D000               	nop2		;2 cycle nop
  3271  003C12  D000               	nop2		;2 cycle nop
  3272  003C14  F000               	nop	
  3273  003C16  0012               	return	
  3274  003C18                     __end_of_util_onewire_write_bit:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           postinc0	equ	0xFEE
  3281                           wreg	equ	0xFE8
  3282                           postdec1	equ	0xFE5
  3283                           fsr1l	equ	0xFE1
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _util_onewire_reset *****************
  3291 ;; Defined at:
  3292 ;;		line 18 in file "easat2_util_onewire.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  presence        2    3[BANK0 ] int 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  2    0[BANK0 ] int 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         0       2       0       0       0       0       0
  3307 ;;      Locals:         0       2       0       0       0       0       0
  3308 ;;      Temps:          0       1       0       0       0       0       0
  3309 ;;      Totals:         0       5       0       0       0       0       0
  3310 ;;Total ram usage:        5 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    3
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_util_getTemperature
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text8
  3321  003948                     __ptext8:
  3322                           	opt stack 0
  3323  003948                     _util_onewire_reset:
  3324                           	opt stack 25
  3325                           
  3326                           ;easat2_util_onewire.c: 20: int presence = 1;
  3327                           
  3328                           ;incstack = 0
  3329  003948  0E00               	movlw	0
  3330  00394A  0100               	movlb	0	; () banked
  3331  00394C  6F64               	movwf	(util_onewire_reset@presence+1)& (0+255),b
  3332  00394E  0E01               	movlw	1
  3333  003950  6F63               	movwf	util_onewire_reset@presence& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3337  003952  9692               	bcf	3986,3,c	;volatile
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3341  003954  9680               	bcf	3968,3,c	;volatile
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3345  003956  0E5D               	movlw	93
  3346  003958                     u6257:
  3347  003958  2EE8               	decfsz	wreg,f,c
  3348  00395A  D7FE               	bra	u6257
  3349  00395C  F000               	nop	
  3350                           
  3351                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3352  00395E  8680               	bsf	3968,3,c	;volatile
  3353                           
  3354                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3355  003960  0E0B               	movlw	11
  3356  003962                     u6267:
  3357  003962  2EE8               	decfsz	wreg,f,c
  3358  003964  D7FE               	bra	u6267
  3359  003966  D000               	nop2	
  3360                           
  3361                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3362  003968  8692               	bsf	3986,3,c	;volatile
  3363                           
  3364                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3365  00396A  A680               	btfss	3968,3,c	;volatile
  3366  00396C  D004               	goto	u5280
  3367  00396E  0100               	movlb	0	; () banked
  3368  003970  6B62               	clrf	??_util_onewire_reset& (0+255),b
  3369  003972  2B62               	incf	??_util_onewire_reset& (0+255),f,b
  3370  003974  D002               	goto	u5288
  3371  003976                     u5280:
  3372  003976  0100               	movlb	0	; () banked
  3373  003978  6B62               	clrf	??_util_onewire_reset& (0+255),b
  3374  00397A                     u5288:
  3375  00397A  0100               	movlb	0	; () banked
  3376  00397C  5162               	movf	??_util_onewire_reset& (0+255),w,b
  3377  00397E  0100               	movlb	0	; () banked
  3378  003980  6F63               	movwf	util_onewire_reset@presence& (0+255),b
  3379  003982  6B64               	clrf	(util_onewire_reset@presence+1)& (0+255),b
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3383  003984  0E46               	movlw	70
  3384  003986                     u6277:
  3385  003986  2EE8               	decfsz	wreg,f,c
  3386  003988  D7FE               	bra	u6277
  3387                           
  3388                           ;easat2_util_onewire.c: 56: return presence;
  3389  00398A  C063  F060         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3390  00398E  C064  F061         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3391  003992  0012               	return	
  3392  003994                     __end_of_util_onewire_reset:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           postdec1	equ	0xFE5
  3401                           fsr1l	equ	0xFE1
  3402                           postinc2	equ	0xFDE
  3403                           postdec2	equ	0xFDD
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _util_onewire_read_byte *****************
  3409 ;; Defined at:
  3410 ;;		line 96 in file "easat2_util_onewire.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  value           2   37[BANK0 ] int 
  3415 ;;  bit7            2   35[BANK0 ] int 
  3416 ;;  bit6            2   33[BANK0 ] int 
  3417 ;;  bit5            2   31[BANK0 ] int 
  3418 ;;  bit4            2   29[BANK0 ] int 
  3419 ;;  bit3            2   27[BANK0 ] int 
  3420 ;;  bit2            2   25[BANK0 ] int 
  3421 ;;  bit1            2   23[BANK0 ] int 
  3422 ;;  bit0            2   21[BANK0 ] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    5[BANK0 ] int 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       2       0       0       0       0       0
  3433 ;;      Locals:         0      18       0       0       0       0       0
  3434 ;;      Temps:          0      14       0       0       0       0       0
  3435 ;;      Totals:         0      34       0       0       0       0       0
  3436 ;;Total ram usage:       34 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    4
  3439 ;; This function calls:
  3440 ;;		_util_onewire_read_bit
  3441 ;; This function is called by:
  3442 ;;		_util_getTemperature
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text9
  3447  0026E2                     __ptext9:
  3448                           	opt stack 0
  3449  0026E2                     _util_onewire_read_byte:
  3450                           	opt stack 24
  3451                           
  3452                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3453                           ;easat2_util_onewire.c: 99: int value = 0;
  3454                           
  3455                           ;incstack = 0
  3456  0026E2  0E00               	movlw	0
  3457  0026E4  0100               	movlb	0	; () banked
  3458  0026E6  6F86               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3459  0026E8  0E00               	movlw	0
  3460  0026EA  6F85               	movwf	util_onewire_read_byte@value& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3464  0026EC  8692               	bsf	3986,3,c	;volatile
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3468  0026EE  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3469  0026F2  C060  F075         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3470  0026F6  C061  F076         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3471                           
  3472                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3473  0026FA  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3474  0026FE  C060  F077         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3475  002702  C061  F078         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3476                           
  3477                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3478  002706  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3479  00270A  C060  F079         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3480  00270E  C061  F07A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3481                           
  3482                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3483  002712  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3484  002716  C060  F07B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3485  00271A  C061  F07C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3486                           
  3487                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3488  00271E  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3489  002722  C060  F07D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3490  002726  C061  F07E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3491                           
  3492                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3493  00272A  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3494  00272E  C060  F07F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3495  002732  C061  F080         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3496                           
  3497                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3498  002736  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3499  00273A  C060  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3500  00273E  C061  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3501                           
  3502                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3503  002742  EC9B  F01D         	call	_util_onewire_read_bit	;wreg free
  3504  002746  C060  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3505  00274A  C061  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3506                           
  3507                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3508                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3509  00274E  C083  F067         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3510  002752  C084  F068         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3511  002756  0E07               	movlw	7
  3512  002758                     u5335:
  3513  002758  90D8               	bcf	status,0,c
  3514  00275A  0100               	movlb	0	; () banked
  3515  00275C  3767               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3516  00275E  3768               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3517  002760  2EE8               	decfsz	wreg,f,c
  3518  002762  D7FA               	goto	u5335
  3519  002764  C081  F069         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3520  002768  C082  F06A         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3521  00276C  0E06               	movlw	6
  3522  00276E                     u5345:
  3523  00276E  90D8               	bcf	status,0,c
  3524  002770  0100               	movlb	0	; () banked
  3525  002772  3769               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3526  002774  376A               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3527  002776  2EE8               	decfsz	wreg,f,c
  3528  002778  D7FA               	goto	u5345
  3529  00277A  C07F  F06B         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3530  00277E  C080  F06C         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3531  002782  0E05               	movlw	5
  3532  002784                     u5355:
  3533  002784  90D8               	bcf	status,0,c
  3534  002786  0100               	movlb	0	; () banked
  3535  002788  376B               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3536  00278A  376C               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3537  00278C  2EE8               	decfsz	wreg,f,c
  3538  00278E  D7FA               	goto	u5355
  3539  002790  C07D  F06D         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3540  002794  C07E  F06E         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3541  002798  0100               	movlb	0	; () banked
  3542  00279A  3B6D               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3543  00279C  3B6E               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3544  00279E  0EF0               	movlw	240
  3545  0027A0  176E               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3546  0027A2  516D               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3547  0027A4  0B0F               	andlw	15
  3548  0027A6  136E               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3549  0027A8  0EF0               	movlw	240
  3550  0027AA  176D               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3551  0027AC  C07B  F06F         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3552  0027B0  C07C  F070         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3553  0027B4  0100               	movlb	0	; () banked
  3554  0027B6  90D8               	bcf	status,0,c
  3555  0027B8  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3556  0027BA  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3557  0027BC  0100               	movlb	0	; () banked
  3558  0027BE  90D8               	bcf	status,0,c
  3559  0027C0  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3560  0027C2  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3561  0027C4  0100               	movlb	0	; () banked
  3562  0027C6  90D8               	bcf	status,0,c
  3563  0027C8  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3564  0027CA  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3565  0027CC  C079  F071         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3566  0027D0  C07A  F072         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3567  0027D4  0100               	movlb	0	; () banked
  3568  0027D6  90D8               	bcf	status,0,c
  3569  0027D8  3771               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3570  0027DA  3772               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3571  0027DC  0100               	movlb	0	; () banked
  3572  0027DE  90D8               	bcf	status,0,c
  3573  0027E0  3771               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3574  0027E2  3772               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3575  0027E4  C077  F073         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3576  0027E8  C078  F074         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3577  0027EC  90D8               	bcf	status,0,c
  3578  0027EE  0100               	movlb	0	; () banked
  3579  0027F0  3773               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3580  0027F2  3774               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3581  0027F4  0100               	movlb	0	; () banked
  3582  0027F6  5171               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3583  0027F8  0100               	movlb	0	; () banked
  3584  0027FA  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3585  0027FC  0100               	movlb	0	; () banked
  3586  0027FE  5172               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3587  002800  0100               	movlb	0	; () banked
  3588  002802  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3589  002804  0100               	movlb	0	; () banked
  3590  002806  516F               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3591  002808  0100               	movlb	0	; () banked
  3592  00280A  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3593  00280C  0100               	movlb	0	; () banked
  3594  00280E  5170               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3595  002810  0100               	movlb	0	; () banked
  3596  002812  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3597  002814  0100               	movlb	0	; () banked
  3598  002816  516D               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3599  002818  0100               	movlb	0	; () banked
  3600  00281A  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3601  00281C  0100               	movlb	0	; () banked
  3602  00281E  516E               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3603  002820  0100               	movlb	0	; () banked
  3604  002822  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3605  002824  0100               	movlb	0	; () banked
  3606  002826  516B               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3607  002828  0100               	movlb	0	; () banked
  3608  00282A  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3609  00282C  0100               	movlb	0	; () banked
  3610  00282E  516C               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3611  002830  0100               	movlb	0	; () banked
  3612  002832  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3613  002834  0100               	movlb	0	; () banked
  3614  002836  5169               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3615  002838  0100               	movlb	0	; () banked
  3616  00283A  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3617  00283C  0100               	movlb	0	; () banked
  3618  00283E  516A               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3619  002840  0100               	movlb	0	; () banked
  3620  002842  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3621  002844  0100               	movlb	0	; () banked
  3622  002846  5167               	movf	??_util_onewire_read_byte& (0+255),w,b
  3623  002848  0100               	movlb	0	; () banked
  3624  00284A  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3625  00284C  0100               	movlb	0	; () banked
  3626  00284E  5168               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3627  002850  0100               	movlb	0	; () banked
  3628  002852  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3629  002854  0100               	movlb	0	; () banked
  3630  002856  5175               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3631  002858  0100               	movlb	0	; () banked
  3632  00285A  2573               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3633  00285C  0100               	movlb	0	; () banked
  3634  00285E  6F85               	movwf	util_onewire_read_byte@value& (0+255),b
  3635  002860  0100               	movlb	0	; () banked
  3636  002862  5176               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3637  002864  0100               	movlb	0	; () banked
  3638  002866  2174               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3639  002868  0100               	movlb	0	; () banked
  3640  00286A  6F86               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;easat2_util_onewire.c: 116: return value;
  3644  00286C  C085  F065         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3645  002870  C086  F066         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3646  002874  0012               	return	
  3647  002876                     __end_of_util_onewire_read_byte:
  3648                           	opt stack 0
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           postinc0	equ	0xFEE
  3654                           wreg	equ	0xFE8
  3655                           postdec1	equ	0xFE5
  3656                           fsr1l	equ	0xFE1
  3657                           postinc2	equ	0xFDE
  3658                           postdec2	equ	0xFDD
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _util_onewire_read_bit *****************
  3664 ;; Defined at:
  3665 ;;		line 162 in file "easat2_util_onewire.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  value           2    3[BANK0 ] int 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2    0[BANK0 ] int 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3679 ;;      Params:         0       2       0       0       0       0       0
  3680 ;;      Locals:         0       2       0       0       0       0       0
  3681 ;;      Temps:          0       1       0       0       0       0       0
  3682 ;;      Totals:         0       5       0       0       0       0       0
  3683 ;;Total ram usage:        5 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    3
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_util_onewire_read_byte
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text10
  3694  003B36                     __ptext10:
  3695                           	opt stack 0
  3696  003B36                     _util_onewire_read_bit:
  3697                           	opt stack 24
  3698                           
  3699                           ;easat2_util_onewire.c: 164: int value = 0;
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;incstack = 0
  3703  003B36  0E00               	movlw	0
  3704  003B38  0100               	movlb	0	; () banked
  3705  003B3A  6F64               	movwf	(util_onewire_read_bit@value+1)& (0+255),b
  3706  003B3C  0E00               	movlw	0
  3707  003B3E  6F63               	movwf	util_onewire_read_bit@value& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3711  003B40  9692               	bcf	3986,3,c	;volatile
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3715  003B42  9680               	bcf	3968,3,c	;volatile
  3716                           
  3717                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3721  003B44  8680               	bsf	3968,3,c	;volatile
  3722                           
  3723                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3724  003B46  D000               	nop2		;2 cycle nop
  3725                           
  3726                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3727  003B48  A680               	btfss	3968,3,c	;volatile
  3728  003B4A  D004               	goto	u4880
  3729  003B4C  0100               	movlb	0	; () banked
  3730  003B4E  6B62               	clrf	??_util_onewire_read_bit& (0+255),b
  3731  003B50  2B62               	incf	??_util_onewire_read_bit& (0+255),f,b
  3732  003B52  D002               	goto	u4888
  3733  003B54                     u4880:
  3734  003B54  0100               	movlb	0	; () banked
  3735  003B56  6B62               	clrf	??_util_onewire_read_bit& (0+255),b
  3736  003B58                     u4888:
  3737  003B58  0100               	movlb	0	; () banked
  3738  003B5A  5162               	movf	??_util_onewire_read_bit& (0+255),w,b
  3739  003B5C  0100               	movlb	0	; () banked
  3740  003B5E  6F63               	movwf	util_onewire_read_bit@value& (0+255),b
  3741  003B60  6B64               	clrf	(util_onewire_read_bit@value+1)& (0+255),b
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3745  003B62  0E0A               	movlw	10
  3746  003B64                     u6287:
  3747  003B64  2EE8               	decfsz	wreg,f,c
  3748  003B66  D7FE               	bra	u6287
  3749                           
  3750                           ;easat2_util_onewire.c: 187: return value;
  3751  003B68  C063  F060         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3752  003B6C  C064  F061         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3753  003B70  0012               	return	
  3754  003B72                     __end_of_util_onewire_read_bit:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           tblptrh	equ	0xFF7
  3758                           tblptrl	equ	0xFF6
  3759                           tablat	equ	0xFF5
  3760                           postinc0	equ	0xFEE
  3761                           wreg	equ	0xFE8
  3762                           postdec1	equ	0xFE5
  3763                           fsr1l	equ	0xFE1
  3764                           postinc2	equ	0xFDE
  3765                           postdec2	equ	0xFDD
  3766                           fsr2h	equ	0xFDA
  3767                           fsr2l	equ	0xFD9
  3768                           status	equ	0xFD8
  3769                           
  3770 ;; *************** function ___ftdiv *****************
  3771 ;; Defined at:
  3772 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  f1              3   12[BANK0 ] float 
  3775 ;;  f2              3   15[BANK0 ] float 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  f3              3   22[BANK0 ] float 
  3778 ;;  sign            1   26[BANK0 ] unsigned char 
  3779 ;;  exp             1   25[BANK0 ] unsigned char 
  3780 ;;  cntr            1   21[BANK0 ] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  3   12[BANK0 ] float 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3790 ;;      Params:         0       6       0       0       0       0       0
  3791 ;;      Locals:         0       6       0       0       0       0       0
  3792 ;;      Temps:          0       3       0       0       0       0       0
  3793 ;;      Totals:         0      15       0       0       0       0       0
  3794 ;;Total ram usage:       15 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    4
  3797 ;; This function calls:
  3798 ;;		___ftpack
  3799 ;; This function is called by:
  3800 ;;		_util_getTemperature
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text11
  3805  002B5C                     __ptext11:
  3806                           	opt stack 0
  3807  002B5C                     ___ftdiv:
  3808                           	opt stack 24
  3809                           
  3810                           ;incstack = 0
  3811  002B5C  C06E  F072         	movff	___ftdiv@f1+2,??___ftdiv
  3812  002B60  0100               	movlb	0	; () banked
  3813  002B62  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  3814  002B64  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  3815  002B66  0100               	movlb	0	; () banked
  3816  002B68  356D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3817  002B6A  0100               	movlb	0	; () banked
  3818  002B6C  3772               	rlcf	??___ftdiv& (0+255),f,b
  3819  002B6E  E301               	bnc	u5901
  3820  002B70  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  3821  002B72                     u5901:
  3822  002B72  0100               	movlb	0	; () banked
  3823  002B74  5172               	movf	??___ftdiv& (0+255),w,b
  3824  002B76  0100               	movlb	0	; () banked
  3825  002B78  6F79               	movwf	___ftdiv@exp& (0+255),b
  3826  002B7A  0100               	movlb	0	; () banked
  3827  002B7C  5179               	movf	___ftdiv@exp& (0+255),w,b
  3828  002B7E  A4D8               	btfss	status,2,c
  3829  002B80  D00A               	goto	l5677
  3830                           
  3831                           ; BSR set to: 0
  3832  002B82  0E00               	movlw	0
  3833  002B84  0100               	movlb	0	; () banked
  3834  002B86  6F6C               	movwf	?___ftdiv& (0+255),b
  3835  002B88  0E00               	movlw	0
  3836  002B8A  0100               	movlb	0	; () banked
  3837  002B8C  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  3838  002B8E  0E00               	movlw	0
  3839  002B90  0100               	movlb	0	; () banked
  3840  002B92  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843  002B94  0012               	return	
  3844  002B96                     l5677:
  3845                           
  3846                           ; BSR set to: 0
  3847  002B96  C071  F072         	movff	___ftdiv@f2+2,??___ftdiv
  3848  002B9A  0100               	movlb	0	; () banked
  3849  002B9C  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  3850  002B9E  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  3851  002BA0  0100               	movlb	0	; () banked
  3852  002BA2  3570               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3853  002BA4  0100               	movlb	0	; () banked
  3854  002BA6  3772               	rlcf	??___ftdiv& (0+255),f,b
  3855  002BA8  E301               	bnc	u5921
  3856  002BAA  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  3857  002BAC                     u5921:
  3858  002BAC  0100               	movlb	0	; () banked
  3859  002BAE  5172               	movf	??___ftdiv& (0+255),w,b
  3860  002BB0  0100               	movlb	0	; () banked
  3861  002BB2  6F7A               	movwf	___ftdiv@sign& (0+255),b
  3862  002BB4  0100               	movlb	0	; () banked
  3863  002BB6  517A               	movf	___ftdiv@sign& (0+255),w,b
  3864  002BB8  A4D8               	btfss	status,2,c
  3865  002BBA  D00A               	goto	l5683
  3866                           
  3867                           ; BSR set to: 0
  3868  002BBC  0E00               	movlw	0
  3869  002BBE  0100               	movlb	0	; () banked
  3870  002BC0  6F6C               	movwf	?___ftdiv& (0+255),b
  3871  002BC2  0E00               	movlw	0
  3872  002BC4  0100               	movlb	0	; () banked
  3873  002BC6  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  3874  002BC8  0E00               	movlw	0
  3875  002BCA  0100               	movlb	0	; () banked
  3876  002BCC  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879  002BCE  0012               	return	
  3880  002BD0                     l5683:
  3881                           
  3882                           ; BSR set to: 0
  3883  002BD0  0E00               	movlw	0
  3884  002BD2  0100               	movlb	0	; () banked
  3885  002BD4  6F76               	movwf	___ftdiv@f3& (0+255),b
  3886  002BD6  0E00               	movlw	0
  3887  002BD8  0100               	movlb	0	; () banked
  3888  002BDA  6F77               	movwf	(___ftdiv@f3+1)& (0+255),b
  3889  002BDC  0E00               	movlw	0
  3890  002BDE  0100               	movlb	0	; () banked
  3891  002BE0  6F78               	movwf	(___ftdiv@f3+2)& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894  002BE2  0100               	movlb	0	; () banked
  3895  002BE4  517A               	movf	___ftdiv@sign& (0+255),w,b
  3896  002BE6  0F89               	addlw	137
  3897  002BE8  0100               	movlb	0	; () banked
  3898  002BEA  5F79               	subwf	___ftdiv@exp& (0+255),f,b
  3899                           
  3900                           ; BSR set to: 0
  3901  002BEC  C06E  F07A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3902                           
  3903                           ; BSR set to: 0
  3904  002BF0  0100               	movlb	0	; () banked
  3905  002BF2  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3906  002BF4  0100               	movlb	0	; () banked
  3907  002BF6  1B7A               	xorwf	___ftdiv@sign& (0+255),f,b
  3908                           
  3909                           ; BSR set to: 0
  3910  002BF8  0E80               	movlw	128
  3911  002BFA  0100               	movlb	0	; () banked
  3912  002BFC  177A               	andwf	___ftdiv@sign& (0+255),f,b
  3913                           
  3914                           ; BSR set to: 0
  3915  002BFE  0100               	movlb	0	; () banked
  3916  002C00  8F6D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3917                           
  3918                           ; BSR set to: 0
  3919  002C02  0EFF               	movlw	255
  3920  002C04  0100               	movlb	0	; () banked
  3921  002C06  176C               	andwf	___ftdiv@f1& (0+255),f,b
  3922  002C08  0EFF               	movlw	255
  3923  002C0A  0100               	movlb	0	; () banked
  3924  002C0C  176D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3925  002C0E  0E00               	movlw	0
  3926  002C10  0100               	movlb	0	; () banked
  3927  002C12  176E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3928                           
  3929                           ; BSR set to: 0
  3930  002C14  0100               	movlb	0	; () banked
  3931  002C16  8F70               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3932                           
  3933                           ; BSR set to: 0
  3934  002C18  0EFF               	movlw	255
  3935  002C1A  0100               	movlb	0	; () banked
  3936  002C1C  176F               	andwf	___ftdiv@f2& (0+255),f,b
  3937  002C1E  0EFF               	movlw	255
  3938  002C20  0100               	movlb	0	; () banked
  3939  002C22  1770               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3940  002C24  0E00               	movlw	0
  3941  002C26  0100               	movlb	0	; () banked
  3942  002C28  1771               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 0
  3945  002C2A  0E18               	movlw	24
  3946  002C2C  0100               	movlb	0	; () banked
  3947  002C2E  6F75               	movwf	___ftdiv@cntr& (0+255),b
  3948  002C30                     l5703:
  3949                           
  3950                           ; BSR set to: 0
  3951  002C30  0100               	movlb	0	; () banked
  3952  002C32  90D8               	bcf	status,0,c
  3953  002C34  3776               	rlcf	___ftdiv@f3& (0+255),f,b
  3954  002C36  3777               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3955  002C38  3778               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3956                           
  3957                           ; BSR set to: 0
  3958  002C3A  0100               	movlb	0	; () banked
  3959  002C3C  516F               	movf	___ftdiv@f2& (0+255),w,b
  3960  002C3E  0100               	movlb	0	; () banked
  3961  002C40  5D6C               	subwf	___ftdiv@f1& (0+255),w,b
  3962  002C42  0100               	movlb	0	; () banked
  3963  002C44  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3964  002C46  0100               	movlb	0	; () banked
  3965  002C48  596D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3966  002C4A  0100               	movlb	0	; () banked
  3967  002C4C  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3968  002C4E  0100               	movlb	0	; () banked
  3969  002C50  596E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3970  002C52  A0D8               	btfss	status,0,c
  3971  002C54  D00E               	goto	l863
  3972                           
  3973                           ; BSR set to: 0
  3974  002C56  0100               	movlb	0	; () banked
  3975  002C58  516F               	movf	___ftdiv@f2& (0+255),w,b
  3976  002C5A  0100               	movlb	0	; () banked
  3977  002C5C  5F6C               	subwf	___ftdiv@f1& (0+255),f,b
  3978  002C5E  0100               	movlb	0	; () banked
  3979  002C60  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3980  002C62  0100               	movlb	0	; () banked
  3981  002C64  5B6D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3982  002C66  0100               	movlb	0	; () banked
  3983  002C68  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3984  002C6A  0100               	movlb	0	; () banked
  3985  002C6C  5B6E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3986                           
  3987                           ; BSR set to: 0
  3988  002C6E  0100               	movlb	0	; () banked
  3989  002C70  8176               	bsf	___ftdiv@f3& (0+255),0,b
  3990  002C72                     l863:
  3991                           
  3992                           ; BSR set to: 0
  3993  002C72  0100               	movlb	0	; () banked
  3994  002C74  90D8               	bcf	status,0,c
  3995  002C76  376C               	rlcf	___ftdiv@f1& (0+255),f,b
  3996  002C78  376D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3997  002C7A  376E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3998                           
  3999                           ; BSR set to: 0
  4000  002C7C  0100               	movlb	0	; () banked
  4001  002C7E  2F75               	decfsz	___ftdiv@cntr& (0+255),f,b
  4002  002C80  D7D7               	goto	l5703
  4003                           
  4004                           ; BSR set to: 0
  4005                           
  4006                           ; BSR set to: 0
  4007  002C82  C076  F060         	movff	___ftdiv@f3,___ftpack@arg
  4008  002C86  C077  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4009  002C8A  C078  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4010  002C8E  C079  F063         	movff	___ftdiv@exp,___ftpack@exp
  4011  002C92  C07A  F064         	movff	___ftdiv@sign,___ftpack@sign
  4012  002C96  EC7F  F017         	call	___ftpack	;wreg free
  4013  002C9A  C060  F06C         	movff	?___ftpack,?___ftdiv
  4014  002C9E  C061  F06D         	movff	?___ftpack+1,?___ftdiv+1
  4015  002CA2  C062  F06E         	movff	?___ftpack+2,?___ftdiv+2
  4016  002CA6  0012               	return	
  4017  002CA8                     __end_of___ftdiv:
  4018                           	opt stack 0
  4019                           tblptru	equ	0xFF8
  4020                           tblptrh	equ	0xFF7
  4021                           tblptrl	equ	0xFF6
  4022                           tablat	equ	0xFF5
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           postdec1	equ	0xFE5
  4026                           fsr1l	equ	0xFE1
  4027                           postinc2	equ	0xFDE
  4028                           postdec2	equ	0xFDD
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function ___awtoft *****************
  4034 ;; Defined at:
  4035 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  c               2    8[BANK0 ] int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  sign            1   11[BANK0 ] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  3    8[BANK0 ] float 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4049 ;;      Params:         0       3       0       0       0       0       0
  4050 ;;      Locals:         0       1       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0
  4052 ;;      Totals:         0       4       0       0       0       0       0
  4053 ;;Total ram usage:        4 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    4
  4056 ;; This function calls:
  4057 ;;		___ftpack
  4058 ;; This function is called by:
  4059 ;;		_util_getTemperature
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text12
  4064  003A6E                     __ptext12:
  4065                           	opt stack 0
  4066  003A6E                     ___awtoft:
  4067                           	opt stack 24
  4068                           
  4069                           ;incstack = 0
  4070  003A6E  0E00               	movlw	0
  4071  003A70  0100               	movlb	0	; () banked
  4072  003A72  6F6B               	movwf	___awtoft@sign& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075  003A74  0100               	movlb	0	; () banked
  4076  003A76  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  4077  003A78  D008               	goto	l5725
  4078                           
  4079                           ; BSR set to: 0
  4080  003A7A  0100               	movlb	0	; () banked
  4081  003A7C  6D68               	negf	___awtoft@c& (0+255),b
  4082  003A7E  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  4083  003A80  B0D8               	btfsc	status,0,c
  4084  003A82  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  4085                           
  4086                           ; BSR set to: 0
  4087  003A84  0E01               	movlw	1
  4088  003A86  0100               	movlb	0	; () banked
  4089  003A88  6F6B               	movwf	___awtoft@sign& (0+255),b
  4090  003A8A                     l5725:
  4091                           
  4092                           ; BSR set to: 0
  4093  003A8A  C068  F060         	movff	___awtoft@c,___ftpack@arg
  4094  003A8E  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  4095  003A92  0100               	movlb	0	; () banked
  4096  003A94  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4097  003A96  0E8E               	movlw	142
  4098  003A98  0100               	movlb	0	; () banked
  4099  003A9A  6F63               	movwf	___ftpack@exp& (0+255),b
  4100  003A9C  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  4101  003AA0  EC7F  F017         	call	___ftpack	;wreg free
  4102  003AA4  C060  F068         	movff	?___ftpack,?___awtoft
  4103  003AA8  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  4104  003AAC  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  4105  003AB0  0012               	return	
  4106  003AB2                     __end_of___awtoft:
  4107                           	opt stack 0
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           postdec1	equ	0xFE5
  4115                           fsr1l	equ	0xFE1
  4116                           postinc2	equ	0xFDE
  4117                           postdec2	equ	0xFDD
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _util_getSolarCurrent *****************
  4123 ;; Defined at:
  4124 ;;		line 52 in file "easat2_util_inputs.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  solarCurrent    3   62[BANK0 ] float 
  4129 ;;  value           3   59[BANK0 ] float 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  2   57[BANK0 ] int 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4139 ;;      Params:         0       2       0       0       0       0       0
  4140 ;;      Locals:         0       6       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0
  4142 ;;      Totals:         0       8       0       0       0       0       0
  4143 ;;Total ram usage:        8 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    5
  4146 ;; This function calls:
  4147 ;;		___ftmul
  4148 ;;		___fttol
  4149 ;;		___lwtoft
  4150 ;; This function is called by:
  4151 ;;		_main_loop
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text13
  4156  00300A                     __ptext13:
  4157                           	opt stack 0
  4158  00300A                     _util_getSolarCurrent:
  4159                           	opt stack 24
  4160                           
  4161                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4162                           
  4163                           ;incstack = 0
  4164  00300A  0E00               	movlw	0
  4165  00300C  0100               	movlb	0	; () banked
  4166  00300E  6F9B               	movwf	util_getSolarCurrent@value& (0+255),b
  4167  003010  0E00               	movlw	0
  4168  003012  0100               	movlb	0	; () banked
  4169  003014  6F9C               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4170  003016  0E00               	movlw	0
  4171  003018  0100               	movlb	0	; () banked
  4172  00301A  6F9D               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4173  00301C  0E00               	movlw	0
  4174  00301E  0100               	movlb	0	; () banked
  4175  003020  6F9E               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4176  003022  0E00               	movlw	0
  4177  003024  0100               	movlb	0	; () banked
  4178  003026  6F9F               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4179  003028  0E00               	movlw	0
  4180  00302A  0100               	movlb	0	; () banked
  4181  00302C  6FA0               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4185  00302E  84C2               	bsf	4034,2,c	;volatile
  4186  003030  96C2               	bcf	4034,3,c	;volatile
  4187  003032  98C2               	bcf	4034,4,c	;volatile
  4188  003034  9AC2               	bcf	4034,5,c	;volatile
  4189  003036  9CC2               	bcf	4034,6,c	;volatile
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4193  003038  80C2               	bsf	4034,0,c	;volatile
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4197  00303A  9C9E               	bcf	3998,6,c	;volatile
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4201  00303C  82C2               	bsf	4034,1,c	;volatile
  4202  00303E                     l118:
  4203  00303E  AC9E               	btfss	3998,6,c	;volatile
  4204  003040  D7FE               	goto	l118
  4205                           
  4206                           ;easat2_util_inputs.c: 63: value = ADRES;
  4207  003042  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4208  003046  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4209  00304A  EC72  F01E         	call	___lwtoft	;wreg free
  4210  00304E  C068  F09B         	movff	?___lwtoft,util_getSolarCurrent@value
  4211  003052  C069  F09C         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4212  003056  C06A  F09D         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4213                           
  4214                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4215  00305A  9C9E               	bcf	3998,6,c	;volatile
  4216                           
  4217                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4218  00305C  90C2               	bcf	4034,0,c	;volatile
  4219                           
  4220                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4221  00305E  C09B  F074         	movff	util_getSolarCurrent@value,___ftmul@f1
  4222  003062  C09C  F075         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4223  003066  C09D  F076         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4224  00306A  0E33               	movlw	51
  4225  00306C  0100               	movlb	0	; () banked
  4226  00306E  6F77               	movwf	___ftmul@f2& (0+255),b
  4227  003070  0E03               	movlw	3
  4228  003072  0100               	movlb	0	; () banked
  4229  003074  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4230  003076  0E3B               	movlw	59
  4231  003078  0100               	movlb	0	; () banked
  4232  00307A  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4233  00307C  ECFF  F014         	call	___ftmul	;wreg free
  4234  003080  C074  F09E         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4235  003084  C075  F09F         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4236  003088  C076  F0A0         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4237                           
  4238                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4239  00308C  C09E  F074         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4240  003090  C09F  F075         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4241  003094  C0A0  F076         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4242  003098  0E00               	movlw	0
  4243  00309A  0100               	movlb	0	; () banked
  4244  00309C  6F77               	movwf	___ftmul@f2& (0+255),b
  4245  00309E  0E80               	movlw	128
  4246  0030A0  0100               	movlb	0	; () banked
  4247  0030A2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4248  0030A4  0E3F               	movlw	63
  4249  0030A6  0100               	movlb	0	; () banked
  4250  0030A8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4251  0030AA  ECFF  F014         	call	___ftmul	;wreg free
  4252  0030AE  C074  F09E         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4253  0030B2  C075  F09F         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4254  0030B6  C076  F0A0         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4255                           
  4256                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4257  0030BA  C09E  F08A         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4258  0030BE  C09F  F08B         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4259  0030C2  C0A0  F08C         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4260  0030C6  EC54  F016         	call	___fttol	;wreg free
  4261  0030CA  C08A  F099         	movff	?___fttol,?_util_getSolarCurrent
  4262  0030CE  C08B  F09A         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4263  0030D2  0012               	return	
  4264  0030D4                     __end_of_util_getSolarCurrent:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           postdec1	equ	0xFE5
  4273                           fsr1l	equ	0xFE1
  4274                           postinc2	equ	0xFDE
  4275                           postdec2	equ	0xFDD
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _util_getBatteryVoltage *****************
  4281 ;; Defined at:
  4282 ;;		line 19 in file "easat2_util_inputs.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  voltage         3   41[BANK0 ] float 
  4287 ;;  value           3   38[BANK0 ] float 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  3   35[BANK0 ] float 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         0       3       0       0       0       0       0
  4298 ;;      Locals:         0       6       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0
  4300 ;;      Totals:         0       9       0       0       0       0       0
  4301 ;;Total ram usage:        9 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    5
  4304 ;; This function calls:
  4305 ;;		___ftmul
  4306 ;;		___lwtoft
  4307 ;; This function is called by:
  4308 ;;		_main_loop
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text14
  4313  003266                     __ptext14:
  4314                           	opt stack 0
  4315  003266                     _util_getBatteryVoltage:
  4316                           	opt stack 24
  4317                           
  4318                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4319                           
  4320                           ;incstack = 0
  4321  003266  0E00               	movlw	0
  4322  003268  0100               	movlb	0	; () banked
  4323  00326A  6F86               	movwf	util_getBatteryVoltage@value& (0+255),b
  4324  00326C  0E00               	movlw	0
  4325  00326E  0100               	movlb	0	; () banked
  4326  003270  6F87               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4327  003272  0E00               	movlw	0
  4328  003274  0100               	movlb	0	; () banked
  4329  003276  6F88               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4330  003278  0E00               	movlw	0
  4331  00327A  0100               	movlb	0	; () banked
  4332  00327C  6F89               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4333  00327E  0E00               	movlw	0
  4334  003280  0100               	movlb	0	; () banked
  4335  003282  6F8A               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4336  003284  0E00               	movlw	0
  4337  003286  0100               	movlb	0	; () banked
  4338  003288  6F8B               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4342  00328A  94C2               	bcf	4034,2,c	;volatile
  4343  00328C  96C2               	bcf	4034,3,c	;volatile
  4344  00328E  98C2               	bcf	4034,4,c	;volatile
  4345  003290  9AC2               	bcf	4034,5,c	;volatile
  4346  003292  9CC2               	bcf	4034,6,c	;volatile
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4350  003294  80C2               	bsf	4034,0,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4354  003296  9C9E               	bcf	3998,6,c	;volatile
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4358  003298  82C2               	bsf	4034,1,c	;volatile
  4359  00329A                     l112:
  4360  00329A  AC9E               	btfss	3998,6,c	;volatile
  4361  00329C  D7FE               	goto	l112
  4362                           
  4363                           ;easat2_util_inputs.c: 30: value = ADRES;
  4364  00329E  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4365  0032A2  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4366  0032A6  EC72  F01E         	call	___lwtoft	;wreg free
  4367  0032AA  C068  F086         	movff	?___lwtoft,util_getBatteryVoltage@value
  4368  0032AE  C069  F087         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4369  0032B2  C06A  F088         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4370                           
  4371                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4372  0032B6  9C9E               	bcf	3998,6,c	;volatile
  4373                           
  4374                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4375  0032B8  90C2               	bcf	4034,0,c	;volatile
  4376                           
  4377                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4378  0032BA  C086  F074         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4379  0032BE  C087  F075         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4380  0032C2  C088  F076         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4381  0032C6  0E33               	movlw	51
  4382  0032C8  0100               	movlb	0	; () banked
  4383  0032CA  6F77               	movwf	___ftmul@f2& (0+255),b
  4384  0032CC  0E03               	movlw	3
  4385  0032CE  0100               	movlb	0	; () banked
  4386  0032D0  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4387  0032D2  0E3B               	movlw	59
  4388  0032D4  0100               	movlb	0	; () banked
  4389  0032D6  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4390  0032D8  ECFF  F014         	call	___ftmul	;wreg free
  4391  0032DC  C074  F089         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4392  0032E0  C075  F08A         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4393  0032E4  C076  F08B         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4394                           
  4395                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4396  0032E8  C089  F074         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4397  0032EC  C08A  F075         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4398  0032F0  C08B  F076         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4399  0032F4  0E66               	movlw	102
  4400  0032F6  0100               	movlb	0	; () banked
  4401  0032F8  6F77               	movwf	___ftmul@f2& (0+255),b
  4402  0032FA  0EB6               	movlw	182
  4403  0032FC  0100               	movlb	0	; () banked
  4404  0032FE  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4405  003300  0E40               	movlw	64
  4406  003302  0100               	movlb	0	; () banked
  4407  003304  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4408  003306  ECFF  F014         	call	___ftmul	;wreg free
  4409  00330A  C074  F089         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4410  00330E  C075  F08A         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4411  003312  C076  F08B         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4412                           
  4413                           ;easat2_util_inputs.c: 46: return voltage;
  4414  003316  C089  F083         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4415  00331A  C08A  F084         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4416  00331E  C08B  F085         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4417  003322  0012               	return	
  4418  003324                     __end_of_util_getBatteryVoltage:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           postdec1	equ	0xFE5
  4427                           fsr1l	equ	0xFE1
  4428                           postinc2	equ	0xFDE
  4429                           postdec2	equ	0xFDD
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _util_getBatteryCurrent *****************
  4435 ;; Defined at:
  4436 ;;		line 85 in file "easat2_util_inputs.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  batteryCurre    3   62[BANK0 ] float 
  4441 ;;  value           3   59[BANK0 ] float 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2   57[BANK0 ] int 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4451 ;;      Params:         0       2       0       0       0       0       0
  4452 ;;      Locals:         0       6       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0
  4454 ;;      Totals:         0       8       0       0       0       0       0
  4455 ;;Total ram usage:        8 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    5
  4458 ;; This function calls:
  4459 ;;		___ftmul
  4460 ;;		___fttol
  4461 ;;		___lwtoft
  4462 ;; This function is called by:
  4463 ;;		_main_loop
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text15
  4468  0030D4                     __ptext15:
  4469                           	opt stack 0
  4470  0030D4                     _util_getBatteryCurrent:
  4471                           	opt stack 24
  4472                           
  4473                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4474                           
  4475                           ;incstack = 0
  4476  0030D4  0E00               	movlw	0
  4477  0030D6  0100               	movlb	0	; () banked
  4478  0030D8  6F9B               	movwf	util_getBatteryCurrent@value& (0+255),b
  4479  0030DA  0E00               	movlw	0
  4480  0030DC  0100               	movlb	0	; () banked
  4481  0030DE  6F9C               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4482  0030E0  0E00               	movlw	0
  4483  0030E2  0100               	movlb	0	; () banked
  4484  0030E4  6F9D               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4485  0030E6  0E00               	movlw	0
  4486  0030E8  0100               	movlb	0	; () banked
  4487  0030EA  6F9E               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4488  0030EC  0E00               	movlw	0
  4489  0030EE  0100               	movlb	0	; () banked
  4490  0030F0  6F9F               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4491  0030F2  0E00               	movlw	0
  4492  0030F4  0100               	movlb	0	; () banked
  4493  0030F6  6FA0               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4497  0030F8  94C2               	bcf	4034,2,c	;volatile
  4498  0030FA  96C2               	bcf	4034,3,c	;volatile
  4499  0030FC  88C2               	bsf	4034,4,c	;volatile
  4500  0030FE  8AC2               	bsf	4034,5,c	;volatile
  4501  003100  9CC2               	bcf	4034,6,c	;volatile
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4505  003102  80C2               	bsf	4034,0,c	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4509  003104  9C9E               	bcf	3998,6,c	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4513  003106  82C2               	bsf	4034,1,c	;volatile
  4514  003108                     l124:
  4515  003108  AC9E               	btfss	3998,6,c	;volatile
  4516  00310A  D7FE               	goto	l124
  4517                           
  4518                           ;easat2_util_inputs.c: 96: value = ADRES;
  4519  00310C  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4520  003110  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4521  003114  EC72  F01E         	call	___lwtoft	;wreg free
  4522  003118  C068  F09B         	movff	?___lwtoft,util_getBatteryCurrent@value
  4523  00311C  C069  F09C         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4524  003120  C06A  F09D         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4525                           
  4526                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4527  003124  9C9E               	bcf	3998,6,c	;volatile
  4528                           
  4529                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4530  003126  90C2               	bcf	4034,0,c	;volatile
  4531                           
  4532                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4533  003128  C09B  F074         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4534  00312C  C09C  F075         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4535  003130  C09D  F076         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4536  003134  0E33               	movlw	51
  4537  003136  0100               	movlb	0	; () banked
  4538  003138  6F77               	movwf	___ftmul@f2& (0+255),b
  4539  00313A  0E03               	movlw	3
  4540  00313C  0100               	movlb	0	; () banked
  4541  00313E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4542  003140  0E3B               	movlw	59
  4543  003142  0100               	movlb	0	; () banked
  4544  003144  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4545  003146  ECFF  F014         	call	___ftmul	;wreg free
  4546  00314A  C074  F09E         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4547  00314E  C075  F09F         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4548  003152  C076  F0A0         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4549                           
  4550                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4551  003156  C09E  F074         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4552  00315A  C09F  F075         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4553  00315E  C0A0  F076         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4554  003162  0E00               	movlw	0
  4555  003164  0100               	movlb	0	; () banked
  4556  003166  6F77               	movwf	___ftmul@f2& (0+255),b
  4557  003168  0E80               	movlw	128
  4558  00316A  0100               	movlb	0	; () banked
  4559  00316C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4560  00316E  0E3F               	movlw	63
  4561  003170  0100               	movlb	0	; () banked
  4562  003172  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4563  003174  ECFF  F014         	call	___ftmul	;wreg free
  4564  003178  C074  F09E         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4565  00317C  C075  F09F         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4566  003180  C076  F0A0         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4567                           
  4568                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4569  003184  C09E  F08A         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4570  003188  C09F  F08B         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4571  00318C  C0A0  F08C         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4572  003190  EC54  F016         	call	___fttol	;wreg free
  4573  003194  C08A  F099         	movff	?___fttol,?_util_getBatteryCurrent
  4574  003198  C08B  F09A         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4575  00319C  0012               	return	
  4576  00319E                     __end_of_util_getBatteryCurrent:
  4577                           	opt stack 0
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           postinc0	equ	0xFEE
  4583                           wreg	equ	0xFE8
  4584                           postdec1	equ	0xFE5
  4585                           fsr1l	equ	0xFE1
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function ___lwtoft *****************
  4593 ;; Defined at:
  4594 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  c               2    8[BANK0 ] unsigned int 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  3    8[BANK0 ] float 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       3       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         0       3       0       0       0       0       0
  4612 ;;Total ram usage:        3 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    4
  4615 ;; This function calls:
  4616 ;;		___ftpack
  4617 ;; This function is called by:
  4618 ;;		_util_getBatteryVoltage
  4619 ;;		_util_getSolarCurrent
  4620 ;;		_util_getBatteryCurrent
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text16
  4625  003CE4                     __ptext16:
  4626                           	opt stack 0
  4627  003CE4                     ___lwtoft:
  4628                           	opt stack 24
  4629                           
  4630                           ;incstack = 0
  4631  003CE4  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4632  003CE8  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4633  003CEC  0100               	movlb	0	; () banked
  4634  003CEE  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4635  003CF0  0E8E               	movlw	142
  4636  003CF2  0100               	movlb	0	; () banked
  4637  003CF4  6F63               	movwf	___ftpack@exp& (0+255),b
  4638  003CF6  0E00               	movlw	0
  4639  003CF8  0100               	movlb	0	; () banked
  4640  003CFA  6F64               	movwf	___ftpack@sign& (0+255),b
  4641  003CFC  EC7F  F017         	call	___ftpack	;wreg free
  4642  003D00  C060  F068         	movff	?___ftpack,?___lwtoft
  4643  003D04  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4644  003D08  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4645  003D0C  0012               	return	
  4646  003D0E                     __end_of___lwtoft:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           postdec1	equ	0xFE5
  4655                           fsr1l	equ	0xFE1
  4656                           postinc2	equ	0xFDE
  4657                           postdec2	equ	0xFDD
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _util_beacon_transmission *****************
  4663 ;; Defined at:
  4664 ;;		line 22 in file "easat2_util_transmission.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  battery_volt    3  108[BANK0 ] float 
  4667 ;;  solar_curren    2  111[BANK0 ] int 
  4668 ;;  battery_curr    2  113[BANK0 ] int 
  4669 ;;  temperature     3  115[BANK0 ] float 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  i               2  192[BANK1 ] int 
  4672 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4673 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         0      10       0       0       0       0       0
  4684 ;;      Locals:         0       0     194       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0
  4686 ;;      Totals:         0      10     194       0       0       0       0
  4687 ;;Total ram usage:      204 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    7
  4690 ;; This function calls:
  4691 ;;		_memset
  4692 ;;		_sprintf
  4693 ;;		_strcat
  4694 ;;		_strcpy
  4695 ;;		_strlen
  4696 ;;		_util_transmit_letter
  4697 ;; This function is called by:
  4698 ;;		_main_loop
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text17
  4703  002DEC                     __ptext17:
  4704                           	opt stack 0
  4705  002DEC                     _util_beacon_transmission:
  4706                           	opt stack 22
  4707                           
  4708                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4709                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4710                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4711                           
  4712                           ;incstack = 0
  4713  002DEC  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4714  002DEE  0100               	movlb	0	; () banked
  4715  002DF0  6F60               	movwf	memset@p1& (0+255),b
  4716  002DF2  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4717  002DF4  0100               	movlb	0	; () banked
  4718  002DF6  6F61               	movwf	(memset@p1+1)& (0+255),b
  4719  002DF8  0E00               	movlw	0
  4720  002DFA  0100               	movlb	0	; () banked
  4721  002DFC  6F63               	movwf	(memset@c+1)& (0+255),b
  4722  002DFE  0E00               	movlw	0
  4723  002E00  6F62               	movwf	memset@c& (0+255),b
  4724  002E02  0E00               	movlw	0
  4725  002E04  0100               	movlb	0	; () banked
  4726  002E06  6F65               	movwf	(memset@n+1)& (0+255),b
  4727  002E08  0E80               	movlw	128
  4728  002E0A  6F64               	movwf	memset@n& (0+255),b
  4729  002E0C  EC26  F01E         	call	_memset	;wreg free
  4730                           
  4731                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4732  002E10  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4733  002E12  0100               	movlb	0	; () banked
  4734  002E14  6F60               	movwf	strcpy@to& (0+255),b
  4735  002E16  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4736  002E18  0100               	movlb	0	; () banked
  4737  002E1A  6F61               	movwf	(strcpy@to+1)& (0+255),b
  4738  002E1C  0E9E               	movlw	low STR_1
  4739  002E1E  0100               	movlb	0	; () banked
  4740  002E20  6F62               	movwf	strcpy@from& (0+255),b
  4741  002E22  0E7F               	movlw	high STR_1
  4742  002E24  0100               	movlb	0	; () banked
  4743  002E26  6F63               	movwf	(strcpy@from+1)& (0+255),b
  4744  002E28  EC0C  F01E         	call	_strcpy	;wreg free
  4745                           
  4746                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4747  002E2C  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4748  002E2E  0100               	movlb	0	; () banked
  4749  002E30  6F60               	movwf	memset@p1& (0+255),b
  4750  002E32  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4751  002E34  0100               	movlb	0	; () banked
  4752  002E36  6F61               	movwf	(memset@p1+1)& (0+255),b
  4753  002E38  0E00               	movlw	0
  4754  002E3A  0100               	movlb	0	; () banked
  4755  002E3C  6F63               	movwf	(memset@c+1)& (0+255),b
  4756  002E3E  0E00               	movlw	0
  4757  002E40  6F62               	movwf	memset@c& (0+255),b
  4758  002E42  0E00               	movlw	0
  4759  002E44  0100               	movlb	0	; () banked
  4760  002E46  6F65               	movwf	(memset@n+1)& (0+255),b
  4761  002E48  0E40               	movlw	64
  4762  002E4A  6F64               	movwf	memset@n& (0+255),b
  4763  002E4C  EC26  F01E         	call	_memset	;wreg free
  4764                           
  4765                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4766                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4767  002E50  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4768  002E52  0100               	movlb	0	; () banked
  4769  002E54  6F9F               	movwf	sprintf@sp& (0+255),b
  4770  002E56  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4771  002E58  0100               	movlb	0	; () banked
  4772  002E5A  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  4773  002E5C  0E6B               	movlw	low STR_2
  4774  002E5E  0100               	movlb	0	; () banked
  4775  002E60  6FA1               	movwf	sprintf@f& (0+255),b
  4776  002E62  0E7F               	movlw	high STR_2
  4777  002E64  0100               	movlb	0	; () banked
  4778  002E66  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  4779  002E68  C0D3  F0A3         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4780  002E6C  C0D4  F0A4         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4781  002E70  C0D5  F0A5         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4782  002E74  C0CC  F0A6         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4783  002E78  C0CD  F0A7         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4784  002E7C  C0CE  F0A8         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4785  002E80  C0CF  F0A9         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4786  002E84  C0D0  F0AA         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4787  002E88  C0D1  F0AB         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4788  002E8C  C0D2  F0AC         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4789  002E90  EC55  F000         	call	_sprintf	;wreg free
  4790                           
  4791                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4792  002E94  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4793  002E96  0100               	movlb	0	; () banked
  4794  002E98  6F60               	movwf	strcat@to& (0+255),b
  4795  002E9A  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4796  002E9C  0100               	movlb	0	; () banked
  4797  002E9E  6F61               	movwf	(strcat@to+1)& (0+255),b
  4798  002EA0  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4799  002EA2  0100               	movlb	0	; () banked
  4800  002EA4  6F62               	movwf	strcat@from& (0+255),b
  4801  002EA6  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4802  002EA8  0100               	movlb	0	; () banked
  4803  002EAA  6F63               	movwf	(strcat@from+1)& (0+255),b
  4804  002EAC  ECF0  F01C         	call	_strcat	;wreg free
  4805                           
  4806                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4807  002EB0  0E00               	movlw	0
  4808  002EB2  0101               	movlb	1	; () banked
  4809  002EB4  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4810  002EB6  0E00               	movlw	0
  4811  002EB8  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4812  002EBA  D00E               	goto	l6113
  4813  002EBC                     l6109:
  4814                           
  4815                           ; BSR set to: 1
  4816                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4817  002EBC  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4818  002EBE  0101               	movlb	1	; () banked
  4819  002EC0  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4820  002EC2  6ED9               	movwf	fsr2l,c
  4821  002EC4  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4822  002EC6  0101               	movlb	1	; () banked
  4823  002EC8  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4824  002ECA  6EDA               	movwf	fsr2h,c
  4825  002ECC  50DF               	movf	indf2,w,c
  4826  002ECE  EC4C  F00C         	call	_util_transmit_letter
  4827  002ED2  0101               	movlb	1	; () banked
  4828  002ED4  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4829  002ED6  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4830  002ED8                     l6113:
  4831                           
  4832                           ; BSR set to: 1
  4833  002ED8  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4834  002EDA  0100               	movlb	0	; () banked
  4835  002EDC  6F60               	movwf	strlen@s& (0+255),b
  4836  002EDE  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4837  002EE0  0100               	movlb	0	; () banked
  4838  002EE2  6F61               	movwf	(strlen@s+1)& (0+255),b
  4839  002EE4  EC73  F01C         	call	_strlen	;wreg free
  4840  002EE8  0100               	movlb	0	; () banked
  4841  002EEA  5160               	movf	?_strlen& (0+255),w,b
  4842  002EEC  0101               	movlb	1	; () banked
  4843  002EEE  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4844  002EF0  0100               	movlb	0	; () banked
  4845  002EF2  5161               	movf	(?_strlen+1)& (0+255),w,b
  4846  002EF4  0101               	movlb	1	; () banked
  4847  002EF6  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4848  002EF8  B0D8               	btfsc	status,0,c
  4849  002EFA  0012               	return	
  4850  002EFC  D7DF               	goto	l6109
  4851  002EFE                     __end_of_util_beacon_transmission:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postdec1	equ	0xFE5
  4860                           fsr1l	equ	0xFE1
  4861                           indf2	equ	0xFDF
  4862                           postinc2	equ	0xFDE
  4863                           postdec2	equ	0xFDD
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function _util_transmit_letter *****************
  4869 ;; Defined at:
  4870 ;;		line 53 in file "easat2_util_transmission.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  letter          1    wreg     unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  letter          1   12[BANK0 ] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4884 ;;      Params:         0       0       0       0       0       0       0
  4885 ;;      Locals:         0       1       0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0
  4887 ;;      Totals:         0       1       0       0       0       0       0
  4888 ;;Total ram usage:        1 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    6
  4891 ;; This function calls:
  4892 ;;		_util_transmit_morse_sequence
  4893 ;;		_util_transmit_space_between_letters
  4894 ;;		_util_transmit_space_between_words
  4895 ;; This function is called by:
  4896 ;;		_util_beacon_transmission
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text18
  4901  001898                     __ptext18:
  4902                           	opt stack 0
  4903  001898                     _util_transmit_letter:
  4904                           	opt stack 22
  4905                           
  4906                           ; BSR set to: 1
  4907                           ;incstack = 0
  4908                           ;util_transmit_letter@letter stored from wreg
  4909  001898  0100               	movlb	0	; () banked
  4910  00189A  6F6C               	movwf	util_transmit_letter@letter& (0+255),b
  4911                           
  4912                           ;easat2_util_transmission.c: 55: switch (letter) {
  4913  00189C  D174               	goto	l5667
  4914  00189E                     l5581:
  4915                           
  4916                           ;easat2_util_transmission.c: 61: util_transmit_morse_sequence((char*)".-");
  4917  00189E  0EE8               	movlw	low (STR_19+2)
  4918  0018A0  0100               	movlb	0	; () banked
  4919  0018A2  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4920  0018A4  0E7F               	movlw	high (STR_19+2)
  4921  0018A6  0100               	movlb	0	; () banked
  4922  0018A8  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4923  0018AA  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4924                           
  4925                           ;easat2_util_transmission.c: 62: break;
  4926  0018AE  D1EB               	goto	l5669
  4927  0018B0                     l5583:
  4928                           
  4929                           ;easat2_util_transmission.c: 64: util_transmit_morse_sequence((char*)"-...");
  4930  0018B0  0ED0               	movlw	low (STR_36+1)
  4931  0018B2  0100               	movlb	0	; () banked
  4932  0018B4  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4933  0018B6  0E7F               	movlw	high (STR_36+1)
  4934  0018B8  0100               	movlb	0	; () banked
  4935  0018BA  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4936  0018BC  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4937                           
  4938                           ;easat2_util_transmission.c: 65: break;
  4939  0018C0  D1E2               	goto	l5669
  4940  0018C2                     l5585:
  4941                           
  4942                           ;easat2_util_transmission.c: 67: util_transmit_morse_sequence((char*)"-.-.");
  4943  0018C2  0EF5               	movlw	low STR_5
  4944  0018C4  0100               	movlb	0	; () banked
  4945  0018C6  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4946  0018C8  0E7F               	movlw	high STR_5
  4947  0018CA  0100               	movlb	0	; () banked
  4948  0018CC  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4949  0018CE  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4950                           
  4951                           ;easat2_util_transmission.c: 68: break;
  4952  0018D2  D1D9               	goto	l5669
  4953  0018D4                     l5587:
  4954                           
  4955                           ;easat2_util_transmission.c: 70: util_transmit_morse_sequence((char*)"-..");
  4956  0018D4  0ECB               	movlw	low (STR_37+2)
  4957  0018D6  0100               	movlb	0	; () banked
  4958  0018D8  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4959  0018DA  0E7F               	movlw	high (STR_37+2)
  4960  0018DC  0100               	movlb	0	; () banked
  4961  0018DE  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4962  0018E0  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4963                           
  4964                           ;easat2_util_transmission.c: 71: break;
  4965  0018E4  D1D0               	goto	l5669
  4966  0018E6                     l5589:
  4967                           
  4968                           ;easat2_util_transmission.c: 73: util_transmit_morse_sequence((char*)".");
  4969  0018E6  0EC1               	movlw	low (STR_38+4)
  4970  0018E8  0100               	movlb	0	; () banked
  4971  0018EA  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4972  0018EC  0E7F               	movlw	high (STR_38+4)
  4973  0018EE  0100               	movlb	0	; () banked
  4974  0018F0  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4975  0018F2  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4976                           
  4977                           ;easat2_util_transmission.c: 74: break;
  4978  0018F6  D1C7               	goto	l5669
  4979  0018F8                     l5591:
  4980                           
  4981                           ;easat2_util_transmission.c: 76: util_transmit_morse_sequence((char*)"..-.");
  4982  0018F8  0EC4               	movlw	low (STR_41+1)
  4983  0018FA  0100               	movlb	0	; () banked
  4984  0018FC  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4985  0018FE  0E7F               	movlw	high (STR_41+1)
  4986  001900  0100               	movlb	0	; () banked
  4987  001902  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4988  001904  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4989                           
  4990                           ;easat2_util_transmission.c: 77: break;
  4991  001908  D1BE               	goto	l5669
  4992  00190A                     l5593:
  4993                           
  4994                           ;easat2_util_transmission.c: 79: util_transmit_morse_sequence((char*)"--.");
  4995  00190A  0EBF               	movlw	low (STR_38+2)
  4996  00190C  0100               	movlb	0	; () banked
  4997  00190E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4998  001910  0E7F               	movlw	high (STR_38+2)
  4999  001912  0100               	movlb	0	; () banked
  5000  001914  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5001  001916  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5002                           
  5003                           ;easat2_util_transmission.c: 80: break;
  5004  00191A  D1B5               	goto	l5669
  5005  00191C                     l5595:
  5006                           
  5007                           ;easat2_util_transmission.c: 82: util_transmit_morse_sequence((char*)"....");
  5008  00191C  0ED6               	movlw	low (STR_35+1)
  5009  00191E  0100               	movlb	0	; () banked
  5010  001920  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5011  001922  0E7F               	movlw	high (STR_35+1)
  5012  001924  0100               	movlb	0	; () banked
  5013  001926  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5014  001928  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5015                           
  5016                           ;easat2_util_transmission.c: 83: break;
  5017  00192C  D1AC               	goto	l5669
  5018  00192E                     l5597:
  5019                           
  5020                           ;easat2_util_transmission.c: 85: util_transmit_morse_sequence((char*)"..");
  5021  00192E  0ECC               	movlw	low (STR_37+3)
  5022  001930  0100               	movlb	0	; () banked
  5023  001932  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5024  001934  0E7F               	movlw	high (STR_37+3)
  5025  001936  0100               	movlb	0	; () banked
  5026  001938  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5027  00193A  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5028                           
  5029                           ;easat2_util_transmission.c: 86: break;
  5030  00193E  D1A3               	goto	l5669
  5031  001940                     l5599:
  5032                           
  5033                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".---");
  5034  001940  0EB2               	movlw	low (STR_31+1)
  5035  001942  0100               	movlb	0	; () banked
  5036  001944  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5037  001946  0E7F               	movlw	high (STR_31+1)
  5038  001948  0100               	movlb	0	; () banked
  5039  00194A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5040  00194C  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5041                           
  5042                           ;easat2_util_transmission.c: 89: break;
  5043  001950  D19A               	goto	l5669
  5044  001952                     l5601:
  5045                           
  5046                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-.-");
  5047  001952  0EE7               	movlw	low (STR_19+1)
  5048  001954  0100               	movlb	0	; () banked
  5049  001956  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5050  001958  0E7F               	movlw	high (STR_19+1)
  5051  00195A  0100               	movlb	0	; () banked
  5052  00195C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5053  00195E  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5054                           
  5055                           ;easat2_util_transmission.c: 92: break;
  5056  001962  D191               	goto	l5669
  5057  001964                     l5603:
  5058                           
  5059                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)".-..");
  5060  001964  0EFA               	movlw	low STR_14
  5061  001966  0100               	movlb	0	; () banked
  5062  001968  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5063  00196A  0E7F               	movlw	high STR_14
  5064  00196C  0100               	movlb	0	; () banked
  5065  00196E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5066  001970  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5067                           
  5068                           ;easat2_util_transmission.c: 95: break;
  5069  001974  D188               	goto	l5669
  5070  001976                     l5605:
  5071                           
  5072                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"--");
  5073  001976  0EA8               	movlw	low (STR_29+3)
  5074  001978  0100               	movlb	0	; () banked
  5075  00197A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5076  00197C  0E7F               	movlw	high (STR_29+3)
  5077  00197E  0100               	movlb	0	; () banked
  5078  001980  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5079  001982  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5080                           
  5081                           ;easat2_util_transmission.c: 98: break;
  5082  001986  D17F               	goto	l5669
  5083  001988                     l5607:
  5084                           
  5085                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)"-.");
  5086  001988  0EC0               	movlw	low (STR_38+3)
  5087  00198A  0100               	movlb	0	; () banked
  5088  00198C  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5089  00198E  0E7F               	movlw	high (STR_38+3)
  5090  001990  0100               	movlb	0	; () banked
  5091  001992  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5092  001994  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5093                           
  5094                           ;easat2_util_transmission.c: 101: break;
  5095  001998  D176               	goto	l5669
  5096  00199A                     l5609:
  5097                           
  5098                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"---");
  5099  00199A  0EA7               	movlw	low (STR_29+2)
  5100  00199C  0100               	movlb	0	; () banked
  5101  00199E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5102  0019A0  0E7F               	movlw	high (STR_29+2)
  5103  0019A2  0100               	movlb	0	; () banked
  5104  0019A4  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5105  0019A6  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5106                           
  5107                           ;easat2_util_transmission.c: 104: break;
  5108  0019AA  D16D               	goto	l5669
  5109  0019AC                     l5611:
  5110                           
  5111                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)".--.");
  5112  0019AC  0EF0               	movlw	low STR_18
  5113  0019AE  0100               	movlb	0	; () banked
  5114  0019B0  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5115  0019B2  0E7F               	movlw	high STR_18
  5116  0019B4  0100               	movlb	0	; () banked
  5117  0019B6  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5118  0019B8  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5119                           
  5120                           ;easat2_util_transmission.c: 107: break;
  5121  0019BC  D164               	goto	l5669
  5122  0019BE                     l5613:
  5123                           
  5124                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"--.-");
  5125  0019BE  0EE6               	movlw	low STR_19
  5126  0019C0  0100               	movlb	0	; () banked
  5127  0019C2  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5128  0019C4  0E7F               	movlw	high STR_19
  5129  0019C6  0100               	movlb	0	; () banked
  5130  0019C8  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5131  0019CA  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5132                           
  5133                           ;easat2_util_transmission.c: 110: break;
  5134  0019CE  D15B               	goto	l5669
  5135  0019D0                     l5615:
  5136                           
  5137                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)".-.");
  5138  0019D0  0EF6               	movlw	low (STR_5+1)
  5139  0019D2  0100               	movlb	0	; () banked
  5140  0019D4  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5141  0019D6  0E7F               	movlw	high (STR_5+1)
  5142  0019D8  0100               	movlb	0	; () banked
  5143  0019DA  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5144  0019DC  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5145                           
  5146                           ;easat2_util_transmission.c: 113: break;
  5147  0019E0  D152               	goto	l5669
  5148  0019E2                     l5617:
  5149                           
  5150                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)"...");
  5151  0019E2  0ED1               	movlw	low (STR_36+2)
  5152  0019E4  0100               	movlb	0	; () banked
  5153  0019E6  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5154  0019E8  0E7F               	movlw	high (STR_36+2)
  5155  0019EA  0100               	movlb	0	; () banked
  5156  0019EC  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5157  0019EE  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5158                           
  5159                           ;easat2_util_transmission.c: 116: break;
  5160  0019F2  D149               	goto	l5669
  5161  0019F4                     l5619:
  5162                           
  5163                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-");
  5164  0019F4  0EA9               	movlw	low (STR_29+4)
  5165  0019F6  0100               	movlb	0	; () banked
  5166  0019F8  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5167  0019FA  0E7F               	movlw	high (STR_29+4)
  5168  0019FC  0100               	movlb	0	; () banked
  5169  0019FE  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5170  001A00  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5171                           
  5172                           ;easat2_util_transmission.c: 119: break;
  5173  001A04  D140               	goto	l5669
  5174  001A06                     l5621:
  5175                           
  5176                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)"..-");
  5177  001A06  0EEC               	movlw	low (STR_26+1)
  5178  001A08  0100               	movlb	0	; () banked
  5179  001A0A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5180  001A0C  0E7F               	movlw	high (STR_26+1)
  5181  001A0E  0100               	movlb	0	; () banked
  5182  001A10  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5183  001A12  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5184                           
  5185                           ;easat2_util_transmission.c: 122: break;
  5186  001A16  D137               	goto	l5669
  5187  001A18                     l5623:
  5188                           
  5189                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"...-");
  5190  001A18  0E92               	movlw	low (STR_43+2)
  5191  001A1A  0100               	movlb	0	; () banked
  5192  001A1C  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5193  001A1E  0E7F               	movlw	high (STR_43+2)
  5194  001A20  0100               	movlb	0	; () banked
  5195  001A22  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5196  001A24  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5197                           
  5198                           ;easat2_util_transmission.c: 125: break;
  5199  001A28  D12E               	goto	l5669
  5200  001A2A                     l5625:
  5201                           
  5202                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)".--");
  5203  001A2A  0EE2               	movlw	low (STR_27+1)
  5204  001A2C  0100               	movlb	0	; () banked
  5205  001A2E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5206  001A30  0E7F               	movlw	high (STR_27+1)
  5207  001A32  0100               	movlb	0	; () banked
  5208  001A34  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5209  001A36  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5210                           
  5211                           ;easat2_util_transmission.c: 128: break;
  5212  001A3A  D125               	goto	l5669
  5213  001A3C                     l5627:
  5214                           
  5215                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"-..-");
  5216  001A3C  0EEB               	movlw	low STR_26
  5217  001A3E  0100               	movlb	0	; () banked
  5218  001A40  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5219  001A42  0E7F               	movlw	high STR_26
  5220  001A44  0100               	movlb	0	; () banked
  5221  001A46  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5222  001A48  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5223                           
  5224                           ;easat2_util_transmission.c: 131: break;
  5225  001A4C  D11C               	goto	l5669
  5226  001A4E                     l5629:
  5227                           
  5228                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)"-.--");
  5229  001A4E  0EE1               	movlw	low STR_27
  5230  001A50  0100               	movlb	0	; () banked
  5231  001A52  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5232  001A54  0E7F               	movlw	high STR_27
  5233  001A56  0100               	movlb	0	; () banked
  5234  001A58  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5235  001A5A  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5236                           
  5237                           ;easat2_util_transmission.c: 134: break;
  5238  001A5E  D113               	goto	l5669
  5239  001A60                     l5631:
  5240                           
  5241                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--..");
  5242  001A60  0ECA               	movlw	low (STR_37+1)
  5243  001A62  0100               	movlb	0	; () banked
  5244  001A64  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5245  001A66  0E7F               	movlw	high (STR_37+1)
  5246  001A68  0100               	movlb	0	; () banked
  5247  001A6A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5248  001A6C  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5249                           
  5250                           ;easat2_util_transmission.c: 137: break;
  5251  001A70  D10A               	goto	l5669
  5252  001A72                     l5633:
  5253                           
  5254                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)"-----");
  5255  001A72  0EA5               	movlw	low STR_29
  5256  001A74  0100               	movlb	0	; () banked
  5257  001A76  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5258  001A78  0E7F               	movlw	high STR_29
  5259  001A7A  0100               	movlb	0	; () banked
  5260  001A7C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5261  001A7E  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5262                           
  5263                           ;easat2_util_transmission.c: 140: break;
  5264  001A82  D101               	goto	l5669
  5265  001A84                     l5635:
  5266                           
  5267                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)".----");
  5268  001A84  0EAB               	movlw	low STR_30
  5269  001A86  0100               	movlb	0	; () banked
  5270  001A88  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5271  001A8A  0E7F               	movlw	high STR_30
  5272  001A8C  0100               	movlb	0	; () banked
  5273  001A8E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5274  001A90  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5275                           
  5276                           ;easat2_util_transmission.c: 143: break;
  5277  001A94  D0F8               	goto	l5669
  5278  001A96                     l5637:
  5279                           
  5280                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"..---");
  5281  001A96  0EB1               	movlw	low STR_31
  5282  001A98  0100               	movlb	0	; () banked
  5283  001A9A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5284  001A9C  0E7F               	movlw	high STR_31
  5285  001A9E  0100               	movlb	0	; () banked
  5286  001AA0  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5287  001AA2  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5288                           
  5289                           ;easat2_util_transmission.c: 146: break;
  5290  001AA6  D0EF               	goto	l5669
  5291  001AA8                     l5639:
  5292                           
  5293                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"...--");
  5294  001AA8  0EB7               	movlw	low STR_32
  5295  001AAA  0100               	movlb	0	; () banked
  5296  001AAC  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5297  001AAE  0E7F               	movlw	high STR_32
  5298  001AB0  0100               	movlb	0	; () banked
  5299  001AB2  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5300  001AB4  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5301                           
  5302                           ;easat2_util_transmission.c: 149: break;
  5303  001AB8  D0E6               	goto	l5669
  5304  001ABA                     l5641:
  5305                           
  5306                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"....-");
  5307  001ABA  0E91               	movlw	low (STR_43+1)
  5308  001ABC  0100               	movlb	0	; () banked
  5309  001ABE  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5310  001AC0  0E7F               	movlw	high (STR_43+1)
  5311  001AC2  0100               	movlb	0	; () banked
  5312  001AC4  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5313  001AC6  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5314                           
  5315                           ;easat2_util_transmission.c: 152: break;
  5316  001ACA  D0DD               	goto	l5669
  5317  001ACC                     l5643:
  5318                           
  5319                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".....");
  5320  001ACC  0EDB               	movlw	low STR_34
  5321  001ACE  0100               	movlb	0	; () banked
  5322  001AD0  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5323  001AD2  0E7F               	movlw	high STR_34
  5324  001AD4  0100               	movlb	0	; () banked
  5325  001AD6  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5326  001AD8  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5327                           
  5328                           ;easat2_util_transmission.c: 155: break;
  5329  001ADC  D0D4               	goto	l5669
  5330  001ADE                     l5645:
  5331                           
  5332                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-....");
  5333  001ADE  0ED5               	movlw	low STR_35
  5334  001AE0  0100               	movlb	0	; () banked
  5335  001AE2  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5336  001AE4  0E7F               	movlw	high STR_35
  5337  001AE6  0100               	movlb	0	; () banked
  5338  001AE8  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5339  001AEA  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5340                           
  5341                           ;easat2_util_transmission.c: 158: break;
  5342  001AEE  D0CB               	goto	l5669
  5343  001AF0                     l5647:
  5344                           
  5345                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"--...");
  5346  001AF0  0ECF               	movlw	low STR_36
  5347  001AF2  0100               	movlb	0	; () banked
  5348  001AF4  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5349  001AF6  0E7F               	movlw	high STR_36
  5350  001AF8  0100               	movlb	0	; () banked
  5351  001AFA  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5352  001AFC  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5353                           
  5354                           ;easat2_util_transmission.c: 161: break;
  5355  001B00  D0C2               	goto	l5669
  5356  001B02                     l5649:
  5357                           
  5358                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"---..");
  5359  001B02  0EC9               	movlw	low STR_37
  5360  001B04  0100               	movlb	0	; () banked
  5361  001B06  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5362  001B08  0E7F               	movlw	high STR_37
  5363  001B0A  0100               	movlb	0	; () banked
  5364  001B0C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5365  001B0E  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5366                           
  5367                           ;easat2_util_transmission.c: 164: break;
  5368  001B12  D0B9               	goto	l5669
  5369  001B14                     l5651:
  5370                           
  5371                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"----.");
  5372  001B14  0EBD               	movlw	low STR_38
  5373  001B16  0100               	movlb	0	; () banked
  5374  001B18  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5375  001B1A  0E7F               	movlw	high STR_38
  5376  001B1C  0100               	movlb	0	; () banked
  5377  001B1E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5378  001B20  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5379                           
  5380                           ;easat2_util_transmission.c: 167: break;
  5381  001B24  D0B0               	goto	l5669
  5382  001B26                     l5653:
  5383                           
  5384                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)"--..--");
  5385  001B26  0E82               	movlw	low STR_39
  5386  001B28  0100               	movlb	0	; () banked
  5387  001B2A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5388  001B2C  0E7F               	movlw	high STR_39
  5389  001B2E  0100               	movlb	0	; () banked
  5390  001B30  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5391  001B32  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5392                           
  5393                           ;easat2_util_transmission.c: 170: break;
  5394  001B36  D0A7               	goto	l5669
  5395  001B38                     l5655:
  5396                           
  5397                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..--..");
  5398  001B38  0E97               	movlw	low STR_40
  5399  001B3A  0100               	movlb	0	; () banked
  5400  001B3C  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5401  001B3E  0E7F               	movlw	high STR_40
  5402  001B40  0100               	movlb	0	; () banked
  5403  001B42  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5404  001B44  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5405                           
  5406                           ;easat2_util_transmission.c: 173: break;
  5407  001B48  D09E               	goto	l5669
  5408  001B4A                     l5657:
  5409                           
  5410                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"-..-.");
  5411  001B4A  0EC3               	movlw	low STR_41
  5412  001B4C  0100               	movlb	0	; () banked
  5413  001B4E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5414  001B50  0E7F               	movlw	high STR_41
  5415  001B52  0100               	movlb	0	; () banked
  5416  001B54  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5417  001B56  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5418                           
  5419                           ;easat2_util_transmission.c: 176: break;
  5420  001B5A  D095               	goto	l5669
  5421  001B5C                     l5659:
  5422                           
  5423                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)".-.-.-");
  5424  001B5C  0E89               	movlw	low STR_42
  5425  001B5E  0100               	movlb	0	; () banked
  5426  001B60  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5427  001B62  0E7F               	movlw	high STR_42
  5428  001B64  0100               	movlb	0	; () banked
  5429  001B66  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5430  001B68  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5431                           
  5432                           ;easat2_util_transmission.c: 179: break;
  5433  001B6C  D08C               	goto	l5669
  5434  001B6E                     l5661:
  5435                           
  5436                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)"-....-");
  5437  001B6E  0E90               	movlw	low STR_43
  5438  001B70  0100               	movlb	0	; () banked
  5439  001B72  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5440  001B74  0E7F               	movlw	high STR_43
  5441  001B76  0100               	movlb	0	; () banked
  5442  001B78  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5443  001B7A  ECCF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5444                           
  5445                           ;easat2_util_transmission.c: 182: break;
  5446  001B7E  D083               	goto	l5669
  5447  001B80                     l5663:
  5448                           
  5449                           ;easat2_util_transmission.c: 184: util_transmit_space_between_words();
  5450  001B80  ECE1  F01E         	call	_util_transmit_space_between_words	;wreg free
  5451                           
  5452                           ;easat2_util_transmission.c: 189: }
  5453                           
  5454                           ;easat2_util_transmission.c: 187: break;
  5455                           
  5456                           ;easat2_util_transmission.c: 186: default:
  5457                           
  5458                           ;easat2_util_transmission.c: 185: break;
  5459  001B84  D080               	goto	l5669
  5460  001B86                     l5667:
  5461  001B86  0100               	movlb	0	; () banked
  5462  001B88  516C               	movf	util_transmit_letter@letter& (0+255),w,b
  5463                           
  5464                           ; Switch size 1, requested type "space"
  5465                           ; Number of cases is 42, Range of values is 32 to 90
  5466                           ; switch strategies available:
  5467                           ; Name         Instructions Cycles
  5468                           ; simple_byte          127    64 (average)
  5469                           ;	Chosen strategy is simple_byte
  5470  001B8A  0A20               	xorlw	32	; case 32
  5471  001B8C  B4D8               	btfsc	status,2,c
  5472  001B8E  D7F8               	goto	l5663
  5473  001B90  0A0C               	xorlw	12	; case 44
  5474  001B92  B4D8               	btfsc	status,2,c
  5475  001B94  D7C8               	goto	l5653
  5476  001B96  0A01               	xorlw	1	; case 45
  5477  001B98  B4D8               	btfsc	status,2,c
  5478  001B9A  D7E9               	goto	l5661
  5479  001B9C  0A03               	xorlw	3	; case 46
  5480  001B9E  B4D8               	btfsc	status,2,c
  5481  001BA0  D7DD               	goto	l5659
  5482  001BA2  0A01               	xorlw	1	; case 47
  5483  001BA4  B4D8               	btfsc	status,2,c
  5484  001BA6  D7D1               	goto	l5657
  5485  001BA8  0A1F               	xorlw	31	; case 48
  5486  001BAA  B4D8               	btfsc	status,2,c
  5487  001BAC  D762               	goto	l5633
  5488  001BAE  0A01               	xorlw	1	; case 49
  5489  001BB0  B4D8               	btfsc	status,2,c
  5490  001BB2  D768               	goto	l5635
  5491  001BB4  0A03               	xorlw	3	; case 50
  5492  001BB6  B4D8               	btfsc	status,2,c
  5493  001BB8  D76E               	goto	l5637
  5494  001BBA  0A01               	xorlw	1	; case 51
  5495  001BBC  B4D8               	btfsc	status,2,c
  5496  001BBE  D774               	goto	l5639
  5497  001BC0  0A07               	xorlw	7	; case 52
  5498  001BC2  B4D8               	btfsc	status,2,c
  5499  001BC4  D77A               	goto	l5641
  5500  001BC6  0A01               	xorlw	1	; case 53
  5501  001BC8  B4D8               	btfsc	status,2,c
  5502  001BCA  D780               	goto	l5643
  5503  001BCC  0A03               	xorlw	3	; case 54
  5504  001BCE  B4D8               	btfsc	status,2,c
  5505  001BD0  D786               	goto	l5645
  5506  001BD2  0A01               	xorlw	1	; case 55
  5507  001BD4  B4D8               	btfsc	status,2,c
  5508  001BD6  D78C               	goto	l5647
  5509  001BD8  0A0F               	xorlw	15	; case 56
  5510  001BDA  B4D8               	btfsc	status,2,c
  5511  001BDC  D792               	goto	l5649
  5512  001BDE  0A01               	xorlw	1	; case 57
  5513  001BE0  B4D8               	btfsc	status,2,c
  5514  001BE2  D798               	goto	l5651
  5515  001BE4  0A06               	xorlw	6	; case 63
  5516  001BE6  B4D8               	btfsc	status,2,c
  5517  001BE8  D7A7               	goto	l5655
  5518  001BEA  0A7E               	xorlw	126	; case 65
  5519  001BEC  B4D8               	btfsc	status,2,c
  5520  001BEE  D657               	goto	l5581
  5521  001BF0  0A03               	xorlw	3	; case 66
  5522  001BF2  B4D8               	btfsc	status,2,c
  5523  001BF4  D65D               	goto	l5583
  5524  001BF6  0A01               	xorlw	1	; case 67
  5525  001BF8  B4D8               	btfsc	status,2,c
  5526  001BFA  D663               	goto	l5585
  5527  001BFC  0A07               	xorlw	7	; case 68
  5528  001BFE  B4D8               	btfsc	status,2,c
  5529  001C00  D669               	goto	l5587
  5530  001C02  0A01               	xorlw	1	; case 69
  5531  001C04  B4D8               	btfsc	status,2,c
  5532  001C06  D66F               	goto	l5589
  5533  001C08  0A03               	xorlw	3	; case 70
  5534  001C0A  B4D8               	btfsc	status,2,c
  5535  001C0C  D675               	goto	l5591
  5536  001C0E  0A01               	xorlw	1	; case 71
  5537  001C10  B4D8               	btfsc	status,2,c
  5538  001C12  D67B               	goto	l5593
  5539  001C14  0A0F               	xorlw	15	; case 72
  5540  001C16  B4D8               	btfsc	status,2,c
  5541  001C18  D681               	goto	l5595
  5542  001C1A  0A01               	xorlw	1	; case 73
  5543  001C1C  B4D8               	btfsc	status,2,c
  5544  001C1E  D687               	goto	l5597
  5545  001C20  0A03               	xorlw	3	; case 74
  5546  001C22  B4D8               	btfsc	status,2,c
  5547  001C24  D68D               	goto	l5599
  5548  001C26  0A01               	xorlw	1	; case 75
  5549  001C28  B4D8               	btfsc	status,2,c
  5550  001C2A  D693               	goto	l5601
  5551  001C2C  0A07               	xorlw	7	; case 76
  5552  001C2E  B4D8               	btfsc	status,2,c
  5553  001C30  D699               	goto	l5603
  5554  001C32  0A01               	xorlw	1	; case 77
  5555  001C34  B4D8               	btfsc	status,2,c
  5556  001C36  D69F               	goto	l5605
  5557  001C38  0A03               	xorlw	3	; case 78
  5558  001C3A  B4D8               	btfsc	status,2,c
  5559  001C3C  D6A5               	goto	l5607
  5560  001C3E  0A01               	xorlw	1	; case 79
  5561  001C40  B4D8               	btfsc	status,2,c
  5562  001C42  D6AB               	goto	l5609
  5563  001C44  0A1F               	xorlw	31	; case 80
  5564  001C46  B4D8               	btfsc	status,2,c
  5565  001C48  D6B1               	goto	l5611
  5566  001C4A  0A01               	xorlw	1	; case 81
  5567  001C4C  B4D8               	btfsc	status,2,c
  5568  001C4E  D6B7               	goto	l5613
  5569  001C50  0A03               	xorlw	3	; case 82
  5570  001C52  B4D8               	btfsc	status,2,c
  5571  001C54  D6BD               	goto	l5615
  5572  001C56  0A01               	xorlw	1	; case 83
  5573  001C58  B4D8               	btfsc	status,2,c
  5574  001C5A  D6C3               	goto	l5617
  5575  001C5C  0A07               	xorlw	7	; case 84
  5576  001C5E  B4D8               	btfsc	status,2,c
  5577  001C60  D6C9               	goto	l5619
  5578  001C62  0A01               	xorlw	1	; case 85
  5579  001C64  B4D8               	btfsc	status,2,c
  5580  001C66  D6CF               	goto	l5621
  5581  001C68  0A03               	xorlw	3	; case 86
  5582  001C6A  B4D8               	btfsc	status,2,c
  5583  001C6C  D6D5               	goto	l5623
  5584  001C6E  0A01               	xorlw	1	; case 87
  5585  001C70  B4D8               	btfsc	status,2,c
  5586  001C72  D6DB               	goto	l5625
  5587  001C74  0A0F               	xorlw	15	; case 88
  5588  001C76  B4D8               	btfsc	status,2,c
  5589  001C78  D6E1               	goto	l5627
  5590  001C7A  0A01               	xorlw	1	; case 89
  5591  001C7C  B4D8               	btfsc	status,2,c
  5592  001C7E  D6E7               	goto	l5629
  5593  001C80  0A03               	xorlw	3	; case 90
  5594  001C82  B4D8               	btfsc	status,2,c
  5595  001C84  D6ED               	goto	l5631
  5596  001C86                     l5669:
  5597                           
  5598                           ;easat2_util_transmission.c: 192: util_transmit_space_between_letters();
  5599  001C86  ECE9  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5600  001C8A  0012               	return		;funcret
  5601  001C8C                     __end_of_util_transmit_letter:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           postdec1	equ	0xFE5
  5610                           fsr1l	equ	0xFE1
  5611                           indf2	equ	0xFDF
  5612                           postinc2	equ	0xFDE
  5613                           postdec2	equ	0xFDD
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _util_transmit_space_between_words *****************
  5619 ;; Defined at:
  5620 ;;		line 287 in file "easat2_util_transmission.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5634 ;;      Params:         0       0       0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    4
  5641 ;; This function calls:
  5642 ;;		_util_waits_delay_ms
  5643 ;; This function is called by:
  5644 ;;		_util_transmit_letter
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text19
  5649  003DC2                     __ptext19:
  5650                           	opt stack 0
  5651  003DC2                     _util_transmit_space_between_words:
  5652                           	opt stack 23
  5653                           
  5654                           ;easat2_util_transmission.c: 288: util_waits_delay_ms(7*(int)(2400/32));
  5655                           
  5656                           ;incstack = 0
  5657  003DC2  0E02               	movlw	2
  5658  003DC4  0100               	movlb	0	; () banked
  5659  003DC6  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5660  003DC8  0E0D               	movlw	13
  5661  003DCA  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5662  003DCC  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  5663  003DD0  0012               	return		;funcret
  5664  003DD2                     __end_of_util_transmit_space_between_words:
  5665                           	opt stack 0
  5666                           tblptru	equ	0xFF8
  5667                           tblptrh	equ	0xFF7
  5668                           tblptrl	equ	0xFF6
  5669                           tablat	equ	0xFF5
  5670                           postinc0	equ	0xFEE
  5671                           wreg	equ	0xFE8
  5672                           postdec1	equ	0xFE5
  5673                           fsr1l	equ	0xFE1
  5674                           indf2	equ	0xFDF
  5675                           postinc2	equ	0xFDE
  5676                           postdec2	equ	0xFDD
  5677                           fsr2h	equ	0xFDA
  5678                           fsr2l	equ	0xFD9
  5679                           status	equ	0xFD8
  5680                           
  5681 ;; *************** function _util_transmit_space_between_letters *****************
  5682 ;; Defined at:
  5683 ;;		line 280 in file "easat2_util_transmission.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5697 ;;      Params:         0       0       0       0       0       0       0
  5698 ;;      Locals:         0       0       0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0
  5700 ;;      Totals:         0       0       0       0       0       0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    4
  5704 ;; This function calls:
  5705 ;;		_util_waits_delay_ms
  5706 ;; This function is called by:
  5707 ;;		_util_transmit_letter
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text20
  5712  003DD2                     __ptext20:
  5713                           	opt stack 0
  5714  003DD2                     _util_transmit_space_between_letters:
  5715                           	opt stack 23
  5716                           
  5717                           ;easat2_util_transmission.c: 281: util_waits_delay_ms(3*(int)(2400/32));
  5718                           
  5719                           ;incstack = 0
  5720  003DD2  0E00               	movlw	0
  5721  003DD4  0100               	movlb	0	; () banked
  5722  003DD6  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5723  003DD8  0EE1               	movlw	225
  5724  003DDA  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5725  003DDC  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  5726  003DE0  0012               	return		;funcret
  5727  003DE2                     __end_of_util_transmit_space_between_letters:
  5728                           	opt stack 0
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           postinc0	equ	0xFEE
  5734                           wreg	equ	0xFE8
  5735                           postdec1	equ	0xFE5
  5736                           fsr1l	equ	0xFE1
  5737                           indf2	equ	0xFDF
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _util_transmit_morse_sequence *****************
  5745 ;; Defined at:
  5746 ;;		line 202 in file "easat2_util_transmission.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  morse_sequen    2    6[BANK0 ] PTR unsigned char 
  5749 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5750 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5751 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5752 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5753 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5754 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5755 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5756 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5757 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5758 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5759 ;;		 -> STR_3(3), 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  i               2   10[BANK0 ] int 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5771 ;;      Params:         0       2       0       0       0       0       0
  5772 ;;      Locals:         0       2       0       0       0       0       0
  5773 ;;      Temps:          0       2       0       0       0       0       0
  5774 ;;      Totals:         0       6       0       0       0       0       0
  5775 ;;Total ram usage:        6 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    5
  5778 ;; This function calls:
  5779 ;;		_strlen
  5780 ;;		_util_transmit_dash
  5781 ;;		_util_transmit_dot
  5782 ;;		_util_transmit_space_between_dots_dashes
  5783 ;; This function is called by:
  5784 ;;		_util_transmit_letter
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text21
  5789  00379E                     __ptext21:
  5790                           	opt stack 0
  5791  00379E                     _util_transmit_morse_sequence:
  5792                           	opt stack 22
  5793                           
  5794                           ;easat2_util_transmission.c: 206: for (int i = 0; i < strlen(morse_sequence); i++) {
  5795                           
  5796                           ;incstack = 0
  5797  00379E  0E00               	movlw	0
  5798  0037A0  0100               	movlb	0	; () banked
  5799  0037A2  6F6B               	movwf	(util_transmit_morse_sequence@i+1)& (0+255),b
  5800  0037A4  0E00               	movlw	0
  5801  0037A6  6F6A               	movwf	util_transmit_morse_sequence@i& (0+255),b
  5802  0037A8  D023               	goto	l4901
  5803  0037AA                     l4889:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;easat2_util_transmission.c: 211: util_transmit_dot();
  5807  0037AA  ECAF  F01E         	call	_util_transmit_dot	;wreg free
  5808                           
  5809                           ;easat2_util_transmission.c: 212: break;
  5810  0037AE  D01B               	goto	l4897
  5811  0037B0                     l4891:
  5812                           
  5813                           ;easat2_util_transmission.c: 214: util_transmit_dash();
  5814  0037B0  ECBD  F01E         	call	_util_transmit_dash	;wreg free
  5815                           
  5816                           ;easat2_util_transmission.c: 218: }
  5817                           
  5818                           ;easat2_util_transmission.c: 217: break;
  5819                           
  5820                           ;easat2_util_transmission.c: 216: default:
  5821                           
  5822                           ;easat2_util_transmission.c: 215: break;
  5823  0037B4  D018               	goto	l4897
  5824  0037B6                     l4895:
  5825  0037B6  0100               	movlb	0	; () banked
  5826  0037B8  516A               	movf	util_transmit_morse_sequence@i& (0+255),w,b
  5827  0037BA  0100               	movlb	0	; () banked
  5828  0037BC  2566               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5829  0037BE  0100               	movlb	0	; () banked
  5830  0037C0  6F68               	movwf	??_util_transmit_morse_sequence& (0+255),b
  5831  0037C2  0100               	movlb	0	; () banked
  5832  0037C4  516B               	movf	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5833  0037C6  0100               	movlb	0	; () banked
  5834  0037C8  2167               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5835  0037CA  0100               	movlb	0	; () banked
  5836  0037CC  6F69               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),b
  5837  0037CE  C068  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5838  0037D2  C069  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5839  0037D6                     	if	0	;tblptru may be non-zero
  5840  0037D6                     	endif
  5841  0037D6                     	if	0	;tblptru may be non-zero
  5842  0037D6                     	endif
  5843  0037D6  0008               	tblrd		*
  5844  0037D8  50F5               	movf	tablat,w,c
  5845                           
  5846                           ; Switch size 1, requested type "space"
  5847                           ; Number of cases is 2, Range of values is 45 to 46
  5848                           ; switch strategies available:
  5849                           ; Name         Instructions Cycles
  5850                           ; simple_byte            7     4 (average)
  5851                           ;	Chosen strategy is simple_byte
  5852  0037DA  0A2D               	xorlw	45	; case 45
  5853  0037DC  B4D8               	btfsc	status,2,c
  5854  0037DE  D7E8               	goto	l4891
  5855  0037E0  0A03               	xorlw	3	; case 46
  5856  0037E2  B4D8               	btfsc	status,2,c
  5857  0037E4  D7E2               	goto	l4889
  5858  0037E6                     l4897:
  5859                           
  5860                           ;easat2_util_transmission.c: 221: util_transmit_space_between_dots_dashes();
  5861  0037E6  ECF1  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5862  0037EA  0100               	movlb	0	; () banked
  5863  0037EC  4B6A               	infsnz	util_transmit_morse_sequence@i& (0+255),f,b
  5864  0037EE  2B6B               	incf	(util_transmit_morse_sequence@i+1)& (0+255),f,b
  5865  0037F0                     l4901:
  5866                           
  5867                           ; BSR set to: 0
  5868  0037F0  C066  F060         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5869  0037F4  C067  F061         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5870  0037F8  EC73  F01C         	call	_strlen	;wreg free
  5871  0037FC  0100               	movlb	0	; () banked
  5872  0037FE  5160               	movf	?_strlen& (0+255),w,b
  5873  003800  0100               	movlb	0	; () banked
  5874  003802  5D6A               	subwf	util_transmit_morse_sequence@i& (0+255),w,b
  5875  003804  0100               	movlb	0	; () banked
  5876  003806  5161               	movf	(?_strlen+1)& (0+255),w,b
  5877  003808  0100               	movlb	0	; () banked
  5878  00380A  596B               	subwfb	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5879  00380C  B0D8               	btfsc	status,0,c
  5880  00380E  0012               	return	
  5881  003810  D7D2               	goto	l4895
  5882  003812                     __end_of_util_transmit_morse_sequence:
  5883                           	opt stack 0
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           postinc0	equ	0xFEE
  5889                           wreg	equ	0xFE8
  5890                           postdec1	equ	0xFE5
  5891                           fsr1l	equ	0xFE1
  5892                           indf2	equ	0xFDF
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5900 ;; Defined at:
  5901 ;;		line 272 in file "easat2_util_transmission.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5915 ;;      Params:         0       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    4
  5922 ;; This function calls:
  5923 ;;		_util_waits_delay_ms
  5924 ;; This function is called by:
  5925 ;;		_util_transmit_morse_sequence
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text22
  5930  003DE2                     __ptext22:
  5931                           	opt stack 0
  5932  003DE2                     _util_transmit_space_between_dots_dashes:
  5933                           	opt stack 22
  5934                           
  5935                           ;easat2_util_transmission.c: 273: util_waits_delay_ms((int)(2400/32));
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;incstack = 0
  5939  003DE2  0E00               	movlw	0
  5940  003DE4  0100               	movlb	0	; () banked
  5941  003DE6  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5942  003DE8  0E4B               	movlw	75
  5943  003DEA  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5944  003DEC  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  5945  003DF0  0012               	return		;funcret
  5946  003DF2                     __end_of_util_transmit_space_between_dots_dashes:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postdec1	equ	0xFE5
  5955                           fsr1l	equ	0xFE1
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           fsr2h	equ	0xFDA
  5960                           fsr2l	equ	0xFD9
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _util_transmit_dot *****************
  5964 ;; Defined at:
  5965 ;;		line 232 in file "easat2_util_transmission.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5979 ;;      Params:         0       0       0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0
  5982 ;;      Totals:         0       0       0       0       0       0       0
  5983 ;;Total ram usage:        0 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    4
  5986 ;; This function calls:
  5987 ;;		_util_pwm_start
  5988 ;;		_util_pwm_stop
  5989 ;;		_util_waits_delay_ms
  5990 ;; This function is called by:
  5991 ;;		_util_transmit_morse_sequence
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text23
  5996  003D5E                     __ptext23:
  5997                           	opt stack 0
  5998  003D5E                     _util_transmit_dot:
  5999                           	opt stack 22
  6000                           
  6001                           ;easat2_util_transmission.c: 236: (PORTDbits.RD1) = 1;
  6002                           
  6003                           ;incstack = 0
  6004  003D5E  8283               	bsf	3971,1,c	;volatile
  6005                           
  6006                           ;easat2_util_transmission.c: 239: util_pwm_start();
  6007  003D60  EC03  F01F         	call	_util_pwm_start	;wreg free
  6008                           
  6009                           ;easat2_util_transmission.c: 240: util_waits_delay_ms((int)(2400/32));
  6010  003D64  0E00               	movlw	0
  6011  003D66  0100               	movlb	0	; () banked
  6012  003D68  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  6013  003D6A  0E4B               	movlw	75
  6014  003D6C  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  6015  003D6E  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  6016                           
  6017                           ;easat2_util_transmission.c: 241: util_pwm_stop();
  6018  003D72  ECFF  F01E         	call	_util_pwm_stop	;wreg free
  6019                           
  6020                           ;easat2_util_transmission.c: 243: (PORTDbits.RD1) = 0;
  6021  003D76  9283               	bcf	3971,1,c	;volatile
  6022  003D78  0012               	return		;funcret
  6023  003D7A                     __end_of_util_transmit_dot:
  6024                           	opt stack 0
  6025                           tblptru	equ	0xFF8
  6026                           tblptrh	equ	0xFF7
  6027                           tblptrl	equ	0xFF6
  6028                           tablat	equ	0xFF5
  6029                           postinc0	equ	0xFEE
  6030                           wreg	equ	0xFE8
  6031                           postdec1	equ	0xFE5
  6032                           fsr1l	equ	0xFE1
  6033                           indf2	equ	0xFDF
  6034                           postinc2	equ	0xFDE
  6035                           postdec2	equ	0xFDD
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _util_transmit_dash *****************
  6041 ;; Defined at:
  6042 ;;		line 254 in file "easat2_util_transmission.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6056 ;;      Params:         0       0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    4
  6063 ;; This function calls:
  6064 ;;		_util_pwm_start
  6065 ;;		_util_pwm_stop
  6066 ;;		_util_waits_delay_ms
  6067 ;; This function is called by:
  6068 ;;		_util_transmit_morse_sequence
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text24
  6073  003D7A                     __ptext24:
  6074                           	opt stack 0
  6075  003D7A                     _util_transmit_dash:
  6076                           	opt stack 22
  6077                           
  6078                           ;easat2_util_transmission.c: 258: (PORTDbits.RD1) = 1;
  6079                           
  6080                           ;incstack = 0
  6081  003D7A  8283               	bsf	3971,1,c	;volatile
  6082                           
  6083                           ;easat2_util_transmission.c: 261: util_pwm_start();
  6084  003D7C  EC03  F01F         	call	_util_pwm_start	;wreg free
  6085                           
  6086                           ;easat2_util_transmission.c: 262: util_waits_delay_ms(((int)(2400/32)*3));
  6087  003D80  0E00               	movlw	0
  6088  003D82  0100               	movlb	0	; () banked
  6089  003D84  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  6090  003D86  0EE1               	movlw	225
  6091  003D88  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  6092  003D8A  ECB9  F01D         	call	_util_waits_delay_ms	;wreg free
  6093                           
  6094                           ;easat2_util_transmission.c: 263: util_pwm_stop();
  6095  003D8E  ECFF  F01E         	call	_util_pwm_stop	;wreg free
  6096                           
  6097                           ;easat2_util_transmission.c: 265: (PORTDbits.RD1) = 0;
  6098  003D92  9283               	bcf	3971,1,c	;volatile
  6099  003D94  0012               	return		;funcret
  6100  003D96                     __end_of_util_transmit_dash:
  6101                           	opt stack 0
  6102                           tblptru	equ	0xFF8
  6103                           tblptrh	equ	0xFF7
  6104                           tblptrl	equ	0xFF6
  6105                           tablat	equ	0xFF5
  6106                           postinc0	equ	0xFEE
  6107                           wreg	equ	0xFE8
  6108                           postdec1	equ	0xFE5
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function _util_waits_delay_ms *****************
  6118 ;; Defined at:
  6119 ;;		line 40 in file "easat2_util_waits.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  ms              2    0[BANK0 ] int 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  i               2    3[BANK0 ] int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6133 ;;      Params:         0       2       0       0       0       0       0
  6134 ;;      Locals:         0       2       0       0       0       0       0
  6135 ;;      Temps:          0       1       0       0       0       0       0
  6136 ;;      Totals:         0       5       0       0       0       0       0
  6137 ;;Total ram usage:        5 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    3
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_util_transmit_dot
  6144 ;;		_util_transmit_dash
  6145 ;;		_util_transmit_space_between_dots_dashes
  6146 ;;		_util_transmit_space_between_letters
  6147 ;;		_util_transmit_space_between_words
  6148 ;;		_util_waits_delay_secs
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text25
  6153  003B72                     __ptext25:
  6154                           	opt stack 0
  6155  003B72                     _util_waits_delay_ms:
  6156                           	opt stack 24
  6157                           
  6158                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6159                           
  6160                           ;incstack = 0
  6161  003B72  0E00               	movlw	0
  6162  003B74  0100               	movlb	0	; () banked
  6163  003B76  6F64               	movwf	(util_waits_delay_ms@i+1)& (0+255),b
  6164  003B78  0E00               	movlw	0
  6165  003B7A  6F63               	movwf	util_waits_delay_ms@i& (0+255),b
  6166  003B7C  D007               	goto	l356
  6167  003B7E                     l4561:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6171  003B7E  0EA6               	movlw	166
  6172  003B80                     u6297:
  6173  003B80  2EE8               	decfsz	wreg,f,c
  6174  003B82  D7FE               	bra	u6297
  6175  003B84  D000               	nop2	
  6176  003B86  0100               	movlb	0	; () banked
  6177  003B88  4B63               	infsnz	util_waits_delay_ms@i& (0+255),f,b
  6178  003B8A  2B64               	incf	(util_waits_delay_ms@i+1)& (0+255),f,b
  6179  003B8C                     l356:
  6180                           
  6181                           ; BSR set to: 0
  6182  003B8C  0100               	movlb	0	; () banked
  6183  003B8E  5160               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6184  003B90  0100               	movlb	0	; () banked
  6185  003B92  5D63               	subwf	util_waits_delay_ms@i& (0+255),w,b
  6186  003B94  0100               	movlb	0	; () banked
  6187  003B96  5164               	movf	(util_waits_delay_ms@i+1)& (0+255),w,b
  6188  003B98  0A80               	xorlw	128
  6189  003B9A  0100               	movlb	0	; () banked
  6190  003B9C  6F62               	movwf	??_util_waits_delay_ms& (0+255),b
  6191  003B9E  0100               	movlb	0	; () banked
  6192  003BA0  5161               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6193  003BA2  0A80               	xorlw	128
  6194  003BA4  0100               	movlb	0	; () banked
  6195  003BA6  5962               	subwfb	??_util_waits_delay_ms& (0+255),w,b
  6196  003BA8  B0D8               	btfsc	status,0,c
  6197  003BAA  0012               	return	
  6198  003BAC  D7E8               	goto	l4561
  6199  003BAE                     __end_of_util_waits_delay_ms:
  6200                           	opt stack 0
  6201                           tblptru	equ	0xFF8
  6202                           tblptrh	equ	0xFF7
  6203                           tblptrl	equ	0xFF6
  6204                           tablat	equ	0xFF5
  6205                           postinc0	equ	0xFEE
  6206                           wreg	equ	0xFE8
  6207                           postdec1	equ	0xFE5
  6208                           fsr1l	equ	0xFE1
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216 ;; *************** function _util_pwm_stop *****************
  6217 ;; Defined at:
  6218 ;;		line 95 in file "easat2_util_pwm.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		None
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6232 ;;      Params:         0       0       0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0
  6235 ;;      Totals:         0       0       0       0       0       0       0
  6236 ;;Total ram usage:        0 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    3
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_util_transmit_dot
  6243 ;;		_util_transmit_dash
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text26
  6248  003DFE                     __ptext26:
  6249                           	opt stack 0
  6250  003DFE                     _util_pwm_stop:
  6251                           	opt stack 22
  6252                           
  6253                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;incstack = 0
  6257  003DFE  8495               	bsf	3989,2,c	;volatile
  6258                           
  6259                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6260  003E00  8695               	bsf	3989,3,c	;volatile
  6261                           
  6262                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6263  003E02  94BA               	bcf	4026,2,c	;volatile
  6264  003E04  0012               	return		;funcret
  6265  003E06                     __end_of_util_pwm_stop:
  6266                           	opt stack 0
  6267                           tblptru	equ	0xFF8
  6268                           tblptrh	equ	0xFF7
  6269                           tblptrl	equ	0xFF6
  6270                           tablat	equ	0xFF5
  6271                           postinc0	equ	0xFEE
  6272                           wreg	equ	0xFE8
  6273                           postdec1	equ	0xFE5
  6274                           fsr1l	equ	0xFE1
  6275                           indf2	equ	0xFDF
  6276                           postinc2	equ	0xFDE
  6277                           postdec2	equ	0xFDD
  6278                           fsr2h	equ	0xFDA
  6279                           fsr2l	equ	0xFD9
  6280                           status	equ	0xFD8
  6281                           
  6282 ;; *************** function _util_pwm_start *****************
  6283 ;; Defined at:
  6284 ;;		line 78 in file "easat2_util_pwm.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		None
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6298 ;;      Params:         0       0       0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0
  6300 ;;      Temps:          0       0       0       0       0       0       0
  6301 ;;      Totals:         0       0       0       0       0       0       0
  6302 ;;Total ram usage:        0 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    3
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_util_transmit_dot
  6309 ;;		_util_transmit_dash
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text27
  6314  003E06                     __ptext27:
  6315                           	opt stack 0
  6316  003E06                     _util_pwm_start:
  6317                           	opt stack 22
  6318                           
  6319                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6320                           
  6321                           ;incstack = 0
  6322  003E06  9495               	bcf	3989,2,c	;volatile
  6323                           
  6324                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6325  003E08  9695               	bcf	3989,3,c	;volatile
  6326                           
  6327                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6328  003E0A  84BA               	bsf	4026,2,c	;volatile
  6329  003E0C  0012               	return		;funcret
  6330  003E0E                     __end_of_util_pwm_start:
  6331                           	opt stack 0
  6332                           tblptru	equ	0xFF8
  6333                           tblptrh	equ	0xFF7
  6334                           tblptrl	equ	0xFF6
  6335                           tablat	equ	0xFF5
  6336                           postinc0	equ	0xFEE
  6337                           wreg	equ	0xFE8
  6338                           postdec1	equ	0xFE5
  6339                           fsr1l	equ	0xFE1
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function _strlen *****************
  6348 ;; Defined at:
  6349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6352 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6353 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6354 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6355 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6356 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6357 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6358 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6359 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6360 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6361 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6362 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  6365 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6366 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6367 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6368 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6369 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6370 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6371 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6372 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6373 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6374 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6375 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  2    0[BANK0 ] unsigned int 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6385 ;;      Params:         0       2       0       0       0       0       0
  6386 ;;      Locals:         0       2       0       0       0       0       0
  6387 ;;      Temps:          0       2       0       0       0       0       0
  6388 ;;      Totals:         0       6       0       0       0       0       0
  6389 ;;Total ram usage:        6 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    3
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_util_beacon_transmission
  6396 ;;		_util_transmit_morse_sequence
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text28
  6401  0038E6                     __ptext28:
  6402                           	opt stack 0
  6403  0038E6                     _strlen:
  6404                           	opt stack 23
  6405                           
  6406                           ;incstack = 0
  6407  0038E6  C060  F064         	movff	strlen@s,strlen@cp
  6408  0038EA  C061  F065         	movff	strlen@s+1,strlen@cp+1
  6409  0038EE  D003               	goto	l4605
  6410  0038F0                     l4603:
  6411  0038F0  0100               	movlb	0	; () banked
  6412  0038F2  4B64               	infsnz	strlen@cp& (0+255),f,b
  6413  0038F4  2B65               	incf	(strlen@cp+1)& (0+255),f,b
  6414  0038F6                     l4605:
  6415  0038F6  C064  FFF6         	movff	strlen@cp,tblptrl
  6416  0038FA  C065  FFF7         	movff	strlen@cp+1,tblptrh
  6417  0038FE  6AF8               	clrf	tblptru,c
  6418  003900  0E05               	movlw	(high __ramtop+-1)
  6419  003902  64F7               	cpfsgt	tblptrh,c
  6420  003904  D003               	bra	u4437
  6421  003906  0008               	tblrd		*
  6422  003908  50F5               	movf	tablat,w,c
  6423  00390A  D005               	bra	u4430
  6424  00390C                     u4437:
  6425  00390C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6426  003910  CFF7 FFEA          	movff	tblptrh,fsr0h
  6427  003914  50EF               	movf	indf0,w,c
  6428  003916                     u4430:
  6429  003916  0900               	iorlw	0
  6430  003918  A4D8               	btfss	status,2,c
  6431  00391A  D7EA               	goto	l4603
  6432  00391C  C060  F062         	movff	strlen@s,??_strlen
  6433  003920  C061  F063         	movff	strlen@s+1,??_strlen+1
  6434  003924  0100               	movlb	0	; () banked
  6435  003926  1F62               	comf	??_strlen& (0+255),f,b
  6436  003928  1F63               	comf	(??_strlen+1)& (0+255),f,b
  6437  00392A  4B62               	infsnz	??_strlen& (0+255),f,b
  6438  00392C  2B63               	incf	(??_strlen+1)& (0+255),f,b
  6439  00392E  0100               	movlb	0	; () banked
  6440  003930  5164               	movf	strlen@cp& (0+255),w,b
  6441  003932  0100               	movlb	0	; () banked
  6442  003934  2562               	addwf	??_strlen& (0+255),w,b
  6443  003936  0100               	movlb	0	; () banked
  6444  003938  6F60               	movwf	?_strlen& (0+255),b
  6445  00393A  0100               	movlb	0	; () banked
  6446  00393C  5165               	movf	(strlen@cp+1)& (0+255),w,b
  6447  00393E  0100               	movlb	0	; () banked
  6448  003940  2163               	addwfc	(??_strlen+1)& (0+255),w,b
  6449  003942  0100               	movlb	0	; () banked
  6450  003944  6F61               	movwf	(?_strlen+1)& (0+255),b
  6451  003946  0012               	return	
  6452  003948                     __end_of_strlen:
  6453                           	opt stack 0
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           indf0	equ	0xFEF
  6459                           postinc0	equ	0xFEE
  6460                           fsr0h	equ	0xFEA
  6461                           fsr0l	equ	0xFE9
  6462                           wreg	equ	0xFE8
  6463                           postdec1	equ	0xFE5
  6464                           fsr1l	equ	0xFE1
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _strcpy *****************
  6473 ;; Defined at:
  6474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcpy.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6477 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6478 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6479 ;;		 -> STR_1(7), 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6482 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  2    0[BANK0 ] PTR unsigned char 
  6485 ;; Registers used:
  6486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6492 ;;      Params:         0       4       0       0       0       0       0
  6493 ;;      Locals:         0       2       0       0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0
  6495 ;;      Totals:         0       6       0       0       0       0       0
  6496 ;;Total ram usage:        6 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    3
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_util_beacon_transmission
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text29
  6507  003C18                     __ptext29:
  6508                           	opt stack 0
  6509  003C18                     _strcpy:
  6510                           	opt stack 25
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;incstack = 0
  6514  003C18  C060  F064         	movff	strcpy@to,strcpy@cp
  6515  003C1C  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6516  003C20  D006               	goto	l5273
  6517  003C22                     l5271:
  6518  003C22  0100               	movlb	0	; () banked
  6519  003C24  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6520  003C26  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6521  003C28  0100               	movlb	0	; () banked
  6522  003C2A  4B62               	infsnz	strcpy@from& (0+255),f,b
  6523  003C2C  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6524  003C2E                     l5273:
  6525  003C2E  C062  FFF6         	movff	strcpy@from,tblptrl
  6526  003C32  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6527  003C36                     	if	0	;tblptru may be non-zero
  6528  003C36                     	endif
  6529  003C36                     	if	0	;tblptru may be non-zero
  6530  003C36                     	endif
  6531  003C36  C064  FFD9         	movff	strcpy@cp,fsr2l
  6532  003C3A  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6533  003C3E  0008               	tblrd		*
  6534  003C40  CFF5 FFDF          	movff	tablat,indf2
  6535  003C44  50DF               	movf	indf2,w,c
  6536  003C46  B4D8               	btfsc	status,2,c
  6537  003C48  0012               	return	
  6538  003C4A  D7EB               	goto	l5271
  6539  003C4C                     __end_of_strcpy:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           indf0	equ	0xFEF
  6546                           postinc0	equ	0xFEE
  6547                           fsr0h	equ	0xFEA
  6548                           fsr0l	equ	0xFE9
  6549                           wreg	equ	0xFE8
  6550                           postdec1	equ	0xFE5
  6551                           fsr1l	equ	0xFE1
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _strcat *****************
  6560 ;; Defined at:
  6561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcat.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6564 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6565 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6566 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6569 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2    0[BANK0 ] PTR unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6579 ;;      Params:         0       4       0       0       0       0       0
  6580 ;;      Locals:         0       2       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0
  6582 ;;      Totals:         0       6       0       0       0       0       0
  6583 ;;Total ram usage:        6 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    3
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_util_beacon_transmission
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text30
  6594  0039E0                     __ptext30:
  6595                           	opt stack 0
  6596  0039E0                     _strcat:
  6597                           	opt stack 25
  6598                           
  6599                           ;incstack = 0
  6600  0039E0  C060  F064         	movff	strcat@to,strcat@cp
  6601  0039E4  C061  F065         	movff	strcat@to+1,strcat@cp+1
  6602  0039E8  D003               	goto	l5573
  6603  0039EA                     l5571:
  6604  0039EA  0100               	movlb	0	; () banked
  6605  0039EC  4B64               	infsnz	strcat@cp& (0+255),f,b
  6606  0039EE  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6607  0039F0                     l5573:
  6608  0039F0  C064  FFD9         	movff	strcat@cp,fsr2l
  6609  0039F4  C065  FFDA         	movff	strcat@cp+1,fsr2h
  6610  0039F8  50DF               	movf	indf2,w,c
  6611  0039FA  B4D8               	btfsc	status,2,c
  6612  0039FC  D007               	goto	l5577
  6613  0039FE  D7F5               	goto	l5571
  6614  003A00                     l5575:
  6615  003A00  0100               	movlb	0	; () banked
  6616  003A02  4B64               	infsnz	strcat@cp& (0+255),f,b
  6617  003A04  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6618  003A06  0100               	movlb	0	; () banked
  6619  003A08  4B62               	infsnz	strcat@from& (0+255),f,b
  6620  003A0A  2B63               	incf	(strcat@from+1)& (0+255),f,b
  6621  003A0C                     l5577:
  6622  003A0C  C062  FFD9         	movff	strcat@from,fsr2l
  6623  003A10  C063  FFDA         	movff	strcat@from+1,fsr2h
  6624  003A14  C064  FFE1         	movff	strcat@cp,fsr1l
  6625  003A18  C065  FFE2         	movff	strcat@cp+1,fsr1h
  6626  003A1C  CFDF FFE7          	movff	indf2,indf1
  6627  003A20  50E7               	movf	indf1,w,c
  6628  003A22  B4D8               	btfsc	status,2,c
  6629  003A24  0012               	return	
  6630  003A26  D7EC               	goto	l5575
  6631  003A28                     __end_of_strcat:
  6632                           	opt stack 0
  6633                           tblptru	equ	0xFF8
  6634                           tblptrh	equ	0xFF7
  6635                           tblptrl	equ	0xFF6
  6636                           tablat	equ	0xFF5
  6637                           indf0	equ	0xFEF
  6638                           postinc0	equ	0xFEE
  6639                           fsr0h	equ	0xFEA
  6640                           fsr0l	equ	0xFE9
  6641                           wreg	equ	0xFE8
  6642                           indf1	equ	0xFE7
  6643                           postdec1	equ	0xFE5
  6644                           fsr1h	equ	0xFE2
  6645                           fsr1l	equ	0xFE1
  6646                           indf2	equ	0xFDF
  6647                           postinc2	equ	0xFDE
  6648                           postdec2	equ	0xFDD
  6649                           fsr2h	equ	0xFDA
  6650                           fsr2l	equ	0xFD9
  6651                           status	equ	0xFD8
  6652                           
  6653 ;; *************** function _sprintf *****************
  6654 ;; Defined at:
  6655 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  sp              2   63[BANK0 ] PTR unsigned char 
  6658 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6659 ;;  f               2   65[BANK0 ] PTR const unsigned char 
  6660 ;;		 -> STR_2(23), 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  val             4   96[BANK0 ] unsigned long 
  6663 ;;  tmpval          4   92[BANK0 ] struct .
  6664 ;;  fval            3  102[BANK0 ] struct .
  6665 ;;  cp              3    0        PTR const unsigned char 
  6666 ;;  prec            2  105[BANK0 ] int 
  6667 ;;  exp             2  100[BANK0 ] int 
  6668 ;;  width           2   90[BANK0 ] int 
  6669 ;;  flag            2   88[BANK0 ] unsigned short 
  6670 ;;  ap              2   86[BANK0 ] PTR void [1]
  6671 ;;		 -> ?_sprintf(2), 
  6672 ;;  len             2    0        unsigned int 
  6673 ;;  c               1  107[BANK0 ] char 
  6674 ;;  d               1    0        unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  2   63[BANK0 ] int 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6684 ;;      Params:         0      14       0       0       0       0       0
  6685 ;;      Locals:         0      25       0       0       0       0       0
  6686 ;;      Temps:          0       6       0       0       0       0       0
  6687 ;;      Totals:         0      45       0       0       0       0       0
  6688 ;;Total ram usage:       45 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    6
  6691 ;; This function calls:
  6692 ;;		___awdiv
  6693 ;;		___ftadd
  6694 ;;		___ftge
  6695 ;;		___ftmul
  6696 ;;		___ftneg
  6697 ;;		___ftsub
  6698 ;;		___fttol
  6699 ;;		___lldiv
  6700 ;;		___llmod
  6701 ;;		___lltoft
  6702 ;;		___wmul
  6703 ;;		__div_to_l_
  6704 ;;		__tdiv_to_l_
  6705 ;;		_fround
  6706 ;;		_isdigit
  6707 ;;		_scale
  6708 ;; This function is called by:
  6709 ;;		_util_beacon_transmission
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text31
  6714  0000AA                     __ptext31:
  6715                           	opt stack 0
  6716  0000AA                     _sprintf:
  6717                           	opt stack 22
  6718                           
  6719                           ;doprnt.c: 494: va_list ap;
  6720                           ;doprnt.c: 499: signed char c;
  6721                           ;doprnt.c: 501: int width;
  6722                           ;doprnt.c: 504: int prec;
  6723                           ;doprnt.c: 508: unsigned short flag;
  6724                           ;doprnt.c: 515: char d;
  6725                           ;doprnt.c: 516: double fval;
  6726                           ;doprnt.c: 517: int exp;
  6727                           ;doprnt.c: 523: union {
  6728                           ;doprnt.c: 524: unsigned long vd;
  6729                           ;doprnt.c: 525: double integ;
  6730                           ;doprnt.c: 526: } tmpval;
  6731                           ;doprnt.c: 528: unsigned long val;
  6732                           ;doprnt.c: 529: unsigned len;
  6733                           ;doprnt.c: 530: const char * cp;
  6734                           ;doprnt.c: 533: *ap = __va_start();
  6735                           
  6736                           ;incstack = 0
  6737  0000AA  0EA3               	movlw	low (?_sprintf+4)
  6738  0000AC  0100               	movlb	0	; () banked
  6739  0000AE  6FB6               	movwf	sprintf@ap& (0+255),b
  6740  0000B0  0E00               	movlw	high (?_sprintf+4)
  6741  0000B2  0100               	movlb	0	; () banked
  6742  0000B4  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  6743                           
  6744                           ;doprnt.c: 536: while(c = *f++) {
  6745  0000B6  EF0E  F006         	goto	l5563
  6746  0000BA                     l5277:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;doprnt.c: 538: if(c != '%')
  6750  0000BA  0E25               	movlw	37
  6751  0000BC  0100               	movlb	0	; () banked
  6752  0000BE  19CB               	xorwf	sprintf@c& (0+255),w,b
  6753  0000C0  B4D8               	btfsc	status,2,c
  6754  0000C2  D00B               	goto	l5283
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;doprnt.c: 540: {
  6758                           ;doprnt.c: 541: ((*sp++ = (c)));
  6759  0000C4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6760  0000C8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6761  0000CC  C0CB  FFDF         	movff	sprintf@c,indf2
  6762                           
  6763                           ; BSR set to: 0
  6764  0000D0  0100               	movlb	0	; () banked
  6765  0000D2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6766  0000D4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6767                           
  6768                           ;doprnt.c: 542: continue;
  6769  0000D6  EF0E  F006         	goto	l5563
  6770  0000DA                     l5283:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;doprnt.c: 543: }
  6774                           ;doprnt.c: 546: width = 0;
  6775  0000DA  0E00               	movlw	0
  6776  0000DC  0100               	movlb	0	; () banked
  6777  0000DE  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  6778  0000E0  0E00               	movlw	0
  6779  0000E2  6FBA               	movwf	sprintf@width& (0+255),b
  6780                           
  6781                           ;doprnt.c: 548: flag = 0;
  6782  0000E4  0E00               	movlw	0
  6783  0000E6  0100               	movlb	0	; () banked
  6784  0000E8  6FB9               	movwf	(sprintf@flag+1)& (0+255),b
  6785  0000EA  0E00               	movlw	0
  6786  0000EC  6FB8               	movwf	sprintf@flag& (0+255),b
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6790  0000EE  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6791  0000F2  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6792  0000F6                     	if	0	;tblptru may be non-zero
  6793  0000F6                     	endif
  6794  0000F6                     	if	0	;tblptru may be non-zero
  6795  0000F6                     	endif
  6796  0000F6  0008               	tblrd		*
  6797  0000F8  50F5               	movf	tablat,w,c
  6798  0000FA  EC87  F01E         	call	_isdigit
  6799  0000FE  A0D8               	btfss	status,0,c
  6800  000100  D040               	goto	l5297
  6801                           
  6802                           ;doprnt.c: 598: width = 0;
  6803  000102  0E00               	movlw	0
  6804  000104  0100               	movlb	0	; () banked
  6805  000106  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  6806  000108  0E00               	movlw	0
  6807  00010A  6FBA               	movwf	sprintf@width& (0+255),b
  6808  00010C                     l5289:
  6809                           
  6810                           ;doprnt.c: 600: width *= 10;
  6811  00010C  C0BA  F06E         	movff	sprintf@width,___wmul@multiplier
  6812  000110  C0BB  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  6813  000114  0E00               	movlw	0
  6814  000116  0100               	movlb	0	; () banked
  6815  000118  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6816  00011A  0E0A               	movlw	10
  6817  00011C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6818  00011E  ECD7  F01D         	call	___wmul	;wreg free
  6819  000122  C06E  F0BA         	movff	?___wmul,sprintf@width
  6820  000126  C06F  F0BB         	movff	?___wmul+1,sprintf@width+1
  6821                           
  6822                           ;doprnt.c: 601: width += *f++ - '0';
  6823  00012A  0ED0               	movlw	208
  6824  00012C  0100               	movlb	0	; () banked
  6825  00012E  6FAD               	movwf	??_sprintf& (0+255),b
  6826  000130  0EFF               	movlw	255
  6827  000132  0100               	movlb	0	; () banked
  6828  000134  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  6829  000136  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6830  00013A  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6831  00013E                     	if	0	;tblptru may be non-zero
  6832  00013E                     	endif
  6833  00013E                     	if	0	;tblptru may be non-zero
  6834  00013E                     	endif
  6835  00013E  0008               	tblrd		*
  6836  000140  50F5               	movf	tablat,w,c
  6837  000142  0100               	movlb	0	; () banked
  6838  000144  6FAF               	movwf	(??_sprintf+2)& (0+255),b
  6839  000146  6BB0               	clrf	(??_sprintf+3)& (0+255),b
  6840  000148  0100               	movlb	0	; () banked
  6841  00014A  51AD               	movf	??_sprintf& (0+255),w,b
  6842  00014C  0100               	movlb	0	; () banked
  6843  00014E  27AF               	addwf	(??_sprintf+2)& (0+255),f,b
  6844  000150  0100               	movlb	0	; () banked
  6845  000152  51AE               	movf	(??_sprintf+1)& (0+255),w,b
  6846  000154  0100               	movlb	0	; () banked
  6847  000156  23B0               	addwfc	(??_sprintf+3)& (0+255),f,b
  6848  000158  0100               	movlb	0	; () banked
  6849  00015A  51AF               	movf	(??_sprintf+2)& (0+255),w,b
  6850  00015C  0100               	movlb	0	; () banked
  6851  00015E  27BA               	addwf	sprintf@width& (0+255),f,b
  6852  000160  0100               	movlb	0	; () banked
  6853  000162  51B0               	movf	(??_sprintf+3)& (0+255),w,b
  6854  000164  0100               	movlb	0	; () banked
  6855  000166  23BB               	addwfc	(sprintf@width+1)& (0+255),f,b
  6856                           
  6857                           ; BSR set to: 0
  6858  000168  0100               	movlb	0	; () banked
  6859  00016A  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6860  00016C  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6864  00016E  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6865  000172  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6866  000176                     	if	0	;tblptru may be non-zero
  6867  000176                     	endif
  6868  000176                     	if	0	;tblptru may be non-zero
  6869  000176                     	endif
  6870  000176  0008               	tblrd		*
  6871  000178  50F5               	movf	tablat,w,c
  6872  00017A  EC87  F01E         	call	_isdigit
  6873  00017E  B0D8               	btfsc	status,0,c
  6874  000180  D7C5               	goto	l5289
  6875  000182                     l5297:
  6876                           
  6877                           ;doprnt.c: 608: }
  6878                           ;doprnt.c: 611: if(*f == '.') {
  6879  000182  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6880  000186  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6881  00018A                     	if	0	;tblptru may be non-zero
  6882  00018A                     	endif
  6883  00018A                     	if	0	;tblptru may be non-zero
  6884  00018A                     	endif
  6885  00018A  0008               	tblrd		*
  6886  00018C  50F5               	movf	tablat,w,c
  6887  00018E  0A2E               	xorlw	46
  6888  000190  A4D8               	btfss	status,2,c
  6889  000192  D039               	goto	l5309
  6890                           
  6891                           ;doprnt.c: 612: flag |= 0x4000;
  6892  000194  0100               	movlb	0	; () banked
  6893  000196  8DB9               	bsf	(sprintf@flag+1)& (0+255),6,b
  6894                           
  6895                           ;doprnt.c: 613: f++;
  6896  000198  0100               	movlb	0	; () banked
  6897  00019A  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6898  00019C  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;doprnt.c: 620: {
  6902                           ;doprnt.c: 621: prec = 0;
  6903  00019E  0E00               	movlw	0
  6904  0001A0  0100               	movlb	0	; () banked
  6905  0001A2  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  6906  0001A4  0E00               	movlw	0
  6907  0001A6  6FC9               	movwf	sprintf@prec& (0+255),b
  6908                           
  6909                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6910  0001A8  D023               	goto	l5307
  6911  0001AA                     l5303:
  6912                           
  6913                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6914  0001AA  C0C9  F06E         	movff	sprintf@prec,___wmul@multiplier
  6915  0001AE  C0CA  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  6916  0001B2  0E00               	movlw	0
  6917  0001B4  0100               	movlb	0	; () banked
  6918  0001B6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6919  0001B8  0E0A               	movlw	10
  6920  0001BA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6921  0001BC  ECD7  F01D         	call	___wmul	;wreg free
  6922  0001C0  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6923  0001C4  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6924  0001C8                     	if	0	;tblptru may be non-zero
  6925  0001C8                     	endif
  6926  0001C8                     	if	0	;tblptru may be non-zero
  6927  0001C8                     	endif
  6928  0001C8  0008               	tblrd		*
  6929  0001CA  50F5               	movf	tablat,w,c
  6930  0001CC  0100               	movlb	0	; () banked
  6931  0001CE  276E               	addwf	?___wmul& (0+255),f,b
  6932  0001D0  0E00               	movlw	0
  6933  0001D2  0100               	movlb	0	; () banked
  6934  0001D4  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  6935  0001D6  0ED0               	movlw	208
  6936  0001D8  0100               	movlb	0	; () banked
  6937  0001DA  256E               	addwf	?___wmul& (0+255),w,b
  6938  0001DC  0100               	movlb	0	; () banked
  6939  0001DE  6FC9               	movwf	sprintf@prec& (0+255),b
  6940  0001E0  0EFF               	movlw	255
  6941  0001E2  0100               	movlb	0	; () banked
  6942  0001E4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6943  0001E6  0100               	movlb	0	; () banked
  6944  0001E8  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  6945                           
  6946                           ; BSR set to: 0
  6947  0001EA  0100               	movlb	0	; () banked
  6948  0001EC  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6949  0001EE  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6950  0001F0                     l5307:
  6951                           
  6952                           ; BSR set to: 0
  6953  0001F0  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6954  0001F4  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6955  0001F8                     	if	0	;tblptru may be non-zero
  6956  0001F8                     	endif
  6957  0001F8                     	if	0	;tblptru may be non-zero
  6958  0001F8                     	endif
  6959  0001F8  0008               	tblrd		*
  6960  0001FA  50F5               	movf	tablat,w,c
  6961  0001FC  EC87  F01E         	call	_isdigit
  6962  000200  A0D8               	btfss	status,0,c
  6963  000202  D00C               	goto	l5317
  6964  000204  D7D2               	goto	l5303
  6965  000206                     l5309:
  6966                           
  6967                           ;doprnt.c: 626: prec = 0;
  6968  000206  0E00               	movlw	0
  6969  000208  0100               	movlb	0	; () banked
  6970  00020A  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  6971  00020C  0E00               	movlw	0
  6972  00020E  6FC9               	movwf	sprintf@prec& (0+255),b
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;doprnt.c: 628: flag |= 0x1000;
  6976  000210  0100               	movlb	0	; () banked
  6977  000212  89B9               	bsf	(sprintf@flag+1)& (0+255),4,b
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;doprnt.c: 630: }
  6981                           ;doprnt.c: 635: switch(c = *f++) {
  6982  000214  D003               	goto	l5317
  6983  000216                     l5313:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;doprnt.c: 663: flag |= 0x400;
  6987  000216  0100               	movlb	0	; () banked
  6988  000218  85B9               	bsf	(sprintf@flag+1)& (0+255),2,b
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;doprnt.c: 698: case 'i':
  6992                           ;doprnt.c: 699: break;
  6993                           
  6994                           ; BSR set to: 0
  6995                           
  6996                           ;doprnt.c: 697: case 'd':
  6997                           
  6998                           ;doprnt.c: 664: break;
  6999  00021A  D01A               	goto	l5319
  7000  00021C                     l5317:
  7001  00021C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  7002  000220  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  7003  000224  0100               	movlb	0	; () banked
  7004  000226  4BA1               	infsnz	sprintf@f& (0+255),f,b
  7005  000228  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  7006  00022A                     	if	0	;tblptru may be non-zero
  7007  00022A                     	endif
  7008  00022A                     	if	0	;tblptru may be non-zero
  7009  00022A                     	endif
  7010  00022A  0008               	tblrd		*
  7011  00022C  CFF5 F0CB          	movff	tablat,sprintf@c
  7012  000230  0100               	movlb	0	; () banked
  7013  000232  51CB               	movf	sprintf@c& (0+255),w,b
  7014                           
  7015                           ; Switch size 1, requested type "space"
  7016                           ; Number of cases is 4, Range of values is 0 to 105
  7017                           ; switch strategies available:
  7018                           ; Name         Instructions Cycles
  7019                           ; simple_byte           13     7 (average)
  7020                           ;	Chosen strategy is simple_byte
  7021  000234  0A00               	xorlw	0	; case 0
  7022  000236  B4D8               	btfsc	status,2,c
  7023  000238  EF1D  F006         	goto	l5565
  7024  00023C  0A64               	xorlw	100	; case 100
  7025  00023E  B4D8               	btfsc	status,2,c
  7026  000240  D007               	goto	l5319
  7027  000242  0A02               	xorlw	2	; case 102
  7028  000244  B4D8               	btfsc	status,2,c
  7029  000246  D7E7               	goto	l5313
  7030  000248  0A0F               	xorlw	15	; case 105
  7031  00024A  A4D8               	btfss	status,2,c
  7032  00024C  EF0E  F006         	goto	l5563
  7033  000250                     l5319:
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;doprnt.c: 825: if(flag & (0x700)) {
  7037  000250  0E07               	movlw	7
  7038  000252  0100               	movlb	0	; () banked
  7039  000254  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7040  000256  B4D8               	btfsc	status,2,c
  7041  000258  D379               	goto	l5483
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 827: if(flag & 0x1000)
  7045  00025A  0100               	movlb	0	; () banked
  7046  00025C  A9B9               	btfss	(sprintf@flag+1)& (0+255),4,b
  7047  00025E  D005               	goto	l5325
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;doprnt.c: 829: prec = 6;
  7051  000260  0E00               	movlw	0
  7052  000262  0100               	movlb	0	; () banked
  7053  000264  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  7054  000266  0E06               	movlw	6
  7055  000268  6FC9               	movwf	sprintf@prec& (0+255),b
  7056  00026A                     l5325:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7060  00026A  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  7061  00026E  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  7062  000272  CFDE F0C6          	movff	postinc2,sprintf@fval
  7063  000276  CFDE F0C7          	movff	postinc2,sprintf@fval+1
  7064  00027A  CFDD F0C8          	movff	postdec2,sprintf@fval+2
  7065                           
  7066                           ; BSR set to: 0
  7067  00027E  0E03               	movlw	3
  7068  000280  0100               	movlb	0	; () banked
  7069  000282  27B6               	addwf	sprintf@ap& (0+255),f,b
  7070  000284  0E00               	movlw	0
  7071  000286  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;doprnt.c: 831: if(fval < 0.0) {
  7075  000288  0100               	movlb	0	; () banked
  7076  00028A  AFC8               	btfss	(sprintf@fval+2)& (0+255),7,b
  7077  00028C  D011               	goto	l5335
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;doprnt.c: 832: fval = -fval;
  7081  00028E  C0C6  F060         	movff	sprintf@fval,___ftneg@f1
  7082  000292  C0C7  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  7083  000296  C0C8  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  7084  00029A  EC5A  F01E         	call	___ftneg	;wreg free
  7085  00029E  C060  F0C6         	movff	?___ftneg,sprintf@fval
  7086  0002A2  C061  F0C7         	movff	?___ftneg+1,sprintf@fval+1
  7087  0002A6  C062  F0C8         	movff	?___ftneg+2,sprintf@fval+2
  7088                           
  7089                           ;doprnt.c: 833: flag |= 0x03;
  7090  0002AA  0E03               	movlw	3
  7091  0002AC  0100               	movlb	0	; () banked
  7092  0002AE  13B8               	iorwf	sprintf@flag& (0+255),f,b
  7093  0002B0                     l5335:
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;doprnt.c: 834: }
  7097                           ;doprnt.c: 835: exp = 0;
  7098  0002B0  0E00               	movlw	0
  7099  0002B2  0100               	movlb	0	; () banked
  7100  0002B4  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7101  0002B6  0E00               	movlw	0
  7102  0002B8  6FC4               	movwf	sprintf@exp& (0+255),b
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;doprnt.c: 836: if( fval!=0) {
  7106  0002BA  0100               	movlb	0	; () banked
  7107  0002BC  51C6               	movf	sprintf@fval& (0+255),w,b
  7108  0002BE  0100               	movlb	0	; () banked
  7109  0002C0  11C7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7110  0002C2  0100               	movlb	0	; () banked
  7111  0002C4  11C8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7112  0002C6  B4D8               	btfsc	status,2,c
  7113  0002C8  D09B               	goto	l5363
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7117  0002CA  0E82               	movlw	130
  7118  0002CC  0100               	movlb	0	; () banked
  7119  0002CE  6FAD               	movwf	??_sprintf& (0+255),b
  7120  0002D0  0EFF               	movlw	255
  7121  0002D2  0100               	movlb	0	; () banked
  7122  0002D4  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7123  0002D6  C0C6  F0AF         	movff	sprintf@fval,??_sprintf+2
  7124  0002DA  C0C7  F0B0         	movff	sprintf@fval+1,??_sprintf+3
  7125  0002DE  C0C8  F0B1         	movff	sprintf@fval+2,??_sprintf+4
  7126  0002E2  C0C9  F0B2         	movff	sprintf@fval+3,??_sprintf+5
  7127  0002E6  0E10               	movlw	16
  7128  0002E8  D006               	goto	u5470
  7129  0002EA                     u5475:
  7130  0002EA  0100               	movlb	0	; () banked
  7131  0002EC  90D8               	bcf	status,0,c
  7132  0002EE  33B2               	rrcf	(??_sprintf+5)& (0+255),f,b
  7133  0002F0  33B1               	rrcf	(??_sprintf+4)& (0+255),f,b
  7134  0002F2  33B0               	rrcf	(??_sprintf+3)& (0+255),f,b
  7135  0002F4  33AF               	rrcf	(??_sprintf+2)& (0+255),f,b
  7136  0002F6                     u5470:
  7137  0002F6  2EE8               	decfsz	wreg,f,c
  7138  0002F8  D7F8               	goto	u5475
  7139  0002FA  0100               	movlb	0	; () banked
  7140  0002FC  51AF               	movf	(??_sprintf+2)& (0+255),w,b
  7141  0002FE  0100               	movlb	0	; () banked
  7142  000300  25AD               	addwf	??_sprintf& (0+255),w,b
  7143  000302  0100               	movlb	0	; () banked
  7144  000304  6FC4               	movwf	sprintf@exp& (0+255),b
  7145  000306  0E00               	movlw	0
  7146  000308  0100               	movlb	0	; () banked
  7147  00030A  21AE               	addwfc	(??_sprintf+1)& (0+255),w,b
  7148  00030C  0100               	movlb	0	; () banked
  7149  00030E  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;doprnt.c: 838: exp--;
  7153  000310  0100               	movlb	0	; () banked
  7154  000312  07C4               	decf	sprintf@exp& (0+255),f,b
  7155  000314  A0D8               	btfss	status,0,c
  7156  000316  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;doprnt.c: 839: exp *= 3;
  7160  000318  C0C4  F06E         	movff	sprintf@exp,___wmul@multiplier
  7161  00031C  C0C5  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  7162  000320  0E00               	movlw	0
  7163  000322  0100               	movlb	0	; () banked
  7164  000324  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7165  000326  0E03               	movlw	3
  7166  000328  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7167  00032A  ECD7  F01D         	call	___wmul	;wreg free
  7168  00032E  C06E  F0C4         	movff	?___wmul,sprintf@exp
  7169  000332  C06F  F0C5         	movff	?___wmul+1,sprintf@exp+1
  7170                           
  7171                           ;doprnt.c: 840: exp /= 10;
  7172  000336  C0C4  F066         	movff	sprintf@exp,___awdiv@dividend
  7173  00033A  C0C5  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  7174  00033E  0E00               	movlw	0
  7175  000340  0100               	movlb	0	; () banked
  7176  000342  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7177  000344  0E0A               	movlw	10
  7178  000346  6F68               	movwf	___awdiv@divisor& (0+255),b
  7179  000348  EC92  F019         	call	___awdiv	;wreg free
  7180  00034C  C066  F0C4         	movff	?___awdiv,sprintf@exp
  7181  000350  C067  F0C5         	movff	?___awdiv+1,sprintf@exp+1
  7182                           
  7183                           ;doprnt.c: 841: if(exp < 0)
  7184  000354  0100               	movlb	0	; () banked
  7185  000356  AFC5               	btfss	(sprintf@exp+1)& (0+255),7,b
  7186  000358  D004               	goto	l5351
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;doprnt.c: 842: exp--;
  7190  00035A  0100               	movlb	0	; () banked
  7191  00035C  07C4               	decf	sprintf@exp& (0+255),f,b
  7192  00035E  A0D8               	btfss	status,0,c
  7193  000360  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7194  000362                     l5351:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7198  000362  0100               	movlb	0	; () banked
  7199  000364  51C4               	movf	sprintf@exp& (0+255),w,b
  7200  000366  0800               	sublw	0
  7201  000368  ECF5  F009         	call	_scale
  7202  00036C  C083  F0BC         	movff	?_scale,sprintf@tmpval
  7203  000370  C084  F0BD         	movff	?_scale+1,sprintf@tmpval+1
  7204  000374  C085  F0BE         	movff	?_scale+2,sprintf@tmpval+2
  7205                           
  7206                           ;doprnt.c: 847: tmpval.integ *= fval;
  7207  000378  C0BC  F074         	movff	sprintf@tmpval,___ftmul@f1
  7208  00037C  C0BD  F075         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7209  000380  C0BE  F076         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7210  000384  C0C6  F077         	movff	sprintf@fval,___ftmul@f2
  7211  000388  C0C7  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  7212  00038C  C0C8  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  7213  000390  ECFF  F014         	call	___ftmul	;wreg free
  7214  000394  C074  F0BC         	movff	?___ftmul,sprintf@tmpval
  7215  000398  C075  F0BD         	movff	?___ftmul+1,sprintf@tmpval+1
  7216  00039C  C076  F0BE         	movff	?___ftmul+2,sprintf@tmpval+2
  7217                           
  7218                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7219  0003A0  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7220  0003A4  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7221  0003A8  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7222  0003AC  0E00               	movlw	0
  7223  0003AE  0100               	movlb	0	; () banked
  7224  0003B0  6F63               	movwf	___ftge@ff2& (0+255),b
  7225  0003B2  0E80               	movlw	128
  7226  0003B4  0100               	movlb	0	; () banked
  7227  0003B6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7228  0003B8  0E3F               	movlw	63
  7229  0003BA  0100               	movlb	0	; () banked
  7230  0003BC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7231  0003BE  ECCF  F018         	call	___ftge	;wreg free
  7232  0003C2  0100               	movlb	0	; () banked
  7233  0003C4  B0D8               	btfsc	status,0,c
  7234  0003C6  D005               	goto	l5359
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;doprnt.c: 849: exp--;
  7238  0003C8  0100               	movlb	0	; () banked
  7239  0003CA  07C4               	decf	sprintf@exp& (0+255),f,b
  7240  0003CC  A0D8               	btfss	status,0,c
  7241  0003CE  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7242  0003D0  D017               	goto	l5363
  7243  0003D2                     l5359:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7247  0003D2  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7248  0003D6  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7249  0003DA  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7250  0003DE  0E00               	movlw	0
  7251  0003E0  0100               	movlb	0	; () banked
  7252  0003E2  6F63               	movwf	___ftge@ff2& (0+255),b
  7253  0003E4  0E20               	movlw	32
  7254  0003E6  0100               	movlb	0	; () banked
  7255  0003E8  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7256  0003EA  0E41               	movlw	65
  7257  0003EC  0100               	movlb	0	; () banked
  7258  0003EE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7259  0003F0  ECCF  F018         	call	___ftge	;wreg free
  7260  0003F4  0100               	movlb	0	; () banked
  7261  0003F6  A0D8               	btfss	status,0,c
  7262  0003F8  D003               	goto	l5363
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;doprnt.c: 851: exp++;
  7266  0003FA  0100               	movlb	0	; () banked
  7267  0003FC  4BC4               	infsnz	sprintf@exp& (0+255),f,b
  7268  0003FE  2BC5               	incf	(sprintf@exp+1)& (0+255),f,b
  7269  000400                     l5363:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;doprnt.c: 852: }
  7273                           ;doprnt.c: 1112: if(prec <= 12)
  7274  000400  0100               	movlb	0	; () banked
  7275  000402  BFCA               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7276  000404  D008               	goto	l5365
  7277  000406  0100               	movlb	0	; () banked
  7278  000408  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7279  00040A  E11D               	bnz	l5367
  7280  00040C  0E0D               	movlw	13
  7281  00040E  0100               	movlb	0	; () banked
  7282  000410  5DC9               	subwf	sprintf@prec& (0+255),w,b
  7283  000412  B0D8               	btfsc	status,0,c
  7284  000414  D018               	goto	l5367
  7285  000416                     l5365:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;doprnt.c: 1113: fval += fround(prec);
  7289  000416  C0C6  F08D         	movff	sprintf@fval,___ftadd@f1
  7290  00041A  C0C7  F08E         	movff	sprintf@fval+1,___ftadd@f1+1
  7291  00041E  C0C8  F08F         	movff	sprintf@fval+2,___ftadd@f1+2
  7292  000422  0100               	movlb	0	; () banked
  7293  000424  51C9               	movf	sprintf@prec& (0+255),w,b
  7294  000426  EC46  F00E         	call	_fround
  7295  00042A  C083  F090         	movff	?_fround,___ftadd@f2
  7296  00042E  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  7297  000432  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  7298  000436  EC9C  F00F         	call	___ftadd	;wreg free
  7299  00043A  C08D  F0C6         	movff	?___ftadd,sprintf@fval
  7300  00043E  C08E  F0C7         	movff	?___ftadd+1,sprintf@fval+1
  7301  000442  C08F  F0C8         	movff	?___ftadd+2,sprintf@fval+2
  7302  000446                     l5367:
  7303                           
  7304                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7305  000446  0100               	movlb	0	; () banked
  7306  000448  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7307  00044A  D008               	goto	l5369
  7308  00044C  0100               	movlb	0	; () banked
  7309  00044E  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7310  000450  E12A               	bnz	l5375
  7311  000452  0E0A               	movlw	10
  7312  000454  0100               	movlb	0	; () banked
  7313  000456  5DC4               	subwf	sprintf@exp& (0+255),w,b
  7314  000458  B0D8               	btfsc	status,0,c
  7315  00045A  D025               	goto	l5375
  7316  00045C                     l5369:
  7317                           
  7318                           ; BSR set to: 0
  7319  00045C  0100               	movlb	0	; () banked
  7320  00045E  51C6               	movf	sprintf@fval& (0+255),w,b
  7321  000460  0100               	movlb	0	; () banked
  7322  000462  11C7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7323  000464  0100               	movlb	0	; () banked
  7324  000466  11C8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7325  000468  B4D8               	btfsc	status,2,c
  7326  00046A  D063               	goto	l5389
  7327                           
  7328                           ; BSR set to: 0
  7329  00046C  C0C6  F08A         	movff	sprintf@fval,___fttol@f1
  7330  000470  C0C7  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  7331  000474  C0C8  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  7332  000478  EC54  F016         	call	___fttol	;wreg free
  7333  00047C  0100               	movlb	0	; () banked
  7334  00047E  518A               	movf	?___fttol& (0+255),w,b
  7335  000480  0100               	movlb	0	; () banked
  7336  000482  118B               	iorwf	(?___fttol+1)& (0+255),w,b
  7337  000484  0100               	movlb	0	; () banked
  7338  000486  118C               	iorwf	(?___fttol+2)& (0+255),w,b
  7339  000488  0100               	movlb	0	; () banked
  7340  00048A  118D               	iorwf	(?___fttol+3)& (0+255),w,b
  7341  00048C  A4D8               	btfss	status,2,c
  7342  00048E  D051               	goto	l5389
  7343                           
  7344                           ; BSR set to: 0
  7345  000490  0100               	movlb	0	; () banked
  7346  000492  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7347  000494  D04E               	goto	l5389
  7348  000496  0100               	movlb	0	; () banked
  7349  000498  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7350  00049A  E105               	bnz	l5375
  7351  00049C  0E02               	movlw	2
  7352  00049E  0100               	movlb	0	; () banked
  7353  0004A0  5DC4               	subwf	sprintf@exp& (0+255),w,b
  7354  0004A2  A0D8               	btfss	status,0,c
  7355  0004A4  D046               	goto	l5389
  7356  0004A6                     l5375:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7360  0004A6  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7361  0004AA  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7362  0004AE  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7363  0004B2  0E70               	movlw	112
  7364  0004B4  0100               	movlb	0	; () banked
  7365  0004B6  6F63               	movwf	___ftge@ff2& (0+255),b
  7366  0004B8  0E89               	movlw	137
  7367  0004BA  0100               	movlb	0	; () banked
  7368  0004BC  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7369  0004BE  0E40               	movlw	64
  7370  0004C0  0100               	movlb	0	; () banked
  7371  0004C2  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7372  0004C4  ECCF  F018         	call	___ftge	;wreg free
  7373  0004C8  0100               	movlb	0	; () banked
  7374  0004CA  B0D8               	btfsc	status,0,c
  7375  0004CC  D003               	goto	l5379
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7379  0004CE  0100               	movlb	0	; () banked
  7380  0004D0  0EF7               	movlw	247
  7381  0004D2  D002               	goto	L2
  7382  0004D4                     l5379:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7386  0004D4  0100               	movlb	0	; () banked
  7387  0004D6  0EF8               	movlw	248
  7388  0004D8                     L2:
  7389  0004D8  27C4               	addwf	sprintf@exp& (0+255),f,b
  7390  0004DA  0EFF               	movlw	255
  7391  0004DC  23C5               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;doprnt.c: 1124: }
  7395                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7396                           
  7397                           ; BSR set to: 0
  7398  0004DE  0100               	movlb	0	; () banked
  7399  0004E0  51C4               	movf	sprintf@exp& (0+255),w,b
  7400  0004E2  ECF5  F009         	call	_scale
  7401  0004E6  C083  F0BC         	movff	?_scale,sprintf@tmpval
  7402  0004EA  C084  F0BD         	movff	?_scale+1,sprintf@tmpval+1
  7403  0004EE  C085  F0BE         	movff	?_scale+2,sprintf@tmpval+2
  7404                           
  7405                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7406  0004F2  C0C6  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  7407  0004F6  C0C7  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7408  0004FA  C0C8  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7409  0004FE  C0BC  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7410  000502  C0BD  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7411  000506  C0BE  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7412  00050A  ECA2  F012         	call	__tdiv_to_l_	;wreg free
  7413  00050E  C060  F0C0         	movff	?__tdiv_to_l_,sprintf@val
  7414  000512  C061  F0C1         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7415  000516  C062  F0C2         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7416  00051A  C063  F0C3         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7417                           
  7418                           ;doprnt.c: 1129: fval = 0.0;
  7419  00051E  0E00               	movlw	0
  7420  000520  0100               	movlb	0	; () banked
  7421  000522  6FC6               	movwf	sprintf@fval& (0+255),b
  7422  000524  0E00               	movlw	0
  7423  000526  0100               	movlb	0	; () banked
  7424  000528  6FC7               	movwf	(sprintf@fval+1)& (0+255),b
  7425  00052A  0E00               	movlw	0
  7426  00052C  0100               	movlb	0	; () banked
  7427  00052E  6FC8               	movwf	(sprintf@fval+2)& (0+255),b
  7428                           
  7429                           ;doprnt.c: 1130: } else {
  7430  000530  D033               	goto	l5393
  7431  000532                     l5389:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7435  000532  C0C6  F08A         	movff	sprintf@fval,___fttol@f1
  7436  000536  C0C7  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  7437  00053A  C0C8  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  7438  00053E  EC54  F016         	call	___fttol	;wreg free
  7439  000542  C08A  F0C0         	movff	?___fttol,sprintf@val
  7440  000546  C08B  F0C1         	movff	?___fttol+1,sprintf@val+1
  7441  00054A  C08C  F0C2         	movff	?___fttol+2,sprintf@val+2
  7442  00054E  C08D  F0C3         	movff	?___fttol+3,sprintf@val+3
  7443                           
  7444                           ;doprnt.c: 1132: fval -= (double)val;
  7445  000552  C0C6  F099         	movff	sprintf@fval,___ftsub@f1
  7446  000556  C0C7  F09A         	movff	sprintf@fval+1,___ftsub@f1+1
  7447  00055A  C0C8  F09B         	movff	sprintf@fval+2,___ftsub@f1+2
  7448  00055E  C0C0  F068         	movff	sprintf@val,___lltoft@c
  7449  000562  C0C1  F069         	movff	sprintf@val+1,___lltoft@c+1
  7450  000566  C0C2  F06A         	movff	sprintf@val+2,___lltoft@c+2
  7451  00056A  C0C3  F06B         	movff	sprintf@val+3,___lltoft@c+3
  7452  00056E  EC91  F01B         	call	___lltoft	;wreg free
  7453  000572  C068  F09C         	movff	?___lltoft,___ftsub@f2
  7454  000576  C069  F09D         	movff	?___lltoft+1,___ftsub@f2+1
  7455  00057A  C06A  F09E         	movff	?___lltoft+2,___ftsub@f2+2
  7456  00057E  ECCA  F01C         	call	___ftsub	;wreg free
  7457  000582  C099  F0C6         	movff	?___ftsub,sprintf@fval
  7458  000586  C09A  F0C7         	movff	?___ftsub+1,sprintf@fval+1
  7459  00058A  C09B  F0C8         	movff	?___ftsub+2,sprintf@fval+2
  7460                           
  7461                           ;doprnt.c: 1133: exp = 0;
  7462  00058E  0E00               	movlw	0
  7463  000590  0100               	movlb	0	; () banked
  7464  000592  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7465  000594  0E00               	movlw	0
  7466  000596  6FC4               	movwf	sprintf@exp& (0+255),b
  7467  000598                     l5393:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;doprnt.c: 1134: }
  7471                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7472  000598  0E01               	movlw	1
  7473  00059A  0100               	movlb	0	; () banked
  7474  00059C  6FCB               	movwf	sprintf@c& (0+255),b
  7475  00059E                     l5395:
  7476                           
  7477                           ; BSR set to: 0
  7478  00059E  0E0A               	movlw	10
  7479  0005A0  0100               	movlb	0	; () banked
  7480  0005A2  19CB               	xorwf	sprintf@c& (0+255),w,b
  7481  0005A4  B4D8               	btfsc	status,2,c
  7482  0005A6  D01E               	goto	l5407
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;doprnt.c: 1137: if(val < dpowers[c])
  7486                           
  7487                           ; BSR set to: 0
  7488                           
  7489                           ; BSR set to: 0
  7490  0005A8  0100               	movlb	0	; () banked
  7491  0005AA  51CB               	movf	sprintf@c& (0+255),w,b
  7492  0005AC  0D04               	mullw	4
  7493  0005AE  0EF5               	movlw	low _dpowers
  7494  0005B0  24F3               	addwf	prodl,w,c
  7495  0005B2  6EF6               	movwf	tblptrl,c
  7496  0005B4  0E7E               	movlw	high _dpowers
  7497  0005B6  20F4               	addwfc	prodh,w,c
  7498  0005B8  6EF7               	movwf	tblptrh,c
  7499  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7500  0005BA                     	endif
  7501  0005BA  0009               	tblrd		*+
  7502  0005BC  50F5               	movf	tablat,w,c
  7503  0005BE  0100               	movlb	0	; () banked
  7504  0005C0  5DC0               	subwf	sprintf@val& (0+255),w,b
  7505  0005C2  0009               	tblrd		*+
  7506  0005C4  50F5               	movf	tablat,w,c
  7507  0005C6  0100               	movlb	0	; () banked
  7508  0005C8  59C1               	subwfb	(sprintf@val+1)& (0+255),w,b
  7509  0005CA  0009               	tblrd		*+
  7510  0005CC  50F5               	movf	tablat,w,c
  7511  0005CE  0100               	movlb	0	; () banked
  7512  0005D0  59C2               	subwfb	(sprintf@val+2)& (0+255),w,b
  7513  0005D2  0009               	tblrd		*+
  7514  0005D4  50F5               	movf	tablat,w,c
  7515  0005D6  0100               	movlb	0	; () banked
  7516  0005D8  59C3               	subwfb	(sprintf@val+3)& (0+255),w,b
  7517  0005DA  A0D8               	btfss	status,0,c
  7518  0005DC  D003               	goto	l5407
  7519                           
  7520                           ; BSR set to: 0
  7521                           
  7522                           ; BSR set to: 0
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;doprnt.c: 1138: break;
  7526  0005DE  0100               	movlb	0	; () banked
  7527  0005E0  2BCB               	incf	sprintf@c& (0+255),f,b
  7528  0005E2  D7DD               	goto	l5395
  7529  0005E4                     l5407:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;doprnt.c: 1142: width -= prec + c + exp;
  7533  0005E4  C0CB  F0AD         	movff	sprintf@c,??_sprintf
  7534  0005E8  0100               	movlb	0	; () banked
  7535  0005EA  6BAE               	clrf	(??_sprintf+1)& (0+255),b
  7536  0005EC  BFAD               	btfsc	??_sprintf& (0+255),7,b
  7537  0005EE  07AE               	decf	(??_sprintf+1)& (0+255),f,b
  7538  0005F0  0100               	movlb	0	; () banked
  7539  0005F2  51C9               	movf	sprintf@prec& (0+255),w,b
  7540  0005F4  0100               	movlb	0	; () banked
  7541  0005F6  27AD               	addwf	??_sprintf& (0+255),f,b
  7542  0005F8  0100               	movlb	0	; () banked
  7543  0005FA  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7544  0005FC  0100               	movlb	0	; () banked
  7545  0005FE  23AE               	addwfc	(??_sprintf+1)& (0+255),f,b
  7546  000600  0100               	movlb	0	; () banked
  7547  000602  51C4               	movf	sprintf@exp& (0+255),w,b
  7548  000604  0100               	movlb	0	; () banked
  7549  000606  27AD               	addwf	??_sprintf& (0+255),f,b
  7550  000608  0100               	movlb	0	; () banked
  7551  00060A  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7552  00060C  0100               	movlb	0	; () banked
  7553  00060E  23AE               	addwfc	(??_sprintf+1)& (0+255),f,b
  7554  000610  0100               	movlb	0	; () banked
  7555  000612  51AD               	movf	??_sprintf& (0+255),w,b
  7556  000614  0100               	movlb	0	; () banked
  7557  000616  5FBA               	subwf	sprintf@width& (0+255),f,b
  7558  000618  0100               	movlb	0	; () banked
  7559  00061A  51AE               	movf	(??_sprintf+1)& (0+255),w,b
  7560  00061C  0100               	movlb	0	; () banked
  7561  00061E  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  7562                           
  7563                           ;doprnt.c: 1143: if(
  7564                           ;doprnt.c: 1147: prec)
  7565  000620  0100               	movlb	0	; () banked
  7566  000622  51C9               	movf	sprintf@prec& (0+255),w,b
  7567  000624  0100               	movlb	0	; () banked
  7568  000626  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7569  000628  B4D8               	btfsc	status,2,c
  7570  00062A  D004               	goto	l5411
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;doprnt.c: 1148: width--;
  7574  00062C  0100               	movlb	0	; () banked
  7575  00062E  07BA               	decf	sprintf@width& (0+255),f,b
  7576  000630  A0D8               	btfss	status,0,c
  7577  000632  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  7578  000634                     l5411:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;doprnt.c: 1149: if(flag & 0x03)
  7582  000634  0E03               	movlw	3
  7583  000636  0100               	movlb	0	; () banked
  7584  000638  15B8               	andwf	sprintf@flag& (0+255),w,b
  7585  00063A  0100               	movlb	0	; () banked
  7586  00063C  6FAD               	movwf	??_sprintf& (0+255),b
  7587  00063E  0E00               	movlw	0
  7588  000640  0100               	movlb	0	; () banked
  7589  000642  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7590  000644  0100               	movlb	0	; () banked
  7591  000646  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7592  000648  0100               	movlb	0	; () banked
  7593  00064A  51AD               	movf	??_sprintf& (0+255),w,b
  7594  00064C  0100               	movlb	0	; () banked
  7595  00064E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  7596  000650  B4D8               	btfsc	status,2,c
  7597  000652  D00E               	goto	l5421
  7598  000654  D009               	goto	l5419
  7599  000656                     l5415:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7603  000656  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7604  00065A  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7605  00065E  0E20               	movlw	32
  7606  000660  6EDF               	movwf	indf2,c
  7607                           
  7608                           ; BSR set to: 0
  7609  000662  0100               	movlb	0	; () banked
  7610  000664  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7611  000666  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7612  000668                     l5419:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;doprnt.c: 1182: width--;
  7616  000668  0100               	movlb	0	; () banked
  7617  00066A  07BA               	decf	sprintf@width& (0+255),f,b
  7618  00066C  A0D8               	btfss	status,0,c
  7619  00066E  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  7620  000670                     l5421:
  7621                           
  7622                           ; BSR set to: 0
  7623  000670  0100               	movlb	0	; () banked
  7624  000672  BFBB               	btfsc	(sprintf@width+1)& (0+255),7,b
  7625  000674  D007               	goto	l5423
  7626  000676  0100               	movlb	0	; () banked
  7627  000678  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  7628  00067A  E1ED               	bnz	l5415
  7629  00067C  0100               	movlb	0	; () banked
  7630  00067E  05BA               	decf	sprintf@width& (0+255),w,b
  7631  000680  B0D8               	btfsc	status,0,c
  7632  000682  D7E9               	goto	l5415
  7633  000684                     l5423:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;doprnt.c: 1183: }
  7637                           ;doprnt.c: 1188: if(flag & 0x03)
  7638  000684  0E03               	movlw	3
  7639  000686  0100               	movlb	0	; () banked
  7640  000688  15B8               	andwf	sprintf@flag& (0+255),w,b
  7641  00068A  0100               	movlb	0	; () banked
  7642  00068C  6FAD               	movwf	??_sprintf& (0+255),b
  7643  00068E  0E00               	movlw	0
  7644  000690  0100               	movlb	0	; () banked
  7645  000692  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7646  000694  0100               	movlb	0	; () banked
  7647  000696  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7648  000698  0100               	movlb	0	; () banked
  7649  00069A  51AD               	movf	??_sprintf& (0+255),w,b
  7650  00069C  0100               	movlb	0	; () banked
  7651  00069E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  7652  0006A0  B4D8               	btfsc	status,2,c
  7653  0006A2  D055               	goto	l5437
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7657  0006A4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7658  0006A8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7659  0006AC  0E2D               	movlw	45
  7660  0006AE  D04D               	goto	L3
  7661  0006B0                     l5427:
  7662                           
  7663                           ; BSR set to: 0
  7664  0006B0  0100               	movlb	0	; () banked
  7665  0006B2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7666  0006B4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;doprnt.c: 1195: }
  7670                           ;doprnt.c: 1196: while(c--) {
  7671  0006B6  D04B               	goto	l5437
  7672  0006B8                     l5429:
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;doprnt.c: 1200: {
  7676                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7677  0006B8  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  7678  0006BC  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7679  0006C0  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7680  0006C4  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7681  0006C8  0100               	movlb	0	; () banked
  7682  0006CA  51CB               	movf	sprintf@c& (0+255),w,b
  7683  0006CC  0D04               	mullw	4
  7684  0006CE  0EF5               	movlw	low _dpowers
  7685  0006D0  24F3               	addwf	prodl,w,c
  7686  0006D2  6EF6               	movwf	tblptrl,c
  7687  0006D4  0E7E               	movlw	high _dpowers
  7688  0006D6  20F4               	addwfc	prodh,w,c
  7689  0006D8  6EF7               	movwf	tblptrh,c
  7690  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7691  0006DA                     	endif
  7692  0006DA  0009               	tblrd		*+
  7693  0006DC  CFF5 F064          	movff	tablat,___lldiv@divisor
  7694  0006E0  0009               	tblrd		*+
  7695  0006E2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7696  0006E6  0009               	tblrd		*+
  7697  0006E8  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7698  0006EC  000A               	tblrd		*-
  7699  0006EE  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7700  0006F2  ECF1  F019         	call	___lldiv	;wreg free
  7701  0006F6  C060  F0BC         	movff	?___lldiv,sprintf@tmpval
  7702  0006FA  C061  F0BD         	movff	?___lldiv+1,sprintf@tmpval+1
  7703  0006FE  C062  F0BE         	movff	?___lldiv+2,sprintf@tmpval+2
  7704  000702  C063  F0BF         	movff	?___lldiv+3,sprintf@tmpval+3
  7705                           
  7706                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7707  000706  C0BC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7708  00070A  C0BD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7709  00070E  C0BE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7710  000712  C0BF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7711  000716  0E0A               	movlw	10
  7712  000718  0100               	movlb	0	; () banked
  7713  00071A  6F71               	movwf	___llmod@divisor& (0+255),b
  7714  00071C  0E00               	movlw	0
  7715  00071E  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7716  000720  0E00               	movlw	0
  7717  000722  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7718  000724  0E00               	movlw	0
  7719  000726  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7720  000728  ECFE  F01A         	call	___llmod	;wreg free
  7721  00072C  C06D  F0BC         	movff	?___llmod,sprintf@tmpval
  7722  000730  C06E  F0BD         	movff	?___llmod+1,sprintf@tmpval+1
  7723  000734  C06F  F0BE         	movff	?___llmod+2,sprintf@tmpval+2
  7724  000738  C070  F0BF         	movff	?___llmod+3,sprintf@tmpval+3
  7725                           
  7726                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7727  00073C  0100               	movlb	0	; () banked
  7728  00073E  51BC               	movf	sprintf@tmpval& (0+255),w,b
  7729  000740  0F30               	addlw	48
  7730  000742  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7731  000746  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7732  00074A                     L3:
  7733  00074A  6EDF               	movwf	indf2,c
  7734  00074C  D7B1               	goto	l5427
  7735  00074E                     l5437:
  7736                           
  7737                           ; BSR set to: 0
  7738  00074E  0100               	movlb	0	; () banked
  7739  000750  07CB               	decf	sprintf@c& (0+255),f,b
  7740  000752  0100               	movlb	0	; () banked
  7741  000754  29CB               	incf	sprintf@c& (0+255),w,b
  7742  000756  B4D8               	btfsc	status,2,c
  7743  000758  D00E               	goto	l5445
  7744  00075A  D7AE               	goto	l5429
  7745  00075C                     l5439:
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7749  00075C  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7750  000760  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7751  000764  0E30               	movlw	48
  7752  000766  6EDF               	movwf	indf2,c
  7753                           
  7754                           ; BSR set to: 0
  7755  000768  0100               	movlb	0	; () banked
  7756  00076A  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7757  00076C  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;doprnt.c: 1209: exp--;
  7761  00076E  0100               	movlb	0	; () banked
  7762  000770  07C4               	decf	sprintf@exp& (0+255),f,b
  7763  000772  A0D8               	btfss	status,0,c
  7764  000774  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7765  000776                     l5445:
  7766                           
  7767                           ; BSR set to: 0
  7768  000776  0100               	movlb	0	; () banked
  7769  000778  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7770  00077A  D007               	goto	l5447
  7771  00077C  0100               	movlb	0	; () banked
  7772  00077E  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7773  000780  E1ED               	bnz	l5439
  7774  000782  0100               	movlb	0	; () banked
  7775  000784  05C4               	decf	sprintf@exp& (0+255),w,b
  7776  000786  B0D8               	btfsc	status,0,c
  7777  000788  D7E9               	goto	l5439
  7778  00078A                     l5447:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;doprnt.c: 1210: }
  7782                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7783  00078A  0100               	movlb	0	; () banked
  7784  00078C  BFCA               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7785  00078E  D00C               	goto	l532
  7786  000790  0100               	movlb	0	; () banked
  7787  000792  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7788  000794  E105               	bnz	u5660
  7789  000796  0E09               	movlw	9
  7790  000798  0100               	movlb	0	; () banked
  7791  00079A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  7792  00079C  A0D8               	btfss	status,0,c
  7793  00079E  D004               	goto	l532
  7794  0007A0                     u5660:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7798  0007A0  0E08               	movlw	8
  7799  0007A2  0100               	movlb	0	; () banked
  7800  0007A4  6FCB               	movwf	sprintf@c& (0+255),b
  7801  0007A6  D002               	goto	l5451
  7802  0007A8                     l532:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;doprnt.c: 1213: else
  7806                           ;doprnt.c: 1214: c = prec;
  7807  0007A8  C0C9  F0CB         	movff	sprintf@prec,sprintf@c
  7808  0007AC                     l5451:
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;doprnt.c: 1215: prec -= c;
  7812  0007AC  0100               	movlb	0	; () banked
  7813  0007AE  51CB               	movf	sprintf@c& (0+255),w,b
  7814  0007B0  0100               	movlb	0	; () banked
  7815  0007B2  5FC9               	subwf	sprintf@prec& (0+255),f,b
  7816  0007B4  0E00               	movlw	0
  7817  0007B6  0100               	movlb	0	; () banked
  7818  0007B8  BFCB               	btfsc	sprintf@c& (0+255),7,b
  7819  0007BA  0EFF               	movlw	255
  7820  0007BC  0100               	movlb	0	; () banked
  7821  0007BE  5BCA               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;doprnt.c: 1219: if(c)
  7825  0007C0  0100               	movlb	0	; () banked
  7826  0007C2  51CB               	movf	sprintf@c& (0+255),w,b
  7827  0007C4  0100               	movlb	0	; () banked
  7828  0007C6  B4D8               	btfsc	status,2,c
  7829  0007C8  D009               	goto	l5459
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7833  0007CA  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7834  0007CE  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7835  0007D2  0E2E               	movlw	46
  7836  0007D4  6EDF               	movwf	indf2,c
  7837                           
  7838                           ; BSR set to: 0
  7839  0007D6  0100               	movlb	0	; () banked
  7840  0007D8  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7841  0007DA  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7842  0007DC                     l5459:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7846  0007DC  0100               	movlb	0	; () banked
  7847  0007DE  51CB               	movf	sprintf@c& (0+255),w,b
  7848  0007E0  ECF5  F009         	call	_scale
  7849  0007E4  C083  F0B3         	movff	?_scale,_sprintf$2692
  7850  0007E8  C084  F0B4         	movff	?_scale+1,_sprintf$2692+1
  7851  0007EC  C085  F0B5         	movff	?_scale+2,_sprintf$2692+2
  7852                           
  7853                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7854  0007F0  C0C6  F077         	movff	sprintf@fval,___ftmul@f2
  7855  0007F4  C0C7  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  7856  0007F8  C0C8  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  7857  0007FC  C0B3  F074         	movff	_sprintf$2692,___ftmul@f1
  7858  000800  C0B4  F075         	movff	_sprintf$2692+1,___ftmul@f1+1
  7859  000804  C0B5  F076         	movff	_sprintf$2692+2,___ftmul@f1+2
  7860  000808  ECFF  F014         	call	___ftmul	;wreg free
  7861  00080C  C074  F08A         	movff	?___ftmul,___fttol@f1
  7862  000810  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  7863  000814  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  7864  000818  EC54  F016         	call	___fttol	;wreg free
  7865  00081C  C08A  F0C0         	movff	?___fttol,sprintf@val
  7866  000820  C08B  F0C1         	movff	?___fttol+1,sprintf@val+1
  7867  000824  C08C  F0C2         	movff	?___fttol+2,sprintf@val+2
  7868  000828  C08D  F0C3         	movff	?___fttol+3,sprintf@val+3
  7869                           
  7870                           ;doprnt.c: 1228: while(c--) {
  7871  00082C  D074               	goto	l5473
  7872  00082E                     l5463:
  7873                           
  7874                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7875  00082E  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  7876  000832  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7877  000836  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7878  00083A  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7879  00083E  0100               	movlb	0	; () banked
  7880  000840  51CB               	movf	sprintf@c& (0+255),w,b
  7881  000842  0D04               	mullw	4
  7882  000844  0EF5               	movlw	low _dpowers
  7883  000846  24F3               	addwf	prodl,w,c
  7884  000848  6EF6               	movwf	tblptrl,c
  7885  00084A  0E7E               	movlw	high _dpowers
  7886  00084C  20F4               	addwfc	prodh,w,c
  7887  00084E  6EF7               	movwf	tblptrh,c
  7888  000850                     	if	0	;There are less than 3 active tblptr bytes
  7889  000850                     	endif
  7890  000850  0009               	tblrd		*+
  7891  000852  CFF5 F064          	movff	tablat,___lldiv@divisor
  7892  000856  0009               	tblrd		*+
  7893  000858  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7894  00085C  0009               	tblrd		*+
  7895  00085E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7896  000862  000A               	tblrd		*-
  7897  000864  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7898  000868  ECF1  F019         	call	___lldiv	;wreg free
  7899  00086C  C060  F0BC         	movff	?___lldiv,sprintf@tmpval
  7900  000870  C061  F0BD         	movff	?___lldiv+1,sprintf@tmpval+1
  7901  000874  C062  F0BE         	movff	?___lldiv+2,sprintf@tmpval+2
  7902  000878  C063  F0BF         	movff	?___lldiv+3,sprintf@tmpval+3
  7903                           
  7904                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7905  00087C  C0BC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7906  000880  C0BD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7907  000884  C0BE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7908  000888  C0BF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7909  00088C  0E0A               	movlw	10
  7910  00088E  0100               	movlb	0	; () banked
  7911  000890  6F71               	movwf	___llmod@divisor& (0+255),b
  7912  000892  0E00               	movlw	0
  7913  000894  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7914  000896  0E00               	movlw	0
  7915  000898  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7916  00089A  0E00               	movlw	0
  7917  00089C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7918  00089E  ECFE  F01A         	call	___llmod	;wreg free
  7919  0008A2  C06D  F0BC         	movff	?___llmod,sprintf@tmpval
  7920  0008A6  C06E  F0BD         	movff	?___llmod+1,sprintf@tmpval+1
  7921  0008AA  C06F  F0BE         	movff	?___llmod+2,sprintf@tmpval+2
  7922  0008AE  C070  F0BF         	movff	?___llmod+3,sprintf@tmpval+3
  7923                           
  7924                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7925  0008B2  0100               	movlb	0	; () banked
  7926  0008B4  51BC               	movf	sprintf@tmpval& (0+255),w,b
  7927  0008B6  0F30               	addlw	48
  7928  0008B8  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7929  0008BC  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7930  0008C0  6EDF               	movwf	indf2,c
  7931                           
  7932                           ; BSR set to: 0
  7933  0008C2  0100               	movlb	0	; () banked
  7934  0008C4  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7935  0008C6  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;doprnt.c: 1232: val %= dpowers[c];
  7939  0008C8  C0C0  F06D         	movff	sprintf@val,___llmod@dividend
  7940  0008CC  C0C1  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  7941  0008D0  C0C2  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  7942  0008D4  C0C3  F070         	movff	sprintf@val+3,___llmod@dividend+3
  7943  0008D8  0100               	movlb	0	; () banked
  7944  0008DA  51CB               	movf	sprintf@c& (0+255),w,b
  7945  0008DC  0D04               	mullw	4
  7946  0008DE  0EF5               	movlw	low _dpowers
  7947  0008E0  24F3               	addwf	prodl,w,c
  7948  0008E2  6EF6               	movwf	tblptrl,c
  7949  0008E4  0E7E               	movlw	high _dpowers
  7950  0008E6  20F4               	addwfc	prodh,w,c
  7951  0008E8  6EF7               	movwf	tblptrh,c
  7952  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7953  0008EA                     	endif
  7954  0008EA  0009               	tblrd		*+
  7955  0008EC  CFF5 F071          	movff	tablat,___llmod@divisor
  7956  0008F0  0009               	tblrd		*+
  7957  0008F2  CFF5 F072          	movff	tablat,___llmod@divisor+1
  7958  0008F6  0009               	tblrd		*+
  7959  0008F8  CFF5 F073          	movff	tablat,___llmod@divisor+2
  7960  0008FC  000A               	tblrd		*-
  7961  0008FE  CFF5 F074          	movff	tablat,___llmod@divisor+3
  7962  000902  ECFE  F01A         	call	___llmod	;wreg free
  7963  000906  C06D  F0C0         	movff	?___llmod,sprintf@val
  7964  00090A  C06E  F0C1         	movff	?___llmod+1,sprintf@val+1
  7965  00090E  C06F  F0C2         	movff	?___llmod+2,sprintf@val+2
  7966  000912  C070  F0C3         	movff	?___llmod+3,sprintf@val+3
  7967  000916                     l5473:
  7968  000916  0100               	movlb	0	; () banked
  7969  000918  07CB               	decf	sprintf@c& (0+255),f,b
  7970  00091A  0100               	movlb	0	; () banked
  7971  00091C  29CB               	incf	sprintf@c& (0+255),w,b
  7972  00091E  B4D8               	btfsc	status,2,c
  7973  000920  D00E               	goto	l5481
  7974  000922  D785               	goto	l5463
  7975  000924                     l5475:
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7979  000924  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7980  000928  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7981  00092C  0E30               	movlw	48
  7982  00092E  6EDF               	movwf	indf2,c
  7983                           
  7984                           ; BSR set to: 0
  7985  000930  0100               	movlb	0	; () banked
  7986  000932  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7987  000934  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;doprnt.c: 1237: prec--;
  7991  000936  0100               	movlb	0	; () banked
  7992  000938  07C9               	decf	sprintf@prec& (0+255),f,b
  7993  00093A  A0D8               	btfss	status,0,c
  7994  00093C  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  7995  00093E                     l5481:
  7996                           
  7997                           ; BSR set to: 0
  7998  00093E  0100               	movlb	0	; () banked
  7999  000940  51C9               	movf	sprintf@prec& (0+255),w,b
  8000  000942  0100               	movlb	0	; () banked
  8001  000944  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8002  000946  B4D8               	btfsc	status,2,c
  8003  000948  D169               	goto	l5563
  8004  00094A  D7EC               	goto	l5475
  8005  00094C                     l5483:
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;doprnt.c: 1246: }
  8009                           ;doprnt.c: 1253: {
  8010                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8011  00094C  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  8012  000950  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  8013  000954  CFDE F0C0          	movff	postinc2,sprintf@val
  8014  000958  CFDD F0C1          	movff	postdec2,sprintf@val+1
  8015  00095C  0100               	movlb	0	; () banked
  8016  00095E  0E00               	movlw	0
  8017  000960  BFC1               	btfsc	(sprintf@val+1)& (0+255),7,b
  8018  000962  0EFF               	movlw	-1
  8019  000964  6FC2               	movwf	(sprintf@val+2)& (0+255),b
  8020  000966  6FC3               	movwf	(sprintf@val+3)& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023  000968  0E02               	movlw	2
  8024  00096A  0100               	movlb	0	; () banked
  8025  00096C  27B6               	addwf	sprintf@ap& (0+255),f,b
  8026  00096E  0E00               	movlw	0
  8027  000970  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;doprnt.c: 1261: if((long)val < 0) {
  8031  000972  0100               	movlb	0	; () banked
  8032  000974  AFC3               	btfss	(sprintf@val+3)& (0+255),7,b
  8033  000976  D00C               	goto	l5493
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;doprnt.c: 1262: flag |= 0x03;
  8037  000978  0E03               	movlw	3
  8038  00097A  0100               	movlb	0	; () banked
  8039  00097C  13B8               	iorwf	sprintf@flag& (0+255),f,b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;doprnt.c: 1263: val = -val;
  8043  00097E  0100               	movlb	0	; () banked
  8044  000980  1FC3               	comf	(sprintf@val+3)& (0+255),f,b
  8045  000982  1FC2               	comf	(sprintf@val+2)& (0+255),f,b
  8046  000984  1FC1               	comf	(sprintf@val+1)& (0+255),f,b
  8047  000986  6DC0               	negf	sprintf@val& (0+255),b
  8048  000988  0E00               	movlw	0
  8049  00098A  23C1               	addwfc	(sprintf@val+1)& (0+255),f,b
  8050  00098C  23C2               	addwfc	(sprintf@val+2)& (0+255),f,b
  8051  00098E  23C3               	addwfc	(sprintf@val+3)& (0+255),f,b
  8052  000990                     l5493:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;doprnt.c: 1264: }
  8056                           ;doprnt.c: 1266: }
  8057                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8058  000990  0100               	movlb	0	; () banked
  8059  000992  51C9               	movf	sprintf@prec& (0+255),w,b
  8060  000994  0100               	movlb	0	; () banked
  8061  000996  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8062  000998  A4D8               	btfss	status,2,c
  8063  00099A  D00D               	goto	l5499
  8064                           
  8065                           ; BSR set to: 0
  8066  00099C  0100               	movlb	0	; () banked
  8067  00099E  51C0               	movf	sprintf@val& (0+255),w,b
  8068  0009A0  0100               	movlb	0	; () banked
  8069  0009A2  11C1               	iorwf	(sprintf@val+1)& (0+255),w,b
  8070  0009A4  0100               	movlb	0	; () banked
  8071  0009A6  11C2               	iorwf	(sprintf@val+2)& (0+255),w,b
  8072  0009A8  0100               	movlb	0	; () banked
  8073  0009AA  11C3               	iorwf	(sprintf@val+3)& (0+255),w,b
  8074  0009AC  A4D8               	btfss	status,2,c
  8075  0009AE  D003               	goto	l5499
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;doprnt.c: 1291: prec++;
  8079  0009B0  0100               	movlb	0	; () banked
  8080  0009B2  4BC9               	infsnz	sprintf@prec& (0+255),f,b
  8081  0009B4  2BCA               	incf	(sprintf@prec+1)& (0+255),f,b
  8082  0009B6                     l5499:
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8086  0009B6  0E01               	movlw	1
  8087  0009B8  0100               	movlb	0	; () banked
  8088  0009BA  6FCB               	movwf	sprintf@c& (0+255),b
  8089  0009BC                     l5501:
  8090                           
  8091                           ; BSR set to: 0
  8092  0009BC  0E0A               	movlw	10
  8093  0009BE  0100               	movlb	0	; () banked
  8094  0009C0  19CB               	xorwf	sprintf@c& (0+255),w,b
  8095  0009C2  B4D8               	btfsc	status,2,c
  8096  0009C4  D01E               	goto	l5513
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;doprnt.c: 1306: if(val < dpowers[c])
  8100                           
  8101                           ; BSR set to: 0
  8102                           
  8103                           ; BSR set to: 0
  8104  0009C6  0100               	movlb	0	; () banked
  8105  0009C8  51CB               	movf	sprintf@c& (0+255),w,b
  8106  0009CA  0D04               	mullw	4
  8107  0009CC  0EF5               	movlw	low _dpowers
  8108  0009CE  24F3               	addwf	prodl,w,c
  8109  0009D0  6EF6               	movwf	tblptrl,c
  8110  0009D2  0E7E               	movlw	high _dpowers
  8111  0009D4  20F4               	addwfc	prodh,w,c
  8112  0009D6  6EF7               	movwf	tblptrh,c
  8113  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8114  0009D8                     	endif
  8115  0009D8  0009               	tblrd		*+
  8116  0009DA  50F5               	movf	tablat,w,c
  8117  0009DC  0100               	movlb	0	; () banked
  8118  0009DE  5DC0               	subwf	sprintf@val& (0+255),w,b
  8119  0009E0  0009               	tblrd		*+
  8120  0009E2  50F5               	movf	tablat,w,c
  8121  0009E4  0100               	movlb	0	; () banked
  8122  0009E6  59C1               	subwfb	(sprintf@val+1)& (0+255),w,b
  8123  0009E8  0009               	tblrd		*+
  8124  0009EA  50F5               	movf	tablat,w,c
  8125  0009EC  0100               	movlb	0	; () banked
  8126  0009EE  59C2               	subwfb	(sprintf@val+2)& (0+255),w,b
  8127  0009F0  0009               	tblrd		*+
  8128  0009F2  50F5               	movf	tablat,w,c
  8129  0009F4  0100               	movlb	0	; () banked
  8130  0009F6  59C3               	subwfb	(sprintf@val+3)& (0+255),w,b
  8131  0009F8  A0D8               	btfss	status,0,c
  8132  0009FA  D003               	goto	l5513
  8133                           
  8134                           ; BSR set to: 0
  8135                           
  8136                           ; BSR set to: 0
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;doprnt.c: 1307: break;
  8140  0009FC  0100               	movlb	0	; () banked
  8141  0009FE  2BCB               	incf	sprintf@c& (0+255),f,b
  8142  000A00  D7DD               	goto	l5501
  8143  000A02                     l5513:
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;doprnt.c: 1339: if(c < prec)
  8147  000A02  0E80               	movlw	128
  8148  000A04  0100               	movlb	0	; () banked
  8149  000A06  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8150  000A08  0E7F               	movlw	127
  8151  000A0A  0100               	movlb	0	; () banked
  8152  000A0C  6FAD               	movwf	??_sprintf& (0+255),b
  8153  000A0E  0100               	movlb	0	; () banked
  8154  000A10  51C9               	movf	sprintf@prec& (0+255),w,b
  8155  000A12  0100               	movlb	0	; () banked
  8156  000A14  5DCB               	subwf	sprintf@c& (0+255),w,b
  8157  000A16  0100               	movlb	0	; () banked
  8158  000A18  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8159  000A1A  0A80               	xorlw	128
  8160  000A1C  0100               	movlb	0	; () banked
  8161  000A1E  59AD               	subwfb	??_sprintf& (0+255),w,b
  8162  000A20  B0D8               	btfsc	status,0,c
  8163  000A22  D003               	goto	l5517
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;doprnt.c: 1340: c = prec;
  8167  000A24  C0C9  F0CB         	movff	sprintf@prec,sprintf@c
  8168  000A28  D018               	goto	l5521
  8169  000A2A                     l5517:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;doprnt.c: 1341: else if(prec < c)
  8173  000A2A  0100               	movlb	0	; () banked
  8174  000A2C  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8175  000A2E  0A80               	xorlw	128
  8176  000A30  0100               	movlb	0	; () banked
  8177  000A32  6FAD               	movwf	??_sprintf& (0+255),b
  8178  000A34  0100               	movlb	0	; () banked
  8179  000A36  51CB               	movf	sprintf@c& (0+255),w,b
  8180  000A38  0100               	movlb	0	; () banked
  8181  000A3A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  8182  000A3C  0E80               	movlw	128
  8183  000A3E  0100               	movlb	0	; () banked
  8184  000A40  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8185  000A42  0E7F               	movlw	127
  8186  000A44  0100               	movlb	0	; () banked
  8187  000A46  59AD               	subwfb	??_sprintf& (0+255),w,b
  8188  000A48  B0D8               	btfsc	status,0,c
  8189  000A4A  D007               	goto	l5521
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;doprnt.c: 1342: prec = c;
  8193  000A4C  0100               	movlb	0	; () banked
  8194  000A4E  51CB               	movf	sprintf@c& (0+255),w,b
  8195  000A50  0100               	movlb	0	; () banked
  8196  000A52  6FC9               	movwf	sprintf@prec& (0+255),b
  8197  000A54  6BCA               	clrf	(sprintf@prec+1)& (0+255),b
  8198  000A56  BFC9               	btfsc	sprintf@prec& (0+255),7,b
  8199  000A58  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  8200  000A5A                     l5521:
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8204  000A5A  0100               	movlb	0	; () banked
  8205  000A5C  51BA               	movf	sprintf@width& (0+255),w,b
  8206  000A5E  0100               	movlb	0	; () banked
  8207  000A60  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8208  000A62  B4D8               	btfsc	status,2,c
  8209  000A64  D014               	goto	l5527
  8210                           
  8211                           ; BSR set to: 0
  8212  000A66  0E03               	movlw	3
  8213  000A68  0100               	movlb	0	; () banked
  8214  000A6A  15B8               	andwf	sprintf@flag& (0+255),w,b
  8215  000A6C  0100               	movlb	0	; () banked
  8216  000A6E  6FAD               	movwf	??_sprintf& (0+255),b
  8217  000A70  0E00               	movlw	0
  8218  000A72  0100               	movlb	0	; () banked
  8219  000A74  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  8220  000A76  0100               	movlb	0	; () banked
  8221  000A78  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  8222  000A7A  0100               	movlb	0	; () banked
  8223  000A7C  51AD               	movf	??_sprintf& (0+255),w,b
  8224  000A7E  0100               	movlb	0	; () banked
  8225  000A80  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  8226  000A82  B4D8               	btfsc	status,2,c
  8227  000A84  D004               	goto	l5527
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;doprnt.c: 1346: width--;
  8231  000A86  0100               	movlb	0	; () banked
  8232  000A88  07BA               	decf	sprintf@width& (0+255),f,b
  8233  000A8A  A0D8               	btfss	status,0,c
  8234  000A8C  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  8235  000A8E                     l5527:
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8239  000A8E  0100               	movlb	0	; () banked
  8240  000A90  ADB9               	btfss	(sprintf@flag+1)& (0+255),6,b
  8241  000A92  D01E               	goto	l5535
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;doprnt.c: 1349: if(width > prec)
  8245  000A94  0100               	movlb	0	; () banked
  8246  000A96  51BA               	movf	sprintf@width& (0+255),w,b
  8247  000A98  0100               	movlb	0	; () banked
  8248  000A9A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  8249  000A9C  0100               	movlb	0	; () banked
  8250  000A9E  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8251  000AA0  0A80               	xorlw	128
  8252  000AA2  0100               	movlb	0	; () banked
  8253  000AA4  6FAD               	movwf	??_sprintf& (0+255),b
  8254  000AA6  0100               	movlb	0	; () banked
  8255  000AA8  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  8256  000AAA  0A80               	xorlw	128
  8257  000AAC  0100               	movlb	0	; () banked
  8258  000AAE  59AD               	subwfb	??_sprintf& (0+255),w,b
  8259  000AB0  B0D8               	btfsc	status,0,c
  8260  000AB2  D009               	goto	l5533
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;doprnt.c: 1350: width -= prec;
  8264  000AB4  0100               	movlb	0	; () banked
  8265  000AB6  51C9               	movf	sprintf@prec& (0+255),w,b
  8266  000AB8  0100               	movlb	0	; () banked
  8267  000ABA  5FBA               	subwf	sprintf@width& (0+255),f,b
  8268  000ABC  0100               	movlb	0	; () banked
  8269  000ABE  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8270  000AC0  0100               	movlb	0	; () banked
  8271  000AC2  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  8272  000AC4  D005               	goto	l5535
  8273  000AC6                     l5533:
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;doprnt.c: 1351: else
  8277                           ;doprnt.c: 1352: width = 0;
  8278  000AC6  0E00               	movlw	0
  8279  000AC8  0100               	movlb	0	; () banked
  8280  000ACA  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  8281  000ACC  0E00               	movlw	0
  8282  000ACE  6FBA               	movwf	sprintf@width& (0+255),b
  8283  000AD0                     l5535:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;doprnt.c: 1353: }
  8287                           ;doprnt.c: 1381: if(width > c)
  8288  000AD0  0E80               	movlw	128
  8289  000AD2  0100               	movlb	0	; () banked
  8290  000AD4  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8291  000AD6  0E7F               	movlw	127
  8292  000AD8  0100               	movlb	0	; () banked
  8293  000ADA  6FAD               	movwf	??_sprintf& (0+255),b
  8294  000ADC  0100               	movlb	0	; () banked
  8295  000ADE  51BA               	movf	sprintf@width& (0+255),w,b
  8296  000AE0  0100               	movlb	0	; () banked
  8297  000AE2  5DCB               	subwf	sprintf@c& (0+255),w,b
  8298  000AE4  0100               	movlb	0	; () banked
  8299  000AE6  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  8300  000AE8  0A80               	xorlw	128
  8301  000AEA  0100               	movlb	0	; () banked
  8302  000AEC  59AD               	subwfb	??_sprintf& (0+255),w,b
  8303  000AEE  B0D8               	btfsc	status,0,c
  8304  000AF0  D00B               	goto	l5539
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;doprnt.c: 1382: width -= c;
  8308  000AF2  0100               	movlb	0	; () banked
  8309  000AF4  51CB               	movf	sprintf@c& (0+255),w,b
  8310  000AF6  0100               	movlb	0	; () banked
  8311  000AF8  5FBA               	subwf	sprintf@width& (0+255),f,b
  8312  000AFA  0E00               	movlw	0
  8313  000AFC  0100               	movlb	0	; () banked
  8314  000AFE  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8315  000B00  0EFF               	movlw	255
  8316  000B02  0100               	movlb	0	; () banked
  8317  000B04  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  8318  000B06  D005               	goto	l5541
  8319  000B08                     l5539:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;doprnt.c: 1383: else
  8323                           ;doprnt.c: 1384: width = 0;
  8324  000B08  0E00               	movlw	0
  8325  000B0A  0100               	movlb	0	; () banked
  8326  000B0C  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  8327  000B0E  0E00               	movlw	0
  8328  000B10  6FBA               	movwf	sprintf@width& (0+255),b
  8329  000B12                     l5541:
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;doprnt.c: 1422: {
  8333                           ;doprnt.c: 1424: if(width
  8334                           ;doprnt.c: 1428: )
  8335  000B12  0100               	movlb	0	; () banked
  8336  000B14  51BA               	movf	sprintf@width& (0+255),w,b
  8337  000B16  0100               	movlb	0	; () banked
  8338  000B18  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8339  000B1A  B4D8               	btfsc	status,2,c
  8340  000B1C  D013               	goto	l5549
  8341  000B1E                     l5543:
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8345  000B1E  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8346  000B22  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8347  000B26  0E20               	movlw	32
  8348  000B28  6EDF               	movwf	indf2,c
  8349                           
  8350                           ; BSR set to: 0
  8351  000B2A  0100               	movlb	0	; () banked
  8352  000B2C  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8353  000B2E  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;doprnt.c: 1431: while(--width);
  8357  000B30  0100               	movlb	0	; () banked
  8358  000B32  07BA               	decf	sprintf@width& (0+255),f,b
  8359  000B34  A0D8               	btfss	status,0,c
  8360  000B36  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  8361  000B38  0100               	movlb	0	; () banked
  8362  000B3A  51BA               	movf	sprintf@width& (0+255),w,b
  8363  000B3C  0100               	movlb	0	; () banked
  8364  000B3E  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8365  000B40  A4D8               	btfss	status,2,c
  8366  000B42  D7ED               	goto	l5543
  8367  000B44                     l5549:
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;doprnt.c: 1438: if(flag & 0x03)
  8371  000B44  0E03               	movlw	3
  8372  000B46  0100               	movlb	0	; () banked
  8373  000B48  15B8               	andwf	sprintf@flag& (0+255),w,b
  8374  000B4A  0100               	movlb	0	; () banked
  8375  000B4C  6FAD               	movwf	??_sprintf& (0+255),b
  8376  000B4E  0E00               	movlw	0
  8377  000B50  0100               	movlb	0	; () banked
  8378  000B52  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  8379  000B54  0100               	movlb	0	; () banked
  8380  000B56  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  8381  000B58  0100               	movlb	0	; () banked
  8382  000B5A  51AD               	movf	??_sprintf& (0+255),w,b
  8383  000B5C  0100               	movlb	0	; () banked
  8384  000B5E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  8385  000B60  B4D8               	btfsc	status,2,c
  8386  000B62  D051               	goto	l5561
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8390  000B64  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8391  000B68  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8392  000B6C  0E2D               	movlw	45
  8393  000B6E  6EDF               	movwf	indf2,c
  8394  000B70  D047               	goto	l5559
  8395  000B72                     l5555:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;doprnt.c: 1478: {
  8399                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8400  000B72  C0C9  F0AD         	movff	sprintf@prec,??_sprintf
  8401  000B76  C0CA  F0AE         	movff	sprintf@prec+1,??_sprintf+1
  8402  000B7A  0100               	movlb	0	; () banked
  8403  000B7C  90D8               	bcf	status,0,c
  8404  000B7E  37AD               	rlcf	??_sprintf& (0+255),f,b
  8405  000B80  37AE               	rlcf	(??_sprintf+1)& (0+255),f,b
  8406  000B82  0100               	movlb	0	; () banked
  8407  000B84  90D8               	bcf	status,0,c
  8408  000B86  37AD               	rlcf	??_sprintf& (0+255),f,b
  8409  000B88  37AE               	rlcf	(??_sprintf+1)& (0+255),f,b
  8410  000B8A  0EF5               	movlw	low _dpowers
  8411  000B8C  0100               	movlb	0	; () banked
  8412  000B8E  25AD               	addwf	??_sprintf& (0+255),w,b
  8413  000B90  6EF6               	movwf	tblptrl,c
  8414  000B92  0E7E               	movlw	high _dpowers
  8415  000B94  21AE               	addwfc	(??_sprintf+1)& (0+255),w,b
  8416  000B96  6EF7               	movwf	tblptrh,c
  8417  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8418  000B98                     	endif
  8419  000B98  0009               	tblrd		*+
  8420  000B9A  CFF5 F064          	movff	tablat,___lldiv@divisor
  8421  000B9E  0009               	tblrd		*+
  8422  000BA0  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8423  000BA4  0009               	tblrd		*+
  8424  000BA6  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8425  000BAA  000A               	tblrd		*-
  8426  000BAC  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8427  000BB0  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  8428  000BB4  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8429  000BB8  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8430  000BBC  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8431  000BC0  ECF1  F019         	call	___lldiv	;wreg free
  8432  000BC4  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8433  000BC8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8434  000BCC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8435  000BD0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8436  000BD4  0E0A               	movlw	10
  8437  000BD6  0100               	movlb	0	; () banked
  8438  000BD8  6F71               	movwf	___llmod@divisor& (0+255),b
  8439  000BDA  0E00               	movlw	0
  8440  000BDC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8441  000BDE  0E00               	movlw	0
  8442  000BE0  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8443  000BE2  0E00               	movlw	0
  8444  000BE4  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8445  000BE6  ECFE  F01A         	call	___llmod	;wreg free
  8446  000BEA  0100               	movlb	0	; () banked
  8447  000BEC  516D               	movf	?___llmod& (0+255),w,b
  8448  000BEE  0F30               	addlw	48
  8449  000BF0  0100               	movlb	0	; () banked
  8450  000BF2  6FCB               	movwf	sprintf@c& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;doprnt.c: 1523: }
  8454                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8455  000BF4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8456  000BF8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8457  000BFC  C0CB  FFDF         	movff	sprintf@c,indf2
  8458  000C00                     l5559:
  8459                           
  8460                           ; BSR set to: 0
  8461  000C00  0100               	movlb	0	; () banked
  8462  000C02  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8463  000C04  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8464  000C06                     l5561:
  8465                           
  8466                           ; BSR set to: 0
  8467  000C06  0100               	movlb	0	; () banked
  8468  000C08  07C9               	decf	sprintf@prec& (0+255),f,b
  8469  000C0A  A0D8               	btfss	status,0,c
  8470  000C0C  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  8471  000C0E  0100               	movlb	0	; () banked
  8472  000C10  29C9               	incf	sprintf@prec& (0+255),w,b
  8473  000C12  E1AF               	bnz	l5555
  8474  000C14  0100               	movlb	0	; () banked
  8475  000C16  29CA               	incf	(sprintf@prec+1)& (0+255),w,b
  8476  000C18  A4D8               	btfss	status,2,c
  8477  000C1A  D7AB               	goto	l5555
  8478  000C1C                     l5563:
  8479                           
  8480                           ; BSR set to: 0
  8481  000C1C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  8482  000C20  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  8483  000C24  0100               	movlb	0	; () banked
  8484  000C26  4BA1               	infsnz	sprintf@f& (0+255),f,b
  8485  000C28  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  8486  000C2A                     	if	0	;tblptru may be non-zero
  8487  000C2A                     	endif
  8488  000C2A                     	if	0	;tblptru may be non-zero
  8489  000C2A                     	endif
  8490  000C2A  0008               	tblrd		*
  8491  000C2C  CFF5 F0CB          	movff	tablat,sprintf@c
  8492  000C30  0100               	movlb	0	; () banked
  8493  000C32  51CB               	movf	sprintf@c& (0+255),w,b
  8494  000C34  A4D8               	btfss	status,2,c
  8495  000C36  EF5D  F000         	goto	l5277
  8496  000C3A                     l5565:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;doprnt.c: 1538: *sp = 0;
  8500  000C3A  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8501  000C3E  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8502  000C42  0E00               	movlw	0
  8503  000C44  6EDF               	movwf	indf2,c
  8504  000C46  0012               	return	
  8505  000C48                     __end_of_sprintf:
  8506                           	opt stack 0
  8507                           tblptru	equ	0xFF8
  8508                           tblptrh	equ	0xFF7
  8509                           tblptrl	equ	0xFF6
  8510                           tablat	equ	0xFF5
  8511                           prodh	equ	0xFF4
  8512                           prodl	equ	0xFF3
  8513                           indf0	equ	0xFEF
  8514                           postinc0	equ	0xFEE
  8515                           fsr0h	equ	0xFEA
  8516                           fsr0l	equ	0xFE9
  8517                           wreg	equ	0xFE8
  8518                           indf1	equ	0xFE7
  8519                           postdec1	equ	0xFE5
  8520                           fsr1h	equ	0xFE2
  8521                           fsr1l	equ	0xFE1
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8
  8528                           
  8529 ;; *************** function _scale *****************
  8530 ;; Defined at:
  8531 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  scl             1    wreg     char 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  scl             1   41[BANK0 ] char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  3   35[BANK0 ] char 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8545 ;;      Params:         0       3       0       0       0       0       0
  8546 ;;      Locals:         0       4       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0
  8548 ;;      Totals:         0       7       0       0       0       0       0
  8549 ;;Total ram usage:        7 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    5
  8552 ;; This function calls:
  8553 ;;		___awdiv
  8554 ;;		___awmod
  8555 ;;		___ftmul
  8556 ;;		___wmul
  8557 ;; This function is called by:
  8558 ;;		_sprintf
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text32
  8563  0013EA                     __ptext32:
  8564                           	opt stack 0
  8565  0013EA                     _scale:
  8566                           	opt stack 22
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;incstack = 0
  8570                           ;scale@scl stored from wreg
  8571  0013EA  0100               	movlb	0	; () banked
  8572  0013EC  6F89               	movwf	scale@scl& (0+255),b
  8573                           
  8574                           ;doprnt.c: 428: if(scl < 0) {
  8575  0013EE  0100               	movlb	0	; () banked
  8576  0013F0  AF89               	btfss	scale@scl& (0+255),7,b
  8577  0013F2  D12A               	goto	l4949
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;doprnt.c: 429: scl = -scl;
  8581  0013F4  0100               	movlb	0	; () banked
  8582  0013F6  6D89               	negf	scale@scl& (0+255),b
  8583                           
  8584                           ;doprnt.c: 430: if(scl>=110)
  8585  0013F8  0100               	movlb	0	; () banked
  8586  0013FA  5189               	movf	scale@scl& (0+255),w,b
  8587  0013FC  0A80               	xorlw	128
  8588  0013FE  0F12               	addlw	-238
  8589  001400  A0D8               	btfss	status,0,c
  8590  001402  D0AC               	goto	l4939
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8594  001404  0E00               	movlw	0
  8595  001406  0100               	movlb	0	; () banked
  8596  001408  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8597  00140A  0E03               	movlw	3
  8598  00140C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8599  00140E  0E00               	movlw	0
  8600  001410  0100               	movlb	0	; () banked
  8601  001412  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8602  001414  0E0A               	movlw	10
  8603  001416  6F68               	movwf	___awdiv@divisor& (0+255),b
  8604  001418  0E00               	movlw	0
  8605  00141A  0100               	movlb	0	; () banked
  8606  00141C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8607  00141E  0E64               	movlw	100
  8608  001420  6F62               	movwf	___awmod@divisor& (0+255),b
  8609  001422  0100               	movlb	0	; () banked
  8610  001424  5189               	movf	scale@scl& (0+255),w,b
  8611  001426  0100               	movlb	0	; () banked
  8612  001428  6F60               	movwf	___awmod@dividend& (0+255),b
  8613  00142A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8614  00142C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8615  00142E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8616  001430  ECAD  F01A         	call	___awmod	;wreg free
  8617  001434  C060  F066         	movff	?___awmod,___awdiv@dividend
  8618  001438  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8619  00143C  EC92  F019         	call	___awdiv	;wreg free
  8620  001440  0E09               	movlw	9
  8621  001442  0100               	movlb	0	; () banked
  8622  001444  2566               	addwf	?___awdiv& (0+255),w,b
  8623  001446  0100               	movlb	0	; () banked
  8624  001448  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8625  00144A  0E00               	movlw	0
  8626  00144C  0100               	movlb	0	; () banked
  8627  00144E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8628  001450  0100               	movlb	0	; () banked
  8629  001452  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8630  001454  ECD7  F01D         	call	___wmul	;wreg free
  8631  001458  0E1D               	movlw	low __npowers_
  8632  00145A  0100               	movlb	0	; () banked
  8633  00145C  256E               	addwf	?___wmul& (0+255),w,b
  8634  00145E  6EF6               	movwf	tblptrl,c
  8635  001460  0E7F               	movlw	high __npowers_
  8636  001462  0100               	movlb	0	; () banked
  8637  001464  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8638  001466  6EF7               	movwf	tblptrh,c
  8639  001468                     	if	0	;There are less than 3 active tblptr bytes
  8640  001468                     	endif
  8641  001468  0009               	tblrd		*+
  8642  00146A  CFF5 F077          	movff	tablat,___ftmul@f2
  8643  00146E  0009               	tblrd		*+
  8644  001470  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8645  001474  000A               	tblrd		*-
  8646  001476  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8647  00147A  0E00               	movlw	0
  8648  00147C  0100               	movlb	0	; () banked
  8649  00147E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8650  001480  0E64               	movlw	100
  8651  001482  6F68               	movwf	___awdiv@divisor& (0+255),b
  8652  001484  0100               	movlb	0	; () banked
  8653  001486  5189               	movf	scale@scl& (0+255),w,b
  8654  001488  0100               	movlb	0	; () banked
  8655  00148A  6F66               	movwf	___awdiv@dividend& (0+255),b
  8656  00148C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8657  00148E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8658  001490  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8659  001492  EC92  F019         	call	___awdiv	;wreg free
  8660  001496  0E12               	movlw	18
  8661  001498  0100               	movlb	0	; () banked
  8662  00149A  2566               	addwf	?___awdiv& (0+255),w,b
  8663  00149C  0100               	movlb	0	; () banked
  8664  00149E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8665  0014A0  0E00               	movlw	0
  8666  0014A2  0100               	movlb	0	; () banked
  8667  0014A4  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8668  0014A6  0100               	movlb	0	; () banked
  8669  0014A8  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8670  0014AA  0E00               	movlw	0
  8671  0014AC  0100               	movlb	0	; () banked
  8672  0014AE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8673  0014B0  0E03               	movlw	3
  8674  0014B2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8675  0014B4  ECD7  F01D         	call	___wmul	;wreg free
  8676  0014B8  0E1D               	movlw	low __npowers_
  8677  0014BA  0100               	movlb	0	; () banked
  8678  0014BC  256E               	addwf	?___wmul& (0+255),w,b
  8679  0014BE  6EF6               	movwf	tblptrl,c
  8680  0014C0  0E7F               	movlw	high __npowers_
  8681  0014C2  0100               	movlb	0	; () banked
  8682  0014C4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8683  0014C6  6EF7               	movwf	tblptrh,c
  8684  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8685  0014C8                     	endif
  8686  0014C8  0009               	tblrd		*+
  8687  0014CA  CFF5 F074          	movff	tablat,___ftmul@f1
  8688  0014CE  0009               	tblrd		*+
  8689  0014D0  CFF5 F075          	movff	tablat,___ftmul@f1+1
  8690  0014D4  000A               	tblrd		*-
  8691  0014D6  CFF5 F076          	movff	tablat,___ftmul@f1+2
  8692  0014DA  ECFF  F014         	call	___ftmul	;wreg free
  8693  0014DE  C074  F086         	movff	?___ftmul,_scale$2691
  8694  0014E2  C075  F087         	movff	?___ftmul+1,_scale$2691+1
  8695  0014E6  C076  F088         	movff	?___ftmul+2,_scale$2691+2
  8696                           
  8697                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8698  0014EA  C086  F074         	movff	_scale$2691,___ftmul@f1
  8699  0014EE  C087  F075         	movff	_scale$2691+1,___ftmul@f1+1
  8700  0014F2  C088  F076         	movff	_scale$2691+2,___ftmul@f1+2
  8701  0014F6  0E00               	movlw	0
  8702  0014F8  0100               	movlb	0	; () banked
  8703  0014FA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8704  0014FC  0E03               	movlw	3
  8705  0014FE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8706  001500  0E00               	movlw	0
  8707  001502  0100               	movlb	0	; () banked
  8708  001504  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8709  001506  0E0A               	movlw	10
  8710  001508  6F62               	movwf	___awmod@divisor& (0+255),b
  8711  00150A  0100               	movlb	0	; () banked
  8712  00150C  5189               	movf	scale@scl& (0+255),w,b
  8713  00150E  0100               	movlb	0	; () banked
  8714  001510  6F60               	movwf	___awmod@dividend& (0+255),b
  8715  001512  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8716  001514  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8717  001516  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8718  001518  ECAD  F01A         	call	___awmod	;wreg free
  8719  00151C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8720  001520  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8721  001524  ECD7  F01D         	call	___wmul	;wreg free
  8722  001528  0E1D               	movlw	low __npowers_
  8723  00152A  0100               	movlb	0	; () banked
  8724  00152C  256E               	addwf	?___wmul& (0+255),w,b
  8725  00152E  6EF6               	movwf	tblptrl,c
  8726  001530  0E7F               	movlw	high __npowers_
  8727  001532  0100               	movlb	0	; () banked
  8728  001534  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8729  001536  6EF7               	movwf	tblptrh,c
  8730  001538                     	if	0	;There are less than 3 active tblptr bytes
  8731  001538                     	endif
  8732  001538  0009               	tblrd		*+
  8733  00153A  CFF5 F077          	movff	tablat,___ftmul@f2
  8734  00153E  0009               	tblrd		*+
  8735  001540  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8736  001544  000A               	tblrd		*-
  8737  001546  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8738  00154A  ECFF  F014         	call	___ftmul	;wreg free
  8739  00154E  C074  F083         	movff	?___ftmul,?_scale
  8740  001552  C075  F084         	movff	?___ftmul+1,?_scale+1
  8741  001556  C076  F085         	movff	?___ftmul+2,?_scale+2
  8742  00155A  0012               	return	
  8743  00155C                     l4939:
  8744                           
  8745                           ;doprnt.c: 432: else if(scl > 10)
  8746  00155C  0100               	movlb	0	; () banked
  8747  00155E  5189               	movf	scale@scl& (0+255),w,b
  8748  001560  0A80               	xorlw	128
  8749  001562  0F75               	addlw	-139
  8750  001564  A0D8               	btfss	status,0,c
  8751  001566  D05D               	goto	l4945
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8755  001568  0E00               	movlw	0
  8756  00156A  0100               	movlb	0	; () banked
  8757  00156C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8758  00156E  0E0A               	movlw	10
  8759  001570  6F68               	movwf	___awdiv@divisor& (0+255),b
  8760  001572  0100               	movlb	0	; () banked
  8761  001574  5189               	movf	scale@scl& (0+255),w,b
  8762  001576  0100               	movlb	0	; () banked
  8763  001578  6F66               	movwf	___awdiv@dividend& (0+255),b
  8764  00157A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8765  00157C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8766  00157E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8767  001580  EC92  F019         	call	___awdiv	;wreg free
  8768  001584  0E09               	movlw	9
  8769  001586  0100               	movlb	0	; () banked
  8770  001588  2566               	addwf	?___awdiv& (0+255),w,b
  8771  00158A  0100               	movlb	0	; () banked
  8772  00158C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8773  00158E  0E00               	movlw	0
  8774  001590  0100               	movlb	0	; () banked
  8775  001592  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8776  001594  0100               	movlb	0	; () banked
  8777  001596  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8778  001598  0E00               	movlw	0
  8779  00159A  0100               	movlb	0	; () banked
  8780  00159C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8781  00159E  0E03               	movlw	3
  8782  0015A0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8783  0015A2  ECD7  F01D         	call	___wmul	;wreg free
  8784  0015A6  0E1D               	movlw	low __npowers_
  8785  0015A8  0100               	movlb	0	; () banked
  8786  0015AA  256E               	addwf	?___wmul& (0+255),w,b
  8787  0015AC  6EF6               	movwf	tblptrl,c
  8788  0015AE  0E7F               	movlw	high __npowers_
  8789  0015B0  0100               	movlb	0	; () banked
  8790  0015B2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8791  0015B4  6EF7               	movwf	tblptrh,c
  8792  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8793  0015B6                     	endif
  8794  0015B6  0009               	tblrd		*+
  8795  0015B8  CFF5 F074          	movff	tablat,___ftmul@f1
  8796  0015BC  0009               	tblrd		*+
  8797  0015BE  CFF5 F075          	movff	tablat,___ftmul@f1+1
  8798  0015C2  000A               	tblrd		*-
  8799  0015C4  CFF5 F076          	movff	tablat,___ftmul@f1+2
  8800  0015C8  0E00               	movlw	0
  8801  0015CA  0100               	movlb	0	; () banked
  8802  0015CC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8803  0015CE  0E03               	movlw	3
  8804  0015D0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8805  0015D2  0E00               	movlw	0
  8806  0015D4  0100               	movlb	0	; () banked
  8807  0015D6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8808  0015D8  0E0A               	movlw	10
  8809  0015DA  6F62               	movwf	___awmod@divisor& (0+255),b
  8810  0015DC  0100               	movlb	0	; () banked
  8811  0015DE  5189               	movf	scale@scl& (0+255),w,b
  8812  0015E0  0100               	movlb	0	; () banked
  8813  0015E2  6F60               	movwf	___awmod@dividend& (0+255),b
  8814  0015E4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8815  0015E6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8816  0015E8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8817  0015EA  ECAD  F01A         	call	___awmod	;wreg free
  8818  0015EE  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8819  0015F2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8820  0015F6  ECD7  F01D         	call	___wmul	;wreg free
  8821  0015FA  0E1D               	movlw	low __npowers_
  8822  0015FC  0100               	movlb	0	; () banked
  8823  0015FE  256E               	addwf	?___wmul& (0+255),w,b
  8824  001600  6EF6               	movwf	tblptrl,c
  8825  001602  0E7F               	movlw	high __npowers_
  8826  001604  0100               	movlb	0	; () banked
  8827  001606  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8828  001608  6EF7               	movwf	tblptrh,c
  8829  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8830  00160A                     	endif
  8831  00160A  0009               	tblrd		*+
  8832  00160C  CFF5 F077          	movff	tablat,___ftmul@f2
  8833  001610  0009               	tblrd		*+
  8834  001612  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8835  001616  000A               	tblrd		*-
  8836  001618  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8837  00161C  ECFF  F014         	call	___ftmul	;wreg free
  8838  001620  D796               	goto	L4
  8839  001622                     l4945:
  8840                           
  8841                           ;doprnt.c: 434: return _npowers_[scl];
  8842  001622  0100               	movlb	0	; () banked
  8843  001624  5189               	movf	scale@scl& (0+255),w,b
  8844  001626  0D03               	mullw	3
  8845  001628  0E1D               	movlw	low __npowers_
  8846  00162A  24F3               	addwf	prodl,w,c
  8847  00162C  6EF6               	movwf	tblptrl,c
  8848  00162E  0E7F               	movlw	high __npowers_
  8849  001630  20F4               	addwfc	prodh,w,c
  8850  001632  6EF7               	movwf	tblptrh,c
  8851  001634                     	if	0	;There are less than 3 active tblptr bytes
  8852  001634                     	endif
  8853  001634  0009               	tblrd		*+
  8854  001636  CFF5 F083          	movff	tablat,?_scale
  8855  00163A  0009               	tblrd		*+
  8856  00163C  CFF5 F084          	movff	tablat,?_scale+1
  8857  001640  000A               	tblrd		*-
  8858  001642  CFF5 F085          	movff	tablat,?_scale+2
  8859                           
  8860                           ; BSR set to: 0
  8861  001646  0012               	return	
  8862  001648                     l4949:
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;doprnt.c: 435: }
  8866                           ;doprnt.c: 436: if(scl>=110)
  8867  001648  0100               	movlb	0	; () banked
  8868  00164A  5189               	movf	scale@scl& (0+255),w,b
  8869  00164C  0A80               	xorlw	128
  8870  00164E  0F12               	addlw	-238
  8871  001650  A0D8               	btfss	status,0,c
  8872  001652  D0AC               	goto	l4957
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8876  001654  0E00               	movlw	0
  8877  001656  0100               	movlb	0	; () banked
  8878  001658  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8879  00165A  0E03               	movlw	3
  8880  00165C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8881  00165E  0E00               	movlw	0
  8882  001660  0100               	movlb	0	; () banked
  8883  001662  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8884  001664  0E0A               	movlw	10
  8885  001666  6F68               	movwf	___awdiv@divisor& (0+255),b
  8886  001668  0E00               	movlw	0
  8887  00166A  0100               	movlb	0	; () banked
  8888  00166C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8889  00166E  0E64               	movlw	100
  8890  001670  6F62               	movwf	___awmod@divisor& (0+255),b
  8891  001672  0100               	movlb	0	; () banked
  8892  001674  5189               	movf	scale@scl& (0+255),w,b
  8893  001676  0100               	movlb	0	; () banked
  8894  001678  6F60               	movwf	___awmod@dividend& (0+255),b
  8895  00167A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8896  00167C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8897  00167E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8898  001680  ECAD  F01A         	call	___awmod	;wreg free
  8899  001684  C060  F066         	movff	?___awmod,___awdiv@dividend
  8900  001688  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8901  00168C  EC92  F019         	call	___awdiv	;wreg free
  8902  001690  0E09               	movlw	9
  8903  001692  0100               	movlb	0	; () banked
  8904  001694  2566               	addwf	?___awdiv& (0+255),w,b
  8905  001696  0100               	movlb	0	; () banked
  8906  001698  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8907  00169A  0E00               	movlw	0
  8908  00169C  0100               	movlb	0	; () banked
  8909  00169E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8910  0016A0  0100               	movlb	0	; () banked
  8911  0016A2  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8912  0016A4  ECD7  F01D         	call	___wmul	;wreg free
  8913  0016A8  0E44               	movlw	low __powers_
  8914  0016AA  0100               	movlb	0	; () banked
  8915  0016AC  256E               	addwf	?___wmul& (0+255),w,b
  8916  0016AE  6EF6               	movwf	tblptrl,c
  8917  0016B0  0E7F               	movlw	high __powers_
  8918  0016B2  0100               	movlb	0	; () banked
  8919  0016B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8920  0016B6  6EF7               	movwf	tblptrh,c
  8921  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8922  0016B8                     	endif
  8923  0016B8  0009               	tblrd		*+
  8924  0016BA  CFF5 F077          	movff	tablat,___ftmul@f2
  8925  0016BE  0009               	tblrd		*+
  8926  0016C0  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8927  0016C4  000A               	tblrd		*-
  8928  0016C6  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8929  0016CA  0E00               	movlw	0
  8930  0016CC  0100               	movlb	0	; () banked
  8931  0016CE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8932  0016D0  0E64               	movlw	100
  8933  0016D2  6F68               	movwf	___awdiv@divisor& (0+255),b
  8934  0016D4  0100               	movlb	0	; () banked
  8935  0016D6  5189               	movf	scale@scl& (0+255),w,b
  8936  0016D8  0100               	movlb	0	; () banked
  8937  0016DA  6F66               	movwf	___awdiv@dividend& (0+255),b
  8938  0016DC  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8939  0016DE  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8940  0016E0  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8941  0016E2  EC92  F019         	call	___awdiv	;wreg free
  8942  0016E6  0E12               	movlw	18
  8943  0016E8  0100               	movlb	0	; () banked
  8944  0016EA  2566               	addwf	?___awdiv& (0+255),w,b
  8945  0016EC  0100               	movlb	0	; () banked
  8946  0016EE  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8947  0016F0  0E00               	movlw	0
  8948  0016F2  0100               	movlb	0	; () banked
  8949  0016F4  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8950  0016F6  0100               	movlb	0	; () banked
  8951  0016F8  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8952  0016FA  0E00               	movlw	0
  8953  0016FC  0100               	movlb	0	; () banked
  8954  0016FE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8955  001700  0E03               	movlw	3
  8956  001702  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8957  001704  ECD7  F01D         	call	___wmul	;wreg free
  8958  001708  0E44               	movlw	low __powers_
  8959  00170A  0100               	movlb	0	; () banked
  8960  00170C  256E               	addwf	?___wmul& (0+255),w,b
  8961  00170E  6EF6               	movwf	tblptrl,c
  8962  001710  0E7F               	movlw	high __powers_
  8963  001712  0100               	movlb	0	; () banked
  8964  001714  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8965  001716  6EF7               	movwf	tblptrh,c
  8966  001718                     	if	0	;There are less than 3 active tblptr bytes
  8967  001718                     	endif
  8968  001718  0009               	tblrd		*+
  8969  00171A  CFF5 F074          	movff	tablat,___ftmul@f1
  8970  00171E  0009               	tblrd		*+
  8971  001720  CFF5 F075          	movff	tablat,___ftmul@f1+1
  8972  001724  000A               	tblrd		*-
  8973  001726  CFF5 F076          	movff	tablat,___ftmul@f1+2
  8974  00172A  ECFF  F014         	call	___ftmul	;wreg free
  8975  00172E  C074  F086         	movff	?___ftmul,_scale$2691
  8976  001732  C075  F087         	movff	?___ftmul+1,_scale$2691+1
  8977  001736  C076  F088         	movff	?___ftmul+2,_scale$2691+2
  8978                           
  8979                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8980  00173A  C086  F074         	movff	_scale$2691,___ftmul@f1
  8981  00173E  C087  F075         	movff	_scale$2691+1,___ftmul@f1+1
  8982  001742  C088  F076         	movff	_scale$2691+2,___ftmul@f1+2
  8983  001746  0E00               	movlw	0
  8984  001748  0100               	movlb	0	; () banked
  8985  00174A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8986  00174C  0E03               	movlw	3
  8987  00174E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8988  001750  0E00               	movlw	0
  8989  001752  0100               	movlb	0	; () banked
  8990  001754  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8991  001756  0E0A               	movlw	10
  8992  001758  6F62               	movwf	___awmod@divisor& (0+255),b
  8993  00175A  0100               	movlb	0	; () banked
  8994  00175C  5189               	movf	scale@scl& (0+255),w,b
  8995  00175E  0100               	movlb	0	; () banked
  8996  001760  6F60               	movwf	___awmod@dividend& (0+255),b
  8997  001762  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8998  001764  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8999  001766  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9000  001768  ECAD  F01A         	call	___awmod	;wreg free
  9001  00176C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9002  001770  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9003  001774  ECD7  F01D         	call	___wmul	;wreg free
  9004  001778  0E44               	movlw	low __powers_
  9005  00177A  0100               	movlb	0	; () banked
  9006  00177C  256E               	addwf	?___wmul& (0+255),w,b
  9007  00177E  6EF6               	movwf	tblptrl,c
  9008  001780  0E7F               	movlw	high __powers_
  9009  001782  0100               	movlb	0	; () banked
  9010  001784  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9011  001786  6EF7               	movwf	tblptrh,c
  9012  001788                     	if	0	;There are less than 3 active tblptr bytes
  9013  001788                     	endif
  9014  001788  0009               	tblrd		*+
  9015  00178A  CFF5 F077          	movff	tablat,___ftmul@f2
  9016  00178E  0009               	tblrd		*+
  9017  001790  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9018  001794  000A               	tblrd		*-
  9019  001796  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9020  00179A  ECFF  F014         	call	___ftmul	;wreg free
  9021  00179E  C074  F083         	movff	?___ftmul,?_scale
  9022  0017A2  C075  F084         	movff	?___ftmul+1,?_scale+1
  9023  0017A6  C076  F085         	movff	?___ftmul+2,?_scale+2
  9024  0017AA  0012               	return	
  9025  0017AC                     l4957:
  9026                           
  9027                           ;doprnt.c: 438: else if(scl > 10)
  9028  0017AC  0100               	movlb	0	; () banked
  9029  0017AE  5189               	movf	scale@scl& (0+255),w,b
  9030  0017B0  0A80               	xorlw	128
  9031  0017B2  0F75               	addlw	-139
  9032  0017B4  A0D8               	btfss	status,0,c
  9033  0017B6  D05D               	goto	l4963
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9037  0017B8  0E00               	movlw	0
  9038  0017BA  0100               	movlb	0	; () banked
  9039  0017BC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9040  0017BE  0E0A               	movlw	10
  9041  0017C0  6F68               	movwf	___awdiv@divisor& (0+255),b
  9042  0017C2  0100               	movlb	0	; () banked
  9043  0017C4  5189               	movf	scale@scl& (0+255),w,b
  9044  0017C6  0100               	movlb	0	; () banked
  9045  0017C8  6F66               	movwf	___awdiv@dividend& (0+255),b
  9046  0017CA  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9047  0017CC  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9048  0017CE  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9049  0017D0  EC92  F019         	call	___awdiv	;wreg free
  9050  0017D4  0E09               	movlw	9
  9051  0017D6  0100               	movlb	0	; () banked
  9052  0017D8  2566               	addwf	?___awdiv& (0+255),w,b
  9053  0017DA  0100               	movlb	0	; () banked
  9054  0017DC  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9055  0017DE  0E00               	movlw	0
  9056  0017E0  0100               	movlb	0	; () banked
  9057  0017E2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9058  0017E4  0100               	movlb	0	; () banked
  9059  0017E6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9060  0017E8  0E00               	movlw	0
  9061  0017EA  0100               	movlb	0	; () banked
  9062  0017EC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9063  0017EE  0E03               	movlw	3
  9064  0017F0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9065  0017F2  ECD7  F01D         	call	___wmul	;wreg free
  9066  0017F6  0E44               	movlw	low __powers_
  9067  0017F8  0100               	movlb	0	; () banked
  9068  0017FA  256E               	addwf	?___wmul& (0+255),w,b
  9069  0017FC  6EF6               	movwf	tblptrl,c
  9070  0017FE  0E7F               	movlw	high __powers_
  9071  001800  0100               	movlb	0	; () banked
  9072  001802  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9073  001804  6EF7               	movwf	tblptrh,c
  9074  001806                     	if	0	;There are less than 3 active tblptr bytes
  9075  001806                     	endif
  9076  001806  0009               	tblrd		*+
  9077  001808  CFF5 F074          	movff	tablat,___ftmul@f1
  9078  00180C  0009               	tblrd		*+
  9079  00180E  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9080  001812  000A               	tblrd		*-
  9081  001814  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9082  001818  0E00               	movlw	0
  9083  00181A  0100               	movlb	0	; () banked
  9084  00181C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9085  00181E  0E03               	movlw	3
  9086  001820  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9087  001822  0E00               	movlw	0
  9088  001824  0100               	movlb	0	; () banked
  9089  001826  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9090  001828  0E0A               	movlw	10
  9091  00182A  6F62               	movwf	___awmod@divisor& (0+255),b
  9092  00182C  0100               	movlb	0	; () banked
  9093  00182E  5189               	movf	scale@scl& (0+255),w,b
  9094  001830  0100               	movlb	0	; () banked
  9095  001832  6F60               	movwf	___awmod@dividend& (0+255),b
  9096  001834  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9097  001836  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9098  001838  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9099  00183A  ECAD  F01A         	call	___awmod	;wreg free
  9100  00183E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9101  001842  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9102  001846  ECD7  F01D         	call	___wmul	;wreg free
  9103  00184A  0E44               	movlw	low __powers_
  9104  00184C  0100               	movlb	0	; () banked
  9105  00184E  256E               	addwf	?___wmul& (0+255),w,b
  9106  001850  6EF6               	movwf	tblptrl,c
  9107  001852  0E7F               	movlw	high __powers_
  9108  001854  0100               	movlb	0	; () banked
  9109  001856  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9110  001858  6EF7               	movwf	tblptrh,c
  9111  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9112  00185A                     	endif
  9113  00185A  0009               	tblrd		*+
  9114  00185C  CFF5 F077          	movff	tablat,___ftmul@f2
  9115  001860  0009               	tblrd		*+
  9116  001862  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9117  001866  000A               	tblrd		*-
  9118  001868  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9119  00186C  ECFF  F014         	call	___ftmul	;wreg free
  9120  001870  D796               	goto	L5
  9121  001872                     l4963:
  9122                           
  9123                           ;doprnt.c: 440: return _powers_[scl];
  9124  001872  0100               	movlb	0	; () banked
  9125  001874  5189               	movf	scale@scl& (0+255),w,b
  9126  001876  0D03               	mullw	3
  9127  001878  0E44               	movlw	low __powers_
  9128  00187A  24F3               	addwf	prodl,w,c
  9129  00187C  6EF6               	movwf	tblptrl,c
  9130  00187E  0E7F               	movlw	high __powers_
  9131  001880  20F4               	addwfc	prodh,w,c
  9132  001882  6EF7               	movwf	tblptrh,c
  9133  001884                     	if	0	;There are less than 3 active tblptr bytes
  9134  001884                     	endif
  9135  001884  0009               	tblrd		*+
  9136  001886  CFF5 F083          	movff	tablat,?_scale
  9137  00188A  0009               	tblrd		*+
  9138  00188C  CFF5 F084          	movff	tablat,?_scale+1
  9139  001890  000A               	tblrd		*-
  9140  001892  CFF5 F085          	movff	tablat,?_scale+2
  9141  001896  0012               	return	
  9142  001898                     __end_of_scale:
  9143                           	opt stack 0
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           indf0	equ	0xFEF
  9151                           postinc0	equ	0xFEE
  9152                           fsr0h	equ	0xFEA
  9153                           fsr0l	equ	0xFE9
  9154                           wreg	equ	0xFE8
  9155                           indf1	equ	0xFE7
  9156                           postdec1	equ	0xFE5
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function _isdigit *****************
  9167 ;; Defined at:
  9168 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  c               1    wreg     unsigned char 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  c               1    2[BANK0 ] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;		None               void
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9182 ;;      Params:         0       0       0       0       0       0       0
  9183 ;;      Locals:         0       2       0       0       0       0       0
  9184 ;;      Temps:          0       1       0       0       0       0       0
  9185 ;;      Totals:         0       3       0       0       0       0       0
  9186 ;;Total ram usage:        3 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    3
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_sprintf
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text33
  9197  003D0E                     __ptext33:
  9198                           	opt stack 0
  9199  003D0E                     _isdigit:
  9200                           	opt stack 24
  9201                           
  9202                           ;incstack = 0
  9203                           ;isdigit@c stored from wreg
  9204  003D0E  0100               	movlb	0	; () banked
  9205  003D10  6F62               	movwf	isdigit@c& (0+255),b
  9206  003D12  0E00               	movlw	0
  9207  003D14  0100               	movlb	0	; () banked
  9208  003D16  6F61               	movwf	_isdigit$2319& (0+255),b
  9209                           
  9210                           ; BSR set to: 0
  9211  003D18  0E3A               	movlw	58
  9212  003D1A  0100               	movlb	0	; () banked
  9213  003D1C  6162               	cpfslt	isdigit@c& (0+255),b
  9214  003D1E  D007               	goto	l4975
  9215                           
  9216                           ; BSR set to: 0
  9217  003D20  0E2F               	movlw	47
  9218  003D22  0100               	movlb	0	; () banked
  9219  003D24  6562               	cpfsgt	isdigit@c& (0+255),b
  9220  003D26  D003               	goto	l4975
  9221                           
  9222                           ; BSR set to: 0
  9223  003D28  0E01               	movlw	1
  9224  003D2A  0100               	movlb	0	; () banked
  9225  003D2C  6F61               	movwf	_isdigit$2319& (0+255),b
  9226  003D2E                     l4975:
  9227                           
  9228                           ; BSR set to: 0
  9229  003D2E  C061  F060         	movff	_isdigit$2319,??_isdigit
  9230  003D32  0100               	movlb	0	; () banked
  9231  003D34  3160               	rrcf	??_isdigit& (0+255),w,b
  9232  003D36  0012               	return	
  9233  003D38                     __end_of_isdigit:
  9234                           	opt stack 0
  9235                           tblptru	equ	0xFF8
  9236                           tblptrh	equ	0xFF7
  9237                           tblptrl	equ	0xFF6
  9238                           tablat	equ	0xFF5
  9239                           prodh	equ	0xFF4
  9240                           prodl	equ	0xFF3
  9241                           indf0	equ	0xFEF
  9242                           postinc0	equ	0xFEE
  9243                           fsr0h	equ	0xFEA
  9244                           fsr0l	equ	0xFE9
  9245                           wreg	equ	0xFE8
  9246                           indf1	equ	0xFE7
  9247                           postdec1	equ	0xFE5
  9248                           fsr1h	equ	0xFE2
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           postinc2	equ	0xFDE
  9252                           postdec2	equ	0xFDD
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8
  9256                           
  9257 ;; *************** function _fround *****************
  9258 ;; Defined at:
  9259 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  prec            1    wreg     unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  prec            1   44[BANK0 ] unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  3   35[BANK0 ] unsigned char 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9273 ;;      Params:         0       3       0       0       0       0       0
  9274 ;;      Locals:         0       7       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0
  9276 ;;      Totals:         0      10       0       0       0       0       0
  9277 ;;Total ram usage:       10 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    5
  9280 ;; This function calls:
  9281 ;;		___awdiv
  9282 ;;		___awmod
  9283 ;;		___ftmul
  9284 ;;		___wmul
  9285 ;; This function is called by:
  9286 ;;		_sprintf
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text34
  9291  001C8C                     __ptext34:
  9292                           	opt stack 0
  9293  001C8C                     _fround:
  9294                           	opt stack 22
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;incstack = 0
  9298                           ;fround@prec stored from wreg
  9299  001C8C  0100               	movlb	0	; () banked
  9300  001C8E  6F8C               	movwf	fround@prec& (0+255),b
  9301                           
  9302                           ;doprnt.c: 413: if(prec>=110)
  9303  001C90  0E6D               	movlw	109
  9304  001C92  0100               	movlb	0	; () banked
  9305  001C94  658C               	cpfsgt	fround@prec& (0+255),b
  9306  001C96  D0BA               	goto	l4917
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9310  001C98  0E00               	movlw	0
  9311  001C9A  0100               	movlb	0	; () banked
  9312  001C9C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9313  001C9E  0E03               	movlw	3
  9314  001CA0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9315  001CA2  0E00               	movlw	0
  9316  001CA4  0100               	movlb	0	; () banked
  9317  001CA6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9318  001CA8  0E0A               	movlw	10
  9319  001CAA  6F68               	movwf	___awdiv@divisor& (0+255),b
  9320  001CAC  0E00               	movlw	0
  9321  001CAE  0100               	movlb	0	; () banked
  9322  001CB0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9323  001CB2  0E64               	movlw	100
  9324  001CB4  6F62               	movwf	___awmod@divisor& (0+255),b
  9325  001CB6  C08C  F060         	movff	fround@prec,___awmod@dividend
  9326  001CBA  0100               	movlb	0	; () banked
  9327  001CBC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9328  001CBE  ECAD  F01A         	call	___awmod	;wreg free
  9329  001CC2  C060  F066         	movff	?___awmod,___awdiv@dividend
  9330  001CC6  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  9331  001CCA  EC92  F019         	call	___awdiv	;wreg free
  9332  001CCE  0E09               	movlw	9
  9333  001CD0  0100               	movlb	0	; () banked
  9334  001CD2  2566               	addwf	?___awdiv& (0+255),w,b
  9335  001CD4  0100               	movlb	0	; () banked
  9336  001CD6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9337  001CD8  0E00               	movlw	0
  9338  001CDA  0100               	movlb	0	; () banked
  9339  001CDC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9340  001CDE  0100               	movlb	0	; () banked
  9341  001CE0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9342  001CE2  ECD7  F01D         	call	___wmul	;wreg free
  9343  001CE6  0E1D               	movlw	low __npowers_
  9344  001CE8  0100               	movlb	0	; () banked
  9345  001CEA  256E               	addwf	?___wmul& (0+255),w,b
  9346  001CEC  6EF6               	movwf	tblptrl,c
  9347  001CEE  0E7F               	movlw	high __npowers_
  9348  001CF0  0100               	movlb	0	; () banked
  9349  001CF2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9350  001CF4  6EF7               	movwf	tblptrh,c
  9351  001CF6                     	if	0	;There are less than 3 active tblptr bytes
  9352  001CF6                     	endif
  9353  001CF6  0009               	tblrd		*+
  9354  001CF8  CFF5 F077          	movff	tablat,___ftmul@f2
  9355  001CFC  0009               	tblrd		*+
  9356  001CFE  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9357  001D02  000A               	tblrd		*-
  9358  001D04  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9359  001D08  0E00               	movlw	0
  9360  001D0A  0100               	movlb	0	; () banked
  9361  001D0C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9362  001D0E  0E64               	movlw	100
  9363  001D10  6F68               	movwf	___awdiv@divisor& (0+255),b
  9364  001D12  C08C  F066         	movff	fround@prec,___awdiv@dividend
  9365  001D16  0100               	movlb	0	; () banked
  9366  001D18  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9367  001D1A  EC92  F019         	call	___awdiv	;wreg free
  9368  001D1E  0E12               	movlw	18
  9369  001D20  0100               	movlb	0	; () banked
  9370  001D22  2566               	addwf	?___awdiv& (0+255),w,b
  9371  001D24  0100               	movlb	0	; () banked
  9372  001D26  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9373  001D28  0E00               	movlw	0
  9374  001D2A  0100               	movlb	0	; () banked
  9375  001D2C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9376  001D2E  0100               	movlb	0	; () banked
  9377  001D30  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9378  001D32  0E00               	movlw	0
  9379  001D34  0100               	movlb	0	; () banked
  9380  001D36  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9381  001D38  0E03               	movlw	3
  9382  001D3A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9383  001D3C  ECD7  F01D         	call	___wmul	;wreg free
  9384  001D40  0E1D               	movlw	low __npowers_
  9385  001D42  0100               	movlb	0	; () banked
  9386  001D44  256E               	addwf	?___wmul& (0+255),w,b
  9387  001D46  6EF6               	movwf	tblptrl,c
  9388  001D48  0E7F               	movlw	high __npowers_
  9389  001D4A  0100               	movlb	0	; () banked
  9390  001D4C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9391  001D4E  6EF7               	movwf	tblptrh,c
  9392  001D50                     	if	0	;There are less than 3 active tblptr bytes
  9393  001D50                     	endif
  9394  001D50  0009               	tblrd		*+
  9395  001D52  CFF5 F074          	movff	tablat,___ftmul@f1
  9396  001D56  0009               	tblrd		*+
  9397  001D58  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9398  001D5C  000A               	tblrd		*-
  9399  001D5E  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9400  001D62  ECFF  F014         	call	___ftmul	;wreg free
  9401  001D66  C074  F089         	movff	?___ftmul,_fround$2689
  9402  001D6A  C075  F08A         	movff	?___ftmul+1,_fround$2689+1
  9403  001D6E  C076  F08B         	movff	?___ftmul+2,_fround$2689+2
  9404                           
  9405                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9406  001D72  0E00               	movlw	0
  9407  001D74  0100               	movlb	0	; () banked
  9408  001D76  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9409  001D78  0E03               	movlw	3
  9410  001D7A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9411  001D7C  0E00               	movlw	0
  9412  001D7E  0100               	movlb	0	; () banked
  9413  001D80  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9414  001D82  0E0A               	movlw	10
  9415  001D84  6F62               	movwf	___awmod@divisor& (0+255),b
  9416  001D86  C08C  F060         	movff	fround@prec,___awmod@dividend
  9417  001D8A  0100               	movlb	0	; () banked
  9418  001D8C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9419  001D8E  ECAD  F01A         	call	___awmod	;wreg free
  9420  001D92  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9421  001D96  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9422  001D9A  ECD7  F01D         	call	___wmul	;wreg free
  9423  001D9E  0E1D               	movlw	low __npowers_
  9424  001DA0  0100               	movlb	0	; () banked
  9425  001DA2  256E               	addwf	?___wmul& (0+255),w,b
  9426  001DA4  6EF6               	movwf	tblptrl,c
  9427  001DA6  0E7F               	movlw	high __npowers_
  9428  001DA8  0100               	movlb	0	; () banked
  9429  001DAA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9430  001DAC  6EF7               	movwf	tblptrh,c
  9431  001DAE                     	if	0	;There are less than 3 active tblptr bytes
  9432  001DAE                     	endif
  9433  001DAE  0009               	tblrd		*+
  9434  001DB0  CFF5 F077          	movff	tablat,___ftmul@f2
  9435  001DB4  0009               	tblrd		*+
  9436  001DB6  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9437  001DBA  000A               	tblrd		*-
  9438  001DBC  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9439  001DC0  C089  F074         	movff	_fround$2689,___ftmul@f1
  9440  001DC4  C08A  F075         	movff	_fround$2689+1,___ftmul@f1+1
  9441  001DC8  C08B  F076         	movff	_fround$2689+2,___ftmul@f1+2
  9442  001DCC  ECFF  F014         	call	___ftmul	;wreg free
  9443  001DD0  C074  F086         	movff	?___ftmul,_fround$2690
  9444  001DD4  C075  F087         	movff	?___ftmul+1,_fround$2690+1
  9445  001DD8  C076  F088         	movff	?___ftmul+2,_fround$2690+2
  9446                           
  9447                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9448  001DDC  C086  F074         	movff	_fround$2690,___ftmul@f1
  9449  001DE0  C087  F075         	movff	_fround$2690+1,___ftmul@f1+1
  9450  001DE4  C088  F076         	movff	_fround$2690+2,___ftmul@f1+2
  9451  001DE8  0E00               	movlw	0
  9452  001DEA  0100               	movlb	0	; () banked
  9453  001DEC  6F77               	movwf	___ftmul@f2& (0+255),b
  9454  001DEE  0E00               	movlw	0
  9455  001DF0  0100               	movlb	0	; () banked
  9456  001DF2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9457  001DF4  0E3F               	movlw	63
  9458  001DF6  0100               	movlb	0	; () banked
  9459  001DF8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9460  001DFA  ECFF  F014         	call	___ftmul	;wreg free
  9461  001DFE  C074  F083         	movff	?___ftmul,?_fround
  9462  001E02  C075  F084         	movff	?___ftmul+1,?_fround+1
  9463  001E06  C076  F085         	movff	?___ftmul+2,?_fround+2
  9464  001E0A  0012               	return	
  9465  001E0C                     l4917:
  9466                           
  9467                           ;doprnt.c: 415: else if(prec > 10)
  9468  001E0C  0E0A               	movlw	10
  9469  001E0E  0100               	movlb	0	; () banked
  9470  001E10  658C               	cpfsgt	fround@prec& (0+255),b
  9471  001E12  D06E               	goto	l4925
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9475  001E14  0E00               	movlw	0
  9476  001E16  0100               	movlb	0	; () banked
  9477  001E18  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9478  001E1A  0E03               	movlw	3
  9479  001E1C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9480  001E1E  0E00               	movlw	0
  9481  001E20  0100               	movlb	0	; () banked
  9482  001E22  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9483  001E24  0E0A               	movlw	10
  9484  001E26  6F62               	movwf	___awmod@divisor& (0+255),b
  9485  001E28  C08C  F060         	movff	fround@prec,___awmod@dividend
  9486  001E2C  0100               	movlb	0	; () banked
  9487  001E2E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9488  001E30  ECAD  F01A         	call	___awmod	;wreg free
  9489  001E34  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9490  001E38  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9491  001E3C  ECD7  F01D         	call	___wmul	;wreg free
  9492  001E40  0E1D               	movlw	low __npowers_
  9493  001E42  0100               	movlb	0	; () banked
  9494  001E44  256E               	addwf	?___wmul& (0+255),w,b
  9495  001E46  6EF6               	movwf	tblptrl,c
  9496  001E48  0E7F               	movlw	high __npowers_
  9497  001E4A  0100               	movlb	0	; () banked
  9498  001E4C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9499  001E4E  6EF7               	movwf	tblptrh,c
  9500  001E50                     	if	0	;There are less than 3 active tblptr bytes
  9501  001E50                     	endif
  9502  001E50  0009               	tblrd		*+
  9503  001E52  CFF5 F077          	movff	tablat,___ftmul@f2
  9504  001E56  0009               	tblrd		*+
  9505  001E58  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9506  001E5C  000A               	tblrd		*-
  9507  001E5E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9508  001E62  0E00               	movlw	0
  9509  001E64  0100               	movlb	0	; () banked
  9510  001E66  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9511  001E68  0E0A               	movlw	10
  9512  001E6A  6F68               	movwf	___awdiv@divisor& (0+255),b
  9513  001E6C  C08C  F066         	movff	fround@prec,___awdiv@dividend
  9514  001E70  0100               	movlb	0	; () banked
  9515  001E72  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9516  001E74  EC92  F019         	call	___awdiv	;wreg free
  9517  001E78  0E09               	movlw	9
  9518  001E7A  0100               	movlb	0	; () banked
  9519  001E7C  2566               	addwf	?___awdiv& (0+255),w,b
  9520  001E7E  0100               	movlb	0	; () banked
  9521  001E80  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9522  001E82  0E00               	movlw	0
  9523  001E84  0100               	movlb	0	; () banked
  9524  001E86  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9525  001E88  0100               	movlb	0	; () banked
  9526  001E8A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9527  001E8C  0E00               	movlw	0
  9528  001E8E  0100               	movlb	0	; () banked
  9529  001E90  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9530  001E92  0E03               	movlw	3
  9531  001E94  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9532  001E96  ECD7  F01D         	call	___wmul	;wreg free
  9533  001E9A  0E1D               	movlw	low __npowers_
  9534  001E9C  0100               	movlb	0	; () banked
  9535  001E9E  256E               	addwf	?___wmul& (0+255),w,b
  9536  001EA0  6EF6               	movwf	tblptrl,c
  9537  001EA2  0E7F               	movlw	high __npowers_
  9538  001EA4  0100               	movlb	0	; () banked
  9539  001EA6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9540  001EA8  6EF7               	movwf	tblptrh,c
  9541  001EAA                     	if	0	;There are less than 3 active tblptr bytes
  9542  001EAA                     	endif
  9543  001EAA  0009               	tblrd		*+
  9544  001EAC  CFF5 F074          	movff	tablat,___ftmul@f1
  9545  001EB0  0009               	tblrd		*+
  9546  001EB2  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9547  001EB6  000A               	tblrd		*-
  9548  001EB8  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9549  001EBC  ECFF  F014         	call	___ftmul	;wreg free
  9550  001EC0  C074  F089         	movff	?___ftmul,_fround$2689
  9551  001EC4  C075  F08A         	movff	?___ftmul+1,_fround$2689+1
  9552  001EC8  C076  F08B         	movff	?___ftmul+2,_fround$2689+2
  9553                           
  9554                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9555  001ECC  C089  F074         	movff	_fround$2689,___ftmul@f1
  9556  001ED0  C08A  F075         	movff	_fround$2689+1,___ftmul@f1+1
  9557  001ED4  C08B  F076         	movff	_fround$2689+2,___ftmul@f1+2
  9558  001ED8  0E00               	movlw	0
  9559  001EDA  0100               	movlb	0	; () banked
  9560  001EDC  6F77               	movwf	___ftmul@f2& (0+255),b
  9561  001EDE  0E00               	movlw	0
  9562  001EE0  0100               	movlb	0	; () banked
  9563  001EE2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9564  001EE4  0E3F               	movlw	63
  9565  001EE6  0100               	movlb	0	; () banked
  9566  001EE8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9567  001EEA  ECFF  F014         	call	___ftmul	;wreg free
  9568  001EEE  D787               	goto	L6
  9569  001EF0                     l4925:
  9570                           
  9571                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9572  001EF0  0100               	movlb	0	; () banked
  9573  001EF2  518C               	movf	fround@prec& (0+255),w,b
  9574  001EF4  0D03               	mullw	3
  9575  001EF6  0E1D               	movlw	low __npowers_
  9576  001EF8  24F3               	addwf	prodl,w,c
  9577  001EFA  6EF6               	movwf	tblptrl,c
  9578  001EFC  0E7F               	movlw	high __npowers_
  9579  001EFE  20F4               	addwfc	prodh,w,c
  9580  001F00  6EF7               	movwf	tblptrh,c
  9581  001F02                     	if	0	;There are less than 3 active tblptr bytes
  9582  001F02                     	endif
  9583  001F02  0009               	tblrd		*+
  9584  001F04  CFF5 F074          	movff	tablat,___ftmul@f1
  9585  001F08  0009               	tblrd		*+
  9586  001F0A  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9587  001F0E  000A               	tblrd		*-
  9588  001F10  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9589  001F14  0E00               	movlw	0
  9590  001F16  0100               	movlb	0	; () banked
  9591  001F18  6F77               	movwf	___ftmul@f2& (0+255),b
  9592  001F1A  0E00               	movlw	0
  9593  001F1C  0100               	movlb	0	; () banked
  9594  001F1E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9595  001F20  0E3F               	movlw	63
  9596  001F22  0100               	movlb	0	; () banked
  9597  001F24  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9598  001F26  ECFF  F014         	call	___ftmul	;wreg free
  9599  001F2A  C074  F083         	movff	?___ftmul,?_fround
  9600  001F2E  C075  F084         	movff	?___ftmul+1,?_fround+1
  9601  001F32  C076  F085         	movff	?___ftmul+2,?_fround+2
  9602  001F36  0012               	return	
  9603  001F38                     __end_of_fround:
  9604                           	opt stack 0
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           indf0	equ	0xFEF
  9612                           postinc0	equ	0xFEE
  9613                           fsr0h	equ	0xFEA
  9614                           fsr0l	equ	0xFE9
  9615                           wreg	equ	0xFE8
  9616                           indf1	equ	0xFE7
  9617                           postdec1	equ	0xFE5
  9618                           fsr1h	equ	0xFE2
  9619                           fsr1l	equ	0xFE1
  9620                           indf2	equ	0xFDF
  9621                           postinc2	equ	0xFDE
  9622                           postdec2	equ	0xFDD
  9623                           fsr2h	equ	0xFDA
  9624                           fsr2l	equ	0xFD9
  9625                           status	equ	0xFD8
  9626                           
  9627 ;; *************** function ___wmul *****************
  9628 ;; Defined at:
  9629 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  multiplier      2   14[BANK0 ] unsigned int 
  9632 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  product         2   18[BANK0 ] unsigned int 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  2   14[BANK0 ] unsigned int 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0, prodl, prodh
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9644 ;;      Params:         0       4       0       0       0       0       0
  9645 ;;      Locals:         0       2       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0
  9647 ;;      Totals:         0       6       0       0       0       0       0
  9648 ;;Total ram usage:        6 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    3
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_fround
  9655 ;;		_scale
  9656 ;;		_sprintf
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text35
  9661  003BAE                     __ptext35:
  9662                           	opt stack 0
  9663  003BAE                     ___wmul:
  9664                           	opt stack 23
  9665                           
  9666                           ;incstack = 0
  9667  003BAE  0100               	movlb	0	; () banked
  9668  003BB0  516E               	movf	___wmul@multiplier& (0+255),w,b
  9669  003BB2  0100               	movlb	0	; () banked
  9670  003BB4  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9671  003BB6  CFF3 F072          	movff	prodl,___wmul@product
  9672  003BBA  CFF4 F073          	movff	prodh,___wmul@product+1
  9673  003BBE  0100               	movlb	0	; () banked
  9674  003BC0  516E               	movf	___wmul@multiplier& (0+255),w,b
  9675  003BC2  0100               	movlb	0	; () banked
  9676  003BC4  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9677  003BC6  50F3               	movf	prodl,w,c
  9678  003BC8  0100               	movlb	0	; () banked
  9679  003BCA  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9680  003BCC  0100               	movlb	0	; () banked
  9681  003BCE  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9682  003BD0  0100               	movlb	0	; () banked
  9683  003BD2  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9684  003BD4  50F3               	movf	prodl,w,c
  9685  003BD6  0100               	movlb	0	; () banked
  9686  003BD8  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 0
  9689  003BDA  C072  F06E         	movff	___wmul@product,?___wmul
  9690  003BDE  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  9691  003BE2  0012               	return	
  9692  003BE4                     __end_of___wmul:
  9693                           	opt stack 0
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           indf0	equ	0xFEF
  9701                           postinc0	equ	0xFEE
  9702                           fsr0h	equ	0xFEA
  9703                           fsr0l	equ	0xFE9
  9704                           wreg	equ	0xFE8
  9705                           indf1	equ	0xFE7
  9706                           postdec1	equ	0xFE5
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           indf2	equ	0xFDF
  9710                           postinc2	equ	0xFDE
  9711                           postdec2	equ	0xFDD
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function ___ftmul *****************
  9717 ;; Defined at:
  9718 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  f1              3   20[BANK0 ] float 
  9721 ;;  f2              3   23[BANK0 ] float 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  9724 ;;  sign            1   34[BANK0 ] unsigned char 
  9725 ;;  cntr            1   33[BANK0 ] unsigned char 
  9726 ;;  exp             1   29[BANK0 ] unsigned char 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  3   20[BANK0 ] float 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9736 ;;      Params:         0       6       0       0       0       0       0
  9737 ;;      Locals:         0       6       0       0       0       0       0
  9738 ;;      Temps:          0       3       0       0       0       0       0
  9739 ;;      Totals:         0      15       0       0       0       0       0
  9740 ;;Total ram usage:       15 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    4
  9743 ;; This function calls:
  9744 ;;		___ftpack
  9745 ;; This function is called by:
  9746 ;;		_util_getBatteryVoltage
  9747 ;;		_util_getSolarCurrent
  9748 ;;		_util_getBatteryCurrent
  9749 ;;		_util_getTemperature
  9750 ;;		_fround
  9751 ;;		_scale
  9752 ;;		_sprintf
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text36
  9757  0029FE                     __ptext36:
  9758                           	opt stack 0
  9759  0029FE                     ___ftmul:
  9760                           	opt stack 24
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;incstack = 0
  9764  0029FE  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  9765  002A02  0100               	movlb	0	; () banked
  9766  002A04  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  9767  002A06  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  9768  002A08  0100               	movlb	0	; () banked
  9769  002A0A  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9770  002A0C  0100               	movlb	0	; () banked
  9771  002A0E  377A               	rlcf	??___ftmul& (0+255),f,b
  9772  002A10  E301               	bnc	u4661
  9773  002A12  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  9774  002A14                     u4661:
  9775  002A14  0100               	movlb	0	; () banked
  9776  002A16  517A               	movf	??___ftmul& (0+255),w,b
  9777  002A18  0100               	movlb	0	; () banked
  9778  002A1A  6F7D               	movwf	___ftmul@exp& (0+255),b
  9779  002A1C  0100               	movlb	0	; () banked
  9780  002A1E  517D               	movf	___ftmul@exp& (0+255),w,b
  9781  002A20  A4D8               	btfss	status,2,c
  9782  002A22  D00A               	goto	l4715
  9783                           
  9784                           ; BSR set to: 0
  9785  002A24  0E00               	movlw	0
  9786  002A26  0100               	movlb	0	; () banked
  9787  002A28  6F74               	movwf	?___ftmul& (0+255),b
  9788  002A2A  0E00               	movlw	0
  9789  002A2C  0100               	movlb	0	; () banked
  9790  002A2E  6F75               	movwf	(?___ftmul+1)& (0+255),b
  9791  002A30  0E00               	movlw	0
  9792  002A32  0100               	movlb	0	; () banked
  9793  002A34  6F76               	movwf	(?___ftmul+2)& (0+255),b
  9794                           
  9795                           ; BSR set to: 0
  9796  002A36  0012               	return	
  9797  002A38                     l4715:
  9798                           
  9799                           ; BSR set to: 0
  9800  002A38  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  9801  002A3C  0100               	movlb	0	; () banked
  9802  002A3E  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  9803  002A40  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  9804  002A42  0100               	movlb	0	; () banked
  9805  002A44  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9806  002A46  0100               	movlb	0	; () banked
  9807  002A48  377A               	rlcf	??___ftmul& (0+255),f,b
  9808  002A4A  E301               	bnc	u4681
  9809  002A4C  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  9810  002A4E                     u4681:
  9811  002A4E  0100               	movlb	0	; () banked
  9812  002A50  517A               	movf	??___ftmul& (0+255),w,b
  9813  002A52  0100               	movlb	0	; () banked
  9814  002A54  6F82               	movwf	___ftmul@sign& (0+255),b
  9815  002A56  0100               	movlb	0	; () banked
  9816  002A58  5182               	movf	___ftmul@sign& (0+255),w,b
  9817  002A5A  A4D8               	btfss	status,2,c
  9818  002A5C  D00A               	goto	l4721
  9819                           
  9820                           ; BSR set to: 0
  9821  002A5E  0E00               	movlw	0
  9822  002A60  0100               	movlb	0	; () banked
  9823  002A62  6F74               	movwf	?___ftmul& (0+255),b
  9824  002A64  0E00               	movlw	0
  9825  002A66  0100               	movlb	0	; () banked
  9826  002A68  6F75               	movwf	(?___ftmul+1)& (0+255),b
  9827  002A6A  0E00               	movlw	0
  9828  002A6C  0100               	movlb	0	; () banked
  9829  002A6E  6F76               	movwf	(?___ftmul+2)& (0+255),b
  9830                           
  9831                           ; BSR set to: 0
  9832  002A70  0012               	return	
  9833  002A72                     l4721:
  9834                           
  9835                           ; BSR set to: 0
  9836  002A72  0100               	movlb	0	; () banked
  9837  002A74  5182               	movf	___ftmul@sign& (0+255),w,b
  9838  002A76  0F7B               	addlw	123
  9839  002A78  0100               	movlb	0	; () banked
  9840  002A7A  277D               	addwf	___ftmul@exp& (0+255),f,b
  9841                           
  9842                           ; BSR set to: 0
  9843  002A7C  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  9844  002A80  0100               	movlb	0	; () banked
  9845  002A82  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  9846  002A84  0100               	movlb	0	; () banked
  9847  002A86  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  9848  002A88  0E80               	movlw	128
  9849  002A8A  0100               	movlb	0	; () banked
  9850  002A8C  1782               	andwf	___ftmul@sign& (0+255),f,b
  9851                           
  9852                           ; BSR set to: 0
  9853  002A8E  0100               	movlb	0	; () banked
  9854  002A90  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9855                           
  9856                           ; BSR set to: 0
  9857  002A92  0100               	movlb	0	; () banked
  9858  002A94  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9859                           
  9860                           ; BSR set to: 0
  9861  002A96  0EFF               	movlw	255
  9862  002A98  0100               	movlb	0	; () banked
  9863  002A9A  1777               	andwf	___ftmul@f2& (0+255),f,b
  9864  002A9C  0EFF               	movlw	255
  9865  002A9E  0100               	movlb	0	; () banked
  9866  002AA0  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9867  002AA2  0E00               	movlw	0
  9868  002AA4  0100               	movlb	0	; () banked
  9869  002AA6  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9870                           
  9871                           ; BSR set to: 0
  9872  002AA8  0E00               	movlw	0
  9873  002AAA  0100               	movlb	0	; () banked
  9874  002AAC  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  9875  002AAE  0E00               	movlw	0
  9876  002AB0  0100               	movlb	0	; () banked
  9877  002AB2  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9878  002AB4  0E00               	movlw	0
  9879  002AB6  0100               	movlb	0	; () banked
  9880  002AB8  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9881                           
  9882                           ; BSR set to: 0
  9883  002ABA  0E07               	movlw	7
  9884  002ABC  0100               	movlb	0	; () banked
  9885  002ABE  6F81               	movwf	___ftmul@cntr& (0+255),b
  9886  002AC0                     l4735:
  9887                           
  9888                           ; BSR set to: 0
  9889  002AC0  0100               	movlb	0	; () banked
  9890  002AC2  A174               	btfss	___ftmul@f1& (0+255),0,b
  9891  002AC4  D00C               	goto	l4739
  9892                           
  9893                           ; BSR set to: 0
  9894  002AC6  0100               	movlb	0	; () banked
  9895  002AC8  5177               	movf	___ftmul@f2& (0+255),w,b
  9896  002ACA  0100               	movlb	0	; () banked
  9897  002ACC  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9898  002ACE  0100               	movlb	0	; () banked
  9899  002AD0  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  9900  002AD2  0100               	movlb	0	; () banked
  9901  002AD4  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9902  002AD6  0100               	movlb	0	; () banked
  9903  002AD8  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  9904  002ADA  0100               	movlb	0	; () banked
  9905  002ADC  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9906  002ADE                     l4739:
  9907                           
  9908                           ; BSR set to: 0
  9909  002ADE  0100               	movlb	0	; () banked
  9910  002AE0  90D8               	bcf	status,0,c
  9911  002AE2  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9912  002AE4  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9913  002AE6  3374               	rrcf	___ftmul@f1& (0+255),f,b
  9914  002AE8  0100               	movlb	0	; () banked
  9915  002AEA  90D8               	bcf	status,0,c
  9916  002AEC  3777               	rlcf	___ftmul@f2& (0+255),f,b
  9917  002AEE  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9918  002AF0  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9919                           
  9920                           ; BSR set to: 0
  9921  002AF2  0100               	movlb	0	; () banked
  9922  002AF4  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  9923  002AF6  D7E4               	goto	l4735
  9924                           
  9925                           ; BSR set to: 0
  9926                           
  9927                           ; BSR set to: 0
  9928  002AF8  0E09               	movlw	9
  9929  002AFA  0100               	movlb	0	; () banked
  9930  002AFC  6F81               	movwf	___ftmul@cntr& (0+255),b
  9931  002AFE                     l4745:
  9932                           
  9933                           ; BSR set to: 0
  9934  002AFE  0100               	movlb	0	; () banked
  9935  002B00  A174               	btfss	___ftmul@f1& (0+255),0,b
  9936  002B02  D00C               	goto	l4749
  9937                           
  9938                           ; BSR set to: 0
  9939  002B04  0100               	movlb	0	; () banked
  9940  002B06  5177               	movf	___ftmul@f2& (0+255),w,b
  9941  002B08  0100               	movlb	0	; () banked
  9942  002B0A  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9943  002B0C  0100               	movlb	0	; () banked
  9944  002B0E  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  9945  002B10  0100               	movlb	0	; () banked
  9946  002B12  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9947  002B14  0100               	movlb	0	; () banked
  9948  002B16  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  9949  002B18  0100               	movlb	0	; () banked
  9950  002B1A  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9951  002B1C                     l4749:
  9952                           
  9953                           ; BSR set to: 0
  9954  002B1C  0100               	movlb	0	; () banked
  9955  002B1E  90D8               	bcf	status,0,c
  9956  002B20  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9957  002B22  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9958  002B24  3374               	rrcf	___ftmul@f1& (0+255),f,b
  9959  002B26  0100               	movlb	0	; () banked
  9960  002B28  90D8               	bcf	status,0,c
  9961  002B2A  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9962  002B2C  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9963  002B2E  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9964                           
  9965                           ; BSR set to: 0
  9966  002B30  0100               	movlb	0	; () banked
  9967  002B32  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  9968  002B34  D7E4               	goto	l4745
  9969                           
  9970                           ; BSR set to: 0
  9971                           
  9972                           ; BSR set to: 0
  9973  002B36  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  9974  002B3A  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9975  002B3E  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9976  002B42  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  9977  002B46  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  9978  002B4A  EC7F  F017         	call	___ftpack	;wreg free
  9979  002B4E  C060  F074         	movff	?___ftpack,?___ftmul
  9980  002B52  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  9981  002B56  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  9982  002B5A  0012               	return	
  9983  002B5C                     __end_of___ftmul:
  9984                           	opt stack 0
  9985                           tblptru	equ	0xFF8
  9986                           tblptrh	equ	0xFF7
  9987                           tblptrl	equ	0xFF6
  9988                           tablat	equ	0xFF5
  9989                           prodh	equ	0xFF4
  9990                           prodl	equ	0xFF3
  9991                           indf0	equ	0xFEF
  9992                           postinc0	equ	0xFEE
  9993                           fsr0h	equ	0xFEA
  9994                           fsr0l	equ	0xFE9
  9995                           wreg	equ	0xFE8
  9996                           indf1	equ	0xFE7
  9997                           postdec1	equ	0xFE5
  9998                           fsr1h	equ	0xFE2
  9999                           fsr1l	equ	0xFE1
 10000                           indf2	equ	0xFDF
 10001                           postinc2	equ	0xFDE
 10002                           postdec2	equ	0xFDD
 10003                           fsr2h	equ	0xFDA
 10004                           fsr2l	equ	0xFD9
 10005                           status	equ	0xFD8
 10006                           
 10007 ;; *************** function ___awmod *****************
 10008 ;; Defined at:
 10009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  dividend        2    0[BANK0 ] int 
 10012 ;;  divisor         2    2[BANK0 ] int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  sign            1    5[BANK0 ] unsigned char 
 10015 ;;  counter         1    4[BANK0 ] unsigned char 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  2    0[BANK0 ] int 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10025 ;;      Params:         0       4       0       0       0       0       0
 10026 ;;      Locals:         0       2       0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0
 10028 ;;      Totals:         0       6       0       0       0       0       0
 10029 ;;Total ram usage:        6 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; Hardware stack levels required when called:    3
 10032 ;; This function calls:
 10033 ;;		Nothing
 10034 ;; This function is called by:
 10035 ;;		_fround
 10036 ;;		_scale
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text37
 10041  00355A                     __ptext37:
 10042                           	opt stack 0
 10043  00355A                     ___awmod:
 10044                           	opt stack 23
 10045                           
 10046                           ;incstack = 0
 10047  00355A  0E00               	movlw	0
 10048  00355C  0100               	movlb	0	; () banked
 10049  00355E  6F65               	movwf	___awmod@sign& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052  003560  0100               	movlb	0	; () banked
 10053  003562  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10054  003564  D008               	goto	l4809
 10055                           
 10056                           ; BSR set to: 0
 10057  003566  0100               	movlb	0	; () banked
 10058  003568  6D60               	negf	___awmod@dividend& (0+255),b
 10059  00356A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10060  00356C  B0D8               	btfsc	status,0,c
 10061  00356E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10062                           
 10063                           ; BSR set to: 0
 10064  003570  0E01               	movlw	1
 10065  003572  0100               	movlb	0	; () banked
 10066  003574  6F65               	movwf	___awmod@sign& (0+255),b
 10067  003576                     l4809:
 10068                           
 10069                           ; BSR set to: 0
 10070  003576  0100               	movlb	0	; () banked
 10071  003578  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10072  00357A  D005               	goto	l4813
 10073                           
 10074                           ; BSR set to: 0
 10075  00357C  0100               	movlb	0	; () banked
 10076  00357E  6D62               	negf	___awmod@divisor& (0+255),b
 10077  003580  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10078  003582  B0D8               	btfsc	status,0,c
 10079  003584  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10080  003586                     l4813:
 10081                           
 10082                           ; BSR set to: 0
 10083  003586  0100               	movlb	0	; () banked
 10084  003588  5162               	movf	___awmod@divisor& (0+255),w,b
 10085  00358A  0100               	movlb	0	; () banked
 10086  00358C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10087  00358E  B4D8               	btfsc	status,2,c
 10088  003590  D026               	goto	l4829
 10089                           
 10090                           ; BSR set to: 0
 10091  003592  0E01               	movlw	1
 10092  003594  0100               	movlb	0	; () banked
 10093  003596  6F64               	movwf	___awmod@counter& (0+255),b
 10094  003598  D006               	goto	l4819
 10095  00359A                     l4817:
 10096                           
 10097                           ; BSR set to: 0
 10098  00359A  0100               	movlb	0	; () banked
 10099  00359C  90D8               	bcf	status,0,c
 10100  00359E  3762               	rlcf	___awmod@divisor& (0+255),f,b
 10101  0035A0  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10102  0035A2  0100               	movlb	0	; () banked
 10103  0035A4  2B64               	incf	___awmod@counter& (0+255),f,b
 10104  0035A6                     l4819:
 10105                           
 10106                           ; BSR set to: 0
 10107  0035A6  0100               	movlb	0	; () banked
 10108  0035A8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10109  0035AA  D7F7               	goto	l4817
 10110  0035AC                     l4821:
 10111                           
 10112                           ; BSR set to: 0
 10113  0035AC  0100               	movlb	0	; () banked
 10114  0035AE  5162               	movf	___awmod@divisor& (0+255),w,b
 10115  0035B0  0100               	movlb	0	; () banked
 10116  0035B2  5D60               	subwf	___awmod@dividend& (0+255),w,b
 10117  0035B4  0100               	movlb	0	; () banked
 10118  0035B6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10119  0035B8  0100               	movlb	0	; () banked
 10120  0035BA  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10121  0035BC  A0D8               	btfss	status,0,c
 10122  0035BE  D008               	goto	l4825
 10123                           
 10124                           ; BSR set to: 0
 10125  0035C0  0100               	movlb	0	; () banked
 10126  0035C2  5162               	movf	___awmod@divisor& (0+255),w,b
 10127  0035C4  0100               	movlb	0	; () banked
 10128  0035C6  5F60               	subwf	___awmod@dividend& (0+255),f,b
 10129  0035C8  0100               	movlb	0	; () banked
 10130  0035CA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10131  0035CC  0100               	movlb	0	; () banked
 10132  0035CE  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10133  0035D0                     l4825:
 10134                           
 10135                           ; BSR set to: 0
 10136  0035D0  0100               	movlb	0	; () banked
 10137  0035D2  90D8               	bcf	status,0,c
 10138  0035D4  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10139  0035D6  3362               	rrcf	___awmod@divisor& (0+255),f,b
 10140                           
 10141                           ; BSR set to: 0
 10142  0035D8  0100               	movlb	0	; () banked
 10143  0035DA  2F64               	decfsz	___awmod@counter& (0+255),f,b
 10144  0035DC  D7E7               	goto	l4821
 10145  0035DE                     l4829:
 10146                           
 10147                           ; BSR set to: 0
 10148  0035DE  0100               	movlb	0	; () banked
 10149  0035E0  5165               	movf	___awmod@sign& (0+255),w,b
 10150  0035E2  0100               	movlb	0	; () banked
 10151  0035E4  B4D8               	btfsc	status,2,c
 10152  0035E6  D005               	goto	l4833
 10153                           
 10154                           ; BSR set to: 0
 10155  0035E8  0100               	movlb	0	; () banked
 10156  0035EA  6D60               	negf	___awmod@dividend& (0+255),b
 10157  0035EC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10158  0035EE  B0D8               	btfsc	status,0,c
 10159  0035F0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10160  0035F2                     l4833:
 10161                           
 10162                           ; BSR set to: 0
 10163  0035F2  C060  F060         	movff	___awmod@dividend,?___awmod
 10164  0035F6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 10165  0035FA  0012               	return	
 10166  0035FC                     __end_of___awmod:
 10167                           	opt stack 0
 10168                           tblptru	equ	0xFF8
 10169                           tblptrh	equ	0xFF7
 10170                           tblptrl	equ	0xFF6
 10171                           tablat	equ	0xFF5
 10172                           prodh	equ	0xFF4
 10173                           prodl	equ	0xFF3
 10174                           indf0	equ	0xFEF
 10175                           postinc0	equ	0xFEE
 10176                           fsr0h	equ	0xFEA
 10177                           fsr0l	equ	0xFE9
 10178                           wreg	equ	0xFE8
 10179                           indf1	equ	0xFE7
 10180                           postdec1	equ	0xFE5
 10181                           fsr1h	equ	0xFE2
 10182                           fsr1l	equ	0xFE1
 10183                           indf2	equ	0xFDF
 10184                           postinc2	equ	0xFDE
 10185                           postdec2	equ	0xFDD
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function ___awdiv *****************
 10191 ;; Defined at:
 10192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  dividend        2    6[BANK0 ] int 
 10195 ;;  divisor         2    8[BANK0 ] int 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  quotient        2   12[BANK0 ] int 
 10198 ;;  sign            1   11[BANK0 ] unsigned char 
 10199 ;;  counter         1   10[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  2    6[BANK0 ] int 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10209 ;;      Params:         0       4       0       0       0       0       0
 10210 ;;      Locals:         0       4       0       0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0
 10212 ;;      Totals:         0       8       0       0       0       0       0
 10213 ;;Total ram usage:        8 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    3
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_fround
 10220 ;;		_scale
 10221 ;;		_sprintf
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text38
 10226  003324                     __ptext38:
 10227                           	opt stack 0
 10228  003324                     ___awdiv:
 10229                           	opt stack 23
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;incstack = 0
 10233  003324  0E00               	movlw	0
 10234  003326  0100               	movlb	0	; () banked
 10235  003328  6F6B               	movwf	___awdiv@sign& (0+255),b
 10236                           
 10237                           ; BSR set to: 0
 10238  00332A  0100               	movlb	0	; () banked
 10239  00332C  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10240  00332E  D008               	goto	l4765
 10241                           
 10242                           ; BSR set to: 0
 10243  003330  0100               	movlb	0	; () banked
 10244  003332  6D68               	negf	___awdiv@divisor& (0+255),b
 10245  003334  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10246  003336  B0D8               	btfsc	status,0,c
 10247  003338  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10248                           
 10249                           ; BSR set to: 0
 10250  00333A  0E01               	movlw	1
 10251  00333C  0100               	movlb	0	; () banked
 10252  00333E  6F6B               	movwf	___awdiv@sign& (0+255),b
 10253  003340                     l4765:
 10254                           
 10255                           ; BSR set to: 0
 10256  003340  0100               	movlb	0	; () banked
 10257  003342  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10258  003344  D008               	goto	l4771
 10259                           
 10260                           ; BSR set to: 0
 10261  003346  0100               	movlb	0	; () banked
 10262  003348  6D66               	negf	___awdiv@dividend& (0+255),b
 10263  00334A  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10264  00334C  B0D8               	btfsc	status,0,c
 10265  00334E  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10266                           
 10267                           ; BSR set to: 0
 10268  003350  0E01               	movlw	1
 10269  003352  0100               	movlb	0	; () banked
 10270  003354  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 10271  003356                     l4771:
 10272                           
 10273                           ; BSR set to: 0
 10274  003356  0E00               	movlw	0
 10275  003358  0100               	movlb	0	; () banked
 10276  00335A  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10277  00335C  0E00               	movlw	0
 10278  00335E  6F6C               	movwf	___awdiv@quotient& (0+255),b
 10279                           
 10280                           ; BSR set to: 0
 10281  003360  0100               	movlb	0	; () banked
 10282  003362  5168               	movf	___awdiv@divisor& (0+255),w,b
 10283  003364  0100               	movlb	0	; () banked
 10284  003366  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10285  003368  B4D8               	btfsc	status,2,c
 10286  00336A  D02C               	goto	l4793
 10287                           
 10288                           ; BSR set to: 0
 10289  00336C  0E01               	movlw	1
 10290  00336E  0100               	movlb	0	; () banked
 10291  003370  6F6A               	movwf	___awdiv@counter& (0+255),b
 10292  003372  D006               	goto	l4779
 10293  003374                     l4777:
 10294                           
 10295                           ; BSR set to: 0
 10296  003374  0100               	movlb	0	; () banked
 10297  003376  90D8               	bcf	status,0,c
 10298  003378  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 10299  00337A  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10300  00337C  0100               	movlb	0	; () banked
 10301  00337E  2B6A               	incf	___awdiv@counter& (0+255),f,b
 10302  003380                     l4779:
 10303                           
 10304                           ; BSR set to: 0
 10305  003380  0100               	movlb	0	; () banked
 10306  003382  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10307  003384  D7F7               	goto	l4777
 10308  003386                     l4781:
 10309                           
 10310                           ; BSR set to: 0
 10311  003386  0100               	movlb	0	; () banked
 10312  003388  90D8               	bcf	status,0,c
 10313  00338A  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 10314  00338C  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10315                           
 10316                           ; BSR set to: 0
 10317  00338E  0100               	movlb	0	; () banked
 10318  003390  5168               	movf	___awdiv@divisor& (0+255),w,b
 10319  003392  0100               	movlb	0	; () banked
 10320  003394  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 10321  003396  0100               	movlb	0	; () banked
 10322  003398  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10323  00339A  0100               	movlb	0	; () banked
 10324  00339C  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10325  00339E  A0D8               	btfss	status,0,c
 10326  0033A0  D00A               	goto	l4789
 10327                           
 10328                           ; BSR set to: 0
 10329  0033A2  0100               	movlb	0	; () banked
 10330  0033A4  5168               	movf	___awdiv@divisor& (0+255),w,b
 10331  0033A6  0100               	movlb	0	; () banked
 10332  0033A8  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 10333  0033AA  0100               	movlb	0	; () banked
 10334  0033AC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10335  0033AE  0100               	movlb	0	; () banked
 10336  0033B0  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10337                           
 10338                           ; BSR set to: 0
 10339  0033B2  0100               	movlb	0	; () banked
 10340  0033B4  816C               	bsf	___awdiv@quotient& (0+255),0,b
 10341  0033B6                     l4789:
 10342                           
 10343                           ; BSR set to: 0
 10344  0033B6  0100               	movlb	0	; () banked
 10345  0033B8  90D8               	bcf	status,0,c
 10346  0033BA  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10347  0033BC  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 10348                           
 10349                           ; BSR set to: 0
 10350  0033BE  0100               	movlb	0	; () banked
 10351  0033C0  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 10352  0033C2  D7E1               	goto	l4781
 10353  0033C4                     l4793:
 10354                           
 10355                           ; BSR set to: 0
 10356  0033C4  0100               	movlb	0	; () banked
 10357  0033C6  516B               	movf	___awdiv@sign& (0+255),w,b
 10358  0033C8  0100               	movlb	0	; () banked
 10359  0033CA  B4D8               	btfsc	status,2,c
 10360  0033CC  D005               	goto	l4797
 10361                           
 10362                           ; BSR set to: 0
 10363  0033CE  0100               	movlb	0	; () banked
 10364  0033D0  6D6C               	negf	___awdiv@quotient& (0+255),b
 10365  0033D2  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10366  0033D4  B0D8               	btfsc	status,0,c
 10367  0033D6  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10368  0033D8                     l4797:
 10369                           
 10370                           ; BSR set to: 0
 10371  0033D8  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 10372  0033DC  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 10373  0033E0  0012               	return	
 10374  0033E2                     __end_of___awdiv:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           indf0	equ	0xFEF
 10383                           postinc0	equ	0xFEE
 10384                           fsr0h	equ	0xFEA
 10385                           fsr0l	equ	0xFE9
 10386                           wreg	equ	0xFE8
 10387                           indf1	equ	0xFE7
 10388                           postdec1	equ	0xFE5
 10389                           fsr1h	equ	0xFE2
 10390                           fsr1l	equ	0xFE1
 10391                           indf2	equ	0xFDF
 10392                           postinc2	equ	0xFDE
 10393                           postdec2	equ	0xFDD
 10394                           fsr2h	equ	0xFDA
 10395                           fsr2l	equ	0xFD9
 10396                           status	equ	0xFD8
 10397                           
 10398 ;; *************** function __tdiv_to_l_ *****************
 10399 ;; Defined at:
 10400 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  f1              3    0[BANK0 ] float 
 10403 ;;  f2              3    3[BANK0 ] float 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  quot            4    9[BANK0 ] unsigned long 
 10406 ;;  exp1            1   14[BANK0 ] unsigned char 
 10407 ;;  cntr            1   13[BANK0 ] unsigned char 
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  4    0[BANK0 ] unsigned long 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10417 ;;      Params:         0       6       0       0       0       0       0
 10418 ;;      Locals:         0       6       0       0       0       0       0
 10419 ;;      Temps:          0       3       0       0       0       0       0
 10420 ;;      Totals:         0      15       0       0       0       0       0
 10421 ;;Total ram usage:       15 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    3
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_sprintf
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text39
 10432  002544                     __ptext39:
 10433                           	opt stack 0
 10434  002544                     __tdiv_to_l_:
 10435                           	opt stack 24
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;incstack = 0
 10439  002544  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10440  002548  0100               	movlb	0	; () banked
 10441  00254A  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10442  00254C  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10443  00254E  0100               	movlb	0	; () banked
 10444  002550  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10445  002552  0100               	movlb	0	; () banked
 10446  002554  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10447  002556  E301               	bnc	u4991
 10448  002558  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10449  00255A                     u4991:
 10450  00255A  0100               	movlb	0	; () banked
 10451  00255C  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10452  00255E  0100               	movlb	0	; () banked
 10453  002560  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10454  002562  0100               	movlb	0	; () banked
 10455  002564  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10456  002566  A4D8               	btfss	status,2,c
 10457  002568  D00A               	goto	l4985
 10458                           
 10459                           ; BSR set to: 0
 10460  00256A  0E00               	movlw	0
 10461  00256C  0100               	movlb	0	; () banked
 10462  00256E  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10463  002570  0E00               	movlw	0
 10464  002572  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10465  002574  0E00               	movlw	0
 10466  002576  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10467  002578  0E00               	movlw	0
 10468  00257A  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10469                           
 10470                           ; BSR set to: 0
 10471  00257C  0012               	return	
 10472  00257E                     l4985:
 10473                           
 10474                           ; BSR set to: 0
 10475  00257E  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10476  002582  0100               	movlb	0	; () banked
 10477  002584  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10478  002586  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10479  002588  0100               	movlb	0	; () banked
 10480  00258A  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10481  00258C  0100               	movlb	0	; () banked
 10482  00258E  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10483  002590  E301               	bnc	u5011
 10484  002592  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10485  002594                     u5011:
 10486  002594  0100               	movlb	0	; () banked
 10487  002596  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10488  002598  0100               	movlb	0	; () banked
 10489  00259A  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10490  00259C  0100               	movlb	0	; () banked
 10491  00259E  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10492  0025A0  A4D8               	btfss	status,2,c
 10493  0025A2  D00A               	goto	l4991
 10494                           
 10495                           ; BSR set to: 0
 10496  0025A4  0E00               	movlw	0
 10497  0025A6  0100               	movlb	0	; () banked
 10498  0025A8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10499  0025AA  0E00               	movlw	0
 10500  0025AC  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10501  0025AE  0E00               	movlw	0
 10502  0025B0  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10503  0025B2  0E00               	movlw	0
 10504  0025B4  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10505                           
 10506                           ; BSR set to: 0
 10507  0025B6  0012               	return	
 10508  0025B8                     l4991:
 10509                           
 10510                           ; BSR set to: 0
 10511  0025B8  0100               	movlb	0	; () banked
 10512  0025BA  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10513                           
 10514                           ; BSR set to: 0
 10515  0025BC  0EFF               	movlw	255
 10516  0025BE  0100               	movlb	0	; () banked
 10517  0025C0  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10518  0025C2  0EFF               	movlw	255
 10519  0025C4  0100               	movlb	0	; () banked
 10520  0025C6  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10521  0025C8  0E00               	movlw	0
 10522  0025CA  0100               	movlb	0	; () banked
 10523  0025CC  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10524  0025CE  0100               	movlb	0	; () banked
 10525  0025D0  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10526                           
 10527                           ; BSR set to: 0
 10528  0025D2  0EFF               	movlw	255
 10529  0025D4  0100               	movlb	0	; () banked
 10530  0025D6  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10531  0025D8  0EFF               	movlw	255
 10532  0025DA  0100               	movlb	0	; () banked
 10533  0025DC  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10534  0025DE  0E00               	movlw	0
 10535  0025E0  0100               	movlb	0	; () banked
 10536  0025E2  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10537                           
 10538                           ; BSR set to: 0
 10539  0025E4  0E00               	movlw	0
 10540  0025E6  0100               	movlb	0	; () banked
 10541  0025E8  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 10542  0025EA  0E00               	movlw	0
 10543  0025EC  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10544  0025EE  0E00               	movlw	0
 10545  0025F0  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10546  0025F2  0E00               	movlw	0
 10547  0025F4  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10548                           
 10549                           ; BSR set to: 0
 10550  0025F6  0E7F               	movlw	127
 10551  0025F8  0100               	movlb	0	; () banked
 10552  0025FA  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10553                           
 10554                           ; BSR set to: 0
 10555  0025FC  0100               	movlb	0	; () banked
 10556  0025FE  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10557  002600  0F98               	addlw	152
 10558  002602  0100               	movlb	0	; () banked
 10559  002604  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10560                           
 10561                           ; BSR set to: 0
 10562  002606  0E18               	movlw	24
 10563  002608  0100               	movlb	0	; () banked
 10564  00260A  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10565  00260C                     l870:
 10566                           
 10567                           ; BSR set to: 0
 10568  00260C  0100               	movlb	0	; () banked
 10569  00260E  90D8               	bcf	status,0,c
 10570  002610  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10571  002612  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10572  002614  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10573  002616  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10574                           
 10575                           ; BSR set to: 0
 10576  002618  0100               	movlb	0	; () banked
 10577  00261A  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10578  00261C  0100               	movlb	0	; () banked
 10579  00261E  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10580  002620  0100               	movlb	0	; () banked
 10581  002622  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10582  002624  0100               	movlb	0	; () banked
 10583  002626  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10584  002628  0100               	movlb	0	; () banked
 10585  00262A  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10586  00262C  0100               	movlb	0	; () banked
 10587  00262E  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10588  002630  A0D8               	btfss	status,0,c
 10589  002632  D00E               	goto	l871
 10590                           
 10591                           ; BSR set to: 0
 10592  002634  0100               	movlb	0	; () banked
 10593  002636  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10594  002638  0100               	movlb	0	; () banked
 10595  00263A  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10596  00263C  0100               	movlb	0	; () banked
 10597  00263E  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10598  002640  0100               	movlb	0	; () banked
 10599  002642  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10600  002644  0100               	movlb	0	; () banked
 10601  002646  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10602  002648  0100               	movlb	0	; () banked
 10603  00264A  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10604                           
 10605                           ; BSR set to: 0
 10606  00264C  0100               	movlb	0	; () banked
 10607  00264E  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10608  002650                     l871:
 10609                           
 10610                           ; BSR set to: 0
 10611  002650  0100               	movlb	0	; () banked
 10612  002652  90D8               	bcf	status,0,c
 10613  002654  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10614  002656  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10615  002658  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10616                           
 10617                           ; BSR set to: 0
 10618  00265A  0100               	movlb	0	; () banked
 10619  00265C  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10620  00265E  D7D6               	goto	l870
 10621                           
 10622                           ; BSR set to: 0
 10623                           
 10624                           ; BSR set to: 0
 10625  002660  0100               	movlb	0	; () banked
 10626  002662  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10627  002664  D01A               	goto	l5025
 10628                           
 10629                           ; BSR set to: 0
 10630  002666  0100               	movlb	0	; () banked
 10631  002668  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10632  00266A  0A80               	xorlw	128
 10633  00266C  0F97               	addlw	151
 10634  00266E  B0D8               	btfsc	status,0,c
 10635  002670  D00A               	goto	l5021
 10636                           
 10637                           ; BSR set to: 0
 10638  002672  0E00               	movlw	0
 10639  002674  0100               	movlb	0	; () banked
 10640  002676  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10641  002678  0E00               	movlw	0
 10642  00267A  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10643  00267C  0E00               	movlw	0
 10644  00267E  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10645  002680  0E00               	movlw	0
 10646  002682  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10647                           
 10648                           ; BSR set to: 0
 10649  002684  0012               	return	
 10650  002686                     l5021:
 10651                           
 10652                           ; BSR set to: 0
 10653  002686  0100               	movlb	0	; () banked
 10654  002688  90D8               	bcf	status,0,c
 10655  00268A  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10656  00268C  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10657  00268E  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10658  002690  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10659                           
 10660                           ; BSR set to: 0
 10661  002692  0100               	movlb	0	; () banked
 10662  002694  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10663  002696  D7F7               	goto	l5021
 10664                           
 10665                           ; BSR set to: 0
 10666  002698  D01B               	goto	l877
 10667  00269A                     l5025:
 10668                           
 10669                           ; BSR set to: 0
 10670  00269A  0E17               	movlw	23
 10671  00269C  0100               	movlb	0	; () banked
 10672  00269E  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10673  0026A0  D012               	goto	l5033
 10674                           
 10675                           ; BSR set to: 0
 10676  0026A2  0E00               	movlw	0
 10677  0026A4  0100               	movlb	0	; () banked
 10678  0026A6  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10679  0026A8  0E00               	movlw	0
 10680  0026AA  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10681  0026AC  0E00               	movlw	0
 10682  0026AE  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10683  0026B0  0E00               	movlw	0
 10684  0026B2  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10685                           
 10686                           ; BSR set to: 0
 10687  0026B4  0012               	return	
 10688  0026B6                     l5031:
 10689                           
 10690                           ; BSR set to: 0
 10691  0026B6  0100               	movlb	0	; () banked
 10692  0026B8  90D8               	bcf	status,0,c
 10693  0026BA  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10694  0026BC  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10695  0026BE  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10696  0026C0  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10697  0026C2  0100               	movlb	0	; () banked
 10698  0026C4  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10699  0026C6                     l5033:
 10700                           
 10701                           ; BSR set to: 0
 10702  0026C6  0100               	movlb	0	; () banked
 10703  0026C8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10704  0026CA  0100               	movlb	0	; () banked
 10705  0026CC  A4D8               	btfss	status,2,c
 10706  0026CE  D7F3               	goto	l5031
 10707  0026D0                     l877:
 10708                           
 10709                           ; BSR set to: 0
 10710  0026D0  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10711  0026D4  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10712  0026D8  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10713  0026DC  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10714                           
 10715                           ; BSR set to: 0
 10716  0026E0  0012               	return		;funcret
 10717  0026E2                     __end_of__tdiv_to_l_:
 10718                           	opt stack 0
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           indf0	equ	0xFEF
 10726                           postinc0	equ	0xFEE
 10727                           fsr0h	equ	0xFEA
 10728                           fsr0l	equ	0xFE9
 10729                           wreg	equ	0xFE8
 10730                           indf1	equ	0xFE7
 10731                           postdec1	equ	0xFE5
 10732                           fsr1h	equ	0xFE2
 10733                           fsr1l	equ	0xFE1
 10734                           indf2	equ	0xFDF
 10735                           postinc2	equ	0xFDE
 10736                           postdec2	equ	0xFDD
 10737                           fsr2h	equ	0xFDA
 10738                           fsr2l	equ	0xFD9
 10739                           status	equ	0xFD8
 10740                           
 10741 ;; *************** function __div_to_l_ *****************
 10742 ;; Defined at:
 10743 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  f1              3    0[BANK0 ] unsigned long 
 10746 ;;  f2              3    3[BANK0 ] unsigned long 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  quot            4    6[BANK0 ] unsigned long 
 10749 ;;  exp1            1   11[BANK0 ] unsigned char 
 10750 ;;  cntr            1   10[BANK0 ] unsigned char 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  4    0[BANK0 ] unsigned long 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10760 ;;      Params:         0       6       0       0       0       0       0
 10761 ;;      Locals:         0       6       0       0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0
 10763 ;;      Totals:         0      12       0       0       0       0       0
 10764 ;;Total ram usage:       12 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    3
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_sprintf
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text40
 10775  002876                     __ptext40:
 10776                           	opt stack 0
 10777  002876                     __div_to_l_:
 10778                           	opt stack 24
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;incstack = 0
 10782  002876  0100               	movlb	0	; () banked
 10783  002878  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10784  00287A  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10785  00287C  0100               	movlb	0	; () banked
 10786  00287E  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 10787  002880  0100               	movlb	0	; () banked
 10788  002882  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10789  002884  A4D8               	btfss	status,2,c
 10790  002886  D00A               	goto	l5041
 10791                           
 10792                           ; BSR set to: 0
 10793  002888  0E00               	movlw	0
 10794  00288A  0100               	movlb	0	; () banked
 10795  00288C  6F60               	movwf	?__div_to_l_& (0+255),b
 10796  00288E  0E00               	movlw	0
 10797  002890  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10798  002892  0E00               	movlw	0
 10799  002894  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10800  002896  0E00               	movlw	0
 10801  002898  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10802                           
 10803                           ; BSR set to: 0
 10804  00289A  0012               	return	
 10805  00289C                     l5041:
 10806                           
 10807                           ; BSR set to: 0
 10808  00289C  0100               	movlb	0	; () banked
 10809  00289E  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10810  0028A0  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10811  0028A2  0100               	movlb	0	; () banked
 10812  0028A4  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10813  0028A6  0100               	movlb	0	; () banked
 10814  0028A8  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10815  0028AA  A4D8               	btfss	status,2,c
 10816  0028AC  D00A               	goto	l5047
 10817                           
 10818                           ; BSR set to: 0
 10819  0028AE  0E00               	movlw	0
 10820  0028B0  0100               	movlb	0	; () banked
 10821  0028B2  6F60               	movwf	?__div_to_l_& (0+255),b
 10822  0028B4  0E00               	movlw	0
 10823  0028B6  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10824  0028B8  0E00               	movlw	0
 10825  0028BA  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10826  0028BC  0E00               	movlw	0
 10827  0028BE  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10828                           
 10829                           ; BSR set to: 0
 10830  0028C0  0012               	return	
 10831  0028C2                     l5047:
 10832                           
 10833                           ; BSR set to: 0
 10834  0028C2  0100               	movlb	0	; () banked
 10835  0028C4  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10836                           
 10837                           ; BSR set to: 0
 10838  0028C6  0EFF               	movlw	255
 10839  0028C8  0100               	movlb	0	; () banked
 10840  0028CA  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 10841  0028CC  0EFF               	movlw	255
 10842  0028CE  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10843  0028D0  0EFF               	movlw	255
 10844  0028D2  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10845  0028D4  0E00               	movlw	0
 10846  0028D6  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10847                           
 10848                           ; BSR set to: 0
 10849  0028D8  0100               	movlb	0	; () banked
 10850  0028DA  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10851  0028DC  0EFF               	movlw	255
 10852  0028DE  0100               	movlb	0	; () banked
 10853  0028E0  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 10854  0028E2  0EFF               	movlw	255
 10855  0028E4  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10856  0028E6  0EFF               	movlw	255
 10857  0028E8  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10858  0028EA  0E00               	movlw	0
 10859  0028EC  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10860                           
 10861                           ; BSR set to: 0
 10862  0028EE  0E00               	movlw	0
 10863  0028F0  0100               	movlb	0	; () banked
 10864  0028F2  6F66               	movwf	__div_to_l_@quot& (0+255),b
 10865  0028F4  0E00               	movlw	0
 10866  0028F6  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10867  0028F8  0E00               	movlw	0
 10868  0028FA  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10869  0028FC  0E00               	movlw	0
 10870  0028FE  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10871                           
 10872                           ; BSR set to: 0
 10873  002900  0E7F               	movlw	127
 10874  002902  0100               	movlb	0	; () banked
 10875  002904  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10876                           
 10877                           ; BSR set to: 0
 10878  002906  0100               	movlb	0	; () banked
 10879  002908  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10880  00290A  0FA0               	addlw	160
 10881  00290C  0100               	movlb	0	; () banked
 10882  00290E  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10883                           
 10884                           ; BSR set to: 0
 10885  002910  0E20               	movlw	32
 10886  002912  0100               	movlb	0	; () banked
 10887  002914  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10888  002916                     l5061:
 10889                           
 10890                           ; BSR set to: 0
 10891  002916  0100               	movlb	0	; () banked
 10892  002918  90D8               	bcf	status,0,c
 10893  00291A  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 10894  00291C  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10895  00291E  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10896  002920  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10897                           
 10898                           ; BSR set to: 0
 10899  002922  0100               	movlb	0	; () banked
 10900  002924  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10901  002926  0100               	movlb	0	; () banked
 10902  002928  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 10903  00292A  0100               	movlb	0	; () banked
 10904  00292C  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10905  00292E  0100               	movlb	0	; () banked
 10906  002930  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10907  002932  0100               	movlb	0	; () banked
 10908  002934  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10909  002936  0100               	movlb	0	; () banked
 10910  002938  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10911  00293A  0100               	movlb	0	; () banked
 10912  00293C  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10913  00293E  0100               	movlb	0	; () banked
 10914  002940  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10915  002942  A0D8               	btfss	status,0,c
 10916  002944  D012               	goto	l5069
 10917                           
 10918                           ; BSR set to: 0
 10919  002946  0100               	movlb	0	; () banked
 10920  002948  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10921  00294A  0100               	movlb	0	; () banked
 10922  00294C  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 10923  00294E  0100               	movlb	0	; () banked
 10924  002950  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10925  002952  0100               	movlb	0	; () banked
 10926  002954  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10927  002956  0100               	movlb	0	; () banked
 10928  002958  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10929  00295A  0100               	movlb	0	; () banked
 10930  00295C  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10931  00295E  0100               	movlb	0	; () banked
 10932  002960  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10933  002962  0100               	movlb	0	; () banked
 10934  002964  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10935                           
 10936                           ; BSR set to: 0
 10937  002966  0100               	movlb	0	; () banked
 10938  002968  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 10939  00296A                     l5069:
 10940                           
 10941                           ; BSR set to: 0
 10942  00296A  0100               	movlb	0	; () banked
 10943  00296C  90D8               	bcf	status,0,c
 10944  00296E  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 10945  002970  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10946  002972  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10947  002974  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 0
 10950  002976  0100               	movlb	0	; () banked
 10951  002978  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10952  00297A  D7CD               	goto	l5061
 10953                           
 10954                           ; BSR set to: 0
 10955                           
 10956                           ; BSR set to: 0
 10957  00297C  0100               	movlb	0	; () banked
 10958  00297E  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10959  002980  D01A               	goto	l5085
 10960                           
 10961                           ; BSR set to: 0
 10962  002982  0100               	movlb	0	; () banked
 10963  002984  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10964  002986  0A80               	xorlw	128
 10965  002988  0F9F               	addlw	159
 10966  00298A  B0D8               	btfsc	status,0,c
 10967  00298C  D00A               	goto	l5081
 10968                           
 10969                           ; BSR set to: 0
 10970  00298E  0E00               	movlw	0
 10971  002990  0100               	movlb	0	; () banked
 10972  002992  6F60               	movwf	?__div_to_l_& (0+255),b
 10973  002994  0E00               	movlw	0
 10974  002996  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10975  002998  0E00               	movlw	0
 10976  00299A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10977  00299C  0E00               	movlw	0
 10978  00299E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10979                           
 10980                           ; BSR set to: 0
 10981  0029A0  0012               	return	
 10982  0029A2                     l5081:
 10983                           
 10984                           ; BSR set to: 0
 10985  0029A2  0100               	movlb	0	; () banked
 10986  0029A4  90D8               	bcf	status,0,c
 10987  0029A6  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10988  0029A8  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10989  0029AA  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10990  0029AC  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 10991                           
 10992                           ; BSR set to: 0
 10993  0029AE  0100               	movlb	0	; () banked
 10994  0029B0  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10995  0029B2  D7F7               	goto	l5081
 10996                           
 10997                           ; BSR set to: 0
 10998  0029B4  D01B               	goto	l773
 10999  0029B6                     l5085:
 11000                           
 11001                           ; BSR set to: 0
 11002  0029B6  0E1F               	movlw	31
 11003  0029B8  0100               	movlb	0	; () banked
 11004  0029BA  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11005  0029BC  D012               	goto	l5093
 11006                           
 11007                           ; BSR set to: 0
 11008  0029BE  0E00               	movlw	0
 11009  0029C0  0100               	movlb	0	; () banked
 11010  0029C2  6F60               	movwf	?__div_to_l_& (0+255),b
 11011  0029C4  0E00               	movlw	0
 11012  0029C6  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11013  0029C8  0E00               	movlw	0
 11014  0029CA  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11015  0029CC  0E00               	movlw	0
 11016  0029CE  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11017                           
 11018                           ; BSR set to: 0
 11019  0029D0  0012               	return	
 11020  0029D2                     l5091:
 11021                           
 11022                           ; BSR set to: 0
 11023  0029D2  0100               	movlb	0	; () banked
 11024  0029D4  90D8               	bcf	status,0,c
 11025  0029D6  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 11026  0029D8  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11027  0029DA  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11028  0029DC  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11029  0029DE  0100               	movlb	0	; () banked
 11030  0029E0  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 11031  0029E2                     l5093:
 11032                           
 11033                           ; BSR set to: 0
 11034  0029E2  0100               	movlb	0	; () banked
 11035  0029E4  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11036  0029E6  0100               	movlb	0	; () banked
 11037  0029E8  A4D8               	btfss	status,2,c
 11038  0029EA  D7F3               	goto	l5091
 11039  0029EC                     l773:
 11040                           
 11041                           ; BSR set to: 0
 11042  0029EC  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 11043  0029F0  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11044  0029F4  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11045  0029F8  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11046                           
 11047                           ; BSR set to: 0
 11048  0029FC  0012               	return		;funcret
 11049  0029FE                     __end_of__div_to_l_:
 11050                           	opt stack 0
 11051                           tblptru	equ	0xFF8
 11052                           tblptrh	equ	0xFF7
 11053                           tblptrl	equ	0xFF6
 11054                           tablat	equ	0xFF5
 11055                           prodh	equ	0xFF4
 11056                           prodl	equ	0xFF3
 11057                           indf0	equ	0xFEF
 11058                           postinc0	equ	0xFEE
 11059                           fsr0h	equ	0xFEA
 11060                           fsr0l	equ	0xFE9
 11061                           wreg	equ	0xFE8
 11062                           indf1	equ	0xFE7
 11063                           postdec1	equ	0xFE5
 11064                           fsr1h	equ	0xFE2
 11065                           fsr1l	equ	0xFE1
 11066                           indf2	equ	0xFDF
 11067                           postinc2	equ	0xFDE
 11068                           postdec2	equ	0xFDD
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function ___lltoft *****************
 11074 ;; Defined at:
 11075 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  c               4    8[BANK0 ] unsigned long 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  exp             1   16[BANK0 ] unsigned char 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  3    8[BANK0 ] float 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11089 ;;      Params:         0       4       0       0       0       0       0
 11090 ;;      Locals:         0       1       0       0       0       0       0
 11091 ;;      Temps:          0       4       0       0       0       0       0
 11092 ;;      Totals:         0       9       0       0       0       0       0
 11093 ;;Total ram usage:        9 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    4
 11096 ;; This function calls:
 11097 ;;		___ftpack
 11098 ;; This function is called by:
 11099 ;;		_sprintf
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text41
 11104  003722                     __ptext41:
 11105                           	opt stack 0
 11106  003722                     ___lltoft:
 11107                           	opt stack 23
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;incstack = 0
 11111  003722  0E8E               	movlw	142
 11112  003724  0100               	movlb	0	; () banked
 11113  003726  6F70               	movwf	___lltoft@exp& (0+255),b
 11114  003728  D008               	goto	l5167
 11115  00372A                     l5165:
 11116                           
 11117                           ; BSR set to: 0
 11118  00372A  0100               	movlb	0	; () banked
 11119  00372C  90D8               	bcf	status,0,c
 11120  00372E  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11121  003730  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11122  003732  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11123  003734  3368               	rrcf	___lltoft@c& (0+255),f,b
 11124  003736  0100               	movlb	0	; () banked
 11125  003738  2B70               	incf	___lltoft@exp& (0+255),f,b
 11126  00373A                     l5167:
 11127                           
 11128                           ; BSR set to: 0
 11129  00373A  0E00               	movlw	0
 11130  00373C  0100               	movlb	0	; () banked
 11131  00373E  1568               	andwf	___lltoft@c& (0+255),w,b
 11132  003740  0100               	movlb	0	; () banked
 11133  003742  6F6C               	movwf	??___lltoft& (0+255),b
 11134  003744  0E00               	movlw	0
 11135  003746  0100               	movlb	0	; () banked
 11136  003748  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 11137  00374A  0100               	movlb	0	; () banked
 11138  00374C  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 11139  00374E  0E00               	movlw	0
 11140  003750  0100               	movlb	0	; () banked
 11141  003752  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 11142  003754  0100               	movlb	0	; () banked
 11143  003756  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 11144  003758  0EFF               	movlw	255
 11145  00375A  0100               	movlb	0	; () banked
 11146  00375C  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 11147  00375E  0100               	movlb	0	; () banked
 11148  003760  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 11149  003762  0100               	movlb	0	; () banked
 11150  003764  516C               	movf	??___lltoft& (0+255),w,b
 11151  003766  0100               	movlb	0	; () banked
 11152  003768  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 11153  00376A  0100               	movlb	0	; () banked
 11154  00376C  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 11155  00376E  0100               	movlb	0	; () banked
 11156  003770  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 11157  003772  A4D8               	btfss	status,2,c
 11158  003774  D7DA               	goto	l5165
 11159                           
 11160                           ; BSR set to: 0
 11161                           
 11162                           ; BSR set to: 0
 11163  003776  C068  F060         	movff	___lltoft@c,___ftpack@arg
 11164  00377A  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 11165  00377E  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 11166  003782  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 11167  003786  0E00               	movlw	0
 11168  003788  0100               	movlb	0	; () banked
 11169  00378A  6F64               	movwf	___ftpack@sign& (0+255),b
 11170  00378C  EC7F  F017         	call	___ftpack	;wreg free
 11171  003790  C060  F068         	movff	?___ftpack,?___lltoft
 11172  003794  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 11173  003798  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 11174  00379C  0012               	return	
 11175  00379E                     __end_of___lltoft:
 11176                           	opt stack 0
 11177                           tblptru	equ	0xFF8
 11178                           tblptrh	equ	0xFF7
 11179                           tblptrl	equ	0xFF6
 11180                           tablat	equ	0xFF5
 11181                           prodh	equ	0xFF4
 11182                           prodl	equ	0xFF3
 11183                           indf0	equ	0xFEF
 11184                           postinc0	equ	0xFEE
 11185                           fsr0h	equ	0xFEA
 11186                           fsr0l	equ	0xFE9
 11187                           wreg	equ	0xFE8
 11188                           indf1	equ	0xFE7
 11189                           postdec1	equ	0xFE5
 11190                           fsr1h	equ	0xFE2
 11191                           fsr1l	equ	0xFE1
 11192                           indf2	equ	0xFDF
 11193                           postinc2	equ	0xFDE
 11194                           postdec2	equ	0xFDD
 11195                           fsr2h	equ	0xFDA
 11196                           fsr2l	equ	0xFD9
 11197                           status	equ	0xFD8
 11198                           
 11199 ;; *************** function ___llmod *****************
 11200 ;; Defined at:
 11201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  dividend        4   13[BANK0 ] unsigned long 
 11204 ;;  divisor         4   17[BANK0 ] unsigned long 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;  counter         1   21[BANK0 ] unsigned char 
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  4   13[BANK0 ] unsigned long 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11216 ;;      Params:         0       8       0       0       0       0       0
 11217 ;;      Locals:         0       1       0       0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0
 11219 ;;      Totals:         0       9       0       0       0       0       0
 11220 ;;Total ram usage:        9 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    3
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_sprintf
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text42
 11231  0035FC                     __ptext42:
 11232                           	opt stack 0
 11233  0035FC                     ___llmod:
 11234                           	opt stack 24
 11235                           
 11236                           ;incstack = 0
 11237  0035FC  0100               	movlb	0	; () banked
 11238  0035FE  5171               	movf	___llmod@divisor& (0+255),w,b
 11239  003600  0100               	movlb	0	; () banked
 11240  003602  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11241  003604  0100               	movlb	0	; () banked
 11242  003606  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11243  003608  0100               	movlb	0	; () banked
 11244  00360A  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11245  00360C  B4D8               	btfsc	status,2,c
 11246  00360E  D03A               	goto	l962
 11247                           
 11248                           ; BSR set to: 0
 11249  003610  0E01               	movlw	1
 11250  003612  0100               	movlb	0	; () banked
 11251  003614  6F75               	movwf	___llmod@counter& (0+255),b
 11252  003616  D008               	goto	l5153
 11253  003618                     l5151:
 11254                           
 11255                           ; BSR set to: 0
 11256  003618  0100               	movlb	0	; () banked
 11257  00361A  90D8               	bcf	status,0,c
 11258  00361C  3771               	rlcf	___llmod@divisor& (0+255),f,b
 11259  00361E  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11260  003620  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11261  003622  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11262  003624  0100               	movlb	0	; () banked
 11263  003626  2B75               	incf	___llmod@counter& (0+255),f,b
 11264  003628                     l5153:
 11265                           
 11266                           ; BSR set to: 0
 11267  003628  0100               	movlb	0	; () banked
 11268  00362A  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11269  00362C  D7F5               	goto	l5151
 11270  00362E                     l5155:
 11271                           
 11272                           ; BSR set to: 0
 11273  00362E  0100               	movlb	0	; () banked
 11274  003630  5171               	movf	___llmod@divisor& (0+255),w,b
 11275  003632  0100               	movlb	0	; () banked
 11276  003634  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 11277  003636  0100               	movlb	0	; () banked
 11278  003638  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 11279  00363A  0100               	movlb	0	; () banked
 11280  00363C  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11281  00363E  0100               	movlb	0	; () banked
 11282  003640  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 11283  003642  0100               	movlb	0	; () banked
 11284  003644  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11285  003646  0100               	movlb	0	; () banked
 11286  003648  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 11287  00364A  0100               	movlb	0	; () banked
 11288  00364C  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11289  00364E  A0D8               	btfss	status,0,c
 11290  003650  D010               	goto	l5159
 11291                           
 11292                           ; BSR set to: 0
 11293  003652  0100               	movlb	0	; () banked
 11294  003654  5171               	movf	___llmod@divisor& (0+255),w,b
 11295  003656  0100               	movlb	0	; () banked
 11296  003658  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 11297  00365A  0100               	movlb	0	; () banked
 11298  00365C  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 11299  00365E  0100               	movlb	0	; () banked
 11300  003660  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11301  003662  0100               	movlb	0	; () banked
 11302  003664  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 11303  003666  0100               	movlb	0	; () banked
 11304  003668  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11305  00366A  0100               	movlb	0	; () banked
 11306  00366C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 11307  00366E  0100               	movlb	0	; () banked
 11308  003670  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11309  003672                     l5159:
 11310                           
 11311                           ; BSR set to: 0
 11312  003672  0100               	movlb	0	; () banked
 11313  003674  90D8               	bcf	status,0,c
 11314  003676  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11315  003678  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11316  00367A  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11317  00367C  3371               	rrcf	___llmod@divisor& (0+255),f,b
 11318                           
 11319                           ; BSR set to: 0
 11320  00367E  0100               	movlb	0	; () banked
 11321  003680  2F75               	decfsz	___llmod@counter& (0+255),f,b
 11322  003682  D7D5               	goto	l5155
 11323  003684                     l962:
 11324                           
 11325                           ; BSR set to: 0
 11326  003684  C06D  F06D         	movff	___llmod@dividend,?___llmod
 11327  003688  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 11328  00368C  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 11329  003690  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 11330                           
 11331                           ; BSR set to: 0
 11332  003694  0012               	return		;funcret
 11333  003696                     __end_of___llmod:
 11334                           	opt stack 0
 11335                           tblptru	equ	0xFF8
 11336                           tblptrh	equ	0xFF7
 11337                           tblptrl	equ	0xFF6
 11338                           tablat	equ	0xFF5
 11339                           prodh	equ	0xFF4
 11340                           prodl	equ	0xFF3
 11341                           indf0	equ	0xFEF
 11342                           postinc0	equ	0xFEE
 11343                           fsr0h	equ	0xFEA
 11344                           fsr0l	equ	0xFE9
 11345                           wreg	equ	0xFE8
 11346                           indf1	equ	0xFE7
 11347                           postdec1	equ	0xFE5
 11348                           fsr1h	equ	0xFE2
 11349                           fsr1l	equ	0xFE1
 11350                           indf2	equ	0xFDF
 11351                           postinc2	equ	0xFDE
 11352                           postdec2	equ	0xFDD
 11353                           fsr2h	equ	0xFDA
 11354                           fsr2l	equ	0xFD9
 11355                           status	equ	0xFD8
 11356                           
 11357 ;; *************** function ___lldiv *****************
 11358 ;; Defined at:
 11359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  dividend        4    0[BANK0 ] unsigned long 
 11362 ;;  divisor         4    4[BANK0 ] unsigned long 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  quotient        4    8[BANK0 ] unsigned long 
 11365 ;;  counter         1   12[BANK0 ] unsigned char 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  4    0[BANK0 ] unsigned long 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11375 ;;      Params:         0       8       0       0       0       0       0
 11376 ;;      Locals:         0       5       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0
 11378 ;;      Totals:         0      13       0       0       0       0       0
 11379 ;;Total ram usage:       13 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    3
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_sprintf
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text43
 11390  0033E2                     __ptext43:
 11391                           	opt stack 0
 11392  0033E2                     ___lldiv:
 11393                           	opt stack 24
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;incstack = 0
 11397  0033E2  0E00               	movlw	0
 11398  0033E4  0100               	movlb	0	; () banked
 11399  0033E6  6F68               	movwf	___lldiv@quotient& (0+255),b
 11400  0033E8  0E00               	movlw	0
 11401  0033EA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 11402  0033EC  0E00               	movlw	0
 11403  0033EE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11404  0033F0  0E00               	movlw	0
 11405  0033F2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11406                           
 11407                           ; BSR set to: 0
 11408  0033F4  0100               	movlb	0	; () banked
 11409  0033F6  5164               	movf	___lldiv@divisor& (0+255),w,b
 11410  0033F8  0100               	movlb	0	; () banked
 11411  0033FA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11412  0033FC  0100               	movlb	0	; () banked
 11413  0033FE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11414  003400  0100               	movlb	0	; () banked
 11415  003402  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11416  003404  B4D8               	btfsc	status,2,c
 11417  003406  D042               	goto	l952
 11418                           
 11419                           ; BSR set to: 0
 11420  003408  0E01               	movlw	1
 11421  00340A  0100               	movlb	0	; () banked
 11422  00340C  6F6C               	movwf	___lldiv@counter& (0+255),b
 11423  00340E  D008               	goto	l5133
 11424  003410                     l5131:
 11425                           
 11426                           ; BSR set to: 0
 11427  003410  0100               	movlb	0	; () banked
 11428  003412  90D8               	bcf	status,0,c
 11429  003414  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 11430  003416  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11431  003418  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11432  00341A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11433  00341C  0100               	movlb	0	; () banked
 11434  00341E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 11435  003420                     l5133:
 11436                           
 11437                           ; BSR set to: 0
 11438  003420  0100               	movlb	0	; () banked
 11439  003422  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11440  003424  D7F5               	goto	l5131
 11441  003426                     l5135:
 11442                           
 11443                           ; BSR set to: 0
 11444  003426  0100               	movlb	0	; () banked
 11445  003428  90D8               	bcf	status,0,c
 11446  00342A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 11447  00342C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11448  00342E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11449  003430  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11450                           
 11451                           ; BSR set to: 0
 11452  003432  0100               	movlb	0	; () banked
 11453  003434  5164               	movf	___lldiv@divisor& (0+255),w,b
 11454  003436  0100               	movlb	0	; () banked
 11455  003438  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 11456  00343A  0100               	movlb	0	; () banked
 11457  00343C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11458  00343E  0100               	movlb	0	; () banked
 11459  003440  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11460  003442  0100               	movlb	0	; () banked
 11461  003444  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11462  003446  0100               	movlb	0	; () banked
 11463  003448  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11464  00344A  0100               	movlb	0	; () banked
 11465  00344C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11466  00344E  0100               	movlb	0	; () banked
 11467  003450  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11468  003452  A0D8               	btfss	status,0,c
 11469  003454  D012               	goto	l5143
 11470                           
 11471                           ; BSR set to: 0
 11472  003456  0100               	movlb	0	; () banked
 11473  003458  5164               	movf	___lldiv@divisor& (0+255),w,b
 11474  00345A  0100               	movlb	0	; () banked
 11475  00345C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 11476  00345E  0100               	movlb	0	; () banked
 11477  003460  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11478  003462  0100               	movlb	0	; () banked
 11479  003464  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11480  003466  0100               	movlb	0	; () banked
 11481  003468  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11482  00346A  0100               	movlb	0	; () banked
 11483  00346C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11484  00346E  0100               	movlb	0	; () banked
 11485  003470  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11486  003472  0100               	movlb	0	; () banked
 11487  003474  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11488                           
 11489                           ; BSR set to: 0
 11490  003476  0100               	movlb	0	; () banked
 11491  003478  8168               	bsf	___lldiv@quotient& (0+255),0,b
 11492  00347A                     l5143:
 11493                           
 11494                           ; BSR set to: 0
 11495  00347A  0100               	movlb	0	; () banked
 11496  00347C  90D8               	bcf	status,0,c
 11497  00347E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11498  003480  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11499  003482  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11500  003484  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 11501                           
 11502                           ; BSR set to: 0
 11503  003486  0100               	movlb	0	; () banked
 11504  003488  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 11505  00348A  D7CD               	goto	l5135
 11506  00348C                     l952:
 11507                           
 11508                           ; BSR set to: 0
 11509  00348C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 11510  003490  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 11511  003494  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 11512  003498  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 11513                           
 11514                           ; BSR set to: 0
 11515  00349C  0012               	return		;funcret
 11516  00349E                     __end_of___lldiv:
 11517                           	opt stack 0
 11518                           tblptru	equ	0xFF8
 11519                           tblptrh	equ	0xFF7
 11520                           tblptrl	equ	0xFF6
 11521                           tablat	equ	0xFF5
 11522                           prodh	equ	0xFF4
 11523                           prodl	equ	0xFF3
 11524                           indf0	equ	0xFEF
 11525                           postinc0	equ	0xFEE
 11526                           fsr0h	equ	0xFEA
 11527                           fsr0l	equ	0xFE9
 11528                           wreg	equ	0xFE8
 11529                           indf1	equ	0xFE7
 11530                           postdec1	equ	0xFE5
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function ___fttol *****************
 11541 ;; Defined at:
 11542 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  f1              3   42[BANK0 ] float 
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;  lval            4   52[BANK0 ] unsigned long 
 11547 ;;  exp1            1   56[BANK0 ] unsigned char 
 11548 ;;  sign1           1   51[BANK0 ] unsigned char 
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  4   42[BANK0 ] long 
 11551 ;; Registers used:
 11552 ;;		wreg, status,2, status,0
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11558 ;;      Params:         0       4       0       0       0       0       0
 11559 ;;      Locals:         0       6       0       0       0       0       0
 11560 ;;      Temps:          0       5       0       0       0       0       0
 11561 ;;      Totals:         0      15       0       0       0       0       0
 11562 ;;Total ram usage:       15 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:    3
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_util_getSolarCurrent
 11569 ;;		_util_getBatteryCurrent
 11570 ;;		_sprintf
 11571 ;; This function uses a non-reentrant model
 11572 ;;
 11573                           
 11574                           	psect	text44
 11575  002CA8                     __ptext44:
 11576                           	opt stack 0
 11577  002CA8                     ___fttol:
 11578                           	opt stack 25
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;incstack = 0
 11582  002CA8  C08C  F08E         	movff	___fttol@f1+2,??___fttol
 11583  002CAC  0100               	movlb	0	; () banked
 11584  002CAE  6B8F               	clrf	(??___fttol+1)& (0+255),b
 11585  002CB0  6B90               	clrf	(??___fttol+2)& (0+255),b
 11586  002CB2  0100               	movlb	0	; () banked
 11587  002CB4  358B               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11588  002CB6  0100               	movlb	0	; () banked
 11589  002CB8  378E               	rlcf	??___fttol& (0+255),f,b
 11590  002CBA  E301               	bnc	u3041
 11591  002CBC  818F               	bsf	(??___fttol+1)& (0+255),0,b
 11592  002CBE                     u3041:
 11593  002CBE  0100               	movlb	0	; () banked
 11594  002CC0  518E               	movf	??___fttol& (0+255),w,b
 11595  002CC2  0100               	movlb	0	; () banked
 11596  002CC4  6F98               	movwf	___fttol@exp1& (0+255),b
 11597  002CC6  0100               	movlb	0	; () banked
 11598  002CC8  5198               	movf	___fttol@exp1& (0+255),w,b
 11599  002CCA  A4D8               	btfss	status,2,c
 11600  002CCC  D00A               	goto	l3575
 11601                           
 11602                           ; BSR set to: 0
 11603  002CCE  0E00               	movlw	0
 11604  002CD0  0100               	movlb	0	; () banked
 11605  002CD2  6F8A               	movwf	?___fttol& (0+255),b
 11606  002CD4  0E00               	movlw	0
 11607  002CD6  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11608  002CD8  0E00               	movlw	0
 11609  002CDA  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11610  002CDC  0E00               	movlw	0
 11611  002CDE  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11612                           
 11613                           ; BSR set to: 0
 11614  002CE0  0012               	return	
 11615  002CE2                     l3575:
 11616                           
 11617                           ; BSR set to: 0
 11618  002CE2  0E17               	movlw	23
 11619  002CE4  0100               	movlb	0	; () banked
 11620  002CE6  6F8E               	movwf	??___fttol& (0+255),b
 11621  002CE8  C08A  F08F         	movff	___fttol@f1,??___fttol+1
 11622  002CEC  C08B  F090         	movff	___fttol@f1+1,??___fttol+2
 11623  002CF0  C08C  F091         	movff	___fttol@f1+2,??___fttol+3
 11624  002CF4  0100               	movlb	0	; () banked
 11625  002CF6  298E               	incf	??___fttol& (0+255),w,b
 11626  002CF8  0100               	movlb	0	; () banked
 11627  002CFA  6F92               	movwf	(??___fttol+4)& (0+255),b
 11628  002CFC  D005               	goto	u3060
 11629  002CFE                     u3065:
 11630  002CFE  0100               	movlb	0	; () banked
 11631  002D00  90D8               	bcf	status,0,c
 11632  002D02  3391               	rrcf	(??___fttol+3)& (0+255),f,b
 11633  002D04  3390               	rrcf	(??___fttol+2)& (0+255),f,b
 11634  002D06  338F               	rrcf	(??___fttol+1)& (0+255),f,b
 11635  002D08                     u3060:
 11636  002D08  0100               	movlb	0	; () banked
 11637  002D0A  2F92               	decfsz	(??___fttol+4)& (0+255),f,b
 11638  002D0C  D7F8               	goto	u3065
 11639  002D0E  0100               	movlb	0	; () banked
 11640  002D10  518F               	movf	(??___fttol+1)& (0+255),w,b
 11641  002D12  0100               	movlb	0	; () banked
 11642  002D14  6F93               	movwf	___fttol@sign1& (0+255),b
 11643                           
 11644                           ; BSR set to: 0
 11645  002D16  0100               	movlb	0	; () banked
 11646  002D18  8F8B               	bsf	(___fttol@f1+1)& (0+255),7,b
 11647                           
 11648                           ; BSR set to: 0
 11649  002D1A  0EFF               	movlw	255
 11650  002D1C  0100               	movlb	0	; () banked
 11651  002D1E  178A               	andwf	___fttol@f1& (0+255),f,b
 11652  002D20  0EFF               	movlw	255
 11653  002D22  0100               	movlb	0	; () banked
 11654  002D24  178B               	andwf	(___fttol@f1+1)& (0+255),f,b
 11655  002D26  0E00               	movlw	0
 11656  002D28  0100               	movlb	0	; () banked
 11657  002D2A  178C               	andwf	(___fttol@f1+2)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660  002D2C  0100               	movlb	0	; () banked
 11661  002D2E  518A               	movf	___fttol@f1& (0+255),w,b
 11662  002D30  0100               	movlb	0	; () banked
 11663  002D32  6F94               	movwf	___fttol@lval& (0+255),b
 11664  002D34  0100               	movlb	0	; () banked
 11665  002D36  518B               	movf	(___fttol@f1+1)& (0+255),w,b
 11666  002D38  0100               	movlb	0	; () banked
 11667  002D3A  6F95               	movwf	(___fttol@lval+1)& (0+255),b
 11668  002D3C  0100               	movlb	0	; () banked
 11669  002D3E  518C               	movf	(___fttol@f1+2)& (0+255),w,b
 11670  002D40  0100               	movlb	0	; () banked
 11671  002D42  6F96               	movwf	(___fttol@lval+2)& (0+255),b
 11672  002D44  0100               	movlb	0	; () banked
 11673  002D46  6B97               	clrf	(___fttol@lval+3)& (0+255),b
 11674                           
 11675                           ; BSR set to: 0
 11676  002D48  0E8E               	movlw	142
 11677  002D4A  0100               	movlb	0	; () banked
 11678  002D4C  5F98               	subwf	___fttol@exp1& (0+255),f,b
 11679                           
 11680                           ; BSR set to: 0
 11681  002D4E  0100               	movlb	0	; () banked
 11682  002D50  AF98               	btfss	___fttol@exp1& (0+255),7,b
 11683  002D52  D01A               	goto	l3597
 11684                           
 11685                           ; BSR set to: 0
 11686  002D54  0100               	movlb	0	; () banked
 11687  002D56  5198               	movf	___fttol@exp1& (0+255),w,b
 11688  002D58  0A80               	xorlw	128
 11689  002D5A  0F8F               	addlw	143
 11690  002D5C  B0D8               	btfsc	status,0,c
 11691  002D5E  D00A               	goto	l3593
 11692                           
 11693                           ; BSR set to: 0
 11694  002D60  0E00               	movlw	0
 11695  002D62  0100               	movlb	0	; () banked
 11696  002D64  6F8A               	movwf	?___fttol& (0+255),b
 11697  002D66  0E00               	movlw	0
 11698  002D68  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11699  002D6A  0E00               	movlw	0
 11700  002D6C  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11701  002D6E  0E00               	movlw	0
 11702  002D70  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11703                           
 11704                           ; BSR set to: 0
 11705  002D72  0012               	return	
 11706  002D74                     l3593:
 11707                           
 11708                           ; BSR set to: 0
 11709  002D74  0100               	movlb	0	; () banked
 11710  002D76  90D8               	bcf	status,0,c
 11711  002D78  3397               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11712  002D7A  3396               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11713  002D7C  3395               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11714  002D7E  3394               	rrcf	___fttol@lval& (0+255),f,b
 11715                           
 11716                           ; BSR set to: 0
 11717  002D80  0100               	movlb	0	; () banked
 11718  002D82  3F98               	incfsz	___fttol@exp1& (0+255),f,b
 11719  002D84  D7F7               	goto	l3593
 11720                           
 11721                           ; BSR set to: 0
 11722  002D86  D01B               	goto	l3607
 11723  002D88                     l3597:
 11724                           
 11725                           ; BSR set to: 0
 11726  002D88  0E17               	movlw	23
 11727  002D8A  0100               	movlb	0	; () banked
 11728  002D8C  6598               	cpfsgt	___fttol@exp1& (0+255),b
 11729  002D8E  D012               	goto	l3605
 11730                           
 11731                           ; BSR set to: 0
 11732  002D90  0E00               	movlw	0
 11733  002D92  0100               	movlb	0	; () banked
 11734  002D94  6F8A               	movwf	?___fttol& (0+255),b
 11735  002D96  0E00               	movlw	0
 11736  002D98  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11737  002D9A  0E00               	movlw	0
 11738  002D9C  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11739  002D9E  0E00               	movlw	0
 11740  002DA0  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11741                           
 11742                           ; BSR set to: 0
 11743  002DA2  0012               	return	
 11744  002DA4                     l3603:
 11745                           
 11746                           ; BSR set to: 0
 11747  002DA4  0100               	movlb	0	; () banked
 11748  002DA6  90D8               	bcf	status,0,c
 11749  002DA8  3794               	rlcf	___fttol@lval& (0+255),f,b
 11750  002DAA  3795               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11751  002DAC  3796               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11752  002DAE  3797               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11753  002DB0  0100               	movlb	0	; () banked
 11754  002DB2  0798               	decf	___fttol@exp1& (0+255),f,b
 11755  002DB4                     l3605:
 11756                           
 11757                           ; BSR set to: 0
 11758  002DB4  0100               	movlb	0	; () banked
 11759  002DB6  5198               	movf	___fttol@exp1& (0+255),w,b
 11760  002DB8  0100               	movlb	0	; () banked
 11761  002DBA  A4D8               	btfss	status,2,c
 11762  002DBC  D7F3               	goto	l3603
 11763  002DBE                     l3607:
 11764                           
 11765                           ; BSR set to: 0
 11766  002DBE  0100               	movlb	0	; () banked
 11767  002DC0  5193               	movf	___fttol@sign1& (0+255),w,b
 11768  002DC2  0100               	movlb	0	; () banked
 11769  002DC4  B4D8               	btfsc	status,2,c
 11770  002DC6  D009               	goto	l3611
 11771                           
 11772                           ; BSR set to: 0
 11773  002DC8  0100               	movlb	0	; () banked
 11774  002DCA  1F97               	comf	(___fttol@lval+3)& (0+255),f,b
 11775  002DCC  1F96               	comf	(___fttol@lval+2)& (0+255),f,b
 11776  002DCE  1F95               	comf	(___fttol@lval+1)& (0+255),f,b
 11777  002DD0  6D94               	negf	___fttol@lval& (0+255),b
 11778  002DD2  0E00               	movlw	0
 11779  002DD4  2395               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11780  002DD6  2396               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11781  002DD8  2397               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11782  002DDA                     l3611:
 11783                           
 11784                           ; BSR set to: 0
 11785  002DDA  C094  F08A         	movff	___fttol@lval,?___fttol
 11786  002DDE  C095  F08B         	movff	___fttol@lval+1,?___fttol+1
 11787  002DE2  C096  F08C         	movff	___fttol@lval+2,?___fttol+2
 11788  002DE6  C097  F08D         	movff	___fttol@lval+3,?___fttol+3
 11789  002DEA  0012               	return	
 11790  002DEC                     __end_of___fttol:
 11791                           	opt stack 0
 11792                           tblptru	equ	0xFF8
 11793                           tblptrh	equ	0xFF7
 11794                           tblptrl	equ	0xFF6
 11795                           tablat	equ	0xFF5
 11796                           prodh	equ	0xFF4
 11797                           prodl	equ	0xFF3
 11798                           indf0	equ	0xFEF
 11799                           postinc0	equ	0xFEE
 11800                           fsr0h	equ	0xFEA
 11801                           fsr0l	equ	0xFE9
 11802                           wreg	equ	0xFE8
 11803                           indf1	equ	0xFE7
 11804                           postdec1	equ	0xFE5
 11805                           fsr1h	equ	0xFE2
 11806                           fsr1l	equ	0xFE1
 11807                           indf2	equ	0xFDF
 11808                           postinc2	equ	0xFDE
 11809                           postdec2	equ	0xFDD
 11810                           fsr2h	equ	0xFDA
 11811                           fsr2l	equ	0xFD9
 11812                           status	equ	0xFD8
 11813                           
 11814 ;; *************** function ___ftsub *****************
 11815 ;; Defined at:
 11816 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  f1              3   57[BANK0 ] float 
 11819 ;;  f2              3   60[BANK0 ] float 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  3   57[BANK0 ] float 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0, cstack
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11831 ;;      Params:         0       6       0       0       0       0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0
 11834 ;;      Totals:         0       6       0       0       0       0       0
 11835 ;;Total ram usage:        6 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:    5
 11838 ;; This function calls:
 11839 ;;		___ftadd
 11840 ;; This function is called by:
 11841 ;;		_sprintf
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text45
 11846  003994                     __ptext45:
 11847                           	opt stack 0
 11848  003994                     ___ftsub:
 11849                           	opt stack 22
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;incstack = 0
 11853  003994  0100               	movlb	0	; () banked
 11854  003996  519C               	movf	___ftsub@f2& (0+255),w,b
 11855  003998  0100               	movlb	0	; () banked
 11856  00399A  119D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11857  00399C  0100               	movlb	0	; () banked
 11858  00399E  119E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11859  0039A0  B4D8               	btfsc	status,2,c
 11860  0039A2  D009               	goto	l5099
 11861                           
 11862                           ; BSR set to: 0
 11863  0039A4  0E00               	movlw	0
 11864  0039A6  0100               	movlb	0	; () banked
 11865  0039A8  1B9C               	xorwf	___ftsub@f2& (0+255),f,b
 11866  0039AA  0E00               	movlw	0
 11867  0039AC  0100               	movlb	0	; () banked
 11868  0039AE  1B9D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11869  0039B0  0E80               	movlw	128
 11870  0039B2  0100               	movlb	0	; () banked
 11871  0039B4  1B9E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11872  0039B6                     l5099:
 11873                           
 11874                           ; BSR set to: 0
 11875  0039B6  C099  F08D         	movff	___ftsub@f1,___ftadd@f1
 11876  0039BA  C09A  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
 11877  0039BE  C09B  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
 11878  0039C2  C09C  F090         	movff	___ftsub@f2,___ftadd@f2
 11879  0039C6  C09D  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
 11880  0039CA  C09E  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
 11881  0039CE  EC9C  F00F         	call	___ftadd	;wreg free
 11882  0039D2  C08D  F099         	movff	?___ftadd,?___ftsub
 11883  0039D6  C08E  F09A         	movff	?___ftadd+1,?___ftsub+1
 11884  0039DA  C08F  F09B         	movff	?___ftadd+2,?___ftsub+2
 11885  0039DE  0012               	return	
 11886  0039E0                     __end_of___ftsub:
 11887                           	opt stack 0
 11888                           tblptru	equ	0xFF8
 11889                           tblptrh	equ	0xFF7
 11890                           tblptrl	equ	0xFF6
 11891                           tablat	equ	0xFF5
 11892                           prodh	equ	0xFF4
 11893                           prodl	equ	0xFF3
 11894                           indf0	equ	0xFEF
 11895                           postinc0	equ	0xFEE
 11896                           fsr0h	equ	0xFEA
 11897                           fsr0l	equ	0xFE9
 11898                           wreg	equ	0xFE8
 11899                           indf1	equ	0xFE7
 11900                           postdec1	equ	0xFE5
 11901                           fsr1h	equ	0xFE2
 11902                           fsr1l	equ	0xFE1
 11903                           indf2	equ	0xFDF
 11904                           postinc2	equ	0xFDE
 11905                           postdec2	equ	0xFDD
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8
 11909                           
 11910 ;; *************** function ___ftadd *****************
 11911 ;; Defined at:
 11912 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  f1              3   45[BANK0 ] float 
 11915 ;;  f2              3   48[BANK0 ] float 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  exp1            1   56[BANK0 ] unsigned char 
 11918 ;;  exp2            1   55[BANK0 ] unsigned char 
 11919 ;;  sign            1   54[BANK0 ] unsigned char 
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  3   45[BANK0 ] float 
 11922 ;; Registers used:
 11923 ;;		wreg, status,2, status,0, cstack
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11929 ;;      Params:         0       6       0       0       0       0       0
 11930 ;;      Locals:         0       3       0       0       0       0       0
 11931 ;;      Temps:          0       3       0       0       0       0       0
 11932 ;;      Totals:         0      12       0       0       0       0       0
 11933 ;;Total ram usage:       12 bytes
 11934 ;; Hardware stack levels used:    1
 11935 ;; Hardware stack levels required when called:    4
 11936 ;; This function calls:
 11937 ;;		___ftpack
 11938 ;; This function is called by:
 11939 ;;		_util_getTemperature
 11940 ;;		_sprintf
 11941 ;;		___ftsub
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text46
 11946  001F38                     __ptext46:
 11947                           	opt stack 0
 11948  001F38                     ___ftadd:
 11949                           	opt stack 24
 11950                           
 11951                           ;incstack = 0
 11952  001F38  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
 11953  001F3C  0100               	movlb	0	; () banked
 11954  001F3E  6B94               	clrf	(??___ftadd+1)& (0+255),b
 11955  001F40  6B95               	clrf	(??___ftadd+2)& (0+255),b
 11956  001F42  0100               	movlb	0	; () banked
 11957  001F44  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11958  001F46  0100               	movlb	0	; () banked
 11959  001F48  3793               	rlcf	??___ftadd& (0+255),f,b
 11960  001F4A  E301               	bnc	u4451
 11961  001F4C  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 11962  001F4E                     u4451:
 11963  001F4E  0100               	movlb	0	; () banked
 11964  001F50  5193               	movf	??___ftadd& (0+255),w,b
 11965  001F52  0100               	movlb	0	; () banked
 11966  001F54  6F98               	movwf	___ftadd@exp1& (0+255),b
 11967  001F56  C092  F093         	movff	___ftadd@f2+2,??___ftadd
 11968  001F5A  0100               	movlb	0	; () banked
 11969  001F5C  6B94               	clrf	(??___ftadd+1)& (0+255),b
 11970  001F5E  6B95               	clrf	(??___ftadd+2)& (0+255),b
 11971  001F60  0100               	movlb	0	; () banked
 11972  001F62  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11973  001F64  0100               	movlb	0	; () banked
 11974  001F66  3793               	rlcf	??___ftadd& (0+255),f,b
 11975  001F68  E301               	bnc	u4461
 11976  001F6A  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 11977  001F6C                     u4461:
 11978  001F6C  0100               	movlb	0	; () banked
 11979  001F6E  5193               	movf	??___ftadd& (0+255),w,b
 11980  001F70  0100               	movlb	0	; () banked
 11981  001F72  6F97               	movwf	___ftadd@exp2& (0+255),b
 11982                           
 11983                           ; BSR set to: 0
 11984  001F74  0100               	movlb	0	; () banked
 11985  001F76  5198               	movf	___ftadd@exp1& (0+255),w,b
 11986  001F78  0100               	movlb	0	; () banked
 11987  001F7A  B4D8               	btfsc	status,2,c
 11988  001F7C  D011               	goto	l828
 11989                           
 11990                           ; BSR set to: 0
 11991  001F7E  0100               	movlb	0	; () banked
 11992  001F80  5197               	movf	___ftadd@exp2& (0+255),w,b
 11993  001F82  0100               	movlb	0	; () banked
 11994  001F84  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 11995  001F86  B0D8               	btfsc	status,0,c
 11996  001F88  D012               	goto	l4647
 11997                           
 11998                           ; BSR set to: 0
 11999  001F8A  0100               	movlb	0	; () banked
 12000  001F8C  5198               	movf	___ftadd@exp1& (0+255),w,b
 12001  001F8E  0800               	sublw	0
 12002  001F90  0100               	movlb	0	; () banked
 12003  001F92  2597               	addwf	___ftadd@exp2& (0+255),w,b
 12004  001F94  0100               	movlb	0	; () banked
 12005  001F96  6F93               	movwf	??___ftadd& (0+255),b
 12006  001F98  0E18               	movlw	24
 12007  001F9A  0100               	movlb	0	; () banked
 12008  001F9C  6593               	cpfsgt	??___ftadd& (0+255),b
 12009  001F9E  D007               	goto	l4647
 12010  001FA0                     l828:
 12011                           
 12012                           ; BSR set to: 0
 12013  001FA0  C090  F08D         	movff	___ftadd@f2,?___ftadd
 12014  001FA4  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
 12015  001FA8  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
 12016  001FAC  0012               	return	
 12017  001FAE                     l4647:
 12018                           
 12019                           ; BSR set to: 0
 12020  001FAE  0100               	movlb	0	; () banked
 12021  001FB0  5197               	movf	___ftadd@exp2& (0+255),w,b
 12022  001FB2  0100               	movlb	0	; () banked
 12023  001FB4  B4D8               	btfsc	status,2,c
 12024  001FB6  D011               	goto	l832
 12025                           
 12026                           ; BSR set to: 0
 12027  001FB8  0100               	movlb	0	; () banked
 12028  001FBA  5198               	movf	___ftadd@exp1& (0+255),w,b
 12029  001FBC  0100               	movlb	0	; () banked
 12030  001FBE  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 12031  001FC0  B0D8               	btfsc	status,0,c
 12032  001FC2  D012               	goto	l4653
 12033                           
 12034                           ; BSR set to: 0
 12035  001FC4  0100               	movlb	0	; () banked
 12036  001FC6  5197               	movf	___ftadd@exp2& (0+255),w,b
 12037  001FC8  0800               	sublw	0
 12038  001FCA  0100               	movlb	0	; () banked
 12039  001FCC  2598               	addwf	___ftadd@exp1& (0+255),w,b
 12040  001FCE  0100               	movlb	0	; () banked
 12041  001FD0  6F93               	movwf	??___ftadd& (0+255),b
 12042  001FD2  0E18               	movlw	24
 12043  001FD4  0100               	movlb	0	; () banked
 12044  001FD6  6593               	cpfsgt	??___ftadd& (0+255),b
 12045  001FD8  D007               	goto	l4653
 12046  001FDA                     l832:
 12047                           
 12048                           ; BSR set to: 0
 12049  001FDA  C08D  F08D         	movff	___ftadd@f1,?___ftadd
 12050  001FDE  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
 12051  001FE2  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
 12052  001FE6  0012               	return	
 12053  001FE8                     l4653:
 12054                           
 12055                           ; BSR set to: 0
 12056  001FE8  0E06               	movlw	6
 12057  001FEA  0100               	movlb	0	; () banked
 12058  001FEC  6F96               	movwf	___ftadd@sign& (0+255),b
 12059                           
 12060                           ; BSR set to: 0
 12061  001FEE  0100               	movlb	0	; () banked
 12062  001FF0  AF8F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 12063  001FF2  D002               	goto	l4659
 12064                           
 12065                           ; BSR set to: 0
 12066  001FF4  0100               	movlb	0	; () banked
 12067  001FF6  8F96               	bsf	___ftadd@sign& (0+255),7,b
 12068  001FF8                     l4659:
 12069                           
 12070                           ; BSR set to: 0
 12071  001FF8  0100               	movlb	0	; () banked
 12072  001FFA  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12073  001FFC  D002               	goto	l834
 12074                           
 12075                           ; BSR set to: 0
 12076  001FFE  0100               	movlb	0	; () banked
 12077  002000  8D96               	bsf	___ftadd@sign& (0+255),6,b
 12078  002002                     l834:
 12079                           
 12080                           ; BSR set to: 0
 12081  002002  0100               	movlb	0	; () banked
 12082  002004  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12083                           
 12084                           ; BSR set to: 0
 12085  002006  0EFF               	movlw	255
 12086  002008  0100               	movlb	0	; () banked
 12087  00200A  178D               	andwf	___ftadd@f1& (0+255),f,b
 12088  00200C  0EFF               	movlw	255
 12089  00200E  0100               	movlb	0	; () banked
 12090  002010  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12091  002012  0E00               	movlw	0
 12092  002014  0100               	movlb	0	; () banked
 12093  002016  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12094  002018  0100               	movlb	0	; () banked
 12095  00201A  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12096                           
 12097                           ; BSR set to: 0
 12098  00201C  0EFF               	movlw	255
 12099  00201E  0100               	movlb	0	; () banked
 12100  002020  1790               	andwf	___ftadd@f2& (0+255),f,b
 12101  002022  0EFF               	movlw	255
 12102  002024  0100               	movlb	0	; () banked
 12103  002026  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12104  002028  0E00               	movlw	0
 12105  00202A  0100               	movlb	0	; () banked
 12106  00202C  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12107                           
 12108                           ; BSR set to: 0
 12109  00202E  0100               	movlb	0	; () banked
 12110  002030  5197               	movf	___ftadd@exp2& (0+255),w,b
 12111  002032  0100               	movlb	0	; () banked
 12112  002034  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 12113  002036  B0D8               	btfsc	status,0,c
 12114  002038  D025               	goto	l4679
 12115  00203A                     l4669:
 12116                           
 12117                           ; BSR set to: 0
 12118  00203A  0100               	movlb	0	; () banked
 12119  00203C  90D8               	bcf	status,0,c
 12120  00203E  3790               	rlcf	___ftadd@f2& (0+255),f,b
 12121  002040  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12122  002042  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12123  002044  0100               	movlb	0	; () banked
 12124  002046  0797               	decf	___ftadd@exp2& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127  002048  0100               	movlb	0	; () banked
 12128  00204A  5198               	movf	___ftadd@exp1& (0+255),w,b
 12129  00204C  0100               	movlb	0	; () banked
 12130  00204E  1997               	xorwf	___ftadd@exp2& (0+255),w,b
 12131  002050  B4D8               	btfsc	status,2,c
 12132  002052  D011               	goto	l4677
 12133                           
 12134                           ; BSR set to: 0
 12135  002054  0100               	movlb	0	; () banked
 12136  002056  0796               	decf	___ftadd@sign& (0+255),f,b
 12137  002058  C096  F093         	movff	___ftadd@sign,??___ftadd
 12138  00205C  0E07               	movlw	7
 12139  00205E  0100               	movlb	0	; () banked
 12140  002060  1793               	andwf	??___ftadd& (0+255),f,b
 12141  002062  B4D8               	btfsc	status,2,c
 12142  002064  D008               	goto	l4677
 12143  002066  D7E9               	goto	l4669
 12144  002068                     l4675:
 12145                           
 12146                           ; BSR set to: 0
 12147  002068  0100               	movlb	0	; () banked
 12148  00206A  90D8               	bcf	status,0,c
 12149  00206C  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12150  00206E  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12151  002070  338D               	rrcf	___ftadd@f1& (0+255),f,b
 12152  002072  0100               	movlb	0	; () banked
 12153  002074  2B98               	incf	___ftadd@exp1& (0+255),f,b
 12154  002076                     l4677:
 12155                           
 12156                           ; BSR set to: 0
 12157  002076  0100               	movlb	0	; () banked
 12158  002078  5197               	movf	___ftadd@exp2& (0+255),w,b
 12159  00207A  0100               	movlb	0	; () banked
 12160  00207C  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 12161  00207E  B4D8               	btfsc	status,2,c
 12162  002080  D02B               	goto	l843
 12163  002082  D7F2               	goto	l4675
 12164  002084                     l4679:
 12165                           
 12166                           ; BSR set to: 0
 12167  002084  0100               	movlb	0	; () banked
 12168  002086  5198               	movf	___ftadd@exp1& (0+255),w,b
 12169  002088  0100               	movlb	0	; () banked
 12170  00208A  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 12171  00208C  B0D8               	btfsc	status,0,c
 12172  00208E  D024               	goto	l843
 12173  002090                     l4681:
 12174                           
 12175                           ; BSR set to: 0
 12176  002090  0100               	movlb	0	; () banked
 12177  002092  90D8               	bcf	status,0,c
 12178  002094  378D               	rlcf	___ftadd@f1& (0+255),f,b
 12179  002096  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12180  002098  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12181  00209A  0100               	movlb	0	; () banked
 12182  00209C  0798               	decf	___ftadd@exp1& (0+255),f,b
 12183                           
 12184                           ; BSR set to: 0
 12185  00209E  0100               	movlb	0	; () banked
 12186  0020A0  5198               	movf	___ftadd@exp1& (0+255),w,b
 12187  0020A2  0100               	movlb	0	; () banked
 12188  0020A4  1997               	xorwf	___ftadd@exp2& (0+255),w,b
 12189  0020A6  B4D8               	btfsc	status,2,c
 12190  0020A8  D011               	goto	l4689
 12191                           
 12192                           ; BSR set to: 0
 12193  0020AA  0100               	movlb	0	; () banked
 12194  0020AC  0796               	decf	___ftadd@sign& (0+255),f,b
 12195  0020AE  C096  F093         	movff	___ftadd@sign,??___ftadd
 12196  0020B2  0E07               	movlw	7
 12197  0020B4  0100               	movlb	0	; () banked
 12198  0020B6  1793               	andwf	??___ftadd& (0+255),f,b
 12199  0020B8  B4D8               	btfsc	status,2,c
 12200  0020BA  D008               	goto	l4689
 12201  0020BC  D7E9               	goto	l4681
 12202  0020BE                     l4687:
 12203                           
 12204                           ; BSR set to: 0
 12205  0020BE  0100               	movlb	0	; () banked
 12206  0020C0  90D8               	bcf	status,0,c
 12207  0020C2  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12208  0020C4  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12209  0020C6  3390               	rrcf	___ftadd@f2& (0+255),f,b
 12210  0020C8  0100               	movlb	0	; () banked
 12211  0020CA  2B97               	incf	___ftadd@exp2& (0+255),f,b
 12212  0020CC                     l4689:
 12213                           
 12214                           ; BSR set to: 0
 12215  0020CC  0100               	movlb	0	; () banked
 12216  0020CE  5197               	movf	___ftadd@exp2& (0+255),w,b
 12217  0020D0  0100               	movlb	0	; () banked
 12218  0020D2  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 12219  0020D4  A4D8               	btfss	status,2,c
 12220  0020D6  D7F3               	goto	l4687
 12221  0020D8                     l843:
 12222                           
 12223                           ; BSR set to: 0
 12224  0020D8  0100               	movlb	0	; () banked
 12225  0020DA  AF96               	btfss	___ftadd@sign& (0+255),7,b
 12226  0020DC  D012               	goto	l852
 12227                           
 12228                           ; BSR set to: 0
 12229  0020DE  0EFF               	movlw	255
 12230  0020E0  0100               	movlb	0	; () banked
 12231  0020E2  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
 12232  0020E4  0EFF               	movlw	255
 12233  0020E6  0100               	movlb	0	; () banked
 12234  0020E8  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12235  0020EA  0EFF               	movlw	255
 12236  0020EC  0100               	movlb	0	; () banked
 12237  0020EE  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12238  0020F0  0E01               	movlw	1
 12239  0020F2  0100               	movlb	0	; () banked
 12240  0020F4  278D               	addwf	___ftadd@f1& (0+255),f,b
 12241  0020F6  0E00               	movlw	0
 12242  0020F8  0100               	movlb	0	; () banked
 12243  0020FA  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12244  0020FC  0E00               	movlw	0
 12245  0020FE  0100               	movlb	0	; () banked
 12246  002100  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12247  002102                     l852:
 12248                           
 12249                           ; BSR set to: 0
 12250  002102  0100               	movlb	0	; () banked
 12251  002104  AD96               	btfss	___ftadd@sign& (0+255),6,b
 12252  002106  D012               	goto	l4695
 12253                           
 12254                           ; BSR set to: 0
 12255  002108  0EFF               	movlw	255
 12256  00210A  0100               	movlb	0	; () banked
 12257  00210C  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 12258  00210E  0EFF               	movlw	255
 12259  002110  0100               	movlb	0	; () banked
 12260  002112  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12261  002114  0EFF               	movlw	255
 12262  002116  0100               	movlb	0	; () banked
 12263  002118  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12264  00211A  0E01               	movlw	1
 12265  00211C  0100               	movlb	0	; () banked
 12266  00211E  2790               	addwf	___ftadd@f2& (0+255),f,b
 12267  002120  0E00               	movlw	0
 12268  002122  0100               	movlb	0	; () banked
 12269  002124  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12270  002126  0E00               	movlw	0
 12271  002128  0100               	movlb	0	; () banked
 12272  00212A  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12273  00212C                     l4695:
 12274                           
 12275                           ; BSR set to: 0
 12276  00212C  0E00               	movlw	0
 12277  00212E  0100               	movlb	0	; () banked
 12278  002130  6F96               	movwf	___ftadd@sign& (0+255),b
 12279                           
 12280                           ; BSR set to: 0
 12281  002132  0100               	movlb	0	; () banked
 12282  002134  518D               	movf	___ftadd@f1& (0+255),w,b
 12283  002136  0100               	movlb	0	; () banked
 12284  002138  2790               	addwf	___ftadd@f2& (0+255),f,b
 12285  00213A  0100               	movlb	0	; () banked
 12286  00213C  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
 12287  00213E  0100               	movlb	0	; () banked
 12288  002140  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12289  002142  0100               	movlb	0	; () banked
 12290  002144  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
 12291  002146  0100               	movlb	0	; () banked
 12292  002148  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12293                           
 12294                           ; BSR set to: 0
 12295  00214A  0100               	movlb	0	; () banked
 12296  00214C  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12297  00214E  D015               	goto	l4705
 12298                           
 12299                           ; BSR set to: 0
 12300  002150  0EFF               	movlw	255
 12301  002152  0100               	movlb	0	; () banked
 12302  002154  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 12303  002156  0EFF               	movlw	255
 12304  002158  0100               	movlb	0	; () banked
 12305  00215A  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12306  00215C  0EFF               	movlw	255
 12307  00215E  0100               	movlb	0	; () banked
 12308  002160  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12309  002162  0E01               	movlw	1
 12310  002164  0100               	movlb	0	; () banked
 12311  002166  2790               	addwf	___ftadd@f2& (0+255),f,b
 12312  002168  0E00               	movlw	0
 12313  00216A  0100               	movlb	0	; () banked
 12314  00216C  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12315  00216E  0E00               	movlw	0
 12316  002170  0100               	movlb	0	; () banked
 12317  002172  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12318                           
 12319                           ; BSR set to: 0
 12320  002174  0E01               	movlw	1
 12321  002176  0100               	movlb	0	; () banked
 12322  002178  6F96               	movwf	___ftadd@sign& (0+255),b
 12323  00217A                     l4705:
 12324                           
 12325                           ; BSR set to: 0
 12326  00217A  C090  F060         	movff	___ftadd@f2,___ftpack@arg
 12327  00217E  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 12328  002182  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 12329  002186  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
 12330  00218A  C096  F064         	movff	___ftadd@sign,___ftpack@sign
 12331  00218E  EC7F  F017         	call	___ftpack	;wreg free
 12332  002192  C060  F08D         	movff	?___ftpack,?___ftadd
 12333  002196  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
 12334  00219A  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
 12335  00219E  0012               	return	
 12336  0021A0                     __end_of___ftadd:
 12337                           	opt stack 0
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           prodh	equ	0xFF4
 12343                           prodl	equ	0xFF3
 12344                           indf0	equ	0xFEF
 12345                           postinc0	equ	0xFEE
 12346                           fsr0h	equ	0xFEA
 12347                           fsr0l	equ	0xFE9
 12348                           wreg	equ	0xFE8
 12349                           indf1	equ	0xFE7
 12350                           postdec1	equ	0xFE5
 12351                           fsr1h	equ	0xFE2
 12352                           fsr1l	equ	0xFE1
 12353                           indf2	equ	0xFDF
 12354                           postinc2	equ	0xFDE
 12355                           postdec2	equ	0xFDD
 12356                           fsr2h	equ	0xFDA
 12357                           fsr2l	equ	0xFD9
 12358                           status	equ	0xFD8
 12359                           
 12360 ;; *************** function ___ftpack *****************
 12361 ;; Defined at:
 12362 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  arg             3    0[BANK0 ] unsigned um
 12365 ;;  exp             1    3[BANK0 ] unsigned char 
 12366 ;;  sign            1    4[BANK0 ] unsigned char 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  3    0[BANK0 ] float 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2, status,0
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12378 ;;      Params:         0       5       0       0       0       0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0
 12380 ;;      Temps:          0       3       0       0       0       0       0
 12381 ;;      Totals:         0       8       0       0       0       0       0
 12382 ;;Total ram usage:        8 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    3
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		___awtoft
 12389 ;;		___ftadd
 12390 ;;		___ftdiv
 12391 ;;		___ftmul
 12392 ;;		___lltoft
 12393 ;;		___lwtoft
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	text47
 12398  002EFE                     __ptext47:
 12399                           	opt stack 0
 12400  002EFE                     ___ftpack:
 12401                           	opt stack 24
 12402                           
 12403                           ;incstack = 0
 12404  002EFE  0100               	movlb	0	; () banked
 12405  002F00  5163               	movf	___ftpack@exp& (0+255),w,b
 12406  002F02  0100               	movlb	0	; () banked
 12407  002F04  B4D8               	btfsc	status,2,c
 12408  002F06  D008               	goto	l4569
 12409                           
 12410                           ; BSR set to: 0
 12411  002F08  0100               	movlb	0	; () banked
 12412  002F0A  5160               	movf	___ftpack@arg& (0+255),w,b
 12413  002F0C  0100               	movlb	0	; () banked
 12414  002F0E  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12415  002F10  0100               	movlb	0	; () banked
 12416  002F12  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12417  002F14  A4D8               	btfss	status,2,c
 12418  002F16  D011               	goto	l4575
 12419  002F18                     l4569:
 12420                           
 12421                           ; BSR set to: 0
 12422  002F18  0E00               	movlw	0
 12423  002F1A  0100               	movlb	0	; () banked
 12424  002F1C  6F60               	movwf	?___ftpack& (0+255),b
 12425  002F1E  0E00               	movlw	0
 12426  002F20  0100               	movlb	0	; () banked
 12427  002F22  6F61               	movwf	(?___ftpack+1)& (0+255),b
 12428  002F24  0E00               	movlw	0
 12429  002F26  0100               	movlb	0	; () banked
 12430  002F28  6F62               	movwf	(?___ftpack+2)& (0+255),b
 12431                           
 12432                           ; BSR set to: 0
 12433  002F2A  0012               	return	
 12434  002F2C                     l4573:
 12435                           
 12436                           ; BSR set to: 0
 12437  002F2C  0100               	movlb	0	; () banked
 12438  002F2E  2B63               	incf	___ftpack@exp& (0+255),f,b
 12439  002F30  0100               	movlb	0	; () banked
 12440  002F32  90D8               	bcf	status,0,c
 12441  002F34  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12442  002F36  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12443  002F38  3360               	rrcf	___ftpack@arg& (0+255),f,b
 12444  002F3A                     l4575:
 12445                           
 12446                           ; BSR set to: 0
 12447  002F3A  0E00               	movlw	0
 12448  002F3C  0100               	movlb	0	; () banked
 12449  002F3E  1560               	andwf	___ftpack@arg& (0+255),w,b
 12450  002F40  0100               	movlb	0	; () banked
 12451  002F42  6F65               	movwf	??___ftpack& (0+255),b
 12452  002F44  0E00               	movlw	0
 12453  002F46  0100               	movlb	0	; () banked
 12454  002F48  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12455  002F4A  0100               	movlb	0	; () banked
 12456  002F4C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 12457  002F4E  0EFE               	movlw	254
 12458  002F50  0100               	movlb	0	; () banked
 12459  002F52  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12460  002F54  0100               	movlb	0	; () banked
 12461  002F56  6F67               	movwf	(??___ftpack+2)& (0+255),b
 12462  002F58  0100               	movlb	0	; () banked
 12463  002F5A  5165               	movf	??___ftpack& (0+255),w,b
 12464  002F5C  0100               	movlb	0	; () banked
 12465  002F5E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 12466  002F60  0100               	movlb	0	; () banked
 12467  002F62  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 12468  002F64  B4D8               	btfsc	status,2,c
 12469  002F66  D011               	goto	l4581
 12470  002F68  D7E1               	goto	l4573
 12471  002F6A                     l4577:
 12472                           
 12473                           ; BSR set to: 0
 12474  002F6A  0100               	movlb	0	; () banked
 12475  002F6C  2B63               	incf	___ftpack@exp& (0+255),f,b
 12476                           
 12477                           ; BSR set to: 0
 12478  002F6E  0E01               	movlw	1
 12479  002F70  0100               	movlb	0	; () banked
 12480  002F72  2760               	addwf	___ftpack@arg& (0+255),f,b
 12481  002F74  0E00               	movlw	0
 12482  002F76  0100               	movlb	0	; () banked
 12483  002F78  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12484  002F7A  0E00               	movlw	0
 12485  002F7C  0100               	movlb	0	; () banked
 12486  002F7E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12487  002F80  0100               	movlb	0	; () banked
 12488  002F82  90D8               	bcf	status,0,c
 12489  002F84  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12490  002F86  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12491  002F88  3360               	rrcf	___ftpack@arg& (0+255),f,b
 12492  002F8A                     l4581:
 12493                           
 12494                           ; BSR set to: 0
 12495  002F8A  0E00               	movlw	0
 12496  002F8C  0100               	movlb	0	; () banked
 12497  002F8E  1560               	andwf	___ftpack@arg& (0+255),w,b
 12498  002F90  0100               	movlb	0	; () banked
 12499  002F92  6F65               	movwf	??___ftpack& (0+255),b
 12500  002F94  0E00               	movlw	0
 12501  002F96  0100               	movlb	0	; () banked
 12502  002F98  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12503  002F9A  0100               	movlb	0	; () banked
 12504  002F9C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 12505  002F9E  0EFF               	movlw	255
 12506  002FA0  0100               	movlb	0	; () banked
 12507  002FA2  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12508  002FA4  0100               	movlb	0	; () banked
 12509  002FA6  6F67               	movwf	(??___ftpack+2)& (0+255),b
 12510  002FA8  0100               	movlb	0	; () banked
 12511  002FAA  5165               	movf	??___ftpack& (0+255),w,b
 12512  002FAC  0100               	movlb	0	; () banked
 12513  002FAE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 12514  002FB0  0100               	movlb	0	; () banked
 12515  002FB2  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 12516  002FB4  B4D8               	btfsc	status,2,c
 12517  002FB6  D008               	goto	l4585
 12518  002FB8  D7D8               	goto	l4577
 12519  002FBA                     l4583:
 12520                           
 12521                           ; BSR set to: 0
 12522  002FBA  0100               	movlb	0	; () banked
 12523  002FBC  0763               	decf	___ftpack@exp& (0+255),f,b
 12524  002FBE  0100               	movlb	0	; () banked
 12525  002FC0  90D8               	bcf	status,0,c
 12526  002FC2  3760               	rlcf	___ftpack@arg& (0+255),f,b
 12527  002FC4  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12528  002FC6  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12529  002FC8                     l4585:
 12530                           
 12531                           ; BSR set to: 0
 12532  002FC8  0100               	movlb	0	; () banked
 12533  002FCA  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12534  002FCC  D004               	goto	l805
 12535                           
 12536                           ; BSR set to: 0
 12537  002FCE  0E02               	movlw	2
 12538  002FD0  0100               	movlb	0	; () banked
 12539  002FD2  6163               	cpfslt	___ftpack@exp& (0+255),b
 12540  002FD4  D7F2               	goto	l4583
 12541  002FD6                     l805:
 12542                           
 12543                           ; BSR set to: 0
 12544  002FD6  0100               	movlb	0	; () banked
 12545  002FD8  B163               	btfsc	___ftpack@exp& (0+255),0,b
 12546  002FDA  D002               	goto	l4591
 12547                           
 12548                           ; BSR set to: 0
 12549  002FDC  0100               	movlb	0	; () banked
 12550  002FDE  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12551  002FE0                     l4591:
 12552                           
 12553                           ; BSR set to: 0
 12554  002FE0  0100               	movlb	0	; () banked
 12555  002FE2  90D8               	bcf	status,0,c
 12556  002FE4  3363               	rrcf	___ftpack@exp& (0+255),f,b
 12557  002FE6  0100               	movlb	0	; () banked
 12558  002FE8  5163               	movf	___ftpack@exp& (0+255),w,b
 12559  002FEA  0100               	movlb	0	; () banked
 12560  002FEC  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12561                           
 12562                           ; BSR set to: 0
 12563  002FEE  0100               	movlb	0	; () banked
 12564  002FF0  5164               	movf	___ftpack@sign& (0+255),w,b
 12565  002FF2  0100               	movlb	0	; () banked
 12566  002FF4  B4D8               	btfsc	status,2,c
 12567  002FF6  D002               	goto	l4597
 12568                           
 12569                           ; BSR set to: 0
 12570  002FF8  0100               	movlb	0	; () banked
 12571  002FFA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12572  002FFC                     l4597:
 12573                           
 12574                           ; BSR set to: 0
 12575  002FFC  C060  F060         	movff	___ftpack@arg,?___ftpack
 12576  003000  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 12577  003004  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 12578  003008  0012               	return	
 12579  00300A                     __end_of___ftpack:
 12580                           	opt stack 0
 12581                           tblptru	equ	0xFF8
 12582                           tblptrh	equ	0xFF7
 12583                           tblptrl	equ	0xFF6
 12584                           tablat	equ	0xFF5
 12585                           prodh	equ	0xFF4
 12586                           prodl	equ	0xFF3
 12587                           indf0	equ	0xFEF
 12588                           postinc0	equ	0xFEE
 12589                           fsr0h	equ	0xFEA
 12590                           fsr0l	equ	0xFE9
 12591                           wreg	equ	0xFE8
 12592                           indf1	equ	0xFE7
 12593                           postdec1	equ	0xFE5
 12594                           fsr1h	equ	0xFE2
 12595                           fsr1l	equ	0xFE1
 12596                           indf2	equ	0xFDF
 12597                           postinc2	equ	0xFDE
 12598                           postdec2	equ	0xFDD
 12599                           fsr2h	equ	0xFDA
 12600                           fsr2l	equ	0xFD9
 12601                           status	equ	0xFD8
 12602                           
 12603 ;; *************** function ___ftneg *****************
 12604 ;; Defined at:
 12605 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  f1              3    0[BANK0 ] float 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  3    0[BANK0 ] float 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12619 ;;      Params:         0       3       0       0       0       0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0
 12622 ;;      Totals:         0       3       0       0       0       0       0
 12623 ;;Total ram usage:        3 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    3
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		_sprintf
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           
 12633                           	psect	text48
 12634  003CB4                     __ptext48:
 12635                           	opt stack 0
 12636  003CB4                     ___ftneg:
 12637                           	opt stack 24
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;incstack = 0
 12641  003CB4  0100               	movlb	0	; () banked
 12642  003CB6  5160               	movf	___ftneg@f1& (0+255),w,b
 12643  003CB8  0100               	movlb	0	; () banked
 12644  003CBA  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12645  003CBC  0100               	movlb	0	; () banked
 12646  003CBE  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12647  003CC0  B4D8               	btfsc	status,2,c
 12648  003CC2  D009               	goto	l902
 12649                           
 12650                           ; BSR set to: 0
 12651  003CC4  0E00               	movlw	0
 12652  003CC6  0100               	movlb	0	; () banked
 12653  003CC8  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 12654  003CCA  0E00               	movlw	0
 12655  003CCC  0100               	movlb	0	; () banked
 12656  003CCE  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12657  003CD0  0E80               	movlw	128
 12658  003CD2  0100               	movlb	0	; () banked
 12659  003CD4  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12660  003CD6                     l902:
 12661                           
 12662                           ; BSR set to: 0
 12663  003CD6  C060  F060         	movff	___ftneg@f1,?___ftneg
 12664  003CDA  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 12665  003CDE  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 12666                           
 12667                           ; BSR set to: 0
 12668  003CE2  0012               	return		;funcret
 12669  003CE4                     __end_of___ftneg:
 12670                           	opt stack 0
 12671                           tblptru	equ	0xFF8
 12672                           tblptrh	equ	0xFF7
 12673                           tblptrl	equ	0xFF6
 12674                           tablat	equ	0xFF5
 12675                           prodh	equ	0xFF4
 12676                           prodl	equ	0xFF3
 12677                           indf0	equ	0xFEF
 12678                           postinc0	equ	0xFEE
 12679                           fsr0h	equ	0xFEA
 12680                           fsr0l	equ	0xFE9
 12681                           wreg	equ	0xFE8
 12682                           indf1	equ	0xFE7
 12683                           postdec1	equ	0xFE5
 12684                           fsr1h	equ	0xFE2
 12685                           fsr1l	equ	0xFE1
 12686                           indf2	equ	0xFDF
 12687                           postinc2	equ	0xFDE
 12688                           postdec2	equ	0xFDD
 12689                           fsr2h	equ	0xFDA
 12690                           fsr2l	equ	0xFD9
 12691                           status	equ	0xFD8
 12692                           
 12693 ;; *************** function ___ftge *****************
 12694 ;; Defined at:
 12695 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;  ff1             3    0[BANK0 ] float 
 12698 ;;  ff2             3    3[BANK0 ] float 
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;		None
 12701 ;; Return value:  Size  Location     Type
 12702 ;;		None               void
 12703 ;; Registers used:
 12704 ;;		wreg, status,2, status,0
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12710 ;;      Params:         0       6       0       0       0       0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0
 12712 ;;      Temps:          0       3       0       0       0       0       0
 12713 ;;      Totals:         0       9       0       0       0       0       0
 12714 ;;Total ram usage:        9 bytes
 12715 ;; Hardware stack levels used:    1
 12716 ;; Hardware stack levels required when called:    3
 12717 ;; This function calls:
 12718 ;;		Nothing
 12719 ;; This function is called by:
 12720 ;;		_sprintf
 12721 ;; This function uses a non-reentrant model
 12722 ;;
 12723                           
 12724                           	psect	text49
 12725  00319E                     __ptext49:
 12726                           	opt stack 0
 12727  00319E                     ___ftge:
 12728                           	opt stack 24
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;incstack = 0
 12732  00319E  0100               	movlb	0	; () banked
 12733  0031A0  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12734  0031A2  D01D               	goto	l5107
 12735                           
 12736                           ; BSR set to: 0
 12737  0031A4  C060  F066         	movff	___ftge@ff1,??___ftge
 12738  0031A8  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 12739  0031AC  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 12740  0031B0  0100               	movlb	0	; () banked
 12741  0031B2  1F66               	comf	??___ftge& (0+255),f,b
 12742  0031B4  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12743  0031B6  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12744  0031B8  2B66               	incf	??___ftge& (0+255),f,b
 12745  0031BA  0E00               	movlw	0
 12746  0031BC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12747  0031BE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12748  0031C0  0E00               	movlw	0
 12749  0031C2  0100               	movlb	0	; () banked
 12750  0031C4  2566               	addwf	??___ftge& (0+255),w,b
 12751  0031C6  0100               	movlb	0	; () banked
 12752  0031C8  6F60               	movwf	___ftge@ff1& (0+255),b
 12753  0031CA  0E00               	movlw	0
 12754  0031CC  0100               	movlb	0	; () banked
 12755  0031CE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12756  0031D0  0100               	movlb	0	; () banked
 12757  0031D2  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12758  0031D4  0E80               	movlw	128
 12759  0031D6  0100               	movlb	0	; () banked
 12760  0031D8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12761  0031DA  0100               	movlb	0	; () banked
 12762  0031DC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12763  0031DE                     l5107:
 12764                           
 12765                           ; BSR set to: 0
 12766  0031DE  0100               	movlb	0	; () banked
 12767  0031E0  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12768  0031E2  D01D               	goto	l5111
 12769                           
 12770                           ; BSR set to: 0
 12771  0031E4  C063  F066         	movff	___ftge@ff2,??___ftge
 12772  0031E8  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 12773  0031EC  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 12774  0031F0  0100               	movlb	0	; () banked
 12775  0031F2  1F66               	comf	??___ftge& (0+255),f,b
 12776  0031F4  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12777  0031F6  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12778  0031F8  2B66               	incf	??___ftge& (0+255),f,b
 12779  0031FA  0E00               	movlw	0
 12780  0031FC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12781  0031FE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12782  003200  0E00               	movlw	0
 12783  003202  0100               	movlb	0	; () banked
 12784  003204  2566               	addwf	??___ftge& (0+255),w,b
 12785  003206  0100               	movlb	0	; () banked
 12786  003208  6F63               	movwf	___ftge@ff2& (0+255),b
 12787  00320A  0E00               	movlw	0
 12788  00320C  0100               	movlb	0	; () banked
 12789  00320E  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12790  003210  0100               	movlb	0	; () banked
 12791  003212  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12792  003214  0E80               	movlw	128
 12793  003216  0100               	movlb	0	; () banked
 12794  003218  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12795  00321A  0100               	movlb	0	; () banked
 12796  00321C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12797  00321E                     l5111:
 12798                           
 12799                           ; BSR set to: 0
 12800  00321E  0E00               	movlw	0
 12801  003220  0100               	movlb	0	; () banked
 12802  003222  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 12803  003224  0E00               	movlw	0
 12804  003226  0100               	movlb	0	; () banked
 12805  003228  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12806  00322A  0E80               	movlw	128
 12807  00322C  0100               	movlb	0	; () banked
 12808  00322E  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12809                           
 12810                           ; BSR set to: 0
 12811  003230  0E00               	movlw	0
 12812  003232  0100               	movlb	0	; () banked
 12813  003234  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 12814  003236  0E00               	movlw	0
 12815  003238  0100               	movlb	0	; () banked
 12816  00323A  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12817  00323C  0E80               	movlw	128
 12818  00323E  0100               	movlb	0	; () banked
 12819  003240  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12820  003242  0100               	movlb	0	; () banked
 12821  003244  5163               	movf	___ftge@ff2& (0+255),w,b
 12822  003246  0100               	movlb	0	; () banked
 12823  003248  5D60               	subwf	___ftge@ff1& (0+255),w,b
 12824  00324A  0100               	movlb	0	; () banked
 12825  00324C  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 12826  00324E  0100               	movlb	0	; () banked
 12827  003250  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12828  003252  0100               	movlb	0	; () banked
 12829  003254  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 12830  003256  0100               	movlb	0	; () banked
 12831  003258  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12832  00325A  B0D8               	btfsc	status,0,c
 12833  00325C  D002               	goto	l5117
 12834                           
 12835                           ; BSR set to: 0
 12836  00325E  90D8               	bcf	status,0,c
 12837  003260  0012               	return	
 12838  003262                     l5117:
 12839                           
 12840                           ; BSR set to: 0
 12841  003262  80D8               	bsf	status,0,c
 12842                           
 12843                           ; BSR set to: 0
 12844  003264  0012               	return	
 12845  003266                     __end_of___ftge:
 12846                           	opt stack 0
 12847                           tblptru	equ	0xFF8
 12848                           tblptrh	equ	0xFF7
 12849                           tblptrl	equ	0xFF6
 12850                           tablat	equ	0xFF5
 12851                           prodh	equ	0xFF4
 12852                           prodl	equ	0xFF3
 12853                           indf0	equ	0xFEF
 12854                           postinc0	equ	0xFEE
 12855                           fsr0h	equ	0xFEA
 12856                           fsr0l	equ	0xFE9
 12857                           wreg	equ	0xFE8
 12858                           indf1	equ	0xFE7
 12859                           postdec1	equ	0xFE5
 12860                           fsr1h	equ	0xFE2
 12861                           fsr1l	equ	0xFE1
 12862                           indf2	equ	0xFDF
 12863                           postinc2	equ	0xFDE
 12864                           postdec2	equ	0xFDD
 12865                           fsr2h	equ	0xFDA
 12866                           fsr2l	equ	0xFD9
 12867                           status	equ	0xFD8
 12868                           
 12869 ;; *************** function _memset *****************
 12870 ;; Defined at:
 12871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  p1              2    0[BANK0 ] PTR void 
 12874 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12875 ;;  c               2    2[BANK0 ] int 
 12876 ;;  n               2    4[BANK0 ] unsigned int 
 12877 ;; Auto vars:     Size  Location     Type
 12878 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12879 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  2    0[BANK0 ] PTR void 
 12882 ;; Registers used:
 12883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12889 ;;      Params:         0       6       0       0       0       0       0
 12890 ;;      Locals:         0       2       0       0       0       0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0
 12892 ;;      Totals:         0       8       0       0       0       0       0
 12893 ;;Total ram usage:        8 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    3
 12896 ;; This function calls:
 12897 ;;		Nothing
 12898 ;; This function is called by:
 12899 ;;		_util_beacon_transmission
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text50
 12904  003C4C                     __ptext50:
 12905                           	opt stack 0
 12906  003C4C                     _memset:
 12907                           	opt stack 25
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;incstack = 0
 12911  003C4C  C060  F066         	movff	memset@p1,memset@p
 12912  003C50  C061  F067         	movff	memset@p1+1,memset@p+1
 12913  003C54  D009               	goto	l5267
 12914  003C56                     l5263:
 12915  003C56  C066  FFD9         	movff	memset@p,fsr2l
 12916  003C5A  C067  FFDA         	movff	memset@p+1,fsr2h
 12917  003C5E  C062  FFDF         	movff	memset@c,indf2
 12918  003C62  0100               	movlb	0	; () banked
 12919  003C64  4B66               	infsnz	memset@p& (0+255),f,b
 12920  003C66  2B67               	incf	(memset@p+1)& (0+255),f,b
 12921  003C68                     l5267:
 12922  003C68  0100               	movlb	0	; () banked
 12923  003C6A  0764               	decf	memset@n& (0+255),f,b
 12924  003C6C  A0D8               	btfss	status,0,c
 12925  003C6E  0765               	decf	(memset@n+1)& (0+255),f,b
 12926  003C70  0100               	movlb	0	; () banked
 12927  003C72  2964               	incf	memset@n& (0+255),w,b
 12928  003C74  E1F0               	bnz	l5263
 12929  003C76  0100               	movlb	0	; () banked
 12930  003C78  2965               	incf	(memset@n+1)& (0+255),w,b
 12931  003C7A  B4D8               	btfsc	status,2,c
 12932  003C7C  0012               	return	
 12933  003C7E  D7EB               	goto	l5263
 12934  003C80                     __end_of_memset:
 12935                           	opt stack 0
 12936                           tblptru	equ	0xFF8
 12937                           tblptrh	equ	0xFF7
 12938                           tblptrl	equ	0xFF6
 12939                           tablat	equ	0xFF5
 12940                           prodh	equ	0xFF4
 12941                           prodl	equ	0xFF3
 12942                           indf0	equ	0xFEF
 12943                           postinc0	equ	0xFEE
 12944                           fsr0h	equ	0xFEA
 12945                           fsr0l	equ	0xFE9
 12946                           wreg	equ	0xFE8
 12947                           indf1	equ	0xFE7
 12948                           postdec1	equ	0xFE5
 12949                           fsr1h	equ	0xFE2
 12950                           fsr1l	equ	0xFE1
 12951                           indf2	equ	0xFDF
 12952                           postinc2	equ	0xFDE
 12953                           postdec2	equ	0xFDD
 12954                           fsr2h	equ	0xFDA
 12955                           fsr2l	equ	0xFD9
 12956                           status	equ	0xFD8
 12957                           
 12958 ;; *************** function _init_initialize *****************
 12959 ;; Defined at:
 12960 ;;		line 18 in file "easat2_init_initialize.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;		None
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;		None
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  1    wreg      void 
 12967 ;; Registers used:
 12968 ;;		wreg, status,2, cstack
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/0
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12974 ;;      Params:         0       0       0       0       0       0       0
 12975 ;;      Locals:         0       0       0       0       0       0       0
 12976 ;;      Temps:          0       0       0       0       0       0       0
 12977 ;;      Totals:         0       0       0       0       0       0       0
 12978 ;;Total ram usage:        0 bytes
 12979 ;; Hardware stack levels used:    1
 12980 ;; Hardware stack levels required when called:    4
 12981 ;; This function calls:
 12982 ;;		_init_io_initialize
 12983 ;;		_init_timer1_initialize
 12984 ;;		_init_timer2_initialize
 12985 ;;		_util_pwm_initialize
 12986 ;; This function is called by:
 12987 ;;		_main
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text51
 12992  003DB0                     __ptext51:
 12993                           	opt stack 0
 12994  003DB0                     _init_initialize:
 12995                           	opt stack 26
 12996                           
 12997                           ;easat2_init_initialize.c: 21: init_io_initialize();
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;incstack = 0
 13001  003DB0  EC4F  F01A         	call	_init_io_initialize	;wreg free
 13002                           
 13003                           ;easat2_init_initialize.c: 24: init_timer1_initialize();
 13004  003DB4  EC9C  F01E         	call	_init_timer1_initialize	;wreg free
 13005                           
 13006                           ;easat2_init_initialize.c: 25: init_timer2_initialize();
 13007  003DB8  ECCB  F01E         	call	_init_timer2_initialize	;wreg free
 13008                           
 13009                           ;easat2_init_initialize.c: 28: util_pwm_initialize();
 13010  003DBC  EC40  F01E         	call	_util_pwm_initialize	;wreg free
 13011  003DC0  0012               	return		;funcret
 13012  003DC2                     __end_of_init_initialize:
 13013                           	opt stack 0
 13014                           tblptru	equ	0xFF8
 13015                           tblptrh	equ	0xFF7
 13016                           tblptrl	equ	0xFF6
 13017                           tablat	equ	0xFF5
 13018                           prodh	equ	0xFF4
 13019                           prodl	equ	0xFF3
 13020                           indf0	equ	0xFEF
 13021                           postinc0	equ	0xFEE
 13022                           fsr0h	equ	0xFEA
 13023                           fsr0l	equ	0xFE9
 13024                           wreg	equ	0xFE8
 13025                           indf1	equ	0xFE7
 13026                           postdec1	equ	0xFE5
 13027                           fsr1h	equ	0xFE2
 13028                           fsr1l	equ	0xFE1
 13029                           indf2	equ	0xFDF
 13030                           postinc2	equ	0xFDE
 13031                           postdec2	equ	0xFDD
 13032                           fsr2h	equ	0xFDA
 13033                           fsr2l	equ	0xFD9
 13034                           status	equ	0xFD8
 13035                           
 13036 ;; *************** function _util_pwm_initialize *****************
 13037 ;; Defined at:
 13038 ;;		line 24 in file "easat2_util_pwm.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;		None
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      void 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13052 ;;      Params:         0       0       0       0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0
 13055 ;;      Totals:         0       0       0       0       0       0       0
 13056 ;;Total ram usage:        0 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    3
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		_init_initialize
 13063 ;; This function uses a non-reentrant model
 13064 ;;
 13065                           
 13066                           	psect	text52
 13067  003C80                     __ptext52:
 13068                           	opt stack 0
 13069  003C80                     _util_pwm_initialize:
 13070                           	opt stack 26
 13071                           
 13072                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 13073                           
 13074                           ;incstack = 0
 13075  003C80  8495               	bsf	3989,2,c	;volatile
 13076                           
 13077                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 13078  003C82  8695               	bsf	3989,3,c	;volatile
 13079                           
 13080                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 13081  003C84  0EE7               	movlw	-25
 13082  003C86  010F               	movlb	15	; () banked
 13083  003C88  1749               	andwf	73,f,b	;volatile
 13084                           
 13085                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 13086  003C8A  0E7C               	movlw	124
 13087  003C8C  6EBB               	movwf	4027,c	;volatile
 13088                           
 13089                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 13090  003C8E  0E3F               	movlw	-193
 13091  003C90  1666               	andwf	3942,f,c	;volatile
 13092                           
 13093                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 13094  003C92  5066               	movf	3942,w,c	;volatile
 13095  003C94  0BF0               	andlw	-16
 13096  003C96  090C               	iorlw	12
 13097  003C98  6E66               	movwf	3942,c	;volatile
 13098                           
 13099                           ; BSR set to: 15
 13100                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 13101  003C9A  9063               	bcf	3939,0,c	;volatile
 13102                           
 13103                           ; BSR set to: 15
 13104                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 13105  003C9C  8263               	bsf	3939,1,c	;volatile
 13106                           
 13107                           ; BSR set to: 15
 13108                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 13109  003C9E  8463               	bsf	3939,2,c	;volatile
 13110                           
 13111                           ; BSR set to: 15
 13112                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 13113  003CA0  9663               	bcf	3939,3,c	;volatile
 13114                           
 13115                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 13116  003CA2  0E3E               	movlw	62
 13117  003CA4  6E67               	movwf	3943,c	;volatile
 13118                           
 13119                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 13120  003CA6  5066               	movf	3942,w,c	;volatile
 13121  003CA8  0BCF               	andlw	-49
 13122  003CAA  0920               	iorlw	32
 13123  003CAC  6E66               	movwf	3942,c	;volatile
 13124                           
 13125                           ; BSR set to: 15
 13126                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 13127  003CAE  94BA               	bcf	4026,2,c	;volatile
 13128                           
 13129                           ; BSR set to: 15
 13130                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 13131  003CB0  929E               	bcf	3998,1,c	;volatile
 13132                           
 13133                           ; BSR set to: 15
 13134  003CB2  0012               	return		;funcret
 13135  003CB4                     __end_of_util_pwm_initialize:
 13136                           	opt stack 0
 13137                           tblptru	equ	0xFF8
 13138                           tblptrh	equ	0xFF7
 13139                           tblptrl	equ	0xFF6
 13140                           tablat	equ	0xFF5
 13141                           prodh	equ	0xFF4
 13142                           prodl	equ	0xFF3
 13143                           indf0	equ	0xFEF
 13144                           postinc0	equ	0xFEE
 13145                           fsr0h	equ	0xFEA
 13146                           fsr0l	equ	0xFE9
 13147                           wreg	equ	0xFE8
 13148                           indf1	equ	0xFE7
 13149                           postdec1	equ	0xFE5
 13150                           fsr1h	equ	0xFE2
 13151                           fsr1l	equ	0xFE1
 13152                           indf2	equ	0xFDF
 13153                           postinc2	equ	0xFDE
 13154                           postdec2	equ	0xFDD
 13155                           fsr2h	equ	0xFDA
 13156                           fsr2l	equ	0xFD9
 13157                           status	equ	0xFD8
 13158                           
 13159 ;; *************** function _init_timer2_initialize *****************
 13160 ;; Defined at:
 13161 ;;		line 70 in file "easat2_init_timer.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;		None
 13164 ;; Auto vars:     Size  Location     Type
 13165 ;;		None
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  1    wreg      void 
 13168 ;; Registers used:
 13169 ;;		wreg, status,2
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13175 ;;      Params:         0       0       0       0       0       0       0
 13176 ;;      Locals:         0       0       0       0       0       0       0
 13177 ;;      Temps:          0       0       0       0       0       0       0
 13178 ;;      Totals:         0       0       0       0       0       0       0
 13179 ;;Total ram usage:        0 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; Hardware stack levels required when called:    3
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_init_initialize
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text53
 13190  003D96                     __ptext53:
 13191                           	opt stack 0
 13192  003D96                     _init_timer2_initialize:
 13193                           	opt stack 26
 13194                           
 13195                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 13196                           
 13197                           ; BSR set to: 15
 13198                           ;incstack = 0
 13199  003D96  94BA               	bcf	4026,2,c	;volatile
 13200                           
 13201                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 13202  003D98  80BA               	bsf	4026,0,c	;volatile
 13203                           
 13204                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 13205  003D9A  92BA               	bcf	4026,1,c	;volatile
 13206                           
 13207                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 13208  003D9C  96BA               	bcf	4026,3,c	;volatile
 13209  003D9E  98BA               	bcf	4026,4,c	;volatile
 13210  003DA0  9ABA               	bcf	4026,5,c	;volatile
 13211  003DA2  9CBA               	bcf	4026,6,c	;volatile
 13212                           
 13213                           ;easat2_init_timer.c: 93: TMR2 = 0;
 13214  003DA4  0E00               	movlw	0
 13215  003DA6  6EBC               	movwf	4028,c	;volatile
 13216                           
 13217                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 13218  003DA8  829D               	bsf	3997,1,c	;volatile
 13219                           
 13220                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 13221  003DAA  929F               	bcf	3999,1,c	;volatile
 13222                           
 13223                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 13224  003DAC  929E               	bcf	3998,1,c	;volatile
 13225  003DAE  0012               	return		;funcret
 13226  003DB0                     __end_of_init_timer2_initialize:
 13227                           	opt stack 0
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           indf0	equ	0xFEF
 13235                           postinc0	equ	0xFEE
 13236                           fsr0h	equ	0xFEA
 13237                           fsr0l	equ	0xFE9
 13238                           wreg	equ	0xFE8
 13239                           indf1	equ	0xFE7
 13240                           postdec1	equ	0xFE5
 13241                           fsr1h	equ	0xFE2
 13242                           fsr1l	equ	0xFE1
 13243                           indf2	equ	0xFDF
 13244                           postinc2	equ	0xFDE
 13245                           postdec2	equ	0xFDD
 13246                           fsr2h	equ	0xFDA
 13247                           fsr2l	equ	0xFD9
 13248                           status	equ	0xFD8
 13249                           
 13250 ;; *************** function _init_timer1_initialize *****************
 13251 ;; Defined at:
 13252 ;;		line 17 in file "easat2_init_timer.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;		None
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      void 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13266 ;;      Params:         0       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    3
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_init_initialize
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text54
 13281  003D38                     __ptext54:
 13282                           	opt stack 0
 13283  003D38                     _init_timer1_initialize:
 13284                           	opt stack 26
 13285                           
 13286                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 13287                           
 13288                           ;incstack = 0
 13289  003D38  8ED0               	bsf	4048,7,c	;volatile
 13290                           
 13291                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 13292  003D3A  90CD               	bcf	4045,0,c	;volatile
 13293                           
 13294                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 13295  003D3C  9CCD               	bcf	4045,6,c	;volatile
 13296                           
 13297                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 13298  003D3E  9ECD               	bcf	4045,7,c	;volatile
 13299                           
 13300                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 13301  003D40  9ACD               	bcf	4045,5,c	;volatile
 13302                           
 13303                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 13304  003D42  98CD               	bcf	4045,4,c	;volatile
 13305                           
 13306                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 13307  003D44  96CD               	bcf	4045,3,c	;volatile
 13308                           
 13309                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 13310  003D46  82CD               	bsf	4045,1,c	;volatile
 13311                           
 13312                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 13313  003D48  0EEC               	movlw	236
 13314  003D4A  6ECF               	movwf	4047,c	;volatile
 13315                           
 13316                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 13317  003D4C  0E77               	movlw	119
 13318  003D4E  6ECE               	movwf	4046,c	;volatile
 13319                           
 13320                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 13321  003D50  809D               	bsf	3997,0,c	;volatile
 13322                           
 13323                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 13324  003D52  809F               	bsf	3999,0,c	;volatile
 13325                           
 13326                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 13327  003D54  909E               	bcf	3998,0,c	;volatile
 13328                           
 13329                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 13330  003D56  80CD               	bsf	4045,0,c	;volatile
 13331                           
 13332                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 13333  003D58  9CF2               	bcf	intcon,6,c	;volatile
 13334                           
 13335                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 13336  003D5A  8EF2               	bsf	intcon,7,c	;volatile
 13337  003D5C  0012               	return		;funcret
 13338  003D5E                     __end_of_init_timer1_initialize:
 13339                           	opt stack 0
 13340                           tblptru	equ	0xFF8
 13341                           tblptrh	equ	0xFF7
 13342                           tblptrl	equ	0xFF6
 13343                           tablat	equ	0xFF5
 13344                           prodh	equ	0xFF4
 13345                           prodl	equ	0xFF3
 13346                           intcon	equ	0xFF2
 13347                           indf0	equ	0xFEF
 13348                           postinc0	equ	0xFEE
 13349                           fsr0h	equ	0xFEA
 13350                           fsr0l	equ	0xFE9
 13351                           wreg	equ	0xFE8
 13352                           indf1	equ	0xFE7
 13353                           postdec1	equ	0xFE5
 13354                           fsr1h	equ	0xFE2
 13355                           fsr1l	equ	0xFE1
 13356                           indf2	equ	0xFDF
 13357                           postinc2	equ	0xFDE
 13358                           postdec2	equ	0xFDD
 13359                           fsr2h	equ	0xFDA
 13360                           fsr2l	equ	0xFD9
 13361                           status	equ	0xFD8
 13362                           
 13363 ;; *************** function _init_io_initialize *****************
 13364 ;; Defined at:
 13365 ;;		line 34 in file "easat2_init_initialize.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      void 
 13372 ;; Registers used:
 13373 ;;		wreg, status,2
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13379 ;;      Params:         0       0       0       0       0       0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0
 13382 ;;      Totals:         0       0       0       0       0       0       0
 13383 ;;Total ram usage:        0 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    3
 13386 ;; This function calls:
 13387 ;;		Nothing
 13388 ;; This function is called by:
 13389 ;;		_init_initialize
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text55
 13394  00349E                     __ptext55:
 13395                           	opt stack 0
 13396  00349E                     _init_io_initialize:
 13397                           	opt stack 26
 13398                           
 13399                           ;easat2_init_initialize.c: 43: VREFCON0bits.FVREN = 1;
 13400                           
 13401                           ;incstack = 0
 13402  00349E  010F               	movlb	15	; () banked
 13403  0034A0  8F42               	bsf	66,7,b	;volatile
 13404                           
 13405                           ;easat2_init_initialize.c: 44: VREFCON0bits.FVRS0 = 0;
 13406  0034A2  010F               	movlb	15	; () banked
 13407  0034A4  9942               	bcf	66,4,b	;volatile
 13408                           
 13409                           ;easat2_init_initialize.c: 45: VREFCON0bits.FVRS1 = 1;
 13410  0034A6  010F               	movlb	15	; () banked
 13411  0034A8  8B42               	bsf	66,5,b	;volatile
 13412                           
 13413                           ;easat2_init_initialize.c: 47: VREFCON0bits.FVRST = 1;
 13414  0034AA  010F               	movlb	15	; () banked
 13415  0034AC  8D42               	bsf	66,6,b	;volatile
 13416                           
 13417                           ; BSR set to: 15
 13418                           ;easat2_init_initialize.c: 52: ADCON1 = 0x08;
 13419  0034AE  0E08               	movlw	8
 13420  0034B0  6EC1               	movwf	4033,c	;volatile
 13421                           
 13422                           ;easat2_init_initialize.c: 53: ADCON2 = 0xAF;
 13423  0034B2  0EAF               	movlw	175
 13424  0034B4  6EC0               	movwf	4032,c	;volatile
 13425                           
 13426                           ; BSR set to: 15
 13427                           ;easat2_init_initialize.c: 57: TRISAbits.TRISA0 = 1;
 13428  0034B6  8092               	bsf	3986,0,c	;volatile
 13429                           
 13430                           ; BSR set to: 15
 13431                           ;easat2_init_initialize.c: 58: TRISAbits.TRISA1 = 1;
 13432  0034B8  8292               	bsf	3986,1,c	;volatile
 13433                           
 13434                           ; BSR set to: 15
 13435                           ;easat2_init_initialize.c: 59: TRISAbits.TRISA2 = 0;
 13436  0034BA  9492               	bcf	3986,2,c	;volatile
 13437                           
 13438                           ; BSR set to: 15
 13439                           ;easat2_init_initialize.c: 60: TRISAbits.TRISA3 = 1;
 13440  0034BC  8692               	bsf	3986,3,c	;volatile
 13441                           
 13442                           ; BSR set to: 15
 13443                           ;easat2_init_initialize.c: 61: TRISAbits.TRISA4 = 1;
 13444  0034BE  8892               	bsf	3986,4,c	;volatile
 13445                           
 13446                           ; BSR set to: 15
 13447                           ;easat2_init_initialize.c: 62: TRISAbits.TRISA5 = 1;
 13448  0034C0  8A92               	bsf	3986,5,c	;volatile
 13449                           
 13450                           ; BSR set to: 15
 13451                           ;easat2_init_initialize.c: 69: ANSELAbits.ANSA0 = 1;
 13452  0034C2  010F               	movlb	15	; () banked
 13453  0034C4  8138               	bsf	56,0,b	;volatile
 13454                           
 13455                           ; BSR set to: 15
 13456                           ;easat2_init_initialize.c: 70: ANSELAbits.ANSA1 = 1;
 13457  0034C6  010F               	movlb	15	; () banked
 13458  0034C8  8338               	bsf	56,1,b	;volatile
 13459                           
 13460                           ; BSR set to: 15
 13461                           ;easat2_init_initialize.c: 71: ANSELAbits.ANSA2 = 1;
 13462  0034CA  010F               	movlb	15	; () banked
 13463  0034CC  8538               	bsf	56,2,b	;volatile
 13464                           
 13465                           ; BSR set to: 15
 13466                           ;easat2_init_initialize.c: 72: ANSELAbits.ANSA3 = 0;
 13467  0034CE  010F               	movlb	15	; () banked
 13468  0034D0  9738               	bcf	56,3,b	;volatile
 13469                           
 13470                           ; BSR set to: 15
 13471                           ;easat2_init_initialize.c: 74: ANSELAbits.ANSA5 = 1;
 13472  0034D2  010F               	movlb	15	; () banked
 13473  0034D4  8B38               	bsf	56,5,b	;volatile
 13474                           
 13475                           ; BSR set to: 15
 13476                           ;easat2_init_initialize.c: 78: LATAbits.LATA0 = 0;
 13477  0034D6  9089               	bcf	3977,0,c	;volatile
 13478                           
 13479                           ; BSR set to: 15
 13480                           ;easat2_init_initialize.c: 79: LATAbits.LATA1 = 0;
 13481  0034D8  9289               	bcf	3977,1,c	;volatile
 13482                           
 13483                           ; BSR set to: 15
 13484                           ;easat2_init_initialize.c: 80: LATAbits.LATA2 = 0;
 13485  0034DA  9489               	bcf	3977,2,c	;volatile
 13486                           
 13487                           ; BSR set to: 15
 13488                           ;easat2_init_initialize.c: 81: LATAbits.LATA3 = 0;
 13489  0034DC  9689               	bcf	3977,3,c	;volatile
 13490                           
 13491                           ; BSR set to: 15
 13492                           ;easat2_init_initialize.c: 82: LATAbits.LATA4 = 0;
 13493  0034DE  9889               	bcf	3977,4,c	;volatile
 13494                           
 13495                           ; BSR set to: 15
 13496                           ;easat2_init_initialize.c: 83: LATAbits.LATA5 = 0;
 13497  0034E0  9A89               	bcf	3977,5,c	;volatile
 13498                           
 13499                           ;easat2_init_initialize.c: 91: WPUB = 0b00000000;
 13500  0034E2  0E00               	movlw	0
 13501  0034E4  6E61               	movwf	3937,c	;volatile
 13502                           
 13503                           ; BSR set to: 15
 13504                           ;easat2_init_initialize.c: 92: RBPU = 0b11111111;
 13505  0034E6  8EF1               	bsf	intcon2,7,c	;volatile
 13506                           
 13507                           ; BSR set to: 15
 13508                           ;easat2_init_initialize.c: 96: TRISBbits.TRISB0 = 1;
 13509  0034E8  8093               	bsf	3987,0,c	;volatile
 13510                           
 13511                           ; BSR set to: 15
 13512                           ;easat2_init_initialize.c: 97: TRISBbits.TRISB1 = 0;
 13513  0034EA  9293               	bcf	3987,1,c	;volatile
 13514                           
 13515                           ; BSR set to: 15
 13516                           ;easat2_init_initialize.c: 98: TRISBbits.TRISB2 = 0;
 13517  0034EC  9493               	bcf	3987,2,c	;volatile
 13518                           
 13519                           ; BSR set to: 15
 13520                           ;easat2_init_initialize.c: 99: TRISBbits.TRISB3 = 0;
 13521  0034EE  9693               	bcf	3987,3,c	;volatile
 13522                           
 13523                           ; BSR set to: 15
 13524                           ;easat2_init_initialize.c: 100: TRISBbits.TRISB4 = 0;
 13525  0034F0  9893               	bcf	3987,4,c	;volatile
 13526                           
 13527                           ; BSR set to: 15
 13528                           ;easat2_init_initialize.c: 101: TRISBbits.TRISB5 = 0;
 13529  0034F2  9A93               	bcf	3987,5,c	;volatile
 13530                           
 13531                           ; BSR set to: 15
 13532                           ;easat2_init_initialize.c: 102: TRISBbits.TRISB6 = 0;
 13533  0034F4  9C93               	bcf	3987,6,c	;volatile
 13534                           
 13535                           ; BSR set to: 15
 13536                           ;easat2_init_initialize.c: 103: TRISBbits.TRISB7 = 0;
 13537  0034F6  9E93               	bcf	3987,7,c	;volatile
 13538                           
 13539                           ; BSR set to: 15
 13540                           ;easat2_init_initialize.c: 107: ANSELBbits.ANSB0 = 1;
 13541  0034F8  010F               	movlb	15	; () banked
 13542  0034FA  8139               	bsf	57,0,b	;volatile
 13543                           
 13544                           ; BSR set to: 15
 13545                           ;easat2_init_initialize.c: 108: ANSELBbits.ANSB1 = 0;
 13546  0034FC  010F               	movlb	15	; () banked
 13547  0034FE  9339               	bcf	57,1,b	;volatile
 13548                           
 13549                           ; BSR set to: 15
 13550                           ;easat2_init_initialize.c: 109: ANSELBbits.ANSB2 = 0;
 13551  003500  010F               	movlb	15	; () banked
 13552  003502  9539               	bcf	57,2,b	;volatile
 13553                           
 13554                           ; BSR set to: 15
 13555                           ;easat2_init_initialize.c: 110: ANSELBbits.ANSB3 = 0;
 13556  003504  010F               	movlb	15	; () banked
 13557  003506  9739               	bcf	57,3,b	;volatile
 13558                           
 13559                           ; BSR set to: 15
 13560                           ;easat2_init_initialize.c: 112: ANSELBbits.ANSB5 = 0;
 13561  003508  010F               	movlb	15	; () banked
 13562  00350A  9B39               	bcf	57,5,b	;volatile
 13563                           
 13564                           ; BSR set to: 15
 13565                           ;easat2_init_initialize.c: 116: LATBbits.LATB0 = 0;
 13566  00350C  908A               	bcf	3978,0,c	;volatile
 13567                           
 13568                           ; BSR set to: 15
 13569                           ;easat2_init_initialize.c: 117: LATBbits.LATB1 = 0;
 13570  00350E  928A               	bcf	3978,1,c	;volatile
 13571                           
 13572                           ; BSR set to: 15
 13573                           ;easat2_init_initialize.c: 118: LATBbits.LATB2 = 0;
 13574  003510  948A               	bcf	3978,2,c	;volatile
 13575                           
 13576                           ; BSR set to: 15
 13577                           ;easat2_init_initialize.c: 119: LATBbits.LATB3 = 0;
 13578  003512  968A               	bcf	3978,3,c	;volatile
 13579                           
 13580                           ; BSR set to: 15
 13581                           ;easat2_init_initialize.c: 120: LATBbits.LATB4 = 0;
 13582  003514  988A               	bcf	3978,4,c	;volatile
 13583                           
 13584                           ; BSR set to: 15
 13585                           ;easat2_init_initialize.c: 121: LATBbits.LATB5 = 0;
 13586  003516  9A8A               	bcf	3978,5,c	;volatile
 13587                           
 13588                           ; BSR set to: 15
 13589                           ;easat2_init_initialize.c: 125: TRISDbits.TRISD0 = 0;
 13590  003518  9095               	bcf	3989,0,c	;volatile
 13591                           
 13592                           ; BSR set to: 15
 13593                           ;easat2_init_initialize.c: 126: TRISDbits.TRISD1 = 0;
 13594  00351A  9295               	bcf	3989,1,c	;volatile
 13595                           
 13596                           ; BSR set to: 15
 13597                           ;easat2_init_initialize.c: 127: TRISDbits.TRISD2 = 0;
 13598  00351C  9495               	bcf	3989,2,c	;volatile
 13599                           
 13600                           ; BSR set to: 15
 13601                           ;easat2_init_initialize.c: 128: TRISDbits.TRISD3 = 0;
 13602  00351E  9695               	bcf	3989,3,c	;volatile
 13603                           
 13604                           ; BSR set to: 15
 13605                           ;easat2_init_initialize.c: 129: TRISDbits.TRISD4 = 0;
 13606  003520  9895               	bcf	3989,4,c	;volatile
 13607                           
 13608                           ; BSR set to: 15
 13609                           ;easat2_init_initialize.c: 130: TRISDbits.TRISD5 = 0;
 13610  003522  9A95               	bcf	3989,5,c	;volatile
 13611                           
 13612                           ; BSR set to: 15
 13613                           ;easat2_init_initialize.c: 131: TRISDbits.TRISD6 = 0;
 13614  003524  9C95               	bcf	3989,6,c	;volatile
 13615                           
 13616                           ; BSR set to: 15
 13617                           ;easat2_init_initialize.c: 132: TRISDbits.TRISD7 = 0;
 13618  003526  9E95               	bcf	3989,7,c	;volatile
 13619                           
 13620                           ; BSR set to: 15
 13621                           ;easat2_init_initialize.c: 136: ANSELDbits.ANSD0 = 0;
 13622  003528  010F               	movlb	15	; () banked
 13623  00352A  913B               	bcf	59,0,b	;volatile
 13624                           
 13625                           ; BSR set to: 15
 13626                           ;easat2_init_initialize.c: 137: ANSELDbits.ANSD1 = 0;
 13627  00352C  010F               	movlb	15	; () banked
 13628  00352E  933B               	bcf	59,1,b	;volatile
 13629                           
 13630                           ; BSR set to: 15
 13631                           ;easat2_init_initialize.c: 138: ANSELDbits.ANSD2 = 0;
 13632  003530  010F               	movlb	15	; () banked
 13633  003532  953B               	bcf	59,2,b	;volatile
 13634                           
 13635                           ; BSR set to: 15
 13636                           ;easat2_init_initialize.c: 139: ANSELDbits.ANSD3 = 0;
 13637  003534  010F               	movlb	15	; () banked
 13638  003536  973B               	bcf	59,3,b	;volatile
 13639                           
 13640                           ; BSR set to: 15
 13641                           ;easat2_init_initialize.c: 140: ANSELDbits.ANSD4 = 0;
 13642  003538  010F               	movlb	15	; () banked
 13643  00353A  993B               	bcf	59,4,b	;volatile
 13644                           
 13645                           ; BSR set to: 15
 13646                           ;easat2_init_initialize.c: 141: ANSELDbits.ANSD5 = 0;
 13647  00353C  010F               	movlb	15	; () banked
 13648  00353E  9B3B               	bcf	59,5,b	;volatile
 13649                           
 13650                           ; BSR set to: 15
 13651                           ;easat2_init_initialize.c: 142: ANSELDbits.ANSD6 = 0;
 13652  003540  010F               	movlb	15	; () banked
 13653  003542  9D3B               	bcf	59,6,b	;volatile
 13654                           
 13655                           ; BSR set to: 15
 13656                           ;easat2_init_initialize.c: 143: ANSELDbits.ANSD7 = 0;
 13657  003544  010F               	movlb	15	; () banked
 13658  003546  9F3B               	bcf	59,7,b	;volatile
 13659                           
 13660                           ; BSR set to: 15
 13661                           ;easat2_init_initialize.c: 147: LATDbits.LATD0 = 0;
 13662  003548  908C               	bcf	3980,0,c	;volatile
 13663                           
 13664                           ; BSR set to: 15
 13665                           ;easat2_init_initialize.c: 148: LATDbits.LATD1 = 0;
 13666  00354A  928C               	bcf	3980,1,c	;volatile
 13667                           
 13668                           ; BSR set to: 15
 13669                           ;easat2_init_initialize.c: 149: LATDbits.LATD2 = 0;
 13670  00354C  948C               	bcf	3980,2,c	;volatile
 13671                           
 13672                           ; BSR set to: 15
 13673                           ;easat2_init_initialize.c: 150: LATDbits.LATD3 = 0;
 13674  00354E  968C               	bcf	3980,3,c	;volatile
 13675                           
 13676                           ; BSR set to: 15
 13677                           ;easat2_init_initialize.c: 151: LATDbits.LATD4 = 0;
 13678  003550  988C               	bcf	3980,4,c	;volatile
 13679                           
 13680                           ; BSR set to: 15
 13681                           ;easat2_init_initialize.c: 152: LATDbits.LATD5 = 0;
 13682  003552  9A8C               	bcf	3980,5,c	;volatile
 13683                           
 13684                           ; BSR set to: 15
 13685                           ;easat2_init_initialize.c: 153: LATDbits.LATD6 = 0;
 13686  003554  9C8C               	bcf	3980,6,c	;volatile
 13687                           
 13688                           ; BSR set to: 15
 13689                           ;easat2_init_initialize.c: 154: LATDbits.LATD7 = 0;
 13690  003556  9E8C               	bcf	3980,7,c	;volatile
 13691                           
 13692                           ; BSR set to: 15
 13693  003558  0012               	return		;funcret
 13694  00355A                     __end_of_init_io_initialize:
 13695                           	opt stack 0
 13696                           tblptru	equ	0xFF8
 13697                           tblptrh	equ	0xFF7
 13698                           tblptrl	equ	0xFF6
 13699                           tablat	equ	0xFF5
 13700                           prodh	equ	0xFF4
 13701                           prodl	equ	0xFF3
 13702                           intcon	equ	0xFF2
 13703                           intcon2	equ	0xFF1
 13704                           indf0	equ	0xFEF
 13705                           postinc0	equ	0xFEE
 13706                           fsr0h	equ	0xFEA
 13707                           fsr0l	equ	0xFE9
 13708                           wreg	equ	0xFE8
 13709                           indf1	equ	0xFE7
 13710                           postdec1	equ	0xFE5
 13711                           fsr1h	equ	0xFE2
 13712                           fsr1l	equ	0xFE1
 13713                           indf2	equ	0xFDF
 13714                           postinc2	equ	0xFDE
 13715                           postdec2	equ	0xFDD
 13716                           fsr2h	equ	0xFDA
 13717                           fsr2l	equ	0xFD9
 13718                           status	equ	0xFD8
 13719                           
 13720 ;; *************** function _low_priority_int *****************
 13721 ;; Defined at:
 13722 ;;		line 175 in file "easat2_func_interrupts.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;		None
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;		None
 13727 ;; Return value:  Size  Location     Type
 13728 ;;                  1    wreg      void 
 13729 ;; Registers used:
 13730 ;;		None
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13736 ;;      Params:         0       0       0       0       0       0       0
 13737 ;;      Locals:         0       0       0       0       0       0       0
 13738 ;;      Temps:         17       0       0       0       0       0       0
 13739 ;;      Totals:        17       0       0       0       0       0       0
 13740 ;;Total ram usage:       17 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:    2
 13743 ;; This function calls:
 13744 ;;		Nothing
 13745 ;; This function is called by:
 13746 ;;		Interrupt level 1
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750                           	psect	intcodelo
 13751  000018                     __pintcodelo:
 13752                           	opt stack 0
 13753  000018                     _low_priority_int:
 13754                           	opt stack 22
 13755                           
 13756                           ; BSR set to: 15
 13757                           ;incstack = 0
 13758  000018  803D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13759  00001A  CFD8 F01C          	movff	status,??_low_priority_int
 13760  00001E  CFE8 F01D          	movff	wreg,??_low_priority_int+1
 13761  000022  CFE0 F01E          	movff	bsr,??_low_priority_int+2
 13762  000026  CFFA F01F          	movff	pclath,??_low_priority_int+3
 13763  00002A  CFFB F020          	movff	pclatu,??_low_priority_int+4
 13764  00002E  CFE9 F021          	movff	fsr0l,??_low_priority_int+5
 13765  000032  CFEA F022          	movff	fsr0h,??_low_priority_int+6
 13766  000036  CFE1 F023          	movff	fsr1l,??_low_priority_int+7
 13767  00003A  CFE2 F024          	movff	fsr1h,??_low_priority_int+8
 13768  00003E  CFD9 F025          	movff	fsr2l,??_low_priority_int+9
 13769  000042  CFDA F026          	movff	fsr2h,??_low_priority_int+10
 13770  000046  CFF3 F027          	movff	prodl,??_low_priority_int+11
 13771  00004A  CFF4 F028          	movff	prodh,??_low_priority_int+12
 13772  00004E  CFF6 F029          	movff	tblptrl,??_low_priority_int+13
 13773  000052  CFF7 F02A          	movff	tblptrh,??_low_priority_int+14
 13774  000056  CFF8 F02B          	movff	tblptru,??_low_priority_int+15
 13775  00005A  CFF5 F02C          	movff	tablat,??_low_priority_int+16
 13776  00005E  C02C  FFF5         	movff	??_low_priority_int+16,tablat
 13777  000062  C02B  FFF8         	movff	??_low_priority_int+15,tblptru
 13778  000066  C02A  FFF7         	movff	??_low_priority_int+14,tblptrh
 13779  00006A  C029  FFF6         	movff	??_low_priority_int+13,tblptrl
 13780  00006E  C028  FFF4         	movff	??_low_priority_int+12,prodh
 13781  000072  C027  FFF3         	movff	??_low_priority_int+11,prodl
 13782  000076  C026  FFDA         	movff	??_low_priority_int+10,fsr2h
 13783  00007A  C025  FFD9         	movff	??_low_priority_int+9,fsr2l
 13784  00007E  C024  FFE2         	movff	??_low_priority_int+8,fsr1h
 13785  000082  C023  FFE1         	movff	??_low_priority_int+7,fsr1l
 13786  000086  C022  FFEA         	movff	??_low_priority_int+6,fsr0h
 13787  00008A  C021  FFE9         	movff	??_low_priority_int+5,fsr0l
 13788  00008E  C020  FFFB         	movff	??_low_priority_int+4,pclatu
 13789  000092  C01F  FFFA         	movff	??_low_priority_int+3,pclath
 13790  000096  C01E  FFE0         	movff	??_low_priority_int+2,bsr
 13791  00009A  C01D  FFE8         	movff	??_low_priority_int+1,wreg
 13792  00009E  C01C  FFD8         	movff	??_low_priority_int,status
 13793  0000A2  903D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13794  0000A4  0010               	retfie	
 13795  0000A6                     __end_of_low_priority_int:
 13796                           	opt stack 0
 13797                           pclatu	equ	0xFFB
 13798                           pclath	equ	0xFFA
 13799                           tblptru	equ	0xFF8
 13800                           tblptrh	equ	0xFF7
 13801                           tblptrl	equ	0xFF6
 13802                           tablat	equ	0xFF5
 13803                           prodh	equ	0xFF4
 13804                           prodl	equ	0xFF3
 13805                           intcon	equ	0xFF2
 13806                           intcon2	equ	0xFF1
 13807                           indf0	equ	0xFEF
 13808                           postinc0	equ	0xFEE
 13809                           fsr0h	equ	0xFEA
 13810                           fsr0l	equ	0xFE9
 13811                           wreg	equ	0xFE8
 13812                           indf1	equ	0xFE7
 13813                           postdec1	equ	0xFE5
 13814                           fsr1h	equ	0xFE2
 13815                           fsr1l	equ	0xFE1
 13816                           bsr	equ	0xFE0
 13817                           indf2	equ	0xFDF
 13818                           postinc2	equ	0xFDE
 13819                           postdec2	equ	0xFDD
 13820                           fsr2h	equ	0xFDA
 13821                           fsr2l	equ	0xFD9
 13822                           status	equ	0xFD8
 13823                           
 13824 ;; *************** function _high_priority_int *****************
 13825 ;; Defined at:
 13826 ;;		line 17 in file "easat2_func_interrupts.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;  sample          2   25[COMRAM] unsigned int 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13840 ;;      Params:         0       0       0       0       0       0       0
 13841 ;;      Locals:         2       0       0       0       0       0       0
 13842 ;;      Temps:         15       0       0       0       0       0       0
 13843 ;;      Totals:        17       0       0       0       0       0       0
 13844 ;;Total ram usage:       17 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:    1
 13847 ;; This function calls:
 13848 ;;		___ltdiv
 13849 ;; This function is called by:
 13850 ;;		Interrupt level 2
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           	psect	intcode
 13855  000008                     __pintcode:
 13856                           	opt stack 0
 13857  000008                     _high_priority_int:
 13858                           	opt stack 22
 13859                           
 13860                           ;incstack = 0
 13861  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13862  00000A  EFD0  F010         	goto	int_func
 13863                           pclatu	equ	0xFFB
 13864                           pclath	equ	0xFFA
 13865                           tblptru	equ	0xFF8
 13866                           tblptrh	equ	0xFF7
 13867                           tblptrl	equ	0xFF6
 13868                           tablat	equ	0xFF5
 13869                           prodh	equ	0xFF4
 13870                           prodl	equ	0xFF3
 13871                           intcon	equ	0xFF2
 13872                           intcon2	equ	0xFF1
 13873                           indf0	equ	0xFEF
 13874                           postinc0	equ	0xFEE
 13875                           fsr0h	equ	0xFEA
 13876                           fsr0l	equ	0xFE9
 13877                           wreg	equ	0xFE8
 13878                           indf1	equ	0xFE7
 13879                           postdec1	equ	0xFE5
 13880                           fsr1h	equ	0xFE2
 13881                           fsr1l	equ	0xFE1
 13882                           bsr	equ	0xFE0
 13883                           indf2	equ	0xFDF
 13884                           postinc2	equ	0xFDE
 13885                           postdec2	equ	0xFDD
 13886                           fsr2h	equ	0xFDA
 13887                           fsr2l	equ	0xFD9
 13888                           status	equ	0xFD8
 13889                           
 13890                           	psect	intcode_body
 13891  0021A0                     __pintcode_body:
 13892                           	opt stack 22
 13893  0021A0                     int_func:
 13894                           	opt stack 22
 13895  0021A0  CFFA F00C          	movff	pclath,??_high_priority_int+1
 13896  0021A4  CFFB F00D          	movff	pclatu,??_high_priority_int+2
 13897  0021A8  CFE9 F00E          	movff	fsr0l,??_high_priority_int+3
 13898  0021AC  CFEA F00F          	movff	fsr0h,??_high_priority_int+4
 13899  0021B0  CFE1 F010          	movff	fsr1l,??_high_priority_int+5
 13900  0021B4  CFE2 F011          	movff	fsr1h,??_high_priority_int+6
 13901  0021B8  CFD9 F012          	movff	fsr2l,??_high_priority_int+7
 13902  0021BC  CFDA F013          	movff	fsr2h,??_high_priority_int+8
 13903  0021C0  CFF3 F014          	movff	prodl,??_high_priority_int+9
 13904  0021C4  CFF4 F015          	movff	prodh,??_high_priority_int+10
 13905  0021C8  CFF6 F016          	movff	tblptrl,??_high_priority_int+11
 13906  0021CC  CFF7 F017          	movff	tblptrh,??_high_priority_int+12
 13907  0021D0  CFF8 F018          	movff	tblptru,??_high_priority_int+13
 13908  0021D4  CFF5 F019          	movff	tablat,??_high_priority_int+14
 13909                           
 13910                           ;easat2_func_interrupts.c: 19: static int tmr1_interrupt_number = 0;
 13911                           ;easat2_func_interrupts.c: 21: static unsigned int samples[100];
 13912                           ;easat2_func_interrupts.c: 22: static unsigned int sample_position = 0;
 13913                           ;easat2_func_interrupts.c: 23: static unsigned short long noise_mean_value = 32000;
 13914                           ;easat2_func_interrupts.c: 24: static unsigned int activation_thresold = 32000;
 13915                           ;easat2_func_interrupts.c: 25: static unsigned int times_thresold_exceeded = 0;
 13916                           ;easat2_func_interrupts.c: 26: static unsigned int cycles_transmitter_active = 0;
 13917  0021D8  0E00               	movlw	0
 13918  0021DA  6E1B               	movwf	high_priority_int@sample+1,c
 13919  0021DC  0E00               	movlw	0
 13920  0021DE  6E1A               	movwf	high_priority_int@sample,c
 13921                           
 13922                           ;easat2_func_interrupts.c: 33: if (PIR1bits.TMR2IF) {
 13923  0021E0  A29E               	btfss	3998,1,c	;volatile
 13924  0021E2  D002               	goto	i2l426
 13925                           
 13926                           ;easat2_func_interrupts.c: 37: PIR1bits.TMR2IF = 0;
 13927  0021E4  929E               	bcf	3998,1,c	;volatile
 13928                           
 13929                           ;easat2_func_interrupts.c: 39: } else {
 13930  0021E6  D0B2               	goto	i2l441
 13931  0021E8                     i2l426:
 13932                           
 13933                           ;easat2_func_interrupts.c: 43: if (PIR1bits.TMR1IF) {
 13934  0021E8  A09E               	btfss	3998,0,c	;volatile
 13935  0021EA  D0B0               	goto	i2l441
 13936                           
 13937                           ;easat2_func_interrupts.c: 47: TMR1H = 0xEC;
 13938  0021EC  0EEC               	movlw	236
 13939  0021EE  6ECF               	movwf	4047,c	;volatile
 13940                           
 13941                           ;easat2_func_interrupts.c: 48: TMR1L = 0x77 ; 60535;
 13942  0021F0  0E77               	movlw	119
 13943  0021F2  6ECE               	movwf	4046,c	;volatile
 13944                           
 13945                           ;easat2_func_interrupts.c: 52: (PORTDbits.RD5) = !(PORTDbits.RD5);
 13946  0021F4  BA83               	btfsc	3971,5,c	;volatile
 13947  0021F6  D003               	goto	i2u420_40
 13948  0021F8  6A0B               	clrf	??_high_priority_int& (0+255),c
 13949  0021FA  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13950  0021FC  D001               	goto	i2u421_48
 13951  0021FE                     i2u420_40:
 13952  0021FE  6A0B               	clrf	??_high_priority_int& (0+255),c
 13953  002200                     i2u421_48:
 13954  002200  3A0B               	swapf	??_high_priority_int,f,c
 13955  002202  460B               	rlncf	??_high_priority_int,f,c
 13956  002204  5083               	movf	3971,w,c	;volatile
 13957  002206  180B               	xorwf	??_high_priority_int,w,c
 13958  002208  0BDF               	andlw	-33
 13959  00220A  180B               	xorwf	??_high_priority_int,w,c
 13960  00220C  6E83               	movwf	3971,c	;volatile
 13961                           
 13962                           ;easat2_func_interrupts.c: 56: tmr1_interrupt_number++;
 13963  00220E  4A33               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 13964  002210  2A34               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 13965                           
 13966                           ;easat2_func_interrupts.c: 60: if (tmr1_interrupt_number == 50) {
 13967  002212  0E32               	movlw	50
 13968  002214  1833               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 13969  002216  1034               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 13970  002218  A4D8               	btfss	status,2,c
 13971  00221A  D011               	goto	i2l4497
 13972                           
 13973                           ;easat2_func_interrupts.c: 63: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13974  00221C  B883               	btfsc	3971,4,c	;volatile
 13975  00221E  D003               	goto	i2u423_40
 13976  002220  6A0B               	clrf	??_high_priority_int& (0+255),c
 13977  002222  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13978  002224  D001               	goto	i2u424_48
 13979  002226                     i2u423_40:
 13980  002226  6A0B               	clrf	??_high_priority_int& (0+255),c
 13981  002228                     i2u424_48:
 13982  002228  3A0B               	swapf	??_high_priority_int,f,c
 13983  00222A  5083               	movf	3971,w,c	;volatile
 13984  00222C  180B               	xorwf	??_high_priority_int,w,c
 13985  00222E  0BEF               	andlw	-17
 13986  002230  180B               	xorwf	??_high_priority_int,w,c
 13987  002232  6E83               	movwf	3971,c	;volatile
 13988  002234  0004               	clrwdt		;# 
 13989                           
 13990                           ;easat2_func_interrupts.c: 72: tmr1_interrupt_number = 0;
 13991  002236  0E00               	movlw	0
 13992  002238  6E34               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 13993  00223A  0E00               	movlw	0
 13994  00223C  6E33               	movwf	high_priority_int@tmr1_interrupt_number,c
 13995  00223E                     i2l4497:
 13996                           
 13997                           ;easat2_func_interrupts.c: 74: }
 13998                           ;easat2_func_interrupts.c: 78: if (valid_samples < 100) valid_samples++;
 13999  00223E  5036               	movf	high_priority_int@valid_samples+1,w,c
 14000  002240  E106               	bnz	i2l4501
 14001  002242  0E64               	movlw	100
 14002  002244  5C35               	subwf	high_priority_int@valid_samples,w,c
 14003  002246  B0D8               	btfsc	status,0,c
 14004  002248  D002               	goto	i2l4501
 14005  00224A  4A35               	infsnz	high_priority_int@valid_samples,f,c
 14006  00224C  2A36               	incf	high_priority_int@valid_samples+1,f,c
 14007  00224E                     i2l4501:
 14008                           
 14009                           ;easat2_func_interrupts.c: 91: ADCON0bits.CHS = 4;
 14010  00224E  94C2               	bcf	4034,2,c	;volatile
 14011  002250  96C2               	bcf	4034,3,c	;volatile
 14012  002252  88C2               	bsf	4034,4,c	;volatile
 14013  002254  9AC2               	bcf	4034,5,c	;volatile
 14014  002256  9CC2               	bcf	4034,6,c	;volatile
 14015                           
 14016                           ;easat2_func_interrupts.c: 92: ADCON0bits.ADON = 1;
 14017  002258  80C2               	bsf	4034,0,c	;volatile
 14018                           
 14019                           ;easat2_func_interrupts.c: 93: PIR1bits.ADIF = 0;
 14020  00225A  9C9E               	bcf	3998,6,c	;volatile
 14021                           
 14022                           ;easat2_func_interrupts.c: 95: ADCON0bits.GO = 1;
 14023  00225C  82C2               	bsf	4034,1,c	;volatile
 14024  00225E                     i2l431:
 14025  00225E  AC9E               	btfss	3998,6,c	;volatile
 14026  002260  D7FE               	goto	i2l431
 14027                           
 14028                           ;easat2_func_interrupts.c: 98: sample = ADRES;
 14029  002262  CFC3 F01A          	movff	4035,high_priority_int@sample	;volatile
 14030  002266  CFC4 F01B          	movff	4036,high_priority_int@sample+1	;volatile
 14031                           
 14032                           ;easat2_func_interrupts.c: 100: PIR1bits.ADIF = 0;
 14033  00226A  9C9E               	bcf	3998,6,c	;volatile
 14034                           
 14035                           ;easat2_func_interrupts.c: 101: ADCON0bits.ADON = 0;
 14036  00226C  90C2               	bcf	4034,0,c	;volatile
 14037                           
 14038                           ;easat2_func_interrupts.c: 103: if (is_transmitter_active) cycles_transmitter_active++;
 14039  00226E  5037               	movf	high_priority_int@is_transmitter_active,w,c
 14040  002270  B4D8               	btfsc	status,2,c
 14041  002272  D002               	goto	i2l4513
 14042  002274  4A2D               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 14043  002276  2A2E               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 14044  002278                     i2l4513:
 14045                           
 14046                           ;easat2_func_interrupts.c: 108: if (sample > 128 && sample > activation_thresold) {
 14047  002278  501B               	movf	high_priority_int@sample+1,w,c
 14048  00227A  E104               	bnz	i2u428_40
 14049  00227C  0E81               	movlw	129
 14050  00227E  5C1A               	subwf	high_priority_int@sample,w,c
 14051  002280  A0D8               	btfss	status,0,c
 14052  002282  D019               	goto	i2l4525
 14053  002284                     i2u428_40:
 14054  002284  501A               	movf	high_priority_int@sample,w,c
 14055  002286  5C3B               	subwf	high_priority_int@activation_thresold,w,c
 14056  002288  501B               	movf	high_priority_int@sample+1,w,c
 14057  00228A  583C               	subwfb	high_priority_int@activation_thresold+1,w,c
 14058  00228C  B0D8               	btfsc	status,0,c
 14059  00228E  D013               	goto	i2l4525
 14060                           
 14061                           ;easat2_func_interrupts.c: 110: times_thresold_exceeded++;
 14062  002290  4A31               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 14063  002292  2A32               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 14064                           
 14065                           ;easat2_func_interrupts.c: 112: if (times_thresold_exceeded == 200) {
 14066  002294  0EC8               	movlw	200
 14067  002296  1831               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 14068  002298  1032               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 14069  00229A  A4D8               	btfss	status,2,c
 14070  00229C  D056               	goto	i2l4549
 14071                           
 14072                           ;easat2_func_interrupts.c: 117: (PORTBbits.RB1) = 1;
 14073  00229E  8281               	bsf	3969,1,c	;volatile
 14074                           
 14075                           ;easat2_func_interrupts.c: 119: is_transmitter_active = 1;
 14076  0022A0  0E01               	movlw	1
 14077  0022A2  6E37               	movwf	high_priority_int@is_transmitter_active,c
 14078                           
 14079                           ;easat2_func_interrupts.c: 120: cycles_transmitter_active = 0;
 14080  0022A4  0E00               	movlw	0
 14081  0022A6  6E2E               	movwf	high_priority_int@cycles_transmitter_active+1,c
 14082  0022A8  0E00               	movlw	0
 14083  0022AA  6E2D               	movwf	high_priority_int@cycles_transmitter_active,c
 14084                           
 14085                           ;easat2_func_interrupts.c: 122: times_thresold_exceeded = 0;
 14086  0022AC  0E00               	movlw	0
 14087  0022AE  6E32               	movwf	high_priority_int@times_thresold_exceeded+1,c
 14088  0022B0  0E00               	movlw	0
 14089  0022B2  6E31               	movwf	high_priority_int@times_thresold_exceeded,c
 14090                           
 14091                           ;easat2_func_interrupts.c: 124: }
 14092                           ;easat2_func_interrupts.c: 127: } else {
 14093  0022B4  D04A               	goto	i2l4549
 14094  0022B6                     i2l4525:
 14095                           
 14096                           ;easat2_func_interrupts.c: 129: times_thresold_exceeded = 0;
 14097  0022B6  0E00               	movlw	0
 14098  0022B8  6E32               	movwf	high_priority_int@times_thresold_exceeded+1,c
 14099  0022BA  0E00               	movlw	0
 14100  0022BC  6E31               	movwf	high_priority_int@times_thresold_exceeded,c
 14101                           
 14102                           ;easat2_func_interrupts.c: 131: if (cycles_transmitter_active == 12000) {
 14103  0022BE  0EE0               	movlw	224
 14104  0022C0  182D               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 14105  0022C2  E107               	bnz	i2l4533
 14106  0022C4  0E2E               	movlw	46
 14107  0022C6  182E               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 14108  0022C8  A4D8               	btfss	status,2,c
 14109  0022CA  D003               	goto	i2l4533
 14110                           
 14111                           ;easat2_func_interrupts.c: 133: (PORTBbits.RB1) = 0;
 14112  0022CC  9281               	bcf	3969,1,c	;volatile
 14113                           
 14114                           ;easat2_func_interrupts.c: 134: is_transmitter_active = 0;
 14115  0022CE  0E00               	movlw	0
 14116  0022D0  6E37               	movwf	high_priority_int@is_transmitter_active,c
 14117  0022D2                     i2l4533:
 14118                           
 14119                           ;easat2_func_interrupts.c: 135: }
 14120                           ;easat2_func_interrupts.c: 137: samples[sample_position++] = sample;
 14121  0022D2  90D8               	bcf	status,0,c
 14122  0022D4  342F               	rlcf	high_priority_int@sample_position,w,c
 14123  0022D6  6ED9               	movwf	fsr2l,c
 14124  0022D8  3430               	rlcf	high_priority_int@sample_position+1,w,c
 14125  0022DA  6EDA               	movwf	fsr2h,c
 14126  0022DC  0E00               	movlw	low high_priority_int@samples
 14127  0022DE  26D9               	addwf	fsr2l,f,c
 14128  0022E0  0E02               	movlw	high high_priority_int@samples
 14129  0022E2  22DA               	addwfc	fsr2h,f,c
 14130  0022E4  C01A  FFDE         	movff	high_priority_int@sample,postinc2
 14131  0022E8  C01B  FFDD         	movff	high_priority_int@sample+1,postdec2
 14132  0022EC  4A2F               	infsnz	high_priority_int@sample_position,f,c
 14133  0022EE  2A30               	incf	high_priority_int@sample_position+1,f,c
 14134                           
 14135                           ;easat2_func_interrupts.c: 140: if (sample_position == 100) sample_position = 0;
 14136  0022F0  0E64               	movlw	100
 14137  0022F2  182F               	xorwf	high_priority_int@sample_position,w,c
 14138  0022F4  1030               	iorwf	high_priority_int@sample_position+1,w,c
 14139  0022F6  A4D8               	btfss	status,2,c
 14140  0022F8  D004               	goto	i2l4541
 14141  0022FA  0E00               	movlw	0
 14142  0022FC  6E30               	movwf	high_priority_int@sample_position+1,c
 14143  0022FE  0E00               	movlw	0
 14144  002300  6E2F               	movwf	high_priority_int@sample_position,c
 14145  002302                     i2l4541:
 14146                           
 14147                           ;easat2_func_interrupts.c: 142: if (valid_samples == 100) {
 14148  002302  0E64               	movlw	100
 14149  002304  1835               	xorwf	high_priority_int@valid_samples,w,c
 14150  002306  1036               	iorwf	high_priority_int@valid_samples+1,w,c
 14151  002308  A4D8               	btfss	status,2,c
 14152  00230A  D01F               	goto	i2l4549
 14153                           
 14154                           ;easat2_func_interrupts.c: 145: noise_mean_value = 0;
 14155  00230C  0E00               	movlw	0
 14156  00230E  6E38               	movwf	high_priority_int@noise_mean_value,c
 14157  002310  0E00               	movlw	0
 14158  002312  6E39               	movwf	high_priority_int@noise_mean_value+1,c
 14159  002314  0E00               	movlw	0
 14160  002316  6E3A               	movwf	high_priority_int@noise_mean_value+2,c
 14161                           
 14162                           ;easat2_func_interrupts.c: 151: noise_mean_value = (unsigned short long)(noise_mean_valu
      +                          e / 100);
 14163  002318  C038  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 14164  00231C  C039  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 14165  002320  C03A  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 14166  002324  0E64               	movlw	100
 14167  002326  6E04               	movwf	___ltdiv@divisor,c
 14168  002328  0E00               	movlw	0
 14169  00232A  6E05               	movwf	___ltdiv@divisor+1,c
 14170  00232C  0E00               	movlw	0
 14171  00232E  6E06               	movwf	___ltdiv@divisor+2,c
 14172  002330  EC3E  F01C         	call	___ltdiv	;wreg free
 14173  002334  C001  F038         	movff	?___ltdiv,high_priority_int@noise_mean_value
 14174  002338  C002  F039         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 14175  00233C  C003  F03A         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 14176                           
 14177                           ;easat2_func_interrupts.c: 156: activation_thresold = noise_mean_value * 2;
 14178  002340  90D8               	bcf	status,0,c
 14179  002342  3438               	rlcf	high_priority_int@noise_mean_value,w,c
 14180  002344  6E3B               	movwf	high_priority_int@activation_thresold,c
 14181  002346  3439               	rlcf	high_priority_int@noise_mean_value+1,w,c
 14182  002348  6E3C               	movwf	high_priority_int@activation_thresold+1,c
 14183  00234A                     i2l4549:
 14184                           
 14185                           ;easat2_func_interrupts.c: 158: }
 14186                           ;easat2_func_interrupts.c: 160: }
 14187                           ;easat2_func_interrupts.c: 165: PIR1bits.TMR1IF = 0;
 14188  00234A  909E               	bcf	3998,0,c	;volatile
 14189  00234C                     i2l441:
 14190  00234C  C019  FFF5         	movff	??_high_priority_int+14,tablat
 14191  002350  C018  FFF8         	movff	??_high_priority_int+13,tblptru
 14192  002354  C017  FFF7         	movff	??_high_priority_int+12,tblptrh
 14193  002358  C016  FFF6         	movff	??_high_priority_int+11,tblptrl
 14194  00235C  C015  FFF4         	movff	??_high_priority_int+10,prodh
 14195  002360  C014  FFF3         	movff	??_high_priority_int+9,prodl
 14196  002364  C013  FFDA         	movff	??_high_priority_int+8,fsr2h
 14197  002368  C012  FFD9         	movff	??_high_priority_int+7,fsr2l
 14198  00236C  C011  FFE2         	movff	??_high_priority_int+6,fsr1h
 14199  002370  C010  FFE1         	movff	??_high_priority_int+5,fsr1l
 14200  002374  C00F  FFEA         	movff	??_high_priority_int+4,fsr0h
 14201  002378  C00E  FFE9         	movff	??_high_priority_int+3,fsr0l
 14202  00237C  C00D  FFFB         	movff	??_high_priority_int+2,pclatu
 14203  002380  C00C  FFFA         	movff	??_high_priority_int+1,pclath
 14204  002384  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14205  002386  0011               	retfie		f
 14206  002388                     __end_of_high_priority_int:
 14207                           	opt stack 0
 14208                           pclatu	equ	0xFFB
 14209                           pclath	equ	0xFFA
 14210                           tblptru	equ	0xFF8
 14211                           tblptrh	equ	0xFF7
 14212                           tblptrl	equ	0xFF6
 14213                           tablat	equ	0xFF5
 14214                           prodh	equ	0xFF4
 14215                           prodl	equ	0xFF3
 14216                           intcon	equ	0xFF2
 14217                           intcon2	equ	0xFF1
 14218                           indf0	equ	0xFEF
 14219                           postinc0	equ	0xFEE
 14220                           fsr0h	equ	0xFEA
 14221                           fsr0l	equ	0xFE9
 14222                           wreg	equ	0xFE8
 14223                           indf1	equ	0xFE7
 14224                           postdec1	equ	0xFE5
 14225                           fsr1h	equ	0xFE2
 14226                           fsr1l	equ	0xFE1
 14227                           bsr	equ	0xFE0
 14228                           indf2	equ	0xFDF
 14229                           postinc2	equ	0xFDE
 14230                           postdec2	equ	0xFDD
 14231                           fsr2h	equ	0xFDA
 14232                           fsr2l	equ	0xFD9
 14233                           status	equ	0xFD8
 14234                           
 14235 ;; *************** function ___ltdiv *****************
 14236 ;; Defined at:
 14237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ltdiv.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;  dividend        3    0[COMRAM] unsigned um
 14240 ;;  divisor         3    3[COMRAM] unsigned um
 14241 ;; Auto vars:     Size  Location     Type
 14242 ;;  quotient        3    6[COMRAM] unsigned um
 14243 ;;  counter         1    9[COMRAM] unsigned char 
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  3    0[COMRAM] unsigned um
 14246 ;; Registers used:
 14247 ;;		wreg, status,2, status,0
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14253 ;;      Params:         6       0       0       0       0       0       0
 14254 ;;      Locals:         4       0       0       0       0       0       0
 14255 ;;      Temps:          0       0       0       0       0       0       0
 14256 ;;      Totals:        10       0       0       0       0       0       0
 14257 ;;Total ram usage:       10 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; This function calls:
 14260 ;;		Nothing
 14261 ;; This function is called by:
 14262 ;;		_high_priority_int
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266                           	psect	text58
 14267  00387C                     __ptext58:
 14268                           	opt stack 0
 14269  00387C                     ___ltdiv:
 14270                           	opt stack 22
 14271                           
 14272                           ;incstack = 0
 14273  00387C  0E00               	movlw	0
 14274  00387E  6E07               	movwf	___ltdiv@quotient,c
 14275  003880  0E00               	movlw	0
 14276  003882  6E08               	movwf	___ltdiv@quotient+1,c
 14277  003884  0E00               	movlw	0
 14278  003886  6E09               	movwf	___ltdiv@quotient+2,c
 14279  003888  5004               	movf	___ltdiv@divisor,w,c
 14280  00388A  1005               	iorwf	___ltdiv@divisor+1,w,c
 14281  00388C  1006               	iorwf	___ltdiv@divisor+2,w,c
 14282  00388E  B4D8               	btfsc	status,2,c
 14283  003890  D023               	goto	i2l980
 14284  003892  0E01               	movlw	1
 14285  003894  6E0A               	movwf	___ltdiv@counter,c
 14286  003896  D005               	goto	i2l4463
 14287  003898                     i2l4461:
 14288  003898  90D8               	bcf	status,0,c
 14289  00389A  3604               	rlcf	___ltdiv@divisor,f,c
 14290  00389C  3605               	rlcf	___ltdiv@divisor+1,f,c
 14291  00389E  3606               	rlcf	___ltdiv@divisor+2,f,c
 14292  0038A0  2A0A               	incf	___ltdiv@counter,f,c
 14293  0038A2                     i2l4463:
 14294  0038A2  AE06               	btfss	___ltdiv@divisor+2,7,c
 14295  0038A4  D7F9               	goto	i2l4461
 14296  0038A6                     i2l4465:
 14297  0038A6  90D8               	bcf	status,0,c
 14298  0038A8  3607               	rlcf	___ltdiv@quotient,f,c
 14299  0038AA  3608               	rlcf	___ltdiv@quotient+1,f,c
 14300  0038AC  3609               	rlcf	___ltdiv@quotient+2,f,c
 14301  0038AE  5004               	movf	___ltdiv@divisor,w,c
 14302  0038B0  5C01               	subwf	___ltdiv@dividend,w,c
 14303  0038B2  5005               	movf	___ltdiv@divisor+1,w,c
 14304  0038B4  5802               	subwfb	___ltdiv@dividend+1,w,c
 14305  0038B6  5006               	movf	___ltdiv@divisor+2,w,c
 14306  0038B8  5803               	subwfb	___ltdiv@dividend+2,w,c
 14307  0038BA  A0D8               	btfss	status,0,c
 14308  0038BC  D007               	goto	i2l985
 14309  0038BE  5004               	movf	___ltdiv@divisor,w,c
 14310  0038C0  5E01               	subwf	___ltdiv@dividend,f,c
 14311  0038C2  5005               	movf	___ltdiv@divisor+1,w,c
 14312  0038C4  5A02               	subwfb	___ltdiv@dividend+1,f,c
 14313  0038C6  5006               	movf	___ltdiv@divisor+2,w,c
 14314  0038C8  5A03               	subwfb	___ltdiv@dividend+2,f,c
 14315  0038CA  8007               	bsf	___ltdiv@quotient,0,c
 14316  0038CC                     i2l985:
 14317  0038CC  90D8               	bcf	status,0,c
 14318  0038CE  3206               	rrcf	___ltdiv@divisor+2,f,c
 14319  0038D0  3205               	rrcf	___ltdiv@divisor+1,f,c
 14320  0038D2  3204               	rrcf	___ltdiv@divisor,f,c
 14321  0038D4  2E0A               	decfsz	___ltdiv@counter,f,c
 14322  0038D6  D7E7               	goto	i2l4465
 14323  0038D8                     i2l980:
 14324  0038D8  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 14325  0038DC  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 14326  0038E0  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 14327  0038E4  0012               	return		;funcret
 14328  0038E6                     __end_of___ltdiv:
 14329                           	opt stack 0
 14330                           pclatu	equ	0xFFB
 14331                           pclath	equ	0xFFA
 14332                           tblptru	equ	0xFF8
 14333                           tblptrh	equ	0xFF7
 14334                           tblptrl	equ	0xFF6
 14335                           tablat	equ	0xFF5
 14336                           prodh	equ	0xFF4
 14337                           prodl	equ	0xFF3
 14338                           intcon	equ	0xFF2
 14339                           intcon2	equ	0xFF1
 14340                           indf0	equ	0xFEF
 14341                           postinc0	equ	0xFEE
 14342                           fsr0h	equ	0xFEA
 14343                           fsr0l	equ	0xFE9
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           postdec1	equ	0xFE5
 14347                           fsr1h	equ	0xFE2
 14348                           fsr1l	equ	0xFE1
 14349                           bsr	equ	0xFE0
 14350                           indf2	equ	0xFDF
 14351                           postinc2	equ	0xFDE
 14352                           postdec2	equ	0xFDD
 14353                           fsr2h	equ	0xFDA
 14354                           fsr2l	equ	0xFD9
 14355                           status	equ	0xFD8
 14356                           pclatu	equ	0xFFB
 14357                           pclath	equ	0xFFA
 14358                           tblptru	equ	0xFF8
 14359                           tblptrh	equ	0xFF7
 14360                           tblptrl	equ	0xFF6
 14361                           tablat	equ	0xFF5
 14362                           prodh	equ	0xFF4
 14363                           prodl	equ	0xFF3
 14364                           intcon	equ	0xFF2
 14365                           intcon2	equ	0xFF1
 14366                           indf0	equ	0xFEF
 14367                           postinc0	equ	0xFEE
 14368                           fsr0h	equ	0xFEA
 14369                           fsr0l	equ	0xFE9
 14370                           wreg	equ	0xFE8
 14371                           indf1	equ	0xFE7
 14372                           postdec1	equ	0xFE5
 14373                           fsr1h	equ	0xFE2
 14374                           fsr1l	equ	0xFE1
 14375                           bsr	equ	0xFE0
 14376                           indf2	equ	0xFDF
 14377                           postinc2	equ	0xFDE
 14378                           postdec2	equ	0xFDD
 14379                           fsr2h	equ	0xFDA
 14380                           fsr2l	equ	0xFD9
 14381                           status	equ	0xFD8
 14382                           
 14383                           	psect	rparam
 14384  0000                     pclatu	equ	0xFFB
 14385                           pclath	equ	0xFFA
 14386                           tblptru	equ	0xFF8
 14387                           tblptrh	equ	0xFF7
 14388                           tblptrl	equ	0xFF6
 14389                           tablat	equ	0xFF5
 14390                           prodh	equ	0xFF4
 14391                           prodl	equ	0xFF3
 14392                           intcon	equ	0xFF2
 14393                           intcon2	equ	0xFF1
 14394                           indf0	equ	0xFEF
 14395                           postinc0	equ	0xFEE
 14396                           fsr0h	equ	0xFEA
 14397                           fsr0l	equ	0xFE9
 14398                           wreg	equ	0xFE8
 14399                           indf1	equ	0xFE7
 14400                           postdec1	equ	0xFE5
 14401                           fsr1h	equ	0xFE2
 14402                           fsr1l	equ	0xFE1
 14403                           bsr	equ	0xFE0
 14404                           indf2	equ	0xFDF
 14405                           postinc2	equ	0xFDE
 14406                           postdec2	equ	0xFDD
 14407                           fsr2h	equ	0xFDA
 14408                           fsr2l	equ	0xFD9
 14409                           status	equ	0xFD8
 14410                           
 14411                           	psect	temp
 14412  00003D                     btemp:
 14413                           	opt stack 0
 14414  00003D                     	ds	1
 14415  0000                     int$flags	set	btemp
 14416                           pclatu	equ	0xFFB
 14417                           pclath	equ	0xFFA
 14418                           tblptru	equ	0xFF8
 14419                           tblptrh	equ	0xFF7
 14420                           tblptrl	equ	0xFF6
 14421                           tablat	equ	0xFF5
 14422                           prodh	equ	0xFF4
 14423                           prodl	equ	0xFF3
 14424                           intcon	equ	0xFF2
 14425                           intcon2	equ	0xFF1
 14426                           indf0	equ	0xFEF
 14427                           postinc0	equ	0xFEE
 14428                           fsr0h	equ	0xFEA
 14429                           fsr0l	equ	0xFE9
 14430                           wreg	equ	0xFE8
 14431                           indf1	equ	0xFE7
 14432                           postdec1	equ	0xFE5
 14433                           fsr1h	equ	0xFE2
 14434                           fsr1l	equ	0xFE1
 14435                           bsr	equ	0xFE0
 14436                           indf2	equ	0xFDF
 14437                           postinc2	equ	0xFDE
 14438                           postdec2	equ	0xFDD
 14439                           fsr2h	equ	0xFDA
 14440                           fsr2l	equ	0xFD9
 14441                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      60
    BANK0           160    128     128
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  133581
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  133581
                                            118 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             17 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             12 BANK0      5     3      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             57 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                              5 BANK0      7     5      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                              2 BANK0     21    19      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                              5 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             57 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             35 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             57 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   73504
                                            108 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6252
                                             12 BANK0      1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5161
                                              6 BANK0      6     4      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             63 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             45 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_priority_int                                    17    17      0       0
                                             27 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_priority_int                                   17    17      0     358
                                             10 COMRAM    17    17      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (9) ___ltdiv                                             10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _util_pwm_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     80      80       4       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3C       1       63.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     252       9        0.0%
DATA                 0      0     252      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Apr 12 20:27:57 2017

                               ??_init_initialize 0060                       util_onewire_read_byte@value 0085  
            high_priority_int@activation_thresold 003B                              util_getTemperature@i 01CC  
                                              l66 3696                                                l68 3712  
                                    ___awdiv@sign 006B                                                bsr 000FE0  
                             ___wmul@multiplicand 0070                  __end_of_util_beacon_transmission 2EFE  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 0098                                      ___ftadd@exp2 0097  
                                    ___ftadd@sign 0096                                               l112 329A  
                                             l124 3108                                               l118 303E  
                                             l175 3C04                                               l532 07A8  
                                             l356 3B8C                                               l805 2FD6  
                                             l902 3CD6                                               l832 1FDA  
                                             l834 2002                                               l843 20D8  
                                             l852 2102                                               l828 1FA0  
                                             l773 29EC                                               l870 260C  
                                             l871 2650                                               l863 2C72  
                                             l952 348C                                               l962 3684  
                                             l877 26D0                           ??_util_onewire_read_bit 0062  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FBB  
                                    __CFG_CPD$OFF 000000                       __end_of_util_getTemperature 13EA  
                                    ___awmod@sign 0065                    ??_util_transmit_morse_sequence 0068  
                             _util_pwm_initialize 3C80                                               wreg 000FE8  
                                    __CFG_FOSC$XT 000000                           ?_init_timer1_initialize 0001  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0066  
                                    ___ftdiv@cntr 0075                                      ___ftdiv@sign 007A  
                                            l5021 2686                                              l5111 321E  
                                            l5031 26B6                                              l5041 289C  
                                            l5033 26C6                                              l5025 269A  
                                            l6001 0E62                                              l5107 31DE  
                                            l3611 2DDA                                              l3603 2DA4  
                                            l5131 3410                                              l5117 3262  
                                            l3605 2DB4                                              l5133 3420  
                                            l5061 2916                                              l6013 0EE4  
                                            l6005 0E78                                              l3607 2DBE  
                                            l5143 347A                                              l5135 3426  
                                            l5151 3618                                              l5047 28C2  
                                            l5303 01AA                                              l6023 0F0C  
                                            l5153 3628                                              l5081 29A2  
                                            l5313 0216                                              l6113 2ED8  
                                            l6017 0EEC                                              l6121 3AD2  
                                            l5155 362E                                              l5091 29D2  
                                            l5411 0634                                              l5307 01F0  
                                            l4603 38F0                                              l6019 0EF6  
                                            l5165 372A                                              l5093 29E2  
                                            l5085 29B6                                              l5069 296A  
                                            l5501 09BC                                              l5421 0670  
                                            l5325 026A                                              l5317 021C  
                                            l5309 0206                                              l4605 38F6  
                                            l6109 2EBC                                              l6053 0FDA  
                                            l6061 100A                                              l6045 0FAA  
                                            l6117 3ABE                                              l6133 3704  
                                            l5263 3C56                                              l3575 2CE2  
                                            l5159 3672                                              l5167 373A  
                                            l5423 0684                                              l5415 0656  
                                            l5407 05E4                                              l5351 0362  
                                            l5335 02B0                                              l5319 0250  
                                            l5271 3C22                                              l5175 3B00  
                                            l4705 217A                                              l3593 2D74  
                                            l4721 2A72                                              l5521 0A5A  
                                            l5513 0A02                                              l5273 3C2E  
                                            l4561 3B7E                                              l5601 1952  
                                            l6065 101E                                              l5267 3C68  
                                            l5099 39B6                                              l4715 2A38  
                                            l5451 07AC                                              l5427 06B0  
                                            l5419 0668                                              l5363 0400  
                                            l5283 00DA                                              l5611 19AC  
                                            l5603 1964                                              l6059 0FFE  
                                            l5179 3B14                                              l4581 2F8A  
                                            l4573 2F2C                                              l4653 1FE8  
                                            l3597 2D88                                              l4821 35AC  
                                            l4813 3586                                              l5541 0B12  
                                            l5533 0AC6                                              l5517 0A2A  
                                            l5445 0776                                              l5429 06B8  
                                            l5437 074E                                              l5365 0416  
                                            l5277 00BA                                              l4901 37F0  
                                            l5621 1A06                                              l5613 19BE  
                                            l5605 1976                                              l6069 103A  
                                            l4591 2FE0                                              l4583 2FBA  
                                            l4575 2F3A                                              l4647 1FAE  
                                            l4735 2AC0                                              l5543 0B1E  
                                            l5535 0AD0                                              l5527 0A8E  
                                            l5463 082E                                              l5447 078A  
                                            l5439 075C                                              l5375 04A6  
                                            l5367 0446                                              l5359 03D2  
                                            l5631 1A60                                              l5623 1A18  
                                            l5615 19D0                                              l5607 1988  
                                            l5703 2C30                                              l4585 2FC8  
                                            l4577 2F6A                                              l4569 2F18  
                                            l4681 2090                                              l4833 35F2  
                                            l4825 35D0                                              l4817 359A  
                                            l4809 3576                                              l4745 2AFE  
                                            l5561 0C06                                              l5481 093E  
                                            l5473 0916                                              l5393 0598  
                                            l5369 045C                                              l5289 010C  
                                            l5297 0182                                              l5641 1ABA  
                                            l5633 1A72                                              l5625 1A2A  
                                            l5617 19E2                                              l5609 199A  
                                            l4841 3828                                              l4675 2068  
                                            l4659 1FF8                                              l4771 3356  
                                            l4819 35A6                                              l4739 2ADE  
                                            l5555 0B72                                              l5539 0B08  
                                            l5475 0924                                              l5459 07DC  
                                            l5395 059E                                              l5379 04D4  
                                            l5483 094C                                              l5563 0C1C  
                                            l5571 39EA                                              l5651 1B14  
                                            l5643 1ACC                                              l5635 1A84  
                                            l5627 1A3C                                              l5619 19F4  
                                            l4851 3854                                              l4597 2FFC  
                                            l4677 2076                                              l4669 203A  
                                            l4781 3386                                              l4765 3340  
                                            l4829 35DE                                              l4749 2B1C  
                                            l4925 1EF0                                              l4917 1E0C  
                                            l5549 0B44                                              l5493 0990  
                                            l5389 0532                                              l5565 0C3A  
                                            l5573 39F0                                              l5661 1B6E  
                                            l5653 1B26                                              l5645 1ADE  
                                            l5637 1A96                                              l5629 1A4E  
                                            l5581 189E                                              l5725 3A8A  
                                            l4845 383E                                              l4853 385A  
                                            l4695 212C                                              l4687 20BE  
                                            l4679 2084                                              l5559 0C00  
                                            l5575 3A00                                              l5663 1B80  
                                            l5655 1B38                                              l5647 1AF0  
                                            l5639 1AA8                                              l5591 18F8  
                                            l5583 18B0                                              l4839 381E  
                                            l4689 20CC                                              l4777 3374  
                                            l4793 33C4                                              l4945 1622  
                                            l5577 3A0C                                              l5657 1B4A  
                                            l5649 1B02                                              l5593 190A  
                                            l5585 18C2                                              l4779 3380  
                                            l4963 1872                                              l4939 155C  
                                            l5499 09B6                                              l4891 37B0  
                                            l5659 1B5C                                              l5595 191C  
                                            l5587 18D4                                              l5667 1B86  
                                            l5683 2BD0                                              l4797 33D8  
                                            l4789 33B6                                              l4957 17AC  
                                            l4949 1648                                              l5597 192E  
                                            l5589 18E6                                              l5669 1C86  
                                            l5677 2B96                                              l4991 25B8  
                                            l4975 3D2E                                              l4895 37B6  
                                            l5599 1940                                              l4985 257E  
                                            l4897 37E6                                              l4889 37AA  
                                            l5971 0D3C                                              l5965 0D12  
                                            l5991 0DB0                                              l5975 0D50  
                                            l5985 0D8C                                              l5977 0D66  
                                            l5995 0E42                                              l5979 0D6A  
                                            l5999 0E58                                              STR_1 7F9E  
                                            STR_2 7F6B                                              STR_3 7FE8  
                                            STR_4 7FD0                                              STR_5 7FF5  
                                            STR_6 7FCB                                              STR_7 7FC1  
                                            STR_8 7FC4                                              STR_9 7FBF  
                                            u3041 2CBE                                              u3060 2D08  
                                            u3065 2CFE                                              u5011 2594  
                                            u4430 3916                                              u5305 2442  
                                            u4451 1F4E                                              u5315 246C  
                                            u4461 1F6C                                              u4437 390C  
                                            u5325 2496                                              u5335 2758  
                                            u5280 3976                                              u6064 0EA8  
                                            u5345 276E                                              u6065 0EA0  
                                            u5355 2784                                              u4661 2A14  
                                            u6237 3BFE                                              u5470 02F6  
                                            u6247 3C08                                              u5295 2418  
                                            u5288 397A                                              u4681 2A4E  
                                            u6257 3958                                              u5475 02EA  
                                            u6267 3962                                              u5660 07A0  
                                            u5901 2B72                                              u6277 3986  
                                            u6287 3B64                                              u4880 3B54  
                                            u6297 3B80                                              u5921 2BAC  
                        ??_util_onewire_read_byte 0067                                              u4991 255A  
                                            u4888 3B58                                              _RBPU 007F8F  
                                            _TMR2 000FBC                                              _WPUB 000F61  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 3DF2                                      ___ftpack@arg 0060  
                                    ___ftpack@exp 0063                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 003D                                     __CFG_BORV$190 000000  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
                            ?_util_pwm_initialize 0001   __end_of_util_transmit_space_between_dots_dashes 3DF2  
__size_of_util_transmit_space_between_dots_dashes 0010          ?_util_transmit_space_between_dots_dashes 0001  
       ??_util_transmit_space_between_dots_dashes 0065           _util_transmit_space_between_dots_dashes 3DE2  
                                    _sprintf$2692 00B3                           ?_init_timer2_initialize 0001  
                                    ___ftmul@cntr 0081                                      ___param_bank 000000  
                                    ___ftmul@sign 0082                                      ___fttol@exp1 0098  
                                    ___fttol@lval 0094                                _util_transmit_dash 3D7A  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
                                 __end_of___awdiv 33E2                                             _ADRES 000FC3  
                                 __end_of___ftadd 21A0                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 35FC  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 2CA8                                   __end_of___ftneg 3CE4  
                                 __end_of___lldiv 349E                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2B5C                                   ___awdiv@divisor 0068  
                                 __end_of___llmod 3696                                   __end_of___ftsub 39E0  
                                 __end_of___fttol 2DEC                                   __end_of___ltdiv 38E6  
                     __size_of_util_onewire_reset 004C                                     __CFG_WDTEN$ON 000000  
                                           i2l431 225E                                             i2l441 234C  
                                           i2l426 21E8                                             i2l980 38D8  
                                 ___awdiv@counter 006A                                             i2l985 38CC  
                  __end_of_init_timer1_initialize 3D5E                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                               ?_util_transmit_dash 0001  
                              ??_low_priority_int 001C                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0070  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                      __end_of_util_getSolarCurrent 30D4  
                                   __CFG_WRTB$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                                   ___awtoft@sign 006B                                   __end_of_dpowers 7F1D  
                                           _scale 13EA                                   __end_of_isdigit 3D38  
                              __CFG_MCLRE$EXTMCLR 000000                                     ___ftpack@sign 0064  
                        ??_util_onewire_write_bit 0062                         util_waits_delay_secs@secs 0065  
                                  __CFG_BOREN$OFF 000000                                             pclath 000FFA  
                                           tablat 000FF5                 high_priority_int@noise_mean_value 0038  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3BAE  
                                 __end_of_sprintf 0C48                              ??_util_transmit_dash 0065  
                           ??_util_pwm_initialize 0060                    __end_of_init_timer2_initialize 3DB0  
                         util_waits_delay_hours@i 0074                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 3A28                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3DFE                      __end_of_util_transmit_letter 1C8C  
                                          ??_main 00E0                                     ___fttol@sign1 0093  
                                   __activetblptr 000002                              __size_of__tdiv_to_l_ 019E  
                      util_onewire_read_bit@value 0063                         util_getSolarCurrent@value 009B  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                ___llmod@dividend 006D                                            ?_scale 0083  
                                          _CCPR2L 000F67                                  ___awdiv@dividend 0066  
                                __end_of___awtoft 3AB2                                  __end_of___ftpack 300A  
                  high_priority_int@valid_samples 0035                                  __end_of___lltoft 379E  
                                          i2l4501 224E                                            i2l4513 2278  
                                          i2l4461 3898                                            i2l4541 2302  
                                          i2l4533 22D2                                            i2l4525 22B6  
                                          i2l4463 38A2                                            i2l4465 38A6  
                                          i2l4549 234A                                            i2l4497 223E  
                                __end_of___lwtoft 3D0E                   __size_of_util_onewire_read_byte 0194  
                     __size_of_init_io_initialize 00BC                 __size_of_util_beacon_transmission 0112  
                          __size_of_util_pwm_stop 0008                         ?_util_beacon_transmission 00CC  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F6B  
                                    _CCPTMRS0bits 000F49                          ?_util_onewire_write_byte 0062  
                                          ___ftge 319E                        util_onewire_read_byte@bit0 0075  
                      util_onewire_read_byte@bit1 0077                        util_onewire_read_byte@bit2 0079  
                      util_onewire_read_byte@bit3 007B                        util_onewire_read_byte@bit4 007D  
                      util_onewire_read_byte@bit5 007F                        util_onewire_read_byte@bit6 0081  
                      util_onewire_read_byte@bit7 0083                           ??_util_waits_delay_mins 006E  
                         ??_util_waits_delay_secs 0067                                            ___wmul 3BAE  
                                       ??___awdiv 006A                                         ??___ftadd 0093  
                                  __CFG_STVREN$ON 000000                                         ??___awmod 0064  
                                       ??___ftdiv 0072                                         ??___ftneg 0063  
                                       ??___lldiv 0068                                         ??___ftmul 007A  
                                       ??___llmod 0075                                         ??___ftsub 009F  
                                       ??___fttol 008E                                         ??___ltdiv 0007  
                     util_onewire_write_byte@bit0 0067                       util_onewire_write_byte@bit1 0069  
                     util_onewire_write_byte@bit2 006B                       util_onewire_write_byte@bit3 006D  
                     util_onewire_write_byte@bit4 006F                       util_onewire_write_byte@bit5 0071  
                     util_onewire_write_byte@bit6 0073                       util_onewire_write_byte@bit7 0075  
                                          _memset 3C4C                                            _fround 1C8C  
                                          clear_0 3A4E                                            clear_1 3A5A  
                                ___awdiv@quotient 006C                                   ___awmod@divisor 0062  
                                 ___awmod@counter 0064                       util_waits_delay_hours@hours 0071  
                                          _strcat 39E0                                            _strcpy 3C18  
                                          _strlen 38E6                             ___ftmul@f3_as_product 007E  
                                    __pdataCOMRAM 0038                                         ??_isdigit 0060  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00AD                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 009B                   __size_of_util_onewire_write_bit 0034  
                                 _init_initialize 3DB0                                        __accesstop 0060  
                         __end_of__initialization 3A60                                   __CFG_PBADEN$OFF 000000  
                                      ___ftadd@f1 008D                                        ___ftadd@f2 0090  
                                      ___ftge@ff1 0060                                        ___ftge@ff2 0063  
                                   ___rparam_used 000001                                        ___ftdiv@f1 006C  
                                      ___ftdiv@f2 006F                                        ___ftdiv@f3 0076  
                        ??_util_getBatteryVoltage 0086                                        ___ftneg@f1 0060  
                                      ___awtoft@c 0068                                        ___ftmul@f1 0074  
                                      ___ftmul@f2 0077                                        ___ftsub@f1 0099  
                                      ___ftsub@f2 009C                                        ___fttol@f1 008A  
                                  __pcstackCOMRAM 0001                              _util_getSolarCurrent 300A  
                                      ___lltoft@c 0068                          main_loop@battery_current 00DB  
                                   __end_of_scale 1898                            _util_onewire_read_byte 26E2  
                                   _util_pwm_stop 3DFE                                        ___lwtoft@c 0068  
                                      __div_to_l_ 2876                          main_loop@battery_voltage 00DD  
                  __size_of_util_onewire_read_bit 003C                     __end_of_util_onewire_read_bit 3B72  
                                 __div_to_l_@exp1 006B                                   __div_to_l_@cntr 006A  
                                         ??_scale 0086                                   __div_to_l_@quot 0066  
                                    sprintf@width 00BA         __end_of_util_transmit_space_between_words 3DD2  
      __size_of_util_transmit_space_between_words 0010                ?_util_transmit_space_between_words 0001  
             ??_util_transmit_space_between_words 0065                 _util_transmit_space_between_words 3DC2  
          high_priority_int@tmr1_interrupt_number 0033                                        __pbssBANK2 0200  
                              __size_of_main_loop 008C                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1898                                     __div_to_l_@f1 0060  
                                   __div_to_l_@f2 0063                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 0099                                           ?___ftge 0060  
                    util_onewire_write_bit@bit_in 0060                                           ?___wmul 006E  
                high_priority_int@sample_position 002F                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 3BE4                                    ?_util_pwm_stop 0001  
                                         ?_memset 0060                                           ?_fround 0083  
                                       ?___awtoft 0068                                         ?___ftpack 0060  
                               _high_priority_int 0008                                         ?___lltoft 0068  
                                         ?_strcat 0060                                           ?_strcpy 0060  
                                         ?_strlen 0060                                         ?___lwtoft 0068  
                              ?_high_priority_int 0001                           __end_of_init_initialize 3DC2  
                         __size_of_util_pwm_start 0008                               ??_high_priority_int 000B  
                    __size_of_util_getTemperature 07A2                             ?_util_transmit_letter 0001  
                 __size_of_util_getBatteryCurrent 00CA                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 0063                      util_waits_delay_mins@minutes 006C  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F44  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00BE  
                                      _scale$2691 0086              __end_of_util_transmit_morse_sequence 3812  
           __size_of_util_transmit_morse_sequence 0074                      _util_transmit_morse_sequence 379E  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 3DE2      __size_of_util_transmit_space_between_letters 0010  
            ?_util_transmit_space_between_letters 0001             ??_util_transmit_space_between_letters 0065  
             _util_transmit_space_between_letters 3DD2                                   __size_of___ftge 00C8  
                                         ___awdiv 3324                                           ___ftadd 1F38  
                                         ___awmod 355A                                           ___ftdiv 2B5C  
                                         ___ftneg 3CB4                                           ___lldiv 33E2  
                                 __size_of___wmul 0036                                           ___ftmul 29FE  
                        ??_util_waits_delay_hours 0073                                           ___llmod 35FC  
                                         ___ftsub 3994                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2CA8                                           ___ltdiv 387C  
                       __end_of_high_priority_int 2388                    util_getTemperature@temperature 01C9  
                      __end_of_util_onewire_reset 3994                                 __end_of_main_loop 3722  
                                         __pcinit 3A28                                        ??___awtoft 006B  
                                      ??___ftpack 0065                                   __size_of_memset 0034  
                                 __size_of_fround 02AC                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 006C  
                                         __ptext0 3DF2                                           __ptext1 3696  
                                         __ptext2 3AB2                                           __ptext3 3AF4  
                                         __ptext4 0C48                                           __ptext5 3812  
                                         __ptext6 2388                                           __ptext7 3BE4  
                                         __ptext8 3948                                           __ptext9 26E2  
                                      ??___lwtoft 006B                                   __size_of_strcat 0048  
                                 __size_of_strcpy 0034                                   __size_of_strlen 0062  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0060  
                                         _dpowers 7EF5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 3D0E  
                                ___awmod@dividend 0060                      util_onewire_write_byte@value 0062  
                            main_loop@temperature 00D6                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 006A                                    __pintcode_body 21A0  
                            end_of_initialization 3A60                       __end_of_util_pwm_initialize 3CB4  
                                         memset@c 0062                                           memset@n 0064  
                                         memset@p 0066                                     __Lmediumconst 7EF4  
                                         int_func 21A0                       __size_of_util_transmit_dash 001C  
                                 ___lldiv@divisor 0064                                  ___ltdiv@dividend 0001  
                          ??_util_getSolarCurrent 009B                                   ___lldiv@counter 006C  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 003C                                   ??_util_pwm_stop 0060  
                                         postinc0 000FEE                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00CF                    __size_of_util_waits_delay_mins 0042  
                                  __tdiv_to_l_@f1 0060                                    __tdiv_to_l_@f2 0063  
                  __size_of_util_waits_delay_secs 006A                     __end_of_util_waits_delay_mins 3B36  
                          _util_getBatteryCurrent 30D4                     __end_of_util_waits_delay_secs 387C  
                                         strlen@s 0060                                     ??__tdiv_to_l_ 0066  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _PORTDbits 000F83                           high_priority_int@sample 001A  
                          _util_getBatteryVoltage 3266                  __size_of_util_onewire_write_byte 01BC  
                        _util_getTemperature$2685 01A7                          _util_getTemperature$2686 01AA  
                        _util_getTemperature$2687 01AD                          _util_getTemperature$2688 01B0  
                                       _TRISAbits 000F92                                         _TRISBbits 000F93  
                                       _TRISDbits 000F95                                  ?_init_initialize 0001  
                                ___ltdiv@quotient 0007                        __end_of_init_io_initialize 355A  
                          ??_util_transmit_letter 006C                                       ___ftdiv@exp 0079  
                                     _CCP2CONbits 000F66             util_beacon_transmission@BEACON_BUFFER 0180  
                             __size_of__div_to_l_ 0188                                       ___ftmul@exp 007D  
                         ?_util_onewire_read_byte 0065                                 _util_transmit_dot 3D5E  
                      __size_of_high_priority_int 2380                          ??_init_timer1_initialize 0060  
                                  __end_of___ftge 3266                   __size_of_util_waits_delay_hours 0042  
                                  __end_of___wmul 3BE4                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 3E0E                                    __end_of_memset 3C80  
                                  __end_of_fround 1F38                                    __end_of_strcat 3A28  
                                  __end_of_strcpy 3C4C                                    __end_of_strlen 3948  
                             start_initialization 3A28                               ??_util_transmit_dot 0065  
                          util_waits_delay_mins@i 006F                            util_waits_delay_secs@i 0068  
                          util_waits_delay_secs@j 006A                                    _util_pwm_start 3E06  
                             __end_of__tdiv_to_l_ 26E2                          _util_beacon_transmission 2DEC  
                        ??_init_timer2_initialize 0060               util_beacon_transmission@temperature 00D3  
                                _low_priority_int 0018                                   ___llmod@divisor 0071  
                                 ___llmod@counter 0075                    __end_of_util_onewire_read_byte 2876  
                       __end_of_util_transmit_dot 3D7A                           ?_util_onewire_write_bit 0060  
                                        ??___ftge 0066                                          ??___wmul 0072  
                             _util_getTemperature 0C48                                          ??_memset 0066  
                                        ??_fround 0086                                     sprintf@tmpval 00BC  
                                        ??_strcat 0064                                          ??_strcpy 0064  
                                        ??_strlen 0062                                        fround@prec 008C  
                          __end_of_util_pwm_start 3E0E                                 __size_of___awtoft 0044  
                               __size_of___ftpack 010C                                 __size_of___lltoft 007C  
                                     __pbssCOMRAM 002D                                 __size_of___lwtoft 002A  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$2319 0061                             _util_onewire_read_bit 3B36  
                            ?_util_getTemperature 0099                            _util_waits_delay_hours 3AB2  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00B8  
                                     sprintf@fval 00C6             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00C9                    __end_of_util_onewire_write_bit 3C18  
                                       __pintcode 0008                                     __pmediumconst 7EF4  
                                        ?___awdiv 0066                                          ?___ftadd 008D  
                                        ?___awmod 0060                                          ?___ftdiv 006C  
                                        ?___ftneg 0060                                          ?___lldiv 0060  
                                        ?___ftmul 0074                                          ?___llmod 006D  
                                        ?___ftsub 0099                                         __npowers_ 7F1D  
                                        ?___fttol 008A                                          ?___ltdiv 0001  
                 __size_of_init_timer1_initialize 0026                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 2544  
                                    ??__div_to_l_ 0066                           _util_onewire_write_byte 2388  
                                 ?_util_pwm_start 0001                                          ?_isdigit 0001  
                                       _main_loop 3696        high_priority_int@cycles_transmitter_active 002D  
                             _util_waits_delay_ms 3B72                             ??_util_getTemperature 009C  
                              _util_onewire_reset 3948                                          ?_sprintf 009F  
                                  __size_of_scale 04AE                   __size_of_init_timer2_initialize 001A  
                     util_getBatteryVoltage@value 0086                                    ___wmul@product 0072  
                                        _LATAbits 000F89                                          _LATBbits 000F8A  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0060  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 001C                                          i2u420_40 21FE  
                                        i2u421_48 2200                                          i2u423_40 2226  
                                        i2u424_48 2228                                   ___ltdiv@divisor 0004  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 29FE  
                                        i2u428_40 2284                           ?_util_getBatteryCurrent 0099  
                                 ___ltdiv@counter 000A                                          _RCONbits 000FD0  
                                __CFG_WDTPS$32768 000000                              ?_util_waits_delay_ms 0060  
         util_beacon_transmission@battery_current 00D1                           ?_util_getBatteryVoltage 0083  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 006E  
                            ??_util_onewire_reset 0062                        util_transmit_letter@letter 006C  
                                      ?_main_loop 0001           util_beacon_transmission@battery_voltage 00CC  
                          ?_util_onewire_read_bit 0060                       util_getBatteryCurrent@value 009B  
                                       copy_data0 3A3C                            _init_timer1_initialize 3D38  
                           util_waits_delay_ms@ms 0060                        __end_of_util_transmit_dash 3D96  
          high_priority_int@is_transmitter_active 0037                    __end_of_util_getBatteryCurrent 319E  
                                        __Hrparam 0000                      __size_of_util_pwm_initialize 0034  
                              _init_io_initialize 349E                                          __Lrparam 0000  
                           ??_util_waits_delay_ms 0062                     __size_of_util_getSolarCurrent 00CA  
                               __CFG_P2BMX$PORTC0 000000                    __end_of_util_getBatteryVoltage 3324  
                          _init_timer2_initialize 3D96                                  __size_of___awdiv 00BE  
                                __size_of___ftadd 0268                                  __size_of___awmod 00A2  
                                __size_of___ftdiv 014C                                  __size_of___ftneg 0030  
                           __end_of_util_pwm_stop 3E06                                  __size_of___lldiv 00BC  
                                __size_of___ftmul 015E                         ??_util_onewire_write_byte 0064  
                                __size_of___llmod 009A                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                                  __size_of___ltdiv 006A  
                             ?_init_io_initialize 0001                                          ___awtoft 3A6E  
                                        ___ftpack 2EFE                                       _fround$2690 0086  
                                     _fround$2689 0089                          __end_of_low_priority_int 00A6  
                                        ___lltoft 3722                        ??_util_beacon_transmission 00D6  
                           _util_waits_delay_mins 3AF4                             _util_waits_delay_secs 3812  
                                      _ANSELAbits 000F38                                          ___lwtoft 3CE4  
                                      _ANSELBbits 000F39                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00C4                                        sprintf@val 00C0  
                                      strcat@from 0062                                  __size_of_isdigit 002A  
                                        __ptext10 3B36                                          __ptext11 2B5C  
                                        __ptext20 3DD2                                          __ptext12 3A6E  
                                        __ptext21 379E                                          __ptext13 300A  
                                        __ptext30 39E0                                          __ptext22 3DE2  
                                        __ptext14 3266                                          __ptext31 00AA  
                                        __ptext23 3D5E                                          __ptext15 30D4  
                                        __ptext40 2876                                          __ptext32 13EA  
                                        __ptext24 3D7A                                          __ptext16 3CE4  
                                        __ptext41 3722                                          __ptext33 3D0E  
                                        __ptext25 3B72                                          __ptext17 2DEC  
                                        __ptext50 3C4C                                          __ptext42 35FC  
                                        __ptext34 1C8C                                          __ptext26 3DFE  
                                        __ptext18 1898                                          __ptext51 3DB0  
                                        __ptext43 33E2                                          __ptext35 3BAE  
                                        __ptext27 3E06                                          __ptext19 3DC2  
                                        __ptext52 3C80                                          __ptext44 2CA8  
                                        __ptext36 29FE                                          __ptext28 38E6  
                                        __ptext53 3D96                                          __ptext45 3994  
                                        __ptext37 355A                                          __ptext29 3C18  
                                        __ptext54 3D38                                          __ptext46 1F38  
                                        __ptext38 3324                                          __ptext55 349E  
                                        __ptext47 2EFE                                          __ptext39 2544  
                                        __ptext48 3CB4                                          __ptext49 319E  
                                        __ptext58 387C                                          __powers_ 7F44  
                                __size_of_sprintf 0B9E                              ??_init_io_initialize 0060  
                                      strcpy@from 0062                     __size_of_util_transmit_letter 03F4  
                util_getSolarCurrent@solarCurrent 009E                          __size_of_init_initialize 0012  
                                   __size_of_main 000C                        util_onewire_reset@presence 0063  
                                    _PSTR2CONbits 000F63                                          int$flags 003D  
                   ?_util_transmit_morse_sequence 0066                     util_getBatteryVoltage@voltage 0089  
                                     ??_main_loop 00D6                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0071                                          isdigit@c 0062  
                                        memset@p1 0060                            main_loop@solar_current 00D9  
                                        scale@scl 0089                   __end_of_util_onewire_write_byte 2544  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00B6                                  __tdiv_to_l_@exp1 006E  
                                       sprintf@sp 009F                                  __tdiv_to_l_@cntr 006D  
                                __tdiv_to_l_@quot 0069                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 0060                                  ??_util_pwm_start 0060  
                          ?_util_waits_delay_mins 006C                            ?_util_waits_delay_secs 0065  
                                    ?__tdiv_to_l_ 0060                                          sprintf@c 00CB  
                                        sprintf@f 00A1                                          strcat@cp 0064  
                                        strcat@to 0060                    __end_of_util_waits_delay_hours 3AF4  
                                ___lldiv@quotient 0068                                          strcpy@cp 0064  
                                        strlen@cp 0064                                          strcpy@to 0060  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
        high_priority_int@times_thresold_exceeded 0031              util_getBatteryCurrent@batteryCurrent 009E  
