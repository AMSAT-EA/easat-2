

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 01 21:04:45 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 1.41
    79                           ; Generated 25/01/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F45K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  003AA2                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for high_priority_int@noise_avg_value
   118  003AA2  00                 	db	0
   119  003AA3  7D                 	db	125
   120  003AA4  00                 	db	0
   121                           
   122                           ;initializer for high_priority_int@activation_threshold
   123  003AA5  7D00               	dw	32000
   124                           
   125                           	psect	mediumconst
   126  007EF4                     __pmediumconst:
   127                           	opt stack 0
   128  007EF4  00                 	db	0
   129  007EF5                     _dpowers:
   130                           	opt stack 0
   131  007EF5  0001               	dw	1
   132  007EF7  0000               	dw	0
   133  007EF9  000A               	dw	10
   134  007EFB  0000               	dw	0
   135  007EFD  0064               	dw	100
   136  007EFF  0000               	dw	0
   137  007F01  03E8               	dw	1000
   138  007F03  0000               	dw	0
   139  007F05  2710               	dw	10000
   140  007F07  0000               	dw	0
   141  007F09  86A0               	dw	34464
   142  007F0B  0001               	dw	1
   143  007F0D  4240               	dw	16960
   144  007F0F  000F               	dw	15
   145  007F11  9680               	dw	38528
   146  007F13  0098               	dw	152
   147  007F15  E100               	dw	57600
   148  007F17  05F5               	dw	1525
   149  007F19  CA00               	dw	51712
   150  007F1B  3B9A               	dw	15258
   151  007F1D                     __end_of_dpowers:
   152                           	opt stack 0
   153  007F1D                     __powers_:
   154                           	opt stack 0
   155  007F1D  00                 	db	0
   156  007F1E  80                 	db	128
   157  007F1F  3F                 	db	63
   158  007F20  00                 	db	0
   159  007F21  20                 	db	32
   160  007F22  41                 	db	65
   161  007F23  00                 	db	0
   162  007F24  C8                 	db	200
   163  007F25  42                 	db	66
   164  007F26  00                 	db	0
   165  007F27  7A                 	db	122
   166  007F28  44                 	db	68
   167  007F29  40                 	db	64
   168  007F2A  1C                 	db	28
   169  007F2B  46                 	db	70
   170  007F2C  50                 	db	80
   171  007F2D  C3                 	db	195
   172  007F2E  47                 	db	71
   173  007F2F  24                 	db	36
   174  007F30  74                 	db	116
   175  007F31  49                 	db	73
   176  007F32  97                 	db	151
   177  007F33  18                 	db	24
   178  007F34  4B                 	db	75
   179  007F35  BC                 	db	188
   180  007F36  BE                 	db	190
   181  007F37  4C                 	db	76
   182  007F38  6B                 	db	107
   183  007F39  6E                 	db	110
   184  007F3A  4E                 	db	78
   185  007F3B  03                 	db	3
   186  007F3C  15                 	db	21
   187  007F3D  50                 	db	80
   188  007F3E  79                 	db	121
   189  007F3F  AD                 	db	173
   190  007F40  60                 	db	96
   191  007F41  F3                 	db	243
   192  007F42  49                 	db	73
   193  007F43  71                 	db	113
   194  007F44                     __end_of__powers_:
   195                           	opt stack 0
   196  007F44                     __npowers_:
   197                           	opt stack 0
   198  007F44  00                 	db	0
   199  007F45  80                 	db	128
   200  007F46  3F                 	db	63
   201  007F47  CD                 	db	205
   202  007F48  CC                 	db	204
   203  007F49  3D                 	db	61
   204  007F4A  D7                 	db	215
   205  007F4B  23                 	db	35
   206  007F4C  3C                 	db	60
   207  007F4D  12                 	db	18
   208  007F4E  83                 	db	131
   209  007F4F  3A                 	db	58
   210  007F50  B7                 	db	183
   211  007F51  D1                 	db	209
   212  007F52  38                 	db	56
   213  007F53  C6                 	db	198
   214  007F54  27                 	db	39
   215  007F55  37                 	db	55
   216  007F56  38                 	db	56
   217  007F57  86                 	db	134
   218  007F58  35                 	db	53
   219  007F59  C0                 	db	192
   220  007F5A  D6                 	db	214
   221  007F5B  33                 	db	51
   222  007F5C  CC                 	db	204
   223  007F5D  2B                 	db	43
   224  007F5E  32                 	db	50
   225  007F5F  70                 	db	112
   226  007F60  89                 	db	137
   227  007F61  30                 	db	48
   228  007F62  E7                 	db	231
   229  007F63  DB                 	db	219
   230  007F64  2E                 	db	46
   231  007F65  E5                 	db	229
   232  007F66  3C                 	db	60
   233  007F67  1E                 	db	30
   234  007F68  42                 	db	66
   235  007F69  A2                 	db	162
   236  007F6A  0D                 	db	13
   237  007F6B                     __end_of__npowers_:
   238                           	opt stack 0
   239  0000                     _CCPTMRS0bits	set	3913
   240  0000                     _ANSELDbits	set	3899
   241  0000                     _ANSELBbits	set	3897
   242  0000                     _ANSELAbits	set	3896
   243  0000                     _VREFCON0bits	set	3906
   244  0000                     _ADRES	set	4035
   245  0000                     _PORTBbits	set	3969
   246  0000                     _TMR2	set	4028
   247  0000                     _IPR1bits	set	3999
   248  0000                     _PIE1bits	set	3997
   249  0000                     _TMR1L	set	4046
   250  0000                     _TMR1H	set	4047
   251  0000                     _T1CONbits	set	4045
   252  0000                     _RCONbits	set	4048
   253  0000                     _T2CONbits	set	4026
   254  0000                     _CCPR2L	set	3943
   255  0000                     _PSTR2CONbits	set	3939
   256  0000                     _CCP2CONbits	set	3942
   257  0000                     _PR2	set	4027
   258  0000                     _PORTAbits	set	3968
   259  0000                     _INTCONbits	set	4082
   260  0000                     _PIR1bits	set	3998
   261  0000                     _ADCON0bits	set	4034
   262  0000                     _LATDbits	set	3980
   263  0000                     _TRISDbits	set	3989
   264  0000                     _LATBbits	set	3978
   265  0000                     _TRISBbits	set	3987
   266  0000                     _WPUB	set	3937
   267  0000                     _LATAbits	set	3977
   268  0000                     _TRISAbits	set	3986
   269  0000                     _ADCON2	set	4032
   270  0000                     _ADCON1	set	4033
   271  0000                     _PORTDbits	set	3971
   272  0000                     _RBPU	set	32655
   273  007F6B                     STR_2:
   274  007F6B  20                 	db	32
   275  007F6C  25                 	db	37
   276  007F6D  2E                 	db	46
   277  007F6E  31                 	db	49	;'1'
   278  007F6F  66                 	db	102	;'f'
   279  007F70  20                 	db	32
   280  007F71  25                 	db	37
   281  007F72  2E                 	db	46
   282  007F73  31                 	db	49	;'1'
   283  007F74  66                 	db	102	;'f'
   284  007F75  20                 	db	32
   285  007F76  25                 	db	37
   286  007F77  33                 	db	51	;'3'
   287  007F78  2E                 	db	46
   288  007F79  30                 	db	48	;'0'
   289  007F7A  64                 	db	100	;'d'
   290  007F7B  20                 	db	32
   291  007F7C  25                 	db	37
   292  007F7D  33                 	db	51	;'3'
   293  007F7E  2E                 	db	46
   294  007F7F  30                 	db	48	;'0'
   295  007F80  64                 	db	100	;'d'
   296  007F81  00                 	db	0
   297  007F82                     STR_39:
   298  007F82  2D                 	db	45
   299  007F83  2D                 	db	45
   300  007F84  2E                 	db	46
   301  007F85  2E                 	db	46
   302  007F86  2D                 	db	45
   303  007F87  2D                 	db	45
   304  007F88  00                 	db	0
   305  007F89                     STR_42:
   306  007F89  2E                 	db	46
   307  007F8A  2D                 	db	45
   308  007F8B  2E                 	db	46
   309  007F8C  2D                 	db	45
   310  007F8D  2E                 	db	46
   311  007F8E  2D                 	db	45
   312  007F8F  00                 	db	0
   313  007F90                     STR_43:
   314  007F90  2D                 	db	45
   315  007F91  2E                 	db	46
   316  007F92  2E                 	db	46
   317  007F93  2E                 	db	46
   318  007F94  2E                 	db	46
   319  007F95  2D                 	db	45
   320  007F96  00                 	db	0
   321  007F97                     STR_40:
   322  007F97  2E                 	db	46
   323  007F98  2E                 	db	46
   324  007F99  2D                 	db	45
   325  007F9A  2D                 	db	45
   326  007F9B  2E                 	db	46
   327  007F9C  2E                 	db	46
   328  007F9D  00                 	db	0
   329  007F9E                     STR_1:
   330  007F9E  45                 	db	69	;'E'
   331  007F9F  41                 	db	65	;'A'
   332  007FA0  53                 	db	83	;'S'
   333  007FA1  41                 	db	65	;'A'
   334  007FA2  54                 	db	84	;'T'
   335  007FA3  32                 	db	50	;'2'
   336  007FA4  00                 	db	0
   337  007FA5                     STR_29:
   338  007FA5  2D                 	db	45
   339  007FA6  2D                 	db	45
   340  007FA7  2D                 	db	45
   341  007FA8  2D                 	db	45
   342  007FA9  2D                 	db	45
   343  007FAA  00                 	db	0
   344  007FAB                     STR_30:
   345  007FAB  2E                 	db	46
   346  007FAC  2D                 	db	45
   347  007FAD  2D                 	db	45
   348  007FAE  2D                 	db	45
   349  007FAF  2D                 	db	45
   350  007FB0  00                 	db	0
   351  007FB1                     STR_31:
   352  007FB1  2E                 	db	46
   353  007FB2  2E                 	db	46
   354  007FB3  2D                 	db	45
   355  007FB4  2D                 	db	45
   356  007FB5  2D                 	db	45
   357  007FB6  00                 	db	0
   358  007FB7                     STR_32:
   359  007FB7  2E                 	db	46
   360  007FB8  2E                 	db	46
   361  007FB9  2E                 	db	46
   362  007FBA  2D                 	db	45
   363  007FBB  2D                 	db	45
   364  007FBC  00                 	db	0
   365  007FBD                     STR_38:
   366  007FBD  2D                 	db	45
   367  007FBE  2D                 	db	45
   368  007FBF  2D                 	db	45
   369  007FC0  2D                 	db	45
   370  007FC1  2E                 	db	46
   371  007FC2  00                 	db	0
   372  007FC3                     STR_41:
   373  007FC3  2D                 	db	45
   374  007FC4  2E                 	db	46
   375  007FC5  2E                 	db	46
   376  007FC6  2D                 	db	45
   377  007FC7  2E                 	db	46
   378  007FC8  00                 	db	0
   379  007FC9                     STR_37:
   380  007FC9  2D                 	db	45
   381  007FCA  2D                 	db	45
   382  007FCB  2D                 	db	45
   383  007FCC  2E                 	db	46
   384  007FCD  2E                 	db	46
   385  007FCE  00                 	db	0
   386  007FCF                     STR_36:
   387  007FCF  2D                 	db	45
   388  007FD0  2D                 	db	45
   389  007FD1  2E                 	db	46
   390  007FD2  2E                 	db	46
   391  007FD3  2E                 	db	46
   392  007FD4  00                 	db	0
   393  007FD5                     STR_35:
   394  007FD5  2D                 	db	45
   395  007FD6  2E                 	db	46
   396  007FD7  2E                 	db	46
   397  007FD8  2E                 	db	46
   398  007FD9  2E                 	db	46
   399  007FDA  00                 	db	0
   400  007FDB                     STR_34:
   401  007FDB  2E                 	db	46
   402  007FDC  2E                 	db	46
   403  007FDD  2E                 	db	46
   404  007FDE  2E                 	db	46
   405  007FDF  2E                 	db	46
   406  007FE0  00                 	db	0
   407  007FE1                     STR_27:
   408  007FE1  2D                 	db	45
   409  007FE2  2E                 	db	46
   410  007FE3  2D                 	db	45
   411  007FE4  2D                 	db	45
   412  007FE5  00                 	db	0
   413  007FE6                     STR_19:
   414  007FE6  2D                 	db	45
   415  007FE7  2D                 	db	45
   416  007FE8  2E                 	db	46
   417  007FE9  2D                 	db	45
   418  007FEA  00                 	db	0
   419  007FEB                     STR_26:
   420  007FEB  2D                 	db	45
   421  007FEC  2E                 	db	46
   422  007FED  2E                 	db	46
   423  007FEE  2D                 	db	45
   424  007FEF  00                 	db	0
   425  007FF0                     STR_18:
   426  007FF0  2E                 	db	46
   427  007FF1  2D                 	db	45
   428  007FF2  2D                 	db	45
   429  007FF3  2E                 	db	46
   430  007FF4  00                 	db	0
   431  007FF5                     STR_5:
   432  007FF5  2D                 	db	45
   433  007FF6  2E                 	db	46
   434  007FF7  2D                 	db	45
   435  007FF8  2E                 	db	46
   436  007FF9  00                 	db	0
   437  007FFA                     STR_14:
   438  007FFA  2E                 	db	46
   439  007FFB  2D                 	db	45
   440  007FFC  2E                 	db	46
   441  007FFD  2E                 	db	46
   442  007FFE  00                 	db	0
   443  0000                     
   444                           ; #config settings
   445  007FFF  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           	psect	cinit
   448  0035E2                     __pcinit:
   449                           	opt stack 0
   450  0035E2                     start_initialization:
   451                           	opt stack 0
   452  0035E2                     __initialization:
   453                           	opt stack 0
   454                           
   455                           ; Initialize objects allocated to COMRAM (5 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457  0035E2  0EA2               	movlw	low __pidataCOMRAM
   458  0035E4  6EF6               	movwf	tblptrl,c
   459  0035E6  0E3A               	movlw	high __pidataCOMRAM
   460  0035E8  6EF7               	movwf	tblptrh,c
   461  0035EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462  0035EC  6EF8               	movwf	tblptru,c
   463  0035EE  EE00  F041         	lfsr	0,__pdataCOMRAM
   464  0035F2  EE10 F005          	lfsr	1,5
   465  0035F6                     copy_data0:
   466  0035F6  0009               	tblrd		*+
   467  0035F8  CFF5 FFEE          	movff	tablat,postinc0
   468  0035FC  50E5               	movf	postdec1,w,c
   469  0035FE  50E1               	movf	fsr1l,w,c
   470  003600  E1FA               	bnz	copy_data0
   471                           
   472                           ; Clear objects allocated to BANK2 (256 bytes)
   473  003602  EE02  F000         	lfsr	0,__pbssBANK2
   474  003606  EE11 F000          	lfsr	1,256
   475  00360A                     clear_0:
   476  00360A  6AEE               	clrf	postinc0,c
   477  00360C  50E5               	movf	postdec1,w,c
   478  00360E  50E1               	movf	fsr1l,w,c
   479  003610  E1FC               	bnz	clear_0
   480  003612  50E2               	movf	fsr1h,w,c
   481  003614  E1FA               	bnz	clear_0
   482                           
   483                           ; Clear objects allocated to COMRAM (23 bytes)
   484  003616  EE00  F02A         	lfsr	0,__pbssCOMRAM
   485  00361A  0E17               	movlw	23
   486  00361C                     clear_1:
   487  00361C  6AEE               	clrf	postinc0,c
   488  00361E  06E8               	decf	wreg,f,c
   489  003620  E1FD               	bnz	clear_1
   490  003622                     end_of_initialization:
   491                           	opt stack 0
   492  003622                     __end_of__initialization:
   493                           	opt stack 0
   494  003622  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   495  003624  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   496  003626  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  003628  6EF8               	movwf	tblptru,c
   498  00362A  0100               	movlb	0
   499  00362C  EF43  F01D         	goto	_main	;jump to C main() function
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	bssCOMRAM
   511  00002A                     __pbssCOMRAM:
   512                           	opt stack 0
   513  00002A                     high_priority_int@num_received_bits:
   514                           	opt stack 0
   515  00002A                     	ds	2
   516  00002C                     high_priority_int@previous_received_bit:
   517                           	opt stack 0
   518  00002C                     	ds	2
   519  00002E                     high_priority_int@previous_signal_level:
   520                           	opt stack 0
   521  00002E                     	ds	2
   522  000030                     high_priority_int@valid_samples:
   523                           	opt stack 0
   524  000030                     	ds	2
   525  000032                     high_priority_int@total_add:
   526                           	opt stack 0
   527  000032                     	ds	2
   528  000034                     high_priority_int@cycles_transmitter_active:
   529                           	opt stack 0
   530  000034                     	ds	2
   531  000036                     high_priority_int@times_threshold_exceeded:
   532                           	opt stack 0
   533  000036                     	ds	2
   534  000038                     high_priority_int@sample_position:
   535                           	opt stack 0
   536  000038                     	ds	2
   537  00003A                     high_priority_int@tmr1_interrupt_number:
   538                           	opt stack 0
   539  00003A                     	ds	2
   540  00003C                     _global_command_pending_check:
   541                           	opt stack 0
   542  00003C                     	ds	2
   543  00003E                     _global_command_buffer:
   544                           	opt stack 0
   545  00003E                     	ds	2
   546  000040                     high_priority_int@is_transmitter_active:
   547                           	opt stack 0
   548  000040                     	ds	1
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1h	equ	0xFE2
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	dataCOMRAM
   560  000041                     __pdataCOMRAM:
   561                           	opt stack 0
   562  000041                     high_priority_int@noise_avg_value:
   563                           	opt stack 0
   564  000041                     	ds	3
   565  000044                     high_priority_int@activation_threshold:
   566                           	opt stack 0
   567  000044                     	ds	2
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           postdec1	equ	0xFE5
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	bssBANK2
   579  000200                     __pbssBANK2:
   580                           	opt stack 0
   581  000200                     high_priority_int@samples:
   582                           	opt stack 0
   583  000200                     	ds	256
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1h	equ	0xFE2
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	cstackBANK1
   595  000100                     __pcstackBANK1:
   596                           	opt stack 0
   597  000100                     util_beacon_transmission@BEACON_MESSAGE:
   598                           	opt stack 0
   599  000100                     util_getTemperature@bit_mem:
   600                           	opt stack 0
   601                           
   602                           ; 144 bytes @ 0x0
   603  000100                     	ds	128
   604  000180                     util_beacon_transmission@BEACON_BUFFER:
   605                           	opt stack 0
   606                           
   607                           ; 64 bytes @ 0x80
   608  000180                     	ds	16
   609  000190                     util_getTemperature@byte_mem:
   610                           	opt stack 0
   611                           
   612                           ; 18 bytes @ 0x90
   613  000190                     	ds	18
   614  0001A2                     util_getTemperature@num_bit:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0xA2
   618  0001A2                     	ds	2
   619  0001A4                     util_getTemperature@sign:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0xA4
   623  0001A4                     	ds	3
   624  0001A7                     _util_getTemperature$2784:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0xA7
   628  0001A7                     	ds	3
   629  0001AA                     _util_getTemperature$2785:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0xAA
   633  0001AA                     	ds	3
   634  0001AD                     _util_getTemperature$2786:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0xAD
   638  0001AD                     	ds	3
   639  0001B0                     _util_getTemperature$2787:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0xB0
   643  0001B0                     	ds	3
   644  0001B3                     util_getTemperature@shift_reg_bit0:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xB3
   648  0001B3                     	ds	2
   649  0001B5                     util_getTemperature@shift_reg_bit1:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xB5
   653  0001B5                     	ds	2
   654  0001B7                     util_getTemperature@shift_reg_bit2:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0xB7
   658  0001B7                     	ds	2
   659  0001B9                     util_getTemperature@shift_reg_bit3:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xB9
   663  0001B9                     	ds	2
   664  0001BB                     util_getTemperature@shift_reg_bit4:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xBB
   668  0001BB                     	ds	2
   669  0001BD                     util_getTemperature@shift_reg_bit5:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xBD
   673  0001BD                     	ds	2
   674  0001BF                     util_getTemperature@shift_reg_bit6:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xBF
   678  0001BF                     	ds	1
   679  0001C0                     util_beacon_transmission@i:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0xC0
   683  0001C0                     	ds	1
   684  0001C1                     util_getTemperature@shift_reg_bit7:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xC1
   688  0001C1                     	ds	2
   689  0001C3                     util_getTemperature@shift_reg_bit_temp:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0xC3
   693  0001C3                     	ds	2
   694  0001C5                     util_getTemperature@num_byte:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xC5
   698  0001C5                     	ds	2
   699  0001C7                     util_getTemperature@bit_in_byte:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0xC7
   703  0001C7                     	ds	2
   704  0001C9                     util_getTemperature@temperature:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0xC9
   708  0001C9                     	ds	3
   709  0001CC                     util_getTemperature@i:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0xCC
   713  0001CC                     	ds	2
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           postdec1	equ	0xFE5
   721                           fsr1h	equ	0xFE2
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	cstackBANK0
   725  000060                     __pcstackBANK0:
   726                           	opt stack 0
   727  000060                     ??_low_priority_int:
   728                           
   729                           ; 1 bytes @ 0x0
   730  000060                     	ds	17
   731  000071                     ??_util_onewire_read_byte:
   732  000071                     ?___wmul:
   733                           	opt stack 0
   734  000071                     ?___awtoft:
   735                           	opt stack 0
   736  000071                     ?___lltoft:
   737                           	opt stack 0
   738  000071                     ?___lwtoft:
   739                           	opt stack 0
   740  000071                     ?___llmod:
   741                           	opt stack 0
   742  000071                     util_onewire_write_byte@bit0:
   743                           	opt stack 0
   744  000071                     util_waits_delay_mins@i:
   745                           	opt stack 0
   746  000071                     ___wmul@multiplier:
   747                           	opt stack 0
   748  000071                     ___awtoft@c:
   749                           	opt stack 0
   750  000071                     ___lwtoft@c:
   751                           	opt stack 0
   752  000071                     ___llmod@dividend:
   753                           	opt stack 0
   754  000071                     ___lltoft@c:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x11
   758  000071                     	ds	2
   759  000073                     util_onewire_write_byte@bit1:
   760                           	opt stack 0
   761  000073                     util_waits_delay_hours@hours:
   762                           	opt stack 0
   763  000073                     ___wmul@multiplicand:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x13
   767  000073                     	ds	1
   768  000074                     ?___ftdiv:
   769                           	opt stack 0
   770  000074                     ___ftdiv@f1:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x14
   774  000074                     	ds	1
   775  000075                     ?___ftmul:
   776                           	opt stack 0
   777  000075                     util_onewire_write_byte@bit2:
   778                           	opt stack 0
   779  000075                     util_waits_delay_hours@i:
   780                           	opt stack 0
   781  000075                     ___ftmul@f1:
   782                           	opt stack 0
   783  000075                     ___llmod@divisor:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x15
   787  000075                     	ds	2
   788  000077                     util_onewire_write_byte@bit3:
   789                           	opt stack 0
   790  000077                     ___ftdiv@f2:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0x17
   794  000077                     	ds	1
   795  000078                     ___ftmul@f2:
   796                           	opt stack 0
   797                           
   798                           ; 3 bytes @ 0x18
   799  000078                     	ds	1
   800  000079                     util_onewire_write_byte@bit4:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x19
   804  000079                     	ds	1
   805  00007A                     ___ftdiv@cntr:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x1A
   809  00007A                     	ds	1
   810  00007B                     ??___ftmul:
   811  00007B                     util_onewire_write_byte@bit5:
   812                           	opt stack 0
   813  00007B                     ___ftdiv@f3:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0x1B
   817  00007B                     	ds	2
   818  00007D                     util_onewire_write_byte@bit6:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x1D
   822  00007D                     	ds	1
   823  00007E                     ___ftdiv@exp:
   824                           	opt stack 0
   825  00007E                     ___ftmul@exp:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x1E
   829  00007E                     	ds	1
   830  00007F                     ___ftdiv@sign:
   831                           	opt stack 0
   832  00007F                     util_onewire_write_byte@bit7:
   833                           	opt stack 0
   834  00007F                     util_onewire_read_byte@bit0:
   835                           	opt stack 0
   836  00007F                     ___ftmul@f3_as_product:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x1F
   840  00007F                     	ds	2
   841  000081                     util_onewire_read_byte@bit1:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x21
   845  000081                     	ds	1
   846  000082                     ___ftmul@cntr:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x22
   850  000082                     	ds	1
   851  000083                     ___ftmul@sign:
   852                           	opt stack 0
   853  000083                     util_onewire_read_byte@bit2:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x23
   857  000083                     	ds	1
   858  000084                     ?_util_getBatteryVoltage:
   859                           	opt stack 0
   860  000084                     ?_fround:
   861                           	opt stack 0
   862  000084                     ?_scale:
   863                           	opt stack 0
   864                           
   865                           ; 3 bytes @ 0x24
   866  000084                     	ds	1
   867  000085                     util_onewire_read_byte@bit3:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x25
   871  000085                     	ds	2
   872  000087                     util_onewire_read_byte@bit4:
   873                           	opt stack 0
   874  000087                     util_getBatteryVoltage@value:
   875                           	opt stack 0
   876  000087                     _fround$2789:
   877                           	opt stack 0
   878  000087                     _scale$2790:
   879                           	opt stack 0
   880                           
   881                           ; 3 bytes @ 0x27
   882  000087                     	ds	2
   883  000089                     util_onewire_read_byte@bit5:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x29
   887  000089                     	ds	1
   888  00008A                     scale@scl:
   889                           	opt stack 0
   890  00008A                     util_getBatteryVoltage@voltage:
   891                           	opt stack 0
   892  00008A                     _fround$2788:
   893                           	opt stack 0
   894                           
   895                           ; 3 bytes @ 0x2A
   896  00008A                     	ds	1
   897  00008B                     ?___fttol:
   898                           	opt stack 0
   899  00008B                     util_onewire_read_byte@bit6:
   900                           	opt stack 0
   901  00008B                     ___fttol@f1:
   902                           	opt stack 0
   903                           
   904                           ; 3 bytes @ 0x2B
   905  00008B                     	ds	2
   906  00008D                     fround@prec:
   907                           	opt stack 0
   908  00008D                     util_onewire_read_byte@bit7:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x2D
   912  00008D                     	ds	1
   913  00008E                     ?___ftadd:
   914                           	opt stack 0
   915  00008E                     ___ftadd@f1:
   916                           	opt stack 0
   917                           
   918                           ; 3 bytes @ 0x2E
   919  00008E                     	ds	1
   920  00008F                     ??___fttol:
   921  00008F                     util_onewire_read_byte@value:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x2F
   925  00008F                     	ds	2
   926  000091                     ___ftadd@f2:
   927                           	opt stack 0
   928                           
   929                           ; 3 bytes @ 0x31
   930  000091                     	ds	3
   931  000094                     ??___ftadd:
   932  000094                     ___fttol@sign1:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x34
   936  000094                     	ds	1
   937  000095                     ___fttol@lval:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x35
   941  000095                     	ds	2
   942  000097                     ___ftadd@sign:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x37
   946  000097                     	ds	1
   947  000098                     ___ftadd@exp2:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x38
   951  000098                     	ds	1
   952  000099                     ___ftadd@exp1:
   953                           	opt stack 0
   954  000099                     ___fttol@exp1:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x39
   958  000099                     	ds	1
   959  00009A                     ?_util_getSolarCurrent:
   960                           	opt stack 0
   961  00009A                     ?_util_getBatteryCurrent:
   962                           	opt stack 0
   963  00009A                     ?_util_getTemperature:
   964                           	opt stack 0
   965  00009A                     ?___ftsub:
   966                           	opt stack 0
   967  00009A                     ___ftsub@f1:
   968                           	opt stack 0
   969                           
   970                           ; 3 bytes @ 0x3A
   971  00009A                     	ds	2
   972  00009C                     util_getSolarCurrent@value:
   973                           	opt stack 0
   974  00009C                     util_getBatteryCurrent@value:
   975                           	opt stack 0
   976                           
   977                           ; 3 bytes @ 0x3C
   978  00009C                     	ds	1
   979  00009D                     ??_util_getTemperature:
   980  00009D                     ___ftsub@f2:
   981                           	opt stack 0
   982                           
   983                           ; 3 bytes @ 0x3D
   984  00009D                     	ds	2
   985  00009F                     util_getSolarCurrent@solarCurrent:
   986                           	opt stack 0
   987  00009F                     util_getBatteryCurrent@batteryCurrent:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x3F
   991  00009F                     	ds	1
   992  0000A0                     ?_sprintf:
   993                           	opt stack 0
   994  0000A0                     sprintf@sp:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x40
   998  0000A0                     	ds	2
   999  0000A2                     sprintf@f:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x42
  1003  0000A2                     	ds	12
  1004  0000AE                     ??_sprintf:
  1005                           
  1006                           ; 1 bytes @ 0x4E
  1007  0000AE                     	ds	6
  1008  0000B4                     _sprintf$2791:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0x54
  1012  0000B4                     	ds	3
  1013  0000B7                     sprintf@ap:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x57
  1017  0000B7                     	ds	2
  1018  0000B9                     sprintf@flag:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x59
  1022  0000B9                     	ds	2
  1023  0000BB                     sprintf@width:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x5B
  1027  0000BB                     	ds	2
  1028  0000BD                     sprintf@tmpval:
  1029                           	opt stack 0
  1030                           
  1031                           ; 4 bytes @ 0x5D
  1032  0000BD                     	ds	4
  1033  0000C1                     sprintf@val:
  1034                           	opt stack 0
  1035                           
  1036                           ; 4 bytes @ 0x61
  1037  0000C1                     	ds	4
  1038  0000C5                     sprintf@exp:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x65
  1042  0000C5                     	ds	2
  1043  0000C7                     sprintf@fval:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x67
  1047  0000C7                     	ds	3
  1048  0000CA                     sprintf@prec:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x6A
  1052  0000CA                     	ds	2
  1053  0000CC                     sprintf@c:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x6C
  1057  0000CC                     	ds	1
  1058  0000CD                     util_beacon_transmission@battery_voltage:
  1059                           	opt stack 0
  1060                           
  1061                           ; 3 bytes @ 0x6D
  1062  0000CD                     	ds	3
  1063  0000D0                     util_beacon_transmission@solar_current:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x70
  1067  0000D0                     	ds	2
  1068  0000D2                     util_beacon_transmission@battery_current:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x72
  1072  0000D2                     	ds	2
  1073  0000D4                     util_beacon_transmission@temperature:
  1074                           	opt stack 0
  1075                           
  1076                           ; 3 bytes @ 0x74
  1077  0000D4                     	ds	3
  1078  0000D7                     main_loop@temperature:
  1079                           	opt stack 0
  1080                           
  1081                           ; 3 bytes @ 0x77
  1082  0000D7                     	ds	3
  1083  0000DA                     main_loop@solar_current:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0x7A
  1087  0000DA                     	ds	2
  1088  0000DC                     main_loop@battery_current:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x7C
  1092  0000DC                     	ds	2
  1093  0000DE                     main_loop@battery_voltage:
  1094                           	opt stack 0
  1095                           
  1096                           ; 3 bytes @ 0x7E
  1097  0000DE                     	ds	3
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1h	equ	0xFE2
  1106                           fsr1l	equ	0xFE1
  1107                           
  1108                           	psect	cstackCOMRAM
  1109  000001                     __pcstackCOMRAM:
  1110                           	opt stack 0
  1111  000001                     ??_high_priority_int:
  1112  000001                     
  1113                           ; 1 bytes @ 0x0
  1114  000001                     	ds	19
  1115  000014                     high_priority_int@current_signal_level:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x13
  1119  000014                     	ds	2
  1120  000016                     high_priority_int@sample:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x15
  1124  000016                     	ds	2
  1125  000018                     high_priority_int@received_bit:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x17
  1129  000018                     	ds	2
  1130  00001A                     ??_init_watchdogs_initialize:
  1131  00001A                     ??_isdigit:
  1132  00001A                     ?_util_onewire_reset:
  1133                           	opt stack 0
  1134  00001A                     ?_util_onewire_read_bit:
  1135                           	opt stack 0
  1136  00001A                     ?_strlen:
  1137                           	opt stack 0
  1138  00001A                     ?___awmod:
  1139                           	opt stack 0
  1140  00001A                     ?___ftpack:
  1141                           	opt stack 0
  1142  00001A                     ?___ftneg:
  1143                           	opt stack 0
  1144  00001A                     ?__tdiv_to_l_:
  1145                           	opt stack 0
  1146  00001A                     ?__div_to_l_:
  1147                           	opt stack 0
  1148  00001A                     ?___lldiv:
  1149                           	opt stack 0
  1150  00001A                     util_onewire_write_bit@bit_in:
  1151                           	opt stack 0
  1152  00001A                     util_waits_delay_ms@ms:
  1153                           	opt stack 0
  1154  00001A                     ___awmod@dividend:
  1155                           	opt stack 0
  1156  00001A                     memset@p1:
  1157                           	opt stack 0
  1158  00001A                     strcat@to:
  1159                           	opt stack 0
  1160  00001A                     strcpy@to:
  1161                           	opt stack 0
  1162  00001A                     strlen@s:
  1163                           	opt stack 0
  1164  00001A                     __div_to_l_@f1:
  1165                           	opt stack 0
  1166  00001A                     ___ftpack@arg:
  1167                           	opt stack 0
  1168  00001A                     __tdiv_to_l_@f1:
  1169                           	opt stack 0
  1170  00001A                     ___ftge@ff1:
  1171                           	opt stack 0
  1172  00001A                     ___ftneg@f1:
  1173                           	opt stack 0
  1174  00001A                     ___lldiv@dividend:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x19
  1178  00001A                     	ds	1
  1179  00001B                     _isdigit$2418:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x1A
  1183  00001B                     	ds	1
  1184  00001C                     ??_util_onewire_reset:
  1185  00001C                     ??_util_onewire_read_bit:
  1186  00001C                     ??_strlen:
  1187  00001C                     ??_util_waits_delay_ms:
  1188  00001C                     isdigit@c:
  1189                           	opt stack 0
  1190  00001C                     util_onewire_write_byte@value:
  1191                           	opt stack 0
  1192  00001C                     ___awmod@divisor:
  1193                           	opt stack 0
  1194  00001C                     memset@c:
  1195                           	opt stack 0
  1196  00001C                     strcat@from:
  1197                           	opt stack 0
  1198  00001C                     strcpy@from:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x1B
  1202  00001C                     	ds	1
  1203  00001D                     ___ftpack@exp:
  1204                           	opt stack 0
  1205  00001D                     util_onewire_reset@presence:
  1206                           	opt stack 0
  1207  00001D                     util_onewire_read_bit@value:
  1208                           	opt stack 0
  1209  00001D                     util_waits_delay_ms@i:
  1210                           	opt stack 0
  1211  00001D                     __div_to_l_@f2:
  1212                           	opt stack 0
  1213  00001D                     __tdiv_to_l_@f2:
  1214                           	opt stack 0
  1215  00001D                     ___ftge@ff2:
  1216                           	opt stack 0
  1217                           
  1218                           ; 3 bytes @ 0x1C
  1219  00001D                     	ds	1
  1220  00001E                     ??_util_onewire_write_byte:
  1221  00001E                     ___awmod@counter:
  1222                           	opt stack 0
  1223  00001E                     ___ftpack@sign:
  1224                           	opt stack 0
  1225  00001E                     memset@n:
  1226                           	opt stack 0
  1227  00001E                     strcat@cp:
  1228                           	opt stack 0
  1229  00001E                     strcpy@cp:
  1230                           	opt stack 0
  1231  00001E                     strlen@cp:
  1232                           	opt stack 0
  1233  00001E                     ___lldiv@divisor:
  1234                           	opt stack 0
  1235                           
  1236                           ; 4 bytes @ 0x1D
  1237  00001E                     	ds	1
  1238  00001F                     ??___ftpack:
  1239  00001F                     ?_util_onewire_read_byte:
  1240                           	opt stack 0
  1241  00001F                     ___awmod@sign:
  1242                           	opt stack 0
  1243  00001F                     util_waits_delay_secs@secs:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x1E
  1247  00001F                     	ds	1
  1248  000020                     ??__tdiv_to_l_:
  1249  000020                     ??___ftge:
  1250  000020                     ?___awdiv:
  1251                           	opt stack 0
  1252  000020                     util_transmit_morse_sequence@morse_sequence:
  1253                           	opt stack 0
  1254  000020                     ___awdiv@dividend:
  1255                           	opt stack 0
  1256  000020                     memset@p:
  1257                           	opt stack 0
  1258  000020                     __div_to_l_@quot:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x1F
  1262  000020                     	ds	1
  1263  000021                     ??_util_waits_delay_secs:
  1264                           
  1265                           ; 1 bytes @ 0x20
  1266  000021                     	ds	1
  1267  000022                     ??_util_transmit_morse_sequence:
  1268  000022                     ??___lltoft:
  1269  000022                     ___awtoft@sign:
  1270                           	opt stack 0
  1271  000022                     util_waits_delay_secs@i:
  1272                           	opt stack 0
  1273  000022                     ___awdiv@divisor:
  1274                           	opt stack 0
  1275  000022                     ___lldiv@quotient:
  1276                           	opt stack 0
  1277                           
  1278                           ; 4 bytes @ 0x21
  1279  000022                     	ds	1
  1280  000023                     ??___ftdiv:
  1281  000023                     __tdiv_to_l_@quot:
  1282                           	opt stack 0
  1283                           
  1284                           ; 4 bytes @ 0x22
  1285  000023                     	ds	1
  1286  000024                     ___awdiv@counter:
  1287                           	opt stack 0
  1288  000024                     __div_to_l_@cntr:
  1289                           	opt stack 0
  1290  000024                     util_transmit_morse_sequence@i:
  1291                           	opt stack 0
  1292  000024                     util_waits_delay_secs@j:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x23
  1296  000024                     	ds	1
  1297  000025                     ___awdiv@sign:
  1298                           	opt stack 0
  1299  000025                     __div_to_l_@exp1:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x24
  1303  000025                     	ds	1
  1304  000026                     util_transmit_letter@letter:
  1305                           	opt stack 0
  1306  000026                     ___lldiv@counter:
  1307                           	opt stack 0
  1308  000026                     ___lltoft@exp:
  1309                           	opt stack 0
  1310  000026                     util_waits_delay_mins@minutes:
  1311                           	opt stack 0
  1312  000026                     ___awdiv@quotient:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x25
  1316  000026                     	ds	1
  1317  000027                     __tdiv_to_l_@cntr:
  1318                           	opt stack 0
  1319  000027                     ___llmod@counter:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x26
  1323  000027                     	ds	1
  1324  000028                     ??_util_waits_delay_mins:
  1325  000028                     __tdiv_to_l_@exp1:
  1326                           	opt stack 0
  1327  000028                     ___wmul@product:
  1328                           	opt stack 0
  1329                           
  1330                           ; 2 bytes @ 0x27
  1331  000028                     	ds	1
  1332  000029                     ??_util_waits_delay_hours:
  1333                           
  1334                           ; 1 bytes @ 0x28
  1335  000029                     	ds	1
  1336  00002A                     tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           postdec1	equ	0xFE5
  1343                           fsr1h	equ	0xFE2
  1344                           fsr1l	equ	0xFE1
  1345                           
  1346                           ; 1 bytes @ 0x29
  1347 ;;
  1348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1349 ;;
  1350 ;; *************** function _main *****************
  1351 ;; Defined at:
  1352 ;;		line 19 in file "easat2_main_mcu.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1366 ;;      Params:         0       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels required when called:    8
  1372 ;; This function calls:
  1373 ;;		_init_initialize
  1374 ;;		_main_loop
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text0
  1381  003A86                     __ptext0:
  1382                           	opt stack 0
  1383  003A86                     _main:
  1384                           	opt stack 23
  1385                           
  1386                           ;easat2_main_mcu.c: 22: init_initialize();
  1387                           
  1388                           ;incstack = 0
  1389  003A86  EC23  F01D         	call	_init_initialize	;wreg free
  1390                           
  1391                           ;easat2_main_mcu.c: 25: main_loop();
  1392  003A8A  EC66  F019         	call	_main_loop	;wreg free
  1393  003A8E  EF53  F000         	goto	start
  1394  003A92                     __end_of_main:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406 ;; *************** function _main_loop *****************
  1407 ;; Defined at:
  1408 ;;		line 31 in file "easat2_main_mcu.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  battery_volt    3  126[BANK0 ] float 
  1413 ;;  temperature     3  119[BANK0 ] float 
  1414 ;;  battery_curr    2  124[BANK0 ] int 
  1415 ;;  solar_curren    2  122[BANK0 ] int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         0       0       0       0       0       0       0
  1426 ;;      Locals:         0      10       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0
  1428 ;;      Totals:         0      10       0       0       0       0       0
  1429 ;;Total ram usage:       10 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    7
  1432 ;; This function calls:
  1433 ;;		_init_watchdogs_initialize
  1434 ;;		_util_beacon_transmission
  1435 ;;		_util_getBatteryCurrent
  1436 ;;		_util_getBatteryVoltage
  1437 ;;		_util_getSolarCurrent
  1438 ;;		_util_getTemperature
  1439 ;;		_util_waits_delay_hours
  1440 ;;		_util_waits_delay_mins
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text1
  1447  0032CC                     __ptext1:
  1448                           	opt stack 0
  1449  0032CC                     _main_loop:
  1450                           	opt stack 23
  1451  0032CC                     
  1452                           ;easat2_main_mcu.c: 41: init_watchdogs_initialize();
  1453  0032CC  ECED  F01C         	call	_init_watchdogs_initialize	;wreg free
  1454                           
  1455                           ;easat2_main_mcu.c: 46: battery_voltage = util_getBatteryVoltage();
  1456  0032D0  ECC0  F017         	call	_util_getBatteryVoltage	;wreg free
  1457  0032D4  C084  F0DE         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1458  0032D8  C085  F0DF         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1459  0032DC  C086  F0E0         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1460                           
  1461                           ;easat2_main_mcu.c: 49: solar_current = util_getSolarCurrent();
  1462  0032E0  ECF6  F016         	call	_util_getSolarCurrent	;wreg free
  1463  0032E4  C09A  F0DA         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1464  0032E8  C09B  F0DB         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1465                           
  1466                           ;easat2_main_mcu.c: 52: battery_current = util_getBatteryCurrent();
  1467  0032EC  EC5B  F017         	call	_util_getBatteryCurrent	;wreg free
  1468  0032F0  C09A  F0DC         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1469  0032F4  C09B  F0DD         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1470                           
  1471                           ;easat2_main_mcu.c: 55: temperature = util_getTemperature();
  1472  0032F8  EC17  F006         	call	_util_getTemperature	;wreg free
  1473  0032FC  C09A  F0D7         	movff	?_util_getTemperature,main_loop@temperature
  1474  003300  C09B  F0D8         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1475  003304  C09C  F0D9         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1476                           
  1477                           ;easat2_main_mcu.c: 59: if (battery_voltage >= 0) {
  1478  003308  0100               	movlb	0	; () banked
  1479  00330A  BFE0               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1480  00330C  D017               	goto	l5649
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;easat2_main_mcu.c: 60: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1484  00330E  C0DE  F0CD         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1485  003312  C0DF  F0CE         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1486  003316  C0E0  F0CF         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1487  00331A  C0DA  F0D0         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1488  00331E  C0DB  F0D1         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1489  003322  C0DC  F0D2         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1490  003326  C0DD  F0D3         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1491  00332A  C0D7  F0D4         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1492  00332E  C0D8  F0D5         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1493  003332  C0D9  F0D6         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1494  003336  EC81  F016         	call	_util_beacon_transmission	;wreg free
  1495                           
  1496                           ;easat2_main_mcu.c: 61: } else {
  1497  00333A  D007               	goto	l77
  1498  00333C                     l5649:
  1499                           
  1500                           ;easat2_main_mcu.c: 63: util_waits_delay_hours(2);
  1501  00333C  0E00               	movlw	0
  1502  00333E  0100               	movlb	0	; () banked
  1503  003340  6F74               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1504  003342  0E02               	movlw	2
  1505  003344  6F73               	movwf	util_waits_delay_hours@hours& (0+255),b
  1506  003346  ECA7  F01B         	call	_util_waits_delay_hours	;wreg free
  1507  00334A                     l77:
  1508                           
  1509                           ;easat2_main_mcu.c: 64: }
  1510                           ;easat2_main_mcu.c: 67: util_waits_delay_mins(3);
  1511  00334A  0E00               	movlw	0
  1512  00334C  6E27               	movwf	util_waits_delay_mins@minutes+1,c
  1513  00334E  0E03               	movlw	3
  1514  003350  6E26               	movwf	util_waits_delay_mins@minutes,c
  1515  003352  ECE3  F01B         	call	_util_waits_delay_mins	;wreg free
  1516                           
  1517                           ;easat2_main_mcu.c: 70: } while (1);
  1518  003356  D7BA               	goto	l5641
  1519  003358                     __end_of_main_loop:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1h	equ	0xFE2
  1529                           fsr1l	equ	0xFE1
  1530                           
  1531 ;; *************** function _util_waits_delay_hours *****************
  1532 ;; Defined at:
  1533 ;;		line 17 in file "easat2_util_waits.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  hours           2   19[BANK0 ] int 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  i               2   21[BANK0 ] int 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         0       2       0       0       0       0       0
  1548 ;;      Locals:         0       2       0       0       0       0       0
  1549 ;;      Temps:          1       0       0       0       0       0       0
  1550 ;;      Totals:         1       4       0       0       0       0       0
  1551 ;;Total ram usage:        5 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    5
  1554 ;; This function calls:
  1555 ;;		_util_waits_delay_mins
  1556 ;; This function is called by:
  1557 ;;		_main_loop
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text2
  1562  00374E                     __ptext2:
  1563                           	opt stack 0
  1564  00374E                     _util_waits_delay_hours:
  1565                           	opt stack 24
  1566                           
  1567                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1568                           
  1569                           ;incstack = 0
  1570  00374E  0E00               	movlw	0
  1571  003750  0100               	movlb	0	; () banked
  1572  003752  6F76               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1573  003754  0E00               	movlw	0
  1574  003756  6F75               	movwf	util_waits_delay_hours@i& (0+255),b
  1575  003758  D009               	goto	l5639
  1576  00375A                     l5635:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1580  00375A  0E00               	movlw	0
  1581  00375C  6E27               	movwf	util_waits_delay_mins@minutes+1,c
  1582  00375E  0E3C               	movlw	60
  1583  003760  6E26               	movwf	util_waits_delay_mins@minutes,c
  1584  003762  ECE3  F01B         	call	_util_waits_delay_mins	;wreg free
  1585  003766  0100               	movlb	0	; () banked
  1586  003768  4B75               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1587  00376A  2B76               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1588  00376C                     l5639:
  1589                           
  1590                           ; BSR set to: 0
  1591  00376C  0100               	movlb	0	; () banked
  1592  00376E  5173               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1593  003770  0100               	movlb	0	; () banked
  1594  003772  5D75               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1595  003774  0100               	movlb	0	; () banked
  1596  003776  5176               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1597  003778  0A80               	xorlw	128
  1598  00377A  6E29               	movwf	??_util_waits_delay_hours& (0+255),c
  1599  00377C  0100               	movlb	0	; () banked
  1600  00377E  5174               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1601  003780  0A80               	xorlw	128
  1602  003782  5829               	subwfb	??_util_waits_delay_hours& (0+255),w,c
  1603  003784  B0D8               	btfsc	status,0,c
  1604  003786  0012               	return	
  1605  003788  D7E8               	goto	l5635
  1606  00378A                     __end_of_util_waits_delay_hours:
  1607                           	opt stack 0
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1h	equ	0xFE2
  1616                           fsr1l	equ	0xFE1
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _util_waits_delay_mins *****************
  1620 ;; Defined at:
  1621 ;;		line 24 in file "easat2_util_waits.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  minutes         2   37[COMRAM] int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  i               2   17[BANK0 ] int 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         2       0       0       0       0       0       0
  1636 ;;      Locals:         0       2       0       0       0       0       0
  1637 ;;      Temps:          1       0       0       0       0       0       0
  1638 ;;      Totals:         3       2       0       0       0       0       0
  1639 ;;Total ram usage:        5 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    4
  1642 ;; This function calls:
  1643 ;;		_util_waits_delay_secs
  1644 ;; This function is called by:
  1645 ;;		_main_loop
  1646 ;;		_util_waits_delay_hours
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text3
  1651  0037C6                     __ptext3:
  1652                           	opt stack 0
  1653  0037C6                     _util_waits_delay_mins:
  1654                           	opt stack 25
  1655                           
  1656                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;incstack = 0
  1660  0037C6  0E00               	movlw	0
  1661  0037C8  0100               	movlb	0	; () banked
  1662  0037CA  6F72               	movwf	(util_waits_delay_mins@i+1)& (0+255),b
  1663  0037CC  0E00               	movlw	0
  1664  0037CE  6F71               	movwf	util_waits_delay_mins@i& (0+255),b
  1665  0037D0  D009               	goto	l5035
  1666  0037D2                     l5031:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1670  0037D2  0E00               	movlw	0
  1671  0037D4  6E20               	movwf	util_waits_delay_secs@secs+1,c
  1672  0037D6  0E3C               	movlw	60
  1673  0037D8  6E1F               	movwf	util_waits_delay_secs@secs,c
  1674  0037DA  EC18  F01B         	call	_util_waits_delay_secs	;wreg free
  1675  0037DE  0100               	movlb	0	; () banked
  1676  0037E0  4B71               	infsnz	util_waits_delay_mins@i& (0+255),f,b
  1677  0037E2  2B72               	incf	(util_waits_delay_mins@i+1)& (0+255),f,b
  1678  0037E4                     l5035:
  1679                           
  1680                           ; BSR set to: 0
  1681  0037E4  5026               	movf	util_waits_delay_mins@minutes,w,c
  1682  0037E6  0100               	movlb	0	; () banked
  1683  0037E8  5D71               	subwf	util_waits_delay_mins@i& (0+255),w,b
  1684  0037EA  0100               	movlb	0	; () banked
  1685  0037EC  5172               	movf	(util_waits_delay_mins@i+1)& (0+255),w,b
  1686  0037EE  0A80               	xorlw	128
  1687  0037F0  6E28               	movwf	??_util_waits_delay_mins& (0+255),c
  1688  0037F2  5027               	movf	util_waits_delay_mins@minutes+1,w,c
  1689  0037F4  0A80               	xorlw	128
  1690  0037F6  5828               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1691  0037F8  B0D8               	btfsc	status,0,c
  1692  0037FA  0012               	return	
  1693  0037FC  D7EA               	goto	l5031
  1694  0037FE                     __end_of_util_waits_delay_mins:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1h	equ	0xFE2
  1704                           fsr1l	equ	0xFE1
  1705                           status	equ	0xFD8
  1706                           
  1707 ;; *************** function _util_getTemperature *****************
  1708 ;; Defined at:
  1709 ;;		line 118 in file "easat2_util_inputs.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  bit_mem       144    0[BANK1 ] int [72]
  1714 ;;  byte_mem       18  144[BANK1 ] int [9]
  1715 ;;  temperature     3  201[BANK1 ] float 
  1716 ;;  sign            3  164[BANK1 ] float 
  1717 ;;  i               2  204[BANK1 ] int 
  1718 ;;  bit_in_byte     2  199[BANK1 ] int 
  1719 ;;  num_byte        2  197[BANK1 ] int 
  1720 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1721 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1722 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1723 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1724 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1725 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1726 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1727 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1728 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1729 ;;  num_bit         2  162[BANK1 ] int 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  3   58[BANK0 ] float 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         0       3       0       0       0       0       0
  1740 ;;      Locals:         0       0     206       0       0       0       0
  1741 ;;      Temps:          0       3       0       0       0       0       0
  1742 ;;      Totals:         0       6     206       0       0       0       0
  1743 ;;Total ram usage:      212 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		___awtoft
  1748 ;;		___ftadd
  1749 ;;		___ftdiv
  1750 ;;		___ftmul
  1751 ;;		_util_onewire_read_byte
  1752 ;;		_util_onewire_reset
  1753 ;;		_util_onewire_write_byte
  1754 ;;		_util_waits_delay_secs
  1755 ;; This function is called by:
  1756 ;;		_main_loop
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text4
  1761  000C2E                     __ptext4:
  1762                           	opt stack 0
  1763  000C2E                     _util_getTemperature:
  1764                           	opt stack 25
  1765                           
  1766                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1767                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1768                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;incstack = 0
  1772  000C2E  0E00               	movlw	0
  1773  000C30  0101               	movlb	1	; () banked
  1774  000C32  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1775  000C34  0E00               	movlw	0
  1776  000C36  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1777                           
  1778                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1779  000C38  0E00               	movlw	0
  1780  000C3A  0101               	movlb	1	; () banked
  1781  000C3C  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1782  000C3E  0E00               	movlw	0
  1783  000C40  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1784                           
  1785                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1786  000C42  0E00               	movlw	0
  1787  000C44  0101               	movlb	1	; () banked
  1788  000C46  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1789  000C48  0E00               	movlw	0
  1790  000C4A  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1791                           
  1792                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1793  000C4C  0E00               	movlw	0
  1794  000C4E  0101               	movlb	1	; () banked
  1795  000C50  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1796  000C52  0E00               	movlw	0
  1797  000C54  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1798                           
  1799                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1800  000C56  0E00               	movlw	0
  1801  000C58  0101               	movlb	1	; () banked
  1802  000C5A  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1803  000C5C  0E00               	movlw	0
  1804  000C5E  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1805                           
  1806                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1807  000C60  0E00               	movlw	0
  1808  000C62  0101               	movlb	1	; () banked
  1809  000C64  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1810  000C66  0E00               	movlw	0
  1811  000C68  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1812                           
  1813                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1814  000C6A  0E00               	movlw	0
  1815  000C6C  0101               	movlb	1	; () banked
  1816  000C6E  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1817  000C70  0E00               	movlw	0
  1818  000C72  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1819                           
  1820                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1821  000C74  0E00               	movlw	0
  1822  000C76  0101               	movlb	1	; () banked
  1823  000C78  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1824  000C7A  0E00               	movlw	0
  1825  000C7C  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1826                           
  1827                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1828  000C7E  0E00               	movlw	0
  1829  000C80  0101               	movlb	1	; () banked
  1830  000C82  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1831  000C84  0E00               	movlw	0
  1832  000C86  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1833                           
  1834                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1835  000C88  0E00               	movlw	0
  1836  000C8A  0101               	movlb	1	; () banked
  1837  000C8C  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1838  000C8E  0E00               	movlw	0
  1839  000C90  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1840  000C92  0E00               	movlw	0
  1841  000C94  0101               	movlb	1	; () banked
  1842  000C96  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1843  000C98  0E00               	movlw	0
  1844  000C9A  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1845  000C9C  0E00               	movlw	0
  1846  000C9E  0101               	movlb	1	; () banked
  1847  000CA0  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1848  000CA2  0E00               	movlw	0
  1849  000CA4  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1850                           
  1851                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1852  000CA6  0E00               	movlw	0
  1853  000CA8  0101               	movlb	1	; () banked
  1854  000CAA  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1855  000CAC  0E00               	movlw	0
  1856  000CAE  0101               	movlb	1	; () banked
  1857  000CB0  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1858  000CB2  0E00               	movlw	0
  1859  000CB4  0101               	movlb	1	; () banked
  1860  000CB6  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1861                           
  1862                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1863  000CB8  0E00               	movlw	0
  1864  000CBA  0101               	movlb	1	; () banked
  1865  000CBC  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1866  000CBE  0E80               	movlw	128
  1867  000CC0  0101               	movlb	1	; () banked
  1868  000CC2  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1869  000CC4  0E3F               	movlw	63
  1870  000CC6  0101               	movlb	1	; () banked
  1871  000CC8  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1872                           
  1873                           ;easat2_util_inputs.c: 137: int i = 0;
  1874  000CCA  0E00               	movlw	0
  1875  000CCC  0101               	movlb	1	; () banked
  1876  000CCE  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1877  000CD0  0E00               	movlw	0
  1878  000CD2  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;easat2_util_inputs.c: 143: INTCONbits.GIE = 0;
  1882  000CD4  9EF2               	bcf	intcon,7,c	;volatile
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;easat2_util_inputs.c: 151: if (util_onewire_reset()) return -99.1;
  1886  000CD6  EC65  F01B         	call	_util_onewire_reset	;wreg free
  1887  000CDA  501A               	movf	?_util_onewire_reset,w,c
  1888  000CDC  101B               	iorwf	?_util_onewire_reset+1,w,c
  1889  000CDE  B4D8               	btfsc	status,2,c
  1890  000CE0  D00A               	goto	l5479
  1891  000CE2  0E33               	movlw	51
  1892  000CE4  0100               	movlb	0	; () banked
  1893  000CE6  6F9A               	movwf	?_util_getTemperature& (0+255),b
  1894  000CE8  0EC6               	movlw	198
  1895  000CEA  0100               	movlb	0	; () banked
  1896  000CEC  6F9B               	movwf	(?_util_getTemperature+1)& (0+255),b
  1897  000CEE  0EC2               	movlw	194
  1898  000CF0  0100               	movlb	0	; () banked
  1899  000CF2  6F9C               	movwf	(?_util_getTemperature+2)& (0+255),b
  1900                           
  1901                           ; BSR set to: 0
  1902  000CF4  0012               	return	
  1903  000CF6                     l5479:
  1904                           
  1905                           ;easat2_util_inputs.c: 154: util_onewire_write_byte(0xCC);
  1906  000CF6  0E00               	movlw	0
  1907  000CF8  6E1D               	movwf	util_onewire_write_byte@value+1,c
  1908  000CFA  0ECC               	movlw	204
  1909  000CFC  6E1C               	movwf	util_onewire_write_byte@value,c
  1910  000CFE  ECA2  F012         	call	_util_onewire_write_byte	;wreg free
  1911                           
  1912                           ;easat2_util_inputs.c: 157: util_onewire_write_byte(0x44);
  1913  000D02  0E00               	movlw	0
  1914  000D04  6E1D               	movwf	util_onewire_write_byte@value+1,c
  1915  000D06  0E44               	movlw	68
  1916  000D08  6E1C               	movwf	util_onewire_write_byte@value,c
  1917  000D0A  ECA2  F012         	call	_util_onewire_write_byte	;wreg free
  1918                           
  1919                           ;easat2_util_inputs.c: 162: TRISAbits.TRISA3 = 1;
  1920  000D0E  8692               	bsf	3986,3,c	;volatile
  1921                           
  1922                           ;easat2_util_inputs.c: 164: INTCONbits.GIE = 1;
  1923  000D10  8EF2               	bsf	intcon,7,c	;volatile
  1924                           
  1925                           ;easat2_util_inputs.c: 168: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1926  000D12  0E00               	movlw	0
  1927  000D14  0101               	movlb	1	; () banked
  1928  000D16  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1929  000D18  0E00               	movlw	0
  1930  000D1A  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1931  000D1C  D009               	goto	l5491
  1932  000D1E                     l5487:
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;easat2_util_inputs.c: 169: util_waits_delay_secs(1);
  1936  000D1E  0E00               	movlw	0
  1937  000D20  6E20               	movwf	util_waits_delay_secs@secs+1,c
  1938  000D22  0E01               	movlw	1
  1939  000D24  6E1F               	movwf	util_waits_delay_secs@secs,c
  1940  000D26  EC18  F01B         	call	_util_waits_delay_secs	;wreg free
  1941  000D2A  0101               	movlb	1	; () banked
  1942  000D2C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1943  000D2E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1944  000D30                     l5491:
  1945                           
  1946                           ; BSR set to: 1
  1947  000D30  0101               	movlb	1	; () banked
  1948  000D32  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1949  000D34  D008               	goto	l5493
  1950  000D36  0101               	movlb	1	; () banked
  1951  000D38  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1952  000D3A  E107               	bnz	l5495
  1953  000D3C  0E05               	movlw	5
  1954  000D3E  0101               	movlb	1	; () banked
  1955  000D40  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1956  000D42  B0D8               	btfsc	status,0,c
  1957  000D44  D002               	goto	l5495
  1958  000D46                     l5493:
  1959                           
  1960                           ; BSR set to: 1
  1961  000D46  A680               	btfss	3968,3,c	;volatile
  1962  000D48  D7EA               	goto	l5487
  1963  000D4A                     l5495:
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;easat2_util_inputs.c: 171: if (i == 5) return -99.2;
  1967  000D4A  0E05               	movlw	5
  1968  000D4C  0101               	movlb	1	; () banked
  1969  000D4E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1970  000D50  0101               	movlb	1	; () banked
  1971  000D52  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1972  000D54  A4D8               	btfss	status,2,c
  1973  000D56  D00A               	goto	l148
  1974                           
  1975                           ; BSR set to: 1
  1976  000D58  0E66               	movlw	102
  1977  000D5A  0100               	movlb	0	; () banked
  1978  000D5C  6F9A               	movwf	?_util_getTemperature& (0+255),b
  1979  000D5E  0EC6               	movlw	198
  1980  000D60  0100               	movlb	0	; () banked
  1981  000D62  6F9B               	movwf	(?_util_getTemperature+1)& (0+255),b
  1982  000D64  0EC2               	movlw	194
  1983  000D66  0100               	movlb	0	; () banked
  1984  000D68  6F9C               	movwf	(?_util_getTemperature+2)& (0+255),b
  1985                           
  1986                           ; BSR set to: 0
  1987  000D6A  0012               	return	
  1988  000D6C                     l148:
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;easat2_util_inputs.c: 175: INTCONbits.GIE = 0;
  1992  000D6C  9EF2               	bcf	intcon,7,c	;volatile
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;easat2_util_inputs.c: 181: if (util_onewire_reset()) return -99.3;
  1996  000D6E  EC65  F01B         	call	_util_onewire_reset	;wreg free
  1997  000D72  501A               	movf	?_util_onewire_reset,w,c
  1998  000D74  101B               	iorwf	?_util_onewire_reset+1,w,c
  1999  000D76  B4D8               	btfsc	status,2,c
  2000  000D78  D00A               	goto	l5507
  2001  000D7A  0E9A               	movlw	154
  2002  000D7C  0100               	movlb	0	; () banked
  2003  000D7E  6F9A               	movwf	?_util_getTemperature& (0+255),b
  2004  000D80  0EC6               	movlw	198
  2005  000D82  0100               	movlb	0	; () banked
  2006  000D84  6F9B               	movwf	(?_util_getTemperature+1)& (0+255),b
  2007  000D86  0EC2               	movlw	194
  2008  000D88  0100               	movlb	0	; () banked
  2009  000D8A  6F9C               	movwf	(?_util_getTemperature+2)& (0+255),b
  2010                           
  2011                           ; BSR set to: 0
  2012  000D8C  0012               	return	
  2013  000D8E                     l5507:
  2014                           
  2015                           ;easat2_util_inputs.c: 184: util_onewire_write_byte(0xCC);
  2016  000D8E  0E00               	movlw	0
  2017  000D90  6E1D               	movwf	util_onewire_write_byte@value+1,c
  2018  000D92  0ECC               	movlw	204
  2019  000D94  6E1C               	movwf	util_onewire_write_byte@value,c
  2020  000D96  ECA2  F012         	call	_util_onewire_write_byte	;wreg free
  2021                           
  2022                           ;easat2_util_inputs.c: 187: util_onewire_write_byte(0xBE);
  2023  000D9A  0E00               	movlw	0
  2024  000D9C  6E1D               	movwf	util_onewire_write_byte@value+1,c
  2025  000D9E  0EBE               	movlw	190
  2026  000DA0  6E1C               	movwf	util_onewire_write_byte@value,c
  2027  000DA2  ECA2  F012         	call	_util_onewire_write_byte	;wreg free
  2028                           
  2029                           ;easat2_util_inputs.c: 198: byte_mem[0] = util_onewire_read_byte();
  2030  000DA6  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2031  000DAA  C01F  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2032  000DAE  C020  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2033                           
  2034                           ;easat2_util_inputs.c: 200: byte_mem[1] = util_onewire_read_byte();
  2035  000DB2  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2036  000DB6  C01F  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2037  000DBA  C020  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2038                           
  2039                           ;easat2_util_inputs.c: 202: byte_mem[2] = util_onewire_read_byte();
  2040  000DBE  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2041  000DC2  C01F  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2042  000DC6  C020  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2043                           
  2044                           ;easat2_util_inputs.c: 204: byte_mem[3] = util_onewire_read_byte();
  2045  000DCA  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2046  000DCE  C01F  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2047  000DD2  C020  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2048                           
  2049                           ;easat2_util_inputs.c: 206: byte_mem[4] = util_onewire_read_byte();
  2050  000DD6  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2051  000DDA  C01F  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2052  000DDE  C020  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2053                           
  2054                           ;easat2_util_inputs.c: 208: byte_mem[5] = util_onewire_read_byte();
  2055  000DE2  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2056  000DE6  C01F  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2057  000DEA  C020  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2058                           
  2059                           ;easat2_util_inputs.c: 210: byte_mem[6] = util_onewire_read_byte();
  2060  000DEE  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2061  000DF2  C01F  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2062  000DF6  C020  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2063                           
  2064                           ;easat2_util_inputs.c: 212: byte_mem[7] = util_onewire_read_byte();
  2065  000DFA  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2066  000DFE  C01F  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2067  000E02  C020  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2068                           
  2069                           ;easat2_util_inputs.c: 214: byte_mem[8] = util_onewire_read_byte();
  2070  000E06  ECD8  F011         	call	_util_onewire_read_byte	;wreg free
  2071  000E0A  C01F  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2072  000E0E  C020  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2073                           
  2074                           ;easat2_util_inputs.c: 218: INTCONbits.GIE = 1;
  2075  000E12  8EF2               	bsf	intcon,7,c	;volatile
  2076                           
  2077                           ;easat2_util_inputs.c: 224: for (num_byte = 0; num_byte < 9; num_byte++) {
  2078  000E14  0E00               	movlw	0
  2079  000E16  0101               	movlb	1	; () banked
  2080  000E18  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2081  000E1A  0E00               	movlw	0
  2082  000E1C  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2083  000E1E                     l5513:
  2084                           
  2085                           ; BSR set to: 1
  2086  000E1E  0101               	movlb	1	; () banked
  2087  000E20  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2088  000E22  D008               	goto	l5517
  2089  000E24  0101               	movlb	1	; () banked
  2090  000E26  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2091  000E28  E14F               	bnz	l5535
  2092  000E2A  0E09               	movlw	9
  2093  000E2C  0101               	movlb	1	; () banked
  2094  000E2E  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2095  000E30  B0D8               	btfsc	status,0,c
  2096  000E32  D04A               	goto	l5535
  2097  000E34                     l5517:
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;easat2_util_inputs.c: 225: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2101  000E34  0E00               	movlw	0
  2102  000E36  0101               	movlb	1	; () banked
  2103  000E38  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2104  000E3A  0E00               	movlw	0
  2105  000E3C  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2106  000E3E                     l5519:
  2107                           
  2108                           ; BSR set to: 1
  2109  000E3E  0101               	movlb	1	; () banked
  2110  000E40  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2111  000E42  D008               	goto	l5523
  2112  000E44  0101               	movlb	1	; () banked
  2113  000E46  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2114  000E48  E13B               	bnz	l5531
  2115  000E4A  0E08               	movlw	8
  2116  000E4C  0101               	movlb	1	; () banked
  2117  000E4E  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2118  000E50  B0D8               	btfsc	status,0,c
  2119  000E52  D036               	goto	l5531
  2120  000E54                     l5523:
  2121                           
  2122                           ; BSR set to: 1
  2123                           ;easat2_util_inputs.c: 226: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2124  000E54  C1C7  F09D         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2125  000E58  90D8               	bcf	status,0,c
  2126  000E5A  0101               	movlb	1	; () banked
  2127  000E5C  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2128  000E5E  6ED9               	movwf	fsr2l,c
  2129  000E60  0101               	movlb	1	; () banked
  2130  000E62  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2131  000E64  6EDA               	movwf	fsr2h,c
  2132  000E66  0E90               	movlw	low util_getTemperature@byte_mem
  2133  000E68  26D9               	addwf	fsr2l,f,c
  2134  000E6A  0E01               	movlw	high util_getTemperature@byte_mem
  2135  000E6C  22DA               	addwfc	fsr2h,f,c
  2136  000E6E  CFDE F09E          	movff	postinc2,??_util_getTemperature+1
  2137  000E72  CFDD F09F          	movff	postdec2,??_util_getTemperature+2
  2138  000E76  0100               	movlb	0	; () banked
  2139  000E78  2B9D               	incf	??_util_getTemperature& (0+255),f,b
  2140  000E7A  D004               	goto	u5754
  2141  000E7C                     u5755:
  2142  000E7C  0100               	movlb	0	; () banked
  2143  000E7E  359F               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2144  000E80  339F               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2145  000E82  339E               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2146  000E84                     u5754:
  2147  000E84  0100               	movlb	0	; () banked
  2148  000E86  2F9D               	decfsz	??_util_getTemperature& (0+255),f,b
  2149  000E88  D7F9               	goto	u5755
  2150  000E8A  0E01               	movlw	1
  2151  000E8C  0100               	movlb	0	; () banked
  2152  000E8E  179E               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2153  000E90  0E00               	movlw	0
  2154  000E92  179F               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2155  000E94  90D8               	bcf	status,0,c
  2156  000E96  0101               	movlb	1	; () banked
  2157  000E98  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2158  000E9A  6ED9               	movwf	fsr2l,c
  2159  000E9C  0101               	movlb	1	; () banked
  2160  000E9E  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2161  000EA0  6EDA               	movwf	fsr2h,c
  2162  000EA2  0E00               	movlw	low util_getTemperature@bit_mem
  2163  000EA4  26D9               	addwf	fsr2l,f,c
  2164  000EA6  0E01               	movlw	high util_getTemperature@bit_mem
  2165  000EA8  22DA               	addwfc	fsr2h,f,c
  2166  000EAA  C09E  FFDE         	movff	??_util_getTemperature+1,postinc2
  2167  000EAE  C09F  FFDD         	movff	??_util_getTemperature+2,postdec2
  2168                           
  2169                           ; BSR set to: 1
  2170  000EB2  0101               	movlb	1	; () banked
  2171  000EB4  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2172  000EB6  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2173                           
  2174                           ; BSR set to: 1
  2175  000EB8  0101               	movlb	1	; () banked
  2176  000EBA  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2177  000EBC  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2178  000EBE  D7BF               	goto	l5519
  2179  000EC0                     l5531:
  2180                           
  2181                           ; BSR set to: 1
  2182  000EC0  0101               	movlb	1	; () banked
  2183  000EC2  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2184  000EC4  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2185  000EC6  D7AB               	goto	l5513
  2186  000EC8                     l5535:
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;easat2_util_inputs.c: 227: }
  2190                           ;easat2_util_inputs.c: 231: for (i = 0; i < (9*8); i++) {
  2191  000EC8  0E00               	movlw	0
  2192  000ECA  0101               	movlb	1	; () banked
  2193  000ECC  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2194  000ECE  0E00               	movlw	0
  2195  000ED0  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2196  000ED2                     l5537:
  2197                           
  2198                           ; BSR set to: 1
  2199  000ED2  0101               	movlb	1	; () banked
  2200  000ED4  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2201  000ED6  D008               	goto	l5541
  2202  000ED8  0101               	movlb	1	; () banked
  2203  000EDA  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2204  000EDC  E154               	bnz	l5563
  2205  000EDE  0E48               	movlw	72
  2206  000EE0  0101               	movlb	1	; () banked
  2207  000EE2  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2208  000EE4  B0D8               	btfsc	status,0,c
  2209  000EE6  D04F               	goto	l5563
  2210  000EE8                     l5541:
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;easat2_util_inputs.c: 236: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2214  000EE8  90D8               	bcf	status,0,c
  2215  000EEA  0101               	movlb	1	; () banked
  2216  000EEC  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2217  000EEE  6ED9               	movwf	fsr2l,c
  2218  000EF0  0101               	movlb	1	; () banked
  2219  000EF2  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2220  000EF4  6EDA               	movwf	fsr2h,c
  2221  000EF6  0E00               	movlw	low util_getTemperature@bit_mem
  2222  000EF8  26D9               	addwf	fsr2l,f,c
  2223  000EFA  0E01               	movlw	high util_getTemperature@bit_mem
  2224  000EFC  22DA               	addwfc	fsr2h,f,c
  2225  000EFE  CFDE F09D          	movff	postinc2,??_util_getTemperature
  2226  000F02  CFDD F09E          	movff	postdec2,??_util_getTemperature+1
  2227  000F06  0101               	movlb	1	; () banked
  2228  000F08  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2229  000F0A  0100               	movlb	0	; () banked
  2230  000F0C  199D               	xorwf	??_util_getTemperature& (0+255),w,b
  2231  000F0E  0101               	movlb	1	; () banked
  2232  000F10  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2233  000F12  0101               	movlb	1	; () banked
  2234  000F14  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2235  000F16  0100               	movlb	0	; () banked
  2236  000F18  199E               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2237  000F1A  0101               	movlb	1	; () banked
  2238  000F1C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;easat2_util_inputs.c: 238: shift_reg_bit0 = shift_reg_bit1;
  2242  000F1E  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2243  000F22  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;easat2_util_inputs.c: 239: shift_reg_bit1 = shift_reg_bit2;
  2247  000F26  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2248  000F2A  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;easat2_util_inputs.c: 240: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2252  000F2E  0101               	movlb	1	; () banked
  2253  000F30  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2254  000F32  0101               	movlb	1	; () banked
  2255  000F34  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2256  000F36  0101               	movlb	1	; () banked
  2257  000F38  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2258  000F3A  0101               	movlb	1	; () banked
  2259  000F3C  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2260  000F3E  0101               	movlb	1	; () banked
  2261  000F40  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2262  000F42  0101               	movlb	1	; () banked
  2263  000F44  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2264                           
  2265                           ; BSR set to: 1
  2266                           ;easat2_util_inputs.c: 241: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2267  000F46  0101               	movlb	1	; () banked
  2268  000F48  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2269  000F4A  0101               	movlb	1	; () banked
  2270  000F4C  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2271  000F4E  0101               	movlb	1	; () banked
  2272  000F50  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2273  000F52  0101               	movlb	1	; () banked
  2274  000F54  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2275  000F56  0101               	movlb	1	; () banked
  2276  000F58  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2277  000F5A  0101               	movlb	1	; () banked
  2278  000F5C  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;easat2_util_inputs.c: 242: shift_reg_bit4 = shift_reg_bit5;
  2282  000F5E  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2283  000F62  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;easat2_util_inputs.c: 243: shift_reg_bit5 = shift_reg_bit6;
  2287  000F66  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2288  000F6A  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2289                           
  2290                           ; BSR set to: 1
  2291                           ;easat2_util_inputs.c: 244: shift_reg_bit6 = shift_reg_bit7;
  2292  000F6E  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2293  000F72  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;easat2_util_inputs.c: 245: shift_reg_bit7 = shift_reg_bit_temp;
  2297  000F76  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2298  000F7A  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2299                           
  2300                           ; BSR set to: 1
  2301  000F7E  0101               	movlb	1	; () banked
  2302  000F80  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2303  000F82  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2304  000F84  D7A6               	goto	l5537
  2305  000F86                     l5563:
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;easat2_util_inputs.c: 247: }
  2309                           ;easat2_util_inputs.c: 251: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2310                           ;easat2_util_inputs.c: 252: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2311                           ;easat2_util_inputs.c: 253: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2312  000F86  0101               	movlb	1	; () banked
  2313  000F88  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2314  000F8A  0101               	movlb	1	; () banked
  2315  000F8C  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2316  000F8E  A4D8               	btfss	status,2,c
  2317  000F90  D02A               	goto	l5579
  2318                           
  2319                           ; BSR set to: 1
  2320  000F92  0101               	movlb	1	; () banked
  2321  000F94  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2322  000F96  0101               	movlb	1	; () banked
  2323  000F98  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2324  000F9A  A4D8               	btfss	status,2,c
  2325  000F9C  D024               	goto	l5579
  2326                           
  2327                           ; BSR set to: 1
  2328  000F9E  0101               	movlb	1	; () banked
  2329  000FA0  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2330  000FA2  0101               	movlb	1	; () banked
  2331  000FA4  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2332  000FA6  B4D8               	btfsc	status,2,c
  2333  000FA8  D006               	goto	l5571
  2334                           
  2335                           ; BSR set to: 1
  2336  000FAA  0101               	movlb	1	; () banked
  2337  000FAC  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2338  000FAE  0101               	movlb	1	; () banked
  2339  000FB0  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2340  000FB2  A4D8               	btfss	status,2,c
  2341  000FB4  D018               	goto	l5579
  2342  000FB6                     l5571:
  2343                           
  2344                           ; BSR set to: 1
  2345  000FB6  0101               	movlb	1	; () banked
  2346  000FB8  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2347  000FBA  0101               	movlb	1	; () banked
  2348  000FBC  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2349  000FBE  A4D8               	btfss	status,2,c
  2350  000FC0  D012               	goto	l5579
  2351                           
  2352                           ; BSR set to: 1
  2353  000FC2  0101               	movlb	1	; () banked
  2354  000FC4  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2355  000FC6  0101               	movlb	1	; () banked
  2356  000FC8  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2357  000FCA  B4D8               	btfsc	status,2,c
  2358  000FCC  D006               	goto	l5577
  2359                           
  2360                           ; BSR set to: 1
  2361  000FCE  0101               	movlb	1	; () banked
  2362  000FD0  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2363  000FD2  0101               	movlb	1	; () banked
  2364  000FD4  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2365  000FD6  A4D8               	btfss	status,2,c
  2366  000FD8  D006               	goto	l5579
  2367  000FDA                     l5577:
  2368                           
  2369                           ; BSR set to: 1
  2370  000FDA  0101               	movlb	1	; () banked
  2371  000FDC  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2372  000FDE  0101               	movlb	1	; () banked
  2373  000FE0  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2374  000FE2  B4D8               	btfsc	status,2,c
  2375  000FE4  D00A               	goto	l5583
  2376  000FE6                     l5579:
  2377                           
  2378                           ; BSR set to: 1
  2379                           ;easat2_util_inputs.c: 254: return -99.7;
  2380  000FE6  0E66               	movlw	102
  2381  000FE8  0100               	movlb	0	; () banked
  2382  000FEA  6F9A               	movwf	?_util_getTemperature& (0+255),b
  2383  000FEC  0EC7               	movlw	199
  2384  000FEE  0100               	movlb	0	; () banked
  2385  000FF0  6F9B               	movwf	(?_util_getTemperature+1)& (0+255),b
  2386  000FF2  0EC2               	movlw	194
  2387  000FF4  0100               	movlb	0	; () banked
  2388  000FF6  6F9C               	movwf	(?_util_getTemperature+2)& (0+255),b
  2389                           
  2390                           ; BSR set to: 0
  2391  000FF8  0012               	return	
  2392  000FFA                     l5583:
  2393                           
  2394                           ;easat2_util_inputs.c: 258: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2395  000FFA  0101               	movlb	1	; () banked
  2396  000FFC  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2397  000FFE  0101               	movlb	1	; () banked
  2398  001000  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2399  001002  A4D8               	btfss	status,2,c
  2400  001004  D008               	goto	l5587
  2401                           
  2402                           ; BSR set to: 1
  2403  001006  0E00               	movlw	0
  2404  001008  0101               	movlb	1	; () banked
  2405  00100A  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2406  00100C  0E80               	movlw	128
  2407  00100E  0101               	movlb	1	; () banked
  2408  001010  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2409  001012  0E3F               	movlw	63
  2410  001014  D007               	goto	L1
  2411  001016                     l5587:
  2412                           
  2413                           ; BSR set to: 1
  2414  001016  0E00               	movlw	0
  2415  001018  0101               	movlb	1	; () banked
  2416  00101A  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2417  00101C  0E80               	movlw	128
  2418  00101E  0101               	movlb	1	; () banked
  2419  001020  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2420  001022  0EBF               	movlw	191
  2421  001024                     L1:
  2422  001024  0101               	movlb	1	; () banked
  2423  001026  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2424                           
  2425                           ; BSR set to: 1
  2426                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2427                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2428                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2429                           
  2430                           ; BSR set to: 1
  2431  001028  0E00               	movlw	0
  2432  00102A  0100               	movlb	0	; () banked
  2433  00102C  6F77               	movwf	___ftdiv@f2& (0+255),b
  2434  00102E  0E00               	movlw	0
  2435  001030  0100               	movlb	0	; () banked
  2436  001032  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2437  001034  0E41               	movlw	65
  2438  001036  0100               	movlb	0	; () banked
  2439  001038  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2440  00103A  C102  F071         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2441  00103E  C103  F072         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2442  001042  ECC5  F01B         	call	___awtoft	;wreg free
  2443  001046  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2444  00104A  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2445  00104E  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2446  001052  ECB4  F014         	call	___ftdiv	;wreg free
  2447  001056  C074  F091         	movff	?___ftdiv,___ftadd@f2
  2448  00105A  C075  F092         	movff	?___ftdiv+1,___ftadd@f2+1
  2449  00105E  C076  F093         	movff	?___ftdiv+2,___ftadd@f2+2
  2450  001062  0E00               	movlw	0
  2451  001064  0100               	movlb	0	; () banked
  2452  001066  6F77               	movwf	___ftdiv@f2& (0+255),b
  2453  001068  0E80               	movlw	128
  2454  00106A  0100               	movlb	0	; () banked
  2455  00106C  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2456  00106E  0E41               	movlw	65
  2457  001070  0100               	movlb	0	; () banked
  2458  001072  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2459  001074  C100  F071         	movff	util_getTemperature@bit_mem,___awtoft@c
  2460  001078  C101  F072         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2461  00107C  ECC5  F01B         	call	___awtoft	;wreg free
  2462  001080  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2463  001084  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2464  001088  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2465  00108C  ECB4  F014         	call	___ftdiv	;wreg free
  2466  001090  C074  F08E         	movff	?___ftdiv,___ftadd@f1
  2467  001094  C075  F08F         	movff	?___ftdiv+1,___ftadd@f1+1
  2468  001098  C076  F090         	movff	?___ftdiv+2,___ftadd@f1+2
  2469  00109C  ECA4  F010         	call	___ftadd	;wreg free
  2470  0010A0  C08E  F1A7         	movff	?___ftadd,_util_getTemperature$2784
  2471  0010A4  C08F  F1A8         	movff	?___ftadd+1,_util_getTemperature$2784+1
  2472  0010A8  C090  F1A9         	movff	?___ftadd+2,_util_getTemperature$2784+2
  2473                           
  2474                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2475                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2476                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2477  0010AC  0E00               	movlw	0
  2478  0010AE  0100               	movlb	0	; () banked
  2479  0010B0  6F77               	movwf	___ftdiv@f2& (0+255),b
  2480  0010B2  0E80               	movlw	128
  2481  0010B4  0100               	movlb	0	; () banked
  2482  0010B6  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2483  0010B8  0E40               	movlw	64
  2484  0010BA  0100               	movlb	0	; () banked
  2485  0010BC  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2486  0010BE  C104  F071         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2487  0010C2  C105  F072         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2488  0010C6  ECC5  F01B         	call	___awtoft	;wreg free
  2489  0010CA  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2490  0010CE  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2491  0010D2  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2492  0010D6  ECB4  F014         	call	___ftdiv	;wreg free
  2493  0010DA  C074  F091         	movff	?___ftdiv,___ftadd@f2
  2494  0010DE  C075  F092         	movff	?___ftdiv+1,___ftadd@f2+1
  2495  0010E2  C076  F093         	movff	?___ftdiv+2,___ftadd@f2+2
  2496  0010E6  C1A7  F08E         	movff	_util_getTemperature$2784,___ftadd@f1
  2497  0010EA  C1A8  F08F         	movff	_util_getTemperature$2784+1,___ftadd@f1+1
  2498  0010EE  C1A9  F090         	movff	_util_getTemperature$2784+2,___ftadd@f1+2
  2499  0010F2  ECA4  F010         	call	___ftadd	;wreg free
  2500  0010F6  C08E  F1AA         	movff	?___ftadd,_util_getTemperature$2785
  2501  0010FA  C08F  F1AB         	movff	?___ftadd+1,_util_getTemperature$2785+1
  2502  0010FE  C090  F1AC         	movff	?___ftadd+2,_util_getTemperature$2785+2
  2503                           
  2504                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2505                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2506                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2507  001102  0E00               	movlw	0
  2508  001104  0100               	movlb	0	; () banked
  2509  001106  6F77               	movwf	___ftdiv@f2& (0+255),b
  2510  001108  0E00               	movlw	0
  2511  00110A  0100               	movlb	0	; () banked
  2512  00110C  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2513  00110E  0E40               	movlw	64
  2514  001110  0100               	movlb	0	; () banked
  2515  001112  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2516  001114  C106  F071         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2517  001118  C107  F072         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2518  00111C  ECC5  F01B         	call	___awtoft	;wreg free
  2519  001120  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2520  001124  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2521  001128  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2522  00112C  ECB4  F014         	call	___ftdiv	;wreg free
  2523  001130  C074  F091         	movff	?___ftdiv,___ftadd@f2
  2524  001134  C075  F092         	movff	?___ftdiv+1,___ftadd@f2+1
  2525  001138  C076  F093         	movff	?___ftdiv+2,___ftadd@f2+2
  2526  00113C  C1AA  F08E         	movff	_util_getTemperature$2785,___ftadd@f1
  2527  001140  C1AB  F08F         	movff	_util_getTemperature$2785+1,___ftadd@f1+1
  2528  001144  C1AC  F090         	movff	_util_getTemperature$2785+2,___ftadd@f1+2
  2529  001148  ECA4  F010         	call	___ftadd	;wreg free
  2530  00114C  C08E  F1AD         	movff	?___ftadd,_util_getTemperature$2786
  2531  001150  C08F  F1AE         	movff	?___ftadd+1,_util_getTemperature$2786+1
  2532  001154  C090  F1AF         	movff	?___ftadd+2,_util_getTemperature$2786+2
  2533                           
  2534                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2535                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2536                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2537  001158  C108  F071         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2538  00115C  C109  F072         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2539  001160  ECC5  F01B         	call	___awtoft	;wreg free
  2540  001164  C071  F091         	movff	?___awtoft,___ftadd@f2
  2541  001168  C072  F092         	movff	?___awtoft+1,___ftadd@f2+1
  2542  00116C  C073  F093         	movff	?___awtoft+2,___ftadd@f2+2
  2543  001170  C1AD  F08E         	movff	_util_getTemperature$2786,___ftadd@f1
  2544  001174  C1AE  F08F         	movff	_util_getTemperature$2786+1,___ftadd@f1+1
  2545  001178  C1AF  F090         	movff	_util_getTemperature$2786+2,___ftadd@f1+2
  2546  00117C  ECA4  F010         	call	___ftadd	;wreg free
  2547  001180  C08E  F1B0         	movff	?___ftadd,_util_getTemperature$2787
  2548  001184  C08F  F1B1         	movff	?___ftadd+1,_util_getTemperature$2787+1
  2549  001188  C090  F1B2         	movff	?___ftadd+2,_util_getTemperature$2787+2
  2550                           
  2551                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2552                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2553                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2554  00118C  C1B0  F08E         	movff	_util_getTemperature$2787,___ftadd@f1
  2555  001190  C1B1  F08F         	movff	_util_getTemperature$2787+1,___ftadd@f1+1
  2556  001194  C1B2  F090         	movff	_util_getTemperature$2787+2,___ftadd@f1+2
  2557  001198  0E00               	movlw	0
  2558  00119A  0100               	movlb	0	; () banked
  2559  00119C  6F78               	movwf	___ftmul@f2& (0+255),b
  2560  00119E  0E00               	movlw	0
  2561  0011A0  0100               	movlb	0	; () banked
  2562  0011A2  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2563  0011A4  0E40               	movlw	64
  2564  0011A6  0100               	movlb	0	; () banked
  2565  0011A8  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2566  0011AA  C10A  F071         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2567  0011AE  C10B  F072         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2568  0011B2  ECC5  F01B         	call	___awtoft	;wreg free
  2569  0011B6  C071  F075         	movff	?___awtoft,___ftmul@f1
  2570  0011BA  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2571  0011BE  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2572  0011C2  EC63  F013         	call	___ftmul	;wreg free
  2573  0011C6  C075  F091         	movff	?___ftmul,___ftadd@f2
  2574  0011CA  C076  F092         	movff	?___ftmul+1,___ftadd@f2+1
  2575  0011CE  C077  F093         	movff	?___ftmul+2,___ftadd@f2+2
  2576  0011D2  ECA4  F010         	call	___ftadd	;wreg free
  2577  0011D6  C08E  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2578  0011DA  C08F  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2579  0011DE  C090  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2580                           
  2581                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2582                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2583                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2584                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2585  0011E2  0E00               	movlw	0
  2586  0011E4  0100               	movlb	0	; () banked
  2587  0011E6  6F78               	movwf	___ftmul@f2& (0+255),b
  2588  0011E8  0E00               	movlw	0
  2589  0011EA  0100               	movlb	0	; () banked
  2590  0011EC  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2591  0011EE  0E41               	movlw	65
  2592  0011F0  0100               	movlb	0	; () banked
  2593  0011F2  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2594  0011F4  C10E  F071         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2595  0011F8  C10F  F072         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2596  0011FC  ECC5  F01B         	call	___awtoft	;wreg free
  2597  001200  C071  F075         	movff	?___awtoft,___ftmul@f1
  2598  001204  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2599  001208  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2600  00120C  EC63  F013         	call	___ftmul	;wreg free
  2601  001210  C075  F091         	movff	?___ftmul,___ftadd@f2
  2602  001214  C076  F092         	movff	?___ftmul+1,___ftadd@f2+1
  2603  001218  C077  F093         	movff	?___ftmul+2,___ftadd@f2+2
  2604  00121C  0E00               	movlw	0
  2605  00121E  0100               	movlb	0	; () banked
  2606  001220  6F78               	movwf	___ftmul@f2& (0+255),b
  2607  001222  0E80               	movlw	128
  2608  001224  0100               	movlb	0	; () banked
  2609  001226  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2610  001228  0E40               	movlw	64
  2611  00122A  0100               	movlb	0	; () banked
  2612  00122C  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2613  00122E  C10C  F071         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2614  001232  C10D  F072         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2615  001236  ECC5  F01B         	call	___awtoft	;wreg free
  2616  00123A  C071  F075         	movff	?___awtoft,___ftmul@f1
  2617  00123E  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2618  001242  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2619  001246  EC63  F013         	call	___ftmul	;wreg free
  2620  00124A  C075  F08E         	movff	?___ftmul,___ftadd@f1
  2621  00124E  C076  F08F         	movff	?___ftmul+1,___ftadd@f1+1
  2622  001252  C077  F090         	movff	?___ftmul+2,___ftadd@f1+2
  2623  001256  ECA4  F010         	call	___ftadd	;wreg free
  2624  00125A  C08E  F1A7         	movff	?___ftadd,_util_getTemperature$2784
  2625  00125E  C08F  F1A8         	movff	?___ftadd+1,_util_getTemperature$2784+1
  2626  001262  C090  F1A9         	movff	?___ftadd+2,_util_getTemperature$2784+2
  2627                           
  2628                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2629                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2630                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2631                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2632  001266  0E00               	movlw	0
  2633  001268  0100               	movlb	0	; () banked
  2634  00126A  6F78               	movwf	___ftmul@f2& (0+255),b
  2635  00126C  0E80               	movlw	128
  2636  00126E  0100               	movlb	0	; () banked
  2637  001270  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2638  001272  0E41               	movlw	65
  2639  001274  0100               	movlb	0	; () banked
  2640  001276  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2641  001278  C110  F071         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2642  00127C  C111  F072         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2643  001280  ECC5  F01B         	call	___awtoft	;wreg free
  2644  001284  C071  F075         	movff	?___awtoft,___ftmul@f1
  2645  001288  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2646  00128C  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2647  001290  EC63  F013         	call	___ftmul	;wreg free
  2648  001294  C075  F091         	movff	?___ftmul,___ftadd@f2
  2649  001298  C076  F092         	movff	?___ftmul+1,___ftadd@f2+1
  2650  00129C  C077  F093         	movff	?___ftmul+2,___ftadd@f2+2
  2651  0012A0  C1A7  F08E         	movff	_util_getTemperature$2784,___ftadd@f1
  2652  0012A4  C1A8  F08F         	movff	_util_getTemperature$2784+1,___ftadd@f1+1
  2653  0012A8  C1A9  F090         	movff	_util_getTemperature$2784+2,___ftadd@f1+2
  2654  0012AC  ECA4  F010         	call	___ftadd	;wreg free
  2655  0012B0  C08E  F1AA         	movff	?___ftadd,_util_getTemperature$2785
  2656  0012B4  C08F  F1AB         	movff	?___ftadd+1,_util_getTemperature$2785+1
  2657  0012B8  C090  F1AC         	movff	?___ftadd+2,_util_getTemperature$2785+2
  2658                           
  2659                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2660                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2661                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2662                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2663  0012BC  0E00               	movlw	0
  2664  0012BE  0100               	movlb	0	; () banked
  2665  0012C0  6F78               	movwf	___ftmul@f2& (0+255),b
  2666  0012C2  0E00               	movlw	0
  2667  0012C4  0100               	movlb	0	; () banked
  2668  0012C6  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2669  0012C8  0E42               	movlw	66
  2670  0012CA  0100               	movlb	0	; () banked
  2671  0012CC  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2672  0012CE  C112  F071         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2673  0012D2  C113  F072         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2674  0012D6  ECC5  F01B         	call	___awtoft	;wreg free
  2675  0012DA  C071  F075         	movff	?___awtoft,___ftmul@f1
  2676  0012DE  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2677  0012E2  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2678  0012E6  EC63  F013         	call	___ftmul	;wreg free
  2679  0012EA  C075  F091         	movff	?___ftmul,___ftadd@f2
  2680  0012EE  C076  F092         	movff	?___ftmul+1,___ftadd@f2+1
  2681  0012F2  C077  F093         	movff	?___ftmul+2,___ftadd@f2+2
  2682  0012F6  C1AA  F08E         	movff	_util_getTemperature$2785,___ftadd@f1
  2683  0012FA  C1AB  F08F         	movff	_util_getTemperature$2785+1,___ftadd@f1+1
  2684  0012FE  C1AC  F090         	movff	_util_getTemperature$2785+2,___ftadd@f1+2
  2685  001302  ECA4  F010         	call	___ftadd	;wreg free
  2686  001306  C08E  F1AD         	movff	?___ftadd,_util_getTemperature$2786
  2687  00130A  C08F  F1AE         	movff	?___ftadd+1,_util_getTemperature$2786+1
  2688  00130E  C090  F1AF         	movff	?___ftadd+2,_util_getTemperature$2786+2
  2689                           
  2690                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2691                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2692                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2693                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2694  001312  0E00               	movlw	0
  2695  001314  0100               	movlb	0	; () banked
  2696  001316  6F78               	movwf	___ftmul@f2& (0+255),b
  2697  001318  0E80               	movlw	128
  2698  00131A  0100               	movlb	0	; () banked
  2699  00131C  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  2700  00131E  0E42               	movlw	66
  2701  001320  0100               	movlb	0	; () banked
  2702  001322  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  2703  001324  C114  F071         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2704  001328  C115  F072         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2705  00132C  ECC5  F01B         	call	___awtoft	;wreg free
  2706  001330  C071  F075         	movff	?___awtoft,___ftmul@f1
  2707  001334  C072  F076         	movff	?___awtoft+1,___ftmul@f1+1
  2708  001338  C073  F077         	movff	?___awtoft+2,___ftmul@f1+2
  2709  00133C  EC63  F013         	call	___ftmul	;wreg free
  2710  001340  C075  F091         	movff	?___ftmul,___ftadd@f2
  2711  001344  C076  F092         	movff	?___ftmul+1,___ftadd@f2+1
  2712  001348  C077  F093         	movff	?___ftmul+2,___ftadd@f2+2
  2713  00134C  C1AD  F08E         	movff	_util_getTemperature$2786,___ftadd@f1
  2714  001350  C1AE  F08F         	movff	_util_getTemperature$2786+1,___ftadd@f1+1
  2715  001354  C1AF  F090         	movff	_util_getTemperature$2786+2,___ftadd@f1+2
  2716  001358  ECA4  F010         	call	___ftadd	;wreg free
  2717  00135C  C08E  F1B0         	movff	?___ftadd,_util_getTemperature$2787
  2718  001360  C08F  F1B1         	movff	?___ftadd+1,_util_getTemperature$2787+1
  2719  001364  C090  F1B2         	movff	?___ftadd+2,_util_getTemperature$2787+2
  2720                           
  2721                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2722                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2723                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2724                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2725  001368  C1B0  F08E         	movff	_util_getTemperature$2787,___ftadd@f1
  2726  00136C  C1B1  F08F         	movff	_util_getTemperature$2787+1,___ftadd@f1+1
  2727  001370  C1B2  F090         	movff	_util_getTemperature$2787+2,___ftadd@f1+2
  2728  001374  C1C9  F091         	movff	util_getTemperature@temperature,___ftadd@f2
  2729  001378  C1CA  F092         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2730  00137C  C1CB  F093         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2731  001380  ECA4  F010         	call	___ftadd	;wreg free
  2732  001384  C08E  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2733  001388  C08F  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2734  00138C  C090  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2735                           
  2736                           ;easat2_util_inputs.c: 268: temperature = temperature * sign;
  2737  001390  C1C9  F075         	movff	util_getTemperature@temperature,___ftmul@f1
  2738  001394  C1CA  F076         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2739  001398  C1CB  F077         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2740  00139C  C1A4  F078         	movff	util_getTemperature@sign,___ftmul@f2
  2741  0013A0  C1A5  F079         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2742  0013A4  C1A6  F07A         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2743  0013A8  EC63  F013         	call	___ftmul	;wreg free
  2744  0013AC  C075  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2745  0013B0  C076  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2746  0013B4  C077  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2747                           
  2748                           ;easat2_util_inputs.c: 270: return temperature;
  2749  0013B8  C1C9  F09A         	movff	util_getTemperature@temperature,?_util_getTemperature
  2750  0013BC  C1CA  F09B         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2751  0013C0  C1CB  F09C         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2752  0013C4  0012               	return	
  2753  0013C6                     __end_of_util_getTemperature:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           intcon	equ	0xFF2
  2760                           postinc0	equ	0xFEE
  2761                           wreg	equ	0xFE8
  2762                           postdec1	equ	0xFE5
  2763                           fsr1h	equ	0xFE2
  2764                           fsr1l	equ	0xFE1
  2765                           postinc2	equ	0xFDE
  2766                           postdec2	equ	0xFDD
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function _util_waits_delay_secs *****************
  2772 ;; Defined at:
  2773 ;;		line 31 in file "easat2_util_waits.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  secs            2   30[COMRAM] int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  j               2   35[COMRAM] int 
  2778 ;;  i               2   33[COMRAM] int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         2       0       0       0       0       0       0
  2789 ;;      Locals:         4       0       0       0       0       0       0
  2790 ;;      Temps:          1       0       0       0       0       0       0
  2791 ;;      Totals:         7       0       0       0       0       0       0
  2792 ;;Total ram usage:        7 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    3
  2795 ;; This function calls:
  2796 ;;		_util_waits_delay_ms
  2797 ;; This function is called by:
  2798 ;;		_util_getTemperature
  2799 ;;		_util_waits_delay_mins
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text5
  2804  003630                     __ptext5:
  2805                           	opt stack 0
  2806  003630                     _util_waits_delay_secs:
  2807                           	opt stack 25
  2808                           
  2809                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2810                           
  2811                           ;incstack = 0
  2812  003630  0E00               	movlw	0
  2813  003632  6E23               	movwf	util_waits_delay_secs@i+1,c
  2814  003634  0E00               	movlw	0
  2815  003636  6E22               	movwf	util_waits_delay_secs@i,c
  2816  003638  D017               	goto	l4799
  2817  00363A                     l4785:
  2818                           
  2819                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2820  00363A  0E00               	movlw	0
  2821  00363C  6E25               	movwf	util_waits_delay_secs@j+1,c
  2822  00363E  0E00               	movlw	0
  2823  003640  6E24               	movwf	util_waits_delay_secs@j,c
  2824  003642                     l4787:
  2825  003642  BE25               	btfsc	util_waits_delay_secs@j+1,7,c
  2826  003644  D006               	goto	l4791
  2827  003646  5025               	movf	util_waits_delay_secs@j+1,w,c
  2828  003648  E10D               	bnz	l4797
  2829  00364A  0E0A               	movlw	10
  2830  00364C  5C24               	subwf	util_waits_delay_secs@j,w,c
  2831  00364E  B0D8               	btfsc	status,0,c
  2832  003650  D009               	goto	l4797
  2833  003652                     l4791:
  2834                           
  2835                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2836  003652  0E00               	movlw	0
  2837  003654  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  2838  003656  0E64               	movlw	100
  2839  003658  6E1A               	movwf	util_waits_delay_ms@ms,c
  2840  00365A  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  2841  00365E  4A24               	infsnz	util_waits_delay_secs@j,f,c
  2842  003660  2A25               	incf	util_waits_delay_secs@j+1,f,c
  2843  003662  D7EF               	goto	l4787
  2844  003664                     l4797:
  2845  003664  4A22               	infsnz	util_waits_delay_secs@i,f,c
  2846  003666  2A23               	incf	util_waits_delay_secs@i+1,f,c
  2847  003668                     l4799:
  2848  003668  501F               	movf	util_waits_delay_secs@secs,w,c
  2849  00366A  5C22               	subwf	util_waits_delay_secs@i,w,c
  2850  00366C  5023               	movf	util_waits_delay_secs@i+1,w,c
  2851  00366E  0A80               	xorlw	128
  2852  003670  6E21               	movwf	??_util_waits_delay_secs& (0+255),c
  2853  003672  5020               	movf	util_waits_delay_secs@secs+1,w,c
  2854  003674  0A80               	xorlw	128
  2855  003676  5821               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2856  003678  B0D8               	btfsc	status,0,c
  2857  00367A  0012               	return	
  2858  00367C  D7DE               	goto	l4785
  2859  00367E                     __end_of_util_waits_delay_secs:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           intcon	equ	0xFF2
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1h	equ	0xFE2
  2870                           fsr1l	equ	0xFE1
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _util_onewire_write_byte *****************
  2878 ;; Defined at:
  2879 ;;		line 62 in file "easat2_util_onewire.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  value           2   27[COMRAM] int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  bit7            2   31[BANK0 ] int 
  2884 ;;  bit6            2   29[BANK0 ] int 
  2885 ;;  bit5            2   27[BANK0 ] int 
  2886 ;;  bit4            2   25[BANK0 ] int 
  2887 ;;  bit3            2   23[BANK0 ] int 
  2888 ;;  bit2            2   21[BANK0 ] int 
  2889 ;;  bit1            2   19[BANK0 ] int 
  2890 ;;  bit0            2   17[BANK0 ] int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2900 ;;      Params:         2       0       0       0       0       0       0
  2901 ;;      Locals:         0      16       0       0       0       0       0
  2902 ;;      Temps:          3       0       0       0       0       0       0
  2903 ;;      Totals:         5      16       0       0       0       0       0
  2904 ;;Total ram usage:       21 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    3
  2907 ;; This function calls:
  2908 ;;		_util_onewire_write_bit
  2909 ;; This function is called by:
  2910 ;;		_util_getTemperature
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text6
  2915  002544                     __ptext6:
  2916                           	opt stack 0
  2917  002544                     _util_onewire_write_byte:
  2918                           	opt stack 25
  2919                           
  2920                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2921                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2922                           
  2923                           ;incstack = 0
  2924  002544  0E01               	movlw	1
  2925  002546  141C               	andwf	util_onewire_write_byte@value,w,c
  2926  002548  0100               	movlb	0	; () banked
  2927  00254A  6F71               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2928  00254C  0100               	movlb	0	; () banked
  2929  00254E  6B72               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2930                           
  2931                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2932  002550  341D               	rlcf	util_onewire_write_byte@value+1,w,c
  2933  002552  301D               	rrcf	util_onewire_write_byte@value+1,w,c
  2934  002554  6E1F               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2935  002556  301C               	rrcf	util_onewire_write_byte@value,w,c
  2936  002558  6E1E               	movwf	??_util_onewire_write_byte& (0+255),c
  2937  00255A  0E01               	movlw	1
  2938  00255C  141E               	andwf	??_util_onewire_write_byte,w,c
  2939  00255E  0100               	movlb	0	; () banked
  2940  002560  6F73               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2941  002562  0100               	movlb	0	; () banked
  2942  002564  6B74               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2943                           
  2944                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2945  002566  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2946  00256A  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2947  00256E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2948  002570  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2949  002572  321E               	rrcf	??_util_onewire_write_byte,f,c
  2950  002574  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2951  002576  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2952  002578  321E               	rrcf	??_util_onewire_write_byte,f,c
  2953  00257A  0E01               	movlw	1
  2954  00257C  141E               	andwf	??_util_onewire_write_byte,w,c
  2955  00257E  0100               	movlb	0	; () banked
  2956  002580  6F75               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2957  002582  0100               	movlb	0	; () banked
  2958  002584  6B76               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2959                           
  2960                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2961  002586  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2962  00258A  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2963  00258E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2964  002590  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2965  002592  321E               	rrcf	??_util_onewire_write_byte,f,c
  2966  002594  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2967  002596  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2968  002598  321E               	rrcf	??_util_onewire_write_byte,f,c
  2969  00259A  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2970  00259C  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2971  00259E  321E               	rrcf	??_util_onewire_write_byte,f,c
  2972  0025A0  0E01               	movlw	1
  2973  0025A2  141E               	andwf	??_util_onewire_write_byte,w,c
  2974  0025A4  0100               	movlb	0	; () banked
  2975  0025A6  6F77               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2976  0025A8  0100               	movlb	0	; () banked
  2977  0025AA  6B78               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2978                           
  2979                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2980  0025AC  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2981  0025B0  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2982  0025B4  0E04               	movlw	4
  2983  0025B6  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2984  0025B8                     u3405:
  2985  0025B8  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  2986  0025BA  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  2987  0025BC  321E               	rrcf	??_util_onewire_write_byte,f,c
  2988  0025BE  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2989  0025C0  D7FB               	goto	u3405
  2990  0025C2  0E01               	movlw	1
  2991  0025C4  141E               	andwf	??_util_onewire_write_byte,w,c
  2992  0025C6  0100               	movlb	0	; () banked
  2993  0025C8  6F79               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2994  0025CA  0100               	movlb	0	; () banked
  2995  0025CC  6B7A               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2996                           
  2997                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2998  0025CE  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2999  0025D2  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3000  0025D6  0E05               	movlw	5
  3001  0025D8  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3002  0025DA                     u3415:
  3003  0025DA  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3004  0025DC  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3005  0025DE  321E               	rrcf	??_util_onewire_write_byte,f,c
  3006  0025E0  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3007  0025E2  D7FB               	goto	u3415
  3008  0025E4  0E01               	movlw	1
  3009  0025E6  141E               	andwf	??_util_onewire_write_byte,w,c
  3010  0025E8  0100               	movlb	0	; () banked
  3011  0025EA  6F7B               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3012  0025EC  0100               	movlb	0	; () banked
  3013  0025EE  6B7C               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3014                           
  3015                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3016  0025F0  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3017  0025F4  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3018  0025F8  0E06               	movlw	6
  3019  0025FA  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3020  0025FC                     u3425:
  3021  0025FC  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3022  0025FE  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3023  002600  321E               	rrcf	??_util_onewire_write_byte,f,c
  3024  002602  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3025  002604  D7FB               	goto	u3425
  3026  002606  0E01               	movlw	1
  3027  002608  141E               	andwf	??_util_onewire_write_byte,w,c
  3028  00260A  0100               	movlb	0	; () banked
  3029  00260C  6F7D               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3030  00260E  0100               	movlb	0	; () banked
  3031  002610  6B7E               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3032                           
  3033                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3034  002612  C01C  F01E         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3035  002616  C01D  F01F         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3036  00261A  0E07               	movlw	7
  3037  00261C  6E20               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3038  00261E                     u3435:
  3039  00261E  341F               	rlcf	??_util_onewire_write_byte+1,w,c
  3040  002620  321F               	rrcf	??_util_onewire_write_byte+1,f,c
  3041  002622  321E               	rrcf	??_util_onewire_write_byte,f,c
  3042  002624  2E20               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3043  002626  D7FB               	goto	u3435
  3044  002628  0E01               	movlw	1
  3045  00262A  141E               	andwf	??_util_onewire_write_byte,w,c
  3046  00262C  0100               	movlb	0	; () banked
  3047  00262E  6F7F               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3048  002630  0100               	movlb	0	; () banked
  3049  002632  6B80               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3053  002634  C071  F01A         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3054  002638  C072  F01B         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3055  00263C  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3056                           
  3057                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3058  002640  D000               	nop2		;2 cycle nop
  3059  002642  D000               	nop2		;2 cycle nop
  3060  002644  F000               	nop	
  3061                           
  3062                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3063  002646  C073  F01A         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3064  00264A  C074  F01B         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3065  00264E  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3066                           
  3067                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3068  002652  D000               	nop2		;2 cycle nop
  3069  002654  D000               	nop2		;2 cycle nop
  3070  002656  F000               	nop	
  3071                           
  3072                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3073  002658  C075  F01A         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3074  00265C  C076  F01B         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3075  002660  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3076                           
  3077                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3078  002664  D000               	nop2		;2 cycle nop
  3079  002666  D000               	nop2		;2 cycle nop
  3080  002668  F000               	nop	
  3081                           
  3082                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3083  00266A  C077  F01A         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3084  00266E  C078  F01B         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3085  002672  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3086                           
  3087                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3088  002676  D000               	nop2		;2 cycle nop
  3089  002678  D000               	nop2		;2 cycle nop
  3090  00267A  F000               	nop	
  3091                           
  3092                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3093  00267C  C079  F01A         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3094  002680  C07A  F01B         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3095  002684  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3096                           
  3097                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3098  002688  D000               	nop2		;2 cycle nop
  3099  00268A  D000               	nop2		;2 cycle nop
  3100  00268C  F000               	nop	
  3101                           
  3102                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3103  00268E  C07B  F01A         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3104  002692  C07C  F01B         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3105  002696  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3106                           
  3107                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3108  00269A  D000               	nop2		;2 cycle nop
  3109  00269C  D000               	nop2		;2 cycle nop
  3110  00269E  F000               	nop	
  3111                           
  3112                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3113  0026A0  C07D  F01A         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3114  0026A4  C07E  F01B         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3115  0026A8  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3116                           
  3117                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3118  0026AC  D000               	nop2		;2 cycle nop
  3119  0026AE  D000               	nop2		;2 cycle nop
  3120  0026B0  F000               	nop	
  3121                           
  3122                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3123  0026B2  C07F  F01A         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3124  0026B6  C080  F01B         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3125  0026BA  EC4B  F01C         	call	_util_onewire_write_bit	;wreg free
  3126                           
  3127                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3128  0026BE  D000               	nop2		;2 cycle nop
  3129  0026C0  D000               	nop2		;2 cycle nop
  3130  0026C2  F000               	nop	
  3131  0026C4  0012               	return		;funcret
  3132  0026C6                     __end_of_util_onewire_write_byte:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           postinc2	equ	0xFDE
  3145                           postdec2	equ	0xFDD
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function _util_onewire_write_bit *****************
  3151 ;; Defined at:
  3152 ;;		line 121 in file "easat2_util_onewire.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  bit_in          2   25[COMRAM] int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         2       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         2       0       0       0       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_util_onewire_write_byte
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text7
  3181  003896                     __ptext7:
  3182                           	opt stack 0
  3183  003896                     _util_onewire_write_bit:
  3184                           	opt stack 25
  3185                           
  3186                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3187                           
  3188                           ;incstack = 0
  3189  003896  9692               	bcf	3986,3,c	;volatile
  3190                           
  3191                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3192  003898  501A               	movf	util_onewire_write_bit@bit_in,w,c
  3193  00389A  101B               	iorwf	util_onewire_write_bit@bit_in+1,w,c
  3194  00389C  B4D8               	btfsc	status,2,c
  3195  00389E  D009               	goto	l186
  3196                           
  3197                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3198  0038A0  9680               	bcf	3968,3,c	;volatile
  3199                           
  3200                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3201  0038A2  D000               	nop2		;2 cycle nop
  3202  0038A4  D000               	nop2		;2 cycle nop
  3203  0038A6  F000               	nop	
  3204                           
  3205                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3206  0038A8  8680               	bsf	3968,3,c	;volatile
  3207                           
  3208                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3209  0038AA  0E09               	movlw	9
  3210  0038AC                     u5927:
  3211  0038AC  2EE8               	decfsz	wreg,f,c
  3212  0038AE  D7FE               	bra	u5927
  3213                           
  3214                           ;easat2_util_onewire.c: 141: } else {
  3215  0038B0  0012               	return	
  3216  0038B2                     l186:
  3217                           
  3218                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3219  0038B2  9680               	bcf	3968,3,c	;volatile
  3220                           
  3221                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3222  0038B4  0E0B               	movlw	11
  3223  0038B6                     u5937:
  3224  0038B6  2EE8               	decfsz	wreg,f,c
  3225  0038B8  D7FE               	bra	u5937
  3226  0038BA  D000               	nop2	
  3227                           
  3228                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3229  0038BC  8680               	bsf	3968,3,c	;volatile
  3230                           
  3231                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3232  0038BE  D000               	nop2		;2 cycle nop
  3233  0038C0  D000               	nop2		;2 cycle nop
  3234  0038C2  F000               	nop	
  3235  0038C4  0012               	return	
  3236  0038C6                     __end_of_util_onewire_write_bit:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           intcon	equ	0xFF2
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           postdec1	equ	0xFE5
  3246                           fsr1h	equ	0xFE2
  3247                           fsr1l	equ	0xFE1
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _util_onewire_reset *****************
  3255 ;; Defined at:
  3256 ;;		line 18 in file "easat2_util_onewire.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  presence        2   28[COMRAM] int 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  2   25[COMRAM] int 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3270 ;;      Params:         2       0       0       0       0       0       0
  3271 ;;      Locals:         2       0       0       0       0       0       0
  3272 ;;      Temps:          1       0       0       0       0       0       0
  3273 ;;      Totals:         5       0       0       0       0       0       0
  3274 ;;Total ram usage:        5 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_util_getTemperature
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text8
  3285  0036CA                     __ptext8:
  3286                           	opt stack 0
  3287  0036CA                     _util_onewire_reset:
  3288                           	opt stack 26
  3289                           
  3290                           ;easat2_util_onewire.c: 20: int presence = 1;
  3291                           
  3292                           ;incstack = 0
  3293  0036CA  0E00               	movlw	0
  3294  0036CC  6E1E               	movwf	util_onewire_reset@presence+1,c
  3295  0036CE  0E01               	movlw	1
  3296  0036D0  6E1D               	movwf	util_onewire_reset@presence,c
  3297                           
  3298                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3299  0036D2  9692               	bcf	3986,3,c	;volatile
  3300                           
  3301                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3302  0036D4  9680               	bcf	3968,3,c	;volatile
  3303                           
  3304                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3305  0036D6  0E5D               	movlw	93
  3306  0036D8                     u5947:
  3307  0036D8  2EE8               	decfsz	wreg,f,c
  3308  0036DA  D7FE               	bra	u5947
  3309  0036DC  F000               	nop	
  3310                           
  3311                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3312  0036DE  8680               	bsf	3968,3,c	;volatile
  3313                           
  3314                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3315  0036E0  0E0B               	movlw	11
  3316  0036E2                     u5957:
  3317  0036E2  2EE8               	decfsz	wreg,f,c
  3318  0036E4  D7FE               	bra	u5957
  3319  0036E6  D000               	nop2	
  3320                           
  3321                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3322  0036E8  8692               	bsf	3986,3,c	;volatile
  3323                           
  3324                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3325  0036EA  A680               	btfss	3968,3,c	;volatile
  3326  0036EC  D003               	goto	u3390
  3327  0036EE  6A1C               	clrf	??_util_onewire_reset& (0+255),c
  3328  0036F0  2A1C               	incf	??_util_onewire_reset& (0+255),f,c
  3329  0036F2  D001               	goto	u3398
  3330  0036F4                     u3390:
  3331  0036F4  6A1C               	clrf	??_util_onewire_reset& (0+255),c
  3332  0036F6                     u3398:
  3333  0036F6  501C               	movf	??_util_onewire_reset,w,c
  3334  0036F8  6E1D               	movwf	util_onewire_reset@presence,c
  3335  0036FA  6A1E               	clrf	util_onewire_reset@presence+1,c
  3336                           
  3337                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3338  0036FC  0E46               	movlw	70
  3339  0036FE                     u5967:
  3340  0036FE  2EE8               	decfsz	wreg,f,c
  3341  003700  D7FE               	bra	u5967
  3342                           
  3343                           ;easat2_util_onewire.c: 56: return presence;
  3344  003702  C01D  F01A         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3345  003706  C01E  F01B         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3346  00370A  0012               	return	
  3347  00370C                     __end_of_util_onewire_reset:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           intcon	equ	0xFF2
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _util_onewire_read_byte *****************
  3366 ;; Defined at:
  3367 ;;		line 96 in file "easat2_util_onewire.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  value           2   47[BANK0 ] int 
  3372 ;;  bit7            2   45[BANK0 ] int 
  3373 ;;  bit6            2   43[BANK0 ] int 
  3374 ;;  bit5            2   41[BANK0 ] int 
  3375 ;;  bit4            2   39[BANK0 ] int 
  3376 ;;  bit3            2   37[BANK0 ] int 
  3377 ;;  bit2            2   35[BANK0 ] int 
  3378 ;;  bit1            2   33[BANK0 ] int 
  3379 ;;  bit0            2   31[BANK0 ] int 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2   30[COMRAM] int 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3389 ;;      Params:         2       0       0       0       0       0       0
  3390 ;;      Locals:         0      18       0       0       0       0       0
  3391 ;;      Temps:          0      14       0       0       0       0       0
  3392 ;;      Totals:         2      32       0       0       0       0       0
  3393 ;;Total ram usage:       34 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		_util_onewire_read_bit
  3398 ;; This function is called by:
  3399 ;;		_util_getTemperature
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text9
  3404  0023B0                     __ptext9:
  3405                           	opt stack 0
  3406  0023B0                     _util_onewire_read_byte:
  3407                           	opt stack 25
  3408                           
  3409                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3410                           ;easat2_util_onewire.c: 99: int value = 0;
  3411                           
  3412                           ;incstack = 0
  3413  0023B0  0E00               	movlw	0
  3414  0023B2  0100               	movlb	0	; () banked
  3415  0023B4  6F90               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3416  0023B6  0E00               	movlw	0
  3417  0023B8  6F8F               	movwf	util_onewire_read_byte@value& (0+255),b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3421  0023BA  8692               	bsf	3986,3,c	;volatile
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3425  0023BC  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3426  0023C0  C01A  F07F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3427  0023C4  C01B  F080         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3428                           
  3429                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3430  0023C8  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3431  0023CC  C01A  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3432  0023D0  C01B  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3433                           
  3434                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3435  0023D4  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3436  0023D8  C01A  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3437  0023DC  C01B  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3438                           
  3439                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3440  0023E0  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3441  0023E4  C01A  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3442  0023E8  C01B  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3443                           
  3444                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3445  0023EC  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3446  0023F0  C01A  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3447  0023F4  C01B  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3448                           
  3449                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3450  0023F8  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3451  0023FC  C01A  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3452  002400  C01B  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3453                           
  3454                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3455  002404  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3456  002408  C01A  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3457  00240C  C01B  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3458                           
  3459                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3460  002410  EC19  F01C         	call	_util_onewire_read_bit	;wreg free
  3461  002414  C01A  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3462  002418  C01B  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3463                           
  3464                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3465                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3466  00241C  C08D  F071         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3467  002420  C08E  F072         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3468  002424  0E07               	movlw	7
  3469  002426                     u3445:
  3470  002426  90D8               	bcf	status,0,c
  3471  002428  0100               	movlb	0	; () banked
  3472  00242A  3771               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3473  00242C  3772               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3474  00242E  2EE8               	decfsz	wreg,f,c
  3475  002430  D7FA               	goto	u3445
  3476  002432  C08B  F073         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3477  002436  C08C  F074         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3478  00243A  0E06               	movlw	6
  3479  00243C                     u3455:
  3480  00243C  90D8               	bcf	status,0,c
  3481  00243E  0100               	movlb	0	; () banked
  3482  002440  3773               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3483  002442  3774               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3484  002444  2EE8               	decfsz	wreg,f,c
  3485  002446  D7FA               	goto	u3455
  3486  002448  C089  F075         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3487  00244C  C08A  F076         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3488  002450  0E05               	movlw	5
  3489  002452                     u3465:
  3490  002452  90D8               	bcf	status,0,c
  3491  002454  0100               	movlb	0	; () banked
  3492  002456  3775               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3493  002458  3776               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3494  00245A  2EE8               	decfsz	wreg,f,c
  3495  00245C  D7FA               	goto	u3465
  3496  00245E  C087  F077         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3497  002462  C088  F078         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3498  002466  0100               	movlb	0	; () banked
  3499  002468  3B77               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3500  00246A  3B78               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3501  00246C  0EF0               	movlw	240
  3502  00246E  1778               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3503  002470  5177               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3504  002472  0B0F               	andlw	15
  3505  002474  1378               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3506  002476  0EF0               	movlw	240
  3507  002478  1777               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3508  00247A  C085  F079         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3509  00247E  C086  F07A         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3510  002482  0100               	movlb	0	; () banked
  3511  002484  90D8               	bcf	status,0,c
  3512  002486  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3513  002488  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3514  00248A  0100               	movlb	0	; () banked
  3515  00248C  90D8               	bcf	status,0,c
  3516  00248E  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3517  002490  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3518  002492  0100               	movlb	0	; () banked
  3519  002494  90D8               	bcf	status,0,c
  3520  002496  3779               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3521  002498  377A               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3522  00249A  C083  F07B         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3523  00249E  C084  F07C         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3524  0024A2  0100               	movlb	0	; () banked
  3525  0024A4  90D8               	bcf	status,0,c
  3526  0024A6  377B               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3527  0024A8  377C               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3528  0024AA  0100               	movlb	0	; () banked
  3529  0024AC  90D8               	bcf	status,0,c
  3530  0024AE  377B               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3531  0024B0  377C               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3532  0024B2  C081  F07D         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3533  0024B6  C082  F07E         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3534  0024BA  90D8               	bcf	status,0,c
  3535  0024BC  0100               	movlb	0	; () banked
  3536  0024BE  377D               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3537  0024C0  377E               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3538  0024C2  0100               	movlb	0	; () banked
  3539  0024C4  517B               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3540  0024C6  0100               	movlb	0	; () banked
  3541  0024C8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3542  0024CA  0100               	movlb	0	; () banked
  3543  0024CC  517C               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3544  0024CE  0100               	movlb	0	; () banked
  3545  0024D0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3546  0024D2  0100               	movlb	0	; () banked
  3547  0024D4  5179               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3548  0024D6  0100               	movlb	0	; () banked
  3549  0024D8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3550  0024DA  0100               	movlb	0	; () banked
  3551  0024DC  517A               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3552  0024DE  0100               	movlb	0	; () banked
  3553  0024E0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3554  0024E2  0100               	movlb	0	; () banked
  3555  0024E4  5177               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3556  0024E6  0100               	movlb	0	; () banked
  3557  0024E8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3558  0024EA  0100               	movlb	0	; () banked
  3559  0024EC  5178               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3560  0024EE  0100               	movlb	0	; () banked
  3561  0024F0  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3562  0024F2  0100               	movlb	0	; () banked
  3563  0024F4  5175               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3564  0024F6  0100               	movlb	0	; () banked
  3565  0024F8  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3566  0024FA  0100               	movlb	0	; () banked
  3567  0024FC  5176               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3568  0024FE  0100               	movlb	0	; () banked
  3569  002500  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3570  002502  0100               	movlb	0	; () banked
  3571  002504  5173               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3572  002506  0100               	movlb	0	; () banked
  3573  002508  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3574  00250A  0100               	movlb	0	; () banked
  3575  00250C  5174               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3576  00250E  0100               	movlb	0	; () banked
  3577  002510  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3578  002512  0100               	movlb	0	; () banked
  3579  002514  5171               	movf	??_util_onewire_read_byte& (0+255),w,b
  3580  002516  0100               	movlb	0	; () banked
  3581  002518  277D               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3582  00251A  0100               	movlb	0	; () banked
  3583  00251C  5172               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3584  00251E  0100               	movlb	0	; () banked
  3585  002520  237E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3586  002522  0100               	movlb	0	; () banked
  3587  002524  517F               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3588  002526  0100               	movlb	0	; () banked
  3589  002528  257D               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3590  00252A  0100               	movlb	0	; () banked
  3591  00252C  6F8F               	movwf	util_onewire_read_byte@value& (0+255),b
  3592  00252E  0100               	movlb	0	; () banked
  3593  002530  5180               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3594  002532  0100               	movlb	0	; () banked
  3595  002534  217E               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3596  002536  0100               	movlb	0	; () banked
  3597  002538  6F90               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;easat2_util_onewire.c: 116: return value;
  3601  00253A  C08F  F01F         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3602  00253E  C090  F020         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3603  002542  0012               	return	
  3604  002544                     __end_of_util_onewire_read_byte:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           intcon	equ	0xFF2
  3611                           postinc0	equ	0xFEE
  3612                           wreg	equ	0xFE8
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           postinc2	equ	0xFDE
  3617                           postdec2	equ	0xFDD
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _util_onewire_read_bit *****************
  3623 ;; Defined at:
  3624 ;;		line 162 in file "easat2_util_onewire.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  value           2   28[COMRAM] int 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  2   25[COMRAM] int 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3638 ;;      Params:         2       0       0       0       0       0       0
  3639 ;;      Locals:         2       0       0       0       0       0       0
  3640 ;;      Temps:          1       0       0       0       0       0       0
  3641 ;;      Totals:         5       0       0       0       0       0       0
  3642 ;;Total ram usage:        5 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    2
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_util_onewire_read_byte
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text10
  3653  003832                     __ptext10:
  3654                           	opt stack 0
  3655  003832                     _util_onewire_read_bit:
  3656                           	opt stack 25
  3657                           
  3658                           ;easat2_util_onewire.c: 164: int value = 0;
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;incstack = 0
  3662  003832  0E00               	movlw	0
  3663  003834  6E1E               	movwf	util_onewire_read_bit@value+1,c
  3664  003836  0E00               	movlw	0
  3665  003838  6E1D               	movwf	util_onewire_read_bit@value,c
  3666                           
  3667                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3668  00383A  9692               	bcf	3986,3,c	;volatile
  3669                           
  3670                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3671  00383C  9680               	bcf	3968,3,c	;volatile
  3672                           
  3673                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3674                           
  3675                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3676  00383E  8680               	bsf	3968,3,c	;volatile
  3677                           
  3678                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3679  003840  D000               	nop2		;2 cycle nop
  3680                           
  3681                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3682  003842  A680               	btfss	3968,3,c	;volatile
  3683  003844  D003               	goto	u2910
  3684  003846  6A1C               	clrf	??_util_onewire_read_bit& (0+255),c
  3685  003848  2A1C               	incf	??_util_onewire_read_bit& (0+255),f,c
  3686  00384A  D001               	goto	u2918
  3687  00384C                     u2910:
  3688  00384C  6A1C               	clrf	??_util_onewire_read_bit& (0+255),c
  3689  00384E                     u2918:
  3690  00384E  501C               	movf	??_util_onewire_read_bit,w,c
  3691  003850  6E1D               	movwf	util_onewire_read_bit@value,c
  3692  003852  6A1E               	clrf	util_onewire_read_bit@value+1,c
  3693                           
  3694                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3695  003854  0E0A               	movlw	10
  3696  003856                     u5977:
  3697  003856  2EE8               	decfsz	wreg,f,c
  3698  003858  D7FE               	bra	u5977
  3699                           
  3700                           ;easat2_util_onewire.c: 187: return value;
  3701  00385A  C01D  F01A         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3702  00385E  C01E  F01B         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3703  003862  0012               	return	
  3704  003864                     __end_of_util_onewire_read_bit:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           intcon	equ	0xFF2
  3711                           postinc0	equ	0xFEE
  3712                           wreg	equ	0xFE8
  3713                           postdec1	equ	0xFE5
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           postinc2	equ	0xFDE
  3717                           postdec2	equ	0xFDD
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722 ;; *************** function ___ftdiv *****************
  3723 ;; Defined at:
  3724 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  f1              3   20[BANK0 ] float 
  3727 ;;  f2              3   23[BANK0 ] float 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  f3              3   27[BANK0 ] float 
  3730 ;;  sign            1   31[BANK0 ] unsigned char 
  3731 ;;  exp             1   30[BANK0 ] unsigned char 
  3732 ;;  cntr            1   26[BANK0 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  3   20[BANK0 ] float 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3742 ;;      Params:         0       6       0       0       0       0       0
  3743 ;;      Locals:         0       6       0       0       0       0       0
  3744 ;;      Temps:          3       0       0       0       0       0       0
  3745 ;;      Totals:         3      12       0       0       0       0       0
  3746 ;;Total ram usage:       15 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		___ftpack
  3751 ;; This function is called by:
  3752 ;;		_util_getTemperature
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text11
  3757  002968                     __ptext11:
  3758                           	opt stack 0
  3759  002968                     ___ftdiv:
  3760                           	opt stack 25
  3761                           
  3762                           ;incstack = 0
  3763  002968  C076  F023         	movff	___ftdiv@f1+2,??___ftdiv
  3764  00296C  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  3765  00296E  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  3766  002970  0100               	movlb	0	; () banked
  3767  002972  3575               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3768  002974  3623               	rlcf	??___ftdiv& (0+255),f,c
  3769  002976  E301               	bnc	u5631
  3770  002978  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  3771  00297A                     u5631:
  3772  00297A  5023               	movf	??___ftdiv,w,c
  3773  00297C  0100               	movlb	0	; () banked
  3774  00297E  6F7E               	movwf	___ftdiv@exp& (0+255),b
  3775  002980  0100               	movlb	0	; () banked
  3776  002982  517E               	movf	___ftdiv@exp& (0+255),w,b
  3777  002984  A4D8               	btfss	status,2,c
  3778  002986  D00A               	goto	l5429
  3779                           
  3780                           ; BSR set to: 0
  3781  002988  0E00               	movlw	0
  3782  00298A  0100               	movlb	0	; () banked
  3783  00298C  6F74               	movwf	?___ftdiv& (0+255),b
  3784  00298E  0E00               	movlw	0
  3785  002990  0100               	movlb	0	; () banked
  3786  002992  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  3787  002994  0E00               	movlw	0
  3788  002996  0100               	movlb	0	; () banked
  3789  002998  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792  00299A  0012               	return	
  3793  00299C                     l5429:
  3794                           
  3795                           ; BSR set to: 0
  3796  00299C  C079  F023         	movff	___ftdiv@f2+2,??___ftdiv
  3797  0029A0  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  3798  0029A2  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  3799  0029A4  0100               	movlb	0	; () banked
  3800  0029A6  3578               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3801  0029A8  3623               	rlcf	??___ftdiv& (0+255),f,c
  3802  0029AA  E301               	bnc	u5651
  3803  0029AC  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  3804  0029AE                     u5651:
  3805  0029AE  5023               	movf	??___ftdiv,w,c
  3806  0029B0  0100               	movlb	0	; () banked
  3807  0029B2  6F7F               	movwf	___ftdiv@sign& (0+255),b
  3808  0029B4  0100               	movlb	0	; () banked
  3809  0029B6  517F               	movf	___ftdiv@sign& (0+255),w,b
  3810  0029B8  A4D8               	btfss	status,2,c
  3811  0029BA  D00A               	goto	l5435
  3812                           
  3813                           ; BSR set to: 0
  3814  0029BC  0E00               	movlw	0
  3815  0029BE  0100               	movlb	0	; () banked
  3816  0029C0  6F74               	movwf	?___ftdiv& (0+255),b
  3817  0029C2  0E00               	movlw	0
  3818  0029C4  0100               	movlb	0	; () banked
  3819  0029C6  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  3820  0029C8  0E00               	movlw	0
  3821  0029CA  0100               	movlb	0	; () banked
  3822  0029CC  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  3823                           
  3824                           ; BSR set to: 0
  3825  0029CE  0012               	return	
  3826  0029D0                     l5435:
  3827                           
  3828                           ; BSR set to: 0
  3829  0029D0  0E00               	movlw	0
  3830  0029D2  0100               	movlb	0	; () banked
  3831  0029D4  6F7B               	movwf	___ftdiv@f3& (0+255),b
  3832  0029D6  0E00               	movlw	0
  3833  0029D8  0100               	movlb	0	; () banked
  3834  0029DA  6F7C               	movwf	(___ftdiv@f3+1)& (0+255),b
  3835  0029DC  0E00               	movlw	0
  3836  0029DE  0100               	movlb	0	; () banked
  3837  0029E0  6F7D               	movwf	(___ftdiv@f3+2)& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840  0029E2  0100               	movlb	0	; () banked
  3841  0029E4  517F               	movf	___ftdiv@sign& (0+255),w,b
  3842  0029E6  0F89               	addlw	137
  3843  0029E8  0100               	movlb	0	; () banked
  3844  0029EA  5F7E               	subwf	___ftdiv@exp& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 0
  3847  0029EC  C076  F07F         	movff	___ftdiv@f1+2,___ftdiv@sign
  3848                           
  3849                           ; BSR set to: 0
  3850  0029F0  0100               	movlb	0	; () banked
  3851  0029F2  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3852  0029F4  0100               	movlb	0	; () banked
  3853  0029F6  1B7F               	xorwf	___ftdiv@sign& (0+255),f,b
  3854                           
  3855                           ; BSR set to: 0
  3856  0029F8  0E80               	movlw	128
  3857  0029FA  0100               	movlb	0	; () banked
  3858  0029FC  177F               	andwf	___ftdiv@sign& (0+255),f,b
  3859                           
  3860                           ; BSR set to: 0
  3861  0029FE  0100               	movlb	0	; () banked
  3862  002A00  8F75               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3863                           
  3864                           ; BSR set to: 0
  3865  002A02  0EFF               	movlw	255
  3866  002A04  0100               	movlb	0	; () banked
  3867  002A06  1774               	andwf	___ftdiv@f1& (0+255),f,b
  3868  002A08  0EFF               	movlw	255
  3869  002A0A  0100               	movlb	0	; () banked
  3870  002A0C  1775               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3871  002A0E  0E00               	movlw	0
  3872  002A10  0100               	movlb	0	; () banked
  3873  002A12  1776               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3874                           
  3875                           ; BSR set to: 0
  3876  002A14  0100               	movlb	0	; () banked
  3877  002A16  8F78               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3878                           
  3879                           ; BSR set to: 0
  3880  002A18  0EFF               	movlw	255
  3881  002A1A  0100               	movlb	0	; () banked
  3882  002A1C  1777               	andwf	___ftdiv@f2& (0+255),f,b
  3883  002A1E  0EFF               	movlw	255
  3884  002A20  0100               	movlb	0	; () banked
  3885  002A22  1778               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3886  002A24  0E00               	movlw	0
  3887  002A26  0100               	movlb	0	; () banked
  3888  002A28  1779               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 0
  3891  002A2A  0E18               	movlw	24
  3892  002A2C  0100               	movlb	0	; () banked
  3893  002A2E  6F7A               	movwf	___ftdiv@cntr& (0+255),b
  3894  002A30                     l5455:
  3895                           
  3896                           ; BSR set to: 0
  3897  002A30  0100               	movlb	0	; () banked
  3898  002A32  90D8               	bcf	status,0,c
  3899  002A34  377B               	rlcf	___ftdiv@f3& (0+255),f,b
  3900  002A36  377C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3901  002A38  377D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3902                           
  3903                           ; BSR set to: 0
  3904  002A3A  0100               	movlb	0	; () banked
  3905  002A3C  5177               	movf	___ftdiv@f2& (0+255),w,b
  3906  002A3E  0100               	movlb	0	; () banked
  3907  002A40  5D74               	subwf	___ftdiv@f1& (0+255),w,b
  3908  002A42  0100               	movlb	0	; () banked
  3909  002A44  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3910  002A46  0100               	movlb	0	; () banked
  3911  002A48  5975               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3912  002A4A  0100               	movlb	0	; () banked
  3913  002A4C  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3914  002A4E  0100               	movlb	0	; () banked
  3915  002A50  5976               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3916  002A52  A0D8               	btfss	status,0,c
  3917  002A54  D00E               	goto	l897
  3918                           
  3919                           ; BSR set to: 0
  3920  002A56  0100               	movlb	0	; () banked
  3921  002A58  5177               	movf	___ftdiv@f2& (0+255),w,b
  3922  002A5A  0100               	movlb	0	; () banked
  3923  002A5C  5F74               	subwf	___ftdiv@f1& (0+255),f,b
  3924  002A5E  0100               	movlb	0	; () banked
  3925  002A60  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3926  002A62  0100               	movlb	0	; () banked
  3927  002A64  5B75               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3928  002A66  0100               	movlb	0	; () banked
  3929  002A68  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3930  002A6A  0100               	movlb	0	; () banked
  3931  002A6C  5B76               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3932                           
  3933                           ; BSR set to: 0
  3934  002A6E  0100               	movlb	0	; () banked
  3935  002A70  817B               	bsf	___ftdiv@f3& (0+255),0,b
  3936  002A72                     l897:
  3937                           
  3938                           ; BSR set to: 0
  3939  002A72  0100               	movlb	0	; () banked
  3940  002A74  90D8               	bcf	status,0,c
  3941  002A76  3774               	rlcf	___ftdiv@f1& (0+255),f,b
  3942  002A78  3775               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3943  002A7A  3776               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3944                           
  3945                           ; BSR set to: 0
  3946  002A7C  0100               	movlb	0	; () banked
  3947  002A7E  2F7A               	decfsz	___ftdiv@cntr& (0+255),f,b
  3948  002A80  D7D7               	goto	l5455
  3949                           
  3950                           ; BSR set to: 0
  3951                           
  3952                           ; BSR set to: 0
  3953  002A82  C07B  F01A         	movff	___ftdiv@f3,___ftpack@arg
  3954  002A86  C07C  F01B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3955  002A8A  C07D  F01C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3956  002A8E  C07E  F01D         	movff	___ftdiv@exp,___ftpack@exp
  3957  002A92  C07F  F01E         	movff	___ftdiv@sign,___ftpack@sign
  3958  002A96  EC7D  F018         	call	___ftpack	;wreg free
  3959  002A9A  C01A  F074         	movff	?___ftpack,?___ftdiv
  3960  002A9E  C01B  F075         	movff	?___ftpack+1,?___ftdiv+1
  3961  002AA2  C01C  F076         	movff	?___ftpack+2,?___ftdiv+2
  3962  002AA6  0012               	return	
  3963  002AA8                     __end_of___ftdiv:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           intcon	equ	0xFF2
  3970                           postinc0	equ	0xFEE
  3971                           wreg	equ	0xFE8
  3972                           postdec1	equ	0xFE5
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function ___awtoft *****************
  3982 ;; Defined at:
  3983 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  c               2   17[BANK0 ] int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  sign            1   33[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  3   17[BANK0 ] float 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3997 ;;      Params:         0       3       0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0
  4000 ;;      Totals:         1       3       0       0       0       0       0
  4001 ;;Total ram usage:        4 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    3
  4004 ;; This function calls:
  4005 ;;		___ftpack
  4006 ;; This function is called by:
  4007 ;;		_util_getTemperature
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text12
  4012  00378A                     __ptext12:
  4013                           	opt stack 0
  4014  00378A                     ___awtoft:
  4015                           	opt stack 25
  4016                           
  4017                           ;incstack = 0
  4018  00378A  0E00               	movlw	0
  4019  00378C  6E22               	movwf	___awtoft@sign,c
  4020  00378E  0100               	movlb	0	; () banked
  4021  003790  AF72               	btfss	(___awtoft@c+1)& (0+255),7,b
  4022  003792  D007               	goto	l4301
  4023                           
  4024                           ; BSR set to: 0
  4025  003794  0100               	movlb	0	; () banked
  4026  003796  6D71               	negf	___awtoft@c& (0+255),b
  4027  003798  1F72               	comf	(___awtoft@c+1)& (0+255),f,b
  4028  00379A  B0D8               	btfsc	status,0,c
  4029  00379C  2B72               	incf	(___awtoft@c+1)& (0+255),f,b
  4030                           
  4031                           ; BSR set to: 0
  4032  00379E  0E01               	movlw	1
  4033  0037A0  6E22               	movwf	___awtoft@sign,c
  4034  0037A2                     l4301:
  4035                           
  4036                           ; BSR set to: 0
  4037  0037A2  C071  F01A         	movff	___awtoft@c,___ftpack@arg
  4038  0037A6  C072  F01B         	movff	___awtoft@c+1,___ftpack@arg+1
  4039  0037AA  6A1C               	clrf	___ftpack@arg+2,c
  4040  0037AC  0E8E               	movlw	142
  4041  0037AE  6E1D               	movwf	___ftpack@exp,c
  4042  0037B0  C022  F01E         	movff	___awtoft@sign,___ftpack@sign
  4043  0037B4  EC7D  F018         	call	___ftpack	;wreg free
  4044  0037B8  C01A  F071         	movff	?___ftpack,?___awtoft
  4045  0037BC  C01B  F072         	movff	?___ftpack+1,?___awtoft+1
  4046  0037C0  C01C  F073         	movff	?___ftpack+2,?___awtoft+2
  4047  0037C4  0012               	return	
  4048  0037C6                     __end_of___awtoft:
  4049                           	opt stack 0
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           intcon	equ	0xFF2
  4055                           postinc0	equ	0xFEE
  4056                           wreg	equ	0xFE8
  4057                           postdec1	equ	0xFE5
  4058                           fsr1h	equ	0xFE2
  4059                           fsr1l	equ	0xFE1
  4060                           postinc2	equ	0xFDE
  4061                           postdec2	equ	0xFDD
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           status	equ	0xFD8
  4065                           
  4066 ;; *************** function _util_getSolarCurrent *****************
  4067 ;; Defined at:
  4068 ;;		line 52 in file "easat2_util_inputs.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  solarCurrent    3   63[BANK0 ] float 
  4073 ;;  value           3   60[BANK0 ] float 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2   58[BANK0 ] int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4083 ;;      Params:         0       2       0       0       0       0       0
  4084 ;;      Locals:         0       6       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0
  4086 ;;      Totals:         0       8       0       0       0       0       0
  4087 ;;Total ram usage:        8 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    4
  4090 ;; This function calls:
  4091 ;;		___ftmul
  4092 ;;		___fttol
  4093 ;;		___lwtoft
  4094 ;; This function is called by:
  4095 ;;		_main_loop
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text13
  4100  002DEC                     __ptext13:
  4101                           	opt stack 0
  4102  002DEC                     _util_getSolarCurrent:
  4103                           	opt stack 25
  4104                           
  4105                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4106                           
  4107                           ;incstack = 0
  4108  002DEC  0E00               	movlw	0
  4109  002DEE  0100               	movlb	0	; () banked
  4110  002DF0  6F9C               	movwf	util_getSolarCurrent@value& (0+255),b
  4111  002DF2  0E00               	movlw	0
  4112  002DF4  0100               	movlb	0	; () banked
  4113  002DF6  6F9D               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4114  002DF8  0E00               	movlw	0
  4115  002DFA  0100               	movlb	0	; () banked
  4116  002DFC  6F9E               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4117  002DFE  0E00               	movlw	0
  4118  002E00  0100               	movlb	0	; () banked
  4119  002E02  6F9F               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4120  002E04  0E00               	movlw	0
  4121  002E06  0100               	movlb	0	; () banked
  4122  002E08  6FA0               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4123  002E0A  0E00               	movlw	0
  4124  002E0C  0100               	movlb	0	; () banked
  4125  002E0E  6FA1               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4129  002E10  84C2               	bsf	4034,2,c	;volatile
  4130  002E12  96C2               	bcf	4034,3,c	;volatile
  4131  002E14  98C2               	bcf	4034,4,c	;volatile
  4132  002E16  9AC2               	bcf	4034,5,c	;volatile
  4133  002E18  9CC2               	bcf	4034,6,c	;volatile
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4137  002E1A  80C2               	bsf	4034,0,c	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4141  002E1C  9C9E               	bcf	3998,6,c	;volatile
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4145  002E1E  82C2               	bsf	4034,1,c	;volatile
  4146  002E20                     l129:
  4147  002E20  AC9E               	btfss	3998,6,c	;volatile
  4148  002E22  D7FE               	goto	l129
  4149                           
  4150                           ;easat2_util_inputs.c: 63: value = ADRES;
  4151  002E24  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4152  002E28  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4153  002E2C  ECBA  F01C         	call	___lwtoft	;wreg free
  4154  002E30  C071  F09C         	movff	?___lwtoft,util_getSolarCurrent@value
  4155  002E34  C072  F09D         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4156  002E38  C073  F09E         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4157                           
  4158                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4159  002E3C  9C9E               	bcf	3998,6,c	;volatile
  4160                           
  4161                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4162  002E3E  90C2               	bcf	4034,0,c	;volatile
  4163                           
  4164                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4165  002E40  C09C  F075         	movff	util_getSolarCurrent@value,___ftmul@f1
  4166  002E44  C09D  F076         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4167  002E48  C09E  F077         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4168  002E4C  0E33               	movlw	51
  4169  002E4E  0100               	movlb	0	; () banked
  4170  002E50  6F78               	movwf	___ftmul@f2& (0+255),b
  4171  002E52  0E03               	movlw	3
  4172  002E54  0100               	movlb	0	; () banked
  4173  002E56  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4174  002E58  0E3B               	movlw	59
  4175  002E5A  0100               	movlb	0	; () banked
  4176  002E5C  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4177  002E5E  EC63  F013         	call	___ftmul	;wreg free
  4178  002E62  C075  F09F         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4179  002E66  C076  F0A0         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4180  002E6A  C077  F0A1         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4181                           
  4182                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4183  002E6E  C09F  F075         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4184  002E72  C0A0  F076         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4185  002E76  C0A1  F077         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4186  002E7A  0E00               	movlw	0
  4187  002E7C  0100               	movlb	0	; () banked
  4188  002E7E  6F78               	movwf	___ftmul@f2& (0+255),b
  4189  002E80  0E80               	movlw	128
  4190  002E82  0100               	movlb	0	; () banked
  4191  002E84  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4192  002E86  0E3F               	movlw	63
  4193  002E88  0100               	movlb	0	; () banked
  4194  002E8A  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4195  002E8C  EC63  F013         	call	___ftmul	;wreg free
  4196  002E90  C075  F09F         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4197  002E94  C076  F0A0         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4198  002E98  C077  F0A1         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4199                           
  4200                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4201  002E9C  C09F  F08B         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4202  002EA0  C0A0  F08C         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4203  002EA4  C0A1  F08D         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4204  002EA8  EC12  F014         	call	___fttol	;wreg free
  4205  002EAC  C08B  F09A         	movff	?___fttol,?_util_getSolarCurrent
  4206  002EB0  C08C  F09B         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4207  002EB4  0012               	return	
  4208  002EB6                     __end_of_util_getSolarCurrent:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           intcon	equ	0xFF2
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           postinc2	equ	0xFDE
  4221                           postdec2	equ	0xFDD
  4222                           fsr2h	equ	0xFDA
  4223                           fsr2l	equ	0xFD9
  4224                           status	equ	0xFD8
  4225                           
  4226 ;; *************** function _util_getBatteryVoltage *****************
  4227 ;; Defined at:
  4228 ;;		line 19 in file "easat2_util_inputs.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  voltage         3   42[BANK0 ] float 
  4233 ;;  value           3   39[BANK0 ] float 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  3   36[BANK0 ] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4243 ;;      Params:         0       3       0       0       0       0       0
  4244 ;;      Locals:         0       6       0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0
  4246 ;;      Totals:         0       9       0       0       0       0       0
  4247 ;;Total ram usage:        9 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    4
  4250 ;; This function calls:
  4251 ;;		___ftmul
  4252 ;;		___lwtoft
  4253 ;; This function is called by:
  4254 ;;		_main_loop
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text14
  4259  002F80                     __ptext14:
  4260                           	opt stack 0
  4261  002F80                     _util_getBatteryVoltage:
  4262                           	opt stack 25
  4263                           
  4264                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4265                           
  4266                           ;incstack = 0
  4267  002F80  0E00               	movlw	0
  4268  002F82  0100               	movlb	0	; () banked
  4269  002F84  6F87               	movwf	util_getBatteryVoltage@value& (0+255),b
  4270  002F86  0E00               	movlw	0
  4271  002F88  0100               	movlb	0	; () banked
  4272  002F8A  6F88               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4273  002F8C  0E00               	movlw	0
  4274  002F8E  0100               	movlb	0	; () banked
  4275  002F90  6F89               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4276  002F92  0E00               	movlw	0
  4277  002F94  0100               	movlb	0	; () banked
  4278  002F96  6F8A               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4279  002F98  0E00               	movlw	0
  4280  002F9A  0100               	movlb	0	; () banked
  4281  002F9C  6F8B               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4282  002F9E  0E00               	movlw	0
  4283  002FA0  0100               	movlb	0	; () banked
  4284  002FA2  6F8C               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4288  002FA4  94C2               	bcf	4034,2,c	;volatile
  4289  002FA6  96C2               	bcf	4034,3,c	;volatile
  4290  002FA8  98C2               	bcf	4034,4,c	;volatile
  4291  002FAA  9AC2               	bcf	4034,5,c	;volatile
  4292  002FAC  9CC2               	bcf	4034,6,c	;volatile
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4296  002FAE  80C2               	bsf	4034,0,c	;volatile
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4300  002FB0  9C9E               	bcf	3998,6,c	;volatile
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4304  002FB2  82C2               	bsf	4034,1,c	;volatile
  4305  002FB4                     l123:
  4306  002FB4  AC9E               	btfss	3998,6,c	;volatile
  4307  002FB6  D7FE               	goto	l123
  4308                           
  4309                           ;easat2_util_inputs.c: 30: value = ADRES;
  4310  002FB8  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4311  002FBC  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4312  002FC0  ECBA  F01C         	call	___lwtoft	;wreg free
  4313  002FC4  C071  F087         	movff	?___lwtoft,util_getBatteryVoltage@value
  4314  002FC8  C072  F088         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4315  002FCC  C073  F089         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4316                           
  4317                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4318  002FD0  9C9E               	bcf	3998,6,c	;volatile
  4319                           
  4320                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4321  002FD2  90C2               	bcf	4034,0,c	;volatile
  4322                           
  4323                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4324  002FD4  C087  F075         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4325  002FD8  C088  F076         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4326  002FDC  C089  F077         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4327  002FE0  0E33               	movlw	51
  4328  002FE2  0100               	movlb	0	; () banked
  4329  002FE4  6F78               	movwf	___ftmul@f2& (0+255),b
  4330  002FE6  0E03               	movlw	3
  4331  002FE8  0100               	movlb	0	; () banked
  4332  002FEA  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4333  002FEC  0E3B               	movlw	59
  4334  002FEE  0100               	movlb	0	; () banked
  4335  002FF0  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4336  002FF2  EC63  F013         	call	___ftmul	;wreg free
  4337  002FF6  C075  F08A         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4338  002FFA  C076  F08B         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4339  002FFE  C077  F08C         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4340                           
  4341                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4342  003002  C08A  F075         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4343  003006  C08B  F076         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4344  00300A  C08C  F077         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4345  00300E  0E66               	movlw	102
  4346  003010  0100               	movlb	0	; () banked
  4347  003012  6F78               	movwf	___ftmul@f2& (0+255),b
  4348  003014  0EB6               	movlw	182
  4349  003016  0100               	movlb	0	; () banked
  4350  003018  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4351  00301A  0E40               	movlw	64
  4352  00301C  0100               	movlb	0	; () banked
  4353  00301E  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4354  003020  EC63  F013         	call	___ftmul	;wreg free
  4355  003024  C075  F08A         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4356  003028  C076  F08B         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4357  00302C  C077  F08C         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4358                           
  4359                           ;easat2_util_inputs.c: 46: return voltage;
  4360  003030  C08A  F084         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4361  003034  C08B  F085         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4362  003038  C08C  F086         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4363  00303C  0012               	return	
  4364  00303E                     __end_of_util_getBatteryVoltage:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           intcon	equ	0xFF2
  4371                           postinc0	equ	0xFEE
  4372                           wreg	equ	0xFE8
  4373                           postdec1	equ	0xFE5
  4374                           fsr1h	equ	0xFE2
  4375                           fsr1l	equ	0xFE1
  4376                           postinc2	equ	0xFDE
  4377                           postdec2	equ	0xFDD
  4378                           fsr2h	equ	0xFDA
  4379                           fsr2l	equ	0xFD9
  4380                           status	equ	0xFD8
  4381                           
  4382 ;; *************** function _util_getBatteryCurrent *****************
  4383 ;; Defined at:
  4384 ;;		line 85 in file "easat2_util_inputs.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  batteryCurre    3   63[BANK0 ] float 
  4389 ;;  value           3   60[BANK0 ] float 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2   58[BANK0 ] int 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4399 ;;      Params:         0       2       0       0       0       0       0
  4400 ;;      Locals:         0       6       0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0
  4402 ;;      Totals:         0       8       0       0       0       0       0
  4403 ;;Total ram usage:        8 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    4
  4406 ;; This function calls:
  4407 ;;		___ftmul
  4408 ;;		___fttol
  4409 ;;		___lwtoft
  4410 ;; This function is called by:
  4411 ;;		_main_loop
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text15
  4416  002EB6                     __ptext15:
  4417                           	opt stack 0
  4418  002EB6                     _util_getBatteryCurrent:
  4419                           	opt stack 25
  4420                           
  4421                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4422                           
  4423                           ;incstack = 0
  4424  002EB6  0E00               	movlw	0
  4425  002EB8  0100               	movlb	0	; () banked
  4426  002EBA  6F9C               	movwf	util_getBatteryCurrent@value& (0+255),b
  4427  002EBC  0E00               	movlw	0
  4428  002EBE  0100               	movlb	0	; () banked
  4429  002EC0  6F9D               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4430  002EC2  0E00               	movlw	0
  4431  002EC4  0100               	movlb	0	; () banked
  4432  002EC6  6F9E               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4433  002EC8  0E00               	movlw	0
  4434  002ECA  0100               	movlb	0	; () banked
  4435  002ECC  6F9F               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4436  002ECE  0E00               	movlw	0
  4437  002ED0  0100               	movlb	0	; () banked
  4438  002ED2  6FA0               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4439  002ED4  0E00               	movlw	0
  4440  002ED6  0100               	movlb	0	; () banked
  4441  002ED8  6FA1               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4445  002EDA  94C2               	bcf	4034,2,c	;volatile
  4446  002EDC  96C2               	bcf	4034,3,c	;volatile
  4447  002EDE  88C2               	bsf	4034,4,c	;volatile
  4448  002EE0  8AC2               	bsf	4034,5,c	;volatile
  4449  002EE2  9CC2               	bcf	4034,6,c	;volatile
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4453  002EE4  80C2               	bsf	4034,0,c	;volatile
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4457  002EE6  9C9E               	bcf	3998,6,c	;volatile
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4461  002EE8  82C2               	bsf	4034,1,c	;volatile
  4462  002EEA                     l135:
  4463  002EEA  AC9E               	btfss	3998,6,c	;volatile
  4464  002EEC  D7FE               	goto	l135
  4465                           
  4466                           ;easat2_util_inputs.c: 96: value = ADRES;
  4467  002EEE  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4468  002EF2  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4469  002EF6  ECBA  F01C         	call	___lwtoft	;wreg free
  4470  002EFA  C071  F09C         	movff	?___lwtoft,util_getBatteryCurrent@value
  4471  002EFE  C072  F09D         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4472  002F02  C073  F09E         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4473                           
  4474                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4475  002F06  9C9E               	bcf	3998,6,c	;volatile
  4476                           
  4477                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4478  002F08  90C2               	bcf	4034,0,c	;volatile
  4479                           
  4480                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4481  002F0A  C09C  F075         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4482  002F0E  C09D  F076         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4483  002F12  C09E  F077         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4484  002F16  0E33               	movlw	51
  4485  002F18  0100               	movlb	0	; () banked
  4486  002F1A  6F78               	movwf	___ftmul@f2& (0+255),b
  4487  002F1C  0E03               	movlw	3
  4488  002F1E  0100               	movlb	0	; () banked
  4489  002F20  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4490  002F22  0E3B               	movlw	59
  4491  002F24  0100               	movlb	0	; () banked
  4492  002F26  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4493  002F28  EC63  F013         	call	___ftmul	;wreg free
  4494  002F2C  C075  F09F         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4495  002F30  C076  F0A0         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4496  002F34  C077  F0A1         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4497                           
  4498                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4499  002F38  C09F  F075         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4500  002F3C  C0A0  F076         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4501  002F40  C0A1  F077         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4502  002F44  0E00               	movlw	0
  4503  002F46  0100               	movlb	0	; () banked
  4504  002F48  6F78               	movwf	___ftmul@f2& (0+255),b
  4505  002F4A  0E80               	movlw	128
  4506  002F4C  0100               	movlb	0	; () banked
  4507  002F4E  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  4508  002F50  0E3F               	movlw	63
  4509  002F52  0100               	movlb	0	; () banked
  4510  002F54  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  4511  002F56  EC63  F013         	call	___ftmul	;wreg free
  4512  002F5A  C075  F09F         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4513  002F5E  C076  F0A0         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4514  002F62  C077  F0A1         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4515                           
  4516                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4517  002F66  C09F  F08B         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4518  002F6A  C0A0  F08C         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4519  002F6E  C0A1  F08D         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4520  002F72  EC12  F014         	call	___fttol	;wreg free
  4521  002F76  C08B  F09A         	movff	?___fttol,?_util_getBatteryCurrent
  4522  002F7A  C08C  F09B         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4523  002F7E  0012               	return	
  4524  002F80                     __end_of_util_getBatteryCurrent:
  4525                           	opt stack 0
  4526                           tblptru	equ	0xFF8
  4527                           tblptrh	equ	0xFF7
  4528                           tblptrl	equ	0xFF6
  4529                           tablat	equ	0xFF5
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec1	equ	0xFE5
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           postinc2	equ	0xFDE
  4537                           postdec2	equ	0xFDD
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function ___lwtoft *****************
  4543 ;; Defined at:
  4544 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  c               2   17[BANK0 ] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  3   17[BANK0 ] float 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         0       3       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0
  4561 ;;      Totals:         0       3       0       0       0       0       0
  4562 ;;Total ram usage:        3 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    3
  4565 ;; This function calls:
  4566 ;;		___ftpack
  4567 ;; This function is called by:
  4568 ;;		_util_getBatteryVoltage
  4569 ;;		_util_getSolarCurrent
  4570 ;;		_util_getBatteryCurrent
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text16
  4575  003974                     __ptext16:
  4576                           	opt stack 0
  4577  003974                     ___lwtoft:
  4578                           	opt stack 25
  4579                           
  4580                           ;incstack = 0
  4581  003974  C071  F01A         	movff	___lwtoft@c,___ftpack@arg
  4582  003978  C072  F01B         	movff	___lwtoft@c+1,___ftpack@arg+1
  4583  00397C  6A1C               	clrf	___ftpack@arg+2,c
  4584  00397E  0E8E               	movlw	142
  4585  003980  6E1D               	movwf	___ftpack@exp,c
  4586  003982  0E00               	movlw	0
  4587  003984  6E1E               	movwf	___ftpack@sign,c
  4588  003986  EC7D  F018         	call	___ftpack	;wreg free
  4589  00398A  C01A  F071         	movff	?___ftpack,?___lwtoft
  4590  00398E  C01B  F072         	movff	?___ftpack+1,?___lwtoft+1
  4591  003992  C01C  F073         	movff	?___ftpack+2,?___lwtoft+2
  4592  003996  0012               	return	
  4593  003998                     __end_of___lwtoft:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           intcon	equ	0xFF2
  4600                           postinc0	equ	0xFEE
  4601                           wreg	equ	0xFE8
  4602                           postdec1	equ	0xFE5
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           postinc2	equ	0xFDE
  4606                           postdec2	equ	0xFDD
  4607                           fsr2h	equ	0xFDA
  4608                           fsr2l	equ	0xFD9
  4609                           status	equ	0xFD8
  4610                           
  4611 ;; *************** function _util_beacon_transmission *****************
  4612 ;; Defined at:
  4613 ;;		line 22 in file "easat2_util_transmission.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  battery_volt    3  109[BANK0 ] float 
  4616 ;;  solar_curren    2  112[BANK0 ] int 
  4617 ;;  battery_curr    2  114[BANK0 ] int 
  4618 ;;  temperature     3  116[BANK0 ] float 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  i               2  192[BANK1 ] int 
  4621 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4622 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4632 ;;      Params:         0      10       0       0       0       0       0
  4633 ;;      Locals:         0       0     194       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0
  4635 ;;      Totals:         0      10     194       0       0       0       0
  4636 ;;Total ram usage:      204 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    6
  4639 ;; This function calls:
  4640 ;;		_memset
  4641 ;;		_sprintf
  4642 ;;		_strcat
  4643 ;;		_strcpy
  4644 ;;		_strlen
  4645 ;;		_util_transmit_letter
  4646 ;; This function is called by:
  4647 ;;		_main_loop
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text17
  4652  002D02                     __ptext17:
  4653                           	opt stack 0
  4654  002D02                     _util_beacon_transmission:
  4655                           	opt stack 23
  4656                           
  4657                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4658                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4659                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4660                           
  4661                           ;incstack = 0
  4662  002D02  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4663  002D04  6E1A               	movwf	memset@p1,c
  4664  002D06  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4665  002D08  6E1B               	movwf	memset@p1+1,c
  4666  002D0A  0E00               	movlw	0
  4667  002D0C  6E1D               	movwf	memset@c+1,c
  4668  002D0E  0E00               	movlw	0
  4669  002D10  6E1C               	movwf	memset@c,c
  4670  002D12  0E00               	movlw	0
  4671  002D14  6E1F               	movwf	memset@n+1,c
  4672  002D16  0E80               	movlw	128
  4673  002D18  6E1E               	movwf	memset@n,c
  4674  002D1A  EC91  F01C         	call	_memset	;wreg free
  4675                           
  4676                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4677  002D1E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4678  002D20  6E1A               	movwf	strcpy@to,c
  4679  002D22  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4680  002D24  6E1B               	movwf	strcpy@to+1,c
  4681  002D26  0E9E               	movlw	low STR_1
  4682  002D28  6E1C               	movwf	strcpy@from,c
  4683  002D2A  0E7F               	movlw	high STR_1
  4684  002D2C  6E1D               	movwf	strcpy@from+1,c
  4685  002D2E  EC63  F01C         	call	_strcpy	;wreg free
  4686                           
  4687                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4688  002D32  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4689  002D34  6E1A               	movwf	memset@p1,c
  4690  002D36  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4691  002D38  6E1B               	movwf	memset@p1+1,c
  4692  002D3A  0E00               	movlw	0
  4693  002D3C  6E1D               	movwf	memset@c+1,c
  4694  002D3E  0E00               	movlw	0
  4695  002D40  6E1C               	movwf	memset@c,c
  4696  002D42  0E00               	movlw	0
  4697  002D44  6E1F               	movwf	memset@n+1,c
  4698  002D46  0E40               	movlw	64
  4699  002D48  6E1E               	movwf	memset@n,c
  4700  002D4A  EC91  F01C         	call	_memset	;wreg free
  4701                           
  4702                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4703                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4704  002D4E  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4705  002D50  0100               	movlb	0	; () banked
  4706  002D52  6FA0               	movwf	sprintf@sp& (0+255),b
  4707  002D54  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4708  002D56  0100               	movlb	0	; () banked
  4709  002D58  6FA1               	movwf	(sprintf@sp+1)& (0+255),b
  4710  002D5A  0E6B               	movlw	low STR_2
  4711  002D5C  0100               	movlb	0	; () banked
  4712  002D5E  6FA2               	movwf	sprintf@f& (0+255),b
  4713  002D60  0E7F               	movlw	high STR_2
  4714  002D62  0100               	movlb	0	; () banked
  4715  002D64  6FA3               	movwf	(sprintf@f+1)& (0+255),b
  4716  002D66  C0D4  F0A4         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4717  002D6A  C0D5  F0A5         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4718  002D6E  C0D6  F0A6         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4719  002D72  C0CD  F0A7         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4720  002D76  C0CE  F0A8         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4721  002D7A  C0CF  F0A9         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4722  002D7E  C0D0  F0AA         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4723  002D82  C0D1  F0AB         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4724  002D86  C0D2  F0AC         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4725  002D8A  C0D3  F0AD         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4726  002D8E  EC55  F000         	call	_sprintf	;wreg free
  4727                           
  4728                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4729  002D92  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4730  002D94  6E1A               	movwf	strcat@to,c
  4731  002D96  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4732  002D98  6E1B               	movwf	strcat@to+1,c
  4733  002D9A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4734  002D9C  6E1C               	movwf	strcat@from,c
  4735  002D9E  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4736  002DA0  6E1D               	movwf	strcat@from+1,c
  4737  002DA2  EC86  F01B         	call	_strcat	;wreg free
  4738                           
  4739                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4740  002DA6  0E00               	movlw	0
  4741  002DA8  0101               	movlb	1	; () banked
  4742  002DAA  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4743  002DAC  0E00               	movlw	0
  4744  002DAE  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4745  002DB0  D00E               	goto	l5631
  4746  002DB2                     l5627:
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4750  002DB2  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4751  002DB4  0101               	movlb	1	; () banked
  4752  002DB6  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4753  002DB8  6ED9               	movwf	fsr2l,c
  4754  002DBA  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4755  002DBC  0101               	movlb	1	; () banked
  4756  002DBE  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4757  002DC0  6EDA               	movwf	fsr2h,c
  4758  002DC2  50DF               	movf	indf2,w,c
  4759  002DC4  EC18  F00C         	call	_util_transmit_letter
  4760  002DC8  0101               	movlb	1	; () banked
  4761  002DCA  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4762  002DCC  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4763  002DCE                     l5631:
  4764                           
  4765                           ; BSR set to: 1
  4766  002DCE  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4767  002DD0  6E1A               	movwf	strlen@s,c
  4768  002DD2  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4769  002DD4  6E1B               	movwf	strlen@s+1,c
  4770  002DD6  ECC8  F01A         	call	_strlen	;wreg free
  4771  002DDA  501A               	movf	?_strlen,w,c
  4772  002DDC  0101               	movlb	1	; () banked
  4773  002DDE  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4774  002DE0  501B               	movf	?_strlen+1,w,c
  4775  002DE2  0101               	movlb	1	; () banked
  4776  002DE4  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4777  002DE6  B0D8               	btfsc	status,0,c
  4778  002DE8  0012               	return	
  4779  002DEA  D7E3               	goto	l5627
  4780  002DEC                     __end_of_util_beacon_transmission:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           intcon	equ	0xFF2
  4787                           postinc0	equ	0xFEE
  4788                           wreg	equ	0xFE8
  4789                           postdec1	equ	0xFE5
  4790                           fsr1h	equ	0xFE2
  4791                           fsr1l	equ	0xFE1
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           postdec2	equ	0xFDD
  4795                           fsr2h	equ	0xFDA
  4796                           fsr2l	equ	0xFD9
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function _util_transmit_letter *****************
  4800 ;; Defined at:
  4801 ;;		line 53 in file "easat2_util_transmission.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  letter          1    wreg     unsigned char 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  letter          1   37[COMRAM] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4815 ;;      Params:         0       0       0       0       0       0       0
  4816 ;;      Locals:         1       0       0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0
  4818 ;;      Totals:         1       0       0       0       0       0       0
  4819 ;;Total ram usage:        1 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    5
  4822 ;; This function calls:
  4823 ;;		_util_transmit_morse_sequence
  4824 ;;		_util_transmit_space_between_letters
  4825 ;;		_util_transmit_space_between_words
  4826 ;; This function is called by:
  4827 ;;		_util_beacon_transmission
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text18
  4832  001830                     __ptext18:
  4833                           	opt stack 0
  4834  001830                     _util_transmit_letter:
  4835                           	opt stack 23
  4836                           
  4837                           ; BSR set to: 1
  4838                           ;incstack = 0
  4839                           ;util_transmit_letter@letter stored from wreg
  4840  001830  6E26               	movwf	util_transmit_letter@letter,c
  4841                           
  4842                           ;easat2_util_transmission.c: 55: switch (letter) {
  4843  001832  D122               	goto	l5419
  4844  001834                     l5333:
  4845                           
  4846                           ;easat2_util_transmission.c: 61: util_transmit_morse_sequence((char*)".-");
  4847  001834  0EE8               	movlw	low (STR_19+2)
  4848  001836  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4849  001838  0E7F               	movlw	high (STR_19+2)
  4850  00183A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4851  00183C  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4852                           
  4853                           ;easat2_util_transmission.c: 62: break;
  4854  001840  D19A               	goto	l5421
  4855  001842                     l5335:
  4856                           
  4857                           ;easat2_util_transmission.c: 64: util_transmit_morse_sequence((char*)"-...");
  4858  001842  0ED0               	movlw	low (STR_36+1)
  4859  001844  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4860  001846  0E7F               	movlw	high (STR_36+1)
  4861  001848  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4862  00184A  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4863                           
  4864                           ;easat2_util_transmission.c: 65: break;
  4865  00184E  D193               	goto	l5421
  4866  001850                     l5337:
  4867                           
  4868                           ;easat2_util_transmission.c: 67: util_transmit_morse_sequence((char*)"-.-.");
  4869  001850  0EF5               	movlw	low STR_5
  4870  001852  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4871  001854  0E7F               	movlw	high STR_5
  4872  001856  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4873  001858  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4874                           
  4875                           ;easat2_util_transmission.c: 68: break;
  4876  00185C  D18C               	goto	l5421
  4877  00185E                     l5339:
  4878                           
  4879                           ;easat2_util_transmission.c: 70: util_transmit_morse_sequence((char*)"-..");
  4880  00185E  0ECB               	movlw	low (STR_37+2)
  4881  001860  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4882  001862  0E7F               	movlw	high (STR_37+2)
  4883  001864  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4884  001866  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4885                           
  4886                           ;easat2_util_transmission.c: 71: break;
  4887  00186A  D185               	goto	l5421
  4888  00186C                     l5341:
  4889                           
  4890                           ;easat2_util_transmission.c: 73: util_transmit_morse_sequence((char*)".");
  4891  00186C  0EC1               	movlw	low (STR_38+4)
  4892  00186E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4893  001870  0E7F               	movlw	high (STR_38+4)
  4894  001872  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4895  001874  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4896                           
  4897                           ;easat2_util_transmission.c: 74: break;
  4898  001878  D17E               	goto	l5421
  4899  00187A                     l5343:
  4900                           
  4901                           ;easat2_util_transmission.c: 76: util_transmit_morse_sequence((char*)"..-.");
  4902  00187A  0EC4               	movlw	low (STR_41+1)
  4903  00187C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4904  00187E  0E7F               	movlw	high (STR_41+1)
  4905  001880  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4906  001882  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4907                           
  4908                           ;easat2_util_transmission.c: 77: break;
  4909  001886  D177               	goto	l5421
  4910  001888                     l5345:
  4911                           
  4912                           ;easat2_util_transmission.c: 79: util_transmit_morse_sequence((char*)"--.");
  4913  001888  0EBF               	movlw	low (STR_38+2)
  4914  00188A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4915  00188C  0E7F               	movlw	high (STR_38+2)
  4916  00188E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4917  001890  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4918                           
  4919                           ;easat2_util_transmission.c: 80: break;
  4920  001894  D170               	goto	l5421
  4921  001896                     l5347:
  4922                           
  4923                           ;easat2_util_transmission.c: 82: util_transmit_morse_sequence((char*)"....");
  4924  001896  0ED6               	movlw	low (STR_35+1)
  4925  001898  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4926  00189A  0E7F               	movlw	high (STR_35+1)
  4927  00189C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4928  00189E  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4929                           
  4930                           ;easat2_util_transmission.c: 83: break;
  4931  0018A2  D169               	goto	l5421
  4932  0018A4                     l5349:
  4933                           
  4934                           ;easat2_util_transmission.c: 85: util_transmit_morse_sequence((char*)"..");
  4935  0018A4  0ECC               	movlw	low (STR_37+3)
  4936  0018A6  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4937  0018A8  0E7F               	movlw	high (STR_37+3)
  4938  0018AA  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4939  0018AC  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4940                           
  4941                           ;easat2_util_transmission.c: 86: break;
  4942  0018B0  D162               	goto	l5421
  4943  0018B2                     l5351:
  4944                           
  4945                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".---");
  4946  0018B2  0EB2               	movlw	low (STR_31+1)
  4947  0018B4  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4948  0018B6  0E7F               	movlw	high (STR_31+1)
  4949  0018B8  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4950  0018BA  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4951                           
  4952                           ;easat2_util_transmission.c: 89: break;
  4953  0018BE  D15B               	goto	l5421
  4954  0018C0                     l5353:
  4955                           
  4956                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-.-");
  4957  0018C0  0EE7               	movlw	low (STR_19+1)
  4958  0018C2  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4959  0018C4  0E7F               	movlw	high (STR_19+1)
  4960  0018C6  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4961  0018C8  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4962                           
  4963                           ;easat2_util_transmission.c: 92: break;
  4964  0018CC  D154               	goto	l5421
  4965  0018CE                     l5355:
  4966                           
  4967                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)".-..");
  4968  0018CE  0EFA               	movlw	low STR_14
  4969  0018D0  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4970  0018D2  0E7F               	movlw	high STR_14
  4971  0018D4  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4972  0018D6  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4973                           
  4974                           ;easat2_util_transmission.c: 95: break;
  4975  0018DA  D14D               	goto	l5421
  4976  0018DC                     l5357:
  4977                           
  4978                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"--");
  4979  0018DC  0EA8               	movlw	low (STR_29+3)
  4980  0018DE  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4981  0018E0  0E7F               	movlw	high (STR_29+3)
  4982  0018E2  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4983  0018E4  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4984                           
  4985                           ;easat2_util_transmission.c: 98: break;
  4986  0018E8  D146               	goto	l5421
  4987  0018EA                     l5359:
  4988                           
  4989                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)"-.");
  4990  0018EA  0EC0               	movlw	low (STR_38+3)
  4991  0018EC  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  4992  0018EE  0E7F               	movlw	high (STR_38+3)
  4993  0018F0  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  4994  0018F2  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  4995                           
  4996                           ;easat2_util_transmission.c: 101: break;
  4997  0018F6  D13F               	goto	l5421
  4998  0018F8                     l5361:
  4999                           
  5000                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"---");
  5001  0018F8  0EA7               	movlw	low (STR_29+2)
  5002  0018FA  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5003  0018FC  0E7F               	movlw	high (STR_29+2)
  5004  0018FE  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5005  001900  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5006                           
  5007                           ;easat2_util_transmission.c: 104: break;
  5008  001904  D138               	goto	l5421
  5009  001906                     l5363:
  5010                           
  5011                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)".--.");
  5012  001906  0EF0               	movlw	low STR_18
  5013  001908  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5014  00190A  0E7F               	movlw	high STR_18
  5015  00190C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5016  00190E  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5017                           
  5018                           ;easat2_util_transmission.c: 107: break;
  5019  001912  D131               	goto	l5421
  5020  001914                     l5365:
  5021                           
  5022                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"--.-");
  5023  001914  0EE6               	movlw	low STR_19
  5024  001916  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5025  001918  0E7F               	movlw	high STR_19
  5026  00191A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5027  00191C  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5028                           
  5029                           ;easat2_util_transmission.c: 110: break;
  5030  001920  D12A               	goto	l5421
  5031  001922                     l5367:
  5032                           
  5033                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)".-.");
  5034  001922  0EF6               	movlw	low (STR_5+1)
  5035  001924  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5036  001926  0E7F               	movlw	high (STR_5+1)
  5037  001928  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5038  00192A  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5039                           
  5040                           ;easat2_util_transmission.c: 113: break;
  5041  00192E  D123               	goto	l5421
  5042  001930                     l5369:
  5043                           
  5044                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)"...");
  5045  001930  0ED1               	movlw	low (STR_36+2)
  5046  001932  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5047  001934  0E7F               	movlw	high (STR_36+2)
  5048  001936  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5049  001938  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5050                           
  5051                           ;easat2_util_transmission.c: 116: break;
  5052  00193C  D11C               	goto	l5421
  5053  00193E                     l5371:
  5054                           
  5055                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-");
  5056  00193E  0EA9               	movlw	low (STR_29+4)
  5057  001940  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5058  001942  0E7F               	movlw	high (STR_29+4)
  5059  001944  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5060  001946  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5061                           
  5062                           ;easat2_util_transmission.c: 119: break;
  5063  00194A  D115               	goto	l5421
  5064  00194C                     l5373:
  5065                           
  5066                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)"..-");
  5067  00194C  0EEC               	movlw	low (STR_26+1)
  5068  00194E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5069  001950  0E7F               	movlw	high (STR_26+1)
  5070  001952  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5071  001954  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5072                           
  5073                           ;easat2_util_transmission.c: 122: break;
  5074  001958  D10E               	goto	l5421
  5075  00195A                     l5375:
  5076                           
  5077                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"...-");
  5078  00195A  0E92               	movlw	low (STR_43+2)
  5079  00195C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5080  00195E  0E7F               	movlw	high (STR_43+2)
  5081  001960  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5082  001962  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5083                           
  5084                           ;easat2_util_transmission.c: 125: break;
  5085  001966  D107               	goto	l5421
  5086  001968                     l5377:
  5087                           
  5088                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)".--");
  5089  001968  0EE2               	movlw	low (STR_27+1)
  5090  00196A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5091  00196C  0E7F               	movlw	high (STR_27+1)
  5092  00196E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5093  001970  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5094                           
  5095                           ;easat2_util_transmission.c: 128: break;
  5096  001974  D100               	goto	l5421
  5097  001976                     l5379:
  5098                           
  5099                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"-..-");
  5100  001976  0EEB               	movlw	low STR_26
  5101  001978  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5102  00197A  0E7F               	movlw	high STR_26
  5103  00197C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5104  00197E  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5105                           
  5106                           ;easat2_util_transmission.c: 131: break;
  5107  001982  D0F9               	goto	l5421
  5108  001984                     l5381:
  5109                           
  5110                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)"-.--");
  5111  001984  0EE1               	movlw	low STR_27
  5112  001986  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5113  001988  0E7F               	movlw	high STR_27
  5114  00198A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5115  00198C  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5116                           
  5117                           ;easat2_util_transmission.c: 134: break;
  5118  001990  D0F2               	goto	l5421
  5119  001992                     l5383:
  5120                           
  5121                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--..");
  5122  001992  0ECA               	movlw	low (STR_37+1)
  5123  001994  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5124  001996  0E7F               	movlw	high (STR_37+1)
  5125  001998  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5126  00199A  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5127                           
  5128                           ;easat2_util_transmission.c: 137: break;
  5129  00199E  D0EB               	goto	l5421
  5130  0019A0                     l5385:
  5131                           
  5132                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)"-----");
  5133  0019A0  0EA5               	movlw	low STR_29
  5134  0019A2  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5135  0019A4  0E7F               	movlw	high STR_29
  5136  0019A6  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5137  0019A8  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5138                           
  5139                           ;easat2_util_transmission.c: 140: break;
  5140  0019AC  D0E4               	goto	l5421
  5141  0019AE                     l5387:
  5142                           
  5143                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)".----");
  5144  0019AE  0EAB               	movlw	low STR_30
  5145  0019B0  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5146  0019B2  0E7F               	movlw	high STR_30
  5147  0019B4  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5148  0019B6  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5149                           
  5150                           ;easat2_util_transmission.c: 143: break;
  5151  0019BA  D0DD               	goto	l5421
  5152  0019BC                     l5389:
  5153                           
  5154                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"..---");
  5155  0019BC  0EB1               	movlw	low STR_31
  5156  0019BE  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5157  0019C0  0E7F               	movlw	high STR_31
  5158  0019C2  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5159  0019C4  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5160                           
  5161                           ;easat2_util_transmission.c: 146: break;
  5162  0019C8  D0D6               	goto	l5421
  5163  0019CA                     l5391:
  5164                           
  5165                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"...--");
  5166  0019CA  0EB7               	movlw	low STR_32
  5167  0019CC  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5168  0019CE  0E7F               	movlw	high STR_32
  5169  0019D0  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5170  0019D2  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5171                           
  5172                           ;easat2_util_transmission.c: 149: break;
  5173  0019D6  D0CF               	goto	l5421
  5174  0019D8                     l5393:
  5175                           
  5176                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"....-");
  5177  0019D8  0E91               	movlw	low (STR_43+1)
  5178  0019DA  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5179  0019DC  0E7F               	movlw	high (STR_43+1)
  5180  0019DE  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5181  0019E0  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5182                           
  5183                           ;easat2_util_transmission.c: 152: break;
  5184  0019E4  D0C8               	goto	l5421
  5185  0019E6                     l5395:
  5186                           
  5187                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".....");
  5188  0019E6  0EDB               	movlw	low STR_34
  5189  0019E8  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5190  0019EA  0E7F               	movlw	high STR_34
  5191  0019EC  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5192  0019EE  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5193                           
  5194                           ;easat2_util_transmission.c: 155: break;
  5195  0019F2  D0C1               	goto	l5421
  5196  0019F4                     l5397:
  5197                           
  5198                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-....");
  5199  0019F4  0ED5               	movlw	low STR_35
  5200  0019F6  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5201  0019F8  0E7F               	movlw	high STR_35
  5202  0019FA  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5203  0019FC  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5204                           
  5205                           ;easat2_util_transmission.c: 158: break;
  5206  001A00  D0BA               	goto	l5421
  5207  001A02                     l5399:
  5208                           
  5209                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"--...");
  5210  001A02  0ECF               	movlw	low STR_36
  5211  001A04  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5212  001A06  0E7F               	movlw	high STR_36
  5213  001A08  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5214  001A0A  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5215                           
  5216                           ;easat2_util_transmission.c: 161: break;
  5217  001A0E  D0B3               	goto	l5421
  5218  001A10                     l5401:
  5219                           
  5220                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"---..");
  5221  001A10  0EC9               	movlw	low STR_37
  5222  001A12  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5223  001A14  0E7F               	movlw	high STR_37
  5224  001A16  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5225  001A18  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5226                           
  5227                           ;easat2_util_transmission.c: 164: break;
  5228  001A1C  D0AC               	goto	l5421
  5229  001A1E                     l5403:
  5230                           
  5231                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"----.");
  5232  001A1E  0EBD               	movlw	low STR_38
  5233  001A20  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5234  001A22  0E7F               	movlw	high STR_38
  5235  001A24  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5236  001A26  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5237                           
  5238                           ;easat2_util_transmission.c: 167: break;
  5239  001A2A  D0A5               	goto	l5421
  5240  001A2C                     l5405:
  5241                           
  5242                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)"--..--");
  5243  001A2C  0E82               	movlw	low STR_39
  5244  001A2E  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5245  001A30  0E7F               	movlw	high STR_39
  5246  001A32  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5247  001A34  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5248                           
  5249                           ;easat2_util_transmission.c: 170: break;
  5250  001A38  D09E               	goto	l5421
  5251  001A3A                     l5407:
  5252                           
  5253                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..--..");
  5254  001A3A  0E97               	movlw	low STR_40
  5255  001A3C  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5256  001A3E  0E7F               	movlw	high STR_40
  5257  001A40  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5258  001A42  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5259                           
  5260                           ;easat2_util_transmission.c: 173: break;
  5261  001A46  D097               	goto	l5421
  5262  001A48                     l5409:
  5263                           
  5264                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"-..-.");
  5265  001A48  0EC3               	movlw	low STR_41
  5266  001A4A  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5267  001A4C  0E7F               	movlw	high STR_41
  5268  001A4E  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5269  001A50  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5270                           
  5271                           ;easat2_util_transmission.c: 176: break;
  5272  001A54  D090               	goto	l5421
  5273  001A56                     l5411:
  5274                           
  5275                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)".-.-.-");
  5276  001A56  0E89               	movlw	low STR_42
  5277  001A58  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5278  001A5A  0E7F               	movlw	high STR_42
  5279  001A5C  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5280  001A5E  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5281                           
  5282                           ;easat2_util_transmission.c: 179: break;
  5283  001A62  D089               	goto	l5421
  5284  001A64                     l5413:
  5285                           
  5286                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)"-....-");
  5287  001A64  0E90               	movlw	low STR_43
  5288  001A66  6E20               	movwf	util_transmit_morse_sequence@morse_sequence,c
  5289  001A68  0E7F               	movlw	high STR_43
  5290  001A6A  6E21               	movwf	util_transmit_morse_sequence@morse_sequence+1,c
  5291  001A6C  EC9A  F01A         	call	_util_transmit_morse_sequence	;wreg free
  5292                           
  5293                           ;easat2_util_transmission.c: 182: break;
  5294  001A70  D082               	goto	l5421
  5295  001A72                     l5415:
  5296                           
  5297                           ;easat2_util_transmission.c: 184: util_transmit_space_between_words();
  5298  001A72  EC2E  F01D         	call	_util_transmit_space_between_words	;wreg free
  5299                           
  5300                           ;easat2_util_transmission.c: 189: }
  5301                           
  5302                           ;easat2_util_transmission.c: 187: break;
  5303                           
  5304                           ;easat2_util_transmission.c: 186: default:
  5305                           
  5306                           ;easat2_util_transmission.c: 185: break;
  5307  001A76  D07F               	goto	l5421
  5308  001A78                     l5419:
  5309  001A78  5026               	movf	util_transmit_letter@letter,w,c
  5310                           
  5311                           ; Switch size 1, requested type "space"
  5312                           ; Number of cases is 42, Range of values is 32 to 90
  5313                           ; switch strategies available:
  5314                           ; Name         Instructions Cycles
  5315                           ; simple_byte          127    64 (average)
  5316                           ;	Chosen strategy is simple_byte
  5317  001A7A  0A20               	xorlw	32	; case 32
  5318  001A7C  B4D8               	btfsc	status,2,c
  5319  001A7E  D7F9               	goto	l5415
  5320  001A80  0A0C               	xorlw	12	; case 44
  5321  001A82  B4D8               	btfsc	status,2,c
  5322  001A84  D7D3               	goto	l5405
  5323  001A86  0A01               	xorlw	1	; case 45
  5324  001A88  B4D8               	btfsc	status,2,c
  5325  001A8A  D7EC               	goto	l5413
  5326  001A8C  0A03               	xorlw	3	; case 46
  5327  001A8E  B4D8               	btfsc	status,2,c
  5328  001A90  D7E2               	goto	l5411
  5329  001A92  0A01               	xorlw	1	; case 47
  5330  001A94  B4D8               	btfsc	status,2,c
  5331  001A96  D7D8               	goto	l5409
  5332  001A98  0A1F               	xorlw	31	; case 48
  5333  001A9A  B4D8               	btfsc	status,2,c
  5334  001A9C  D781               	goto	l5385
  5335  001A9E  0A01               	xorlw	1	; case 49
  5336  001AA0  B4D8               	btfsc	status,2,c
  5337  001AA2  D785               	goto	l5387
  5338  001AA4  0A03               	xorlw	3	; case 50
  5339  001AA6  B4D8               	btfsc	status,2,c
  5340  001AA8  D789               	goto	l5389
  5341  001AAA  0A01               	xorlw	1	; case 51
  5342  001AAC  B4D8               	btfsc	status,2,c
  5343  001AAE  D78D               	goto	l5391
  5344  001AB0  0A07               	xorlw	7	; case 52
  5345  001AB2  B4D8               	btfsc	status,2,c
  5346  001AB4  D791               	goto	l5393
  5347  001AB6  0A01               	xorlw	1	; case 53
  5348  001AB8  B4D8               	btfsc	status,2,c
  5349  001ABA  D795               	goto	l5395
  5350  001ABC  0A03               	xorlw	3	; case 54
  5351  001ABE  B4D8               	btfsc	status,2,c
  5352  001AC0  D799               	goto	l5397
  5353  001AC2  0A01               	xorlw	1	; case 55
  5354  001AC4  B4D8               	btfsc	status,2,c
  5355  001AC6  D79D               	goto	l5399
  5356  001AC8  0A0F               	xorlw	15	; case 56
  5357  001ACA  B4D8               	btfsc	status,2,c
  5358  001ACC  D7A1               	goto	l5401
  5359  001ACE  0A01               	xorlw	1	; case 57
  5360  001AD0  B4D8               	btfsc	status,2,c
  5361  001AD2  D7A5               	goto	l5403
  5362  001AD4  0A06               	xorlw	6	; case 63
  5363  001AD6  B4D8               	btfsc	status,2,c
  5364  001AD8  D7B0               	goto	l5407
  5365  001ADA  0A7E               	xorlw	126	; case 65
  5366  001ADC  B4D8               	btfsc	status,2,c
  5367  001ADE  D6AA               	goto	l5333
  5368  001AE0  0A03               	xorlw	3	; case 66
  5369  001AE2  B4D8               	btfsc	status,2,c
  5370  001AE4  D6AE               	goto	l5335
  5371  001AE6  0A01               	xorlw	1	; case 67
  5372  001AE8  B4D8               	btfsc	status,2,c
  5373  001AEA  D6B2               	goto	l5337
  5374  001AEC  0A07               	xorlw	7	; case 68
  5375  001AEE  B4D8               	btfsc	status,2,c
  5376  001AF0  D6B6               	goto	l5339
  5377  001AF2  0A01               	xorlw	1	; case 69
  5378  001AF4  B4D8               	btfsc	status,2,c
  5379  001AF6  D6BA               	goto	l5341
  5380  001AF8  0A03               	xorlw	3	; case 70
  5381  001AFA  B4D8               	btfsc	status,2,c
  5382  001AFC  D6BE               	goto	l5343
  5383  001AFE  0A01               	xorlw	1	; case 71
  5384  001B00  B4D8               	btfsc	status,2,c
  5385  001B02  D6C2               	goto	l5345
  5386  001B04  0A0F               	xorlw	15	; case 72
  5387  001B06  B4D8               	btfsc	status,2,c
  5388  001B08  D6C6               	goto	l5347
  5389  001B0A  0A01               	xorlw	1	; case 73
  5390  001B0C  B4D8               	btfsc	status,2,c
  5391  001B0E  D6CA               	goto	l5349
  5392  001B10  0A03               	xorlw	3	; case 74
  5393  001B12  B4D8               	btfsc	status,2,c
  5394  001B14  D6CE               	goto	l5351
  5395  001B16  0A01               	xorlw	1	; case 75
  5396  001B18  B4D8               	btfsc	status,2,c
  5397  001B1A  D6D2               	goto	l5353
  5398  001B1C  0A07               	xorlw	7	; case 76
  5399  001B1E  B4D8               	btfsc	status,2,c
  5400  001B20  D6D6               	goto	l5355
  5401  001B22  0A01               	xorlw	1	; case 77
  5402  001B24  B4D8               	btfsc	status,2,c
  5403  001B26  D6DA               	goto	l5357
  5404  001B28  0A03               	xorlw	3	; case 78
  5405  001B2A  B4D8               	btfsc	status,2,c
  5406  001B2C  D6DE               	goto	l5359
  5407  001B2E  0A01               	xorlw	1	; case 79
  5408  001B30  B4D8               	btfsc	status,2,c
  5409  001B32  D6E2               	goto	l5361
  5410  001B34  0A1F               	xorlw	31	; case 80
  5411  001B36  B4D8               	btfsc	status,2,c
  5412  001B38  D6E6               	goto	l5363
  5413  001B3A  0A01               	xorlw	1	; case 81
  5414  001B3C  B4D8               	btfsc	status,2,c
  5415  001B3E  D6EA               	goto	l5365
  5416  001B40  0A03               	xorlw	3	; case 82
  5417  001B42  B4D8               	btfsc	status,2,c
  5418  001B44  D6EE               	goto	l5367
  5419  001B46  0A01               	xorlw	1	; case 83
  5420  001B48  B4D8               	btfsc	status,2,c
  5421  001B4A  D6F2               	goto	l5369
  5422  001B4C  0A07               	xorlw	7	; case 84
  5423  001B4E  B4D8               	btfsc	status,2,c
  5424  001B50  D6F6               	goto	l5371
  5425  001B52  0A01               	xorlw	1	; case 85
  5426  001B54  B4D8               	btfsc	status,2,c
  5427  001B56  D6FA               	goto	l5373
  5428  001B58  0A03               	xorlw	3	; case 86
  5429  001B5A  B4D8               	btfsc	status,2,c
  5430  001B5C  D6FE               	goto	l5375
  5431  001B5E  0A01               	xorlw	1	; case 87
  5432  001B60  B4D8               	btfsc	status,2,c
  5433  001B62  D702               	goto	l5377
  5434  001B64  0A0F               	xorlw	15	; case 88
  5435  001B66  B4D8               	btfsc	status,2,c
  5436  001B68  D706               	goto	l5379
  5437  001B6A  0A01               	xorlw	1	; case 89
  5438  001B6C  B4D8               	btfsc	status,2,c
  5439  001B6E  D70A               	goto	l5381
  5440  001B70  0A03               	xorlw	3	; case 90
  5441  001B72  B4D8               	btfsc	status,2,c
  5442  001B74  D70E               	goto	l5383
  5443  001B76                     l5421:
  5444                           
  5445                           ;easat2_util_transmission.c: 192: util_transmit_space_between_letters();
  5446  001B76  EC35  F01D         	call	_util_transmit_space_between_letters	;wreg free
  5447  001B7A  0012               	return		;funcret
  5448  001B7C                     __end_of_util_transmit_letter:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           intcon	equ	0xFF2
  5455                           postinc0	equ	0xFEE
  5456                           wreg	equ	0xFE8
  5457                           postdec1	equ	0xFE5
  5458                           fsr1h	equ	0xFE2
  5459                           fsr1l	equ	0xFE1
  5460                           indf2	equ	0xFDF
  5461                           postinc2	equ	0xFDE
  5462                           postdec2	equ	0xFDD
  5463                           fsr2h	equ	0xFDA
  5464                           fsr2l	equ	0xFD9
  5465                           status	equ	0xFD8
  5466                           
  5467 ;; *************** function _util_transmit_space_between_words *****************
  5468 ;; Defined at:
  5469 ;;		line 287 in file "easat2_util_transmission.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5483 ;;      Params:         0       0       0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0
  5486 ;;      Totals:         0       0       0       0       0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    3
  5490 ;; This function calls:
  5491 ;;		_util_waits_delay_ms
  5492 ;; This function is called by:
  5493 ;;		_util_transmit_letter
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text19
  5498  003A5C                     __ptext19:
  5499                           	opt stack 0
  5500  003A5C                     _util_transmit_space_between_words:
  5501                           	opt stack 24
  5502                           
  5503                           ;easat2_util_transmission.c: 288: util_waits_delay_ms(7*(int)(2400/32));
  5504                           
  5505                           ;incstack = 0
  5506  003A5C  0E02               	movlw	2
  5507  003A5E  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5508  003A60  0E0D               	movlw	13
  5509  003A62  6E1A               	movwf	util_waits_delay_ms@ms,c
  5510  003A64  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  5511  003A68  0012               	return		;funcret
  5512  003A6A                     __end_of_util_transmit_space_between_words:
  5513                           	opt stack 0
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           postdec1	equ	0xFE5
  5522                           fsr1h	equ	0xFE2
  5523                           fsr1l	equ	0xFE1
  5524                           indf2	equ	0xFDF
  5525                           postinc2	equ	0xFDE
  5526                           postdec2	equ	0xFDD
  5527                           fsr2h	equ	0xFDA
  5528                           fsr2l	equ	0xFD9
  5529                           status	equ	0xFD8
  5530                           
  5531 ;; *************** function _util_transmit_space_between_letters *****************
  5532 ;; Defined at:
  5533 ;;		line 280 in file "easat2_util_transmission.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5547 ;;      Params:         0       0       0       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0
  5550 ;;      Totals:         0       0       0       0       0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    3
  5554 ;; This function calls:
  5555 ;;		_util_waits_delay_ms
  5556 ;; This function is called by:
  5557 ;;		_util_transmit_letter
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text20
  5562  003A6A                     __ptext20:
  5563                           	opt stack 0
  5564  003A6A                     _util_transmit_space_between_letters:
  5565                           	opt stack 24
  5566                           
  5567                           ;easat2_util_transmission.c: 281: util_waits_delay_ms(3*(int)(2400/32));
  5568                           
  5569                           ;incstack = 0
  5570  003A6A  0E00               	movlw	0
  5571  003A6C  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5572  003A6E  0EE1               	movlw	225
  5573  003A70  6E1A               	movwf	util_waits_delay_ms@ms,c
  5574  003A72  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  5575  003A76  0012               	return		;funcret
  5576  003A78                     __end_of_util_transmit_space_between_letters:
  5577                           	opt stack 0
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           intcon	equ	0xFF2
  5583                           postinc0	equ	0xFEE
  5584                           wreg	equ	0xFE8
  5585                           postdec1	equ	0xFE5
  5586                           fsr1h	equ	0xFE2
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _util_transmit_morse_sequence *****************
  5596 ;; Defined at:
  5597 ;;		line 202 in file "easat2_util_transmission.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  morse_sequen    2   31[COMRAM] PTR unsigned char 
  5600 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5601 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5602 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5603 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5604 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5605 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5606 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5607 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5608 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5609 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5610 ;;		 -> STR_3(3), 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  i               2   35[COMRAM] int 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5622 ;;      Params:         2       0       0       0       0       0       0
  5623 ;;      Locals:         2       0       0       0       0       0       0
  5624 ;;      Temps:          2       0       0       0       0       0       0
  5625 ;;      Totals:         6       0       0       0       0       0       0
  5626 ;;Total ram usage:        6 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    4
  5629 ;; This function calls:
  5630 ;;		_strlen
  5631 ;;		_util_transmit_dash
  5632 ;;		_util_transmit_dot
  5633 ;;		_util_transmit_space_between_dots_dashes
  5634 ;; This function is called by:
  5635 ;;		_util_transmit_letter
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text21
  5640  003534                     __ptext21:
  5641                           	opt stack 0
  5642  003534                     _util_transmit_morse_sequence:
  5643                           	opt stack 23
  5644                           
  5645                           ;easat2_util_transmission.c: 206: for (int i = 0; i < strlen(morse_sequence); i++) {
  5646                           
  5647                           ;incstack = 0
  5648  003534  0E00               	movlw	0
  5649  003536  6E25               	movwf	util_transmit_morse_sequence@i+1,c
  5650  003538  0E00               	movlw	0
  5651  00353A  6E24               	movwf	util_transmit_morse_sequence@i,c
  5652  00353C  D01C               	goto	l4815
  5653  00353E                     l4803:
  5654                           
  5655                           ;easat2_util_transmission.c: 211: util_transmit_dot();
  5656  00353E  ECFC  F01C         	call	_util_transmit_dot	;wreg free
  5657                           
  5658                           ;easat2_util_transmission.c: 212: break;
  5659  003542  D015               	goto	l4811
  5660  003544                     l4805:
  5661                           
  5662                           ;easat2_util_transmission.c: 214: util_transmit_dash();
  5663  003544  EC09  F01D         	call	_util_transmit_dash	;wreg free
  5664                           
  5665                           ;easat2_util_transmission.c: 218: }
  5666                           
  5667                           ;easat2_util_transmission.c: 217: break;
  5668                           
  5669                           ;easat2_util_transmission.c: 216: default:
  5670                           
  5671                           ;easat2_util_transmission.c: 215: break;
  5672  003548  D012               	goto	l4811
  5673  00354A                     l4809:
  5674  00354A  5024               	movf	util_transmit_morse_sequence@i,w,c
  5675  00354C  2420               	addwf	util_transmit_morse_sequence@morse_sequence,w,c
  5676  00354E  6E22               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5677  003550  5025               	movf	util_transmit_morse_sequence@i+1,w,c
  5678  003552  2021               	addwfc	util_transmit_morse_sequence@morse_sequence+1,w,c
  5679  003554  6E23               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5680  003556  C022  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5681  00355A  C023  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5682  00355E                     	if	0	;tblptru may be non-zero
  5683  00355E                     	endif
  5684  00355E                     	if	0	;tblptru may be non-zero
  5685  00355E                     	endif
  5686  00355E  0008               	tblrd		*
  5687  003560  50F5               	movf	tablat,w,c
  5688                           
  5689                           ; Switch size 1, requested type "space"
  5690                           ; Number of cases is 2, Range of values is 45 to 46
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte            7     4 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  003562  0A2D               	xorlw	45	; case 45
  5696  003564  B4D8               	btfsc	status,2,c
  5697  003566  D7EE               	goto	l4805
  5698  003568  0A03               	xorlw	3	; case 46
  5699  00356A  B4D8               	btfsc	status,2,c
  5700  00356C  D7E8               	goto	l4803
  5701  00356E                     l4811:
  5702                           
  5703                           ;easat2_util_transmission.c: 221: util_transmit_space_between_dots_dashes();
  5704  00356E  EC3C  F01D         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5705  003572  4A24               	infsnz	util_transmit_morse_sequence@i,f,c
  5706  003574  2A25               	incf	util_transmit_morse_sequence@i+1,f,c
  5707  003576                     l4815:
  5708  003576  C020  F01A         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5709  00357A  C021  F01B         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5710  00357E  ECC8  F01A         	call	_strlen	;wreg free
  5711  003582  501A               	movf	?_strlen,w,c
  5712  003584  5C24               	subwf	util_transmit_morse_sequence@i,w,c
  5713  003586  501B               	movf	?_strlen+1,w,c
  5714  003588  5825               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5715  00358A  B0D8               	btfsc	status,0,c
  5716  00358C  0012               	return	
  5717  00358E  D7DD               	goto	l4809
  5718  003590                     __end_of_util_transmit_morse_sequence:
  5719                           	opt stack 0
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           intcon	equ	0xFF2
  5725                           postinc0	equ	0xFEE
  5726                           wreg	equ	0xFE8
  5727                           postdec1	equ	0xFE5
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           fsr2h	equ	0xFDA
  5734                           fsr2l	equ	0xFD9
  5735                           status	equ	0xFD8
  5736                           
  5737 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5738 ;; Defined at:
  5739 ;;		line 272 in file "easat2_util_transmission.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      void 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5753 ;;      Params:         0       0       0       0       0       0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0
  5756 ;;      Totals:         0       0       0       0       0       0       0
  5757 ;;Total ram usage:        0 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    3
  5760 ;; This function calls:
  5761 ;;		_util_waits_delay_ms
  5762 ;; This function is called by:
  5763 ;;		_util_transmit_morse_sequence
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text22
  5768  003A78                     __ptext22:
  5769                           	opt stack 0
  5770  003A78                     _util_transmit_space_between_dots_dashes:
  5771                           	opt stack 23
  5772                           
  5773                           ;easat2_util_transmission.c: 273: util_waits_delay_ms((int)(2400/32));
  5774                           
  5775                           ;incstack = 0
  5776  003A78  0E00               	movlw	0
  5777  003A7A  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5778  003A7C  0E4B               	movlw	75
  5779  003A7E  6E1A               	movwf	util_waits_delay_ms@ms,c
  5780  003A80  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  5781  003A84  0012               	return		;funcret
  5782  003A86                     __end_of_util_transmit_space_between_dots_dashes:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           intcon	equ	0xFF2
  5789                           postinc0	equ	0xFEE
  5790                           wreg	equ	0xFE8
  5791                           postdec1	equ	0xFE5
  5792                           fsr1h	equ	0xFE2
  5793                           fsr1l	equ	0xFE1
  5794                           indf2	equ	0xFDF
  5795                           postinc2	equ	0xFDE
  5796                           postdec2	equ	0xFDD
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _util_transmit_dot *****************
  5802 ;; Defined at:
  5803 ;;		line 232 in file "easat2_util_transmission.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5817 ;;      Params:         0       0       0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    3
  5824 ;; This function calls:
  5825 ;;		_util_pwm_start
  5826 ;;		_util_pwm_stop
  5827 ;;		_util_waits_delay_ms
  5828 ;; This function is called by:
  5829 ;;		_util_transmit_morse_sequence
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text23
  5834  0039F8                     __ptext23:
  5835                           	opt stack 0
  5836  0039F8                     _util_transmit_dot:
  5837                           	opt stack 23
  5838                           
  5839                           ;easat2_util_transmission.c: 236: (PORTDbits.RD1) = 1;
  5840                           
  5841                           ;incstack = 0
  5842  0039F8  8283               	bsf	3971,1,c	;volatile
  5843                           
  5844                           ;easat2_util_transmission.c: 239: util_pwm_start();
  5845  0039FA  EC4D  F01D         	call	_util_pwm_start	;wreg free
  5846                           
  5847                           ;easat2_util_transmission.c: 240: util_waits_delay_ms((int)(2400/32));
  5848  0039FE  0E00               	movlw	0
  5849  003A00  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5850  003A02  0E4B               	movlw	75
  5851  003A04  6E1A               	movwf	util_waits_delay_ms@ms,c
  5852  003A06  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  5853                           
  5854                           ;easat2_util_transmission.c: 241: util_pwm_stop();
  5855  003A0A  EC49  F01D         	call	_util_pwm_stop	;wreg free
  5856                           
  5857                           ;easat2_util_transmission.c: 243: (PORTDbits.RD1) = 0;
  5858  003A0E  9283               	bcf	3971,1,c	;volatile
  5859  003A10  0012               	return		;funcret
  5860  003A12                     __end_of_util_transmit_dot:
  5861                           	opt stack 0
  5862                           tblptru	equ	0xFF8
  5863                           tblptrh	equ	0xFF7
  5864                           tblptrl	equ	0xFF6
  5865                           tablat	equ	0xFF5
  5866                           intcon	equ	0xFF2
  5867                           postinc0	equ	0xFEE
  5868                           wreg	equ	0xFE8
  5869                           postdec1	equ	0xFE5
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _util_transmit_dash *****************
  5880 ;; Defined at:
  5881 ;;		line 254 in file "easat2_util_transmission.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5895 ;;      Params:         0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    3
  5902 ;; This function calls:
  5903 ;;		_util_pwm_start
  5904 ;;		_util_pwm_stop
  5905 ;;		_util_waits_delay_ms
  5906 ;; This function is called by:
  5907 ;;		_util_transmit_morse_sequence
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text24
  5912  003A12                     __ptext24:
  5913                           	opt stack 0
  5914  003A12                     _util_transmit_dash:
  5915                           	opt stack 23
  5916                           
  5917                           ;easat2_util_transmission.c: 258: (PORTDbits.RD1) = 1;
  5918                           
  5919                           ;incstack = 0
  5920  003A12  8283               	bsf	3971,1,c	;volatile
  5921                           
  5922                           ;easat2_util_transmission.c: 261: util_pwm_start();
  5923  003A14  EC4D  F01D         	call	_util_pwm_start	;wreg free
  5924                           
  5925                           ;easat2_util_transmission.c: 262: util_waits_delay_ms(((int)(2400/32)*3));
  5926  003A18  0E00               	movlw	0
  5927  003A1A  6E1B               	movwf	util_waits_delay_ms@ms+1,c
  5928  003A1C  0EE1               	movlw	225
  5929  003A1E  6E1A               	movwf	util_waits_delay_ms@ms,c
  5930  003A20  EC7B  F01C         	call	_util_waits_delay_ms	;wreg free
  5931                           
  5932                           ;easat2_util_transmission.c: 263: util_pwm_stop();
  5933  003A24  EC49  F01D         	call	_util_pwm_stop	;wreg free
  5934                           
  5935                           ;easat2_util_transmission.c: 265: (PORTDbits.RD1) = 0;
  5936  003A28  9283               	bcf	3971,1,c	;volatile
  5937  003A2A  0012               	return		;funcret
  5938  003A2C                     __end_of_util_transmit_dash:
  5939                           	opt stack 0
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           intcon	equ	0xFF2
  5945                           postinc0	equ	0xFEE
  5946                           wreg	equ	0xFE8
  5947                           postdec1	equ	0xFE5
  5948                           fsr1h	equ	0xFE2
  5949                           fsr1l	equ	0xFE1
  5950                           indf2	equ	0xFDF
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _util_waits_delay_ms *****************
  5958 ;; Defined at:
  5959 ;;		line 40 in file "easat2_util_waits.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  ms              2   25[COMRAM] int 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  i               2   28[COMRAM] int 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5973 ;;      Params:         2       0       0       0       0       0       0
  5974 ;;      Locals:         2       0       0       0       0       0       0
  5975 ;;      Temps:          1       0       0       0       0       0       0
  5976 ;;      Totals:         5       0       0       0       0       0       0
  5977 ;;Total ram usage:        5 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_util_transmit_dot
  5984 ;;		_util_transmit_dash
  5985 ;;		_util_transmit_space_between_dots_dashes
  5986 ;;		_util_transmit_space_between_letters
  5987 ;;		_util_transmit_space_between_words
  5988 ;;		_util_waits_delay_secs
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text25
  5993  0038F6                     __ptext25:
  5994                           	opt stack 0
  5995  0038F6                     _util_waits_delay_ms:
  5996                           	opt stack 25
  5997                           
  5998                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  5999                           
  6000                           ;incstack = 0
  6001  0038F6  0E00               	movlw	0
  6002  0038F8  6E1E               	movwf	util_waits_delay_ms@i+1,c
  6003  0038FA  0E00               	movlw	0
  6004  0038FC  6E1D               	movwf	util_waits_delay_ms@i,c
  6005  0038FE  D006               	goto	l367
  6006  003900                     l4697:
  6007                           
  6008                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6009  003900  0EA6               	movlw	166
  6010  003902                     u5987:
  6011  003902  2EE8               	decfsz	wreg,f,c
  6012  003904  D7FE               	bra	u5987
  6013  003906  D000               	nop2	
  6014  003908  4A1D               	infsnz	util_waits_delay_ms@i,f,c
  6015  00390A  2A1E               	incf	util_waits_delay_ms@i+1,f,c
  6016  00390C                     l367:
  6017  00390C  501A               	movf	util_waits_delay_ms@ms,w,c
  6018  00390E  5C1D               	subwf	util_waits_delay_ms@i,w,c
  6019  003910  501E               	movf	util_waits_delay_ms@i+1,w,c
  6020  003912  0A80               	xorlw	128
  6021  003914  6E1C               	movwf	??_util_waits_delay_ms& (0+255),c
  6022  003916  501B               	movf	util_waits_delay_ms@ms+1,w,c
  6023  003918  0A80               	xorlw	128
  6024  00391A  581C               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6025  00391C  B0D8               	btfsc	status,0,c
  6026  00391E  0012               	return	
  6027  003920  D7EF               	goto	l4697
  6028  003922                     __end_of_util_waits_delay_ms:
  6029                           	opt stack 0
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           intcon	equ	0xFF2
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           postdec1	equ	0xFE5
  6038                           fsr1h	equ	0xFE2
  6039                           fsr1l	equ	0xFE1
  6040                           indf2	equ	0xFDF
  6041                           postinc2	equ	0xFDE
  6042                           postdec2	equ	0xFDD
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function _util_pwm_stop *****************
  6048 ;; Defined at:
  6049 ;;		line 95 in file "easat2_util_pwm.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		None
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6063 ;;      Params:         0       0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    2
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_util_transmit_dot
  6074 ;;		_util_transmit_dash
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text26
  6079  003A92                     __ptext26:
  6080                           	opt stack 0
  6081  003A92                     _util_pwm_stop:
  6082                           	opt stack 23
  6083                           
  6084                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6085                           
  6086                           ;incstack = 0
  6087  003A92  8495               	bsf	3989,2,c	;volatile
  6088                           
  6089                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6090  003A94  8695               	bsf	3989,3,c	;volatile
  6091                           
  6092                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6093  003A96  94BA               	bcf	4026,2,c	;volatile
  6094  003A98  0012               	return		;funcret
  6095  003A9A                     __end_of_util_pwm_stop:
  6096                           	opt stack 0
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           intcon	equ	0xFF2
  6102                           postinc0	equ	0xFEE
  6103                           wreg	equ	0xFE8
  6104                           postdec1	equ	0xFE5
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function _util_pwm_start *****************
  6115 ;; Defined at:
  6116 ;;		line 78 in file "easat2_util_pwm.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		None
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6130 ;;      Params:         0       0       0       0       0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    2
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_util_transmit_dot
  6141 ;;		_util_transmit_dash
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text27
  6146  003A9A                     __ptext27:
  6147                           	opt stack 0
  6148  003A9A                     _util_pwm_start:
  6149                           	opt stack 23
  6150                           
  6151                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6152                           
  6153                           ;incstack = 0
  6154  003A9A  9495               	bcf	3989,2,c	;volatile
  6155                           
  6156                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6157  003A9C  9695               	bcf	3989,3,c	;volatile
  6158                           
  6159                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6160  003A9E  84BA               	bsf	4026,2,c	;volatile
  6161  003AA0  0012               	return		;funcret
  6162  003AA2                     __end_of_util_pwm_start:
  6163                           	opt stack 0
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           intcon	equ	0xFF2
  6169                           postinc0	equ	0xFEE
  6170                           wreg	equ	0xFE8
  6171                           postdec1	equ	0xFE5
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           indf2	equ	0xFDF
  6175                           postinc2	equ	0xFDE
  6176                           postdec2	equ	0xFDD
  6177                           fsr2h	equ	0xFDA
  6178                           fsr2l	equ	0xFD9
  6179                           status	equ	0xFD8
  6180                           
  6181 ;; *************** function _strlen *****************
  6182 ;; Defined at:
  6183 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6186 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6187 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6188 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6189 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6190 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6191 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6192 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6193 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6194 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6195 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6196 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  cp              2   29[COMRAM] PTR const unsigned char 
  6199 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6200 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6201 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6202 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6203 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6204 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6205 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6206 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6207 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6208 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6209 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  2   25[COMRAM] unsigned int 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6219 ;;      Params:         2       0       0       0       0       0       0
  6220 ;;      Locals:         2       0       0       0       0       0       0
  6221 ;;      Temps:          2       0       0       0       0       0       0
  6222 ;;      Totals:         6       0       0       0       0       0       0
  6223 ;;Total ram usage:        6 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    2
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_util_beacon_transmission
  6230 ;;		_util_transmit_morse_sequence
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text28
  6235  003590                     __ptext28:
  6236                           	opt stack 0
  6237  003590                     _strlen:
  6238                           	opt stack 24
  6239                           
  6240                           ;incstack = 0
  6241  003590  C01A  F01E         	movff	strlen@s,strlen@cp
  6242  003594  C01B  F01F         	movff	strlen@s+1,strlen@cp+1
  6243  003598  D002               	goto	l4705
  6244  00359A                     l4703:
  6245  00359A  4A1E               	infsnz	strlen@cp,f,c
  6246  00359C  2A1F               	incf	strlen@cp+1,f,c
  6247  00359E                     l4705:
  6248  00359E  C01E  FFF6         	movff	strlen@cp,tblptrl
  6249  0035A2  C01F  FFF7         	movff	strlen@cp+1,tblptrh
  6250  0035A6  6AF8               	clrf	tblptru,c
  6251  0035A8  0E05               	movlw	(high __ramtop+-1)
  6252  0035AA  64F7               	cpfsgt	tblptrh,c
  6253  0035AC  D003               	bra	u4737
  6254  0035AE  0008               	tblrd		*
  6255  0035B0  50F5               	movf	tablat,w,c
  6256  0035B2  D005               	bra	u4730
  6257  0035B4                     u4737:
  6258  0035B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6259  0035B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6260  0035BC  50EF               	movf	indf0,w,c
  6261  0035BE                     u4730:
  6262  0035BE  0900               	iorlw	0
  6263  0035C0  A4D8               	btfss	status,2,c
  6264  0035C2  D7EB               	goto	l4703
  6265  0035C4  C01A  F01C         	movff	strlen@s,??_strlen
  6266  0035C8  C01B  F01D         	movff	strlen@s+1,??_strlen+1
  6267  0035CC  1E1C               	comf	??_strlen,f,c
  6268  0035CE  1E1D               	comf	??_strlen+1,f,c
  6269  0035D0  4A1C               	infsnz	??_strlen,f,c
  6270  0035D2  2A1D               	incf	??_strlen+1,f,c
  6271  0035D4  501E               	movf	strlen@cp,w,c
  6272  0035D6  241C               	addwf	??_strlen,w,c
  6273  0035D8  6E1A               	movwf	?_strlen,c
  6274  0035DA  501F               	movf	strlen@cp+1,w,c
  6275  0035DC  201D               	addwfc	??_strlen+1,w,c
  6276  0035DE  6E1B               	movwf	?_strlen+1,c
  6277  0035E0  0012               	return	
  6278  0035E2                     __end_of_strlen:
  6279                           	opt stack 0
  6280                           tblptru	equ	0xFF8
  6281                           tblptrh	equ	0xFF7
  6282                           tblptrl	equ	0xFF6
  6283                           tablat	equ	0xFF5
  6284                           intcon	equ	0xFF2
  6285                           indf0	equ	0xFEF
  6286                           postinc0	equ	0xFEE
  6287                           fsr0h	equ	0xFEA
  6288                           fsr0l	equ	0xFE9
  6289                           wreg	equ	0xFE8
  6290                           postdec1	equ	0xFE5
  6291                           fsr1h	equ	0xFE2
  6292                           fsr1l	equ	0xFE1
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           fsr2h	equ	0xFDA
  6297                           fsr2l	equ	0xFD9
  6298                           status	equ	0xFD8
  6299                           
  6300 ;; *************** function _strcpy *****************
  6301 ;; Defined at:
  6302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  to              2   25[COMRAM] PTR unsigned char 
  6305 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6306 ;;  from            2   27[COMRAM] PTR const unsigned char 
  6307 ;;		 -> STR_1(7), 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  cp              2   29[COMRAM] PTR unsigned char 
  6310 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2   25[COMRAM] PTR unsigned char 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6320 ;;      Params:         4       0       0       0       0       0       0
  6321 ;;      Locals:         2       0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0
  6323 ;;      Totals:         6       0       0       0       0       0       0
  6324 ;;Total ram usage:        6 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    2
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_util_beacon_transmission
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text29
  6335  0038C6                     __ptext29:
  6336                           	opt stack 0
  6337  0038C6                     _strcpy:
  6338                           	opt stack 26
  6339                           
  6340                           ;incstack = 0
  6341  0038C6  C01A  F01E         	movff	strcpy@to,strcpy@cp
  6342  0038CA  C01B  F01F         	movff	strcpy@to+1,strcpy@cp+1
  6343  0038CE  D004               	goto	l3849
  6344  0038D0                     l3847:
  6345  0038D0  4A1E               	infsnz	strcpy@cp,f,c
  6346  0038D2  2A1F               	incf	strcpy@cp+1,f,c
  6347  0038D4  4A1C               	infsnz	strcpy@from,f,c
  6348  0038D6  2A1D               	incf	strcpy@from+1,f,c
  6349  0038D8                     l3849:
  6350  0038D8  C01C  FFF6         	movff	strcpy@from,tblptrl
  6351  0038DC  C01D  FFF7         	movff	strcpy@from+1,tblptrh
  6352  0038E0                     	if	0	;tblptru may be non-zero
  6353  0038E0                     	endif
  6354  0038E0                     	if	0	;tblptru may be non-zero
  6355  0038E0                     	endif
  6356  0038E0  C01E  FFD9         	movff	strcpy@cp,fsr2l
  6357  0038E4  C01F  FFDA         	movff	strcpy@cp+1,fsr2h
  6358  0038E8  0008               	tblrd		*
  6359  0038EA  CFF5 FFDF          	movff	tablat,indf2
  6360  0038EE  50DF               	movf	indf2,w,c
  6361  0038F0  B4D8               	btfsc	status,2,c
  6362  0038F2  0012               	return	
  6363  0038F4  D7ED               	goto	l3847
  6364  0038F6                     __end_of_strcpy:
  6365                           	opt stack 0
  6366                           tblptru	equ	0xFF8
  6367                           tblptrh	equ	0xFF7
  6368                           tblptrl	equ	0xFF6
  6369                           tablat	equ	0xFF5
  6370                           intcon	equ	0xFF2
  6371                           indf0	equ	0xFEF
  6372                           postinc0	equ	0xFEE
  6373                           fsr0h	equ	0xFEA
  6374                           fsr0l	equ	0xFE9
  6375                           wreg	equ	0xFE8
  6376                           postdec1	equ	0xFE5
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function _strcat *****************
  6387 ;; Defined at:
  6388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  to              2   25[COMRAM] PTR unsigned char 
  6391 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6392 ;;  from            2   27[COMRAM] PTR const unsigned char 
  6393 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  cp              2   29[COMRAM] PTR unsigned char 
  6396 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2   25[COMRAM] PTR unsigned char 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6406 ;;      Params:         4       0       0       0       0       0       0
  6407 ;;      Locals:         2       0       0       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0
  6409 ;;      Totals:         6       0       0       0       0       0       0
  6410 ;;Total ram usage:        6 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    2
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_util_beacon_transmission
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text30
  6421  00370C                     __ptext30:
  6422                           	opt stack 0
  6423  00370C                     _strcat:
  6424                           	opt stack 26
  6425                           
  6426                           ;incstack = 0
  6427  00370C  C01A  F01E         	movff	strcat@to,strcat@cp
  6428  003710  C01B  F01F         	movff	strcat@to+1,strcat@cp+1
  6429  003714  D002               	goto	l4149
  6430  003716                     l4147:
  6431  003716  4A1E               	infsnz	strcat@cp,f,c
  6432  003718  2A1F               	incf	strcat@cp+1,f,c
  6433  00371A                     l4149:
  6434  00371A  C01E  FFD9         	movff	strcat@cp,fsr2l
  6435  00371E  C01F  FFDA         	movff	strcat@cp+1,fsr2h
  6436  003722  50DF               	movf	indf2,w,c
  6437  003724  B4D8               	btfsc	status,2,c
  6438  003726  D005               	goto	l4153
  6439  003728  D7F6               	goto	l4147
  6440  00372A                     l4151:
  6441  00372A  4A1E               	infsnz	strcat@cp,f,c
  6442  00372C  2A1F               	incf	strcat@cp+1,f,c
  6443  00372E  4A1C               	infsnz	strcat@from,f,c
  6444  003730  2A1D               	incf	strcat@from+1,f,c
  6445  003732                     l4153:
  6446  003732  C01C  FFD9         	movff	strcat@from,fsr2l
  6447  003736  C01D  FFDA         	movff	strcat@from+1,fsr2h
  6448  00373A  C01E  FFE1         	movff	strcat@cp,fsr1l
  6449  00373E  C01F  FFE2         	movff	strcat@cp+1,fsr1h
  6450  003742  CFDF FFE7          	movff	indf2,indf1
  6451  003746  50E7               	movf	indf1,w,c
  6452  003748  B4D8               	btfsc	status,2,c
  6453  00374A  0012               	return	
  6454  00374C  D7EE               	goto	l4151
  6455  00374E                     __end_of_strcat:
  6456                           	opt stack 0
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           intcon	equ	0xFF2
  6462                           indf0	equ	0xFEF
  6463                           postinc0	equ	0xFEE
  6464                           fsr0h	equ	0xFEA
  6465                           fsr0l	equ	0xFE9
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           postdec1	equ	0xFE5
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _sprintf *****************
  6479 ;; Defined at:
  6480 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  sp              2   64[BANK0 ] PTR unsigned char 
  6483 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6484 ;;  f               2   66[BANK0 ] PTR const unsigned char 
  6485 ;;		 -> STR_2(23), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  val             4   97[BANK0 ] unsigned long 
  6488 ;;  tmpval          4   93[BANK0 ] struct .
  6489 ;;  fval            3  103[BANK0 ] struct .
  6490 ;;  cp              3    0        PTR const unsigned char 
  6491 ;;  prec            2  106[BANK0 ] int 
  6492 ;;  exp             2  101[BANK0 ] int 
  6493 ;;  width           2   91[BANK0 ] int 
  6494 ;;  flag            2   89[BANK0 ] unsigned short 
  6495 ;;  ap              2   87[BANK0 ] PTR void [1]
  6496 ;;		 -> ?_sprintf(2), 
  6497 ;;  len             2    0        unsigned int 
  6498 ;;  c               1  108[BANK0 ] char 
  6499 ;;  d               1    0        unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  2   64[BANK0 ] int 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6509 ;;      Params:         0      14       0       0       0       0       0
  6510 ;;      Locals:         0      25       0       0       0       0       0
  6511 ;;      Temps:          0       6       0       0       0       0       0
  6512 ;;      Totals:         0      45       0       0       0       0       0
  6513 ;;Total ram usage:       45 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    5
  6516 ;; This function calls:
  6517 ;;		___awdiv
  6518 ;;		___ftadd
  6519 ;;		___ftge
  6520 ;;		___ftmul
  6521 ;;		___ftneg
  6522 ;;		___ftsub
  6523 ;;		___fttol
  6524 ;;		___lldiv
  6525 ;;		___llmod
  6526 ;;		___lltoft
  6527 ;;		___wmul
  6528 ;;		__div_to_l_
  6529 ;;		__tdiv_to_l_
  6530 ;;		_fround
  6531 ;;		_isdigit
  6532 ;;		_scale
  6533 ;; This function is called by:
  6534 ;;		_util_beacon_transmission
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text31
  6539  0000AA                     __ptext31:
  6540                           	opt stack 0
  6541  0000AA                     _sprintf:
  6542                           	opt stack 23
  6543                           
  6544                           ;doprnt.c: 494: va_list ap;
  6545                           ;doprnt.c: 499: signed char c;
  6546                           ;doprnt.c: 501: int width;
  6547                           ;doprnt.c: 504: int prec;
  6548                           ;doprnt.c: 508: unsigned short flag;
  6549                           ;doprnt.c: 515: char d;
  6550                           ;doprnt.c: 516: double fval;
  6551                           ;doprnt.c: 517: int exp;
  6552                           ;doprnt.c: 523: union {
  6553                           ;doprnt.c: 524: unsigned long vd;
  6554                           ;doprnt.c: 525: double integ;
  6555                           ;doprnt.c: 526: } tmpval;
  6556                           ;doprnt.c: 528: unsigned long val;
  6557                           ;doprnt.c: 529: unsigned len;
  6558                           ;doprnt.c: 530: const char * cp;
  6559                           ;doprnt.c: 533: *ap = __va_start();
  6560                           
  6561                           ;incstack = 0
  6562  0000AA  0EA4               	movlw	low (?_sprintf+4)
  6563  0000AC  0100               	movlb	0	; () banked
  6564  0000AE  6FB7               	movwf	sprintf@ap& (0+255),b
  6565  0000B0  0E00               	movlw	high (?_sprintf+4)
  6566  0000B2  0100               	movlb	0	; () banked
  6567  0000B4  6FB8               	movwf	(sprintf@ap+1)& (0+255),b
  6568                           
  6569                           ;doprnt.c: 536: while(c = *f++) {
  6570  0000B6  EF01  F006         	goto	l5325
  6571  0000BA                     l5039:
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;doprnt.c: 538: if(c != '%')
  6575  0000BA  0E25               	movlw	37
  6576  0000BC  0100               	movlb	0	; () banked
  6577  0000BE  19CC               	xorwf	sprintf@c& (0+255),w,b
  6578  0000C0  B4D8               	btfsc	status,2,c
  6579  0000C2  D00B               	goto	l5045
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;doprnt.c: 540: {
  6583                           ;doprnt.c: 541: ((*sp++ = (c)));
  6584  0000C4  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  6585  0000C8  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  6586  0000CC  C0CC  FFDF         	movff	sprintf@c,indf2
  6587                           
  6588                           ; BSR set to: 0
  6589  0000D0  0100               	movlb	0	; () banked
  6590  0000D2  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  6591  0000D4  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  6592                           
  6593                           ;doprnt.c: 542: continue;
  6594  0000D6  EF01  F006         	goto	l5325
  6595  0000DA                     l5045:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;doprnt.c: 543: }
  6599                           ;doprnt.c: 546: width = 0;
  6600  0000DA  0E00               	movlw	0
  6601  0000DC  0100               	movlb	0	; () banked
  6602  0000DE  6FBC               	movwf	(sprintf@width+1)& (0+255),b
  6603  0000E0  0E00               	movlw	0
  6604  0000E2  6FBB               	movwf	sprintf@width& (0+255),b
  6605                           
  6606                           ;doprnt.c: 548: flag = 0;
  6607  0000E4  0E00               	movlw	0
  6608  0000E6  0100               	movlb	0	; () banked
  6609  0000E8  6FBA               	movwf	(sprintf@flag+1)& (0+255),b
  6610  0000EA  0E00               	movlw	0
  6611  0000EC  6FB9               	movwf	sprintf@flag& (0+255),b
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6615  0000EE  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6616  0000F2  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6617  0000F6                     	if	0	;tblptru may be non-zero
  6618  0000F6                     	endif
  6619  0000F6                     	if	0	;tblptru may be non-zero
  6620  0000F6                     	endif
  6621  0000F6  0008               	tblrd		*
  6622  0000F8  50F5               	movf	tablat,w,c
  6623  0000FA  ECDE  F01C         	call	_isdigit
  6624  0000FE  A0D8               	btfss	status,0,c
  6625  000100  D040               	goto	l5059
  6626                           
  6627                           ;doprnt.c: 598: width = 0;
  6628  000102  0E00               	movlw	0
  6629  000104  0100               	movlb	0	; () banked
  6630  000106  6FBC               	movwf	(sprintf@width+1)& (0+255),b
  6631  000108  0E00               	movlw	0
  6632  00010A  6FBB               	movwf	sprintf@width& (0+255),b
  6633  00010C                     l5051:
  6634                           
  6635                           ;doprnt.c: 600: width *= 10;
  6636  00010C  C0BB  F071         	movff	sprintf@width,___wmul@multiplier
  6637  000110  C0BC  F072         	movff	sprintf@width+1,___wmul@multiplier+1
  6638  000114  0E00               	movlw	0
  6639  000116  0100               	movlb	0	; () banked
  6640  000118  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6641  00011A  0E0A               	movlw	10
  6642  00011C  6F73               	movwf	___wmul@multiplicand& (0+255),b
  6643  00011E  EC32  F01C         	call	___wmul	;wreg free
  6644  000122  C071  F0BB         	movff	?___wmul,sprintf@width
  6645  000126  C072  F0BC         	movff	?___wmul+1,sprintf@width+1
  6646                           
  6647                           ;doprnt.c: 601: width += *f++ - '0';
  6648  00012A  0ED0               	movlw	208
  6649  00012C  0100               	movlb	0	; () banked
  6650  00012E  6FAE               	movwf	??_sprintf& (0+255),b
  6651  000130  0EFF               	movlw	255
  6652  000132  0100               	movlb	0	; () banked
  6653  000134  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  6654  000136  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6655  00013A  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6656  00013E                     	if	0	;tblptru may be non-zero
  6657  00013E                     	endif
  6658  00013E                     	if	0	;tblptru may be non-zero
  6659  00013E                     	endif
  6660  00013E  0008               	tblrd		*
  6661  000140  50F5               	movf	tablat,w,c
  6662  000142  0100               	movlb	0	; () banked
  6663  000144  6FB0               	movwf	(??_sprintf+2)& (0+255),b
  6664  000146  6BB1               	clrf	(??_sprintf+3)& (0+255),b
  6665  000148  0100               	movlb	0	; () banked
  6666  00014A  51AE               	movf	??_sprintf& (0+255),w,b
  6667  00014C  0100               	movlb	0	; () banked
  6668  00014E  27B0               	addwf	(??_sprintf+2)& (0+255),f,b
  6669  000150  0100               	movlb	0	; () banked
  6670  000152  51AF               	movf	(??_sprintf+1)& (0+255),w,b
  6671  000154  0100               	movlb	0	; () banked
  6672  000156  23B1               	addwfc	(??_sprintf+3)& (0+255),f,b
  6673  000158  0100               	movlb	0	; () banked
  6674  00015A  51B0               	movf	(??_sprintf+2)& (0+255),w,b
  6675  00015C  0100               	movlb	0	; () banked
  6676  00015E  27BB               	addwf	sprintf@width& (0+255),f,b
  6677  000160  0100               	movlb	0	; () banked
  6678  000162  51B1               	movf	(??_sprintf+3)& (0+255),w,b
  6679  000164  0100               	movlb	0	; () banked
  6680  000166  23BC               	addwfc	(sprintf@width+1)& (0+255),f,b
  6681                           
  6682                           ; BSR set to: 0
  6683  000168  0100               	movlb	0	; () banked
  6684  00016A  4BA2               	infsnz	sprintf@f& (0+255),f,b
  6685  00016C  2BA3               	incf	(sprintf@f+1)& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6689  00016E  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6690  000172  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6691  000176                     	if	0	;tblptru may be non-zero
  6692  000176                     	endif
  6693  000176                     	if	0	;tblptru may be non-zero
  6694  000176                     	endif
  6695  000176  0008               	tblrd		*
  6696  000178  50F5               	movf	tablat,w,c
  6697  00017A  ECDE  F01C         	call	_isdigit
  6698  00017E  B0D8               	btfsc	status,0,c
  6699  000180  D7C5               	goto	l5051
  6700  000182                     l5059:
  6701                           
  6702                           ;doprnt.c: 608: }
  6703                           ;doprnt.c: 611: if(*f == '.') {
  6704  000182  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6705  000186  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6706  00018A                     	if	0	;tblptru may be non-zero
  6707  00018A                     	endif
  6708  00018A                     	if	0	;tblptru may be non-zero
  6709  00018A                     	endif
  6710  00018A  0008               	tblrd		*
  6711  00018C  50F5               	movf	tablat,w,c
  6712  00018E  0A2E               	xorlw	46
  6713  000190  A4D8               	btfss	status,2,c
  6714  000192  D039               	goto	l5071
  6715                           
  6716                           ;doprnt.c: 612: flag |= 0x4000;
  6717  000194  0100               	movlb	0	; () banked
  6718  000196  8DBA               	bsf	(sprintf@flag+1)& (0+255),6,b
  6719                           
  6720                           ;doprnt.c: 613: f++;
  6721  000198  0100               	movlb	0	; () banked
  6722  00019A  4BA2               	infsnz	sprintf@f& (0+255),f,b
  6723  00019C  2BA3               	incf	(sprintf@f+1)& (0+255),f,b
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;doprnt.c: 620: {
  6727                           ;doprnt.c: 621: prec = 0;
  6728  00019E  0E00               	movlw	0
  6729  0001A0  0100               	movlb	0	; () banked
  6730  0001A2  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  6731  0001A4  0E00               	movlw	0
  6732  0001A6  6FCA               	movwf	sprintf@prec& (0+255),b
  6733                           
  6734                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6735  0001A8  D023               	goto	l5069
  6736  0001AA                     l5065:
  6737                           
  6738                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6739  0001AA  C0CA  F071         	movff	sprintf@prec,___wmul@multiplier
  6740  0001AE  C0CB  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  6741  0001B2  0E00               	movlw	0
  6742  0001B4  0100               	movlb	0	; () banked
  6743  0001B6  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6744  0001B8  0E0A               	movlw	10
  6745  0001BA  6F73               	movwf	___wmul@multiplicand& (0+255),b
  6746  0001BC  EC32  F01C         	call	___wmul	;wreg free
  6747  0001C0  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6748  0001C4  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6749  0001C8                     	if	0	;tblptru may be non-zero
  6750  0001C8                     	endif
  6751  0001C8                     	if	0	;tblptru may be non-zero
  6752  0001C8                     	endif
  6753  0001C8  0008               	tblrd		*
  6754  0001CA  50F5               	movf	tablat,w,c
  6755  0001CC  0100               	movlb	0	; () banked
  6756  0001CE  2771               	addwf	?___wmul& (0+255),f,b
  6757  0001D0  0E00               	movlw	0
  6758  0001D2  0100               	movlb	0	; () banked
  6759  0001D4  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  6760  0001D6  0ED0               	movlw	208
  6761  0001D8  0100               	movlb	0	; () banked
  6762  0001DA  2571               	addwf	?___wmul& (0+255),w,b
  6763  0001DC  0100               	movlb	0	; () banked
  6764  0001DE  6FCA               	movwf	sprintf@prec& (0+255),b
  6765  0001E0  0EFF               	movlw	255
  6766  0001E2  0100               	movlb	0	; () banked
  6767  0001E4  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  6768  0001E6  0100               	movlb	0	; () banked
  6769  0001E8  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772  0001EA  0100               	movlb	0	; () banked
  6773  0001EC  4BA2               	infsnz	sprintf@f& (0+255),f,b
  6774  0001EE  2BA3               	incf	(sprintf@f+1)& (0+255),f,b
  6775  0001F0                     l5069:
  6776                           
  6777                           ; BSR set to: 0
  6778  0001F0  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6779  0001F4  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6780  0001F8                     	if	0	;tblptru may be non-zero
  6781  0001F8                     	endif
  6782  0001F8                     	if	0	;tblptru may be non-zero
  6783  0001F8                     	endif
  6784  0001F8  0008               	tblrd		*
  6785  0001FA  50F5               	movf	tablat,w,c
  6786  0001FC  ECDE  F01C         	call	_isdigit
  6787  000200  A0D8               	btfss	status,0,c
  6788  000202  D00C               	goto	l5079
  6789  000204  D7D2               	goto	l5065
  6790  000206                     l5071:
  6791                           
  6792                           ;doprnt.c: 626: prec = 0;
  6793  000206  0E00               	movlw	0
  6794  000208  0100               	movlb	0	; () banked
  6795  00020A  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  6796  00020C  0E00               	movlw	0
  6797  00020E  6FCA               	movwf	sprintf@prec& (0+255),b
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;doprnt.c: 628: flag |= 0x1000;
  6801  000210  0100               	movlb	0	; () banked
  6802  000212  89BA               	bsf	(sprintf@flag+1)& (0+255),4,b
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;doprnt.c: 630: }
  6806                           ;doprnt.c: 635: switch(c = *f++) {
  6807  000214  D003               	goto	l5079
  6808  000216                     l5075:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;doprnt.c: 663: flag |= 0x400;
  6812  000216  0100               	movlb	0	; () banked
  6813  000218  85BA               	bsf	(sprintf@flag+1)& (0+255),2,b
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;doprnt.c: 698: case 'i':
  6817                           ;doprnt.c: 699: break;
  6818                           
  6819                           ; BSR set to: 0
  6820                           
  6821                           ;doprnt.c: 697: case 'd':
  6822                           
  6823                           ;doprnt.c: 664: break;
  6824  00021A  D01A               	goto	l5081
  6825  00021C                     l5079:
  6826  00021C  C0A2  FFF6         	movff	sprintf@f,tblptrl
  6827  000220  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  6828  000224  0100               	movlb	0	; () banked
  6829  000226  4BA2               	infsnz	sprintf@f& (0+255),f,b
  6830  000228  2BA3               	incf	(sprintf@f+1)& (0+255),f,b
  6831  00022A                     	if	0	;tblptru may be non-zero
  6832  00022A                     	endif
  6833  00022A                     	if	0	;tblptru may be non-zero
  6834  00022A                     	endif
  6835  00022A  0008               	tblrd		*
  6836  00022C  CFF5 F0CC          	movff	tablat,sprintf@c
  6837  000230  0100               	movlb	0	; () banked
  6838  000232  51CC               	movf	sprintf@c& (0+255),w,b
  6839                           
  6840                           ; Switch size 1, requested type "space"
  6841                           ; Number of cases is 4, Range of values is 0 to 105
  6842                           ; switch strategies available:
  6843                           ; Name         Instructions Cycles
  6844                           ; simple_byte           13     7 (average)
  6845                           ;	Chosen strategy is simple_byte
  6846  000234  0A00               	xorlw	0	; case 0
  6847  000236  B4D8               	btfsc	status,2,c
  6848  000238  EF10  F006         	goto	l5327
  6849  00023C  0A64               	xorlw	100	; case 100
  6850  00023E  B4D8               	btfsc	status,2,c
  6851  000240  D007               	goto	l5081
  6852  000242  0A02               	xorlw	2	; case 102
  6853  000244  B4D8               	btfsc	status,2,c
  6854  000246  D7E7               	goto	l5075
  6855  000248  0A0F               	xorlw	15	; case 105
  6856  00024A  A4D8               	btfss	status,2,c
  6857  00024C  EF01  F006         	goto	l5325
  6858  000250                     l5081:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;doprnt.c: 825: if(flag & (0x700)) {
  6862  000250  0E07               	movlw	7
  6863  000252  0100               	movlb	0	; () banked
  6864  000254  15BA               	andwf	(sprintf@flag+1)& (0+255),w,b
  6865  000256  B4D8               	btfsc	status,2,c
  6866  000258  D36C               	goto	l5245
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;doprnt.c: 827: if(flag & 0x1000)
  6870  00025A  0100               	movlb	0	; () banked
  6871  00025C  A9BA               	btfss	(sprintf@flag+1)& (0+255),4,b
  6872  00025E  D005               	goto	l5087
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;doprnt.c: 829: prec = 6;
  6876  000260  0E00               	movlw	0
  6877  000262  0100               	movlb	0	; () banked
  6878  000264  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  6879  000266  0E06               	movlw	6
  6880  000268  6FCA               	movwf	sprintf@prec& (0+255),b
  6881  00026A                     l5087:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6885  00026A  C0B7  FFD9         	movff	sprintf@ap,fsr2l
  6886  00026E  C0B8  FFDA         	movff	sprintf@ap+1,fsr2h
  6887  000272  CFDE F0C7          	movff	postinc2,sprintf@fval
  6888  000276  CFDE F0C8          	movff	postinc2,sprintf@fval+1
  6889  00027A  CFDD F0C9          	movff	postdec2,sprintf@fval+2
  6890                           
  6891                           ; BSR set to: 0
  6892  00027E  0E03               	movlw	3
  6893  000280  0100               	movlb	0	; () banked
  6894  000282  27B7               	addwf	sprintf@ap& (0+255),f,b
  6895  000284  0E00               	movlw	0
  6896  000286  23B8               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;doprnt.c: 831: if(fval < 0.0) {
  6900  000288  0100               	movlb	0	; () banked
  6901  00028A  AFC9               	btfss	(sprintf@fval+2)& (0+255),7,b
  6902  00028C  D011               	goto	l5097
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;doprnt.c: 832: fval = -fval;
  6906  00028E  C0C7  F01A         	movff	sprintf@fval,___ftneg@f1
  6907  000292  C0C8  F01B         	movff	sprintf@fval+1,___ftneg@f1+1
  6908  000296  C0C9  F01C         	movff	sprintf@fval+2,___ftneg@f1+2
  6909  00029A  ECCC  F01C         	call	___ftneg	;wreg free
  6910  00029E  C01A  F0C7         	movff	?___ftneg,sprintf@fval
  6911  0002A2  C01B  F0C8         	movff	?___ftneg+1,sprintf@fval+1
  6912  0002A6  C01C  F0C9         	movff	?___ftneg+2,sprintf@fval+2
  6913                           
  6914                           ;doprnt.c: 833: flag |= 0x03;
  6915  0002AA  0E03               	movlw	3
  6916  0002AC  0100               	movlb	0	; () banked
  6917  0002AE  13B9               	iorwf	sprintf@flag& (0+255),f,b
  6918  0002B0                     l5097:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;doprnt.c: 834: }
  6922                           ;doprnt.c: 835: exp = 0;
  6923  0002B0  0E00               	movlw	0
  6924  0002B2  0100               	movlb	0	; () banked
  6925  0002B4  6FC6               	movwf	(sprintf@exp+1)& (0+255),b
  6926  0002B6  0E00               	movlw	0
  6927  0002B8  6FC5               	movwf	sprintf@exp& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;doprnt.c: 836: if( fval!=0) {
  6931  0002BA  0100               	movlb	0	; () banked
  6932  0002BC  51C7               	movf	sprintf@fval& (0+255),w,b
  6933  0002BE  0100               	movlb	0	; () banked
  6934  0002C0  11C8               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6935  0002C2  0100               	movlb	0	; () banked
  6936  0002C4  11C9               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6937  0002C6  B4D8               	btfsc	status,2,c
  6938  0002C8  D092               	goto	l5125
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6942  0002CA  0E82               	movlw	130
  6943  0002CC  0100               	movlb	0	; () banked
  6944  0002CE  6FAE               	movwf	??_sprintf& (0+255),b
  6945  0002D0  0EFF               	movlw	255
  6946  0002D2  0100               	movlb	0	; () banked
  6947  0002D4  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  6948  0002D6  C0C7  F0B0         	movff	sprintf@fval,??_sprintf+2
  6949  0002DA  C0C8  F0B1         	movff	sprintf@fval+1,??_sprintf+3
  6950  0002DE  C0C9  F0B2         	movff	sprintf@fval+2,??_sprintf+4
  6951  0002E2  C0CA  F0B3         	movff	sprintf@fval+3,??_sprintf+5
  6952  0002E6  0E10               	movlw	16
  6953  0002E8  D006               	goto	u5220
  6954  0002EA                     u5225:
  6955  0002EA  0100               	movlb	0	; () banked
  6956  0002EC  90D8               	bcf	status,0,c
  6957  0002EE  33B3               	rrcf	(??_sprintf+5)& (0+255),f,b
  6958  0002F0  33B2               	rrcf	(??_sprintf+4)& (0+255),f,b
  6959  0002F2  33B1               	rrcf	(??_sprintf+3)& (0+255),f,b
  6960  0002F4  33B0               	rrcf	(??_sprintf+2)& (0+255),f,b
  6961  0002F6                     u5220:
  6962  0002F6  2EE8               	decfsz	wreg,f,c
  6963  0002F8  D7F8               	goto	u5225
  6964  0002FA  0100               	movlb	0	; () banked
  6965  0002FC  51B0               	movf	(??_sprintf+2)& (0+255),w,b
  6966  0002FE  0100               	movlb	0	; () banked
  6967  000300  25AE               	addwf	??_sprintf& (0+255),w,b
  6968  000302  0100               	movlb	0	; () banked
  6969  000304  6FC5               	movwf	sprintf@exp& (0+255),b
  6970  000306  0E00               	movlw	0
  6971  000308  0100               	movlb	0	; () banked
  6972  00030A  21AF               	addwfc	(??_sprintf+1)& (0+255),w,b
  6973  00030C  0100               	movlb	0	; () banked
  6974  00030E  6FC6               	movwf	(sprintf@exp+1)& (0+255),b
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;doprnt.c: 838: exp--;
  6978  000310  0100               	movlb	0	; () banked
  6979  000312  07C5               	decf	sprintf@exp& (0+255),f,b
  6980  000314  A0D8               	btfss	status,0,c
  6981  000316  07C6               	decf	(sprintf@exp+1)& (0+255),f,b
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;doprnt.c: 839: exp *= 3;
  6985  000318  C0C5  F071         	movff	sprintf@exp,___wmul@multiplier
  6986  00031C  C0C6  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  6987  000320  0E00               	movlw	0
  6988  000322  0100               	movlb	0	; () banked
  6989  000324  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6990  000326  0E03               	movlw	3
  6991  000328  6F73               	movwf	___wmul@multiplicand& (0+255),b
  6992  00032A  EC32  F01C         	call	___wmul	;wreg free
  6993  00032E  C071  F0C5         	movff	?___wmul,sprintf@exp
  6994  000332  C072  F0C6         	movff	?___wmul+1,sprintf@exp+1
  6995                           
  6996                           ;doprnt.c: 840: exp /= 10;
  6997  000336  C0C5  F020         	movff	sprintf@exp,___awdiv@dividend
  6998  00033A  C0C6  F021         	movff	sprintf@exp+1,___awdiv@dividend+1
  6999  00033E  0E00               	movlw	0
  7000  000340  6E23               	movwf	___awdiv@divisor+1,c
  7001  000342  0E0A               	movlw	10
  7002  000344  6E22               	movwf	___awdiv@divisor,c
  7003  000346  ECAC  F019         	call	___awdiv	;wreg free
  7004  00034A  C020  F0C5         	movff	?___awdiv,sprintf@exp
  7005  00034E  C021  F0C6         	movff	?___awdiv+1,sprintf@exp+1
  7006                           
  7007                           ;doprnt.c: 841: if(exp < 0)
  7008  000352  0100               	movlb	0	; () banked
  7009  000354  AFC6               	btfss	(sprintf@exp+1)& (0+255),7,b
  7010  000356  D004               	goto	l5113
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;doprnt.c: 842: exp--;
  7014  000358  0100               	movlb	0	; () banked
  7015  00035A  07C5               	decf	sprintf@exp& (0+255),f,b
  7016  00035C  A0D8               	btfss	status,0,c
  7017  00035E  07C6               	decf	(sprintf@exp+1)& (0+255),f,b
  7018  000360                     l5113:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7022  000360  0100               	movlb	0	; () banked
  7023  000362  51C5               	movf	sprintf@exp& (0+255),w,b
  7024  000364  0800               	sublw	0
  7025  000366  ECE3  F009         	call	_scale
  7026  00036A  C084  F0BD         	movff	?_scale,sprintf@tmpval
  7027  00036E  C085  F0BE         	movff	?_scale+1,sprintf@tmpval+1
  7028  000372  C086  F0BF         	movff	?_scale+2,sprintf@tmpval+2
  7029                           
  7030                           ;doprnt.c: 847: tmpval.integ *= fval;
  7031  000376  C0BD  F075         	movff	sprintf@tmpval,___ftmul@f1
  7032  00037A  C0BE  F076         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7033  00037E  C0BF  F077         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7034  000382  C0C7  F078         	movff	sprintf@fval,___ftmul@f2
  7035  000386  C0C8  F079         	movff	sprintf@fval+1,___ftmul@f2+1
  7036  00038A  C0C9  F07A         	movff	sprintf@fval+2,___ftmul@f2+2
  7037  00038E  EC63  F013         	call	___ftmul	;wreg free
  7038  000392  C075  F0BD         	movff	?___ftmul,sprintf@tmpval
  7039  000396  C076  F0BE         	movff	?___ftmul+1,sprintf@tmpval+1
  7040  00039A  C077  F0BF         	movff	?___ftmul+2,sprintf@tmpval+2
  7041                           
  7042                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7043  00039E  C0BD  F01A         	movff	sprintf@tmpval,___ftge@ff1
  7044  0003A2  C0BE  F01B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7045  0003A6  C0BF  F01C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7046  0003AA  0E00               	movlw	0
  7047  0003AC  6E1D               	movwf	___ftge@ff2,c
  7048  0003AE  0E80               	movlw	128
  7049  0003B0  6E1E               	movwf	___ftge@ff2+1,c
  7050  0003B2  0E3F               	movlw	63
  7051  0003B4  6E1F               	movwf	___ftge@ff2+2,c
  7052  0003B6  EC1E  F019         	call	___ftge	;wreg free
  7053  0003BA  B0D8               	btfsc	status,0,c
  7054  0003BC  D005               	goto	l5121
  7055                           
  7056                           ;doprnt.c: 849: exp--;
  7057  0003BE  0100               	movlb	0	; () banked
  7058  0003C0  07C5               	decf	sprintf@exp& (0+255),f,b
  7059  0003C2  A0D8               	btfss	status,0,c
  7060  0003C4  07C6               	decf	(sprintf@exp+1)& (0+255),f,b
  7061  0003C6  D013               	goto	l5125
  7062  0003C8                     l5121:
  7063                           
  7064                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7065  0003C8  C0BD  F01A         	movff	sprintf@tmpval,___ftge@ff1
  7066  0003CC  C0BE  F01B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7067  0003D0  C0BF  F01C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7068  0003D4  0E00               	movlw	0
  7069  0003D6  6E1D               	movwf	___ftge@ff2,c
  7070  0003D8  0E20               	movlw	32
  7071  0003DA  6E1E               	movwf	___ftge@ff2+1,c
  7072  0003DC  0E41               	movlw	65
  7073  0003DE  6E1F               	movwf	___ftge@ff2+2,c
  7074  0003E0  EC1E  F019         	call	___ftge	;wreg free
  7075  0003E4  A0D8               	btfss	status,0,c
  7076  0003E6  D003               	goto	l5125
  7077                           
  7078                           ;doprnt.c: 851: exp++;
  7079  0003E8  0100               	movlb	0	; () banked
  7080  0003EA  4BC5               	infsnz	sprintf@exp& (0+255),f,b
  7081  0003EC  2BC6               	incf	(sprintf@exp+1)& (0+255),f,b
  7082  0003EE                     l5125:
  7083                           
  7084                           ;doprnt.c: 852: }
  7085                           ;doprnt.c: 1112: if(prec <= 12)
  7086  0003EE  0100               	movlb	0	; () banked
  7087  0003F0  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7088  0003F2  D008               	goto	l5127
  7089  0003F4  0100               	movlb	0	; () banked
  7090  0003F6  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  7091  0003F8  E11D               	bnz	l5129
  7092  0003FA  0E0D               	movlw	13
  7093  0003FC  0100               	movlb	0	; () banked
  7094  0003FE  5DCA               	subwf	sprintf@prec& (0+255),w,b
  7095  000400  B0D8               	btfsc	status,0,c
  7096  000402  D018               	goto	l5129
  7097  000404                     l5127:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;doprnt.c: 1113: fval += fround(prec);
  7101  000404  C0C7  F08E         	movff	sprintf@fval,___ftadd@f1
  7102  000408  C0C8  F08F         	movff	sprintf@fval+1,___ftadd@f1+1
  7103  00040C  C0C9  F090         	movff	sprintf@fval+2,___ftadd@f1+2
  7104  000410  0100               	movlb	0	; () banked
  7105  000412  51CA               	movf	sprintf@prec& (0+255),w,b
  7106  000414  EC5F  F00F         	call	_fround
  7107  000418  C084  F091         	movff	?_fround,___ftadd@f2
  7108  00041C  C085  F092         	movff	?_fround+1,___ftadd@f2+1
  7109  000420  C086  F093         	movff	?_fround+2,___ftadd@f2+2
  7110  000424  ECA4  F010         	call	___ftadd	;wreg free
  7111  000428  C08E  F0C7         	movff	?___ftadd,sprintf@fval
  7112  00042C  C08F  F0C8         	movff	?___ftadd+1,sprintf@fval+1
  7113  000430  C090  F0C9         	movff	?___ftadd+2,sprintf@fval+2
  7114  000434                     l5129:
  7115                           
  7116                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7117  000434  0100               	movlb	0	; () banked
  7118  000436  BFC6               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7119  000438  D008               	goto	l5131
  7120  00043A  0100               	movlb	0	; () banked
  7121  00043C  51C6               	movf	(sprintf@exp+1)& (0+255),w,b
  7122  00043E  E12A               	bnz	l5137
  7123  000440  0E0A               	movlw	10
  7124  000442  0100               	movlb	0	; () banked
  7125  000444  5DC5               	subwf	sprintf@exp& (0+255),w,b
  7126  000446  B0D8               	btfsc	status,0,c
  7127  000448  D025               	goto	l5137
  7128  00044A                     l5131:
  7129                           
  7130                           ; BSR set to: 0
  7131  00044A  0100               	movlb	0	; () banked
  7132  00044C  51C7               	movf	sprintf@fval& (0+255),w,b
  7133  00044E  0100               	movlb	0	; () banked
  7134  000450  11C8               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7135  000452  0100               	movlb	0	; () banked
  7136  000454  11C9               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7137  000456  B4D8               	btfsc	status,2,c
  7138  000458  D05F               	goto	l5151
  7139                           
  7140                           ; BSR set to: 0
  7141  00045A  C0C7  F08B         	movff	sprintf@fval,___fttol@f1
  7142  00045E  C0C8  F08C         	movff	sprintf@fval+1,___fttol@f1+1
  7143  000462  C0C9  F08D         	movff	sprintf@fval+2,___fttol@f1+2
  7144  000466  EC12  F014         	call	___fttol	;wreg free
  7145  00046A  0100               	movlb	0	; () banked
  7146  00046C  518B               	movf	?___fttol& (0+255),w,b
  7147  00046E  0100               	movlb	0	; () banked
  7148  000470  118C               	iorwf	(?___fttol+1)& (0+255),w,b
  7149  000472  0100               	movlb	0	; () banked
  7150  000474  118D               	iorwf	(?___fttol+2)& (0+255),w,b
  7151  000476  0100               	movlb	0	; () banked
  7152  000478  118E               	iorwf	(?___fttol+3)& (0+255),w,b
  7153  00047A  A4D8               	btfss	status,2,c
  7154  00047C  D04D               	goto	l5151
  7155                           
  7156                           ; BSR set to: 0
  7157  00047E  0100               	movlb	0	; () banked
  7158  000480  BFC6               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7159  000482  D04A               	goto	l5151
  7160  000484  0100               	movlb	0	; () banked
  7161  000486  51C6               	movf	(sprintf@exp+1)& (0+255),w,b
  7162  000488  E105               	bnz	l5137
  7163  00048A  0E02               	movlw	2
  7164  00048C  0100               	movlb	0	; () banked
  7165  00048E  5DC5               	subwf	sprintf@exp& (0+255),w,b
  7166  000490  A0D8               	btfss	status,0,c
  7167  000492  D042               	goto	l5151
  7168  000494                     l5137:
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7172  000494  C0BD  F01A         	movff	sprintf@tmpval,___ftge@ff1
  7173  000498  C0BE  F01B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7174  00049C  C0BF  F01C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7175  0004A0  0E70               	movlw	112
  7176  0004A2  6E1D               	movwf	___ftge@ff2,c
  7177  0004A4  0E89               	movlw	137
  7178  0004A6  6E1E               	movwf	___ftge@ff2+1,c
  7179  0004A8  0E40               	movlw	64
  7180  0004AA  6E1F               	movwf	___ftge@ff2+2,c
  7181  0004AC  EC1E  F019         	call	___ftge	;wreg free
  7182  0004B0  B0D8               	btfsc	status,0,c
  7183  0004B2  D003               	goto	l5141
  7184                           
  7185                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7186  0004B4  0100               	movlb	0	; () banked
  7187  0004B6  0EF7               	movlw	247
  7188  0004B8  D002               	goto	L2
  7189  0004BA                     l5141:
  7190                           
  7191                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7192  0004BA  0100               	movlb	0	; () banked
  7193  0004BC  0EF8               	movlw	248
  7194  0004BE                     L2:
  7195  0004BE  27C5               	addwf	sprintf@exp& (0+255),f,b
  7196  0004C0  0EFF               	movlw	255
  7197  0004C2  23C6               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;doprnt.c: 1124: }
  7201                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7202                           
  7203                           ; BSR set to: 0
  7204  0004C4  0100               	movlb	0	; () banked
  7205  0004C6  51C5               	movf	sprintf@exp& (0+255),w,b
  7206  0004C8  ECE3  F009         	call	_scale
  7207  0004CC  C084  F0BD         	movff	?_scale,sprintf@tmpval
  7208  0004D0  C085  F0BE         	movff	?_scale+1,sprintf@tmpval+1
  7209  0004D4  C086  F0BF         	movff	?_scale+2,sprintf@tmpval+2
  7210                           
  7211                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7212  0004D8  C0C7  F01A         	movff	sprintf@fval,__tdiv_to_l_@f1
  7213  0004DC  C0C8  F01B         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7214  0004E0  C0C9  F01C         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7215  0004E4  C0BD  F01D         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7216  0004E8  C0BE  F01E         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7217  0004EC  C0BF  F01F         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7218  0004F0  EC54  F015         	call	__tdiv_to_l_	;wreg free
  7219  0004F4  C01A  F0C1         	movff	?__tdiv_to_l_,sprintf@val
  7220  0004F8  C01B  F0C2         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7221  0004FC  C01C  F0C3         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7222  000500  C01D  F0C4         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7223                           
  7224                           ;doprnt.c: 1129: fval = 0.0;
  7225  000504  0E00               	movlw	0
  7226  000506  0100               	movlb	0	; () banked
  7227  000508  6FC7               	movwf	sprintf@fval& (0+255),b
  7228  00050A  0E00               	movlw	0
  7229  00050C  0100               	movlb	0	; () banked
  7230  00050E  6FC8               	movwf	(sprintf@fval+1)& (0+255),b
  7231  000510  0E00               	movlw	0
  7232  000512  0100               	movlb	0	; () banked
  7233  000514  6FC9               	movwf	(sprintf@fval+2)& (0+255),b
  7234                           
  7235                           ;doprnt.c: 1130: } else {
  7236  000516  D033               	goto	l5155
  7237  000518                     l5151:
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7241  000518  C0C7  F08B         	movff	sprintf@fval,___fttol@f1
  7242  00051C  C0C8  F08C         	movff	sprintf@fval+1,___fttol@f1+1
  7243  000520  C0C9  F08D         	movff	sprintf@fval+2,___fttol@f1+2
  7244  000524  EC12  F014         	call	___fttol	;wreg free
  7245  000528  C08B  F0C1         	movff	?___fttol,sprintf@val
  7246  00052C  C08C  F0C2         	movff	?___fttol+1,sprintf@val+1
  7247  000530  C08D  F0C3         	movff	?___fttol+2,sprintf@val+2
  7248  000534  C08E  F0C4         	movff	?___fttol+3,sprintf@val+3
  7249                           
  7250                           ;doprnt.c: 1132: fval -= (double)val;
  7251  000538  C0C7  F09A         	movff	sprintf@fval,___ftsub@f1
  7252  00053C  C0C8  F09B         	movff	sprintf@fval+1,___ftsub@f1+1
  7253  000540  C0C9  F09C         	movff	sprintf@fval+2,___ftsub@f1+2
  7254  000544  C0C1  F071         	movff	sprintf@val,___lltoft@c
  7255  000548  C0C2  F072         	movff	sprintf@val+1,___lltoft@c+1
  7256  00054C  C0C3  F073         	movff	sprintf@val+2,___lltoft@c+2
  7257  000550  C0C4  F074         	movff	sprintf@val+3,___lltoft@c+3
  7258  000554  EC67  F01A         	call	___lltoft	;wreg free
  7259  000558  C071  F09D         	movff	?___lltoft,___ftsub@f2
  7260  00055C  C072  F09E         	movff	?___lltoft+1,___ftsub@f2+1
  7261  000560  C073  F09F         	movff	?___lltoft+2,___ftsub@f2+2
  7262  000564  EC3F  F01B         	call	___ftsub	;wreg free
  7263  000568  C09A  F0C7         	movff	?___ftsub,sprintf@fval
  7264  00056C  C09B  F0C8         	movff	?___ftsub+1,sprintf@fval+1
  7265  000570  C09C  F0C9         	movff	?___ftsub+2,sprintf@fval+2
  7266                           
  7267                           ;doprnt.c: 1133: exp = 0;
  7268  000574  0E00               	movlw	0
  7269  000576  0100               	movlb	0	; () banked
  7270  000578  6FC6               	movwf	(sprintf@exp+1)& (0+255),b
  7271  00057A  0E00               	movlw	0
  7272  00057C  6FC5               	movwf	sprintf@exp& (0+255),b
  7273  00057E                     l5155:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;doprnt.c: 1134: }
  7277                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7278  00057E  0E01               	movlw	1
  7279  000580  0100               	movlb	0	; () banked
  7280  000582  6FCC               	movwf	sprintf@c& (0+255),b
  7281  000584                     l5157:
  7282                           
  7283                           ; BSR set to: 0
  7284  000584  0E0A               	movlw	10
  7285  000586  0100               	movlb	0	; () banked
  7286  000588  19CC               	xorwf	sprintf@c& (0+255),w,b
  7287  00058A  B4D8               	btfsc	status,2,c
  7288  00058C  D01E               	goto	l5169
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;doprnt.c: 1137: if(val < dpowers[c])
  7292                           
  7293                           ; BSR set to: 0
  7294                           
  7295                           ; BSR set to: 0
  7296  00058E  0100               	movlb	0	; () banked
  7297  000590  51CC               	movf	sprintf@c& (0+255),w,b
  7298  000592  0D04               	mullw	4
  7299  000594  0EF5               	movlw	low _dpowers
  7300  000596  24F3               	addwf	prodl,w,c
  7301  000598  6EF6               	movwf	tblptrl,c
  7302  00059A  0E7E               	movlw	high _dpowers
  7303  00059C  20F4               	addwfc	prodh,w,c
  7304  00059E  6EF7               	movwf	tblptrh,c
  7305  0005A0                     	if	0	;There are less than 3 active tblptr bytes
  7306  0005A0                     	endif
  7307  0005A0  0009               	tblrd		*+
  7308  0005A2  50F5               	movf	tablat,w,c
  7309  0005A4  0100               	movlb	0	; () banked
  7310  0005A6  5DC1               	subwf	sprintf@val& (0+255),w,b
  7311  0005A8  0009               	tblrd		*+
  7312  0005AA  50F5               	movf	tablat,w,c
  7313  0005AC  0100               	movlb	0	; () banked
  7314  0005AE  59C2               	subwfb	(sprintf@val+1)& (0+255),w,b
  7315  0005B0  0009               	tblrd		*+
  7316  0005B2  50F5               	movf	tablat,w,c
  7317  0005B4  0100               	movlb	0	; () banked
  7318  0005B6  59C3               	subwfb	(sprintf@val+2)& (0+255),w,b
  7319  0005B8  0009               	tblrd		*+
  7320  0005BA  50F5               	movf	tablat,w,c
  7321  0005BC  0100               	movlb	0	; () banked
  7322  0005BE  59C4               	subwfb	(sprintf@val+3)& (0+255),w,b
  7323  0005C0  A0D8               	btfss	status,0,c
  7324  0005C2  D003               	goto	l5169
  7325                           
  7326                           ; BSR set to: 0
  7327                           
  7328                           ; BSR set to: 0
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;doprnt.c: 1138: break;
  7332  0005C4  0100               	movlb	0	; () banked
  7333  0005C6  2BCC               	incf	sprintf@c& (0+255),f,b
  7334  0005C8  D7DD               	goto	l5157
  7335  0005CA                     l5169:
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;doprnt.c: 1142: width -= prec + c + exp;
  7339  0005CA  C0CC  F0AE         	movff	sprintf@c,??_sprintf
  7340  0005CE  0100               	movlb	0	; () banked
  7341  0005D0  6BAF               	clrf	(??_sprintf+1)& (0+255),b
  7342  0005D2  BFAE               	btfsc	??_sprintf& (0+255),7,b
  7343  0005D4  07AF               	decf	(??_sprintf+1)& (0+255),f,b
  7344  0005D6  0100               	movlb	0	; () banked
  7345  0005D8  51CA               	movf	sprintf@prec& (0+255),w,b
  7346  0005DA  0100               	movlb	0	; () banked
  7347  0005DC  27AE               	addwf	??_sprintf& (0+255),f,b
  7348  0005DE  0100               	movlb	0	; () banked
  7349  0005E0  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  7350  0005E2  0100               	movlb	0	; () banked
  7351  0005E4  23AF               	addwfc	(??_sprintf+1)& (0+255),f,b
  7352  0005E6  0100               	movlb	0	; () banked
  7353  0005E8  51C5               	movf	sprintf@exp& (0+255),w,b
  7354  0005EA  0100               	movlb	0	; () banked
  7355  0005EC  27AE               	addwf	??_sprintf& (0+255),f,b
  7356  0005EE  0100               	movlb	0	; () banked
  7357  0005F0  51C6               	movf	(sprintf@exp+1)& (0+255),w,b
  7358  0005F2  0100               	movlb	0	; () banked
  7359  0005F4  23AF               	addwfc	(??_sprintf+1)& (0+255),f,b
  7360  0005F6  0100               	movlb	0	; () banked
  7361  0005F8  51AE               	movf	??_sprintf& (0+255),w,b
  7362  0005FA  0100               	movlb	0	; () banked
  7363  0005FC  5FBB               	subwf	sprintf@width& (0+255),f,b
  7364  0005FE  0100               	movlb	0	; () banked
  7365  000600  51AF               	movf	(??_sprintf+1)& (0+255),w,b
  7366  000602  0100               	movlb	0	; () banked
  7367  000604  5BBC               	subwfb	(sprintf@width+1)& (0+255),f,b
  7368                           
  7369                           ;doprnt.c: 1143: if(
  7370                           ;doprnt.c: 1147: prec)
  7371  000606  0100               	movlb	0	; () banked
  7372  000608  51CA               	movf	sprintf@prec& (0+255),w,b
  7373  00060A  0100               	movlb	0	; () banked
  7374  00060C  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7375  00060E  B4D8               	btfsc	status,2,c
  7376  000610  D004               	goto	l5173
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;doprnt.c: 1148: width--;
  7380  000612  0100               	movlb	0	; () banked
  7381  000614  07BB               	decf	sprintf@width& (0+255),f,b
  7382  000616  A0D8               	btfss	status,0,c
  7383  000618  07BC               	decf	(sprintf@width+1)& (0+255),f,b
  7384  00061A                     l5173:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;doprnt.c: 1149: if(flag & 0x03)
  7388  00061A  0E03               	movlw	3
  7389  00061C  0100               	movlb	0	; () banked
  7390  00061E  15B9               	andwf	sprintf@flag& (0+255),w,b
  7391  000620  0100               	movlb	0	; () banked
  7392  000622  6FAE               	movwf	??_sprintf& (0+255),b
  7393  000624  0E00               	movlw	0
  7394  000626  0100               	movlb	0	; () banked
  7395  000628  15BA               	andwf	(sprintf@flag+1)& (0+255),w,b
  7396  00062A  0100               	movlb	0	; () banked
  7397  00062C  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  7398  00062E  0100               	movlb	0	; () banked
  7399  000630  51AE               	movf	??_sprintf& (0+255),w,b
  7400  000632  0100               	movlb	0	; () banked
  7401  000634  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
  7402  000636  B4D8               	btfsc	status,2,c
  7403  000638  D00E               	goto	l5183
  7404  00063A  D009               	goto	l5181
  7405  00063C                     l5177:
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7409  00063C  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7410  000640  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7411  000644  0E20               	movlw	32
  7412  000646  6EDF               	movwf	indf2,c
  7413                           
  7414                           ; BSR set to: 0
  7415  000648  0100               	movlb	0	; () banked
  7416  00064A  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7417  00064C  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7418  00064E                     l5181:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;doprnt.c: 1182: width--;
  7422  00064E  0100               	movlb	0	; () banked
  7423  000650  07BB               	decf	sprintf@width& (0+255),f,b
  7424  000652  A0D8               	btfss	status,0,c
  7425  000654  07BC               	decf	(sprintf@width+1)& (0+255),f,b
  7426  000656                     l5183:
  7427                           
  7428                           ; BSR set to: 0
  7429  000656  0100               	movlb	0	; () banked
  7430  000658  BFBC               	btfsc	(sprintf@width+1)& (0+255),7,b
  7431  00065A  D007               	goto	l5185
  7432  00065C  0100               	movlb	0	; () banked
  7433  00065E  51BC               	movf	(sprintf@width+1)& (0+255),w,b
  7434  000660  E1ED               	bnz	l5177
  7435  000662  0100               	movlb	0	; () banked
  7436  000664  05BB               	decf	sprintf@width& (0+255),w,b
  7437  000666  B0D8               	btfsc	status,0,c
  7438  000668  D7E9               	goto	l5177
  7439  00066A                     l5185:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;doprnt.c: 1183: }
  7443                           ;doprnt.c: 1188: if(flag & 0x03)
  7444  00066A  0E03               	movlw	3
  7445  00066C  0100               	movlb	0	; () banked
  7446  00066E  15B9               	andwf	sprintf@flag& (0+255),w,b
  7447  000670  0100               	movlb	0	; () banked
  7448  000672  6FAE               	movwf	??_sprintf& (0+255),b
  7449  000674  0E00               	movlw	0
  7450  000676  0100               	movlb	0	; () banked
  7451  000678  15BA               	andwf	(sprintf@flag+1)& (0+255),w,b
  7452  00067A  0100               	movlb	0	; () banked
  7453  00067C  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  7454  00067E  0100               	movlb	0	; () banked
  7455  000680  51AE               	movf	??_sprintf& (0+255),w,b
  7456  000682  0100               	movlb	0	; () banked
  7457  000684  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
  7458  000686  B4D8               	btfsc	status,2,c
  7459  000688  D055               	goto	l5199
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7463  00068A  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7464  00068E  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7465  000692  0E2D               	movlw	45
  7466  000694  D04D               	goto	L3
  7467  000696                     l5189:
  7468                           
  7469                           ; BSR set to: 0
  7470  000696  0100               	movlb	0	; () banked
  7471  000698  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7472  00069A  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;doprnt.c: 1195: }
  7476                           ;doprnt.c: 1196: while(c--) {
  7477  00069C  D04B               	goto	l5199
  7478  00069E                     l5191:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;doprnt.c: 1200: {
  7482                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7483  00069E  C0C1  F01A         	movff	sprintf@val,___lldiv@dividend
  7484  0006A2  C0C2  F01B         	movff	sprintf@val+1,___lldiv@dividend+1
  7485  0006A6  C0C3  F01C         	movff	sprintf@val+2,___lldiv@dividend+2
  7486  0006AA  C0C4  F01D         	movff	sprintf@val+3,___lldiv@dividend+3
  7487  0006AE  0100               	movlb	0	; () banked
  7488  0006B0  51CC               	movf	sprintf@c& (0+255),w,b
  7489  0006B2  0D04               	mullw	4
  7490  0006B4  0EF5               	movlw	low _dpowers
  7491  0006B6  24F3               	addwf	prodl,w,c
  7492  0006B8  6EF6               	movwf	tblptrl,c
  7493  0006BA  0E7E               	movlw	high _dpowers
  7494  0006BC  20F4               	addwfc	prodh,w,c
  7495  0006BE  6EF7               	movwf	tblptrh,c
  7496  0006C0                     	if	0	;There are less than 3 active tblptr bytes
  7497  0006C0                     	endif
  7498  0006C0  0009               	tblrd		*+
  7499  0006C2  CFF5 F01E          	movff	tablat,___lldiv@divisor
  7500  0006C6  0009               	tblrd		*+
  7501  0006C8  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  7502  0006CC  0009               	tblrd		*+
  7503  0006CE  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  7504  0006D2  000A               	tblrd		*-
  7505  0006D4  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  7506  0006D8  ECEE  F019         	call	___lldiv	;wreg free
  7507  0006DC  C01A  F0BD         	movff	?___lldiv,sprintf@tmpval
  7508  0006E0  C01B  F0BE         	movff	?___lldiv+1,sprintf@tmpval+1
  7509  0006E4  C01C  F0BF         	movff	?___lldiv+2,sprintf@tmpval+2
  7510  0006E8  C01D  F0C0         	movff	?___lldiv+3,sprintf@tmpval+3
  7511                           
  7512                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7513  0006EC  C0BD  F071         	movff	sprintf@tmpval,___llmod@dividend
  7514  0006F0  C0BE  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7515  0006F4  C0BF  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7516  0006F8  C0C0  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7517  0006FC  0E0A               	movlw	10
  7518  0006FE  0100               	movlb	0	; () banked
  7519  000700  6F75               	movwf	___llmod@divisor& (0+255),b
  7520  000702  0E00               	movlw	0
  7521  000704  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7522  000706  0E00               	movlw	0
  7523  000708  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7524  00070A  0E00               	movlw	0
  7525  00070C  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7526  00070E  ECD4  F018         	call	___llmod	;wreg free
  7527  000712  C071  F0BD         	movff	?___llmod,sprintf@tmpval
  7528  000716  C072  F0BE         	movff	?___llmod+1,sprintf@tmpval+1
  7529  00071A  C073  F0BF         	movff	?___llmod+2,sprintf@tmpval+2
  7530  00071E  C074  F0C0         	movff	?___llmod+3,sprintf@tmpval+3
  7531                           
  7532                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7533  000722  0100               	movlb	0	; () banked
  7534  000724  51BD               	movf	sprintf@tmpval& (0+255),w,b
  7535  000726  0F30               	addlw	48
  7536  000728  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7537  00072C  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7538  000730                     L3:
  7539  000730  6EDF               	movwf	indf2,c
  7540  000732  D7B1               	goto	l5189
  7541  000734                     l5199:
  7542                           
  7543                           ; BSR set to: 0
  7544  000734  0100               	movlb	0	; () banked
  7545  000736  07CC               	decf	sprintf@c& (0+255),f,b
  7546  000738  0100               	movlb	0	; () banked
  7547  00073A  29CC               	incf	sprintf@c& (0+255),w,b
  7548  00073C  B4D8               	btfsc	status,2,c
  7549  00073E  D00E               	goto	l5207
  7550  000740  D7AE               	goto	l5191
  7551  000742                     l5201:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7555  000742  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7556  000746  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7557  00074A  0E30               	movlw	48
  7558  00074C  6EDF               	movwf	indf2,c
  7559                           
  7560                           ; BSR set to: 0
  7561  00074E  0100               	movlb	0	; () banked
  7562  000750  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7563  000752  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;doprnt.c: 1209: exp--;
  7567  000754  0100               	movlb	0	; () banked
  7568  000756  07C5               	decf	sprintf@exp& (0+255),f,b
  7569  000758  A0D8               	btfss	status,0,c
  7570  00075A  07C6               	decf	(sprintf@exp+1)& (0+255),f,b
  7571  00075C                     l5207:
  7572                           
  7573                           ; BSR set to: 0
  7574  00075C  0100               	movlb	0	; () banked
  7575  00075E  BFC6               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7576  000760  D007               	goto	l5209
  7577  000762  0100               	movlb	0	; () banked
  7578  000764  51C6               	movf	(sprintf@exp+1)& (0+255),w,b
  7579  000766  E1ED               	bnz	l5201
  7580  000768  0100               	movlb	0	; () banked
  7581  00076A  05C5               	decf	sprintf@exp& (0+255),w,b
  7582  00076C  B0D8               	btfsc	status,0,c
  7583  00076E  D7E9               	goto	l5201
  7584  000770                     l5209:
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;doprnt.c: 1210: }
  7588                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7589  000770  0100               	movlb	0	; () banked
  7590  000772  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7591  000774  D00C               	goto	l566
  7592  000776  0100               	movlb	0	; () banked
  7593  000778  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  7594  00077A  E105               	bnz	u5410
  7595  00077C  0E09               	movlw	9
  7596  00077E  0100               	movlb	0	; () banked
  7597  000780  5DCA               	subwf	sprintf@prec& (0+255),w,b
  7598  000782  A0D8               	btfss	status,0,c
  7599  000784  D004               	goto	l566
  7600  000786                     u5410:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7604  000786  0E08               	movlw	8
  7605  000788  0100               	movlb	0	; () banked
  7606  00078A  6FCC               	movwf	sprintf@c& (0+255),b
  7607  00078C  D002               	goto	l5213
  7608  00078E                     l566:
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;doprnt.c: 1213: else
  7612                           ;doprnt.c: 1214: c = prec;
  7613  00078E  C0CA  F0CC         	movff	sprintf@prec,sprintf@c
  7614  000792                     l5213:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;doprnt.c: 1215: prec -= c;
  7618  000792  0100               	movlb	0	; () banked
  7619  000794  51CC               	movf	sprintf@c& (0+255),w,b
  7620  000796  0100               	movlb	0	; () banked
  7621  000798  5FCA               	subwf	sprintf@prec& (0+255),f,b
  7622  00079A  0E00               	movlw	0
  7623  00079C  0100               	movlb	0	; () banked
  7624  00079E  BFCC               	btfsc	sprintf@c& (0+255),7,b
  7625  0007A0  0EFF               	movlw	255
  7626  0007A2  0100               	movlb	0	; () banked
  7627  0007A4  5BCB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;doprnt.c: 1219: if(c)
  7631  0007A6  0100               	movlb	0	; () banked
  7632  0007A8  51CC               	movf	sprintf@c& (0+255),w,b
  7633  0007AA  0100               	movlb	0	; () banked
  7634  0007AC  B4D8               	btfsc	status,2,c
  7635  0007AE  D009               	goto	l5221
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7639  0007B0  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7640  0007B4  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7641  0007B8  0E2E               	movlw	46
  7642  0007BA  6EDF               	movwf	indf2,c
  7643                           
  7644                           ; BSR set to: 0
  7645  0007BC  0100               	movlb	0	; () banked
  7646  0007BE  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7647  0007C0  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7648  0007C2                     l5221:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7652  0007C2  0100               	movlb	0	; () banked
  7653  0007C4  51CC               	movf	sprintf@c& (0+255),w,b
  7654  0007C6  ECE3  F009         	call	_scale
  7655  0007CA  C084  F0B4         	movff	?_scale,_sprintf$2791
  7656  0007CE  C085  F0B5         	movff	?_scale+1,_sprintf$2791+1
  7657  0007D2  C086  F0B6         	movff	?_scale+2,_sprintf$2791+2
  7658                           
  7659                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7660  0007D6  C0C7  F078         	movff	sprintf@fval,___ftmul@f2
  7661  0007DA  C0C8  F079         	movff	sprintf@fval+1,___ftmul@f2+1
  7662  0007DE  C0C9  F07A         	movff	sprintf@fval+2,___ftmul@f2+2
  7663  0007E2  C0B4  F075         	movff	_sprintf$2791,___ftmul@f1
  7664  0007E6  C0B5  F076         	movff	_sprintf$2791+1,___ftmul@f1+1
  7665  0007EA  C0B6  F077         	movff	_sprintf$2791+2,___ftmul@f1+2
  7666  0007EE  EC63  F013         	call	___ftmul	;wreg free
  7667  0007F2  C075  F08B         	movff	?___ftmul,___fttol@f1
  7668  0007F6  C076  F08C         	movff	?___ftmul+1,___fttol@f1+1
  7669  0007FA  C077  F08D         	movff	?___ftmul+2,___fttol@f1+2
  7670  0007FE  EC12  F014         	call	___fttol	;wreg free
  7671  000802  C08B  F0C1         	movff	?___fttol,sprintf@val
  7672  000806  C08C  F0C2         	movff	?___fttol+1,sprintf@val+1
  7673  00080A  C08D  F0C3         	movff	?___fttol+2,sprintf@val+2
  7674  00080E  C08E  F0C4         	movff	?___fttol+3,sprintf@val+3
  7675                           
  7676                           ;doprnt.c: 1228: while(c--) {
  7677  000812  D074               	goto	l5235
  7678  000814                     l5225:
  7679                           
  7680                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7681  000814  C0C1  F01A         	movff	sprintf@val,___lldiv@dividend
  7682  000818  C0C2  F01B         	movff	sprintf@val+1,___lldiv@dividend+1
  7683  00081C  C0C3  F01C         	movff	sprintf@val+2,___lldiv@dividend+2
  7684  000820  C0C4  F01D         	movff	sprintf@val+3,___lldiv@dividend+3
  7685  000824  0100               	movlb	0	; () banked
  7686  000826  51CC               	movf	sprintf@c& (0+255),w,b
  7687  000828  0D04               	mullw	4
  7688  00082A  0EF5               	movlw	low _dpowers
  7689  00082C  24F3               	addwf	prodl,w,c
  7690  00082E  6EF6               	movwf	tblptrl,c
  7691  000830  0E7E               	movlw	high _dpowers
  7692  000832  20F4               	addwfc	prodh,w,c
  7693  000834  6EF7               	movwf	tblptrh,c
  7694  000836                     	if	0	;There are less than 3 active tblptr bytes
  7695  000836                     	endif
  7696  000836  0009               	tblrd		*+
  7697  000838  CFF5 F01E          	movff	tablat,___lldiv@divisor
  7698  00083C  0009               	tblrd		*+
  7699  00083E  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  7700  000842  0009               	tblrd		*+
  7701  000844  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  7702  000848  000A               	tblrd		*-
  7703  00084A  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  7704  00084E  ECEE  F019         	call	___lldiv	;wreg free
  7705  000852  C01A  F0BD         	movff	?___lldiv,sprintf@tmpval
  7706  000856  C01B  F0BE         	movff	?___lldiv+1,sprintf@tmpval+1
  7707  00085A  C01C  F0BF         	movff	?___lldiv+2,sprintf@tmpval+2
  7708  00085E  C01D  F0C0         	movff	?___lldiv+3,sprintf@tmpval+3
  7709                           
  7710                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7711  000862  C0BD  F071         	movff	sprintf@tmpval,___llmod@dividend
  7712  000866  C0BE  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7713  00086A  C0BF  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7714  00086E  C0C0  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7715  000872  0E0A               	movlw	10
  7716  000874  0100               	movlb	0	; () banked
  7717  000876  6F75               	movwf	___llmod@divisor& (0+255),b
  7718  000878  0E00               	movlw	0
  7719  00087A  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7720  00087C  0E00               	movlw	0
  7721  00087E  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7722  000880  0E00               	movlw	0
  7723  000882  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7724  000884  ECD4  F018         	call	___llmod	;wreg free
  7725  000888  C071  F0BD         	movff	?___llmod,sprintf@tmpval
  7726  00088C  C072  F0BE         	movff	?___llmod+1,sprintf@tmpval+1
  7727  000890  C073  F0BF         	movff	?___llmod+2,sprintf@tmpval+2
  7728  000894  C074  F0C0         	movff	?___llmod+3,sprintf@tmpval+3
  7729                           
  7730                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7731  000898  0100               	movlb	0	; () banked
  7732  00089A  51BD               	movf	sprintf@tmpval& (0+255),w,b
  7733  00089C  0F30               	addlw	48
  7734  00089E  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7735  0008A2  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7736  0008A6  6EDF               	movwf	indf2,c
  7737                           
  7738                           ; BSR set to: 0
  7739  0008A8  0100               	movlb	0	; () banked
  7740  0008AA  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7741  0008AC  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;doprnt.c: 1232: val %= dpowers[c];
  7745  0008AE  C0C1  F071         	movff	sprintf@val,___llmod@dividend
  7746  0008B2  C0C2  F072         	movff	sprintf@val+1,___llmod@dividend+1
  7747  0008B6  C0C3  F073         	movff	sprintf@val+2,___llmod@dividend+2
  7748  0008BA  C0C4  F074         	movff	sprintf@val+3,___llmod@dividend+3
  7749  0008BE  0100               	movlb	0	; () banked
  7750  0008C0  51CC               	movf	sprintf@c& (0+255),w,b
  7751  0008C2  0D04               	mullw	4
  7752  0008C4  0EF5               	movlw	low _dpowers
  7753  0008C6  24F3               	addwf	prodl,w,c
  7754  0008C8  6EF6               	movwf	tblptrl,c
  7755  0008CA  0E7E               	movlw	high _dpowers
  7756  0008CC  20F4               	addwfc	prodh,w,c
  7757  0008CE  6EF7               	movwf	tblptrh,c
  7758  0008D0                     	if	0	;There are less than 3 active tblptr bytes
  7759  0008D0                     	endif
  7760  0008D0  0009               	tblrd		*+
  7761  0008D2  CFF5 F075          	movff	tablat,___llmod@divisor
  7762  0008D6  0009               	tblrd		*+
  7763  0008D8  CFF5 F076          	movff	tablat,___llmod@divisor+1
  7764  0008DC  0009               	tblrd		*+
  7765  0008DE  CFF5 F077          	movff	tablat,___llmod@divisor+2
  7766  0008E2  000A               	tblrd		*-
  7767  0008E4  CFF5 F078          	movff	tablat,___llmod@divisor+3
  7768  0008E8  ECD4  F018         	call	___llmod	;wreg free
  7769  0008EC  C071  F0C1         	movff	?___llmod,sprintf@val
  7770  0008F0  C072  F0C2         	movff	?___llmod+1,sprintf@val+1
  7771  0008F4  C073  F0C3         	movff	?___llmod+2,sprintf@val+2
  7772  0008F8  C074  F0C4         	movff	?___llmod+3,sprintf@val+3
  7773  0008FC                     l5235:
  7774  0008FC  0100               	movlb	0	; () banked
  7775  0008FE  07CC               	decf	sprintf@c& (0+255),f,b
  7776  000900  0100               	movlb	0	; () banked
  7777  000902  29CC               	incf	sprintf@c& (0+255),w,b
  7778  000904  B4D8               	btfsc	status,2,c
  7779  000906  D00E               	goto	l5243
  7780  000908  D785               	goto	l5225
  7781  00090A                     l5237:
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7785  00090A  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  7786  00090E  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  7787  000912  0E30               	movlw	48
  7788  000914  6EDF               	movwf	indf2,c
  7789                           
  7790                           ; BSR set to: 0
  7791  000916  0100               	movlb	0	; () banked
  7792  000918  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  7793  00091A  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;doprnt.c: 1237: prec--;
  7797  00091C  0100               	movlb	0	; () banked
  7798  00091E  07CA               	decf	sprintf@prec& (0+255),f,b
  7799  000920  A0D8               	btfss	status,0,c
  7800  000922  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  7801  000924                     l5243:
  7802                           
  7803                           ; BSR set to: 0
  7804  000924  0100               	movlb	0	; () banked
  7805  000926  51CA               	movf	sprintf@prec& (0+255),w,b
  7806  000928  0100               	movlb	0	; () banked
  7807  00092A  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7808  00092C  B4D8               	btfsc	status,2,c
  7809  00092E  D169               	goto	l5325
  7810  000930  D7EC               	goto	l5237
  7811  000932                     l5245:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;doprnt.c: 1246: }
  7815                           ;doprnt.c: 1253: {
  7816                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7817  000932  C0B7  FFD9         	movff	sprintf@ap,fsr2l
  7818  000936  C0B8  FFDA         	movff	sprintf@ap+1,fsr2h
  7819  00093A  CFDE F0C1          	movff	postinc2,sprintf@val
  7820  00093E  CFDD F0C2          	movff	postdec2,sprintf@val+1
  7821  000942  0100               	movlb	0	; () banked
  7822  000944  0E00               	movlw	0
  7823  000946  BFC2               	btfsc	(sprintf@val+1)& (0+255),7,b
  7824  000948  0EFF               	movlw	-1
  7825  00094A  6FC3               	movwf	(sprintf@val+2)& (0+255),b
  7826  00094C  6FC4               	movwf	(sprintf@val+3)& (0+255),b
  7827                           
  7828                           ; BSR set to: 0
  7829  00094E  0E02               	movlw	2
  7830  000950  0100               	movlb	0	; () banked
  7831  000952  27B7               	addwf	sprintf@ap& (0+255),f,b
  7832  000954  0E00               	movlw	0
  7833  000956  23B8               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;doprnt.c: 1261: if((long)val < 0) {
  7837  000958  0100               	movlb	0	; () banked
  7838  00095A  AFC4               	btfss	(sprintf@val+3)& (0+255),7,b
  7839  00095C  D00C               	goto	l5255
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;doprnt.c: 1262: flag |= 0x03;
  7843  00095E  0E03               	movlw	3
  7844  000960  0100               	movlb	0	; () banked
  7845  000962  13B9               	iorwf	sprintf@flag& (0+255),f,b
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;doprnt.c: 1263: val = -val;
  7849  000964  0100               	movlb	0	; () banked
  7850  000966  1FC4               	comf	(sprintf@val+3)& (0+255),f,b
  7851  000968  1FC3               	comf	(sprintf@val+2)& (0+255),f,b
  7852  00096A  1FC2               	comf	(sprintf@val+1)& (0+255),f,b
  7853  00096C  6DC1               	negf	sprintf@val& (0+255),b
  7854  00096E  0E00               	movlw	0
  7855  000970  23C2               	addwfc	(sprintf@val+1)& (0+255),f,b
  7856  000972  23C3               	addwfc	(sprintf@val+2)& (0+255),f,b
  7857  000974  23C4               	addwfc	(sprintf@val+3)& (0+255),f,b
  7858  000976                     l5255:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;doprnt.c: 1264: }
  7862                           ;doprnt.c: 1266: }
  7863                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7864  000976  0100               	movlb	0	; () banked
  7865  000978  51CA               	movf	sprintf@prec& (0+255),w,b
  7866  00097A  0100               	movlb	0	; () banked
  7867  00097C  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7868  00097E  A4D8               	btfss	status,2,c
  7869  000980  D00D               	goto	l5261
  7870                           
  7871                           ; BSR set to: 0
  7872  000982  0100               	movlb	0	; () banked
  7873  000984  51C1               	movf	sprintf@val& (0+255),w,b
  7874  000986  0100               	movlb	0	; () banked
  7875  000988  11C2               	iorwf	(sprintf@val+1)& (0+255),w,b
  7876  00098A  0100               	movlb	0	; () banked
  7877  00098C  11C3               	iorwf	(sprintf@val+2)& (0+255),w,b
  7878  00098E  0100               	movlb	0	; () banked
  7879  000990  11C4               	iorwf	(sprintf@val+3)& (0+255),w,b
  7880  000992  A4D8               	btfss	status,2,c
  7881  000994  D003               	goto	l5261
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;doprnt.c: 1291: prec++;
  7885  000996  0100               	movlb	0	; () banked
  7886  000998  4BCA               	infsnz	sprintf@prec& (0+255),f,b
  7887  00099A  2BCB               	incf	(sprintf@prec+1)& (0+255),f,b
  7888  00099C                     l5261:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7892  00099C  0E01               	movlw	1
  7893  00099E  0100               	movlb	0	; () banked
  7894  0009A0  6FCC               	movwf	sprintf@c& (0+255),b
  7895  0009A2                     l5263:
  7896                           
  7897                           ; BSR set to: 0
  7898  0009A2  0E0A               	movlw	10
  7899  0009A4  0100               	movlb	0	; () banked
  7900  0009A6  19CC               	xorwf	sprintf@c& (0+255),w,b
  7901  0009A8  B4D8               	btfsc	status,2,c
  7902  0009AA  D01E               	goto	l5275
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;doprnt.c: 1306: if(val < dpowers[c])
  7906                           
  7907                           ; BSR set to: 0
  7908                           
  7909                           ; BSR set to: 0
  7910  0009AC  0100               	movlb	0	; () banked
  7911  0009AE  51CC               	movf	sprintf@c& (0+255),w,b
  7912  0009B0  0D04               	mullw	4
  7913  0009B2  0EF5               	movlw	low _dpowers
  7914  0009B4  24F3               	addwf	prodl,w,c
  7915  0009B6  6EF6               	movwf	tblptrl,c
  7916  0009B8  0E7E               	movlw	high _dpowers
  7917  0009BA  20F4               	addwfc	prodh,w,c
  7918  0009BC  6EF7               	movwf	tblptrh,c
  7919  0009BE                     	if	0	;There are less than 3 active tblptr bytes
  7920  0009BE                     	endif
  7921  0009BE  0009               	tblrd		*+
  7922  0009C0  50F5               	movf	tablat,w,c
  7923  0009C2  0100               	movlb	0	; () banked
  7924  0009C4  5DC1               	subwf	sprintf@val& (0+255),w,b
  7925  0009C6  0009               	tblrd		*+
  7926  0009C8  50F5               	movf	tablat,w,c
  7927  0009CA  0100               	movlb	0	; () banked
  7928  0009CC  59C2               	subwfb	(sprintf@val+1)& (0+255),w,b
  7929  0009CE  0009               	tblrd		*+
  7930  0009D0  50F5               	movf	tablat,w,c
  7931  0009D2  0100               	movlb	0	; () banked
  7932  0009D4  59C3               	subwfb	(sprintf@val+2)& (0+255),w,b
  7933  0009D6  0009               	tblrd		*+
  7934  0009D8  50F5               	movf	tablat,w,c
  7935  0009DA  0100               	movlb	0	; () banked
  7936  0009DC  59C4               	subwfb	(sprintf@val+3)& (0+255),w,b
  7937  0009DE  A0D8               	btfss	status,0,c
  7938  0009E0  D003               	goto	l5275
  7939                           
  7940                           ; BSR set to: 0
  7941                           
  7942                           ; BSR set to: 0
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;doprnt.c: 1307: break;
  7946  0009E2  0100               	movlb	0	; () banked
  7947  0009E4  2BCC               	incf	sprintf@c& (0+255),f,b
  7948  0009E6  D7DD               	goto	l5263
  7949  0009E8                     l5275:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;doprnt.c: 1339: if(c < prec)
  7953  0009E8  0E80               	movlw	128
  7954  0009EA  0100               	movlb	0	; () banked
  7955  0009EC  BFCC               	btfsc	sprintf@c& (0+255),7,b
  7956  0009EE  0E7F               	movlw	127
  7957  0009F0  0100               	movlb	0	; () banked
  7958  0009F2  6FAE               	movwf	??_sprintf& (0+255),b
  7959  0009F4  0100               	movlb	0	; () banked
  7960  0009F6  51CA               	movf	sprintf@prec& (0+255),w,b
  7961  0009F8  0100               	movlb	0	; () banked
  7962  0009FA  5DCC               	subwf	sprintf@c& (0+255),w,b
  7963  0009FC  0100               	movlb	0	; () banked
  7964  0009FE  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  7965  000A00  0A80               	xorlw	128
  7966  000A02  0100               	movlb	0	; () banked
  7967  000A04  59AE               	subwfb	??_sprintf& (0+255),w,b
  7968  000A06  B0D8               	btfsc	status,0,c
  7969  000A08  D003               	goto	l5279
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;doprnt.c: 1340: c = prec;
  7973  000A0A  C0CA  F0CC         	movff	sprintf@prec,sprintf@c
  7974  000A0E  D018               	goto	l5283
  7975  000A10                     l5279:
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 1341: else if(prec < c)
  7979  000A10  0100               	movlb	0	; () banked
  7980  000A12  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  7981  000A14  0A80               	xorlw	128
  7982  000A16  0100               	movlb	0	; () banked
  7983  000A18  6FAE               	movwf	??_sprintf& (0+255),b
  7984  000A1A  0100               	movlb	0	; () banked
  7985  000A1C  51CC               	movf	sprintf@c& (0+255),w,b
  7986  000A1E  0100               	movlb	0	; () banked
  7987  000A20  5DCA               	subwf	sprintf@prec& (0+255),w,b
  7988  000A22  0E80               	movlw	128
  7989  000A24  0100               	movlb	0	; () banked
  7990  000A26  BFCC               	btfsc	sprintf@c& (0+255),7,b
  7991  000A28  0E7F               	movlw	127
  7992  000A2A  0100               	movlb	0	; () banked
  7993  000A2C  59AE               	subwfb	??_sprintf& (0+255),w,b
  7994  000A2E  B0D8               	btfsc	status,0,c
  7995  000A30  D007               	goto	l5283
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;doprnt.c: 1342: prec = c;
  7999  000A32  0100               	movlb	0	; () banked
  8000  000A34  51CC               	movf	sprintf@c& (0+255),w,b
  8001  000A36  0100               	movlb	0	; () banked
  8002  000A38  6FCA               	movwf	sprintf@prec& (0+255),b
  8003  000A3A  6BCB               	clrf	(sprintf@prec+1)& (0+255),b
  8004  000A3C  BFCA               	btfsc	sprintf@prec& (0+255),7,b
  8005  000A3E  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  8006  000A40                     l5283:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8010  000A40  0100               	movlb	0	; () banked
  8011  000A42  51BB               	movf	sprintf@width& (0+255),w,b
  8012  000A44  0100               	movlb	0	; () banked
  8013  000A46  11BC               	iorwf	(sprintf@width+1)& (0+255),w,b
  8014  000A48  B4D8               	btfsc	status,2,c
  8015  000A4A  D014               	goto	l5289
  8016                           
  8017                           ; BSR set to: 0
  8018  000A4C  0E03               	movlw	3
  8019  000A4E  0100               	movlb	0	; () banked
  8020  000A50  15B9               	andwf	sprintf@flag& (0+255),w,b
  8021  000A52  0100               	movlb	0	; () banked
  8022  000A54  6FAE               	movwf	??_sprintf& (0+255),b
  8023  000A56  0E00               	movlw	0
  8024  000A58  0100               	movlb	0	; () banked
  8025  000A5A  15BA               	andwf	(sprintf@flag+1)& (0+255),w,b
  8026  000A5C  0100               	movlb	0	; () banked
  8027  000A5E  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  8028  000A60  0100               	movlb	0	; () banked
  8029  000A62  51AE               	movf	??_sprintf& (0+255),w,b
  8030  000A64  0100               	movlb	0	; () banked
  8031  000A66  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
  8032  000A68  B4D8               	btfsc	status,2,c
  8033  000A6A  D004               	goto	l5289
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;doprnt.c: 1346: width--;
  8037  000A6C  0100               	movlb	0	; () banked
  8038  000A6E  07BB               	decf	sprintf@width& (0+255),f,b
  8039  000A70  A0D8               	btfss	status,0,c
  8040  000A72  07BC               	decf	(sprintf@width+1)& (0+255),f,b
  8041  000A74                     l5289:
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8045  000A74  0100               	movlb	0	; () banked
  8046  000A76  ADBA               	btfss	(sprintf@flag+1)& (0+255),6,b
  8047  000A78  D01E               	goto	l5297
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;doprnt.c: 1349: if(width > prec)
  8051  000A7A  0100               	movlb	0	; () banked
  8052  000A7C  51BB               	movf	sprintf@width& (0+255),w,b
  8053  000A7E  0100               	movlb	0	; () banked
  8054  000A80  5DCA               	subwf	sprintf@prec& (0+255),w,b
  8055  000A82  0100               	movlb	0	; () banked
  8056  000A84  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  8057  000A86  0A80               	xorlw	128
  8058  000A88  0100               	movlb	0	; () banked
  8059  000A8A  6FAE               	movwf	??_sprintf& (0+255),b
  8060  000A8C  0100               	movlb	0	; () banked
  8061  000A8E  51BC               	movf	(sprintf@width+1)& (0+255),w,b
  8062  000A90  0A80               	xorlw	128
  8063  000A92  0100               	movlb	0	; () banked
  8064  000A94  59AE               	subwfb	??_sprintf& (0+255),w,b
  8065  000A96  B0D8               	btfsc	status,0,c
  8066  000A98  D009               	goto	l5295
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;doprnt.c: 1350: width -= prec;
  8070  000A9A  0100               	movlb	0	; () banked
  8071  000A9C  51CA               	movf	sprintf@prec& (0+255),w,b
  8072  000A9E  0100               	movlb	0	; () banked
  8073  000AA0  5FBB               	subwf	sprintf@width& (0+255),f,b
  8074  000AA2  0100               	movlb	0	; () banked
  8075  000AA4  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  8076  000AA6  0100               	movlb	0	; () banked
  8077  000AA8  5BBC               	subwfb	(sprintf@width+1)& (0+255),f,b
  8078  000AAA  D005               	goto	l5297
  8079  000AAC                     l5295:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;doprnt.c: 1351: else
  8083                           ;doprnt.c: 1352: width = 0;
  8084  000AAC  0E00               	movlw	0
  8085  000AAE  0100               	movlb	0	; () banked
  8086  000AB0  6FBC               	movwf	(sprintf@width+1)& (0+255),b
  8087  000AB2  0E00               	movlw	0
  8088  000AB4  6FBB               	movwf	sprintf@width& (0+255),b
  8089  000AB6                     l5297:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;doprnt.c: 1353: }
  8093                           ;doprnt.c: 1381: if(width > c)
  8094  000AB6  0E80               	movlw	128
  8095  000AB8  0100               	movlb	0	; () banked
  8096  000ABA  BFCC               	btfsc	sprintf@c& (0+255),7,b
  8097  000ABC  0E7F               	movlw	127
  8098  000ABE  0100               	movlb	0	; () banked
  8099  000AC0  6FAE               	movwf	??_sprintf& (0+255),b
  8100  000AC2  0100               	movlb	0	; () banked
  8101  000AC4  51BB               	movf	sprintf@width& (0+255),w,b
  8102  000AC6  0100               	movlb	0	; () banked
  8103  000AC8  5DCC               	subwf	sprintf@c& (0+255),w,b
  8104  000ACA  0100               	movlb	0	; () banked
  8105  000ACC  51BC               	movf	(sprintf@width+1)& (0+255),w,b
  8106  000ACE  0A80               	xorlw	128
  8107  000AD0  0100               	movlb	0	; () banked
  8108  000AD2  59AE               	subwfb	??_sprintf& (0+255),w,b
  8109  000AD4  B0D8               	btfsc	status,0,c
  8110  000AD6  D00B               	goto	l5301
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;doprnt.c: 1382: width -= c;
  8114  000AD8  0100               	movlb	0	; () banked
  8115  000ADA  51CC               	movf	sprintf@c& (0+255),w,b
  8116  000ADC  0100               	movlb	0	; () banked
  8117  000ADE  5FBB               	subwf	sprintf@width& (0+255),f,b
  8118  000AE0  0E00               	movlw	0
  8119  000AE2  0100               	movlb	0	; () banked
  8120  000AE4  BFCC               	btfsc	sprintf@c& (0+255),7,b
  8121  000AE6  0EFF               	movlw	255
  8122  000AE8  0100               	movlb	0	; () banked
  8123  000AEA  5BBC               	subwfb	(sprintf@width+1)& (0+255),f,b
  8124  000AEC  D005               	goto	l5303
  8125  000AEE                     l5301:
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;doprnt.c: 1383: else
  8129                           ;doprnt.c: 1384: width = 0;
  8130  000AEE  0E00               	movlw	0
  8131  000AF0  0100               	movlb	0	; () banked
  8132  000AF2  6FBC               	movwf	(sprintf@width+1)& (0+255),b
  8133  000AF4  0E00               	movlw	0
  8134  000AF6  6FBB               	movwf	sprintf@width& (0+255),b
  8135  000AF8                     l5303:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;doprnt.c: 1422: {
  8139                           ;doprnt.c: 1424: if(width
  8140                           ;doprnt.c: 1428: )
  8141  000AF8  0100               	movlb	0	; () banked
  8142  000AFA  51BB               	movf	sprintf@width& (0+255),w,b
  8143  000AFC  0100               	movlb	0	; () banked
  8144  000AFE  11BC               	iorwf	(sprintf@width+1)& (0+255),w,b
  8145  000B00  B4D8               	btfsc	status,2,c
  8146  000B02  D013               	goto	l5311
  8147  000B04                     l5305:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8151  000B04  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  8152  000B08  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  8153  000B0C  0E20               	movlw	32
  8154  000B0E  6EDF               	movwf	indf2,c
  8155                           
  8156                           ; BSR set to: 0
  8157  000B10  0100               	movlb	0	; () banked
  8158  000B12  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  8159  000B14  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;doprnt.c: 1431: while(--width);
  8163  000B16  0100               	movlb	0	; () banked
  8164  000B18  07BB               	decf	sprintf@width& (0+255),f,b
  8165  000B1A  A0D8               	btfss	status,0,c
  8166  000B1C  07BC               	decf	(sprintf@width+1)& (0+255),f,b
  8167  000B1E  0100               	movlb	0	; () banked
  8168  000B20  51BB               	movf	sprintf@width& (0+255),w,b
  8169  000B22  0100               	movlb	0	; () banked
  8170  000B24  11BC               	iorwf	(sprintf@width+1)& (0+255),w,b
  8171  000B26  A4D8               	btfss	status,2,c
  8172  000B28  D7ED               	goto	l5305
  8173  000B2A                     l5311:
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;doprnt.c: 1438: if(flag & 0x03)
  8177  000B2A  0E03               	movlw	3
  8178  000B2C  0100               	movlb	0	; () banked
  8179  000B2E  15B9               	andwf	sprintf@flag& (0+255),w,b
  8180  000B30  0100               	movlb	0	; () banked
  8181  000B32  6FAE               	movwf	??_sprintf& (0+255),b
  8182  000B34  0E00               	movlw	0
  8183  000B36  0100               	movlb	0	; () banked
  8184  000B38  15BA               	andwf	(sprintf@flag+1)& (0+255),w,b
  8185  000B3A  0100               	movlb	0	; () banked
  8186  000B3C  6FAF               	movwf	(??_sprintf+1)& (0+255),b
  8187  000B3E  0100               	movlb	0	; () banked
  8188  000B40  51AE               	movf	??_sprintf& (0+255),w,b
  8189  000B42  0100               	movlb	0	; () banked
  8190  000B44  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
  8191  000B46  B4D8               	btfsc	status,2,c
  8192  000B48  D051               	goto	l5323
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8196  000B4A  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  8197  000B4E  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  8198  000B52  0E2D               	movlw	45
  8199  000B54  6EDF               	movwf	indf2,c
  8200  000B56  D047               	goto	l5321
  8201  000B58                     l5317:
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;doprnt.c: 1478: {
  8205                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8206  000B58  C0CA  F0AE         	movff	sprintf@prec,??_sprintf
  8207  000B5C  C0CB  F0AF         	movff	sprintf@prec+1,??_sprintf+1
  8208  000B60  0100               	movlb	0	; () banked
  8209  000B62  90D8               	bcf	status,0,c
  8210  000B64  37AE               	rlcf	??_sprintf& (0+255),f,b
  8211  000B66  37AF               	rlcf	(??_sprintf+1)& (0+255),f,b
  8212  000B68  0100               	movlb	0	; () banked
  8213  000B6A  90D8               	bcf	status,0,c
  8214  000B6C  37AE               	rlcf	??_sprintf& (0+255),f,b
  8215  000B6E  37AF               	rlcf	(??_sprintf+1)& (0+255),f,b
  8216  000B70  0EF5               	movlw	low _dpowers
  8217  000B72  0100               	movlb	0	; () banked
  8218  000B74  25AE               	addwf	??_sprintf& (0+255),w,b
  8219  000B76  6EF6               	movwf	tblptrl,c
  8220  000B78  0E7E               	movlw	high _dpowers
  8221  000B7A  21AF               	addwfc	(??_sprintf+1)& (0+255),w,b
  8222  000B7C  6EF7               	movwf	tblptrh,c
  8223  000B7E                     	if	0	;There are less than 3 active tblptr bytes
  8224  000B7E                     	endif
  8225  000B7E  0009               	tblrd		*+
  8226  000B80  CFF5 F01E          	movff	tablat,___lldiv@divisor
  8227  000B84  0009               	tblrd		*+
  8228  000B86  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  8229  000B8A  0009               	tblrd		*+
  8230  000B8C  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  8231  000B90  000A               	tblrd		*-
  8232  000B92  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  8233  000B96  C0C1  F01A         	movff	sprintf@val,___lldiv@dividend
  8234  000B9A  C0C2  F01B         	movff	sprintf@val+1,___lldiv@dividend+1
  8235  000B9E  C0C3  F01C         	movff	sprintf@val+2,___lldiv@dividend+2
  8236  000BA2  C0C4  F01D         	movff	sprintf@val+3,___lldiv@dividend+3
  8237  000BA6  ECEE  F019         	call	___lldiv	;wreg free
  8238  000BAA  C01A  F071         	movff	?___lldiv,___llmod@dividend
  8239  000BAE  C01B  F072         	movff	?___lldiv+1,___llmod@dividend+1
  8240  000BB2  C01C  F073         	movff	?___lldiv+2,___llmod@dividend+2
  8241  000BB6  C01D  F074         	movff	?___lldiv+3,___llmod@dividend+3
  8242  000BBA  0E0A               	movlw	10
  8243  000BBC  0100               	movlb	0	; () banked
  8244  000BBE  6F75               	movwf	___llmod@divisor& (0+255),b
  8245  000BC0  0E00               	movlw	0
  8246  000BC2  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8247  000BC4  0E00               	movlw	0
  8248  000BC6  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8249  000BC8  0E00               	movlw	0
  8250  000BCA  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8251  000BCC  ECD4  F018         	call	___llmod	;wreg free
  8252  000BD0  0100               	movlb	0	; () banked
  8253  000BD2  5171               	movf	?___llmod& (0+255),w,b
  8254  000BD4  0F30               	addlw	48
  8255  000BD6  0100               	movlb	0	; () banked
  8256  000BD8  6FCC               	movwf	sprintf@c& (0+255),b
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;doprnt.c: 1523: }
  8260                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8261  000BDA  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  8262  000BDE  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  8263  000BE2  C0CC  FFDF         	movff	sprintf@c,indf2
  8264  000BE6                     l5321:
  8265                           
  8266                           ; BSR set to: 0
  8267  000BE6  0100               	movlb	0	; () banked
  8268  000BE8  4BA0               	infsnz	sprintf@sp& (0+255),f,b
  8269  000BEA  2BA1               	incf	(sprintf@sp+1)& (0+255),f,b
  8270  000BEC                     l5323:
  8271                           
  8272                           ; BSR set to: 0
  8273  000BEC  0100               	movlb	0	; () banked
  8274  000BEE  07CA               	decf	sprintf@prec& (0+255),f,b
  8275  000BF0  A0D8               	btfss	status,0,c
  8276  000BF2  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  8277  000BF4  0100               	movlb	0	; () banked
  8278  000BF6  29CA               	incf	sprintf@prec& (0+255),w,b
  8279  000BF8  E1AF               	bnz	l5317
  8280  000BFA  0100               	movlb	0	; () banked
  8281  000BFC  29CB               	incf	(sprintf@prec+1)& (0+255),w,b
  8282  000BFE  A4D8               	btfss	status,2,c
  8283  000C00  D7AB               	goto	l5317
  8284  000C02                     l5325:
  8285                           
  8286                           ; BSR set to: 0
  8287  000C02  C0A2  FFF6         	movff	sprintf@f,tblptrl
  8288  000C06  C0A3  FFF7         	movff	sprintf@f+1,tblptrh
  8289  000C0A  0100               	movlb	0	; () banked
  8290  000C0C  4BA2               	infsnz	sprintf@f& (0+255),f,b
  8291  000C0E  2BA3               	incf	(sprintf@f+1)& (0+255),f,b
  8292  000C10                     	if	0	;tblptru may be non-zero
  8293  000C10                     	endif
  8294  000C10                     	if	0	;tblptru may be non-zero
  8295  000C10                     	endif
  8296  000C10  0008               	tblrd		*
  8297  000C12  CFF5 F0CC          	movff	tablat,sprintf@c
  8298  000C16  0100               	movlb	0	; () banked
  8299  000C18  51CC               	movf	sprintf@c& (0+255),w,b
  8300  000C1A  A4D8               	btfss	status,2,c
  8301  000C1C  EF5D  F000         	goto	l5039
  8302  000C20                     l5327:
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;doprnt.c: 1538: *sp = 0;
  8306  000C20  C0A0  FFD9         	movff	sprintf@sp,fsr2l
  8307  000C24  C0A1  FFDA         	movff	sprintf@sp+1,fsr2h
  8308  000C28  0E00               	movlw	0
  8309  000C2A  6EDF               	movwf	indf2,c
  8310  000C2C  0012               	return	
  8311  000C2E                     __end_of_sprintf:
  8312                           	opt stack 0
  8313                           tblptru	equ	0xFF8
  8314                           tblptrh	equ	0xFF7
  8315                           tblptrl	equ	0xFF6
  8316                           tablat	equ	0xFF5
  8317                           prodh	equ	0xFF4
  8318                           prodl	equ	0xFF3
  8319                           intcon	equ	0xFF2
  8320                           indf0	equ	0xFEF
  8321                           postinc0	equ	0xFEE
  8322                           fsr0h	equ	0xFEA
  8323                           fsr0l	equ	0xFE9
  8324                           wreg	equ	0xFE8
  8325                           indf1	equ	0xFE7
  8326                           postdec1	equ	0xFE5
  8327                           fsr1h	equ	0xFE2
  8328                           fsr1l	equ	0xFE1
  8329                           indf2	equ	0xFDF
  8330                           postinc2	equ	0xFDE
  8331                           postdec2	equ	0xFDD
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8
  8335                           
  8336 ;; *************** function _scale *****************
  8337 ;; Defined at:
  8338 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  scl             1    wreg     char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  scl             1   42[BANK0 ] char 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  3   36[BANK0 ] char 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8352 ;;      Params:         0       3       0       0       0       0       0
  8353 ;;      Locals:         0       4       0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0
  8355 ;;      Totals:         0       7       0       0       0       0       0
  8356 ;;Total ram usage:        7 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    4
  8359 ;; This function calls:
  8360 ;;		___awdiv
  8361 ;;		___awmod
  8362 ;;		___ftmul
  8363 ;;		___wmul
  8364 ;; This function is called by:
  8365 ;;		_sprintf
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text32
  8370  0013C6                     __ptext32:
  8371                           	opt stack 0
  8372  0013C6                     _scale:
  8373                           	opt stack 23
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;incstack = 0
  8377                           ;scale@scl stored from wreg
  8378  0013C6  0100               	movlb	0	; () banked
  8379  0013C8  6F8A               	movwf	scale@scl& (0+255),b
  8380                           
  8381                           ;doprnt.c: 428: if(scl < 0) {
  8382  0013CA  0100               	movlb	0	; () banked
  8383  0013CC  AF8A               	btfss	scale@scl& (0+255),7,b
  8384  0013CE  D119               	goto	l4863
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;doprnt.c: 429: scl = -scl;
  8388  0013D0  0100               	movlb	0	; () banked
  8389  0013D2  6D8A               	negf	scale@scl& (0+255),b
  8390                           
  8391                           ;doprnt.c: 430: if(scl>=110)
  8392  0013D4  0100               	movlb	0	; () banked
  8393  0013D6  518A               	movf	scale@scl& (0+255),w,b
  8394  0013D8  0A80               	xorlw	128
  8395  0013DA  0F12               	addlw	-238
  8396  0013DC  A0D8               	btfss	status,0,c
  8397  0013DE  D0A1               	goto	l4853
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8401  0013E0  0E00               	movlw	0
  8402  0013E2  0100               	movlb	0	; () banked
  8403  0013E4  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8404  0013E6  0E03               	movlw	3
  8405  0013E8  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8406  0013EA  0E00               	movlw	0
  8407  0013EC  6E23               	movwf	___awdiv@divisor+1,c
  8408  0013EE  0E0A               	movlw	10
  8409  0013F0  6E22               	movwf	___awdiv@divisor,c
  8410  0013F2  0E00               	movlw	0
  8411  0013F4  6E1D               	movwf	___awmod@divisor+1,c
  8412  0013F6  0E64               	movlw	100
  8413  0013F8  6E1C               	movwf	___awmod@divisor,c
  8414  0013FA  0100               	movlb	0	; () banked
  8415  0013FC  518A               	movf	scale@scl& (0+255),w,b
  8416  0013FE  6E1A               	movwf	___awmod@dividend,c
  8417  001400  6A1B               	clrf	___awmod@dividend+1,c
  8418  001402  BE1A               	btfsc	___awmod@dividend,7,c
  8419  001404  061B               	decf	___awmod@dividend+1,f,c
  8420  001406  EC2F  F01A         	call	___awmod	;wreg free
  8421  00140A  C01A  F020         	movff	?___awmod,___awdiv@dividend
  8422  00140E  C01B  F021         	movff	?___awmod+1,___awdiv@dividend+1
  8423  001412  ECAC  F019         	call	___awdiv	;wreg free
  8424  001416  0E09               	movlw	9
  8425  001418  2420               	addwf	?___awdiv,w,c
  8426  00141A  0100               	movlb	0	; () banked
  8427  00141C  6F71               	movwf	___wmul@multiplier& (0+255),b
  8428  00141E  0E00               	movlw	0
  8429  001420  2021               	addwfc	?___awdiv+1,w,c
  8430  001422  0100               	movlb	0	; () banked
  8431  001424  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8432  001426  EC32  F01C         	call	___wmul	;wreg free
  8433  00142A  0E44               	movlw	low __npowers_
  8434  00142C  0100               	movlb	0	; () banked
  8435  00142E  2571               	addwf	?___wmul& (0+255),w,b
  8436  001430  6EF6               	movwf	tblptrl,c
  8437  001432  0E7F               	movlw	high __npowers_
  8438  001434  0100               	movlb	0	; () banked
  8439  001436  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8440  001438  6EF7               	movwf	tblptrh,c
  8441  00143A                     	if	0	;There are less than 3 active tblptr bytes
  8442  00143A                     	endif
  8443  00143A  0009               	tblrd		*+
  8444  00143C  CFF5 F078          	movff	tablat,___ftmul@f2
  8445  001440  0009               	tblrd		*+
  8446  001442  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8447  001446  000A               	tblrd		*-
  8448  001448  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8449  00144C  0E00               	movlw	0
  8450  00144E  6E23               	movwf	___awdiv@divisor+1,c
  8451  001450  0E64               	movlw	100
  8452  001452  6E22               	movwf	___awdiv@divisor,c
  8453  001454  0100               	movlb	0	; () banked
  8454  001456  518A               	movf	scale@scl& (0+255),w,b
  8455  001458  6E20               	movwf	___awdiv@dividend,c
  8456  00145A  6A21               	clrf	___awdiv@dividend+1,c
  8457  00145C  BE20               	btfsc	___awdiv@dividend,7,c
  8458  00145E  0621               	decf	___awdiv@dividend+1,f,c
  8459  001460  ECAC  F019         	call	___awdiv	;wreg free
  8460  001464  0E12               	movlw	18
  8461  001466  2420               	addwf	?___awdiv,w,c
  8462  001468  0100               	movlb	0	; () banked
  8463  00146A  6F71               	movwf	___wmul@multiplier& (0+255),b
  8464  00146C  0E00               	movlw	0
  8465  00146E  2021               	addwfc	?___awdiv+1,w,c
  8466  001470  0100               	movlb	0	; () banked
  8467  001472  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8468  001474  0E00               	movlw	0
  8469  001476  0100               	movlb	0	; () banked
  8470  001478  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8471  00147A  0E03               	movlw	3
  8472  00147C  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8473  00147E  EC32  F01C         	call	___wmul	;wreg free
  8474  001482  0E44               	movlw	low __npowers_
  8475  001484  0100               	movlb	0	; () banked
  8476  001486  2571               	addwf	?___wmul& (0+255),w,b
  8477  001488  6EF6               	movwf	tblptrl,c
  8478  00148A  0E7F               	movlw	high __npowers_
  8479  00148C  0100               	movlb	0	; () banked
  8480  00148E  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8481  001490  6EF7               	movwf	tblptrh,c
  8482  001492                     	if	0	;There are less than 3 active tblptr bytes
  8483  001492                     	endif
  8484  001492  0009               	tblrd		*+
  8485  001494  CFF5 F075          	movff	tablat,___ftmul@f1
  8486  001498  0009               	tblrd		*+
  8487  00149A  CFF5 F076          	movff	tablat,___ftmul@f1+1
  8488  00149E  000A               	tblrd		*-
  8489  0014A0  CFF5 F077          	movff	tablat,___ftmul@f1+2
  8490  0014A4  EC63  F013         	call	___ftmul	;wreg free
  8491  0014A8  C075  F087         	movff	?___ftmul,_scale$2790
  8492  0014AC  C076  F088         	movff	?___ftmul+1,_scale$2790+1
  8493  0014B0  C077  F089         	movff	?___ftmul+2,_scale$2790+2
  8494                           
  8495                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8496  0014B4  C087  F075         	movff	_scale$2790,___ftmul@f1
  8497  0014B8  C088  F076         	movff	_scale$2790+1,___ftmul@f1+1
  8498  0014BC  C089  F077         	movff	_scale$2790+2,___ftmul@f1+2
  8499  0014C0  0E00               	movlw	0
  8500  0014C2  0100               	movlb	0	; () banked
  8501  0014C4  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8502  0014C6  0E03               	movlw	3
  8503  0014C8  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8504  0014CA  0E00               	movlw	0
  8505  0014CC  6E1D               	movwf	___awmod@divisor+1,c
  8506  0014CE  0E0A               	movlw	10
  8507  0014D0  6E1C               	movwf	___awmod@divisor,c
  8508  0014D2  0100               	movlb	0	; () banked
  8509  0014D4  518A               	movf	scale@scl& (0+255),w,b
  8510  0014D6  6E1A               	movwf	___awmod@dividend,c
  8511  0014D8  6A1B               	clrf	___awmod@dividend+1,c
  8512  0014DA  BE1A               	btfsc	___awmod@dividend,7,c
  8513  0014DC  061B               	decf	___awmod@dividend+1,f,c
  8514  0014DE  EC2F  F01A         	call	___awmod	;wreg free
  8515  0014E2  C01A  F071         	movff	?___awmod,___wmul@multiplier
  8516  0014E6  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  8517  0014EA  EC32  F01C         	call	___wmul	;wreg free
  8518  0014EE  0E44               	movlw	low __npowers_
  8519  0014F0  0100               	movlb	0	; () banked
  8520  0014F2  2571               	addwf	?___wmul& (0+255),w,b
  8521  0014F4  6EF6               	movwf	tblptrl,c
  8522  0014F6  0E7F               	movlw	high __npowers_
  8523  0014F8  0100               	movlb	0	; () banked
  8524  0014FA  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8525  0014FC  6EF7               	movwf	tblptrh,c
  8526  0014FE                     	if	0	;There are less than 3 active tblptr bytes
  8527  0014FE                     	endif
  8528  0014FE  0009               	tblrd		*+
  8529  001500  CFF5 F078          	movff	tablat,___ftmul@f2
  8530  001504  0009               	tblrd		*+
  8531  001506  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8532  00150A  000A               	tblrd		*-
  8533  00150C  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8534  001510  EC63  F013         	call	___ftmul	;wreg free
  8535  001514  C075  F084         	movff	?___ftmul,?_scale
  8536  001518  C076  F085         	movff	?___ftmul+1,?_scale+1
  8537  00151C  C077  F086         	movff	?___ftmul+2,?_scale+2
  8538  001520  0012               	return	
  8539  001522                     l4853:
  8540                           
  8541                           ;doprnt.c: 432: else if(scl > 10)
  8542  001522  0100               	movlb	0	; () banked
  8543  001524  518A               	movf	scale@scl& (0+255),w,b
  8544  001526  0A80               	xorlw	128
  8545  001528  0F75               	addlw	-139
  8546  00152A  A0D8               	btfss	status,0,c
  8547  00152C  D057               	goto	l4859
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8551  00152E  0E00               	movlw	0
  8552  001530  6E23               	movwf	___awdiv@divisor+1,c
  8553  001532  0E0A               	movlw	10
  8554  001534  6E22               	movwf	___awdiv@divisor,c
  8555  001536  0100               	movlb	0	; () banked
  8556  001538  518A               	movf	scale@scl& (0+255),w,b
  8557  00153A  6E20               	movwf	___awdiv@dividend,c
  8558  00153C  6A21               	clrf	___awdiv@dividend+1,c
  8559  00153E  BE20               	btfsc	___awdiv@dividend,7,c
  8560  001540  0621               	decf	___awdiv@dividend+1,f,c
  8561  001542  ECAC  F019         	call	___awdiv	;wreg free
  8562  001546  0E09               	movlw	9
  8563  001548  2420               	addwf	?___awdiv,w,c
  8564  00154A  0100               	movlb	0	; () banked
  8565  00154C  6F71               	movwf	___wmul@multiplier& (0+255),b
  8566  00154E  0E00               	movlw	0
  8567  001550  2021               	addwfc	?___awdiv+1,w,c
  8568  001552  0100               	movlb	0	; () banked
  8569  001554  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8570  001556  0E00               	movlw	0
  8571  001558  0100               	movlb	0	; () banked
  8572  00155A  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8573  00155C  0E03               	movlw	3
  8574  00155E  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8575  001560  EC32  F01C         	call	___wmul	;wreg free
  8576  001564  0E44               	movlw	low __npowers_
  8577  001566  0100               	movlb	0	; () banked
  8578  001568  2571               	addwf	?___wmul& (0+255),w,b
  8579  00156A  6EF6               	movwf	tblptrl,c
  8580  00156C  0E7F               	movlw	high __npowers_
  8581  00156E  0100               	movlb	0	; () banked
  8582  001570  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8583  001572  6EF7               	movwf	tblptrh,c
  8584  001574                     	if	0	;There are less than 3 active tblptr bytes
  8585  001574                     	endif
  8586  001574  0009               	tblrd		*+
  8587  001576  CFF5 F075          	movff	tablat,___ftmul@f1
  8588  00157A  0009               	tblrd		*+
  8589  00157C  CFF5 F076          	movff	tablat,___ftmul@f1+1
  8590  001580  000A               	tblrd		*-
  8591  001582  CFF5 F077          	movff	tablat,___ftmul@f1+2
  8592  001586  0E00               	movlw	0
  8593  001588  0100               	movlb	0	; () banked
  8594  00158A  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8595  00158C  0E03               	movlw	3
  8596  00158E  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8597  001590  0E00               	movlw	0
  8598  001592  6E1D               	movwf	___awmod@divisor+1,c
  8599  001594  0E0A               	movlw	10
  8600  001596  6E1C               	movwf	___awmod@divisor,c
  8601  001598  0100               	movlb	0	; () banked
  8602  00159A  518A               	movf	scale@scl& (0+255),w,b
  8603  00159C  6E1A               	movwf	___awmod@dividend,c
  8604  00159E  6A1B               	clrf	___awmod@dividend+1,c
  8605  0015A0  BE1A               	btfsc	___awmod@dividend,7,c
  8606  0015A2  061B               	decf	___awmod@dividend+1,f,c
  8607  0015A4  EC2F  F01A         	call	___awmod	;wreg free
  8608  0015A8  C01A  F071         	movff	?___awmod,___wmul@multiplier
  8609  0015AC  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  8610  0015B0  EC32  F01C         	call	___wmul	;wreg free
  8611  0015B4  0E44               	movlw	low __npowers_
  8612  0015B6  0100               	movlb	0	; () banked
  8613  0015B8  2571               	addwf	?___wmul& (0+255),w,b
  8614  0015BA  6EF6               	movwf	tblptrl,c
  8615  0015BC  0E7F               	movlw	high __npowers_
  8616  0015BE  0100               	movlb	0	; () banked
  8617  0015C0  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8618  0015C2  6EF7               	movwf	tblptrh,c
  8619  0015C4                     	if	0	;There are less than 3 active tblptr bytes
  8620  0015C4                     	endif
  8621  0015C4  0009               	tblrd		*+
  8622  0015C6  CFF5 F078          	movff	tablat,___ftmul@f2
  8623  0015CA  0009               	tblrd		*+
  8624  0015CC  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8625  0015D0  000A               	tblrd		*-
  8626  0015D2  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8627  0015D6  EC63  F013         	call	___ftmul	;wreg free
  8628  0015DA  D79C               	goto	L4
  8629  0015DC                     l4859:
  8630                           
  8631                           ;doprnt.c: 434: return _npowers_[scl];
  8632  0015DC  0100               	movlb	0	; () banked
  8633  0015DE  518A               	movf	scale@scl& (0+255),w,b
  8634  0015E0  0D03               	mullw	3
  8635  0015E2  0E44               	movlw	low __npowers_
  8636  0015E4  24F3               	addwf	prodl,w,c
  8637  0015E6  6EF6               	movwf	tblptrl,c
  8638  0015E8  0E7F               	movlw	high __npowers_
  8639  0015EA  20F4               	addwfc	prodh,w,c
  8640  0015EC  6EF7               	movwf	tblptrh,c
  8641  0015EE                     	if	0	;There are less than 3 active tblptr bytes
  8642  0015EE                     	endif
  8643  0015EE  0009               	tblrd		*+
  8644  0015F0  CFF5 F084          	movff	tablat,?_scale
  8645  0015F4  0009               	tblrd		*+
  8646  0015F6  CFF5 F085          	movff	tablat,?_scale+1
  8647  0015FA  000A               	tblrd		*-
  8648  0015FC  CFF5 F086          	movff	tablat,?_scale+2
  8649                           
  8650                           ; BSR set to: 0
  8651  001600  0012               	return	
  8652  001602                     l4863:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;doprnt.c: 435: }
  8656                           ;doprnt.c: 436: if(scl>=110)
  8657  001602  0100               	movlb	0	; () banked
  8658  001604  518A               	movf	scale@scl& (0+255),w,b
  8659  001606  0A80               	xorlw	128
  8660  001608  0F12               	addlw	-238
  8661  00160A  A0D8               	btfss	status,0,c
  8662  00160C  D0A1               	goto	l4871
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8666  00160E  0E00               	movlw	0
  8667  001610  0100               	movlb	0	; () banked
  8668  001612  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8669  001614  0E03               	movlw	3
  8670  001616  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8671  001618  0E00               	movlw	0
  8672  00161A  6E23               	movwf	___awdiv@divisor+1,c
  8673  00161C  0E0A               	movlw	10
  8674  00161E  6E22               	movwf	___awdiv@divisor,c
  8675  001620  0E00               	movlw	0
  8676  001622  6E1D               	movwf	___awmod@divisor+1,c
  8677  001624  0E64               	movlw	100
  8678  001626  6E1C               	movwf	___awmod@divisor,c
  8679  001628  0100               	movlb	0	; () banked
  8680  00162A  518A               	movf	scale@scl& (0+255),w,b
  8681  00162C  6E1A               	movwf	___awmod@dividend,c
  8682  00162E  6A1B               	clrf	___awmod@dividend+1,c
  8683  001630  BE1A               	btfsc	___awmod@dividend,7,c
  8684  001632  061B               	decf	___awmod@dividend+1,f,c
  8685  001634  EC2F  F01A         	call	___awmod	;wreg free
  8686  001638  C01A  F020         	movff	?___awmod,___awdiv@dividend
  8687  00163C  C01B  F021         	movff	?___awmod+1,___awdiv@dividend+1
  8688  001640  ECAC  F019         	call	___awdiv	;wreg free
  8689  001644  0E09               	movlw	9
  8690  001646  2420               	addwf	?___awdiv,w,c
  8691  001648  0100               	movlb	0	; () banked
  8692  00164A  6F71               	movwf	___wmul@multiplier& (0+255),b
  8693  00164C  0E00               	movlw	0
  8694  00164E  2021               	addwfc	?___awdiv+1,w,c
  8695  001650  0100               	movlb	0	; () banked
  8696  001652  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8697  001654  EC32  F01C         	call	___wmul	;wreg free
  8698  001658  0E1D               	movlw	low __powers_
  8699  00165A  0100               	movlb	0	; () banked
  8700  00165C  2571               	addwf	?___wmul& (0+255),w,b
  8701  00165E  6EF6               	movwf	tblptrl,c
  8702  001660  0E7F               	movlw	high __powers_
  8703  001662  0100               	movlb	0	; () banked
  8704  001664  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8705  001666  6EF7               	movwf	tblptrh,c
  8706  001668                     	if	0	;There are less than 3 active tblptr bytes
  8707  001668                     	endif
  8708  001668  0009               	tblrd		*+
  8709  00166A  CFF5 F078          	movff	tablat,___ftmul@f2
  8710  00166E  0009               	tblrd		*+
  8711  001670  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8712  001674  000A               	tblrd		*-
  8713  001676  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8714  00167A  0E00               	movlw	0
  8715  00167C  6E23               	movwf	___awdiv@divisor+1,c
  8716  00167E  0E64               	movlw	100
  8717  001680  6E22               	movwf	___awdiv@divisor,c
  8718  001682  0100               	movlb	0	; () banked
  8719  001684  518A               	movf	scale@scl& (0+255),w,b
  8720  001686  6E20               	movwf	___awdiv@dividend,c
  8721  001688  6A21               	clrf	___awdiv@dividend+1,c
  8722  00168A  BE20               	btfsc	___awdiv@dividend,7,c
  8723  00168C  0621               	decf	___awdiv@dividend+1,f,c
  8724  00168E  ECAC  F019         	call	___awdiv	;wreg free
  8725  001692  0E12               	movlw	18
  8726  001694  2420               	addwf	?___awdiv,w,c
  8727  001696  0100               	movlb	0	; () banked
  8728  001698  6F71               	movwf	___wmul@multiplier& (0+255),b
  8729  00169A  0E00               	movlw	0
  8730  00169C  2021               	addwfc	?___awdiv+1,w,c
  8731  00169E  0100               	movlb	0	; () banked
  8732  0016A0  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8733  0016A2  0E00               	movlw	0
  8734  0016A4  0100               	movlb	0	; () banked
  8735  0016A6  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8736  0016A8  0E03               	movlw	3
  8737  0016AA  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8738  0016AC  EC32  F01C         	call	___wmul	;wreg free
  8739  0016B0  0E1D               	movlw	low __powers_
  8740  0016B2  0100               	movlb	0	; () banked
  8741  0016B4  2571               	addwf	?___wmul& (0+255),w,b
  8742  0016B6  6EF6               	movwf	tblptrl,c
  8743  0016B8  0E7F               	movlw	high __powers_
  8744  0016BA  0100               	movlb	0	; () banked
  8745  0016BC  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8746  0016BE  6EF7               	movwf	tblptrh,c
  8747  0016C0                     	if	0	;There are less than 3 active tblptr bytes
  8748  0016C0                     	endif
  8749  0016C0  0009               	tblrd		*+
  8750  0016C2  CFF5 F075          	movff	tablat,___ftmul@f1
  8751  0016C6  0009               	tblrd		*+
  8752  0016C8  CFF5 F076          	movff	tablat,___ftmul@f1+1
  8753  0016CC  000A               	tblrd		*-
  8754  0016CE  CFF5 F077          	movff	tablat,___ftmul@f1+2
  8755  0016D2  EC63  F013         	call	___ftmul	;wreg free
  8756  0016D6  C075  F087         	movff	?___ftmul,_scale$2790
  8757  0016DA  C076  F088         	movff	?___ftmul+1,_scale$2790+1
  8758  0016DE  C077  F089         	movff	?___ftmul+2,_scale$2790+2
  8759                           
  8760                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8761  0016E2  C087  F075         	movff	_scale$2790,___ftmul@f1
  8762  0016E6  C088  F076         	movff	_scale$2790+1,___ftmul@f1+1
  8763  0016EA  C089  F077         	movff	_scale$2790+2,___ftmul@f1+2
  8764  0016EE  0E00               	movlw	0
  8765  0016F0  0100               	movlb	0	; () banked
  8766  0016F2  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8767  0016F4  0E03               	movlw	3
  8768  0016F6  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8769  0016F8  0E00               	movlw	0
  8770  0016FA  6E1D               	movwf	___awmod@divisor+1,c
  8771  0016FC  0E0A               	movlw	10
  8772  0016FE  6E1C               	movwf	___awmod@divisor,c
  8773  001700  0100               	movlb	0	; () banked
  8774  001702  518A               	movf	scale@scl& (0+255),w,b
  8775  001704  6E1A               	movwf	___awmod@dividend,c
  8776  001706  6A1B               	clrf	___awmod@dividend+1,c
  8777  001708  BE1A               	btfsc	___awmod@dividend,7,c
  8778  00170A  061B               	decf	___awmod@dividend+1,f,c
  8779  00170C  EC2F  F01A         	call	___awmod	;wreg free
  8780  001710  C01A  F071         	movff	?___awmod,___wmul@multiplier
  8781  001714  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  8782  001718  EC32  F01C         	call	___wmul	;wreg free
  8783  00171C  0E1D               	movlw	low __powers_
  8784  00171E  0100               	movlb	0	; () banked
  8785  001720  2571               	addwf	?___wmul& (0+255),w,b
  8786  001722  6EF6               	movwf	tblptrl,c
  8787  001724  0E7F               	movlw	high __powers_
  8788  001726  0100               	movlb	0	; () banked
  8789  001728  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8790  00172A  6EF7               	movwf	tblptrh,c
  8791  00172C                     	if	0	;There are less than 3 active tblptr bytes
  8792  00172C                     	endif
  8793  00172C  0009               	tblrd		*+
  8794  00172E  CFF5 F078          	movff	tablat,___ftmul@f2
  8795  001732  0009               	tblrd		*+
  8796  001734  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8797  001738  000A               	tblrd		*-
  8798  00173A  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8799  00173E  EC63  F013         	call	___ftmul	;wreg free
  8800  001742  C075  F084         	movff	?___ftmul,?_scale
  8801  001746  C076  F085         	movff	?___ftmul+1,?_scale+1
  8802  00174A  C077  F086         	movff	?___ftmul+2,?_scale+2
  8803  00174E  0012               	return	
  8804  001750                     l4871:
  8805                           
  8806                           ;doprnt.c: 438: else if(scl > 10)
  8807  001750  0100               	movlb	0	; () banked
  8808  001752  518A               	movf	scale@scl& (0+255),w,b
  8809  001754  0A80               	xorlw	128
  8810  001756  0F75               	addlw	-139
  8811  001758  A0D8               	btfss	status,0,c
  8812  00175A  D057               	goto	l4877
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8816  00175C  0E00               	movlw	0
  8817  00175E  6E23               	movwf	___awdiv@divisor+1,c
  8818  001760  0E0A               	movlw	10
  8819  001762  6E22               	movwf	___awdiv@divisor,c
  8820  001764  0100               	movlb	0	; () banked
  8821  001766  518A               	movf	scale@scl& (0+255),w,b
  8822  001768  6E20               	movwf	___awdiv@dividend,c
  8823  00176A  6A21               	clrf	___awdiv@dividend+1,c
  8824  00176C  BE20               	btfsc	___awdiv@dividend,7,c
  8825  00176E  0621               	decf	___awdiv@dividend+1,f,c
  8826  001770  ECAC  F019         	call	___awdiv	;wreg free
  8827  001774  0E09               	movlw	9
  8828  001776  2420               	addwf	?___awdiv,w,c
  8829  001778  0100               	movlb	0	; () banked
  8830  00177A  6F71               	movwf	___wmul@multiplier& (0+255),b
  8831  00177C  0E00               	movlw	0
  8832  00177E  2021               	addwfc	?___awdiv+1,w,c
  8833  001780  0100               	movlb	0	; () banked
  8834  001782  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  8835  001784  0E00               	movlw	0
  8836  001786  0100               	movlb	0	; () banked
  8837  001788  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8838  00178A  0E03               	movlw	3
  8839  00178C  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8840  00178E  EC32  F01C         	call	___wmul	;wreg free
  8841  001792  0E1D               	movlw	low __powers_
  8842  001794  0100               	movlb	0	; () banked
  8843  001796  2571               	addwf	?___wmul& (0+255),w,b
  8844  001798  6EF6               	movwf	tblptrl,c
  8845  00179A  0E7F               	movlw	high __powers_
  8846  00179C  0100               	movlb	0	; () banked
  8847  00179E  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8848  0017A0  6EF7               	movwf	tblptrh,c
  8849  0017A2                     	if	0	;There are less than 3 active tblptr bytes
  8850  0017A2                     	endif
  8851  0017A2  0009               	tblrd		*+
  8852  0017A4  CFF5 F075          	movff	tablat,___ftmul@f1
  8853  0017A8  0009               	tblrd		*+
  8854  0017AA  CFF5 F076          	movff	tablat,___ftmul@f1+1
  8855  0017AE  000A               	tblrd		*-
  8856  0017B0  CFF5 F077          	movff	tablat,___ftmul@f1+2
  8857  0017B4  0E00               	movlw	0
  8858  0017B6  0100               	movlb	0	; () banked
  8859  0017B8  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8860  0017BA  0E03               	movlw	3
  8861  0017BC  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8862  0017BE  0E00               	movlw	0
  8863  0017C0  6E1D               	movwf	___awmod@divisor+1,c
  8864  0017C2  0E0A               	movlw	10
  8865  0017C4  6E1C               	movwf	___awmod@divisor,c
  8866  0017C6  0100               	movlb	0	; () banked
  8867  0017C8  518A               	movf	scale@scl& (0+255),w,b
  8868  0017CA  6E1A               	movwf	___awmod@dividend,c
  8869  0017CC  6A1B               	clrf	___awmod@dividend+1,c
  8870  0017CE  BE1A               	btfsc	___awmod@dividend,7,c
  8871  0017D0  061B               	decf	___awmod@dividend+1,f,c
  8872  0017D2  EC2F  F01A         	call	___awmod	;wreg free
  8873  0017D6  C01A  F071         	movff	?___awmod,___wmul@multiplier
  8874  0017DA  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  8875  0017DE  EC32  F01C         	call	___wmul	;wreg free
  8876  0017E2  0E1D               	movlw	low __powers_
  8877  0017E4  0100               	movlb	0	; () banked
  8878  0017E6  2571               	addwf	?___wmul& (0+255),w,b
  8879  0017E8  6EF6               	movwf	tblptrl,c
  8880  0017EA  0E7F               	movlw	high __powers_
  8881  0017EC  0100               	movlb	0	; () banked
  8882  0017EE  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8883  0017F0  6EF7               	movwf	tblptrh,c
  8884  0017F2                     	if	0	;There are less than 3 active tblptr bytes
  8885  0017F2                     	endif
  8886  0017F2  0009               	tblrd		*+
  8887  0017F4  CFF5 F078          	movff	tablat,___ftmul@f2
  8888  0017F8  0009               	tblrd		*+
  8889  0017FA  CFF5 F079          	movff	tablat,___ftmul@f2+1
  8890  0017FE  000A               	tblrd		*-
  8891  001800  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  8892  001804  EC63  F013         	call	___ftmul	;wreg free
  8893  001808  D79C               	goto	L5
  8894  00180A                     l4877:
  8895                           
  8896                           ;doprnt.c: 440: return _powers_[scl];
  8897  00180A  0100               	movlb	0	; () banked
  8898  00180C  518A               	movf	scale@scl& (0+255),w,b
  8899  00180E  0D03               	mullw	3
  8900  001810  0E1D               	movlw	low __powers_
  8901  001812  24F3               	addwf	prodl,w,c
  8902  001814  6EF6               	movwf	tblptrl,c
  8903  001816  0E7F               	movlw	high __powers_
  8904  001818  20F4               	addwfc	prodh,w,c
  8905  00181A  6EF7               	movwf	tblptrh,c
  8906  00181C                     	if	0	;There are less than 3 active tblptr bytes
  8907  00181C                     	endif
  8908  00181C  0009               	tblrd		*+
  8909  00181E  CFF5 F084          	movff	tablat,?_scale
  8910  001822  0009               	tblrd		*+
  8911  001824  CFF5 F085          	movff	tablat,?_scale+1
  8912  001828  000A               	tblrd		*-
  8913  00182A  CFF5 F086          	movff	tablat,?_scale+2
  8914  00182E  0012               	return	
  8915  001830                     __end_of_scale:
  8916                           	opt stack 0
  8917                           tblptru	equ	0xFF8
  8918                           tblptrh	equ	0xFF7
  8919                           tblptrl	equ	0xFF6
  8920                           tablat	equ	0xFF5
  8921                           prodh	equ	0xFF4
  8922                           prodl	equ	0xFF3
  8923                           intcon	equ	0xFF2
  8924                           indf0	equ	0xFEF
  8925                           postinc0	equ	0xFEE
  8926                           fsr0h	equ	0xFEA
  8927                           fsr0l	equ	0xFE9
  8928                           wreg	equ	0xFE8
  8929                           indf1	equ	0xFE7
  8930                           postdec1	equ	0xFE5
  8931                           fsr1h	equ	0xFE2
  8932                           fsr1l	equ	0xFE1
  8933                           indf2	equ	0xFDF
  8934                           postinc2	equ	0xFDE
  8935                           postdec2	equ	0xFDD
  8936                           fsr2h	equ	0xFDA
  8937                           fsr2l	equ	0xFD9
  8938                           status	equ	0xFD8
  8939                           
  8940 ;; *************** function _isdigit *****************
  8941 ;; Defined at:
  8942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  c               1    wreg     unsigned char 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  c               1   27[COMRAM] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;		None               void
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8956 ;;      Params:         0       0       0       0       0       0       0
  8957 ;;      Locals:         2       0       0       0       0       0       0
  8958 ;;      Temps:          1       0       0       0       0       0       0
  8959 ;;      Totals:         3       0       0       0       0       0       0
  8960 ;;Total ram usage:        3 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    2
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_sprintf
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text33
  8971  0039BC                     __ptext33:
  8972                           	opt stack 0
  8973  0039BC                     _isdigit:
  8974                           	opt stack 25
  8975                           
  8976                           ;incstack = 0
  8977                           ;isdigit@c stored from wreg
  8978  0039BC  6E1C               	movwf	isdigit@c,c
  8979  0039BE  0E00               	movlw	0
  8980  0039C0  6E1B               	movwf	_isdigit$2418,c
  8981  0039C2  0E3A               	movlw	58
  8982  0039C4  601C               	cpfslt	isdigit@c,c
  8983  0039C6  D005               	goto	l3505
  8984  0039C8  0E2F               	movlw	47
  8985  0039CA  641C               	cpfsgt	isdigit@c,c
  8986  0039CC  D002               	goto	l3505
  8987  0039CE  0E01               	movlw	1
  8988  0039D0  6E1B               	movwf	_isdigit$2418,c
  8989  0039D2                     l3505:
  8990  0039D2  C01B  F01A         	movff	_isdigit$2418,??_isdigit
  8991  0039D6  301A               	rrcf	??_isdigit,w,c
  8992  0039D8  0012               	return	
  8993  0039DA                     __end_of_isdigit:
  8994                           	opt stack 0
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           prodh	equ	0xFF4
  9000                           prodl	equ	0xFF3
  9001                           intcon	equ	0xFF2
  9002                           indf0	equ	0xFEF
  9003                           postinc0	equ	0xFEE
  9004                           fsr0h	equ	0xFEA
  9005                           fsr0l	equ	0xFE9
  9006                           wreg	equ	0xFE8
  9007                           indf1	equ	0xFE7
  9008                           postdec1	equ	0xFE5
  9009                           fsr1h	equ	0xFE2
  9010                           fsr1l	equ	0xFE1
  9011                           indf2	equ	0xFDF
  9012                           postinc2	equ	0xFDE
  9013                           postdec2	equ	0xFDD
  9014                           fsr2h	equ	0xFDA
  9015                           fsr2l	equ	0xFD9
  9016                           status	equ	0xFD8
  9017                           
  9018 ;; *************** function _fround *****************
  9019 ;; Defined at:
  9020 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  prec            1    wreg     unsigned char 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  prec            1   45[BANK0 ] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  3   36[BANK0 ] unsigned char 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9034 ;;      Params:         0       3       0       0       0       0       0
  9035 ;;      Locals:         0       7       0       0       0       0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0
  9037 ;;      Totals:         0      10       0       0       0       0       0
  9038 ;;Total ram usage:       10 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:    4
  9041 ;; This function calls:
  9042 ;;		___awdiv
  9043 ;;		___awmod
  9044 ;;		___ftmul
  9045 ;;		___wmul
  9046 ;; This function is called by:
  9047 ;;		_sprintf
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text34
  9052  001EBE                     __ptext34:
  9053                           	opt stack 0
  9054  001EBE                     _fround:
  9055                           	opt stack 23
  9056                           
  9057                           ;incstack = 0
  9058                           ;fround@prec stored from wreg
  9059  001EBE  0100               	movlb	0	; () banked
  9060  001EC0  6F8D               	movwf	fround@prec& (0+255),b
  9061                           
  9062                           ;doprnt.c: 413: if(prec>=110)
  9063  001EC2  0E6D               	movlw	109
  9064  001EC4  0100               	movlb	0	; () banked
  9065  001EC6  658D               	cpfsgt	fround@prec& (0+255),b
  9066  001EC8  D0AF               	goto	l4831
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9070  001ECA  0E00               	movlw	0
  9071  001ECC  0100               	movlb	0	; () banked
  9072  001ECE  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9073  001ED0  0E03               	movlw	3
  9074  001ED2  6F73               	movwf	___wmul@multiplicand& (0+255),b
  9075  001ED4  0E00               	movlw	0
  9076  001ED6  6E23               	movwf	___awdiv@divisor+1,c
  9077  001ED8  0E0A               	movlw	10
  9078  001EDA  6E22               	movwf	___awdiv@divisor,c
  9079  001EDC  0E00               	movlw	0
  9080  001EDE  6E1D               	movwf	___awmod@divisor+1,c
  9081  001EE0  0E64               	movlw	100
  9082  001EE2  6E1C               	movwf	___awmod@divisor,c
  9083  001EE4  C08D  F01A         	movff	fround@prec,___awmod@dividend
  9084  001EE8  6A1B               	clrf	___awmod@dividend+1,c
  9085  001EEA  EC2F  F01A         	call	___awmod	;wreg free
  9086  001EEE  C01A  F020         	movff	?___awmod,___awdiv@dividend
  9087  001EF2  C01B  F021         	movff	?___awmod+1,___awdiv@dividend+1
  9088  001EF6  ECAC  F019         	call	___awdiv	;wreg free
  9089  001EFA  0E09               	movlw	9
  9090  001EFC  2420               	addwf	?___awdiv,w,c
  9091  001EFE  0100               	movlb	0	; () banked
  9092  001F00  6F71               	movwf	___wmul@multiplier& (0+255),b
  9093  001F02  0E00               	movlw	0
  9094  001F04  2021               	addwfc	?___awdiv+1,w,c
  9095  001F06  0100               	movlb	0	; () banked
  9096  001F08  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  9097  001F0A  EC32  F01C         	call	___wmul	;wreg free
  9098  001F0E  0E44               	movlw	low __npowers_
  9099  001F10  0100               	movlb	0	; () banked
  9100  001F12  2571               	addwf	?___wmul& (0+255),w,b
  9101  001F14  6EF6               	movwf	tblptrl,c
  9102  001F16  0E7F               	movlw	high __npowers_
  9103  001F18  0100               	movlb	0	; () banked
  9104  001F1A  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  9105  001F1C  6EF7               	movwf	tblptrh,c
  9106  001F1E                     	if	0	;There are less than 3 active tblptr bytes
  9107  001F1E                     	endif
  9108  001F1E  0009               	tblrd		*+
  9109  001F20  CFF5 F078          	movff	tablat,___ftmul@f2
  9110  001F24  0009               	tblrd		*+
  9111  001F26  CFF5 F079          	movff	tablat,___ftmul@f2+1
  9112  001F2A  000A               	tblrd		*-
  9113  001F2C  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  9114  001F30  0E00               	movlw	0
  9115  001F32  6E23               	movwf	___awdiv@divisor+1,c
  9116  001F34  0E64               	movlw	100
  9117  001F36  6E22               	movwf	___awdiv@divisor,c
  9118  001F38  C08D  F020         	movff	fround@prec,___awdiv@dividend
  9119  001F3C  6A21               	clrf	___awdiv@dividend+1,c
  9120  001F3E  ECAC  F019         	call	___awdiv	;wreg free
  9121  001F42  0E12               	movlw	18
  9122  001F44  2420               	addwf	?___awdiv,w,c
  9123  001F46  0100               	movlb	0	; () banked
  9124  001F48  6F71               	movwf	___wmul@multiplier& (0+255),b
  9125  001F4A  0E00               	movlw	0
  9126  001F4C  2021               	addwfc	?___awdiv+1,w,c
  9127  001F4E  0100               	movlb	0	; () banked
  9128  001F50  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  9129  001F52  0E00               	movlw	0
  9130  001F54  0100               	movlb	0	; () banked
  9131  001F56  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9132  001F58  0E03               	movlw	3
  9133  001F5A  6F73               	movwf	___wmul@multiplicand& (0+255),b
  9134  001F5C  EC32  F01C         	call	___wmul	;wreg free
  9135  001F60  0E44               	movlw	low __npowers_
  9136  001F62  0100               	movlb	0	; () banked
  9137  001F64  2571               	addwf	?___wmul& (0+255),w,b
  9138  001F66  6EF6               	movwf	tblptrl,c
  9139  001F68  0E7F               	movlw	high __npowers_
  9140  001F6A  0100               	movlb	0	; () banked
  9141  001F6C  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  9142  001F6E  6EF7               	movwf	tblptrh,c
  9143  001F70                     	if	0	;There are less than 3 active tblptr bytes
  9144  001F70                     	endif
  9145  001F70  0009               	tblrd		*+
  9146  001F72  CFF5 F075          	movff	tablat,___ftmul@f1
  9147  001F76  0009               	tblrd		*+
  9148  001F78  CFF5 F076          	movff	tablat,___ftmul@f1+1
  9149  001F7C  000A               	tblrd		*-
  9150  001F7E  CFF5 F077          	movff	tablat,___ftmul@f1+2
  9151  001F82  EC63  F013         	call	___ftmul	;wreg free
  9152  001F86  C075  F08A         	movff	?___ftmul,_fround$2788
  9153  001F8A  C076  F08B         	movff	?___ftmul+1,_fround$2788+1
  9154  001F8E  C077  F08C         	movff	?___ftmul+2,_fround$2788+2
  9155                           
  9156                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9157  001F92  0E00               	movlw	0
  9158  001F94  0100               	movlb	0	; () banked
  9159  001F96  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9160  001F98  0E03               	movlw	3
  9161  001F9A  6F73               	movwf	___wmul@multiplicand& (0+255),b
  9162  001F9C  0E00               	movlw	0
  9163  001F9E  6E1D               	movwf	___awmod@divisor+1,c
  9164  001FA0  0E0A               	movlw	10
  9165  001FA2  6E1C               	movwf	___awmod@divisor,c
  9166  001FA4  C08D  F01A         	movff	fround@prec,___awmod@dividend
  9167  001FA8  6A1B               	clrf	___awmod@dividend+1,c
  9168  001FAA  EC2F  F01A         	call	___awmod	;wreg free
  9169  001FAE  C01A  F071         	movff	?___awmod,___wmul@multiplier
  9170  001FB2  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  9171  001FB6  EC32  F01C         	call	___wmul	;wreg free
  9172  001FBA  0E44               	movlw	low __npowers_
  9173  001FBC  0100               	movlb	0	; () banked
  9174  001FBE  2571               	addwf	?___wmul& (0+255),w,b
  9175  001FC0  6EF6               	movwf	tblptrl,c
  9176  001FC2  0E7F               	movlw	high __npowers_
  9177  001FC4  0100               	movlb	0	; () banked
  9178  001FC6  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  9179  001FC8  6EF7               	movwf	tblptrh,c
  9180  001FCA                     	if	0	;There are less than 3 active tblptr bytes
  9181  001FCA                     	endif
  9182  001FCA  0009               	tblrd		*+
  9183  001FCC  CFF5 F078          	movff	tablat,___ftmul@f2
  9184  001FD0  0009               	tblrd		*+
  9185  001FD2  CFF5 F079          	movff	tablat,___ftmul@f2+1
  9186  001FD6  000A               	tblrd		*-
  9187  001FD8  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  9188  001FDC  C08A  F075         	movff	_fround$2788,___ftmul@f1
  9189  001FE0  C08B  F076         	movff	_fround$2788+1,___ftmul@f1+1
  9190  001FE4  C08C  F077         	movff	_fround$2788+2,___ftmul@f1+2
  9191  001FE8  EC63  F013         	call	___ftmul	;wreg free
  9192  001FEC  C075  F087         	movff	?___ftmul,_fround$2789
  9193  001FF0  C076  F088         	movff	?___ftmul+1,_fround$2789+1
  9194  001FF4  C077  F089         	movff	?___ftmul+2,_fround$2789+2
  9195                           
  9196                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9197  001FF8  C087  F075         	movff	_fround$2789,___ftmul@f1
  9198  001FFC  C088  F076         	movff	_fround$2789+1,___ftmul@f1+1
  9199  002000  C089  F077         	movff	_fround$2789+2,___ftmul@f1+2
  9200  002004  0E00               	movlw	0
  9201  002006  0100               	movlb	0	; () banked
  9202  002008  6F78               	movwf	___ftmul@f2& (0+255),b
  9203  00200A  0E00               	movlw	0
  9204  00200C  0100               	movlb	0	; () banked
  9205  00200E  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  9206  002010  0E3F               	movlw	63
  9207  002012  0100               	movlb	0	; () banked
  9208  002014  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  9209  002016  EC63  F013         	call	___ftmul	;wreg free
  9210  00201A  C075  F084         	movff	?___ftmul,?_fround
  9211  00201E  C076  F085         	movff	?___ftmul+1,?_fround+1
  9212  002022  C077  F086         	movff	?___ftmul+2,?_fround+2
  9213  002026  0012               	return	
  9214  002028                     l4831:
  9215                           
  9216                           ;doprnt.c: 415: else if(prec > 10)
  9217  002028  0E0A               	movlw	10
  9218  00202A  0100               	movlb	0	; () banked
  9219  00202C  658D               	cpfsgt	fround@prec& (0+255),b
  9220  00202E  D068               	goto	l4839
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9224  002030  0E00               	movlw	0
  9225  002032  0100               	movlb	0	; () banked
  9226  002034  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9227  002036  0E03               	movlw	3
  9228  002038  6F73               	movwf	___wmul@multiplicand& (0+255),b
  9229  00203A  0E00               	movlw	0
  9230  00203C  6E1D               	movwf	___awmod@divisor+1,c
  9231  00203E  0E0A               	movlw	10
  9232  002040  6E1C               	movwf	___awmod@divisor,c
  9233  002042  C08D  F01A         	movff	fround@prec,___awmod@dividend
  9234  002046  6A1B               	clrf	___awmod@dividend+1,c
  9235  002048  EC2F  F01A         	call	___awmod	;wreg free
  9236  00204C  C01A  F071         	movff	?___awmod,___wmul@multiplier
  9237  002050  C01B  F072         	movff	?___awmod+1,___wmul@multiplier+1
  9238  002054  EC32  F01C         	call	___wmul	;wreg free
  9239  002058  0E44               	movlw	low __npowers_
  9240  00205A  0100               	movlb	0	; () banked
  9241  00205C  2571               	addwf	?___wmul& (0+255),w,b
  9242  00205E  6EF6               	movwf	tblptrl,c
  9243  002060  0E7F               	movlw	high __npowers_
  9244  002062  0100               	movlb	0	; () banked
  9245  002064  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  9246  002066  6EF7               	movwf	tblptrh,c
  9247  002068                     	if	0	;There are less than 3 active tblptr bytes
  9248  002068                     	endif
  9249  002068  0009               	tblrd		*+
  9250  00206A  CFF5 F078          	movff	tablat,___ftmul@f2
  9251  00206E  0009               	tblrd		*+
  9252  002070  CFF5 F079          	movff	tablat,___ftmul@f2+1
  9253  002074  000A               	tblrd		*-
  9254  002076  CFF5 F07A          	movff	tablat,___ftmul@f2+2
  9255  00207A  0E00               	movlw	0
  9256  00207C  6E23               	movwf	___awdiv@divisor+1,c
  9257  00207E  0E0A               	movlw	10
  9258  002080  6E22               	movwf	___awdiv@divisor,c
  9259  002082  C08D  F020         	movff	fround@prec,___awdiv@dividend
  9260  002086  6A21               	clrf	___awdiv@dividend+1,c
  9261  002088  ECAC  F019         	call	___awdiv	;wreg free
  9262  00208C  0E09               	movlw	9
  9263  00208E  2420               	addwf	?___awdiv,w,c
  9264  002090  0100               	movlb	0	; () banked
  9265  002092  6F71               	movwf	___wmul@multiplier& (0+255),b
  9266  002094  0E00               	movlw	0
  9267  002096  2021               	addwfc	?___awdiv+1,w,c
  9268  002098  0100               	movlb	0	; () banked
  9269  00209A  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
  9270  00209C  0E00               	movlw	0
  9271  00209E  0100               	movlb	0	; () banked
  9272  0020A0  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9273  0020A2  0E03               	movlw	3
  9274  0020A4  6F73               	movwf	___wmul@multiplicand& (0+255),b
  9275  0020A6  EC32  F01C         	call	___wmul	;wreg free
  9276  0020AA  0E44               	movlw	low __npowers_
  9277  0020AC  0100               	movlb	0	; () banked
  9278  0020AE  2571               	addwf	?___wmul& (0+255),w,b
  9279  0020B0  6EF6               	movwf	tblptrl,c
  9280  0020B2  0E7F               	movlw	high __npowers_
  9281  0020B4  0100               	movlb	0	; () banked
  9282  0020B6  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  9283  0020B8  6EF7               	movwf	tblptrh,c
  9284  0020BA                     	if	0	;There are less than 3 active tblptr bytes
  9285  0020BA                     	endif
  9286  0020BA  0009               	tblrd		*+
  9287  0020BC  CFF5 F075          	movff	tablat,___ftmul@f1
  9288  0020C0  0009               	tblrd		*+
  9289  0020C2  CFF5 F076          	movff	tablat,___ftmul@f1+1
  9290  0020C6  000A               	tblrd		*-
  9291  0020C8  CFF5 F077          	movff	tablat,___ftmul@f1+2
  9292  0020CC  EC63  F013         	call	___ftmul	;wreg free
  9293  0020D0  C075  F08A         	movff	?___ftmul,_fround$2788
  9294  0020D4  C076  F08B         	movff	?___ftmul+1,_fround$2788+1
  9295  0020D8  C077  F08C         	movff	?___ftmul+2,_fround$2788+2
  9296                           
  9297                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9298  0020DC  C08A  F075         	movff	_fround$2788,___ftmul@f1
  9299  0020E0  C08B  F076         	movff	_fround$2788+1,___ftmul@f1+1
  9300  0020E4  C08C  F077         	movff	_fround$2788+2,___ftmul@f1+2
  9301  0020E8  0E00               	movlw	0
  9302  0020EA  0100               	movlb	0	; () banked
  9303  0020EC  6F78               	movwf	___ftmul@f2& (0+255),b
  9304  0020EE  0E00               	movlw	0
  9305  0020F0  0100               	movlb	0	; () banked
  9306  0020F2  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  9307  0020F4  0E3F               	movlw	63
  9308  0020F6  0100               	movlb	0	; () banked
  9309  0020F8  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  9310  0020FA  EC63  F013         	call	___ftmul	;wreg free
  9311  0020FE  D78D               	goto	L6
  9312  002100                     l4839:
  9313                           
  9314                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9315  002100  0100               	movlb	0	; () banked
  9316  002102  518D               	movf	fround@prec& (0+255),w,b
  9317  002104  0D03               	mullw	3
  9318  002106  0E44               	movlw	low __npowers_
  9319  002108  24F3               	addwf	prodl,w,c
  9320  00210A  6EF6               	movwf	tblptrl,c
  9321  00210C  0E7F               	movlw	high __npowers_
  9322  00210E  20F4               	addwfc	prodh,w,c
  9323  002110  6EF7               	movwf	tblptrh,c
  9324  002112                     	if	0	;There are less than 3 active tblptr bytes
  9325  002112                     	endif
  9326  002112  0009               	tblrd		*+
  9327  002114  CFF5 F075          	movff	tablat,___ftmul@f1
  9328  002118  0009               	tblrd		*+
  9329  00211A  CFF5 F076          	movff	tablat,___ftmul@f1+1
  9330  00211E  000A               	tblrd		*-
  9331  002120  CFF5 F077          	movff	tablat,___ftmul@f1+2
  9332  002124  0E00               	movlw	0
  9333  002126  0100               	movlb	0	; () banked
  9334  002128  6F78               	movwf	___ftmul@f2& (0+255),b
  9335  00212A  0E00               	movlw	0
  9336  00212C  0100               	movlb	0	; () banked
  9337  00212E  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
  9338  002130  0E3F               	movlw	63
  9339  002132  0100               	movlb	0	; () banked
  9340  002134  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
  9341  002136  EC63  F013         	call	___ftmul	;wreg free
  9342  00213A  C075  F084         	movff	?___ftmul,?_fround
  9343  00213E  C076  F085         	movff	?___ftmul+1,?_fround+1
  9344  002142  C077  F086         	movff	?___ftmul+2,?_fround+2
  9345  002146  0012               	return	
  9346  002148                     __end_of_fround:
  9347                           	opt stack 0
  9348                           tblptru	equ	0xFF8
  9349                           tblptrh	equ	0xFF7
  9350                           tblptrl	equ	0xFF6
  9351                           tablat	equ	0xFF5
  9352                           prodh	equ	0xFF4
  9353                           prodl	equ	0xFF3
  9354                           intcon	equ	0xFF2
  9355                           indf0	equ	0xFEF
  9356                           postinc0	equ	0xFEE
  9357                           fsr0h	equ	0xFEA
  9358                           fsr0l	equ	0xFE9
  9359                           wreg	equ	0xFE8
  9360                           indf1	equ	0xFE7
  9361                           postdec1	equ	0xFE5
  9362                           fsr1h	equ	0xFE2
  9363                           fsr1l	equ	0xFE1
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           postdec2	equ	0xFDD
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function ___wmul *****************
  9372 ;; Defined at:
  9373 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9376 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  product         2   39[COMRAM] unsigned int 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  2   17[BANK0 ] unsigned int 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, prodl, prodh
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9388 ;;      Params:         0       4       0       0       0       0       0
  9389 ;;      Locals:         2       0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0
  9391 ;;      Totals:         2       4       0       0       0       0       0
  9392 ;;Total ram usage:        6 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    2
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_fround
  9399 ;;		_scale
  9400 ;;		_sprintf
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text35
  9405  003864                     __ptext35:
  9406                           	opt stack 0
  9407  003864                     ___wmul:
  9408                           	opt stack 24
  9409                           
  9410                           ;incstack = 0
  9411  003864  0100               	movlb	0	; () banked
  9412  003866  5171               	movf	___wmul@multiplier& (0+255),w,b
  9413  003868  0100               	movlb	0	; () banked
  9414  00386A  0373               	mulwf	___wmul@multiplicand& (0+255),b
  9415  00386C  CFF3 F028          	movff	prodl,___wmul@product
  9416  003870  CFF4 F029          	movff	prodh,___wmul@product+1
  9417  003874  0100               	movlb	0	; () banked
  9418  003876  5171               	movf	___wmul@multiplier& (0+255),w,b
  9419  003878  0100               	movlb	0	; () banked
  9420  00387A  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9421  00387C  50F3               	movf	prodl,w,c
  9422  00387E  2629               	addwf	___wmul@product+1,f,c
  9423  003880  0100               	movlb	0	; () banked
  9424  003882  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9425  003884  0100               	movlb	0	; () banked
  9426  003886  0373               	mulwf	___wmul@multiplicand& (0+255),b
  9427  003888  50F3               	movf	prodl,w,c
  9428  00388A  2629               	addwf	___wmul@product+1,f,c
  9429                           
  9430                           ; BSR set to: 0
  9431  00388C  C028  F071         	movff	___wmul@product,?___wmul
  9432  003890  C029  F072         	movff	___wmul@product+1,?___wmul+1
  9433  003894  0012               	return	
  9434  003896                     __end_of___wmul:
  9435                           	opt stack 0
  9436                           tblptru	equ	0xFF8
  9437                           tblptrh	equ	0xFF7
  9438                           tblptrl	equ	0xFF6
  9439                           tablat	equ	0xFF5
  9440                           prodh	equ	0xFF4
  9441                           prodl	equ	0xFF3
  9442                           intcon	equ	0xFF2
  9443                           indf0	equ	0xFEF
  9444                           postinc0	equ	0xFEE
  9445                           fsr0h	equ	0xFEA
  9446                           fsr0l	equ	0xFE9
  9447                           wreg	equ	0xFE8
  9448                           indf1	equ	0xFE7
  9449                           postdec1	equ	0xFE5
  9450                           fsr1h	equ	0xFE2
  9451                           fsr1l	equ	0xFE1
  9452                           indf2	equ	0xFDF
  9453                           postinc2	equ	0xFDE
  9454                           postdec2	equ	0xFDD
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function ___ftmul *****************
  9460 ;; Defined at:
  9461 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  f1              3   21[BANK0 ] float 
  9464 ;;  f2              3   24[BANK0 ] float 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  9467 ;;  sign            1   35[BANK0 ] unsigned char 
  9468 ;;  cntr            1   34[BANK0 ] unsigned char 
  9469 ;;  exp             1   30[BANK0 ] unsigned char 
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  3   21[BANK0 ] float 
  9472 ;; Registers used:
  9473 ;;		wreg, status,2, status,0, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9479 ;;      Params:         0       6       0       0       0       0       0
  9480 ;;      Locals:         0       6       0       0       0       0       0
  9481 ;;      Temps:          0       3       0       0       0       0       0
  9482 ;;      Totals:         0      15       0       0       0       0       0
  9483 ;;Total ram usage:       15 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    3
  9486 ;; This function calls:
  9487 ;;		___ftpack
  9488 ;; This function is called by:
  9489 ;;		_util_getBatteryVoltage
  9490 ;;		_util_getSolarCurrent
  9491 ;;		_util_getBatteryCurrent
  9492 ;;		_util_getTemperature
  9493 ;;		_fround
  9494 ;;		_scale
  9495 ;;		_sprintf
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text36
  9500  0026C6                     __ptext36:
  9501                           	opt stack 0
  9502  0026C6                     ___ftmul:
  9503                           	opt stack 25
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;incstack = 0
  9507  0026C6  C077  F07B         	movff	___ftmul@f1+2,??___ftmul
  9508  0026CA  0100               	movlb	0	; () banked
  9509  0026CC  6B7C               	clrf	(??___ftmul+1)& (0+255),b
  9510  0026CE  6B7D               	clrf	(??___ftmul+2)& (0+255),b
  9511  0026D0  0100               	movlb	0	; () banked
  9512  0026D2  3576               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9513  0026D4  0100               	movlb	0	; () banked
  9514  0026D6  377B               	rlcf	??___ftmul& (0+255),f,b
  9515  0026D8  E301               	bnc	u2691
  9516  0026DA  817C               	bsf	(??___ftmul+1)& (0+255),0,b
  9517  0026DC                     u2691:
  9518  0026DC  0100               	movlb	0	; () banked
  9519  0026DE  517B               	movf	??___ftmul& (0+255),w,b
  9520  0026E0  0100               	movlb	0	; () banked
  9521  0026E2  6F7E               	movwf	___ftmul@exp& (0+255),b
  9522  0026E4  0100               	movlb	0	; () banked
  9523  0026E6  517E               	movf	___ftmul@exp& (0+255),w,b
  9524  0026E8  A4D8               	btfss	status,2,c
  9525  0026EA  D00A               	goto	l3245
  9526                           
  9527                           ; BSR set to: 0
  9528  0026EC  0E00               	movlw	0
  9529  0026EE  0100               	movlb	0	; () banked
  9530  0026F0  6F75               	movwf	?___ftmul& (0+255),b
  9531  0026F2  0E00               	movlw	0
  9532  0026F4  0100               	movlb	0	; () banked
  9533  0026F6  6F76               	movwf	(?___ftmul+1)& (0+255),b
  9534  0026F8  0E00               	movlw	0
  9535  0026FA  0100               	movlb	0	; () banked
  9536  0026FC  6F77               	movwf	(?___ftmul+2)& (0+255),b
  9537                           
  9538                           ; BSR set to: 0
  9539  0026FE  0012               	return	
  9540  002700                     l3245:
  9541                           
  9542                           ; BSR set to: 0
  9543  002700  C07A  F07B         	movff	___ftmul@f2+2,??___ftmul
  9544  002704  0100               	movlb	0	; () banked
  9545  002706  6B7C               	clrf	(??___ftmul+1)& (0+255),b
  9546  002708  6B7D               	clrf	(??___ftmul+2)& (0+255),b
  9547  00270A  0100               	movlb	0	; () banked
  9548  00270C  3579               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9549  00270E  0100               	movlb	0	; () banked
  9550  002710  377B               	rlcf	??___ftmul& (0+255),f,b
  9551  002712  E301               	bnc	u2711
  9552  002714  817C               	bsf	(??___ftmul+1)& (0+255),0,b
  9553  002716                     u2711:
  9554  002716  0100               	movlb	0	; () banked
  9555  002718  517B               	movf	??___ftmul& (0+255),w,b
  9556  00271A  0100               	movlb	0	; () banked
  9557  00271C  6F83               	movwf	___ftmul@sign& (0+255),b
  9558  00271E  0100               	movlb	0	; () banked
  9559  002720  5183               	movf	___ftmul@sign& (0+255),w,b
  9560  002722  A4D8               	btfss	status,2,c
  9561  002724  D00A               	goto	l3251
  9562                           
  9563                           ; BSR set to: 0
  9564  002726  0E00               	movlw	0
  9565  002728  0100               	movlb	0	; () banked
  9566  00272A  6F75               	movwf	?___ftmul& (0+255),b
  9567  00272C  0E00               	movlw	0
  9568  00272E  0100               	movlb	0	; () banked
  9569  002730  6F76               	movwf	(?___ftmul+1)& (0+255),b
  9570  002732  0E00               	movlw	0
  9571  002734  0100               	movlb	0	; () banked
  9572  002736  6F77               	movwf	(?___ftmul+2)& (0+255),b
  9573                           
  9574                           ; BSR set to: 0
  9575  002738  0012               	return	
  9576  00273A                     l3251:
  9577                           
  9578                           ; BSR set to: 0
  9579  00273A  0100               	movlb	0	; () banked
  9580  00273C  5183               	movf	___ftmul@sign& (0+255),w,b
  9581  00273E  0F7B               	addlw	123
  9582  002740  0100               	movlb	0	; () banked
  9583  002742  277E               	addwf	___ftmul@exp& (0+255),f,b
  9584                           
  9585                           ; BSR set to: 0
  9586  002744  C077  F083         	movff	___ftmul@f1+2,___ftmul@sign
  9587  002748  0100               	movlb	0	; () banked
  9588  00274A  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  9589  00274C  0100               	movlb	0	; () banked
  9590  00274E  1B83               	xorwf	___ftmul@sign& (0+255),f,b
  9591  002750  0E80               	movlw	128
  9592  002752  0100               	movlb	0	; () banked
  9593  002754  1783               	andwf	___ftmul@sign& (0+255),f,b
  9594                           
  9595                           ; BSR set to: 0
  9596  002756  0100               	movlb	0	; () banked
  9597  002758  8F76               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9598                           
  9599                           ; BSR set to: 0
  9600  00275A  0100               	movlb	0	; () banked
  9601  00275C  8F79               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9602                           
  9603                           ; BSR set to: 0
  9604  00275E  0EFF               	movlw	255
  9605  002760  0100               	movlb	0	; () banked
  9606  002762  1778               	andwf	___ftmul@f2& (0+255),f,b
  9607  002764  0EFF               	movlw	255
  9608  002766  0100               	movlb	0	; () banked
  9609  002768  1779               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9610  00276A  0E00               	movlw	0
  9611  00276C  0100               	movlb	0	; () banked
  9612  00276E  177A               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9613                           
  9614                           ; BSR set to: 0
  9615  002770  0E00               	movlw	0
  9616  002772  0100               	movlb	0	; () banked
  9617  002774  6F7F               	movwf	___ftmul@f3_as_product& (0+255),b
  9618  002776  0E00               	movlw	0
  9619  002778  0100               	movlb	0	; () banked
  9620  00277A  6F80               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9621  00277C  0E00               	movlw	0
  9622  00277E  0100               	movlb	0	; () banked
  9623  002780  6F81               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9624                           
  9625                           ; BSR set to: 0
  9626  002782  0E07               	movlw	7
  9627  002784  0100               	movlb	0	; () banked
  9628  002786  6F82               	movwf	___ftmul@cntr& (0+255),b
  9629  002788                     l3265:
  9630                           
  9631                           ; BSR set to: 0
  9632  002788  0100               	movlb	0	; () banked
  9633  00278A  A175               	btfss	___ftmul@f1& (0+255),0,b
  9634  00278C  D00C               	goto	l3269
  9635                           
  9636                           ; BSR set to: 0
  9637  00278E  0100               	movlb	0	; () banked
  9638  002790  5178               	movf	___ftmul@f2& (0+255),w,b
  9639  002792  0100               	movlb	0	; () banked
  9640  002794  277F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9641  002796  0100               	movlb	0	; () banked
  9642  002798  5179               	movf	(___ftmul@f2+1)& (0+255),w,b
  9643  00279A  0100               	movlb	0	; () banked
  9644  00279C  2380               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9645  00279E  0100               	movlb	0	; () banked
  9646  0027A0  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  9647  0027A2  0100               	movlb	0	; () banked
  9648  0027A4  2381               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9649  0027A6                     l3269:
  9650                           
  9651                           ; BSR set to: 0
  9652  0027A6  0100               	movlb	0	; () banked
  9653  0027A8  90D8               	bcf	status,0,c
  9654  0027AA  3377               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9655  0027AC  3376               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9656  0027AE  3375               	rrcf	___ftmul@f1& (0+255),f,b
  9657  0027B0  0100               	movlb	0	; () banked
  9658  0027B2  90D8               	bcf	status,0,c
  9659  0027B4  3778               	rlcf	___ftmul@f2& (0+255),f,b
  9660  0027B6  3779               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9661  0027B8  377A               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9662                           
  9663                           ; BSR set to: 0
  9664  0027BA  0100               	movlb	0	; () banked
  9665  0027BC  2F82               	decfsz	___ftmul@cntr& (0+255),f,b
  9666  0027BE  D7E4               	goto	l3265
  9667                           
  9668                           ; BSR set to: 0
  9669                           
  9670                           ; BSR set to: 0
  9671  0027C0  0E09               	movlw	9
  9672  0027C2  0100               	movlb	0	; () banked
  9673  0027C4  6F82               	movwf	___ftmul@cntr& (0+255),b
  9674  0027C6                     l3275:
  9675                           
  9676                           ; BSR set to: 0
  9677  0027C6  0100               	movlb	0	; () banked
  9678  0027C8  A175               	btfss	___ftmul@f1& (0+255),0,b
  9679  0027CA  D00C               	goto	l3279
  9680                           
  9681                           ; BSR set to: 0
  9682  0027CC  0100               	movlb	0	; () banked
  9683  0027CE  5178               	movf	___ftmul@f2& (0+255),w,b
  9684  0027D0  0100               	movlb	0	; () banked
  9685  0027D2  277F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9686  0027D4  0100               	movlb	0	; () banked
  9687  0027D6  5179               	movf	(___ftmul@f2+1)& (0+255),w,b
  9688  0027D8  0100               	movlb	0	; () banked
  9689  0027DA  2380               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9690  0027DC  0100               	movlb	0	; () banked
  9691  0027DE  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  9692  0027E0  0100               	movlb	0	; () banked
  9693  0027E2  2381               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9694  0027E4                     l3279:
  9695                           
  9696                           ; BSR set to: 0
  9697  0027E4  0100               	movlb	0	; () banked
  9698  0027E6  90D8               	bcf	status,0,c
  9699  0027E8  3377               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9700  0027EA  3376               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9701  0027EC  3375               	rrcf	___ftmul@f1& (0+255),f,b
  9702  0027EE  0100               	movlb	0	; () banked
  9703  0027F0  90D8               	bcf	status,0,c
  9704  0027F2  3381               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9705  0027F4  3380               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9706  0027F6  337F               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 0
  9709  0027F8  0100               	movlb	0	; () banked
  9710  0027FA  2F82               	decfsz	___ftmul@cntr& (0+255),f,b
  9711  0027FC  D7E4               	goto	l3275
  9712                           
  9713                           ; BSR set to: 0
  9714                           
  9715                           ; BSR set to: 0
  9716  0027FE  C07F  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
  9717  002802  C080  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9718  002806  C081  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9719  00280A  C07E  F01D         	movff	___ftmul@exp,___ftpack@exp
  9720  00280E  C083  F01E         	movff	___ftmul@sign,___ftpack@sign
  9721  002812  EC7D  F018         	call	___ftpack	;wreg free
  9722  002816  C01A  F075         	movff	?___ftpack,?___ftmul
  9723  00281A  C01B  F076         	movff	?___ftpack+1,?___ftmul+1
  9724  00281E  C01C  F077         	movff	?___ftpack+2,?___ftmul+2
  9725  002822  0012               	return	
  9726  002824                     __end_of___ftmul:
  9727                           	opt stack 0
  9728                           tblptru	equ	0xFF8
  9729                           tblptrh	equ	0xFF7
  9730                           tblptrl	equ	0xFF6
  9731                           tablat	equ	0xFF5
  9732                           prodh	equ	0xFF4
  9733                           prodl	equ	0xFF3
  9734                           intcon	equ	0xFF2
  9735                           indf0	equ	0xFEF
  9736                           postinc0	equ	0xFEE
  9737                           fsr0h	equ	0xFEA
  9738                           fsr0l	equ	0xFE9
  9739                           wreg	equ	0xFE8
  9740                           indf1	equ	0xFE7
  9741                           postdec1	equ	0xFE5
  9742                           fsr1h	equ	0xFE2
  9743                           fsr1l	equ	0xFE1
  9744                           indf2	equ	0xFDF
  9745                           postinc2	equ	0xFDE
  9746                           postdec2	equ	0xFDD
  9747                           fsr2h	equ	0xFDA
  9748                           fsr2l	equ	0xFD9
  9749                           status	equ	0xFD8
  9750                           
  9751 ;; *************** function ___awmod *****************
  9752 ;; Defined at:
  9753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  dividend        2   25[COMRAM] int 
  9756 ;;  divisor         2   27[COMRAM] int 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  sign            1   30[COMRAM] unsigned char 
  9759 ;;  counter         1   29[COMRAM] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  2   25[COMRAM] int 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9769 ;;      Params:         4       0       0       0       0       0       0
  9770 ;;      Locals:         2       0       0       0       0       0       0
  9771 ;;      Temps:          0       0       0       0       0       0       0
  9772 ;;      Totals:         6       0       0       0       0       0       0
  9773 ;;Total ram usage:        6 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    2
  9776 ;; This function calls:
  9777 ;;		Nothing
  9778 ;; This function is called by:
  9779 ;;		_fround
  9780 ;;		_scale
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text37
  9785  00345E                     __ptext37:
  9786                           	opt stack 0
  9787  00345E                     ___awmod:
  9788                           	opt stack 24
  9789                           
  9790                           ;incstack = 0
  9791  00345E  0E00               	movlw	0
  9792  003460  6E1F               	movwf	___awmod@sign,c
  9793  003462  AE1B               	btfss	___awmod@dividend+1,7,c
  9794  003464  D006               	goto	l3339
  9795  003466  6C1A               	negf	___awmod@dividend,c
  9796  003468  1E1B               	comf	___awmod@dividend+1,f,c
  9797  00346A  B0D8               	btfsc	status,0,c
  9798  00346C  2A1B               	incf	___awmod@dividend+1,f,c
  9799  00346E  0E01               	movlw	1
  9800  003470  6E1F               	movwf	___awmod@sign,c
  9801  003472                     l3339:
  9802  003472  AE1D               	btfss	___awmod@divisor+1,7,c
  9803  003474  D004               	goto	l3343
  9804  003476  6C1C               	negf	___awmod@divisor,c
  9805  003478  1E1D               	comf	___awmod@divisor+1,f,c
  9806  00347A  B0D8               	btfsc	status,0,c
  9807  00347C  2A1D               	incf	___awmod@divisor+1,f,c
  9808  00347E                     l3343:
  9809  00347E  501C               	movf	___awmod@divisor,w,c
  9810  003480  101D               	iorwf	___awmod@divisor+1,w,c
  9811  003482  B4D8               	btfsc	status,2,c
  9812  003484  D018               	goto	l3359
  9813  003486  0E01               	movlw	1
  9814  003488  6E1E               	movwf	___awmod@counter,c
  9815  00348A  D004               	goto	l3349
  9816  00348C                     l3347:
  9817  00348C  90D8               	bcf	status,0,c
  9818  00348E  361C               	rlcf	___awmod@divisor,f,c
  9819  003490  361D               	rlcf	___awmod@divisor+1,f,c
  9820  003492  2A1E               	incf	___awmod@counter,f,c
  9821  003494                     l3349:
  9822  003494  AE1D               	btfss	___awmod@divisor+1,7,c
  9823  003496  D7FA               	goto	l3347
  9824  003498                     l3351:
  9825  003498  501C               	movf	___awmod@divisor,w,c
  9826  00349A  5C1A               	subwf	___awmod@dividend,w,c
  9827  00349C  501D               	movf	___awmod@divisor+1,w,c
  9828  00349E  581B               	subwfb	___awmod@dividend+1,w,c
  9829  0034A0  A0D8               	btfss	status,0,c
  9830  0034A2  D004               	goto	l3355
  9831  0034A4  501C               	movf	___awmod@divisor,w,c
  9832  0034A6  5E1A               	subwf	___awmod@dividend,f,c
  9833  0034A8  501D               	movf	___awmod@divisor+1,w,c
  9834  0034AA  5A1B               	subwfb	___awmod@dividend+1,f,c
  9835  0034AC                     l3355:
  9836  0034AC  90D8               	bcf	status,0,c
  9837  0034AE  321D               	rrcf	___awmod@divisor+1,f,c
  9838  0034B0  321C               	rrcf	___awmod@divisor,f,c
  9839  0034B2  2E1E               	decfsz	___awmod@counter,f,c
  9840  0034B4  D7F1               	goto	l3351
  9841  0034B6                     l3359:
  9842  0034B6  501F               	movf	___awmod@sign,w,c
  9843  0034B8  B4D8               	btfsc	status,2,c
  9844  0034BA  D004               	goto	l3363
  9845  0034BC  6C1A               	negf	___awmod@dividend,c
  9846  0034BE  1E1B               	comf	___awmod@dividend+1,f,c
  9847  0034C0  B0D8               	btfsc	status,0,c
  9848  0034C2  2A1B               	incf	___awmod@dividend+1,f,c
  9849  0034C4                     l3363:
  9850  0034C4  C01A  F01A         	movff	___awmod@dividend,?___awmod
  9851  0034C8  C01B  F01B         	movff	___awmod@dividend+1,?___awmod+1
  9852  0034CC  0012               	return	
  9853  0034CE                     __end_of___awmod:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           intcon	equ	0xFF2
  9862                           indf0	equ	0xFEF
  9863                           postinc0	equ	0xFEE
  9864                           fsr0h	equ	0xFEA
  9865                           fsr0l	equ	0xFE9
  9866                           wreg	equ	0xFE8
  9867                           indf1	equ	0xFE7
  9868                           postdec1	equ	0xFE5
  9869                           fsr1h	equ	0xFE2
  9870                           fsr1l	equ	0xFE1
  9871                           indf2	equ	0xFDF
  9872                           postinc2	equ	0xFDE
  9873                           postdec2	equ	0xFDD
  9874                           fsr2h	equ	0xFDA
  9875                           fsr2l	equ	0xFD9
  9876                           status	equ	0xFD8
  9877                           
  9878 ;; *************** function ___awdiv *****************
  9879 ;; Defined at:
  9880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;  dividend        2   31[COMRAM] int 
  9883 ;;  divisor         2   33[COMRAM] int 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  quotient        2   37[COMRAM] int 
  9886 ;;  sign            1   36[COMRAM] unsigned char 
  9887 ;;  counter         1   35[COMRAM] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  2   31[COMRAM] int 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9897 ;;      Params:         4       0       0       0       0       0       0
  9898 ;;      Locals:         4       0       0       0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0
  9900 ;;      Totals:         8       0       0       0       0       0       0
  9901 ;;Total ram usage:        8 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    2
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_fround
  9908 ;;		_scale
  9909 ;;		_sprintf
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text38
  9914  003358                     __ptext38:
  9915                           	opt stack 0
  9916  003358                     ___awdiv:
  9917                           	opt stack 24
  9918                           
  9919                           ;incstack = 0
  9920  003358  0E00               	movlw	0
  9921  00335A  6E25               	movwf	___awdiv@sign,c
  9922  00335C  AE23               	btfss	___awdiv@divisor+1,7,c
  9923  00335E  D006               	goto	l4747
  9924  003360  6C22               	negf	___awdiv@divisor,c
  9925  003362  1E23               	comf	___awdiv@divisor+1,f,c
  9926  003364  B0D8               	btfsc	status,0,c
  9927  003366  2A23               	incf	___awdiv@divisor+1,f,c
  9928  003368  0E01               	movlw	1
  9929  00336A  6E25               	movwf	___awdiv@sign,c
  9930  00336C                     l4747:
  9931  00336C  AE21               	btfss	___awdiv@dividend+1,7,c
  9932  00336E  D006               	goto	l4753
  9933  003370  6C20               	negf	___awdiv@dividend,c
  9934  003372  1E21               	comf	___awdiv@dividend+1,f,c
  9935  003374  B0D8               	btfsc	status,0,c
  9936  003376  2A21               	incf	___awdiv@dividend+1,f,c
  9937  003378  0E01               	movlw	1
  9938  00337A  1A25               	xorwf	___awdiv@sign,f,c
  9939  00337C                     l4753:
  9940  00337C  0E00               	movlw	0
  9941  00337E  6E27               	movwf	___awdiv@quotient+1,c
  9942  003380  0E00               	movlw	0
  9943  003382  6E26               	movwf	___awdiv@quotient,c
  9944  003384  5022               	movf	___awdiv@divisor,w,c
  9945  003386  1023               	iorwf	___awdiv@divisor+1,w,c
  9946  003388  B4D8               	btfsc	status,2,c
  9947  00338A  D01C               	goto	l4775
  9948  00338C  0E01               	movlw	1
  9949  00338E  6E24               	movwf	___awdiv@counter,c
  9950  003390  D004               	goto	l4761
  9951  003392                     l4759:
  9952  003392  90D8               	bcf	status,0,c
  9953  003394  3622               	rlcf	___awdiv@divisor,f,c
  9954  003396  3623               	rlcf	___awdiv@divisor+1,f,c
  9955  003398  2A24               	incf	___awdiv@counter,f,c
  9956  00339A                     l4761:
  9957  00339A  AE23               	btfss	___awdiv@divisor+1,7,c
  9958  00339C  D7FA               	goto	l4759
  9959  00339E                     l4763:
  9960  00339E  90D8               	bcf	status,0,c
  9961  0033A0  3626               	rlcf	___awdiv@quotient,f,c
  9962  0033A2  3627               	rlcf	___awdiv@quotient+1,f,c
  9963  0033A4  5022               	movf	___awdiv@divisor,w,c
  9964  0033A6  5C20               	subwf	___awdiv@dividend,w,c
  9965  0033A8  5023               	movf	___awdiv@divisor+1,w,c
  9966  0033AA  5821               	subwfb	___awdiv@dividend+1,w,c
  9967  0033AC  A0D8               	btfss	status,0,c
  9968  0033AE  D005               	goto	l4771
  9969  0033B0  5022               	movf	___awdiv@divisor,w,c
  9970  0033B2  5E20               	subwf	___awdiv@dividend,f,c
  9971  0033B4  5023               	movf	___awdiv@divisor+1,w,c
  9972  0033B6  5A21               	subwfb	___awdiv@dividend+1,f,c
  9973  0033B8  8026               	bsf	___awdiv@quotient,0,c
  9974  0033BA                     l4771:
  9975  0033BA  90D8               	bcf	status,0,c
  9976  0033BC  3223               	rrcf	___awdiv@divisor+1,f,c
  9977  0033BE  3222               	rrcf	___awdiv@divisor,f,c
  9978  0033C0  2E24               	decfsz	___awdiv@counter,f,c
  9979  0033C2  D7ED               	goto	l4763
  9980  0033C4                     l4775:
  9981  0033C4  5025               	movf	___awdiv@sign,w,c
  9982  0033C6  B4D8               	btfsc	status,2,c
  9983  0033C8  D004               	goto	l4779
  9984  0033CA  6C26               	negf	___awdiv@quotient,c
  9985  0033CC  1E27               	comf	___awdiv@quotient+1,f,c
  9986  0033CE  B0D8               	btfsc	status,0,c
  9987  0033D0  2A27               	incf	___awdiv@quotient+1,f,c
  9988  0033D2                     l4779:
  9989  0033D2  C026  F020         	movff	___awdiv@quotient,?___awdiv
  9990  0033D6  C027  F021         	movff	___awdiv@quotient+1,?___awdiv+1
  9991  0033DA  0012               	return	
  9992  0033DC                     __end_of___awdiv:
  9993                           	opt stack 0
  9994                           tblptru	equ	0xFF8
  9995                           tblptrh	equ	0xFF7
  9996                           tblptrl	equ	0xFF6
  9997                           tablat	equ	0xFF5
  9998                           prodh	equ	0xFF4
  9999                           prodl	equ	0xFF3
 10000                           intcon	equ	0xFF2
 10001                           indf0	equ	0xFEF
 10002                           postinc0	equ	0xFEE
 10003                           fsr0h	equ	0xFEA
 10004                           fsr0l	equ	0xFE9
 10005                           wreg	equ	0xFE8
 10006                           indf1	equ	0xFE7
 10007                           postdec1	equ	0xFE5
 10008                           fsr1h	equ	0xFE2
 10009                           fsr1l	equ	0xFE1
 10010                           indf2	equ	0xFDF
 10011                           postinc2	equ	0xFDE
 10012                           postdec2	equ	0xFDD
 10013                           fsr2h	equ	0xFDA
 10014                           fsr2l	equ	0xFD9
 10015                           status	equ	0xFD8
 10016                           
 10017 ;; *************** function __tdiv_to_l_ *****************
 10018 ;; Defined at:
 10019 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  f1              3   25[COMRAM] float 
 10022 ;;  f2              3   28[COMRAM] float 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  quot            4   34[COMRAM] unsigned long 
 10025 ;;  exp1            1   39[COMRAM] unsigned char 
 10026 ;;  cntr            1   38[COMRAM] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  4   25[COMRAM] unsigned long 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10036 ;;      Params:         6       0       0       0       0       0       0
 10037 ;;      Locals:         6       0       0       0       0       0       0
 10038 ;;      Temps:          3       0       0       0       0       0       0
 10039 ;;      Totals:        15       0       0       0       0       0       0
 10040 ;;Total ram usage:       15 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    2
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_sprintf
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text39
 10051  002AA8                     __ptext39:
 10052                           	opt stack 0
 10053  002AA8                     __tdiv_to_l_:
 10054                           	opt stack 25
 10055                           
 10056                           ;incstack = 0
 10057  002AA8  C01C  F020         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10058  002AAC  6A21               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10059  002AAE  6A22               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10060  002AB0  341B               	rlcf	__tdiv_to_l_@f1+1,w,c
 10061  002AB2  3620               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10062  002AB4  E301               	bnc	u4921
 10063  002AB6  8021               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10064  002AB8                     u4921:
 10065  002AB8  5020               	movf	??__tdiv_to_l_,w,c
 10066  002ABA  6E28               	movwf	__tdiv_to_l_@exp1,c
 10067  002ABC  5028               	movf	__tdiv_to_l_@exp1,w,c
 10068  002ABE  A4D8               	btfss	status,2,c
 10069  002AC0  D009               	goto	l4887
 10070  002AC2  0E00               	movlw	0
 10071  002AC4  6E1A               	movwf	?__tdiv_to_l_,c
 10072  002AC6  0E00               	movlw	0
 10073  002AC8  6E1B               	movwf	?__tdiv_to_l_+1,c
 10074  002ACA  0E00               	movlw	0
 10075  002ACC  6E1C               	movwf	?__tdiv_to_l_+2,c
 10076  002ACE  0E00               	movlw	0
 10077  002AD0  6E1D               	movwf	?__tdiv_to_l_+3,c
 10078  002AD2  0012               	return	
 10079  002AD4                     l4887:
 10080  002AD4  C01F  F020         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10081  002AD8  6A21               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10082  002ADA  6A22               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10083  002ADC  341E               	rlcf	__tdiv_to_l_@f2+1,w,c
 10084  002ADE  3620               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10085  002AE0  E301               	bnc	u4941
 10086  002AE2  8021               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10087  002AE4                     u4941:
 10088  002AE4  5020               	movf	??__tdiv_to_l_,w,c
 10089  002AE6  6E27               	movwf	__tdiv_to_l_@cntr,c
 10090  002AE8  5027               	movf	__tdiv_to_l_@cntr,w,c
 10091  002AEA  A4D8               	btfss	status,2,c
 10092  002AEC  D009               	goto	l4893
 10093  002AEE  0E00               	movlw	0
 10094  002AF0  6E1A               	movwf	?__tdiv_to_l_,c
 10095  002AF2  0E00               	movlw	0
 10096  002AF4  6E1B               	movwf	?__tdiv_to_l_+1,c
 10097  002AF6  0E00               	movlw	0
 10098  002AF8  6E1C               	movwf	?__tdiv_to_l_+2,c
 10099  002AFA  0E00               	movlw	0
 10100  002AFC  6E1D               	movwf	?__tdiv_to_l_+3,c
 10101  002AFE  0012               	return	
 10102  002B00                     l4893:
 10103  002B00  8E1B               	bsf	__tdiv_to_l_@f1+1,7,c
 10104  002B02  0EFF               	movlw	255
 10105  002B04  161A               	andwf	__tdiv_to_l_@f1,f,c
 10106  002B06  0EFF               	movlw	255
 10107  002B08  161B               	andwf	__tdiv_to_l_@f1+1,f,c
 10108  002B0A  0E00               	movlw	0
 10109  002B0C  161C               	andwf	__tdiv_to_l_@f1+2,f,c
 10110  002B0E  8E1E               	bsf	__tdiv_to_l_@f2+1,7,c
 10111  002B10  0EFF               	movlw	255
 10112  002B12  161D               	andwf	__tdiv_to_l_@f2,f,c
 10113  002B14  0EFF               	movlw	255
 10114  002B16  161E               	andwf	__tdiv_to_l_@f2+1,f,c
 10115  002B18  0E00               	movlw	0
 10116  002B1A  161F               	andwf	__tdiv_to_l_@f2+2,f,c
 10117  002B1C  0E00               	movlw	0
 10118  002B1E  6E23               	movwf	__tdiv_to_l_@quot,c
 10119  002B20  0E00               	movlw	0
 10120  002B22  6E24               	movwf	__tdiv_to_l_@quot+1,c
 10121  002B24  0E00               	movlw	0
 10122  002B26  6E25               	movwf	__tdiv_to_l_@quot+2,c
 10123  002B28  0E00               	movlw	0
 10124  002B2A  6E26               	movwf	__tdiv_to_l_@quot+3,c
 10125  002B2C  0E7F               	movlw	127
 10126  002B2E  5E28               	subwf	__tdiv_to_l_@exp1,f,c
 10127  002B30  5027               	movf	__tdiv_to_l_@cntr,w,c
 10128  002B32  0F98               	addlw	152
 10129  002B34  5E28               	subwf	__tdiv_to_l_@exp1,f,c
 10130  002B36  0E18               	movlw	24
 10131  002B38  6E27               	movwf	__tdiv_to_l_@cntr,c
 10132  002B3A                     l904:
 10133  002B3A  90D8               	bcf	status,0,c
 10134  002B3C  3623               	rlcf	__tdiv_to_l_@quot,f,c
 10135  002B3E  3624               	rlcf	__tdiv_to_l_@quot+1,f,c
 10136  002B40  3625               	rlcf	__tdiv_to_l_@quot+2,f,c
 10137  002B42  3626               	rlcf	__tdiv_to_l_@quot+3,f,c
 10138  002B44  501D               	movf	__tdiv_to_l_@f2,w,c
 10139  002B46  5C1A               	subwf	__tdiv_to_l_@f1,w,c
 10140  002B48  501E               	movf	__tdiv_to_l_@f2+1,w,c
 10141  002B4A  581B               	subwfb	__tdiv_to_l_@f1+1,w,c
 10142  002B4C  501F               	movf	__tdiv_to_l_@f2+2,w,c
 10143  002B4E  581C               	subwfb	__tdiv_to_l_@f1+2,w,c
 10144  002B50  A0D8               	btfss	status,0,c
 10145  002B52  D007               	goto	l905
 10146  002B54  501D               	movf	__tdiv_to_l_@f2,w,c
 10147  002B56  5E1A               	subwf	__tdiv_to_l_@f1,f,c
 10148  002B58  501E               	movf	__tdiv_to_l_@f2+1,w,c
 10149  002B5A  5A1B               	subwfb	__tdiv_to_l_@f1+1,f,c
 10150  002B5C  501F               	movf	__tdiv_to_l_@f2+2,w,c
 10151  002B5E  5A1C               	subwfb	__tdiv_to_l_@f1+2,f,c
 10152  002B60  8023               	bsf	__tdiv_to_l_@quot,0,c
 10153  002B62                     l905:
 10154  002B62  90D8               	bcf	status,0,c
 10155  002B64  361A               	rlcf	__tdiv_to_l_@f1,f,c
 10156  002B66  361B               	rlcf	__tdiv_to_l_@f1+1,f,c
 10157  002B68  361C               	rlcf	__tdiv_to_l_@f1+2,f,c
 10158  002B6A  2E27               	decfsz	__tdiv_to_l_@cntr,f,c
 10159  002B6C  D7E6               	goto	l904
 10160  002B6E  AE28               	btfss	__tdiv_to_l_@exp1,7,c
 10161  002B70  D016               	goto	l4927
 10162  002B72  5028               	movf	__tdiv_to_l_@exp1,w,c
 10163  002B74  0A80               	xorlw	128
 10164  002B76  0F97               	addlw	151
 10165  002B78  B0D8               	btfsc	status,0,c
 10166  002B7A  D009               	goto	l4923
 10167  002B7C  0E00               	movlw	0
 10168  002B7E  6E1A               	movwf	?__tdiv_to_l_,c
 10169  002B80  0E00               	movlw	0
 10170  002B82  6E1B               	movwf	?__tdiv_to_l_+1,c
 10171  002B84  0E00               	movlw	0
 10172  002B86  6E1C               	movwf	?__tdiv_to_l_+2,c
 10173  002B88  0E00               	movlw	0
 10174  002B8A  6E1D               	movwf	?__tdiv_to_l_+3,c
 10175  002B8C  0012               	return	
 10176  002B8E                     l4923:
 10177  002B8E  90D8               	bcf	status,0,c
 10178  002B90  3226               	rrcf	__tdiv_to_l_@quot+3,f,c
 10179  002B92  3225               	rrcf	__tdiv_to_l_@quot+2,f,c
 10180  002B94  3224               	rrcf	__tdiv_to_l_@quot+1,f,c
 10181  002B96  3223               	rrcf	__tdiv_to_l_@quot,f,c
 10182  002B98  3E28               	incfsz	__tdiv_to_l_@exp1,f,c
 10183  002B9A  D7F9               	goto	l4923
 10184  002B9C  D015               	goto	l911
 10185  002B9E                     l4927:
 10186  002B9E  0E17               	movlw	23
 10187  002BA0  6428               	cpfsgt	__tdiv_to_l_@exp1,c
 10188  002BA2  D00F               	goto	l4935
 10189  002BA4  0E00               	movlw	0
 10190  002BA6  6E1A               	movwf	?__tdiv_to_l_,c
 10191  002BA8  0E00               	movlw	0
 10192  002BAA  6E1B               	movwf	?__tdiv_to_l_+1,c
 10193  002BAC  0E00               	movlw	0
 10194  002BAE  6E1C               	movwf	?__tdiv_to_l_+2,c
 10195  002BB0  0E00               	movlw	0
 10196  002BB2  6E1D               	movwf	?__tdiv_to_l_+3,c
 10197  002BB4  0012               	return	
 10198  002BB6                     l4933:
 10199  002BB6  90D8               	bcf	status,0,c
 10200  002BB8  3623               	rlcf	__tdiv_to_l_@quot,f,c
 10201  002BBA  3624               	rlcf	__tdiv_to_l_@quot+1,f,c
 10202  002BBC  3625               	rlcf	__tdiv_to_l_@quot+2,f,c
 10203  002BBE  3626               	rlcf	__tdiv_to_l_@quot+3,f,c
 10204  002BC0  0628               	decf	__tdiv_to_l_@exp1,f,c
 10205  002BC2                     l4935:
 10206  002BC2  5028               	movf	__tdiv_to_l_@exp1,w,c
 10207  002BC4  A4D8               	btfss	status,2,c
 10208  002BC6  D7F7               	goto	l4933
 10209  002BC8                     l911:
 10210  002BC8  C023  F01A         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10211  002BCC  C024  F01B         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10212  002BD0  C025  F01C         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10213  002BD4  C026  F01D         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10214  002BD8  0012               	return		;funcret
 10215  002BDA                     __end_of__tdiv_to_l_:
 10216                           	opt stack 0
 10217                           tblptru	equ	0xFF8
 10218                           tblptrh	equ	0xFF7
 10219                           tblptrl	equ	0xFF6
 10220                           tablat	equ	0xFF5
 10221                           prodh	equ	0xFF4
 10222                           prodl	equ	0xFF3
 10223                           intcon	equ	0xFF2
 10224                           indf0	equ	0xFEF
 10225                           postinc0	equ	0xFEE
 10226                           fsr0h	equ	0xFEA
 10227                           fsr0l	equ	0xFE9
 10228                           wreg	equ	0xFE8
 10229                           indf1	equ	0xFE7
 10230                           postdec1	equ	0xFE5
 10231                           fsr1h	equ	0xFE2
 10232                           fsr1l	equ	0xFE1
 10233                           indf2	equ	0xFDF
 10234                           postinc2	equ	0xFDE
 10235                           postdec2	equ	0xFDD
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function __div_to_l_ *****************
 10241 ;; Defined at:
 10242 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  f1              3   25[COMRAM] unsigned long 
 10245 ;;  f2              3   28[COMRAM] unsigned long 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;  quot            4   31[COMRAM] unsigned long 
 10248 ;;  exp1            1   36[COMRAM] unsigned char 
 10249 ;;  cntr            1   35[COMRAM] unsigned char 
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  4   25[COMRAM] unsigned long 
 10252 ;; Registers used:
 10253 ;;		wreg, status,2, status,0
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10259 ;;      Params:         6       0       0       0       0       0       0
 10260 ;;      Locals:         6       0       0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0
 10262 ;;      Totals:        12       0       0       0       0       0       0
 10263 ;;Total ram usage:       12 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:    2
 10266 ;; This function calls:
 10267 ;;		Nothing
 10268 ;; This function is called by:
 10269 ;;		_sprintf
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text40
 10274  002BDA                     __ptext40:
 10275                           	opt stack 0
 10276  002BDA                     __div_to_l_:
 10277                           	opt stack 25
 10278                           
 10279                           ;incstack = 0
 10280  002BDA  341C               	rlcf	__div_to_l_@f1+2,w,c
 10281  002BDC  341D               	rlcf	__div_to_l_@f1+3,w,c
 10282  002BDE  6E25               	movwf	__div_to_l_@exp1,c
 10283  002BE0  5025               	movf	__div_to_l_@exp1,w,c
 10284  002BE2  A4D8               	btfss	status,2,c
 10285  002BE4  D009               	goto	l4943
 10286  002BE6  0E00               	movlw	0
 10287  002BE8  6E1A               	movwf	?__div_to_l_,c
 10288  002BEA  0E00               	movlw	0
 10289  002BEC  6E1B               	movwf	?__div_to_l_+1,c
 10290  002BEE  0E00               	movlw	0
 10291  002BF0  6E1C               	movwf	?__div_to_l_+2,c
 10292  002BF2  0E00               	movlw	0
 10293  002BF4  6E1D               	movwf	?__div_to_l_+3,c
 10294  002BF6  0012               	return	
 10295  002BF8                     l4943:
 10296  002BF8  341F               	rlcf	__div_to_l_@f2+2,w,c
 10297  002BFA  3420               	rlcf	__div_to_l_@f2+3,w,c
 10298  002BFC  6E24               	movwf	__div_to_l_@cntr,c
 10299  002BFE  5024               	movf	__div_to_l_@cntr,w,c
 10300  002C00  A4D8               	btfss	status,2,c
 10301  002C02  D009               	goto	l4949
 10302  002C04  0E00               	movlw	0
 10303  002C06  6E1A               	movwf	?__div_to_l_,c
 10304  002C08  0E00               	movlw	0
 10305  002C0A  6E1B               	movwf	?__div_to_l_+1,c
 10306  002C0C  0E00               	movlw	0
 10307  002C0E  6E1C               	movwf	?__div_to_l_+2,c
 10308  002C10  0E00               	movlw	0
 10309  002C12  6E1D               	movwf	?__div_to_l_+3,c
 10310  002C14  0012               	return	
 10311  002C16                     l4949:
 10312  002C16  8E1C               	bsf	__div_to_l_@f1+2,7,c
 10313  002C18  0EFF               	movlw	255
 10314  002C1A  161A               	andwf	__div_to_l_@f1,f,c
 10315  002C1C  0EFF               	movlw	255
 10316  002C1E  161B               	andwf	__div_to_l_@f1+1,f,c
 10317  002C20  0EFF               	movlw	255
 10318  002C22  161C               	andwf	__div_to_l_@f1+2,f,c
 10319  002C24  0E00               	movlw	0
 10320  002C26  161D               	andwf	__div_to_l_@f1+3,f,c
 10321  002C28  8E1F               	bsf	__div_to_l_@f2+2,7,c
 10322  002C2A  0EFF               	movlw	255
 10323  002C2C  161D               	andwf	__div_to_l_@f2,f,c
 10324  002C2E  0EFF               	movlw	255
 10325  002C30  161E               	andwf	__div_to_l_@f2+1,f,c
 10326  002C32  0EFF               	movlw	255
 10327  002C34  161F               	andwf	__div_to_l_@f2+2,f,c
 10328  002C36  0E00               	movlw	0
 10329  002C38  1620               	andwf	__div_to_l_@f2+3,f,c
 10330  002C3A  0E00               	movlw	0
 10331  002C3C  6E20               	movwf	__div_to_l_@quot,c
 10332  002C3E  0E00               	movlw	0
 10333  002C40  6E21               	movwf	__div_to_l_@quot+1,c
 10334  002C42  0E00               	movlw	0
 10335  002C44  6E22               	movwf	__div_to_l_@quot+2,c
 10336  002C46  0E00               	movlw	0
 10337  002C48  6E23               	movwf	__div_to_l_@quot+3,c
 10338  002C4A  0E7F               	movlw	127
 10339  002C4C  5E25               	subwf	__div_to_l_@exp1,f,c
 10340  002C4E  5024               	movf	__div_to_l_@cntr,w,c
 10341  002C50  0FA0               	addlw	160
 10342  002C52  5E25               	subwf	__div_to_l_@exp1,f,c
 10343  002C54  0E20               	movlw	32
 10344  002C56  6E24               	movwf	__div_to_l_@cntr,c
 10345  002C58                     l4963:
 10346  002C58  90D8               	bcf	status,0,c
 10347  002C5A  3620               	rlcf	__div_to_l_@quot,f,c
 10348  002C5C  3621               	rlcf	__div_to_l_@quot+1,f,c
 10349  002C5E  3622               	rlcf	__div_to_l_@quot+2,f,c
 10350  002C60  3623               	rlcf	__div_to_l_@quot+3,f,c
 10351  002C62  501D               	movf	__div_to_l_@f2,w,c
 10352  002C64  5C1A               	subwf	__div_to_l_@f1,w,c
 10353  002C66  501E               	movf	__div_to_l_@f2+1,w,c
 10354  002C68  581B               	subwfb	__div_to_l_@f1+1,w,c
 10355  002C6A  501F               	movf	__div_to_l_@f2+2,w,c
 10356  002C6C  581C               	subwfb	__div_to_l_@f1+2,w,c
 10357  002C6E  5020               	movf	__div_to_l_@f2+3,w,c
 10358  002C70  581D               	subwfb	__div_to_l_@f1+3,w,c
 10359  002C72  A0D8               	btfss	status,0,c
 10360  002C74  D009               	goto	l4971
 10361  002C76  501D               	movf	__div_to_l_@f2,w,c
 10362  002C78  5E1A               	subwf	__div_to_l_@f1,f,c
 10363  002C7A  501E               	movf	__div_to_l_@f2+1,w,c
 10364  002C7C  5A1B               	subwfb	__div_to_l_@f1+1,f,c
 10365  002C7E  501F               	movf	__div_to_l_@f2+2,w,c
 10366  002C80  5A1C               	subwfb	__div_to_l_@f1+2,f,c
 10367  002C82  5020               	movf	__div_to_l_@f2+3,w,c
 10368  002C84  5A1D               	subwfb	__div_to_l_@f1+3,f,c
 10369  002C86  8020               	bsf	__div_to_l_@quot,0,c
 10370  002C88                     l4971:
 10371  002C88  90D8               	bcf	status,0,c
 10372  002C8A  361A               	rlcf	__div_to_l_@f1,f,c
 10373  002C8C  361B               	rlcf	__div_to_l_@f1+1,f,c
 10374  002C8E  361C               	rlcf	__div_to_l_@f1+2,f,c
 10375  002C90  361D               	rlcf	__div_to_l_@f1+3,f,c
 10376  002C92  2E24               	decfsz	__div_to_l_@cntr,f,c
 10377  002C94  D7E1               	goto	l4963
 10378  002C96  AE25               	btfss	__div_to_l_@exp1,7,c
 10379  002C98  D016               	goto	l4987
 10380  002C9A  5025               	movf	__div_to_l_@exp1,w,c
 10381  002C9C  0A80               	xorlw	128
 10382  002C9E  0F9F               	addlw	159
 10383  002CA0  B0D8               	btfsc	status,0,c
 10384  002CA2  D009               	goto	l4983
 10385  002CA4  0E00               	movlw	0
 10386  002CA6  6E1A               	movwf	?__div_to_l_,c
 10387  002CA8  0E00               	movlw	0
 10388  002CAA  6E1B               	movwf	?__div_to_l_+1,c
 10389  002CAC  0E00               	movlw	0
 10390  002CAE  6E1C               	movwf	?__div_to_l_+2,c
 10391  002CB0  0E00               	movlw	0
 10392  002CB2  6E1D               	movwf	?__div_to_l_+3,c
 10393  002CB4  0012               	return	
 10394  002CB6                     l4983:
 10395  002CB6  90D8               	bcf	status,0,c
 10396  002CB8  3223               	rrcf	__div_to_l_@quot+3,f,c
 10397  002CBA  3222               	rrcf	__div_to_l_@quot+2,f,c
 10398  002CBC  3221               	rrcf	__div_to_l_@quot+1,f,c
 10399  002CBE  3220               	rrcf	__div_to_l_@quot,f,c
 10400  002CC0  3E25               	incfsz	__div_to_l_@exp1,f,c
 10401  002CC2  D7F9               	goto	l4983
 10402  002CC4  D015               	goto	l807
 10403  002CC6                     l4987:
 10404  002CC6  0E1F               	movlw	31
 10405  002CC8  6425               	cpfsgt	__div_to_l_@exp1,c
 10406  002CCA  D00F               	goto	l4995
 10407  002CCC  0E00               	movlw	0
 10408  002CCE  6E1A               	movwf	?__div_to_l_,c
 10409  002CD0  0E00               	movlw	0
 10410  002CD2  6E1B               	movwf	?__div_to_l_+1,c
 10411  002CD4  0E00               	movlw	0
 10412  002CD6  6E1C               	movwf	?__div_to_l_+2,c
 10413  002CD8  0E00               	movlw	0
 10414  002CDA  6E1D               	movwf	?__div_to_l_+3,c
 10415  002CDC  0012               	return	
 10416  002CDE                     l4993:
 10417  002CDE  90D8               	bcf	status,0,c
 10418  002CE0  3620               	rlcf	__div_to_l_@quot,f,c
 10419  002CE2  3621               	rlcf	__div_to_l_@quot+1,f,c
 10420  002CE4  3622               	rlcf	__div_to_l_@quot+2,f,c
 10421  002CE6  3623               	rlcf	__div_to_l_@quot+3,f,c
 10422  002CE8  0625               	decf	__div_to_l_@exp1,f,c
 10423  002CEA                     l4995:
 10424  002CEA  5025               	movf	__div_to_l_@exp1,w,c
 10425  002CEC  A4D8               	btfss	status,2,c
 10426  002CEE  D7F7               	goto	l4993
 10427  002CF0                     l807:
 10428  002CF0  C020  F01A         	movff	__div_to_l_@quot,?__div_to_l_
 10429  002CF4  C021  F01B         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10430  002CF8  C022  F01C         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10431  002CFC  C023  F01D         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10432  002D00  0012               	return		;funcret
 10433  002D02                     __end_of__div_to_l_:
 10434                           	opt stack 0
 10435                           tblptru	equ	0xFF8
 10436                           tblptrh	equ	0xFF7
 10437                           tblptrl	equ	0xFF6
 10438                           tablat	equ	0xFF5
 10439                           prodh	equ	0xFF4
 10440                           prodl	equ	0xFF3
 10441                           intcon	equ	0xFF2
 10442                           indf0	equ	0xFEF
 10443                           postinc0	equ	0xFEE
 10444                           fsr0h	equ	0xFEA
 10445                           fsr0l	equ	0xFE9
 10446                           wreg	equ	0xFE8
 10447                           indf1	equ	0xFE7
 10448                           postdec1	equ	0xFE5
 10449                           fsr1h	equ	0xFE2
 10450                           fsr1l	equ	0xFE1
 10451                           indf2	equ	0xFDF
 10452                           postinc2	equ	0xFDE
 10453                           postdec2	equ	0xFDD
 10454                           fsr2h	equ	0xFDA
 10455                           fsr2l	equ	0xFD9
 10456                           status	equ	0xFD8
 10457                           
 10458 ;; *************** function ___lltoft *****************
 10459 ;; Defined at:
 10460 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  c               4   17[BANK0 ] unsigned long 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  exp             1   37[COMRAM] unsigned char 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  3   17[BANK0 ] float 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10474 ;;      Params:         0       4       0       0       0       0       0
 10475 ;;      Locals:         1       0       0       0       0       0       0
 10476 ;;      Temps:          4       0       0       0       0       0       0
 10477 ;;      Totals:         5       4       0       0       0       0       0
 10478 ;;Total ram usage:        9 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    3
 10481 ;; This function calls:
 10482 ;;		___ftpack
 10483 ;; This function is called by:
 10484 ;;		_sprintf
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text41
 10489  0034CE                     __ptext41:
 10490                           	opt stack 0
 10491  0034CE                     ___lltoft:
 10492                           	opt stack 24
 10493                           
 10494                           ;incstack = 0
 10495  0034CE  0E8E               	movlw	142
 10496  0034D0  6E26               	movwf	___lltoft@exp,c
 10497  0034D2  D007               	goto	l5023
 10498  0034D4                     l5021:
 10499  0034D4  0100               	movlb	0	; () banked
 10500  0034D6  90D8               	bcf	status,0,c
 10501  0034D8  3374               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10502  0034DA  3373               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10503  0034DC  3372               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10504  0034DE  3371               	rrcf	___lltoft@c& (0+255),f,b
 10505  0034E0  2A26               	incf	___lltoft@exp,f,c
 10506  0034E2                     l5023:
 10507  0034E2  0E00               	movlw	0
 10508  0034E4  0100               	movlb	0	; () banked
 10509  0034E6  1571               	andwf	___lltoft@c& (0+255),w,b
 10510  0034E8  6E22               	movwf	??___lltoft& (0+255),c
 10511  0034EA  0E00               	movlw	0
 10512  0034EC  0100               	movlb	0	; () banked
 10513  0034EE  1572               	andwf	(___lltoft@c+1)& (0+255),w,b
 10514  0034F0  6E23               	movwf	(??___lltoft+1)& (0+255),c
 10515  0034F2  0E00               	movlw	0
 10516  0034F4  0100               	movlb	0	; () banked
 10517  0034F6  1573               	andwf	(___lltoft@c+2)& (0+255),w,b
 10518  0034F8  6E24               	movwf	(??___lltoft+2)& (0+255),c
 10519  0034FA  0EFF               	movlw	255
 10520  0034FC  0100               	movlb	0	; () banked
 10521  0034FE  1574               	andwf	(___lltoft@c+3)& (0+255),w,b
 10522  003500  6E25               	movwf	(??___lltoft+3)& (0+255),c
 10523  003502  5022               	movf	??___lltoft,w,c
 10524  003504  1023               	iorwf	??___lltoft+1,w,c
 10525  003506  1024               	iorwf	??___lltoft+2,w,c
 10526  003508  1025               	iorwf	??___lltoft+3,w,c
 10527  00350A  A4D8               	btfss	status,2,c
 10528  00350C  D7E3               	goto	l5021
 10529                           
 10530                           ; BSR set to: 0
 10531                           
 10532                           ; BSR set to: 0
 10533  00350E  C071  F01A         	movff	___lltoft@c,___ftpack@arg
 10534  003512  C072  F01B         	movff	___lltoft@c+1,___ftpack@arg+1
 10535  003516  C073  F01C         	movff	___lltoft@c+2,___ftpack@arg+2
 10536  00351A  C026  F01D         	movff	___lltoft@exp,___ftpack@exp
 10537  00351E  0E00               	movlw	0
 10538  003520  6E1E               	movwf	___ftpack@sign,c
 10539  003522  EC7D  F018         	call	___ftpack	;wreg free
 10540  003526  C01A  F071         	movff	?___ftpack,?___lltoft
 10541  00352A  C01B  F072         	movff	?___ftpack+1,?___lltoft+1
 10542  00352E  C01C  F073         	movff	?___ftpack+2,?___lltoft+2
 10543  003532  0012               	return	
 10544  003534                     __end_of___lltoft:
 10545                           	opt stack 0
 10546                           tblptru	equ	0xFF8
 10547                           tblptrh	equ	0xFF7
 10548                           tblptrl	equ	0xFF6
 10549                           tablat	equ	0xFF5
 10550                           prodh	equ	0xFF4
 10551                           prodl	equ	0xFF3
 10552                           intcon	equ	0xFF2
 10553                           indf0	equ	0xFEF
 10554                           postinc0	equ	0xFEE
 10555                           fsr0h	equ	0xFEA
 10556                           fsr0l	equ	0xFE9
 10557                           wreg	equ	0xFE8
 10558                           indf1	equ	0xFE7
 10559                           postdec1	equ	0xFE5
 10560                           fsr1h	equ	0xFE2
 10561                           fsr1l	equ	0xFE1
 10562                           indf2	equ	0xFDF
 10563                           postinc2	equ	0xFDE
 10564                           postdec2	equ	0xFDD
 10565                           fsr2h	equ	0xFDA
 10566                           fsr2l	equ	0xFD9
 10567                           status	equ	0xFD8
 10568                           
 10569 ;; *************** function ___llmod *****************
 10570 ;; Defined at:
 10571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;  dividend        4   17[BANK0 ] unsigned long 
 10574 ;;  divisor         4   21[BANK0 ] unsigned long 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  counter         1   38[COMRAM] unsigned char 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  4   17[BANK0 ] unsigned long 
 10579 ;; Registers used:
 10580 ;;		wreg, status,2, status,0
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10586 ;;      Params:         0       8       0       0       0       0       0
 10587 ;;      Locals:         1       0       0       0       0       0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0
 10589 ;;      Totals:         1       8       0       0       0       0       0
 10590 ;;Total ram usage:        9 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    2
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_sprintf
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text42
 10601  0031A8                     __ptext42:
 10602                           	opt stack 0
 10603  0031A8                     ___llmod:
 10604                           	opt stack 25
 10605                           
 10606                           ;incstack = 0
 10607  0031A8  0100               	movlb	0	; () banked
 10608  0031AA  5175               	movf	___llmod@divisor& (0+255),w,b
 10609  0031AC  0100               	movlb	0	; () banked
 10610  0031AE  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10611  0031B0  0100               	movlb	0	; () banked
 10612  0031B2  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10613  0031B4  0100               	movlb	0	; () banked
 10614  0031B6  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10615  0031B8  B4D8               	btfsc	status,2,c
 10616  0031BA  D037               	goto	l996
 10617                           
 10618                           ; BSR set to: 0
 10619  0031BC  0E01               	movlw	1
 10620  0031BE  6E27               	movwf	___llmod@counter,c
 10621  0031C0  D007               	goto	l3729
 10622  0031C2                     l3727:
 10623                           
 10624                           ; BSR set to: 0
 10625  0031C2  0100               	movlb	0	; () banked
 10626  0031C4  90D8               	bcf	status,0,c
 10627  0031C6  3775               	rlcf	___llmod@divisor& (0+255),f,b
 10628  0031C8  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10629  0031CA  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10630  0031CC  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10631  0031CE  2A27               	incf	___llmod@counter,f,c
 10632  0031D0                     l3729:
 10633                           
 10634                           ; BSR set to: 0
 10635  0031D0  0100               	movlb	0	; () banked
 10636  0031D2  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10637  0031D4  D7F6               	goto	l3727
 10638  0031D6                     l3731:
 10639                           
 10640                           ; BSR set to: 0
 10641  0031D6  0100               	movlb	0	; () banked
 10642  0031D8  5175               	movf	___llmod@divisor& (0+255),w,b
 10643  0031DA  0100               	movlb	0	; () banked
 10644  0031DC  5D71               	subwf	___llmod@dividend& (0+255),w,b
 10645  0031DE  0100               	movlb	0	; () banked
 10646  0031E0  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 10647  0031E2  0100               	movlb	0	; () banked
 10648  0031E4  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10649  0031E6  0100               	movlb	0	; () banked
 10650  0031E8  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 10651  0031EA  0100               	movlb	0	; () banked
 10652  0031EC  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10653  0031EE  0100               	movlb	0	; () banked
 10654  0031F0  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 10655  0031F2  0100               	movlb	0	; () banked
 10656  0031F4  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10657  0031F6  A0D8               	btfss	status,0,c
 10658  0031F8  D010               	goto	l3735
 10659                           
 10660                           ; BSR set to: 0
 10661  0031FA  0100               	movlb	0	; () banked
 10662  0031FC  5175               	movf	___llmod@divisor& (0+255),w,b
 10663  0031FE  0100               	movlb	0	; () banked
 10664  003200  5F71               	subwf	___llmod@dividend& (0+255),f,b
 10665  003202  0100               	movlb	0	; () banked
 10666  003204  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 10667  003206  0100               	movlb	0	; () banked
 10668  003208  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10669  00320A  0100               	movlb	0	; () banked
 10670  00320C  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 10671  00320E  0100               	movlb	0	; () banked
 10672  003210  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10673  003212  0100               	movlb	0	; () banked
 10674  003214  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 10675  003216  0100               	movlb	0	; () banked
 10676  003218  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10677  00321A                     l3735:
 10678                           
 10679                           ; BSR set to: 0
 10680  00321A  0100               	movlb	0	; () banked
 10681  00321C  90D8               	bcf	status,0,c
 10682  00321E  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10683  003220  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10684  003222  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10685  003224  3375               	rrcf	___llmod@divisor& (0+255),f,b
 10686                           
 10687                           ; BSR set to: 0
 10688  003226  2E27               	decfsz	___llmod@counter,f,c
 10689  003228  D7D6               	goto	l3731
 10690  00322A                     l996:
 10691                           
 10692                           ; BSR set to: 0
 10693  00322A  C071  F071         	movff	___llmod@dividend,?___llmod
 10694  00322E  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 10695  003232  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 10696  003236  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 10697                           
 10698                           ; BSR set to: 0
 10699  00323A  0012               	return		;funcret
 10700  00323C                     __end_of___llmod:
 10701                           	opt stack 0
 10702                           tblptru	equ	0xFF8
 10703                           tblptrh	equ	0xFF7
 10704                           tblptrl	equ	0xFF6
 10705                           tablat	equ	0xFF5
 10706                           prodh	equ	0xFF4
 10707                           prodl	equ	0xFF3
 10708                           intcon	equ	0xFF2
 10709                           indf0	equ	0xFEF
 10710                           postinc0	equ	0xFEE
 10711                           fsr0h	equ	0xFEA
 10712                           fsr0l	equ	0xFE9
 10713                           wreg	equ	0xFE8
 10714                           indf1	equ	0xFE7
 10715                           postdec1	equ	0xFE5
 10716                           fsr1h	equ	0xFE2
 10717                           fsr1l	equ	0xFE1
 10718                           indf2	equ	0xFDF
 10719                           postinc2	equ	0xFDE
 10720                           postdec2	equ	0xFDD
 10721                           fsr2h	equ	0xFDA
 10722                           fsr2l	equ	0xFD9
 10723                           status	equ	0xFD8
 10724                           
 10725 ;; *************** function ___lldiv *****************
 10726 ;; Defined at:
 10727 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  dividend        4   25[COMRAM] unsigned long 
 10730 ;;  divisor         4   29[COMRAM] unsigned long 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  quotient        4   33[COMRAM] unsigned long 
 10733 ;;  counter         1   37[COMRAM] unsigned char 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  4   25[COMRAM] unsigned long 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10743 ;;      Params:         8       0       0       0       0       0       0
 10744 ;;      Locals:         5       0       0       0       0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0
 10746 ;;      Totals:        13       0       0       0       0       0       0
 10747 ;;Total ram usage:       13 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:    2
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_sprintf
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text43
 10758  0033DC                     __ptext43:
 10759                           	opt stack 0
 10760  0033DC                     ___lldiv:
 10761                           	opt stack 25
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;incstack = 0
 10765  0033DC  0E00               	movlw	0
 10766  0033DE  6E22               	movwf	___lldiv@quotient,c
 10767  0033E0  0E00               	movlw	0
 10768  0033E2  6E23               	movwf	___lldiv@quotient+1,c
 10769  0033E4  0E00               	movlw	0
 10770  0033E6  6E24               	movwf	___lldiv@quotient+2,c
 10771  0033E8  0E00               	movlw	0
 10772  0033EA  6E25               	movwf	___lldiv@quotient+3,c
 10773  0033EC  501E               	movf	___lldiv@divisor,w,c
 10774  0033EE  101F               	iorwf	___lldiv@divisor+1,w,c
 10775  0033F0  1020               	iorwf	___lldiv@divisor+2,w,c
 10776  0033F2  1021               	iorwf	___lldiv@divisor+3,w,c
 10777  0033F4  B4D8               	btfsc	status,2,c
 10778  0033F6  D02A               	goto	l986
 10779  0033F8  0E01               	movlw	1
 10780  0033FA  6E26               	movwf	___lldiv@counter,c
 10781  0033FC  D006               	goto	l5005
 10782  0033FE                     l5003:
 10783  0033FE  90D8               	bcf	status,0,c
 10784  003400  361E               	rlcf	___lldiv@divisor,f,c
 10785  003402  361F               	rlcf	___lldiv@divisor+1,f,c
 10786  003404  3620               	rlcf	___lldiv@divisor+2,f,c
 10787  003406  3621               	rlcf	___lldiv@divisor+3,f,c
 10788  003408  2A26               	incf	___lldiv@counter,f,c
 10789  00340A                     l5005:
 10790  00340A  AE21               	btfss	___lldiv@divisor+3,7,c
 10791  00340C  D7F8               	goto	l5003
 10792  00340E                     l5007:
 10793  00340E  90D8               	bcf	status,0,c
 10794  003410  3622               	rlcf	___lldiv@quotient,f,c
 10795  003412  3623               	rlcf	___lldiv@quotient+1,f,c
 10796  003414  3624               	rlcf	___lldiv@quotient+2,f,c
 10797  003416  3625               	rlcf	___lldiv@quotient+3,f,c
 10798  003418  501E               	movf	___lldiv@divisor,w,c
 10799  00341A  5C1A               	subwf	___lldiv@dividend,w,c
 10800  00341C  501F               	movf	___lldiv@divisor+1,w,c
 10801  00341E  581B               	subwfb	___lldiv@dividend+1,w,c
 10802  003420  5020               	movf	___lldiv@divisor+2,w,c
 10803  003422  581C               	subwfb	___lldiv@dividend+2,w,c
 10804  003424  5021               	movf	___lldiv@divisor+3,w,c
 10805  003426  581D               	subwfb	___lldiv@dividend+3,w,c
 10806  003428  A0D8               	btfss	status,0,c
 10807  00342A  D009               	goto	l5015
 10808  00342C  501E               	movf	___lldiv@divisor,w,c
 10809  00342E  5E1A               	subwf	___lldiv@dividend,f,c
 10810  003430  501F               	movf	___lldiv@divisor+1,w,c
 10811  003432  5A1B               	subwfb	___lldiv@dividend+1,f,c
 10812  003434  5020               	movf	___lldiv@divisor+2,w,c
 10813  003436  5A1C               	subwfb	___lldiv@dividend+2,f,c
 10814  003438  5021               	movf	___lldiv@divisor+3,w,c
 10815  00343A  5A1D               	subwfb	___lldiv@dividend+3,f,c
 10816  00343C  8022               	bsf	___lldiv@quotient,0,c
 10817  00343E                     l5015:
 10818  00343E  90D8               	bcf	status,0,c
 10819  003440  3221               	rrcf	___lldiv@divisor+3,f,c
 10820  003442  3220               	rrcf	___lldiv@divisor+2,f,c
 10821  003444  321F               	rrcf	___lldiv@divisor+1,f,c
 10822  003446  321E               	rrcf	___lldiv@divisor,f,c
 10823  003448  2E26               	decfsz	___lldiv@counter,f,c
 10824  00344A  D7E1               	goto	l5007
 10825  00344C                     l986:
 10826  00344C  C022  F01A         	movff	___lldiv@quotient,?___lldiv
 10827  003450  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
 10828  003454  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
 10829  003458  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
 10830  00345C  0012               	return		;funcret
 10831  00345E                     __end_of___lldiv:
 10832                           	opt stack 0
 10833                           tblptru	equ	0xFF8
 10834                           tblptrh	equ	0xFF7
 10835                           tblptrl	equ	0xFF6
 10836                           tablat	equ	0xFF5
 10837                           prodh	equ	0xFF4
 10838                           prodl	equ	0xFF3
 10839                           intcon	equ	0xFF2
 10840                           indf0	equ	0xFEF
 10841                           postinc0	equ	0xFEE
 10842                           fsr0h	equ	0xFEA
 10843                           fsr0l	equ	0xFE9
 10844                           wreg	equ	0xFE8
 10845                           indf1	equ	0xFE7
 10846                           postdec1	equ	0xFE5
 10847                           fsr1h	equ	0xFE2
 10848                           fsr1l	equ	0xFE1
 10849                           indf2	equ	0xFDF
 10850                           postinc2	equ	0xFDE
 10851                           postdec2	equ	0xFDD
 10852                           fsr2h	equ	0xFDA
 10853                           fsr2l	equ	0xFD9
 10854                           status	equ	0xFD8
 10855                           
 10856 ;; *************** function ___fttol *****************
 10857 ;; Defined at:
 10858 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  f1              3   43[BANK0 ] float 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  lval            4   53[BANK0 ] unsigned long 
 10863 ;;  exp1            1   57[BANK0 ] unsigned char 
 10864 ;;  sign1           1   52[BANK0 ] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  4   43[BANK0 ] long 
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10874 ;;      Params:         0       4       0       0       0       0       0
 10875 ;;      Locals:         0       6       0       0       0       0       0
 10876 ;;      Temps:          0       5       0       0       0       0       0
 10877 ;;      Totals:         0      15       0       0       0       0       0
 10878 ;;Total ram usage:       15 bytes
 10879 ;; Hardware stack levels used:    1
 10880 ;; Hardware stack levels required when called:    2
 10881 ;; This function calls:
 10882 ;;		Nothing
 10883 ;; This function is called by:
 10884 ;;		_util_getSolarCurrent
 10885 ;;		_util_getBatteryCurrent
 10886 ;;		_sprintf
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text44
 10891  002824                     __ptext44:
 10892                           	opt stack 0
 10893  002824                     ___fttol:
 10894                           	opt stack 26
 10895                           
 10896                           ;incstack = 0
 10897  002824  C08D  F08F         	movff	___fttol@f1+2,??___fttol
 10898  002828  0100               	movlb	0	; () banked
 10899  00282A  6B90               	clrf	(??___fttol+1)& (0+255),b
 10900  00282C  6B91               	clrf	(??___fttol+2)& (0+255),b
 10901  00282E  0100               	movlb	0	; () banked
 10902  002830  358C               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10903  002832  0100               	movlb	0	; () banked
 10904  002834  378F               	rlcf	??___fttol& (0+255),f,b
 10905  002836  E301               	bnc	u3231
 10906  002838  8190               	bsf	(??___fttol+1)& (0+255),0,b
 10907  00283A                     u3231:
 10908  00283A  0100               	movlb	0	; () banked
 10909  00283C  518F               	movf	??___fttol& (0+255),w,b
 10910  00283E  0100               	movlb	0	; () banked
 10911  002840  6F99               	movwf	___fttol@exp1& (0+255),b
 10912  002842  0100               	movlb	0	; () banked
 10913  002844  5199               	movf	___fttol@exp1& (0+255),w,b
 10914  002846  A4D8               	btfss	status,2,c
 10915  002848  D00A               	goto	l3661
 10916                           
 10917                           ; BSR set to: 0
 10918  00284A  0E00               	movlw	0
 10919  00284C  0100               	movlb	0	; () banked
 10920  00284E  6F8B               	movwf	?___fttol& (0+255),b
 10921  002850  0E00               	movlw	0
 10922  002852  6F8C               	movwf	(?___fttol+1)& (0+255),b
 10923  002854  0E00               	movlw	0
 10924  002856  6F8D               	movwf	(?___fttol+2)& (0+255),b
 10925  002858  0E00               	movlw	0
 10926  00285A  6F8E               	movwf	(?___fttol+3)& (0+255),b
 10927                           
 10928                           ; BSR set to: 0
 10929  00285C  0012               	return	
 10930  00285E                     l3661:
 10931                           
 10932                           ; BSR set to: 0
 10933  00285E  0E17               	movlw	23
 10934  002860  0100               	movlb	0	; () banked
 10935  002862  6F8F               	movwf	??___fttol& (0+255),b
 10936  002864  C08B  F090         	movff	___fttol@f1,??___fttol+1
 10937  002868  C08C  F091         	movff	___fttol@f1+1,??___fttol+2
 10938  00286C  C08D  F092         	movff	___fttol@f1+2,??___fttol+3
 10939  002870  0100               	movlb	0	; () banked
 10940  002872  298F               	incf	??___fttol& (0+255),w,b
 10941  002874  0100               	movlb	0	; () banked
 10942  002876  6F93               	movwf	(??___fttol+4)& (0+255),b
 10943  002878  D005               	goto	u3250
 10944  00287A                     u3255:
 10945  00287A  0100               	movlb	0	; () banked
 10946  00287C  90D8               	bcf	status,0,c
 10947  00287E  3392               	rrcf	(??___fttol+3)& (0+255),f,b
 10948  002880  3391               	rrcf	(??___fttol+2)& (0+255),f,b
 10949  002882  3390               	rrcf	(??___fttol+1)& (0+255),f,b
 10950  002884                     u3250:
 10951  002884  0100               	movlb	0	; () banked
 10952  002886  2F93               	decfsz	(??___fttol+4)& (0+255),f,b
 10953  002888  D7F8               	goto	u3255
 10954  00288A  0100               	movlb	0	; () banked
 10955  00288C  5190               	movf	(??___fttol+1)& (0+255),w,b
 10956  00288E  0100               	movlb	0	; () banked
 10957  002890  6F94               	movwf	___fttol@sign1& (0+255),b
 10958                           
 10959                           ; BSR set to: 0
 10960  002892  0100               	movlb	0	; () banked
 10961  002894  8F8C               	bsf	(___fttol@f1+1)& (0+255),7,b
 10962                           
 10963                           ; BSR set to: 0
 10964  002896  0EFF               	movlw	255
 10965  002898  0100               	movlb	0	; () banked
 10966  00289A  178B               	andwf	___fttol@f1& (0+255),f,b
 10967  00289C  0EFF               	movlw	255
 10968  00289E  0100               	movlb	0	; () banked
 10969  0028A0  178C               	andwf	(___fttol@f1+1)& (0+255),f,b
 10970  0028A2  0E00               	movlw	0
 10971  0028A4  0100               	movlb	0	; () banked
 10972  0028A6  178D               	andwf	(___fttol@f1+2)& (0+255),f,b
 10973                           
 10974                           ; BSR set to: 0
 10975  0028A8  0100               	movlb	0	; () banked
 10976  0028AA  518B               	movf	___fttol@f1& (0+255),w,b
 10977  0028AC  0100               	movlb	0	; () banked
 10978  0028AE  6F95               	movwf	___fttol@lval& (0+255),b
 10979  0028B0  0100               	movlb	0	; () banked
 10980  0028B2  518C               	movf	(___fttol@f1+1)& (0+255),w,b
 10981  0028B4  0100               	movlb	0	; () banked
 10982  0028B6  6F96               	movwf	(___fttol@lval+1)& (0+255),b
 10983  0028B8  0100               	movlb	0	; () banked
 10984  0028BA  518D               	movf	(___fttol@f1+2)& (0+255),w,b
 10985  0028BC  0100               	movlb	0	; () banked
 10986  0028BE  6F97               	movwf	(___fttol@lval+2)& (0+255),b
 10987  0028C0  0100               	movlb	0	; () banked
 10988  0028C2  6B98               	clrf	(___fttol@lval+3)& (0+255),b
 10989                           
 10990                           ; BSR set to: 0
 10991  0028C4  0E8E               	movlw	142
 10992  0028C6  0100               	movlb	0	; () banked
 10993  0028C8  5F99               	subwf	___fttol@exp1& (0+255),f,b
 10994                           
 10995                           ; BSR set to: 0
 10996  0028CA  0100               	movlb	0	; () banked
 10997  0028CC  AF99               	btfss	___fttol@exp1& (0+255),7,b
 10998  0028CE  D01A               	goto	l3683
 10999                           
 11000                           ; BSR set to: 0
 11001  0028D0  0100               	movlb	0	; () banked
 11002  0028D2  5199               	movf	___fttol@exp1& (0+255),w,b
 11003  0028D4  0A80               	xorlw	128
 11004  0028D6  0F8F               	addlw	143
 11005  0028D8  B0D8               	btfsc	status,0,c
 11006  0028DA  D00A               	goto	l3679
 11007                           
 11008                           ; BSR set to: 0
 11009  0028DC  0E00               	movlw	0
 11010  0028DE  0100               	movlb	0	; () banked
 11011  0028E0  6F8B               	movwf	?___fttol& (0+255),b
 11012  0028E2  0E00               	movlw	0
 11013  0028E4  6F8C               	movwf	(?___fttol+1)& (0+255),b
 11014  0028E6  0E00               	movlw	0
 11015  0028E8  6F8D               	movwf	(?___fttol+2)& (0+255),b
 11016  0028EA  0E00               	movlw	0
 11017  0028EC  6F8E               	movwf	(?___fttol+3)& (0+255),b
 11018                           
 11019                           ; BSR set to: 0
 11020  0028EE  0012               	return	
 11021  0028F0                     l3679:
 11022                           
 11023                           ; BSR set to: 0
 11024  0028F0  0100               	movlb	0	; () banked
 11025  0028F2  90D8               	bcf	status,0,c
 11026  0028F4  3398               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11027  0028F6  3397               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11028  0028F8  3396               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11029  0028FA  3395               	rrcf	___fttol@lval& (0+255),f,b
 11030                           
 11031                           ; BSR set to: 0
 11032  0028FC  0100               	movlb	0	; () banked
 11033  0028FE  3F99               	incfsz	___fttol@exp1& (0+255),f,b
 11034  002900  D7F7               	goto	l3679
 11035                           
 11036                           ; BSR set to: 0
 11037  002902  D01B               	goto	l3693
 11038  002904                     l3683:
 11039                           
 11040                           ; BSR set to: 0
 11041  002904  0E17               	movlw	23
 11042  002906  0100               	movlb	0	; () banked
 11043  002908  6599               	cpfsgt	___fttol@exp1& (0+255),b
 11044  00290A  D012               	goto	l3691
 11045                           
 11046                           ; BSR set to: 0
 11047  00290C  0E00               	movlw	0
 11048  00290E  0100               	movlb	0	; () banked
 11049  002910  6F8B               	movwf	?___fttol& (0+255),b
 11050  002912  0E00               	movlw	0
 11051  002914  6F8C               	movwf	(?___fttol+1)& (0+255),b
 11052  002916  0E00               	movlw	0
 11053  002918  6F8D               	movwf	(?___fttol+2)& (0+255),b
 11054  00291A  0E00               	movlw	0
 11055  00291C  6F8E               	movwf	(?___fttol+3)& (0+255),b
 11056                           
 11057                           ; BSR set to: 0
 11058  00291E  0012               	return	
 11059  002920                     l3689:
 11060                           
 11061                           ; BSR set to: 0
 11062  002920  0100               	movlb	0	; () banked
 11063  002922  90D8               	bcf	status,0,c
 11064  002924  3795               	rlcf	___fttol@lval& (0+255),f,b
 11065  002926  3796               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11066  002928  3797               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11067  00292A  3798               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11068  00292C  0100               	movlb	0	; () banked
 11069  00292E  0799               	decf	___fttol@exp1& (0+255),f,b
 11070  002930                     l3691:
 11071                           
 11072                           ; BSR set to: 0
 11073  002930  0100               	movlb	0	; () banked
 11074  002932  5199               	movf	___fttol@exp1& (0+255),w,b
 11075  002934  0100               	movlb	0	; () banked
 11076  002936  A4D8               	btfss	status,2,c
 11077  002938  D7F3               	goto	l3689
 11078  00293A                     l3693:
 11079                           
 11080                           ; BSR set to: 0
 11081  00293A  0100               	movlb	0	; () banked
 11082  00293C  5194               	movf	___fttol@sign1& (0+255),w,b
 11083  00293E  0100               	movlb	0	; () banked
 11084  002940  B4D8               	btfsc	status,2,c
 11085  002942  D009               	goto	l3697
 11086                           
 11087                           ; BSR set to: 0
 11088  002944  0100               	movlb	0	; () banked
 11089  002946  1F98               	comf	(___fttol@lval+3)& (0+255),f,b
 11090  002948  1F97               	comf	(___fttol@lval+2)& (0+255),f,b
 11091  00294A  1F96               	comf	(___fttol@lval+1)& (0+255),f,b
 11092  00294C  6D95               	negf	___fttol@lval& (0+255),b
 11093  00294E  0E00               	movlw	0
 11094  002950  2396               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11095  002952  2397               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11096  002954  2398               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11097  002956                     l3697:
 11098                           
 11099                           ; BSR set to: 0
 11100  002956  C095  F08B         	movff	___fttol@lval,?___fttol
 11101  00295A  C096  F08C         	movff	___fttol@lval+1,?___fttol+1
 11102  00295E  C097  F08D         	movff	___fttol@lval+2,?___fttol+2
 11103  002962  C098  F08E         	movff	___fttol@lval+3,?___fttol+3
 11104  002966  0012               	return	
 11105  002968                     __end_of___fttol:
 11106                           	opt stack 0
 11107                           tblptru	equ	0xFF8
 11108                           tblptrh	equ	0xFF7
 11109                           tblptrl	equ	0xFF6
 11110                           tablat	equ	0xFF5
 11111                           prodh	equ	0xFF4
 11112                           prodl	equ	0xFF3
 11113                           intcon	equ	0xFF2
 11114                           indf0	equ	0xFEF
 11115                           postinc0	equ	0xFEE
 11116                           fsr0h	equ	0xFEA
 11117                           fsr0l	equ	0xFE9
 11118                           wreg	equ	0xFE8
 11119                           indf1	equ	0xFE7
 11120                           postdec1	equ	0xFE5
 11121                           fsr1h	equ	0xFE2
 11122                           fsr1l	equ	0xFE1
 11123                           indf2	equ	0xFDF
 11124                           postinc2	equ	0xFDE
 11125                           postdec2	equ	0xFDD
 11126                           fsr2h	equ	0xFDA
 11127                           fsr2l	equ	0xFD9
 11128                           status	equ	0xFD8
 11129                           
 11130 ;; *************** function ___ftsub *****************
 11131 ;; Defined at:
 11132 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;  f1              3   58[BANK0 ] float 
 11135 ;;  f2              3   61[BANK0 ] float 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  3   58[BANK0 ] float 
 11140 ;; Registers used:
 11141 ;;		wreg, status,2, status,0, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11147 ;;      Params:         0       6       0       0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0
 11150 ;;      Totals:         0       6       0       0       0       0       0
 11151 ;;Total ram usage:        6 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:    4
 11154 ;; This function calls:
 11155 ;;		___ftadd
 11156 ;; This function is called by:
 11157 ;;		_sprintf
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text45
 11162  00367E                     __ptext45:
 11163                           	opt stack 0
 11164  00367E                     ___ftsub:
 11165                           	opt stack 23
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;incstack = 0
 11169  00367E  0100               	movlb	0	; () banked
 11170  003680  519D               	movf	___ftsub@f2& (0+255),w,b
 11171  003682  0100               	movlb	0	; () banked
 11172  003684  119E               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11173  003686  0100               	movlb	0	; () banked
 11174  003688  119F               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11175  00368A  B4D8               	btfsc	status,2,c
 11176  00368C  D009               	goto	l3629
 11177                           
 11178                           ; BSR set to: 0
 11179  00368E  0E00               	movlw	0
 11180  003690  0100               	movlb	0	; () banked
 11181  003692  1B9D               	xorwf	___ftsub@f2& (0+255),f,b
 11182  003694  0E00               	movlw	0
 11183  003696  0100               	movlb	0	; () banked
 11184  003698  1B9E               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11185  00369A  0E80               	movlw	128
 11186  00369C  0100               	movlb	0	; () banked
 11187  00369E  1B9F               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11188  0036A0                     l3629:
 11189                           
 11190                           ; BSR set to: 0
 11191  0036A0  C09A  F08E         	movff	___ftsub@f1,___ftadd@f1
 11192  0036A4  C09B  F08F         	movff	___ftsub@f1+1,___ftadd@f1+1
 11193  0036A8  C09C  F090         	movff	___ftsub@f1+2,___ftadd@f1+2
 11194  0036AC  C09D  F091         	movff	___ftsub@f2,___ftadd@f2
 11195  0036B0  C09E  F092         	movff	___ftsub@f2+1,___ftadd@f2+1
 11196  0036B4  C09F  F093         	movff	___ftsub@f2+2,___ftadd@f2+2
 11197  0036B8  ECA4  F010         	call	___ftadd	;wreg free
 11198  0036BC  C08E  F09A         	movff	?___ftadd,?___ftsub
 11199  0036C0  C08F  F09B         	movff	?___ftadd+1,?___ftsub+1
 11200  0036C4  C090  F09C         	movff	?___ftadd+2,?___ftsub+2
 11201  0036C8  0012               	return	
 11202  0036CA                     __end_of___ftsub:
 11203                           	opt stack 0
 11204                           tblptru	equ	0xFF8
 11205                           tblptrh	equ	0xFF7
 11206                           tblptrl	equ	0xFF6
 11207                           tablat	equ	0xFF5
 11208                           prodh	equ	0xFF4
 11209                           prodl	equ	0xFF3
 11210                           intcon	equ	0xFF2
 11211                           indf0	equ	0xFEF
 11212                           postinc0	equ	0xFEE
 11213                           fsr0h	equ	0xFEA
 11214                           fsr0l	equ	0xFE9
 11215                           wreg	equ	0xFE8
 11216                           indf1	equ	0xFE7
 11217                           postdec1	equ	0xFE5
 11218                           fsr1h	equ	0xFE2
 11219                           fsr1l	equ	0xFE1
 11220                           indf2	equ	0xFDF
 11221                           postinc2	equ	0xFDE
 11222                           postdec2	equ	0xFDD
 11223                           fsr2h	equ	0xFDA
 11224                           fsr2l	equ	0xFD9
 11225                           status	equ	0xFD8
 11226                           
 11227 ;; *************** function ___ftadd *****************
 11228 ;; Defined at:
 11229 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  f1              3   46[BANK0 ] float 
 11232 ;;  f2              3   49[BANK0 ] float 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  exp1            1   57[BANK0 ] unsigned char 
 11235 ;;  exp2            1   56[BANK0 ] unsigned char 
 11236 ;;  sign            1   55[BANK0 ] unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  3   46[BANK0 ] float 
 11239 ;; Registers used:
 11240 ;;		wreg, status,2, status,0, cstack
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11246 ;;      Params:         0       6       0       0       0       0       0
 11247 ;;      Locals:         0       3       0       0       0       0       0
 11248 ;;      Temps:          0       3       0       0       0       0       0
 11249 ;;      Totals:         0      12       0       0       0       0       0
 11250 ;;Total ram usage:       12 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    3
 11253 ;; This function calls:
 11254 ;;		___ftpack
 11255 ;; This function is called by:
 11256 ;;		_util_getTemperature
 11257 ;;		_sprintf
 11258 ;;		___ftsub
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text46
 11263  002148                     __ptext46:
 11264                           	opt stack 0
 11265  002148                     ___ftadd:
 11266                           	opt stack 25
 11267                           
 11268                           ;incstack = 0
 11269  002148  C090  F094         	movff	___ftadd@f1+2,??___ftadd
 11270  00214C  0100               	movlb	0	; () banked
 11271  00214E  6B95               	clrf	(??___ftadd+1)& (0+255),b
 11272  002150  6B96               	clrf	(??___ftadd+2)& (0+255),b
 11273  002152  0100               	movlb	0	; () banked
 11274  002154  358F               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11275  002156  0100               	movlb	0	; () banked
 11276  002158  3794               	rlcf	??___ftadd& (0+255),f,b
 11277  00215A  E301               	bnc	u2481
 11278  00215C  8195               	bsf	(??___ftadd+1)& (0+255),0,b
 11279  00215E                     u2481:
 11280  00215E  0100               	movlb	0	; () banked
 11281  002160  5194               	movf	??___ftadd& (0+255),w,b
 11282  002162  0100               	movlb	0	; () banked
 11283  002164  6F99               	movwf	___ftadd@exp1& (0+255),b
 11284  002166  C093  F094         	movff	___ftadd@f2+2,??___ftadd
 11285  00216A  0100               	movlb	0	; () banked
 11286  00216C  6B95               	clrf	(??___ftadd+1)& (0+255),b
 11287  00216E  6B96               	clrf	(??___ftadd+2)& (0+255),b
 11288  002170  0100               	movlb	0	; () banked
 11289  002172  3592               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11290  002174  0100               	movlb	0	; () banked
 11291  002176  3794               	rlcf	??___ftadd& (0+255),f,b
 11292  002178  E301               	bnc	u2491
 11293  00217A  8195               	bsf	(??___ftadd+1)& (0+255),0,b
 11294  00217C                     u2491:
 11295  00217C  0100               	movlb	0	; () banked
 11296  00217E  5194               	movf	??___ftadd& (0+255),w,b
 11297  002180  0100               	movlb	0	; () banked
 11298  002182  6F98               	movwf	___ftadd@exp2& (0+255),b
 11299                           
 11300                           ; BSR set to: 0
 11301  002184  0100               	movlb	0	; () banked
 11302  002186  5199               	movf	___ftadd@exp1& (0+255),w,b
 11303  002188  0100               	movlb	0	; () banked
 11304  00218A  B4D8               	btfsc	status,2,c
 11305  00218C  D011               	goto	l862
 11306                           
 11307                           ; BSR set to: 0
 11308  00218E  0100               	movlb	0	; () banked
 11309  002190  5198               	movf	___ftadd@exp2& (0+255),w,b
 11310  002192  0100               	movlb	0	; () banked
 11311  002194  5D99               	subwf	___ftadd@exp1& (0+255),w,b
 11312  002196  B0D8               	btfsc	status,0,c
 11313  002198  D012               	goto	l3177
 11314                           
 11315                           ; BSR set to: 0
 11316  00219A  0100               	movlb	0	; () banked
 11317  00219C  5199               	movf	___ftadd@exp1& (0+255),w,b
 11318  00219E  0800               	sublw	0
 11319  0021A0  0100               	movlb	0	; () banked
 11320  0021A2  2598               	addwf	___ftadd@exp2& (0+255),w,b
 11321  0021A4  0100               	movlb	0	; () banked
 11322  0021A6  6F94               	movwf	??___ftadd& (0+255),b
 11323  0021A8  0E18               	movlw	24
 11324  0021AA  0100               	movlb	0	; () banked
 11325  0021AC  6594               	cpfsgt	??___ftadd& (0+255),b
 11326  0021AE  D007               	goto	l3177
 11327  0021B0                     l862:
 11328                           
 11329                           ; BSR set to: 0
 11330  0021B0  C091  F08E         	movff	___ftadd@f2,?___ftadd
 11331  0021B4  C092  F08F         	movff	___ftadd@f2+1,?___ftadd+1
 11332  0021B8  C093  F090         	movff	___ftadd@f2+2,?___ftadd+2
 11333  0021BC  0012               	return	
 11334  0021BE                     l3177:
 11335                           
 11336                           ; BSR set to: 0
 11337  0021BE  0100               	movlb	0	; () banked
 11338  0021C0  5198               	movf	___ftadd@exp2& (0+255),w,b
 11339  0021C2  0100               	movlb	0	; () banked
 11340  0021C4  B4D8               	btfsc	status,2,c
 11341  0021C6  D011               	goto	l866
 11342                           
 11343                           ; BSR set to: 0
 11344  0021C8  0100               	movlb	0	; () banked
 11345  0021CA  5199               	movf	___ftadd@exp1& (0+255),w,b
 11346  0021CC  0100               	movlb	0	; () banked
 11347  0021CE  5D98               	subwf	___ftadd@exp2& (0+255),w,b
 11348  0021D0  B0D8               	btfsc	status,0,c
 11349  0021D2  D012               	goto	l3183
 11350                           
 11351                           ; BSR set to: 0
 11352  0021D4  0100               	movlb	0	; () banked
 11353  0021D6  5198               	movf	___ftadd@exp2& (0+255),w,b
 11354  0021D8  0800               	sublw	0
 11355  0021DA  0100               	movlb	0	; () banked
 11356  0021DC  2599               	addwf	___ftadd@exp1& (0+255),w,b
 11357  0021DE  0100               	movlb	0	; () banked
 11358  0021E0  6F94               	movwf	??___ftadd& (0+255),b
 11359  0021E2  0E18               	movlw	24
 11360  0021E4  0100               	movlb	0	; () banked
 11361  0021E6  6594               	cpfsgt	??___ftadd& (0+255),b
 11362  0021E8  D007               	goto	l3183
 11363  0021EA                     l866:
 11364                           
 11365                           ; BSR set to: 0
 11366  0021EA  C08E  F08E         	movff	___ftadd@f1,?___ftadd
 11367  0021EE  C08F  F08F         	movff	___ftadd@f1+1,?___ftadd+1
 11368  0021F2  C090  F090         	movff	___ftadd@f1+2,?___ftadd+2
 11369  0021F6  0012               	return	
 11370  0021F8                     l3183:
 11371                           
 11372                           ; BSR set to: 0
 11373  0021F8  0E06               	movlw	6
 11374  0021FA  0100               	movlb	0	; () banked
 11375  0021FC  6F97               	movwf	___ftadd@sign& (0+255),b
 11376                           
 11377                           ; BSR set to: 0
 11378  0021FE  0100               	movlb	0	; () banked
 11379  002200  AF90               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11380  002202  D002               	goto	l3189
 11381                           
 11382                           ; BSR set to: 0
 11383  002204  0100               	movlb	0	; () banked
 11384  002206  8F97               	bsf	___ftadd@sign& (0+255),7,b
 11385  002208                     l3189:
 11386                           
 11387                           ; BSR set to: 0
 11388  002208  0100               	movlb	0	; () banked
 11389  00220A  AF93               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11390  00220C  D002               	goto	l868
 11391                           
 11392                           ; BSR set to: 0
 11393  00220E  0100               	movlb	0	; () banked
 11394  002210  8D97               	bsf	___ftadd@sign& (0+255),6,b
 11395  002212                     l868:
 11396                           
 11397                           ; BSR set to: 0
 11398  002212  0100               	movlb	0	; () banked
 11399  002214  8F8F               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11400                           
 11401                           ; BSR set to: 0
 11402  002216  0EFF               	movlw	255
 11403  002218  0100               	movlb	0	; () banked
 11404  00221A  178E               	andwf	___ftadd@f1& (0+255),f,b
 11405  00221C  0EFF               	movlw	255
 11406  00221E  0100               	movlb	0	; () banked
 11407  002220  178F               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11408  002222  0E00               	movlw	0
 11409  002224  0100               	movlb	0	; () banked
 11410  002226  1790               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11411  002228  0100               	movlb	0	; () banked
 11412  00222A  8F92               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11413                           
 11414                           ; BSR set to: 0
 11415  00222C  0EFF               	movlw	255
 11416  00222E  0100               	movlb	0	; () banked
 11417  002230  1791               	andwf	___ftadd@f2& (0+255),f,b
 11418  002232  0EFF               	movlw	255
 11419  002234  0100               	movlb	0	; () banked
 11420  002236  1792               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11421  002238  0E00               	movlw	0
 11422  00223A  0100               	movlb	0	; () banked
 11423  00223C  1793               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11424                           
 11425                           ; BSR set to: 0
 11426  00223E  0100               	movlb	0	; () banked
 11427  002240  5198               	movf	___ftadd@exp2& (0+255),w,b
 11428  002242  0100               	movlb	0	; () banked
 11429  002244  5D99               	subwf	___ftadd@exp1& (0+255),w,b
 11430  002246  B0D8               	btfsc	status,0,c
 11431  002248  D025               	goto	l3209
 11432  00224A                     l3199:
 11433                           
 11434                           ; BSR set to: 0
 11435  00224A  0100               	movlb	0	; () banked
 11436  00224C  90D8               	bcf	status,0,c
 11437  00224E  3791               	rlcf	___ftadd@f2& (0+255),f,b
 11438  002250  3792               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11439  002252  3793               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11440  002254  0100               	movlb	0	; () banked
 11441  002256  0798               	decf	___ftadd@exp2& (0+255),f,b
 11442                           
 11443                           ; BSR set to: 0
 11444  002258  0100               	movlb	0	; () banked
 11445  00225A  5199               	movf	___ftadd@exp1& (0+255),w,b
 11446  00225C  0100               	movlb	0	; () banked
 11447  00225E  1998               	xorwf	___ftadd@exp2& (0+255),w,b
 11448  002260  B4D8               	btfsc	status,2,c
 11449  002262  D011               	goto	l3207
 11450                           
 11451                           ; BSR set to: 0
 11452  002264  0100               	movlb	0	; () banked
 11453  002266  0797               	decf	___ftadd@sign& (0+255),f,b
 11454  002268  C097  F094         	movff	___ftadd@sign,??___ftadd
 11455  00226C  0E07               	movlw	7
 11456  00226E  0100               	movlb	0	; () banked
 11457  002270  1794               	andwf	??___ftadd& (0+255),f,b
 11458  002272  B4D8               	btfsc	status,2,c
 11459  002274  D008               	goto	l3207
 11460  002276  D7E9               	goto	l3199
 11461  002278                     l3205:
 11462                           
 11463                           ; BSR set to: 0
 11464  002278  0100               	movlb	0	; () banked
 11465  00227A  90D8               	bcf	status,0,c
 11466  00227C  3390               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11467  00227E  338F               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11468  002280  338E               	rrcf	___ftadd@f1& (0+255),f,b
 11469  002282  0100               	movlb	0	; () banked
 11470  002284  2B99               	incf	___ftadd@exp1& (0+255),f,b
 11471  002286                     l3207:
 11472                           
 11473                           ; BSR set to: 0
 11474  002286  0100               	movlb	0	; () banked
 11475  002288  5198               	movf	___ftadd@exp2& (0+255),w,b
 11476  00228A  0100               	movlb	0	; () banked
 11477  00228C  1999               	xorwf	___ftadd@exp1& (0+255),w,b
 11478  00228E  B4D8               	btfsc	status,2,c
 11479  002290  D02B               	goto	l877
 11480  002292  D7F2               	goto	l3205
 11481  002294                     l3209:
 11482                           
 11483                           ; BSR set to: 0
 11484  002294  0100               	movlb	0	; () banked
 11485  002296  5199               	movf	___ftadd@exp1& (0+255),w,b
 11486  002298  0100               	movlb	0	; () banked
 11487  00229A  5D98               	subwf	___ftadd@exp2& (0+255),w,b
 11488  00229C  B0D8               	btfsc	status,0,c
 11489  00229E  D024               	goto	l877
 11490  0022A0                     l3211:
 11491                           
 11492                           ; BSR set to: 0
 11493  0022A0  0100               	movlb	0	; () banked
 11494  0022A2  90D8               	bcf	status,0,c
 11495  0022A4  378E               	rlcf	___ftadd@f1& (0+255),f,b
 11496  0022A6  378F               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11497  0022A8  3790               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11498  0022AA  0100               	movlb	0	; () banked
 11499  0022AC  0799               	decf	___ftadd@exp1& (0+255),f,b
 11500                           
 11501                           ; BSR set to: 0
 11502  0022AE  0100               	movlb	0	; () banked
 11503  0022B0  5199               	movf	___ftadd@exp1& (0+255),w,b
 11504  0022B2  0100               	movlb	0	; () banked
 11505  0022B4  1998               	xorwf	___ftadd@exp2& (0+255),w,b
 11506  0022B6  B4D8               	btfsc	status,2,c
 11507  0022B8  D011               	goto	l3219
 11508                           
 11509                           ; BSR set to: 0
 11510  0022BA  0100               	movlb	0	; () banked
 11511  0022BC  0797               	decf	___ftadd@sign& (0+255),f,b
 11512  0022BE  C097  F094         	movff	___ftadd@sign,??___ftadd
 11513  0022C2  0E07               	movlw	7
 11514  0022C4  0100               	movlb	0	; () banked
 11515  0022C6  1794               	andwf	??___ftadd& (0+255),f,b
 11516  0022C8  B4D8               	btfsc	status,2,c
 11517  0022CA  D008               	goto	l3219
 11518  0022CC  D7E9               	goto	l3211
 11519  0022CE                     l3217:
 11520                           
 11521                           ; BSR set to: 0
 11522  0022CE  0100               	movlb	0	; () banked
 11523  0022D0  90D8               	bcf	status,0,c
 11524  0022D2  3393               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11525  0022D4  3392               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11526  0022D6  3391               	rrcf	___ftadd@f2& (0+255),f,b
 11527  0022D8  0100               	movlb	0	; () banked
 11528  0022DA  2B98               	incf	___ftadd@exp2& (0+255),f,b
 11529  0022DC                     l3219:
 11530                           
 11531                           ; BSR set to: 0
 11532  0022DC  0100               	movlb	0	; () banked
 11533  0022DE  5198               	movf	___ftadd@exp2& (0+255),w,b
 11534  0022E0  0100               	movlb	0	; () banked
 11535  0022E2  1999               	xorwf	___ftadd@exp1& (0+255),w,b
 11536  0022E4  A4D8               	btfss	status,2,c
 11537  0022E6  D7F3               	goto	l3217
 11538  0022E8                     l877:
 11539                           
 11540                           ; BSR set to: 0
 11541  0022E8  0100               	movlb	0	; () banked
 11542  0022EA  AF97               	btfss	___ftadd@sign& (0+255),7,b
 11543  0022EC  D012               	goto	l886
 11544                           
 11545                           ; BSR set to: 0
 11546  0022EE  0EFF               	movlw	255
 11547  0022F0  0100               	movlb	0	; () banked
 11548  0022F2  1B8E               	xorwf	___ftadd@f1& (0+255),f,b
 11549  0022F4  0EFF               	movlw	255
 11550  0022F6  0100               	movlb	0	; () banked
 11551  0022F8  1B8F               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11552  0022FA  0EFF               	movlw	255
 11553  0022FC  0100               	movlb	0	; () banked
 11554  0022FE  1B90               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11555  002300  0E01               	movlw	1
 11556  002302  0100               	movlb	0	; () banked
 11557  002304  278E               	addwf	___ftadd@f1& (0+255),f,b
 11558  002306  0E00               	movlw	0
 11559  002308  0100               	movlb	0	; () banked
 11560  00230A  238F               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11561  00230C  0E00               	movlw	0
 11562  00230E  0100               	movlb	0	; () banked
 11563  002310  2390               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11564  002312                     l886:
 11565                           
 11566                           ; BSR set to: 0
 11567  002312  0100               	movlb	0	; () banked
 11568  002314  AD97               	btfss	___ftadd@sign& (0+255),6,b
 11569  002316  D012               	goto	l3225
 11570                           
 11571                           ; BSR set to: 0
 11572  002318  0EFF               	movlw	255
 11573  00231A  0100               	movlb	0	; () banked
 11574  00231C  1B91               	xorwf	___ftadd@f2& (0+255),f,b
 11575  00231E  0EFF               	movlw	255
 11576  002320  0100               	movlb	0	; () banked
 11577  002322  1B92               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11578  002324  0EFF               	movlw	255
 11579  002326  0100               	movlb	0	; () banked
 11580  002328  1B93               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11581  00232A  0E01               	movlw	1
 11582  00232C  0100               	movlb	0	; () banked
 11583  00232E  2791               	addwf	___ftadd@f2& (0+255),f,b
 11584  002330  0E00               	movlw	0
 11585  002332  0100               	movlb	0	; () banked
 11586  002334  2392               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11587  002336  0E00               	movlw	0
 11588  002338  0100               	movlb	0	; () banked
 11589  00233A  2393               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11590  00233C                     l3225:
 11591                           
 11592                           ; BSR set to: 0
 11593  00233C  0E00               	movlw	0
 11594  00233E  0100               	movlb	0	; () banked
 11595  002340  6F97               	movwf	___ftadd@sign& (0+255),b
 11596                           
 11597                           ; BSR set to: 0
 11598  002342  0100               	movlb	0	; () banked
 11599  002344  518E               	movf	___ftadd@f1& (0+255),w,b
 11600  002346  0100               	movlb	0	; () banked
 11601  002348  2791               	addwf	___ftadd@f2& (0+255),f,b
 11602  00234A  0100               	movlb	0	; () banked
 11603  00234C  518F               	movf	(___ftadd@f1+1)& (0+255),w,b
 11604  00234E  0100               	movlb	0	; () banked
 11605  002350  2392               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11606  002352  0100               	movlb	0	; () banked
 11607  002354  5190               	movf	(___ftadd@f1+2)& (0+255),w,b
 11608  002356  0100               	movlb	0	; () banked
 11609  002358  2393               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11610                           
 11611                           ; BSR set to: 0
 11612  00235A  0100               	movlb	0	; () banked
 11613  00235C  AF93               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11614  00235E  D015               	goto	l3235
 11615                           
 11616                           ; BSR set to: 0
 11617  002360  0EFF               	movlw	255
 11618  002362  0100               	movlb	0	; () banked
 11619  002364  1B91               	xorwf	___ftadd@f2& (0+255),f,b
 11620  002366  0EFF               	movlw	255
 11621  002368  0100               	movlb	0	; () banked
 11622  00236A  1B92               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11623  00236C  0EFF               	movlw	255
 11624  00236E  0100               	movlb	0	; () banked
 11625  002370  1B93               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11626  002372  0E01               	movlw	1
 11627  002374  0100               	movlb	0	; () banked
 11628  002376  2791               	addwf	___ftadd@f2& (0+255),f,b
 11629  002378  0E00               	movlw	0
 11630  00237A  0100               	movlb	0	; () banked
 11631  00237C  2392               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11632  00237E  0E00               	movlw	0
 11633  002380  0100               	movlb	0	; () banked
 11634  002382  2393               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11635                           
 11636                           ; BSR set to: 0
 11637  002384  0E01               	movlw	1
 11638  002386  0100               	movlb	0	; () banked
 11639  002388  6F97               	movwf	___ftadd@sign& (0+255),b
 11640  00238A                     l3235:
 11641                           
 11642                           ; BSR set to: 0
 11643  00238A  C091  F01A         	movff	___ftadd@f2,___ftpack@arg
 11644  00238E  C092  F01B         	movff	___ftadd@f2+1,___ftpack@arg+1
 11645  002392  C093  F01C         	movff	___ftadd@f2+2,___ftpack@arg+2
 11646  002396  C099  F01D         	movff	___ftadd@exp1,___ftpack@exp
 11647  00239A  C097  F01E         	movff	___ftadd@sign,___ftpack@sign
 11648  00239E  EC7D  F018         	call	___ftpack	;wreg free
 11649  0023A2  C01A  F08E         	movff	?___ftpack,?___ftadd
 11650  0023A6  C01B  F08F         	movff	?___ftpack+1,?___ftadd+1
 11651  0023AA  C01C  F090         	movff	?___ftpack+2,?___ftadd+2
 11652  0023AE  0012               	return	
 11653  0023B0                     __end_of___ftadd:
 11654                           	opt stack 0
 11655                           tblptru	equ	0xFF8
 11656                           tblptrh	equ	0xFF7
 11657                           tblptrl	equ	0xFF6
 11658                           tablat	equ	0xFF5
 11659                           prodh	equ	0xFF4
 11660                           prodl	equ	0xFF3
 11661                           intcon	equ	0xFF2
 11662                           indf0	equ	0xFEF
 11663                           postinc0	equ	0xFEE
 11664                           fsr0h	equ	0xFEA
 11665                           fsr0l	equ	0xFE9
 11666                           wreg	equ	0xFE8
 11667                           indf1	equ	0xFE7
 11668                           postdec1	equ	0xFE5
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function ___ftpack *****************
 11679 ;; Defined at:
 11680 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  arg             3   25[COMRAM] unsigned um
 11683 ;;  exp             1   28[COMRAM] unsigned char 
 11684 ;;  sign            1   29[COMRAM] unsigned char 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  3   25[COMRAM] float 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11696 ;;      Params:         5       0       0       0       0       0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0
 11698 ;;      Temps:          3       0       0       0       0       0       0
 11699 ;;      Totals:         8       0       0       0       0       0       0
 11700 ;;Total ram usage:        8 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    2
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		___awtoft
 11707 ;;		___ftadd
 11708 ;;		___ftdiv
 11709 ;;		___ftmul
 11710 ;;		___lltoft
 11711 ;;		___lwtoft
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text47
 11716  0030FA                     __ptext47:
 11717                           	opt stack 0
 11718  0030FA                     ___ftpack:
 11719                           	opt stack 25
 11720                           
 11721                           ;incstack = 0
 11722  0030FA  501D               	movf	___ftpack@exp,w,c
 11723  0030FC  B4D8               	btfsc	status,2,c
 11724  0030FE  D005               	goto	l3099
 11725  003100  501A               	movf	___ftpack@arg,w,c
 11726  003102  101B               	iorwf	___ftpack@arg+1,w,c
 11727  003104  101C               	iorwf	___ftpack@arg+2,w,c
 11728  003106  A4D8               	btfss	status,2,c
 11729  003108  D00C               	goto	l3105
 11730  00310A                     l3099:
 11731  00310A  0E00               	movlw	0
 11732  00310C  6E1A               	movwf	?___ftpack,c
 11733  00310E  0E00               	movlw	0
 11734  003110  6E1B               	movwf	?___ftpack+1,c
 11735  003112  0E00               	movlw	0
 11736  003114  6E1C               	movwf	?___ftpack+2,c
 11737  003116  0012               	return	
 11738  003118                     l3103:
 11739  003118  2A1D               	incf	___ftpack@exp,f,c
 11740  00311A  90D8               	bcf	status,0,c
 11741  00311C  321C               	rrcf	___ftpack@arg+2,f,c
 11742  00311E  321B               	rrcf	___ftpack@arg+1,f,c
 11743  003120  321A               	rrcf	___ftpack@arg,f,c
 11744  003122                     l3105:
 11745  003122  0E00               	movlw	0
 11746  003124  141A               	andwf	___ftpack@arg,w,c
 11747  003126  6E1F               	movwf	??___ftpack& (0+255),c
 11748  003128  0E00               	movlw	0
 11749  00312A  141B               	andwf	___ftpack@arg+1,w,c
 11750  00312C  6E20               	movwf	(??___ftpack+1)& (0+255),c
 11751  00312E  0EFE               	movlw	254
 11752  003130  141C               	andwf	___ftpack@arg+2,w,c
 11753  003132  6E21               	movwf	(??___ftpack+2)& (0+255),c
 11754  003134  501F               	movf	??___ftpack,w,c
 11755  003136  1020               	iorwf	??___ftpack+1,w,c
 11756  003138  1021               	iorwf	??___ftpack+2,w,c
 11757  00313A  B4D8               	btfsc	status,2,c
 11758  00313C  D00C               	goto	l3111
 11759  00313E  D7EC               	goto	l3103
 11760  003140                     l3107:
 11761  003140  2A1D               	incf	___ftpack@exp,f,c
 11762  003142  0E01               	movlw	1
 11763  003144  261A               	addwf	___ftpack@arg,f,c
 11764  003146  0E00               	movlw	0
 11765  003148  221B               	addwfc	___ftpack@arg+1,f,c
 11766  00314A  0E00               	movlw	0
 11767  00314C  221C               	addwfc	___ftpack@arg+2,f,c
 11768  00314E  90D8               	bcf	status,0,c
 11769  003150  321C               	rrcf	___ftpack@arg+2,f,c
 11770  003152  321B               	rrcf	___ftpack@arg+1,f,c
 11771  003154  321A               	rrcf	___ftpack@arg,f,c
 11772  003156                     l3111:
 11773  003156  0E00               	movlw	0
 11774  003158  141A               	andwf	___ftpack@arg,w,c
 11775  00315A  6E1F               	movwf	??___ftpack& (0+255),c
 11776  00315C  0E00               	movlw	0
 11777  00315E  141B               	andwf	___ftpack@arg+1,w,c
 11778  003160  6E20               	movwf	(??___ftpack+1)& (0+255),c
 11779  003162  0EFF               	movlw	255
 11780  003164  141C               	andwf	___ftpack@arg+2,w,c
 11781  003166  6E21               	movwf	(??___ftpack+2)& (0+255),c
 11782  003168  501F               	movf	??___ftpack,w,c
 11783  00316A  1020               	iorwf	??___ftpack+1,w,c
 11784  00316C  1021               	iorwf	??___ftpack+2,w,c
 11785  00316E  B4D8               	btfsc	status,2,c
 11786  003170  D006               	goto	l3115
 11787  003172  D7E6               	goto	l3107
 11788  003174                     l3113:
 11789  003174  061D               	decf	___ftpack@exp,f,c
 11790  003176  90D8               	bcf	status,0,c
 11791  003178  361A               	rlcf	___ftpack@arg,f,c
 11792  00317A  361B               	rlcf	___ftpack@arg+1,f,c
 11793  00317C  361C               	rlcf	___ftpack@arg+2,f,c
 11794  00317E                     l3115:
 11795  00317E  BE1B               	btfsc	___ftpack@arg+1,7,c
 11796  003180  D003               	goto	l839
 11797  003182  0E02               	movlw	2
 11798  003184  601D               	cpfslt	___ftpack@exp,c
 11799  003186  D7F6               	goto	l3113
 11800  003188                     l839:
 11801  003188  A01D               	btfss	___ftpack@exp,0,c
 11802  00318A  9E1B               	bcf	___ftpack@arg+1,7,c
 11803  00318C  90D8               	bcf	status,0,c
 11804  00318E  321D               	rrcf	___ftpack@exp,f,c
 11805  003190  501D               	movf	___ftpack@exp,w,c
 11806  003192  121C               	iorwf	___ftpack@arg+2,f,c
 11807  003194  501E               	movf	___ftpack@sign,w,c
 11808  003196  A4D8               	btfss	status,2,c
 11809  003198  8E1C               	bsf	___ftpack@arg+2,7,c
 11810  00319A  C01A  F01A         	movff	___ftpack@arg,?___ftpack
 11811  00319E  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
 11812  0031A2  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
 11813  0031A6  0012               	return	
 11814  0031A8                     __end_of___ftpack:
 11815                           	opt stack 0
 11816                           tblptru	equ	0xFF8
 11817                           tblptrh	equ	0xFF7
 11818                           tblptrl	equ	0xFF6
 11819                           tablat	equ	0xFF5
 11820                           prodh	equ	0xFF4
 11821                           prodl	equ	0xFF3
 11822                           intcon	equ	0xFF2
 11823                           indf0	equ	0xFEF
 11824                           postinc0	equ	0xFEE
 11825                           fsr0h	equ	0xFEA
 11826                           fsr0l	equ	0xFE9
 11827                           wreg	equ	0xFE8
 11828                           indf1	equ	0xFE7
 11829                           postdec1	equ	0xFE5
 11830                           fsr1h	equ	0xFE2
 11831                           fsr1l	equ	0xFE1
 11832                           indf2	equ	0xFDF
 11833                           postinc2	equ	0xFDE
 11834                           postdec2	equ	0xFDD
 11835                           fsr2h	equ	0xFDA
 11836                           fsr2l	equ	0xFD9
 11837                           status	equ	0xFD8
 11838                           
 11839 ;; *************** function ___ftneg *****************
 11840 ;; Defined at:
 11841 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;  f1              3   25[COMRAM] float 
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;		None
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  3   25[COMRAM] float 
 11848 ;; Registers used:
 11849 ;;		wreg, status,2, status,0
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11855 ;;      Params:         3       0       0       0       0       0       0
 11856 ;;      Locals:         0       0       0       0       0       0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0
 11858 ;;      Totals:         3       0       0       0       0       0       0
 11859 ;;Total ram usage:        3 bytes
 11860 ;; Hardware stack levels used:    1
 11861 ;; Hardware stack levels required when called:    2
 11862 ;; This function calls:
 11863 ;;		Nothing
 11864 ;; This function is called by:
 11865 ;;		_sprintf
 11866 ;; This function uses a non-reentrant model
 11867 ;;
 11868                           
 11869                           	psect	text48
 11870  003998                     __ptext48:
 11871                           	opt stack 0
 11872  003998                     ___ftneg:
 11873                           	opt stack 25
 11874                           
 11875                           ;incstack = 0
 11876  003998  501A               	movf	___ftneg@f1,w,c
 11877  00399A  101B               	iorwf	___ftneg@f1+1,w,c
 11878  00399C  101C               	iorwf	___ftneg@f1+2,w,c
 11879  00399E  B4D8               	btfsc	status,2,c
 11880  0039A0  D006               	goto	l936
 11881  0039A2  0E00               	movlw	0
 11882  0039A4  1A1A               	xorwf	___ftneg@f1,f,c
 11883  0039A6  0E00               	movlw	0
 11884  0039A8  1A1B               	xorwf	___ftneg@f1+1,f,c
 11885  0039AA  0E80               	movlw	128
 11886  0039AC  1A1C               	xorwf	___ftneg@f1+2,f,c
 11887  0039AE                     l936:
 11888  0039AE  C01A  F01A         	movff	___ftneg@f1,?___ftneg
 11889  0039B2  C01B  F01B         	movff	___ftneg@f1+1,?___ftneg+1
 11890  0039B6  C01C  F01C         	movff	___ftneg@f1+2,?___ftneg+2
 11891  0039BA  0012               	return		;funcret
 11892  0039BC                     __end_of___ftneg:
 11893                           	opt stack 0
 11894                           tblptru	equ	0xFF8
 11895                           tblptrh	equ	0xFF7
 11896                           tblptrl	equ	0xFF6
 11897                           tablat	equ	0xFF5
 11898                           prodh	equ	0xFF4
 11899                           prodl	equ	0xFF3
 11900                           intcon	equ	0xFF2
 11901                           indf0	equ	0xFEF
 11902                           postinc0	equ	0xFEE
 11903                           fsr0h	equ	0xFEA
 11904                           fsr0l	equ	0xFE9
 11905                           wreg	equ	0xFE8
 11906                           indf1	equ	0xFE7
 11907                           postdec1	equ	0xFE5
 11908                           fsr1h	equ	0xFE2
 11909                           fsr1l	equ	0xFE1
 11910                           indf2	equ	0xFDF
 11911                           postinc2	equ	0xFDE
 11912                           postdec2	equ	0xFDD
 11913                           fsr2h	equ	0xFDA
 11914                           fsr2l	equ	0xFD9
 11915                           status	equ	0xFD8
 11916                           
 11917 ;; *************** function ___ftge *****************
 11918 ;; Defined at:
 11919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;  ff1             3   25[COMRAM] float 
 11922 ;;  ff2             3   28[COMRAM] float 
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;		None
 11925 ;; Return value:  Size  Location     Type
 11926 ;;		None               void
 11927 ;; Registers used:
 11928 ;;		wreg, status,2, status,0
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11934 ;;      Params:         6       0       0       0       0       0       0
 11935 ;;      Locals:         0       0       0       0       0       0       0
 11936 ;;      Temps:          3       0       0       0       0       0       0
 11937 ;;      Totals:         9       0       0       0       0       0       0
 11938 ;;Total ram usage:        9 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    2
 11941 ;; This function calls:
 11942 ;;		Nothing
 11943 ;; This function is called by:
 11944 ;;		_sprintf
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           	psect	text49
 11949  00323C                     __ptext49:
 11950                           	opt stack 0
 11951  00323C                     ___ftge:
 11952                           	opt stack 25
 11953                           
 11954                           ;incstack = 0
 11955  00323C  AE1C               	btfss	___ftge@ff1+2,7,c
 11956  00323E  D016               	goto	l3637
 11957  003240  C01A  F020         	movff	___ftge@ff1,??___ftge
 11958  003244  C01B  F021         	movff	___ftge@ff1+1,??___ftge+1
 11959  003248  C01C  F022         	movff	___ftge@ff1+2,??___ftge+2
 11960  00324C  1E20               	comf	??___ftge,f,c
 11961  00324E  1E21               	comf	??___ftge+1,f,c
 11962  003250  1E22               	comf	??___ftge+2,f,c
 11963  003252  2A20               	incf	??___ftge,f,c
 11964  003254  0E00               	movlw	0
 11965  003256  2221               	addwfc	??___ftge+1,f,c
 11966  003258  2222               	addwfc	??___ftge+2,f,c
 11967  00325A  0E00               	movlw	0
 11968  00325C  2420               	addwf	??___ftge,w,c
 11969  00325E  6E1A               	movwf	___ftge@ff1,c
 11970  003260  0E00               	movlw	0
 11971  003262  2021               	addwfc	??___ftge+1,w,c
 11972  003264  6E1B               	movwf	___ftge@ff1+1,c
 11973  003266  0E80               	movlw	128
 11974  003268  2022               	addwfc	??___ftge+2,w,c
 11975  00326A  6E1C               	movwf	___ftge@ff1+2,c
 11976  00326C                     l3637:
 11977  00326C  AE1F               	btfss	___ftge@ff2+2,7,c
 11978  00326E  D016               	goto	l3641
 11979  003270  C01D  F020         	movff	___ftge@ff2,??___ftge
 11980  003274  C01E  F021         	movff	___ftge@ff2+1,??___ftge+1
 11981  003278  C01F  F022         	movff	___ftge@ff2+2,??___ftge+2
 11982  00327C  1E20               	comf	??___ftge,f,c
 11983  00327E  1E21               	comf	??___ftge+1,f,c
 11984  003280  1E22               	comf	??___ftge+2,f,c
 11985  003282  2A20               	incf	??___ftge,f,c
 11986  003284  0E00               	movlw	0
 11987  003286  2221               	addwfc	??___ftge+1,f,c
 11988  003288  2222               	addwfc	??___ftge+2,f,c
 11989  00328A  0E00               	movlw	0
 11990  00328C  2420               	addwf	??___ftge,w,c
 11991  00328E  6E1D               	movwf	___ftge@ff2,c
 11992  003290  0E00               	movlw	0
 11993  003292  2021               	addwfc	??___ftge+1,w,c
 11994  003294  6E1E               	movwf	___ftge@ff2+1,c
 11995  003296  0E80               	movlw	128
 11996  003298  2022               	addwfc	??___ftge+2,w,c
 11997  00329A  6E1F               	movwf	___ftge@ff2+2,c
 11998  00329C                     l3641:
 11999  00329C  0E00               	movlw	0
 12000  00329E  1A1A               	xorwf	___ftge@ff1,f,c
 12001  0032A0  0E00               	movlw	0
 12002  0032A2  1A1B               	xorwf	___ftge@ff1+1,f,c
 12003  0032A4  0E80               	movlw	128
 12004  0032A6  1A1C               	xorwf	___ftge@ff1+2,f,c
 12005  0032A8  0E00               	movlw	0
 12006  0032AA  1A1D               	xorwf	___ftge@ff2,f,c
 12007  0032AC  0E00               	movlw	0
 12008  0032AE  1A1E               	xorwf	___ftge@ff2+1,f,c
 12009  0032B0  0E80               	movlw	128
 12010  0032B2  1A1F               	xorwf	___ftge@ff2+2,f,c
 12011  0032B4  501D               	movf	___ftge@ff2,w,c
 12012  0032B6  5C1A               	subwf	___ftge@ff1,w,c
 12013  0032B8  501E               	movf	___ftge@ff2+1,w,c
 12014  0032BA  581B               	subwfb	___ftge@ff1+1,w,c
 12015  0032BC  501F               	movf	___ftge@ff2+2,w,c
 12016  0032BE  581C               	subwfb	___ftge@ff1+2,w,c
 12017  0032C0  B0D8               	btfsc	status,0,c
 12018  0032C2  D002               	goto	l3647
 12019  0032C4  90D8               	bcf	status,0,c
 12020  0032C6  0012               	return	
 12021  0032C8                     l3647:
 12022  0032C8  80D8               	bsf	status,0,c
 12023  0032CA  0012               	return	
 12024  0032CC                     __end_of___ftge:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           indf0	equ	0xFEF
 12034                           postinc0	equ	0xFEE
 12035                           fsr0h	equ	0xFEA
 12036                           fsr0l	equ	0xFE9
 12037                           wreg	equ	0xFE8
 12038                           indf1	equ	0xFE7
 12039                           postdec1	equ	0xFE5
 12040                           fsr1h	equ	0xFE2
 12041                           fsr1l	equ	0xFE1
 12042                           indf2	equ	0xFDF
 12043                           postinc2	equ	0xFDE
 12044                           postdec2	equ	0xFDD
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _memset *****************
 12050 ;; Defined at:
 12051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  p1              2   25[COMRAM] PTR void 
 12054 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12055 ;;  c               2   27[COMRAM] int 
 12056 ;;  n               2   29[COMRAM] unsigned int 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;  p               2   31[COMRAM] PTR unsigned char 
 12059 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  2   25[COMRAM] PTR void 
 12062 ;; Registers used:
 12063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12069 ;;      Params:         6       0       0       0       0       0       0
 12070 ;;      Locals:         2       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0
 12072 ;;      Totals:         8       0       0       0       0       0       0
 12073 ;;Total ram usage:        8 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    2
 12076 ;; This function calls:
 12077 ;;		Nothing
 12078 ;; This function is called by:
 12079 ;;		_util_beacon_transmission
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text50
 12084  003922                     __ptext50:
 12085                           	opt stack 0
 12086  003922                     _memset:
 12087                           	opt stack 26
 12088                           
 12089                           ;incstack = 0
 12090  003922  C01A  F020         	movff	memset@p1,memset@p
 12091  003926  C01B  F021         	movff	memset@p1+1,memset@p+1
 12092  00392A  D008               	goto	l3843
 12093  00392C                     l3839:
 12094  00392C  C020  FFD9         	movff	memset@p,fsr2l
 12095  003930  C021  FFDA         	movff	memset@p+1,fsr2h
 12096  003934  C01C  FFDF         	movff	memset@c,indf2
 12097  003938  4A20               	infsnz	memset@p,f,c
 12098  00393A  2A21               	incf	memset@p+1,f,c
 12099  00393C                     l3843:
 12100  00393C  061E               	decf	memset@n,f,c
 12101  00393E  A0D8               	btfss	status,0,c
 12102  003940  061F               	decf	memset@n+1,f,c
 12103  003942  281E               	incf	memset@n,w,c
 12104  003944  E1F3               	bnz	l3839
 12105  003946  281F               	incf	memset@n+1,w,c
 12106  003948  B4D8               	btfsc	status,2,c
 12107  00394A  0012               	return	
 12108  00394C  D7EF               	goto	l3839
 12109  00394E                     __end_of_memset:
 12110                           	opt stack 0
 12111                           tblptru	equ	0xFF8
 12112                           tblptrh	equ	0xFF7
 12113                           tblptrl	equ	0xFF6
 12114                           tablat	equ	0xFF5
 12115                           prodh	equ	0xFF4
 12116                           prodl	equ	0xFF3
 12117                           intcon	equ	0xFF2
 12118                           indf0	equ	0xFEF
 12119                           postinc0	equ	0xFEE
 12120                           fsr0h	equ	0xFEA
 12121                           fsr0l	equ	0xFE9
 12122                           wreg	equ	0xFE8
 12123                           indf1	equ	0xFE7
 12124                           postdec1	equ	0xFE5
 12125                           fsr1h	equ	0xFE2
 12126                           fsr1l	equ	0xFE1
 12127                           indf2	equ	0xFDF
 12128                           postinc2	equ	0xFDE
 12129                           postdec2	equ	0xFDD
 12130                           fsr2h	equ	0xFDA
 12131                           fsr2l	equ	0xFD9
 12132                           status	equ	0xFD8
 12133                           
 12134 ;; *************** function _init_initialize *****************
 12135 ;; Defined at:
 12136 ;;		line 18 in file "easat2_init_initialize.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12150 ;;      Params:         0       0       0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    3
 12157 ;; This function calls:
 12158 ;;		_init_io_initialize
 12159 ;;		_init_timer1_initialize
 12160 ;;		_init_timer2_initialize
 12161 ;;		_init_watchdogs_initialize
 12162 ;;		_util_pwm_initialize
 12163 ;; This function is called by:
 12164 ;;		_main
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text51
 12169  003A46                     __ptext51:
 12170                           	opt stack 0
 12171  003A46                     _init_initialize:
 12172                           	opt stack 27
 12173                           
 12174                           ;easat2_init_initialize.c: 21: init_watchdogs_initialize();
 12175                           
 12176                           ;incstack = 0
 12177  003A46  ECED  F01C         	call	_init_watchdogs_initialize	;wreg free
 12178                           
 12179                           ;easat2_init_initialize.c: 24: init_io_initialize();
 12180  003A4A  EC1F  F018         	call	_init_io_initialize	;wreg free
 12181                           
 12182                           ;easat2_init_initialize.c: 27: init_timer1_initialize();
 12183  003A4E  ECA7  F01C         	call	_init_timer1_initialize	;wreg free
 12184                           
 12185                           ;easat2_init_initialize.c: 28: init_timer2_initialize();
 12186  003A52  EC16  F01D         	call	_init_timer2_initialize	;wreg free
 12187                           
 12188                           ;easat2_init_initialize.c: 31: util_pwm_initialize();
 12189  003A56  ECFF  F01B         	call	_util_pwm_initialize	;wreg free
 12190  003A5A  0012               	return		;funcret
 12191  003A5C                     __end_of_init_initialize:
 12192                           	opt stack 0
 12193                           tblptru	equ	0xFF8
 12194                           tblptrh	equ	0xFF7
 12195                           tblptrl	equ	0xFF6
 12196                           tablat	equ	0xFF5
 12197                           prodh	equ	0xFF4
 12198                           prodl	equ	0xFF3
 12199                           intcon	equ	0xFF2
 12200                           indf0	equ	0xFEF
 12201                           postinc0	equ	0xFEE
 12202                           fsr0h	equ	0xFEA
 12203                           fsr0l	equ	0xFE9
 12204                           wreg	equ	0xFE8
 12205                           indf1	equ	0xFE7
 12206                           postdec1	equ	0xFE5
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           indf2	equ	0xFDF
 12210                           postinc2	equ	0xFDE
 12211                           postdec2	equ	0xFDD
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216 ;; *************** function _util_pwm_initialize *****************
 12217 ;; Defined at:
 12218 ;;		line 24 in file "easat2_util_pwm.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;		None
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      void 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12232 ;;      Params:         0       0       0       0       0       0       0
 12233 ;;      Locals:         0       0       0       0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0
 12235 ;;      Totals:         0       0       0       0       0       0       0
 12236 ;;Total ram usage:        0 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    2
 12239 ;; This function calls:
 12240 ;;		Nothing
 12241 ;; This function is called by:
 12242 ;;		_init_initialize
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text52
 12247  0037FE                     __ptext52:
 12248                           	opt stack 0
 12249  0037FE                     _util_pwm_initialize:
 12250                           	opt stack 27
 12251                           
 12252                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 12253                           
 12254                           ;incstack = 0
 12255  0037FE  8495               	bsf	3989,2,c	;volatile
 12256                           
 12257                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 12258  003800  8695               	bsf	3989,3,c	;volatile
 12259                           
 12260                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 12261  003802  0EE7               	movlw	-25
 12262  003804  010F               	movlb	15	; () banked
 12263  003806  1749               	andwf	73,f,b	;volatile
 12264                           
 12265                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 12266  003808  0E7C               	movlw	124
 12267  00380A  6EBB               	movwf	4027,c	;volatile
 12268                           
 12269                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 12270  00380C  0E3F               	movlw	-193
 12271  00380E  1666               	andwf	3942,f,c	;volatile
 12272                           
 12273                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 12274  003810  5066               	movf	3942,w,c	;volatile
 12275  003812  0BF0               	andlw	-16
 12276  003814  090C               	iorlw	12
 12277  003816  6E66               	movwf	3942,c	;volatile
 12278                           
 12279                           ; BSR set to: 15
 12280                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 12281  003818  9063               	bcf	3939,0,c	;volatile
 12282                           
 12283                           ; BSR set to: 15
 12284                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 12285  00381A  8263               	bsf	3939,1,c	;volatile
 12286                           
 12287                           ; BSR set to: 15
 12288                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 12289  00381C  8463               	bsf	3939,2,c	;volatile
 12290                           
 12291                           ; BSR set to: 15
 12292                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 12293  00381E  9663               	bcf	3939,3,c	;volatile
 12294                           
 12295                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 12296  003820  0E3E               	movlw	62
 12297  003822  6E67               	movwf	3943,c	;volatile
 12298                           
 12299                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 12300  003824  5066               	movf	3942,w,c	;volatile
 12301  003826  0BCF               	andlw	-49
 12302  003828  0920               	iorlw	32
 12303  00382A  6E66               	movwf	3942,c	;volatile
 12304                           
 12305                           ; BSR set to: 15
 12306                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 12307  00382C  94BA               	bcf	4026,2,c	;volatile
 12308                           
 12309                           ; BSR set to: 15
 12310                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 12311  00382E  929E               	bcf	3998,1,c	;volatile
 12312                           
 12313                           ; BSR set to: 15
 12314  003830  0012               	return		;funcret
 12315  003832                     __end_of_util_pwm_initialize:
 12316                           	opt stack 0
 12317                           tblptru	equ	0xFF8
 12318                           tblptrh	equ	0xFF7
 12319                           tblptrl	equ	0xFF6
 12320                           tablat	equ	0xFF5
 12321                           prodh	equ	0xFF4
 12322                           prodl	equ	0xFF3
 12323                           intcon	equ	0xFF2
 12324                           indf0	equ	0xFEF
 12325                           postinc0	equ	0xFEE
 12326                           fsr0h	equ	0xFEA
 12327                           fsr0l	equ	0xFE9
 12328                           wreg	equ	0xFE8
 12329                           indf1	equ	0xFE7
 12330                           postdec1	equ	0xFE5
 12331                           fsr1h	equ	0xFE2
 12332                           fsr1l	equ	0xFE1
 12333                           indf2	equ	0xFDF
 12334                           postinc2	equ	0xFDE
 12335                           postdec2	equ	0xFDD
 12336                           fsr2h	equ	0xFDA
 12337                           fsr2l	equ	0xFD9
 12338                           status	equ	0xFD8
 12339                           
 12340 ;; *************** function _init_watchdogs_initialize *****************
 12341 ;; Defined at:
 12342 ;;		line 36 in file "easat2_init_initialize.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2, status,0
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12356 ;;      Params:         0       0       0       0       0       0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0
 12358 ;;      Temps:          1       0       0       0       0       0       0
 12359 ;;      Totals:         1       0       0       0       0       0       0
 12360 ;;Total ram usage:        1 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    2
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_init_initialize
 12367 ;;		_main_loop
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text53
 12372  0039DA                     __ptext53:
 12373                           	opt stack 0
 12374  0039DA                     _init_watchdogs_initialize:
 12375                           	opt stack 27
 12376                           
 12377                           ;easat2_init_initialize.c: 39: (PORTDbits.RD5) = !(PORTDbits.RD5);
 12378                           
 12379                           ; BSR set to: 15
 12380                           ;incstack = 0
 12381  0039DA  BA83               	btfsc	3971,5,c	;volatile
 12382  0039DC  D003               	goto	u4070
 12383  0039DE  6A1A               	clrf	??_init_watchdogs_initialize& (0+255),c
 12384  0039E0  2A1A               	incf	??_init_watchdogs_initialize& (0+255),f,c
 12385  0039E2  D001               	goto	u4088
 12386  0039E4                     u4070:
 12387  0039E4  6A1A               	clrf	??_init_watchdogs_initialize& (0+255),c
 12388  0039E6                     u4088:
 12389  0039E6  3A1A               	swapf	??_init_watchdogs_initialize,f,c
 12390  0039E8  461A               	rlncf	??_init_watchdogs_initialize,f,c
 12391  0039EA  5083               	movf	3971,w,c	;volatile
 12392  0039EC  181A               	xorwf	??_init_watchdogs_initialize,w,c
 12393  0039EE  0BDF               	andlw	-33
 12394  0039F0  181A               	xorwf	??_init_watchdogs_initialize,w,c
 12395  0039F2  6E83               	movwf	3971,c	;volatile
 12396  0039F4  0004               	clrwdt		;# 
 12397  0039F6  0012               	return		;funcret
 12398  0039F8                     __end_of_init_watchdogs_initialize:
 12399                           	opt stack 0
 12400                           tblptru	equ	0xFF8
 12401                           tblptrh	equ	0xFF7
 12402                           tblptrl	equ	0xFF6
 12403                           tablat	equ	0xFF5
 12404                           prodh	equ	0xFF4
 12405                           prodl	equ	0xFF3
 12406                           intcon	equ	0xFF2
 12407                           indf0	equ	0xFEF
 12408                           postinc0	equ	0xFEE
 12409                           fsr0h	equ	0xFEA
 12410                           fsr0l	equ	0xFE9
 12411                           wreg	equ	0xFE8
 12412                           indf1	equ	0xFE7
 12413                           postdec1	equ	0xFE5
 12414                           fsr1h	equ	0xFE2
 12415                           fsr1l	equ	0xFE1
 12416                           indf2	equ	0xFDF
 12417                           postinc2	equ	0xFDE
 12418                           postdec2	equ	0xFDD
 12419                           fsr2h	equ	0xFDA
 12420                           fsr2l	equ	0xFD9
 12421                           status	equ	0xFD8
 12422                           
 12423 ;; *************** function _init_timer2_initialize *****************
 12424 ;; Defined at:
 12425 ;;		line 70 in file "easat2_init_timer.c"
 12426 ;; Parameters:    Size  Location     Type
 12427 ;;		None
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;		None
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      void 
 12432 ;; Registers used:
 12433 ;;		wreg, status,2
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12439 ;;      Params:         0       0       0       0       0       0       0
 12440 ;;      Locals:         0       0       0       0       0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0
 12442 ;;      Totals:         0       0       0       0       0       0       0
 12443 ;;Total ram usage:        0 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    2
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_init_initialize
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           	psect	text54
 12454  003A2C                     __ptext54:
 12455                           	opt stack 0
 12456  003A2C                     _init_timer2_initialize:
 12457                           	opt stack 27
 12458                           
 12459                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 12460                           
 12461                           ;incstack = 0
 12462  003A2C  94BA               	bcf	4026,2,c	;volatile
 12463                           
 12464                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 12465  003A2E  80BA               	bsf	4026,0,c	;volatile
 12466                           
 12467                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 12468  003A30  92BA               	bcf	4026,1,c	;volatile
 12469                           
 12470                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 12471  003A32  96BA               	bcf	4026,3,c	;volatile
 12472  003A34  98BA               	bcf	4026,4,c	;volatile
 12473  003A36  9ABA               	bcf	4026,5,c	;volatile
 12474  003A38  9CBA               	bcf	4026,6,c	;volatile
 12475                           
 12476                           ;easat2_init_timer.c: 93: TMR2 = 0;
 12477  003A3A  0E00               	movlw	0
 12478  003A3C  6EBC               	movwf	4028,c	;volatile
 12479                           
 12480                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 12481  003A3E  829D               	bsf	3997,1,c	;volatile
 12482                           
 12483                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 12484  003A40  929F               	bcf	3999,1,c	;volatile
 12485                           
 12486                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 12487  003A42  929E               	bcf	3998,1,c	;volatile
 12488  003A44  0012               	return		;funcret
 12489  003A46                     __end_of_init_timer2_initialize:
 12490                           	opt stack 0
 12491                           tblptru	equ	0xFF8
 12492                           tblptrh	equ	0xFF7
 12493                           tblptrl	equ	0xFF6
 12494                           tablat	equ	0xFF5
 12495                           prodh	equ	0xFF4
 12496                           prodl	equ	0xFF3
 12497                           intcon	equ	0xFF2
 12498                           indf0	equ	0xFEF
 12499                           postinc0	equ	0xFEE
 12500                           fsr0h	equ	0xFEA
 12501                           fsr0l	equ	0xFE9
 12502                           wreg	equ	0xFE8
 12503                           indf1	equ	0xFE7
 12504                           postdec1	equ	0xFE5
 12505                           fsr1h	equ	0xFE2
 12506                           fsr1l	equ	0xFE1
 12507                           indf2	equ	0xFDF
 12508                           postinc2	equ	0xFDE
 12509                           postdec2	equ	0xFDD
 12510                           fsr2h	equ	0xFDA
 12511                           fsr2l	equ	0xFD9
 12512                           status	equ	0xFD8
 12513                           
 12514 ;; *************** function _init_timer1_initialize *****************
 12515 ;; Defined at:
 12516 ;;		line 17 in file "easat2_init_timer.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;		None
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;		None
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, status,2
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12530 ;;      Params:         0       0       0       0       0       0       0
 12531 ;;      Locals:         0       0       0       0       0       0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0
 12533 ;;      Totals:         0       0       0       0       0       0       0
 12534 ;;Total ram usage:        0 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    2
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_init_initialize
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text55
 12545  00394E                     __ptext55:
 12546                           	opt stack 0
 12547  00394E                     _init_timer1_initialize:
 12548                           	opt stack 27
 12549                           
 12550                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 12551                           
 12552                           ;incstack = 0
 12553  00394E  8ED0               	bsf	4048,7,c	;volatile
 12554                           
 12555                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 12556  003950  90CD               	bcf	4045,0,c	;volatile
 12557                           
 12558                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 12559  003952  9CCD               	bcf	4045,6,c	;volatile
 12560                           
 12561                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 12562  003954  9ECD               	bcf	4045,7,c	;volatile
 12563                           
 12564                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 12565  003956  9ACD               	bcf	4045,5,c	;volatile
 12566                           
 12567                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 12568  003958  98CD               	bcf	4045,4,c	;volatile
 12569                           
 12570                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 12571  00395A  96CD               	bcf	4045,3,c	;volatile
 12572                           
 12573                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 12574  00395C  82CD               	bsf	4045,1,c	;volatile
 12575                           
 12576                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 12577  00395E  0EEC               	movlw	236
 12578  003960  6ECF               	movwf	4047,c	;volatile
 12579                           
 12580                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 12581  003962  0E77               	movlw	119
 12582  003964  6ECE               	movwf	4046,c	;volatile
 12583                           
 12584                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 12585  003966  809D               	bsf	3997,0,c	;volatile
 12586                           
 12587                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 12588  003968  809F               	bsf	3999,0,c	;volatile
 12589                           
 12590                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 12591  00396A  909E               	bcf	3998,0,c	;volatile
 12592                           
 12593                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 12594  00396C  80CD               	bsf	4045,0,c	;volatile
 12595                           
 12596                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 12597  00396E  9CF2               	bcf	intcon,6,c	;volatile
 12598                           
 12599                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 12600  003970  8EF2               	bsf	intcon,7,c	;volatile
 12601  003972  0012               	return		;funcret
 12602  003974                     __end_of_init_timer1_initialize:
 12603                           	opt stack 0
 12604                           tblptru	equ	0xFF8
 12605                           tblptrh	equ	0xFF7
 12606                           tblptrl	equ	0xFF6
 12607                           tablat	equ	0xFF5
 12608                           prodh	equ	0xFF4
 12609                           prodl	equ	0xFF3
 12610                           intcon	equ	0xFF2
 12611                           indf0	equ	0xFEF
 12612                           postinc0	equ	0xFEE
 12613                           fsr0h	equ	0xFEA
 12614                           fsr0l	equ	0xFE9
 12615                           wreg	equ	0xFE8
 12616                           indf1	equ	0xFE7
 12617                           postdec1	equ	0xFE5
 12618                           fsr1h	equ	0xFE2
 12619                           fsr1l	equ	0xFE1
 12620                           indf2	equ	0xFDF
 12621                           postinc2	equ	0xFDE
 12622                           postdec2	equ	0xFDD
 12623                           fsr2h	equ	0xFDA
 12624                           fsr2l	equ	0xFD9
 12625                           status	equ	0xFD8
 12626                           
 12627 ;; *************** function _init_io_initialize *****************
 12628 ;; Defined at:
 12629 ;;		line 49 in file "easat2_init_initialize.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;		None
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;		None
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  1    wreg      void 
 12636 ;; Registers used:
 12637 ;;		wreg, status,2
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12643 ;;      Params:         0       0       0       0       0       0       0
 12644 ;;      Locals:         0       0       0       0       0       0       0
 12645 ;;      Temps:          0       0       0       0       0       0       0
 12646 ;;      Totals:         0       0       0       0       0       0       0
 12647 ;;Total ram usage:        0 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; Hardware stack levels required when called:    2
 12650 ;; This function calls:
 12651 ;;		Nothing
 12652 ;; This function is called by:
 12653 ;;		_init_initialize
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           	psect	text56
 12658  00303E                     __ptext56:
 12659                           	opt stack 0
 12660  00303E                     _init_io_initialize:
 12661                           	opt stack 27
 12662                           
 12663                           ;easat2_init_initialize.c: 58: VREFCON0bits.FVREN = 1;
 12664                           
 12665                           ;incstack = 0
 12666  00303E  010F               	movlb	15	; () banked
 12667  003040  8F42               	bsf	66,7,b	;volatile
 12668                           
 12669                           ;easat2_init_initialize.c: 59: VREFCON0bits.FVRS0 = 0;
 12670  003042  010F               	movlb	15	; () banked
 12671  003044  9942               	bcf	66,4,b	;volatile
 12672                           
 12673                           ;easat2_init_initialize.c: 60: VREFCON0bits.FVRS1 = 1;
 12674  003046  010F               	movlb	15	; () banked
 12675  003048  8B42               	bsf	66,5,b	;volatile
 12676                           
 12677                           ;easat2_init_initialize.c: 62: VREFCON0bits.FVRST = 1;
 12678  00304A  010F               	movlb	15	; () banked
 12679  00304C  8D42               	bsf	66,6,b	;volatile
 12680                           
 12681                           ; BSR set to: 15
 12682                           ;easat2_init_initialize.c: 67: ADCON1 = 0x08;
 12683  00304E  0E08               	movlw	8
 12684  003050  6EC1               	movwf	4033,c	;volatile
 12685                           
 12686                           ;easat2_init_initialize.c: 68: ADCON2 = 0xAF;
 12687  003052  0EAF               	movlw	175
 12688  003054  6EC0               	movwf	4032,c	;volatile
 12689                           
 12690                           ; BSR set to: 15
 12691                           ;easat2_init_initialize.c: 72: TRISAbits.TRISA0 = 1;
 12692  003056  8092               	bsf	3986,0,c	;volatile
 12693                           
 12694                           ; BSR set to: 15
 12695                           ;easat2_init_initialize.c: 73: TRISAbits.TRISA1 = 1;
 12696  003058  8292               	bsf	3986,1,c	;volatile
 12697                           
 12698                           ; BSR set to: 15
 12699                           ;easat2_init_initialize.c: 74: TRISAbits.TRISA2 = 0;
 12700  00305A  9492               	bcf	3986,2,c	;volatile
 12701                           
 12702                           ; BSR set to: 15
 12703                           ;easat2_init_initialize.c: 75: TRISAbits.TRISA3 = 1;
 12704  00305C  8692               	bsf	3986,3,c	;volatile
 12705                           
 12706                           ; BSR set to: 15
 12707                           ;easat2_init_initialize.c: 76: TRISAbits.TRISA4 = 1;
 12708  00305E  8892               	bsf	3986,4,c	;volatile
 12709                           
 12710                           ; BSR set to: 15
 12711                           ;easat2_init_initialize.c: 77: TRISAbits.TRISA5 = 1;
 12712  003060  8A92               	bsf	3986,5,c	;volatile
 12713                           
 12714                           ; BSR set to: 15
 12715                           ;easat2_init_initialize.c: 84: ANSELAbits.ANSA0 = 1;
 12716  003062  010F               	movlb	15	; () banked
 12717  003064  8138               	bsf	56,0,b	;volatile
 12718                           
 12719                           ; BSR set to: 15
 12720                           ;easat2_init_initialize.c: 85: ANSELAbits.ANSA1 = 1;
 12721  003066  010F               	movlb	15	; () banked
 12722  003068  8338               	bsf	56,1,b	;volatile
 12723                           
 12724                           ; BSR set to: 15
 12725                           ;easat2_init_initialize.c: 86: ANSELAbits.ANSA2 = 1;
 12726  00306A  010F               	movlb	15	; () banked
 12727  00306C  8538               	bsf	56,2,b	;volatile
 12728                           
 12729                           ; BSR set to: 15
 12730                           ;easat2_init_initialize.c: 87: ANSELAbits.ANSA3 = 0;
 12731  00306E  010F               	movlb	15	; () banked
 12732  003070  9738               	bcf	56,3,b	;volatile
 12733                           
 12734                           ; BSR set to: 15
 12735                           ;easat2_init_initialize.c: 89: ANSELAbits.ANSA5 = 1;
 12736  003072  010F               	movlb	15	; () banked
 12737  003074  8B38               	bsf	56,5,b	;volatile
 12738                           
 12739                           ; BSR set to: 15
 12740                           ;easat2_init_initialize.c: 93: LATAbits.LATA0 = 0;
 12741  003076  9089               	bcf	3977,0,c	;volatile
 12742                           
 12743                           ; BSR set to: 15
 12744                           ;easat2_init_initialize.c: 94: LATAbits.LATA1 = 0;
 12745  003078  9289               	bcf	3977,1,c	;volatile
 12746                           
 12747                           ; BSR set to: 15
 12748                           ;easat2_init_initialize.c: 95: LATAbits.LATA2 = 0;
 12749  00307A  9489               	bcf	3977,2,c	;volatile
 12750                           
 12751                           ; BSR set to: 15
 12752                           ;easat2_init_initialize.c: 96: LATAbits.LATA3 = 0;
 12753  00307C  9689               	bcf	3977,3,c	;volatile
 12754                           
 12755                           ; BSR set to: 15
 12756                           ;easat2_init_initialize.c: 97: LATAbits.LATA4 = 0;
 12757  00307E  9889               	bcf	3977,4,c	;volatile
 12758                           
 12759                           ; BSR set to: 15
 12760                           ;easat2_init_initialize.c: 98: LATAbits.LATA5 = 0;
 12761  003080  9A89               	bcf	3977,5,c	;volatile
 12762                           
 12763                           ;easat2_init_initialize.c: 106: WPUB = 0b00000000;
 12764  003082  0E00               	movlw	0
 12765  003084  6E61               	movwf	3937,c	;volatile
 12766                           
 12767                           ; BSR set to: 15
 12768                           ;easat2_init_initialize.c: 107: RBPU = 0b11111111;
 12769  003086  8EF1               	bsf	intcon2,7,c	;volatile
 12770                           
 12771                           ; BSR set to: 15
 12772                           ;easat2_init_initialize.c: 111: TRISBbits.TRISB0 = 1;
 12773  003088  8093               	bsf	3987,0,c	;volatile
 12774                           
 12775                           ; BSR set to: 15
 12776                           ;easat2_init_initialize.c: 112: TRISBbits.TRISB1 = 0;
 12777  00308A  9293               	bcf	3987,1,c	;volatile
 12778                           
 12779                           ; BSR set to: 15
 12780                           ;easat2_init_initialize.c: 113: TRISBbits.TRISB2 = 0;
 12781  00308C  9493               	bcf	3987,2,c	;volatile
 12782                           
 12783                           ; BSR set to: 15
 12784                           ;easat2_init_initialize.c: 114: TRISBbits.TRISB3 = 0;
 12785  00308E  9693               	bcf	3987,3,c	;volatile
 12786                           
 12787                           ; BSR set to: 15
 12788                           ;easat2_init_initialize.c: 115: TRISBbits.TRISB4 = 0;
 12789  003090  9893               	bcf	3987,4,c	;volatile
 12790                           
 12791                           ; BSR set to: 15
 12792                           ;easat2_init_initialize.c: 116: TRISBbits.TRISB5 = 0;
 12793  003092  9A93               	bcf	3987,5,c	;volatile
 12794                           
 12795                           ; BSR set to: 15
 12796                           ;easat2_init_initialize.c: 117: TRISBbits.TRISB6 = 0;
 12797  003094  9C93               	bcf	3987,6,c	;volatile
 12798                           
 12799                           ; BSR set to: 15
 12800                           ;easat2_init_initialize.c: 118: TRISBbits.TRISB7 = 0;
 12801  003096  9E93               	bcf	3987,7,c	;volatile
 12802                           
 12803                           ; BSR set to: 15
 12804                           ;easat2_init_initialize.c: 122: ANSELBbits.ANSB0 = 1;
 12805  003098  010F               	movlb	15	; () banked
 12806  00309A  8139               	bsf	57,0,b	;volatile
 12807                           
 12808                           ; BSR set to: 15
 12809                           ;easat2_init_initialize.c: 123: ANSELBbits.ANSB1 = 0;
 12810  00309C  010F               	movlb	15	; () banked
 12811  00309E  9339               	bcf	57,1,b	;volatile
 12812                           
 12813                           ; BSR set to: 15
 12814                           ;easat2_init_initialize.c: 124: ANSELBbits.ANSB2 = 0;
 12815  0030A0  010F               	movlb	15	; () banked
 12816  0030A2  9539               	bcf	57,2,b	;volatile
 12817                           
 12818                           ; BSR set to: 15
 12819                           ;easat2_init_initialize.c: 125: ANSELBbits.ANSB3 = 0;
 12820  0030A4  010F               	movlb	15	; () banked
 12821  0030A6  9739               	bcf	57,3,b	;volatile
 12822                           
 12823                           ; BSR set to: 15
 12824                           ;easat2_init_initialize.c: 127: ANSELBbits.ANSB5 = 0;
 12825  0030A8  010F               	movlb	15	; () banked
 12826  0030AA  9B39               	bcf	57,5,b	;volatile
 12827                           
 12828                           ; BSR set to: 15
 12829                           ;easat2_init_initialize.c: 131: LATBbits.LATB0 = 0;
 12830  0030AC  908A               	bcf	3978,0,c	;volatile
 12831                           
 12832                           ; BSR set to: 15
 12833                           ;easat2_init_initialize.c: 132: LATBbits.LATB1 = 0;
 12834  0030AE  928A               	bcf	3978,1,c	;volatile
 12835                           
 12836                           ; BSR set to: 15
 12837                           ;easat2_init_initialize.c: 133: LATBbits.LATB2 = 0;
 12838  0030B0  948A               	bcf	3978,2,c	;volatile
 12839                           
 12840                           ; BSR set to: 15
 12841                           ;easat2_init_initialize.c: 134: LATBbits.LATB3 = 0;
 12842  0030B2  968A               	bcf	3978,3,c	;volatile
 12843                           
 12844                           ; BSR set to: 15
 12845                           ;easat2_init_initialize.c: 135: LATBbits.LATB4 = 0;
 12846  0030B4  988A               	bcf	3978,4,c	;volatile
 12847                           
 12848                           ; BSR set to: 15
 12849                           ;easat2_init_initialize.c: 136: LATBbits.LATB5 = 0;
 12850  0030B6  9A8A               	bcf	3978,5,c	;volatile
 12851                           
 12852                           ; BSR set to: 15
 12853                           ;easat2_init_initialize.c: 140: TRISDbits.TRISD0 = 0;
 12854  0030B8  9095               	bcf	3989,0,c	;volatile
 12855                           
 12856                           ; BSR set to: 15
 12857                           ;easat2_init_initialize.c: 141: TRISDbits.TRISD1 = 0;
 12858  0030BA  9295               	bcf	3989,1,c	;volatile
 12859                           
 12860                           ; BSR set to: 15
 12861                           ;easat2_init_initialize.c: 142: TRISDbits.TRISD2 = 0;
 12862  0030BC  9495               	bcf	3989,2,c	;volatile
 12863                           
 12864                           ; BSR set to: 15
 12865                           ;easat2_init_initialize.c: 143: TRISDbits.TRISD3 = 0;
 12866  0030BE  9695               	bcf	3989,3,c	;volatile
 12867                           
 12868                           ; BSR set to: 15
 12869                           ;easat2_init_initialize.c: 144: TRISDbits.TRISD4 = 0;
 12870  0030C0  9895               	bcf	3989,4,c	;volatile
 12871                           
 12872                           ; BSR set to: 15
 12873                           ;easat2_init_initialize.c: 145: TRISDbits.TRISD5 = 0;
 12874  0030C2  9A95               	bcf	3989,5,c	;volatile
 12875                           
 12876                           ; BSR set to: 15
 12877                           ;easat2_init_initialize.c: 146: TRISDbits.TRISD6 = 0;
 12878  0030C4  9C95               	bcf	3989,6,c	;volatile
 12879                           
 12880                           ; BSR set to: 15
 12881                           ;easat2_init_initialize.c: 147: TRISDbits.TRISD7 = 0;
 12882  0030C6  9E95               	bcf	3989,7,c	;volatile
 12883                           
 12884                           ; BSR set to: 15
 12885                           ;easat2_init_initialize.c: 151: ANSELDbits.ANSD0 = 0;
 12886  0030C8  010F               	movlb	15	; () banked
 12887  0030CA  913B               	bcf	59,0,b	;volatile
 12888                           
 12889                           ; BSR set to: 15
 12890                           ;easat2_init_initialize.c: 152: ANSELDbits.ANSD1 = 0;
 12891  0030CC  010F               	movlb	15	; () banked
 12892  0030CE  933B               	bcf	59,1,b	;volatile
 12893                           
 12894                           ; BSR set to: 15
 12895                           ;easat2_init_initialize.c: 153: ANSELDbits.ANSD2 = 0;
 12896  0030D0  010F               	movlb	15	; () banked
 12897  0030D2  953B               	bcf	59,2,b	;volatile
 12898                           
 12899                           ; BSR set to: 15
 12900                           ;easat2_init_initialize.c: 154: ANSELDbits.ANSD3 = 0;
 12901  0030D4  010F               	movlb	15	; () banked
 12902  0030D6  973B               	bcf	59,3,b	;volatile
 12903                           
 12904                           ; BSR set to: 15
 12905                           ;easat2_init_initialize.c: 155: ANSELDbits.ANSD4 = 0;
 12906  0030D8  010F               	movlb	15	; () banked
 12907  0030DA  993B               	bcf	59,4,b	;volatile
 12908                           
 12909                           ; BSR set to: 15
 12910                           ;easat2_init_initialize.c: 156: ANSELDbits.ANSD5 = 0;
 12911  0030DC  010F               	movlb	15	; () banked
 12912  0030DE  9B3B               	bcf	59,5,b	;volatile
 12913                           
 12914                           ; BSR set to: 15
 12915                           ;easat2_init_initialize.c: 157: ANSELDbits.ANSD6 = 0;
 12916  0030E0  010F               	movlb	15	; () banked
 12917  0030E2  9D3B               	bcf	59,6,b	;volatile
 12918                           
 12919                           ; BSR set to: 15
 12920                           ;easat2_init_initialize.c: 158: ANSELDbits.ANSD7 = 0;
 12921  0030E4  010F               	movlb	15	; () banked
 12922  0030E6  9F3B               	bcf	59,7,b	;volatile
 12923                           
 12924                           ; BSR set to: 15
 12925                           ;easat2_init_initialize.c: 162: LATDbits.LATD0 = 0;
 12926  0030E8  908C               	bcf	3980,0,c	;volatile
 12927                           
 12928                           ; BSR set to: 15
 12929                           ;easat2_init_initialize.c: 163: LATDbits.LATD1 = 0;
 12930  0030EA  928C               	bcf	3980,1,c	;volatile
 12931                           
 12932                           ; BSR set to: 15
 12933                           ;easat2_init_initialize.c: 164: LATDbits.LATD2 = 0;
 12934  0030EC  948C               	bcf	3980,2,c	;volatile
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;easat2_init_initialize.c: 165: LATDbits.LATD3 = 0;
 12938  0030EE  968C               	bcf	3980,3,c	;volatile
 12939                           
 12940                           ; BSR set to: 15
 12941                           ;easat2_init_initialize.c: 166: LATDbits.LATD4 = 0;
 12942  0030F0  988C               	bcf	3980,4,c	;volatile
 12943                           
 12944                           ; BSR set to: 15
 12945                           ;easat2_init_initialize.c: 167: LATDbits.LATD5 = 0;
 12946  0030F2  9A8C               	bcf	3980,5,c	;volatile
 12947                           
 12948                           ; BSR set to: 15
 12949                           ;easat2_init_initialize.c: 168: LATDbits.LATD6 = 0;
 12950  0030F4  9C8C               	bcf	3980,6,c	;volatile
 12951                           
 12952                           ; BSR set to: 15
 12953                           ;easat2_init_initialize.c: 169: LATDbits.LATD7 = 0;
 12954  0030F6  9E8C               	bcf	3980,7,c	;volatile
 12955                           
 12956                           ; BSR set to: 15
 12957  0030F8  0012               	return		;funcret
 12958  0030FA                     __end_of_init_io_initialize:
 12959                           	opt stack 0
 12960                           tblptru	equ	0xFF8
 12961                           tblptrh	equ	0xFF7
 12962                           tblptrl	equ	0xFF6
 12963                           tablat	equ	0xFF5
 12964                           prodh	equ	0xFF4
 12965                           prodl	equ	0xFF3
 12966                           intcon	equ	0xFF2
 12967                           intcon2	equ	0xFF1
 12968                           indf0	equ	0xFEF
 12969                           postinc0	equ	0xFEE
 12970                           fsr0h	equ	0xFEA
 12971                           fsr0l	equ	0xFE9
 12972                           wreg	equ	0xFE8
 12973                           indf1	equ	0xFE7
 12974                           postdec1	equ	0xFE5
 12975                           fsr1h	equ	0xFE2
 12976                           fsr1l	equ	0xFE1
 12977                           indf2	equ	0xFDF
 12978                           postinc2	equ	0xFDE
 12979                           postdec2	equ	0xFDD
 12980                           fsr2h	equ	0xFDA
 12981                           fsr2l	equ	0xFD9
 12982                           status	equ	0xFD8
 12983                           
 12984 ;; *************** function _low_priority_int *****************
 12985 ;; Defined at:
 12986 ;;		line 269 in file "easat2_func_interrupts.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;		None
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;		None
 12991 ;; Return value:  Size  Location     Type
 12992 ;;                  1    wreg      void 
 12993 ;; Registers used:
 12994 ;;		None
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13000 ;;      Params:         0       0       0       0       0       0       0
 13001 ;;      Locals:         0       0       0       0       0       0       0
 13002 ;;      Temps:          0      17       0       0       0       0       0
 13003 ;;      Totals:         0      17       0       0       0       0       0
 13004 ;;Total ram usage:       17 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:    1
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		Interrupt level 1
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	intcodelo
 13015  000018                     __pintcodelo:
 13016                           	opt stack 0
 13017  000018                     _low_priority_int:
 13018                           	opt stack 23
 13019                           
 13020                           ; BSR set to: 15
 13021                           ;incstack = 0
 13022  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13023  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13024  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13025  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13026  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13027  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13028  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13029  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13030  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13031  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13032  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13033  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13034  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13035  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13036  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13037  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13038  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13039  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13040  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13041  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13042  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13043  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13044  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13045  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13046  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13047  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13048  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13049  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13050  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13051  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13052  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13053  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13054  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13055  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13056  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13057  0000A2  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13058  0000A4  0010               	retfie	
 13059  0000A6                     __end_of_low_priority_int:
 13060                           	opt stack 0
 13061                           pclatu	equ	0xFFB
 13062                           pclath	equ	0xFFA
 13063                           tblptru	equ	0xFF8
 13064                           tblptrh	equ	0xFF7
 13065                           tblptrl	equ	0xFF6
 13066                           tablat	equ	0xFF5
 13067                           prodh	equ	0xFF4
 13068                           prodl	equ	0xFF3
 13069                           intcon	equ	0xFF2
 13070                           intcon2	equ	0xFF1
 13071                           indf0	equ	0xFEF
 13072                           postinc0	equ	0xFEE
 13073                           fsr0h	equ	0xFEA
 13074                           fsr0l	equ	0xFE9
 13075                           wreg	equ	0xFE8
 13076                           indf1	equ	0xFE7
 13077                           postdec1	equ	0xFE5
 13078                           fsr1h	equ	0xFE2
 13079                           fsr1l	equ	0xFE1
 13080                           bsr	equ	0xFE0
 13081                           indf2	equ	0xFDF
 13082                           postinc2	equ	0xFDE
 13083                           postdec2	equ	0xFDD
 13084                           fsr2h	equ	0xFDA
 13085                           fsr2l	equ	0xFD9
 13086                           status	equ	0xFD8
 13087                           
 13088 ;; *************** function _high_priority_int *****************
 13089 ;; Defined at:
 13090 ;;		line 19 in file "easat2_func_interrupts.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;		None
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;  received_bit    2   23[COMRAM] unsigned int 
 13095 ;;  sample          2   21[COMRAM] unsigned int 
 13096 ;;  current_sign    2   19[COMRAM] unsigned int 
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  1    wreg      void 
 13099 ;; Registers used:
 13100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13101 ;; Tracked objects:
 13102 ;;		On entry : 0/0
 13103 ;;		On exit  : 0/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13106 ;;      Params:         0       0       0       0       0       0       0
 13107 ;;      Locals:         6       0       0       0       0       0       0
 13108 ;;      Temps:         19       0       0       0       0       0       0
 13109 ;;      Totals:        25       0       0       0       0       0       0
 13110 ;;Total ram usage:       25 bytes
 13111 ;; Hardware stack levels used:    1
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		Interrupt level 2
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	intcode
 13120  000008                     __pintcode:
 13121                           	opt stack 0
 13122  000008                     _high_priority_int:
 13123                           	opt stack 23
 13124                           
 13125                           ;incstack = 0
 13126  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13127  00000A  EFBE  F00D         	goto	int_func
 13128                           pclatu	equ	0xFFB
 13129                           pclath	equ	0xFFA
 13130                           tblptru	equ	0xFF8
 13131                           tblptrh	equ	0xFF7
 13132                           tblptrl	equ	0xFF6
 13133                           tablat	equ	0xFF5
 13134                           prodh	equ	0xFF4
 13135                           prodl	equ	0xFF3
 13136                           intcon	equ	0xFF2
 13137                           intcon2	equ	0xFF1
 13138                           indf0	equ	0xFEF
 13139                           postinc0	equ	0xFEE
 13140                           fsr0h	equ	0xFEA
 13141                           fsr0l	equ	0xFE9
 13142                           wreg	equ	0xFE8
 13143                           indf1	equ	0xFE7
 13144                           postdec1	equ	0xFE5
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           bsr	equ	0xFE0
 13148                           indf2	equ	0xFDF
 13149                           postinc2	equ	0xFDE
 13150                           postdec2	equ	0xFDD
 13151                           fsr2h	equ	0xFDA
 13152                           fsr2l	equ	0xFD9
 13153                           status	equ	0xFD8
 13154                           
 13155                           	psect	intcode_body
 13156  001B7C                     __pintcode_body:
 13157                           	opt stack 23
 13158  001B7C                     int_func:
 13159                           	opt stack 23
 13160  001B7C  CFFA F006          	movff	pclath,??_high_priority_int+5
 13161  001B80  CFFB F007          	movff	pclatu,??_high_priority_int+6
 13162  001B84  CFE9 F008          	movff	fsr0l,??_high_priority_int+7
 13163  001B88  CFEA F009          	movff	fsr0h,??_high_priority_int+8
 13164  001B8C  CFE1 F00A          	movff	fsr1l,??_high_priority_int+9
 13165  001B90  CFE2 F00B          	movff	fsr1h,??_high_priority_int+10
 13166  001B94  CFD9 F00C          	movff	fsr2l,??_high_priority_int+11
 13167  001B98  CFDA F00D          	movff	fsr2h,??_high_priority_int+12
 13168  001B9C  CFF3 F00E          	movff	prodl,??_high_priority_int+13
 13169  001BA0  CFF4 F00F          	movff	prodh,??_high_priority_int+14
 13170  001BA4  CFF6 F010          	movff	tblptrl,??_high_priority_int+15
 13171  001BA8  CFF7 F011          	movff	tblptrh,??_high_priority_int+16
 13172  001BAC  CFF8 F012          	movff	tblptru,??_high_priority_int+17
 13173  001BB0  CFF5 F013          	movff	tablat,??_high_priority_int+18
 13174                           
 13175                           ;easat2_func_interrupts.c: 21: static int tmr1_interrupt_number = 0;
 13176                           ;easat2_func_interrupts.c: 23: static unsigned int samples[128];
 13177                           ;easat2_func_interrupts.c: 24: static unsigned int sample_position = 0;
 13178                           ;easat2_func_interrupts.c: 25: static unsigned short long noise_avg_value = 32000;
 13179                           ;easat2_func_interrupts.c: 26: static unsigned int activation_threshold = 32000;
 13180                           ;easat2_func_interrupts.c: 27: static unsigned int times_threshold_exceeded = 0;
 13181                           ;easat2_func_interrupts.c: 28: static unsigned int cycles_transmitter_active = 0;
 13182  001BB4  0E00               	movlw	0
 13183  001BB6  6E17               	movwf	high_priority_int@sample+1,c
 13184  001BB8  0E00               	movlw	0
 13185  001BBA  6E16               	movwf	high_priority_int@sample,c
 13186                           
 13187                           ;easat2_func_interrupts.c: 37: static unsigned int previous_signal_level = 0;
 13188                           ;easat2_func_interrupts.c: 38: unsigned int current_signal_level = 0;
 13189  001BBC  0E00               	movlw	0
 13190  001BBE  6E15               	movwf	high_priority_int@current_signal_level+1,c
 13191  001BC0  0E00               	movlw	0
 13192  001BC2  6E14               	movwf	high_priority_int@current_signal_level,c
 13193                           
 13194                           ;easat2_func_interrupts.c: 40: unsigned int received_bit = 0;
 13195  001BC4  0E00               	movlw	0
 13196  001BC6  6E19               	movwf	high_priority_int@received_bit+1,c
 13197  001BC8  0E00               	movlw	0
 13198  001BCA  6E18               	movwf	high_priority_int@received_bit,c
 13199                           
 13200                           ;easat2_func_interrupts.c: 41: static unsigned int previous_received_bit = 0;
 13201                           ;easat2_func_interrupts.c: 43: static unsigned int num_received_bits = 0;
 13202                           ;easat2_func_interrupts.c: 46: if (PIR1bits.TMR2IF) {
 13203  001BCC  A29E               	btfss	3998,1,c	;volatile
 13204  001BCE  D002               	goto	i2l449
 13205                           
 13206                           ;easat2_func_interrupts.c: 50: PIR1bits.TMR2IF = 0;
 13207  001BD0  929E               	bcf	3998,1,c	;volatile
 13208                           
 13209                           ;easat2_func_interrupts.c: 52: } else {
 13210  001BD2  D157               	goto	i2l475
 13211  001BD4                     i2l449:
 13212                           
 13213                           ;easat2_func_interrupts.c: 56: if (PIR1bits.TMR1IF) {
 13214  001BD4  A09E               	btfss	3998,0,c	;volatile
 13215  001BD6  D155               	goto	i2l475
 13216                           
 13217                           ;easat2_func_interrupts.c: 60: TMR1H = 0xEC;
 13218  001BD8  0EEC               	movlw	236
 13219  001BDA  6ECF               	movwf	4047,c	;volatile
 13220                           
 13221                           ;easat2_func_interrupts.c: 61: TMR1L = 0x77 ; 60535;
 13222  001BDC  0E77               	movlw	119
 13223  001BDE  6ECE               	movwf	4046,c	;volatile
 13224                           
 13225                           ;easat2_func_interrupts.c: 65: (PORTDbits.RD5) = !(PORTDbits.RD5);
 13226  001BE0  BA83               	btfsc	3971,5,c	;volatile
 13227  001BE2  D003               	goto	i2u438_40
 13228  001BE4  6A01               	clrf	??_high_priority_int& (0+255),c
 13229  001BE6  2A01               	incf	??_high_priority_int& (0+255),f,c
 13230  001BE8  D001               	goto	i2u439_48
 13231  001BEA                     i2u438_40:
 13232  001BEA  6A01               	clrf	??_high_priority_int& (0+255),c
 13233  001BEC                     i2u439_48:
 13234  001BEC  3A01               	swapf	??_high_priority_int,f,c
 13235  001BEE  4601               	rlncf	??_high_priority_int,f,c
 13236  001BF0  5083               	movf	3971,w,c	;volatile
 13237  001BF2  1801               	xorwf	??_high_priority_int,w,c
 13238  001BF4  0BDF               	andlw	-33
 13239  001BF6  1801               	xorwf	??_high_priority_int,w,c
 13240  001BF8  6E83               	movwf	3971,c	;volatile
 13241                           
 13242                           ;easat2_func_interrupts.c: 69: tmr1_interrupt_number++;
 13243  001BFA  4A3A               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 13244  001BFC  2A3B               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 13245                           
 13246                           ;easat2_func_interrupts.c: 73: if (tmr1_interrupt_number == 50) {
 13247  001BFE  0E32               	movlw	50
 13248  001C00  183A               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 13249  001C02  103B               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 13250  001C04  A4D8               	btfss	status,2,c
 13251  001C06  D011               	goto	i2l4581
 13252                           
 13253                           ;easat2_func_interrupts.c: 76: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13254  001C08  B883               	btfsc	3971,4,c	;volatile
 13255  001C0A  D003               	goto	i2u441_40
 13256  001C0C  6A01               	clrf	??_high_priority_int& (0+255),c
 13257  001C0E  2A01               	incf	??_high_priority_int& (0+255),f,c
 13258  001C10  D001               	goto	i2u442_48
 13259  001C12                     i2u441_40:
 13260  001C12  6A01               	clrf	??_high_priority_int& (0+255),c
 13261  001C14                     i2u442_48:
 13262  001C14  3A01               	swapf	??_high_priority_int,f,c
 13263  001C16  5083               	movf	3971,w,c	;volatile
 13264  001C18  1801               	xorwf	??_high_priority_int,w,c
 13265  001C1A  0BEF               	andlw	-17
 13266  001C1C  1801               	xorwf	??_high_priority_int,w,c
 13267  001C1E  6E83               	movwf	3971,c	;volatile
 13268  001C20  0004               	clrwdt		;# 
 13269                           
 13270                           ;easat2_func_interrupts.c: 85: tmr1_interrupt_number = 0;
 13271  001C22  0E00               	movlw	0
 13272  001C24  6E3B               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 13273  001C26  0E00               	movlw	0
 13274  001C28  6E3A               	movwf	high_priority_int@tmr1_interrupt_number,c
 13275  001C2A                     i2l4581:
 13276                           
 13277                           ;easat2_func_interrupts.c: 87: }
 13278                           ;easat2_func_interrupts.c: 91: if (valid_samples < 128) valid_samples++;
 13279  001C2A  5031               	movf	high_priority_int@valid_samples+1,w,c
 13280  001C2C  E106               	bnz	i2l4585
 13281  001C2E  0E80               	movlw	128
 13282  001C30  5C30               	subwf	high_priority_int@valid_samples,w,c
 13283  001C32  B0D8               	btfsc	status,0,c
 13284  001C34  D002               	goto	i2l4585
 13285  001C36  4A30               	infsnz	high_priority_int@valid_samples,f,c
 13286  001C38  2A31               	incf	high_priority_int@valid_samples+1,f,c
 13287  001C3A                     i2l4585:
 13288                           
 13289                           ;easat2_func_interrupts.c: 104: ADCON0bits.CHS = 4;
 13290  001C3A  94C2               	bcf	4034,2,c	;volatile
 13291  001C3C  96C2               	bcf	4034,3,c	;volatile
 13292  001C3E  88C2               	bsf	4034,4,c	;volatile
 13293  001C40  9AC2               	bcf	4034,5,c	;volatile
 13294  001C42  9CC2               	bcf	4034,6,c	;volatile
 13295                           
 13296                           ;easat2_func_interrupts.c: 105: ADCON0bits.ADON = 1;
 13297  001C44  80C2               	bsf	4034,0,c	;volatile
 13298                           
 13299                           ;easat2_func_interrupts.c: 106: PIR1bits.ADIF = 0;
 13300  001C46  9C9E               	bcf	3998,6,c	;volatile
 13301                           
 13302                           ;easat2_func_interrupts.c: 108: ADCON0bits.GO = 1;
 13303  001C48  82C2               	bsf	4034,1,c	;volatile
 13304  001C4A                     i2l454:
 13305  001C4A  AC9E               	btfss	3998,6,c	;volatile
 13306  001C4C  D7FE               	goto	i2l454
 13307                           
 13308                           ;easat2_func_interrupts.c: 111: sample = ADRES;
 13309  001C4E  CFC3 F016          	movff	4035,high_priority_int@sample	;volatile
 13310  001C52  CFC4 F017          	movff	4036,high_priority_int@sample+1	;volatile
 13311                           
 13312                           ;easat2_func_interrupts.c: 113: PIR1bits.ADIF = 0;
 13313  001C56  9C9E               	bcf	3998,6,c	;volatile
 13314                           
 13315                           ;easat2_func_interrupts.c: 114: ADCON0bits.ADON = 0;
 13316  001C58  90C2               	bcf	4034,0,c	;volatile
 13317                           
 13318                           ;easat2_func_interrupts.c: 116: if (is_transmitter_active) cycles_transmitter_active++;
 13319  001C5A  5040               	movf	high_priority_int@is_transmitter_active,w,c
 13320  001C5C  B4D8               	btfsc	status,2,c
 13321  001C5E  D002               	goto	i2l4597
 13322  001C60  4A34               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13323  001C62  2A35               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13324  001C64                     i2l4597:
 13325                           
 13326                           ;easat2_func_interrupts.c: 121: if (sample > 128 && sample > activation_threshold) {
 13327  001C64  5017               	movf	high_priority_int@sample+1,w,c
 13328  001C66  E104               	bnz	i2u446_40
 13329  001C68  0E81               	movlw	129
 13330  001C6A  5C16               	subwf	high_priority_int@sample,w,c
 13331  001C6C  A0D8               	btfss	status,0,c
 13332  001C6E  D01D               	goto	i2l4611
 13333  001C70                     i2u446_40:
 13334  001C70  5016               	movf	high_priority_int@sample,w,c
 13335  001C72  5C44               	subwf	high_priority_int@activation_threshold,w,c
 13336  001C74  5017               	movf	high_priority_int@sample+1,w,c
 13337  001C76  5845               	subwfb	high_priority_int@activation_threshold+1,w,c
 13338  001C78  B0D8               	btfsc	status,0,c
 13339  001C7A  D017               	goto	i2l4611
 13340                           
 13341                           ;easat2_func_interrupts.c: 124: current_signal_level = 1;
 13342  001C7C  0E00               	movlw	0
 13343  001C7E  6E15               	movwf	high_priority_int@current_signal_level+1,c
 13344  001C80  0E01               	movlw	1
 13345  001C82  6E14               	movwf	high_priority_int@current_signal_level,c
 13346                           
 13347                           ;easat2_func_interrupts.c: 127: times_threshold_exceeded++;
 13348  001C84  4A36               	infsnz	high_priority_int@times_threshold_exceeded,f,c
 13349  001C86  2A37               	incf	high_priority_int@times_threshold_exceeded+1,f,c
 13350                           
 13351                           ;easat2_func_interrupts.c: 129: if (times_threshold_exceeded == 200) {
 13352  001C88  0EC8               	movlw	200
 13353  001C8A  1836               	xorwf	high_priority_int@times_threshold_exceeded,w,c
 13354  001C8C  1037               	iorwf	high_priority_int@times_threshold_exceeded+1,w,c
 13355  001C8E  A4D8               	btfss	status,2,c
 13356  001C90  D085               	goto	i2l4643
 13357                           
 13358                           ;easat2_func_interrupts.c: 132: (PORTBbits.RB1) = 1;
 13359  001C92  8281               	bsf	3969,1,c	;volatile
 13360                           
 13361                           ;easat2_func_interrupts.c: 134: is_transmitter_active = 1;
 13362  001C94  0E01               	movlw	1
 13363  001C96  6E40               	movwf	high_priority_int@is_transmitter_active,c
 13364                           
 13365                           ;easat2_func_interrupts.c: 135: cycles_transmitter_active = 0;
 13366  001C98  0E00               	movlw	0
 13367  001C9A  6E35               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13368  001C9C  0E00               	movlw	0
 13369  001C9E  6E34               	movwf	high_priority_int@cycles_transmitter_active,c
 13370                           
 13371                           ;easat2_func_interrupts.c: 137: times_threshold_exceeded = 0;
 13372  001CA0  0E00               	movlw	0
 13373  001CA2  6E37               	movwf	high_priority_int@times_threshold_exceeded+1,c
 13374  001CA4  0E00               	movlw	0
 13375  001CA6  6E36               	movwf	high_priority_int@times_threshold_exceeded,c
 13376                           
 13377                           ;easat2_func_interrupts.c: 139: }
 13378                           ;easat2_func_interrupts.c: 141: } else {
 13379  001CA8  D079               	goto	i2l4643
 13380  001CAA                     i2l4611:
 13381                           
 13382                           ;easat2_func_interrupts.c: 144: current_signal_level = 0;
 13383  001CAA  0E00               	movlw	0
 13384  001CAC  6E15               	movwf	high_priority_int@current_signal_level+1,c
 13385  001CAE  0E00               	movlw	0
 13386  001CB0  6E14               	movwf	high_priority_int@current_signal_level,c
 13387                           
 13388                           ;easat2_func_interrupts.c: 147: times_threshold_exceeded = 0;
 13389  001CB2  0E00               	movlw	0
 13390  001CB4  6E37               	movwf	high_priority_int@times_threshold_exceeded+1,c
 13391  001CB6  0E00               	movlw	0
 13392  001CB8  6E36               	movwf	high_priority_int@times_threshold_exceeded,c
 13393                           
 13394                           ;easat2_func_interrupts.c: 149: if (cycles_transmitter_active == 12000) {
 13395  001CBA  0EE0               	movlw	224
 13396  001CBC  1834               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13397  001CBE  E107               	bnz	i2l4619
 13398  001CC0  0E2E               	movlw	46
 13399  001CC2  1835               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13400  001CC4  A4D8               	btfss	status,2,c
 13401  001CC6  D003               	goto	i2l4619
 13402                           
 13403                           ;easat2_func_interrupts.c: 151: (PORTBbits.RB1) = 0;
 13404  001CC8  9281               	bcf	3969,1,c	;volatile
 13405                           
 13406                           ;easat2_func_interrupts.c: 152: is_transmitter_active = 0;
 13407  001CCA  0E00               	movlw	0
 13408  001CCC  6E40               	movwf	high_priority_int@is_transmitter_active,c
 13409  001CCE                     i2l4619:
 13410                           
 13411                           ;easat2_func_interrupts.c: 153: }
 13412                           ;easat2_func_interrupts.c: 155: samples[sample_position] = sample;
 13413  001CCE  90D8               	bcf	status,0,c
 13414  001CD0  3438               	rlcf	high_priority_int@sample_position,w,c
 13415  001CD2  6ED9               	movwf	fsr2l,c
 13416  001CD4  3439               	rlcf	high_priority_int@sample_position+1,w,c
 13417  001CD6  6EDA               	movwf	fsr2h,c
 13418  001CD8  0E00               	movlw	low high_priority_int@samples
 13419  001CDA  26D9               	addwf	fsr2l,f,c
 13420  001CDC  0E02               	movlw	high high_priority_int@samples
 13421  001CDE  22DA               	addwfc	fsr2h,f,c
 13422  001CE0  C016  FFDE         	movff	high_priority_int@sample,postinc2
 13423  001CE4  C017  FFDD         	movff	high_priority_int@sample+1,postdec2
 13424                           
 13425                           ;easat2_func_interrupts.c: 158: total_add += sample;
 13426  001CE8  5016               	movf	high_priority_int@sample,w,c
 13427  001CEA  2632               	addwf	high_priority_int@total_add,f,c
 13428  001CEC  5017               	movf	high_priority_int@sample+1,w,c
 13429  001CEE  2233               	addwfc	high_priority_int@total_add+1,f,c
 13430                           
 13431                           ;easat2_func_interrupts.c: 160: if (sample_position > 0)
 13432  001CF0  5038               	movf	high_priority_int@sample_position,w,c
 13433  001CF2  1039               	iorwf	high_priority_int@sample_position+1,w,c
 13434  001CF4  B4D8               	btfsc	status,2,c
 13435  001CF6  D016               	goto	i2l4627
 13436                           
 13437                           ;easat2_func_interrupts.c: 161: total_add -= samples[sample_position-1];
 13438  001CF8  0EFE               	movlw	254
 13439  001CFA  6E01               	movwf	??_high_priority_int& (0+255),c
 13440  001CFC  0EFF               	movlw	255
 13441  001CFE  6E02               	movwf	(??_high_priority_int+1)& (0+255),c
 13442  001D00  C038  F003         	movff	high_priority_int@sample_position,??_high_priority_int+2
 13443  001D04  C039  F004         	movff	high_priority_int@sample_position+1,??_high_priority_int+3
 13444  001D08  90D8               	bcf	status,0,c
 13445  001D0A  3603               	rlcf	??_high_priority_int+2,f,c
 13446  001D0C  3604               	rlcf	??_high_priority_int+3,f,c
 13447  001D0E  5001               	movf	??_high_priority_int,w,c
 13448  001D10  2603               	addwf	??_high_priority_int+2,f,c
 13449  001D12  5002               	movf	??_high_priority_int+1,w,c
 13450  001D14  2204               	addwfc	??_high_priority_int+3,f,c
 13451  001D16  0E00               	movlw	low high_priority_int@samples
 13452  001D18  2403               	addwf	??_high_priority_int+2,w,c
 13453  001D1A  6ED9               	movwf	fsr2l,c
 13454  001D1C  0E02               	movlw	high high_priority_int@samples
 13455  001D1E  2004               	addwfc	??_high_priority_int+3,w,c
 13456  001D20  6EDA               	movwf	fsr2h,c
 13457  001D22  D002               	goto	L7
 13458  001D24                     i2l4627:
 13459                           
 13460                           ;easat2_func_interrupts.c: 162: else
 13461                           ;easat2_func_interrupts.c: 163: total_add -= samples[128-1];
 13462  001D24  EE22  F0FE         	lfsr	2,high_priority_int@samples+254
 13463  001D28                     L7:
 13464  001D28  50DE               	movf	postinc2,w,c
 13465  001D2A  5E32               	subwf	high_priority_int@total_add,f,c
 13466  001D2C  50DD               	movf	postdec2,w,c
 13467  001D2E  5A33               	subwfb	high_priority_int@total_add+1,f,c
 13468                           
 13469                           ;easat2_func_interrupts.c: 166: sample_position++;
 13470  001D30  4A38               	infsnz	high_priority_int@sample_position,f,c
 13471  001D32  2A39               	incf	high_priority_int@sample_position+1,f,c
 13472                           
 13473                           ;easat2_func_interrupts.c: 169: if (sample_position == 128) sample_position = 0;
 13474  001D34  0E80               	movlw	128
 13475  001D36  1838               	xorwf	high_priority_int@sample_position,w,c
 13476  001D38  1039               	iorwf	high_priority_int@sample_position+1,w,c
 13477  001D3A  A4D8               	btfss	status,2,c
 13478  001D3C  D004               	goto	i2l4635
 13479  001D3E  0E00               	movlw	0
 13480  001D40  6E39               	movwf	high_priority_int@sample_position+1,c
 13481  001D42  0E00               	movlw	0
 13482  001D44  6E38               	movwf	high_priority_int@sample_position,c
 13483  001D46                     i2l4635:
 13484                           
 13485                           ;easat2_func_interrupts.c: 172: if (valid_samples == 128) {
 13486  001D46  0E80               	movlw	128
 13487  001D48  1830               	xorwf	high_priority_int@valid_samples,w,c
 13488  001D4A  1031               	iorwf	high_priority_int@valid_samples+1,w,c
 13489  001D4C  A4D8               	btfss	status,2,c
 13490  001D4E  D026               	goto	i2l4643
 13491                           
 13492                           ;easat2_func_interrupts.c: 175: noise_avg_value = total_add;
 13493  001D50  C032  F041         	movff	high_priority_int@total_add,high_priority_int@noise_avg_value
 13494  001D54  C033  F042         	movff	high_priority_int@total_add+1,high_priority_int@noise_avg_value+1
 13495  001D58  6A43               	clrf	high_priority_int@noise_avg_value+2,c
 13496                           
 13497                           ;easat2_func_interrupts.c: 177: noise_avg_value = noise_avg_value >> 7;
 13498  001D5A  0E07               	movlw	7
 13499  001D5C  6E01               	movwf	??_high_priority_int& (0+255),c
 13500  001D5E  C041  F002         	movff	high_priority_int@noise_avg_value,??_high_priority_int+1
 13501  001D62  C042  F003         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+2
 13502  001D66  C043  F004         	movff	high_priority_int@noise_avg_value+2,??_high_priority_int+3
 13503  001D6A  2801               	incf	??_high_priority_int,w,c
 13504  001D6C  6E05               	movwf	(??_high_priority_int+4)& (0+255),c
 13505  001D6E  D004               	goto	i2u453_40
 13506  001D70                     i2u453_45:
 13507  001D70  90D8               	bcf	status,0,c
 13508  001D72  3204               	rrcf	??_high_priority_int+3,f,c
 13509  001D74  3203               	rrcf	??_high_priority_int+2,f,c
 13510  001D76  3202               	rrcf	??_high_priority_int+1,f,c
 13511  001D78                     i2u453_40:
 13512  001D78  2E05               	decfsz	(??_high_priority_int+4)& (0+255),f,c
 13513  001D7A  D7FA               	goto	i2u453_45
 13514  001D7C  C002  F041         	movff	??_high_priority_int+1,high_priority_int@noise_avg_value
 13515  001D80  C003  F042         	movff	??_high_priority_int+2,high_priority_int@noise_avg_value+1
 13516  001D84  C004  F043         	movff	??_high_priority_int+3,high_priority_int@noise_avg_value+2
 13517                           
 13518                           ;easat2_func_interrupts.c: 180: activation_threshold = noise_avg_value < 1;
 13519  001D88  5041               	movf	high_priority_int@noise_avg_value,w,c
 13520  001D8A  1042               	iorwf	high_priority_int@noise_avg_value+1,w,c
 13521  001D8C  1043               	iorwf	high_priority_int@noise_avg_value+2,w,c
 13522  001D8E  A4D8               	btfss	status,2,c
 13523  001D90  D002               	goto	i2u454_40
 13524  001D92  0E01               	movlw	1
 13525  001D94  D001               	goto	i2u455_40
 13526  001D96                     i2u454_40:
 13527  001D96  0E00               	movlw	0
 13528  001D98                     i2u455_40:
 13529  001D98  6E44               	movwf	high_priority_int@activation_threshold,c
 13530  001D9A  6A45               	clrf	high_priority_int@activation_threshold+1,c
 13531  001D9C                     i2l4643:
 13532                           
 13533                           ;easat2_func_interrupts.c: 182: }
 13534                           ;easat2_func_interrupts.c: 184: }
 13535                           ;easat2_func_interrupts.c: 192: if (previous_signal_level == 0 && current_signal_level =
      +                          = 1) {
 13536  001D9C  502E               	movf	high_priority_int@previous_signal_level,w,c
 13537  001D9E  102F               	iorwf	high_priority_int@previous_signal_level+1,w,c
 13538  001DA0  A4D8               	btfss	status,2,c
 13539  001DA2  D009               	goto	i2l4653
 13540  001DA4  0414               	decf	high_priority_int@current_signal_level,w,c
 13541  001DA6  1015               	iorwf	high_priority_int@current_signal_level+1,w,c
 13542  001DA8  A4D8               	btfss	status,2,c
 13543  001DAA  D005               	goto	i2l4653
 13544                           
 13545                           ;easat2_func_interrupts.c: 195: received_bit = 1;
 13546  001DAC  0E00               	movlw	0
 13547  001DAE  6E19               	movwf	high_priority_int@received_bit+1,c
 13548  001DB0  0E01               	movlw	1
 13549  001DB2  6E18               	movwf	high_priority_int@received_bit,c
 13550  001DB4  D00C               	goto	i2l4659
 13551  001DB6                     i2l4653:
 13552                           
 13553                           ;easat2_func_interrupts.c: 202: if (previous_signal_level == 1 && current_signal_level =
      +                          = 0) {
 13554  001DB6  042E               	decf	high_priority_int@previous_signal_level,w,c
 13555  001DB8  102F               	iorwf	high_priority_int@previous_signal_level+1,w,c
 13556  001DBA  A4D8               	btfss	status,2,c
 13557  001DBC  D011               	goto	i2l4663
 13558  001DBE  5014               	movf	high_priority_int@current_signal_level,w,c
 13559  001DC0  1015               	iorwf	high_priority_int@current_signal_level+1,w,c
 13560  001DC2  A4D8               	btfss	status,2,c
 13561  001DC4  D00D               	goto	i2l4663
 13562                           
 13563                           ;easat2_func_interrupts.c: 205: received_bit = 0;
 13564  001DC6  0E00               	movlw	0
 13565  001DC8  6E19               	movwf	high_priority_int@received_bit+1,c
 13566  001DCA  0E00               	movlw	0
 13567  001DCC  D7F2               	goto	L8
 13568  001DCE                     i2l4659:
 13569                           
 13570                           ;easat2_func_interrupts.c: 208: if (num_received_bits < 32) num_received_bits++;
 13571  001DCE  502B               	movf	high_priority_int@num_received_bits+1,w,c
 13572  001DD0  E10F               	bnz	i2l4665
 13573  001DD2  0E20               	movlw	32
 13574  001DD4  5C2A               	subwf	high_priority_int@num_received_bits,w,c
 13575  001DD6  B0D8               	btfsc	status,0,c
 13576  001DD8  D00B               	goto	i2l4665
 13577  001DDA  4A2A               	infsnz	high_priority_int@num_received_bits,f,c
 13578  001DDC  2A2B               	incf	high_priority_int@num_received_bits+1,f,c
 13579                           
 13580                           ;easat2_func_interrupts.c: 210: } else {
 13581  001DDE  D008               	goto	i2l4665
 13582  001DE0                     i2l4663:
 13583                           
 13584                           ;easat2_func_interrupts.c: 213: received_bit = 2;
 13585  001DE0  0E00               	movlw	0
 13586  001DE2  6E19               	movwf	high_priority_int@received_bit+1,c
 13587  001DE4  0E02               	movlw	2
 13588  001DE6  6E18               	movwf	high_priority_int@received_bit,c
 13589                           
 13590                           ;easat2_func_interrupts.c: 216: num_received_bits = 0;
 13591  001DE8  0E00               	movlw	0
 13592  001DEA  6E2B               	movwf	high_priority_int@num_received_bits+1,c
 13593  001DEC  0E00               	movlw	0
 13594  001DEE  6E2A               	movwf	high_priority_int@num_received_bits,c
 13595  001DF0                     i2l4665:
 13596                           
 13597                           ;easat2_func_interrupts.c: 217: }
 13598                           ;easat2_func_interrupts.c: 218: }
 13599                           ;easat2_func_interrupts.c: 224: if (received_bit != 2 && num_received_bits <= 32
 13600                           ;easat2_func_interrupts.c: 225: && !global_command_pending_check) {
 13601  001DF0  0E02               	movlw	2
 13602  001DF2  1818               	xorwf	high_priority_int@received_bit,w,c
 13603  001DF4  1019               	iorwf	high_priority_int@received_bit+1,w,c
 13604  001DF6  B4D8               	btfsc	status,2,c
 13605  001DF8  D016               	goto	i2l472
 13606  001DFA  502B               	movf	high_priority_int@num_received_bits+1,w,c
 13607  001DFC  E114               	bnz	i2l472
 13608  001DFE  0E21               	movlw	33
 13609  001E00  5C2A               	subwf	high_priority_int@num_received_bits,w,c
 13610  001E02  B0D8               	btfsc	status,0,c
 13611  001E04  D010               	goto	i2l472
 13612  001E06  503C               	movf	_global_command_pending_check,w,c
 13613  001E08  103D               	iorwf	_global_command_pending_check+1,w,c
 13614  001E0A  A4D8               	btfss	status,2,c
 13615  001E0C  D00C               	goto	i2l472
 13616                           
 13617                           ;easat2_func_interrupts.c: 228: global_command_buffer = global_command_buffer & 0xfffffe
      +                          ;
 13618  001E0E  0EFE               	movlw	254
 13619  001E10  143E               	andwf	_global_command_buffer,w,c
 13620  001E12  6E3E               	movwf	_global_command_buffer,c
 13621  001E14  0EFF               	movlw	255
 13622  001E16  143F               	andwf	_global_command_buffer+1,w,c
 13623  001E18  6E3F               	movwf	_global_command_buffer+1,c
 13624                           
 13625                           ;easat2_func_interrupts.c: 229: global_command_buffer = global_command_buffer | received
      +                          _bit;
 13626  001E1A  5018               	movf	high_priority_int@received_bit,w,c
 13627  001E1C  103E               	iorwf	_global_command_buffer,w,c
 13628  001E1E  6E3E               	movwf	_global_command_buffer,c
 13629  001E20  5019               	movf	high_priority_int@received_bit+1,w,c
 13630  001E22  103F               	iorwf	_global_command_buffer+1,w,c
 13631  001E24  6E3F               	movwf	_global_command_buffer+1,c
 13632  001E26                     i2l472:
 13633                           
 13634                           ;easat2_func_interrupts.c: 231: }
 13635                           ;easat2_func_interrupts.c: 234: if (received_bit == 2 && previous_received_bit != 2 && !
      +                          global_command_pending_check
 13636                           ;easat2_func_interrupts.c: 235: && num_received_bits == 32) {
 13637  001E26  0E02               	movlw	2
 13638  001E28  1818               	xorwf	high_priority_int@received_bit,w,c
 13639  001E2A  1019               	iorwf	high_priority_int@received_bit+1,w,c
 13640  001E2C  A4D8               	btfss	status,2,c
 13641  001E2E  D012               	goto	i2l4681
 13642  001E30  0E02               	movlw	2
 13643  001E32  182C               	xorwf	high_priority_int@previous_received_bit,w,c
 13644  001E34  102D               	iorwf	high_priority_int@previous_received_bit+1,w,c
 13645  001E36  B4D8               	btfsc	status,2,c
 13646  001E38  D00D               	goto	i2l4681
 13647  001E3A  503C               	movf	_global_command_pending_check,w,c
 13648  001E3C  103D               	iorwf	_global_command_pending_check+1,w,c
 13649  001E3E  A4D8               	btfss	status,2,c
 13650  001E40  D009               	goto	i2l4681
 13651  001E42  0E20               	movlw	32
 13652  001E44  182A               	xorwf	high_priority_int@num_received_bits,w,c
 13653  001E46  102B               	iorwf	high_priority_int@num_received_bits+1,w,c
 13654  001E48  A4D8               	btfss	status,2,c
 13655  001E4A  D004               	goto	i2l4681
 13656                           
 13657                           ;easat2_func_interrupts.c: 240: global_command_pending_check = 1;
 13658  001E4C  0E00               	movlw	0
 13659  001E4E  6E3D               	movwf	_global_command_pending_check+1,c
 13660  001E50  0E01               	movlw	1
 13661  001E52  6E3C               	movwf	_global_command_pending_check,c
 13662  001E54                     i2l4681:
 13663                           
 13664                           ;easat2_func_interrupts.c: 242: }
 13665                           ;easat2_func_interrupts.c: 244: if (received_bit == 2 && previous_received_bit == 2 && !
      +                          global_command_pending_check) {
 13666  001E54  0E02               	movlw	2
 13667  001E56  1818               	xorwf	high_priority_int@received_bit,w,c
 13668  001E58  1019               	iorwf	high_priority_int@received_bit+1,w,c
 13669  001E5A  A4D8               	btfss	status,2,c
 13670  001E5C  D011               	goto	i2l4689
 13671  001E5E  0E02               	movlw	2
 13672  001E60  182C               	xorwf	high_priority_int@previous_received_bit,w,c
 13673  001E62  102D               	iorwf	high_priority_int@previous_received_bit+1,w,c
 13674  001E64  A4D8               	btfss	status,2,c
 13675  001E66  D00C               	goto	i2l4689
 13676  001E68  503C               	movf	_global_command_pending_check,w,c
 13677  001E6A  103D               	iorwf	_global_command_pending_check+1,w,c
 13678  001E6C  A4D8               	btfss	status,2,c
 13679  001E6E  D008               	goto	i2l4689
 13680                           
 13681                           ;easat2_func_interrupts.c: 248: global_command_buffer = 0;
 13682  001E70  0E00               	movlw	0
 13683  001E72  6E3F               	movwf	_global_command_buffer+1,c
 13684  001E74  0E00               	movlw	0
 13685  001E76  6E3E               	movwf	_global_command_buffer,c
 13686                           
 13687                           ;easat2_func_interrupts.c: 249: num_received_bits = 0;
 13688  001E78  0E00               	movlw	0
 13689  001E7A  6E2B               	movwf	high_priority_int@num_received_bits+1,c
 13690  001E7C  0E00               	movlw	0
 13691  001E7E  6E2A               	movwf	high_priority_int@num_received_bits,c
 13692  001E80                     i2l4689:
 13693                           
 13694                           ;easat2_func_interrupts.c: 251: }
 13695                           ;easat2_func_interrupts.c: 259: PIR1bits.TMR1IF = 0;
 13696  001E80  909E               	bcf	3998,0,c	;volatile
 13697  001E82                     i2l475:
 13698  001E82  C013  FFF5         	movff	??_high_priority_int+18,tablat
 13699  001E86  C012  FFF8         	movff	??_high_priority_int+17,tblptru
 13700  001E8A  C011  FFF7         	movff	??_high_priority_int+16,tblptrh
 13701  001E8E  C010  FFF6         	movff	??_high_priority_int+15,tblptrl
 13702  001E92  C00F  FFF4         	movff	??_high_priority_int+14,prodh
 13703  001E96  C00E  FFF3         	movff	??_high_priority_int+13,prodl
 13704  001E9A  C00D  FFDA         	movff	??_high_priority_int+12,fsr2h
 13705  001E9E  C00C  FFD9         	movff	??_high_priority_int+11,fsr2l
 13706  001EA2  C00B  FFE2         	movff	??_high_priority_int+10,fsr1h
 13707  001EA6  C00A  FFE1         	movff	??_high_priority_int+9,fsr1l
 13708  001EAA  C009  FFEA         	movff	??_high_priority_int+8,fsr0h
 13709  001EAE  C008  FFE9         	movff	??_high_priority_int+7,fsr0l
 13710  001EB2  C007  FFFB         	movff	??_high_priority_int+6,pclatu
 13711  001EB6  C006  FFFA         	movff	??_high_priority_int+5,pclath
 13712  001EBA  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13713  001EBC  0011               	retfie		f
 13714  001EBE                     __end_of_high_priority_int:
 13715                           	opt stack 0
 13716                           pclatu	equ	0xFFB
 13717                           pclath	equ	0xFFA
 13718                           tblptru	equ	0xFF8
 13719                           tblptrh	equ	0xFF7
 13720                           tblptrl	equ	0xFF6
 13721                           tablat	equ	0xFF5
 13722                           prodh	equ	0xFF4
 13723                           prodl	equ	0xFF3
 13724                           intcon	equ	0xFF2
 13725                           intcon2	equ	0xFF1
 13726                           indf0	equ	0xFEF
 13727                           postinc0	equ	0xFEE
 13728                           fsr0h	equ	0xFEA
 13729                           fsr0l	equ	0xFE9
 13730                           wreg	equ	0xFE8
 13731                           indf1	equ	0xFE7
 13732                           postdec1	equ	0xFE5
 13733                           fsr1h	equ	0xFE2
 13734                           fsr1l	equ	0xFE1
 13735                           bsr	equ	0xFE0
 13736                           indf2	equ	0xFDF
 13737                           postinc2	equ	0xFDE
 13738                           postdec2	equ	0xFDD
 13739                           fsr2h	equ	0xFDA
 13740                           fsr2l	equ	0xFD9
 13741                           status	equ	0xFD8
 13742                           pclatu	equ	0xFFB
 13743                           pclath	equ	0xFFA
 13744                           tblptru	equ	0xFF8
 13745                           tblptrh	equ	0xFF7
 13746                           tblptrl	equ	0xFF6
 13747                           tablat	equ	0xFF5
 13748                           prodh	equ	0xFF4
 13749                           prodl	equ	0xFF3
 13750                           intcon	equ	0xFF2
 13751                           intcon2	equ	0xFF1
 13752                           indf0	equ	0xFEF
 13753                           postinc0	equ	0xFEE
 13754                           fsr0h	equ	0xFEA
 13755                           fsr0l	equ	0xFE9
 13756                           wreg	equ	0xFE8
 13757                           indf1	equ	0xFE7
 13758                           postdec1	equ	0xFE5
 13759                           fsr1h	equ	0xFE2
 13760                           fsr1l	equ	0xFE1
 13761                           bsr	equ	0xFE0
 13762                           indf2	equ	0xFDF
 13763                           postinc2	equ	0xFDE
 13764                           postdec2	equ	0xFDD
 13765                           fsr2h	equ	0xFDA
 13766                           fsr2l	equ	0xFD9
 13767                           status	equ	0xFD8
 13768                           
 13769                           	psect	rparam
 13770  0000                     pclatu	equ	0xFFB
 13771                           pclath	equ	0xFFA
 13772                           tblptru	equ	0xFF8
 13773                           tblptrh	equ	0xFF7
 13774                           tblptrl	equ	0xFF6
 13775                           tablat	equ	0xFF5
 13776                           prodh	equ	0xFF4
 13777                           prodl	equ	0xFF3
 13778                           intcon	equ	0xFF2
 13779                           intcon2	equ	0xFF1
 13780                           indf0	equ	0xFEF
 13781                           postinc0	equ	0xFEE
 13782                           fsr0h	equ	0xFEA
 13783                           fsr0l	equ	0xFE9
 13784                           wreg	equ	0xFE8
 13785                           indf1	equ	0xFE7
 13786                           postdec1	equ	0xFE5
 13787                           fsr1h	equ	0xFE2
 13788                           fsr1l	equ	0xFE1
 13789                           bsr	equ	0xFE0
 13790                           indf2	equ	0xFDF
 13791                           postinc2	equ	0xFDE
 13792                           postdec2	equ	0xFDD
 13793                           fsr2h	equ	0xFDA
 13794                           fsr2l	equ	0xFD9
 13795                           status	equ	0xFD8
 13796                           
 13797                           	psect	temp
 13798  000046                     btemp:
 13799                           	opt stack 0
 13800  000046                     	ds	1
 13801  0000                     int$flags	set	btemp
 13802                           pclatu	equ	0xFFB
 13803                           pclath	equ	0xFFA
 13804                           tblptru	equ	0xFF8
 13805                           tblptrh	equ	0xFF7
 13806                           tblptrl	equ	0xFF6
 13807                           tablat	equ	0xFF5
 13808                           prodh	equ	0xFF4
 13809                           prodl	equ	0xFF3
 13810                           intcon	equ	0xFF2
 13811                           intcon2	equ	0xFF1
 13812                           indf0	equ	0xFEF
 13813                           postinc0	equ	0xFEE
 13814                           fsr0h	equ	0xFEA
 13815                           fsr0l	equ	0xFE9
 13816                           wreg	equ	0xFE8
 13817                           indf1	equ	0xFE7
 13818                           postdec1	equ	0xFE5
 13819                           fsr1h	equ	0xFE2
 13820                           fsr1l	equ	0xFE1
 13821                           bsr	equ	0xFE0
 13822                           indf2	equ	0xFDF
 13823                           postinc2	equ	0xFDE
 13824                           postdec2	equ	0xFDD
 13825                           fsr2h	equ	0xFDA
 13826                           fsr2l	equ	0xFD9
 13827                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         279
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      69
    BANK0           160    129     129
    BANK1           256    206     206
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_hours
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _sprintf->___wmul
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    _init_initialize->_init_watchdogs_initialize

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_getTemperature->___ftadd
    ___ftdiv->___awtoft
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    _util_beacon_transmission->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  116014
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  116014
                                            119 BANK0     10    10      0
          _init_watchdogs_initialize
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             40 COMRAM     1     1      0
                                             19 BANK0      4     2      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             37 COMRAM     3     1      2
                                             17 BANK0      2     2      0
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   21677
                                             58 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             30 COMRAM     7     5      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1150
                                             27 COMRAM     5     3      2
                                             17 BANK0     16    16      0
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     534
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      24
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     232
                                             30 COMRAM     2     0      2
                                             17 BANK0     32    32      0
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      24
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3298
                                             34 COMRAM     3     3      0
                                             20 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2943
                                             33 COMRAM     1     1      0
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2    9037
                                             58 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3    8465
                                             36 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2    9037
                                             58 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2362
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   65402
                                            109 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6252
                                             37 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5161
                                             31 COMRAM     6     4      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   57101
                                             64 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   13166
                                             36 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   12887
                                             36 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             17 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6032
                                             21 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1448
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             31 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             25 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             25 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2327
                                             33 COMRAM     5     5      0
                                             17 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     671
                                             38 COMRAM     1     1      0
                                             17 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             43 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4923
                                             58 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4626
                                             46 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     109
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     520
                                             25 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     480
                                             25 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
          _init_watchdogs_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_watchdogs_initialize                            1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_priority_int                                   25    25      0     229
                                              0 COMRAM    25    25      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _init_watchdogs_initialize
     _util_pwm_initialize
   _main_loop
     _init_watchdogs_initialize
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     81      81       4       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      45       1       73.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     294       9        0.0%
DATA                 0      0     294      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 01 21:04:45 2017

                               ??_init_initialize 001B                       util_onewire_read_byte@value 008F  
                            util_getTemperature@i 01CC                                                l77 334A  
                                    ___awdiv@sign 0025                                                bsr 000FE0  
                             ___wmul@multiplicand 0073                  __end_of_util_beacon_transmission 2DEC  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 0099                                      ___ftadd@exp2 0098  
                                    ___ftadd@sign 0097                                               l123 2FB4  
                                             l135 2EEA                                               l129 2E20  
                                             l148 0D6C                                               l186 38B2  
                                             l367 390C                                               l566 078E  
                                             l807 2CF0                                               l911 2BC8  
                                             l904 2B3A                                               l905 2B62  
                                             l862 21B0                                               l839 3188  
                                             l936 39AE                                               l866 21EA  
                                             l868 2212                                               l877 22E8  
                                             l886 2312                           ??_util_onewire_read_bit 001C  
                                             l897 2A72                                               l986 344C  
                                             l996 322A                                      __CFG_CPB$OFF 000000  
                                             _PR2 000FBB                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13C6                                      ___awmod@sign 001F  
                  ??_util_transmit_morse_sequence 0022                               _util_pwm_initialize 37FE  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                         ?_init_timer1_initialize 0001                                      __CFG_LVP$OFF 000000  
      util_transmit_morse_sequence@morse_sequence 0020                                      ___ftdiv@cntr 007A  
                                    ___ftdiv@sign 007F                                              l3111 3156  
                                            l3103 3118                                              l3113 3174  
                                            l3105 3122                                              l3115 317E  
                                            l3107 3140                                              l3211 22A0  
                                            l3205 2278                                              l3207 2286  
                                            l3225 233C                                              l3217 22CE  
                                            l3209 2294                                              l3235 238A  
                                            l3219 22DC                                              l5003 33FE  
                                            l3251 273A                                              l5005 340A  
                                            l5021 34D4                                              l3245 2700  
                                            l4301 37A2                                              l3183 21F8  
                                            l5015 343E                                              l5007 340E  
                                            l5023 34E2                                              l3351 3498  
                                            l3343 347E                                              l4151 372A  
                                            l5031 37D2                                              l3177 21BE  
                                            l3265 2788                                              l3505 39D2  
                                            l5201 0742                                              l5121 03C8  
                                            l5113 0360                                              l4153 3732  
                                            l3099 310A                                              l3363 34C4  
                                            l3355 34AC                                              l3347 348C  
                                            l3339 3472                                              l3275 27C6  
                                            l5131 044A                                              l5051 010C  
                                            l4147 3716                                              l5035 37E4  
                                            l3189 2208                                              l3349 3494  
                                            l3269 27A6                                              l5301 0AEE  
                                            l5221 07C2                                              l5213 0792  
                                            l5141 04BA                                              l5125 03EE  
                                            l5045 00DA                                              l4149 371A  
                                            l3199 224A                                              l3359 34B6  
                                            l3279 27E4                                              l5311 0B2A  
                                            l5303 0AF8                                              l5207 075C  
                                            l5151 0518                                              l5127 0404  
                                            l5071 0206                                              l5039 00BA  
                                            l3641 329C                                              l5321 0BE6  
                                            l5305 0B04                                              l5225 0814  
                                            l5209 0770                                              l5137 0494  
                                            l5129 0434                                              l5081 0250  
                                            l5065 01AA                                              l5401 1A10  
                                            l3731 31D6                                              l5323 0BEC  
                                            l5243 0924                                              l5235 08FC  
                                            l5155 057E                                              l5075 0216  
                                            l5059 0182                                              l5411 1A56  
                                            l5403 1A1E                                              l3637 326C  
                                            l3629 36A0                                              l3661 285E  
                                            l5317 0B58                                              l5261 099C  
                                            l5237 090A                                              l5181 064E  
                                            l5173 061A                                              l5157 0584  
                                            l5245 0932                                              l5069 01F0  
                                            l5325 0C02                                              l5413 1A64  
                                            l5405 1A2C                                              l5341 186C  
                                            l5421 1B76                                              l5333 1834  
                                            l3647 32C8                                              l3735 321A  
                                            l3727 31C2                                              l5263 09A2  
                                            l5255 0976                                              l5191 069E  
                                            l5183 0656                                              l5087 026A  
                                            l5327 0C20                                              l5079 021C  
                                            l4703 359A                                              l5415 1A72  
                                            l5407 1A3A                                              l5351 18B2  
                                            l5343 187A                                              l5335 1842  
                                            l3729 31D0                                              l5185 066A  
                                            l5177 063C                                              l5169 05CA  
                                            l5097 02B0                                              l4705 359E  
                                            l5409 1A48                                              l5361 18F8  
                                            l5353 18C0                                              l5345 1888  
                                            l5337 1850                                              l5513 0E1E  
                                            l3843 393C                                              l3691 2930  
                                            l3683 2904                                              l5283 0A40  
                                            l5275 09E8                                              l4811 356E  
                                            l4803 353E                                              l5371 193E  
                                            l5363 1906                                              l5355 18CE  
                                            l5347 1896                                              l5339 185E  
                                            l5419 1A78                                              l5435 29D0  
                                            l5531 0EC0                                              l5523 0E54  
                                            l5507 0D8E                                              l3693 293A  
                                            l5189 0696                                              l4805 3544  
                                            l5381 1984                                              l5373 194C  
                                            l5365 1914                                              l5357 18DC  
                                            l5349 18A4                                              l5429 299C  
                                            l5541 0EE8                                              l5517 0E34  
                                            l3839 392C                                              l3679 28F0  
                                            l4831 2028                                              l5295 0AAC  
                                            l5279 0A10                                              l5199 0734  
                                            l3847 38D0                                              l4815 3576  
                                            l5391 19CA                                              l5383 1992  
                                            l5375 195A                                              l5367 1922  
                                            l5359 18EA                                              l5631 2DCE  
                                            l5455 2A30                                              l5519 0E3E  
                                            l5535 0EC8                                              l3697 2956  
                                            l3689 2920                                              l4761 339A  
                                            l4753 337C                                              l5297 0AB6  
                                            l5289 0A74                                              l3849 38D8  
                                            l4809 354A                                              l5393 19D8  
                                            l5385 19A0                                              l5377 1968  
                                            l5369 1930                                              l5537 0ED2  
                                            l5641 32CC                                              l4923 2B8E  
                                            l4771 33BA                                              l4763 339E  
                                            l4747 336C                                              l5395 19E6  
                                            l5387 19AE                                              l5379 1976  
                                            l5627 2DB2                                              l5571 0FB6  
                                            l5563 0F86                                              l5491 0D30  
                                            l5635 375A                                              l4933 2BB6  
                                            l4853 1522                                              l5397 19F4  
                                            l5389 19BC                                              l5493 0D46  
                                            l4943 2BF8                                              l4935 2BC2  
                                            l4927 2B9E                                              l4759 3392  
                                            l4775 33C4                                              l4839 2100  
                                            l4871 1750                                              l4863 1602  
                                            l5399 1A02                                              l4791 3652  
                                            l5583 0FFA                                              l5495 0D4A  
                                            l5487 0D1E                                              l5479 0CF6  
                                            l5639 376C                                              l4697 3900  
                                            l4785 363A                                              l5577 0FDA  
                                            l5649 333C                                              l4971 2C88  
                                            l4963 2C58                                              l4779 33D2  
                                            l4859 15DC                                              l4787 3642  
                                            l5587 1016                                              l5579 0FE6  
                                            l4949 2C16                                              l4893 2B00  
                                            l4877 180A                                              l4797 3664  
                                            l4983 2CB6                                              l4887 2AD4  
                                            l4799 3668                                              l4993 2CDE  
                                            l4995 2CEA                                              l4987 2CC6  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3231 283A  
                                            u3250 2884                                              u3405 25B8  
                                            u4070 39E4                                              u3255 287A  
                                            u2711 2716                                              u3415 25DA  
                                            u2481 215E                                              u3425 25FC  
                                            u2491 217C                                              u3435 261E  
                                            u5220 02F6                                              u3445 2426  
                                            u2910 384C                                              u3390 36F4  
                                            u3455 243C                                              u4088 39E6  
                                            u5225 02EA                                              u3465 2452  
                                            u5410 0786                                              u2691 26DC  
                                            u2918 384E                                              u3398 36F6  
                                            u4730 35BE                                              u5631 297A  
                                            u4921 2AB8                                              u4737 35B4  
                                            u5651 29AE                                              u4941 2AE4  
                                            u5754 0E84                                              u5755 0E7C  
                        ??_util_onewire_read_byte 0071                                              u5927 38AC  
                                            u5937 38B6                                              u5947 36D8  
                                            u5957 36E2                                              _RBPU 007F8F  
                                            u5967 36FE                                              u5977 3856  
                                            u5987 3902                                              _TMR2 000FBC  
                                            _WPUB 000F61                                      __CFG_WRTC$ON 000000  
                                    __CFG_WRTD$ON 000000                                              _main 3A86  
                                    ___ftpack@arg 001A                                      ___ftpack@exp 001D  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 0046  
                                   __CFG_BORV$190 000000             high_priority_int@current_signal_level 0014  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
                            ?_util_pwm_initialize 0001   __end_of_util_transmit_space_between_dots_dashes 3A86  
__size_of_util_transmit_space_between_dots_dashes 000E         ??_util_transmit_space_between_dots_dashes 001F  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3A78  
                                    _sprintf$2791 00B4                           ?_init_timer2_initialize 0001  
                                    ___ftmul@cntr 0082                                      ___param_bank 000000  
                                    ___ftmul@sign 0083                                      ___fttol@exp1 0099  
                                    ___fttol@lval 0095                                _util_transmit_dash 3A12  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
                                 __end_of___awdiv 33DC                                             _ADRES 000FC3  
                                 __end_of___ftadd 23B0                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 34CE  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 2AA8                                   __end_of___ftneg 39BC  
                                 __end_of___lldiv 345E                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2824                                   ___awdiv@divisor 0022  
                                 __end_of___llmod 323C                                   __end_of___ftsub 36CA  
                                 __end_of___fttol 2968                       __size_of_util_onewire_reset 0042  
                                   __CFG_WDTEN$ON 000000                                             i2l454 1C4A  
                                           i2l472 1E26                                             i2l449 1BD4  
                                           i2l475 1E82                                   ___awdiv@counter 0024  
                  __end_of_init_timer1_initialize 3974                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                               ?_util_transmit_dash 0001  
                              ??_low_priority_int 0060                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0026  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                      __end_of_util_getSolarCurrent 2EB6  
                                   __CFG_WRTB$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                                   ___awtoft@sign 0022                                   __end_of_dpowers 7F1D  
                                           _scale 13C6                                   __end_of_isdigit 39DA  
                              __CFG_MCLRE$EXTMCLR 000000                                     ___ftpack@sign 001E  
                        ??_util_onewire_write_bit 001C                         util_waits_delay_secs@secs 001F  
                                  __CFG_BOREN$OFF 000000                                             pclath 000FFA  
                                           tablat 000FF5                                             status 000FD8  
                     __end_of_util_waits_delay_ms 3922                                   __end_of_sprintf 0C2E  
                            ??_util_transmit_dash 001F                             ??_util_pwm_initialize 001A  
                  __end_of_init_timer2_initialize 3A46                           util_waits_delay_hours@i 0075  
                  util_getTemperature@bit_in_byte 01C7                                   __initialization 35E2  
                       util_beacon_transmission@i 01C0                                      __end_of_main 3A92  
                    __end_of_util_transmit_letter 1B7C                        ?_init_watchdogs_initialize 0001  
                                          ??_main 002A                                     ___fttol@sign1 0094  
                                   __activetblptr 000002                              __size_of__tdiv_to_l_ 0132  
                      util_onewire_read_bit@value 001D                         util_getSolarCurrent@value 009C  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                ___llmod@dividend 0071                                            ?_scale 0084  
                                          _CCPR2L 000F67                                  ___awdiv@dividend 0020  
                                __end_of___awtoft 37C6                                  __end_of___ftpack 31A8  
                  high_priority_int@valid_samples 0030                                  __end_of___lltoft 3534  
                                          i2l4611 1CAA                                            i2l4635 1D46  
                                          i2l4627 1D24                                            i2l4619 1CCE  
                                          i2l4643 1D9C                                            i2l4653 1DB6  
                                          i2l4581 1C2A                                            i2l4663 1DE0  
                                          i2l4681 1E54                                            i2l4665 1DF0  
                                          i2l4585 1C3A                                            i2l4659 1DCE  
                                          i2l4597 1C64                                            i2l4689 1E80  
                                __end_of___lwtoft 3998                   __size_of_util_onewire_read_byte 0194  
                     __size_of_init_io_initialize 00BC                 __size_of_util_beacon_transmission 00EA  
                          __size_of_util_pwm_stop 0008                         ?_util_beacon_transmission 00CD  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F44  
                                    _CCPTMRS0bits 000F49                          ?_util_onewire_write_byte 001C  
                                          ___ftge 323C                        util_onewire_read_byte@bit0 007F  
                      util_onewire_read_byte@bit1 0081                        util_onewire_read_byte@bit2 0083  
                      util_onewire_read_byte@bit3 0085                        util_onewire_read_byte@bit4 0087  
                      util_onewire_read_byte@bit5 0089                        util_onewire_read_byte@bit6 008B  
                      util_onewire_read_byte@bit7 008D                           ??_util_waits_delay_mins 0028  
                         ??_util_waits_delay_secs 0021                                            ___wmul 3864  
                                       ??___awdiv 0024                                         ??___ftadd 0094  
                                  __CFG_STVREN$ON 000000                                         ??___awmod 001E  
                                       ??___ftdiv 0023                                         ??___ftneg 001D  
                                       ??___lldiv 0022                                         ??___ftmul 007B  
                                       ??___llmod 0027                                         ??___ftsub 002A  
                                       ??___fttol 008F                       util_onewire_write_byte@bit0 0071  
                     util_onewire_write_byte@bit1 0073                       util_onewire_write_byte@bit2 0075  
                     util_onewire_write_byte@bit3 0077                       util_onewire_write_byte@bit4 0079  
                     util_onewire_write_byte@bit5 007B                       util_onewire_write_byte@bit6 007D  
                     util_onewire_write_byte@bit7 007F                                            _memset 3922  
                                          _fround 1EBE                                            clear_0 360A  
                                          clear_1 361C                                  ___awdiv@quotient 0026  
                                 ___awmod@divisor 001C                                   ___awmod@counter 001E  
                     util_waits_delay_hours@hours 0073                                            _strcat 370C  
                                          _strcpy 38C6                                            _strlen 3590  
                           ___ftmul@f3_as_product 007F                                      __pdataCOMRAM 0041  
                                       ??_isdigit 001A                                      __mediumconst 7EF4  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                                         ??_sprintf 00AE  
                                 __CFG_HFOFST$OFF 000000                          ??_util_getBatteryCurrent 002A  
                 __size_of_util_onewire_write_bit 0030                                   _init_initialize 3A46  
                                      __accesstop 0060                           __end_of__initialization 3622  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 008E  
                                      ___ftadd@f2 0091                                        ___ftge@ff1 001A  
                                      ___ftge@ff2 001D                                     ___rparam_used 000001  
                                      ___ftdiv@f1 0074                                        ___ftdiv@f2 0077  
                                      ___ftdiv@f3 007B                          ??_util_getBatteryVoltage 002A  
                                      ___ftneg@f1 001A                                        ___awtoft@c 0071  
                                      ___ftmul@f1 0075                                        ___ftmul@f2 0078  
                                      ___ftsub@f1 009A                                        ___ftsub@f2 009D  
                                      ___fttol@f1 008B                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 2DEC                                        ___lltoft@c 0071  
                        main_loop@battery_current 00DC                                     __end_of_scale 1830  
                          _util_onewire_read_byte 23B0                                     _util_pwm_stop 3A92  
                                      ___lwtoft@c 0071                                        __div_to_l_ 2BDA  
                        main_loop@battery_voltage 00DE                    __size_of_util_onewire_read_bit 0032  
                   __end_of_util_onewire_read_bit 3864                                   __div_to_l_@exp1 0025  
                                 __div_to_l_@cntr 0024                                           ??_scale 002A  
                                 __div_to_l_@quot 0020                                      sprintf@width 00BB  
       __end_of_util_transmit_space_between_words 3A6A        __size_of_util_transmit_space_between_words 000E  
             ??_util_transmit_space_between_words 001F                ?_util_transmit_space_between_words 0001  
               _util_transmit_space_between_words 3A5C            high_priority_int@tmr1_interrupt_number 003A  
                                      __pbssBANK2 0200                                __size_of_main_loop 008C  
       high_priority_int@times_threshold_exceeded 0036                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1830                                     __div_to_l_@f1 001A  
                                   __div_to_l_@f2 001D                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 009A                                           ?___ftge 001A  
                    util_onewire_write_bit@bit_in 001A                                           ?___wmul 0071  
                high_priority_int@sample_position 0038                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 3896                                    ?_util_pwm_stop 0001  
                                         ?_memset 001A                                           ?_fround 0084  
                                       ?___awtoft 0071                                         ?___ftpack 001A  
                               _high_priority_int 0008                                         ?___lltoft 0071  
                                         ?_strcat 001A                                           ?_strcpy 001A  
                                         ?_strlen 001A                                         ?___lwtoft 0071  
                              ?_high_priority_int 0001                           __end_of_init_initialize 3A5C  
                         __size_of_util_pwm_start 0008                               ??_high_priority_int 0001  
                    __size_of_util_getTemperature 0798                             ?_util_transmit_letter 0001  
                 __size_of_util_getBatteryCurrent 00CA                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 001D                      util_waits_delay_mins@minutes 0026  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F6B  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00BE  
                                      _scale$2790 0087              __end_of_util_transmit_morse_sequence 3590  
           __size_of_util_transmit_morse_sequence 005C                      _util_transmit_morse_sequence 3534  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 3A78      __size_of_util_transmit_space_between_letters 000E  
           ??_util_transmit_space_between_letters 001F              ?_util_transmit_space_between_letters 0001  
             _util_transmit_space_between_letters 3A6A                                   __size_of___ftge 0090  
                                         ___awdiv 3358                                           ___ftadd 2148  
                                         ___awmod 345E                                           ___ftdiv 2968  
                                         ___ftneg 3998                                           ___lldiv 33DC  
                                 __size_of___wmul 0032                                           ___ftmul 26C6  
                        ??_util_waits_delay_hours 0029                                           ___llmod 31A8  
                                         ___ftsub 367E                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2824                         __end_of_high_priority_int 1EBE  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 370C  
                               __end_of_main_loop 3358                                           __pcinit 35E2  
                     ??_init_watchdogs_initialize 001A                                        ??___awtoft 0022  
                                      ??___ftpack 001F                                   __size_of_memset 002C  
                                 __size_of_fround 028A                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0022  
                                         __ptext0 3A86                                           __ptext1 32CC  
                                         __ptext2 374E                                           __ptext3 37C6  
                                         __ptext4 0C2E                                           __ptext5 3630  
                                         __ptext6 2544                                           __ptext7 3896  
                                         __ptext8 36CA                                           __ptext9 23B0  
                                      ??___lwtoft 0022                                   __size_of_strcat 0042  
                                 __size_of_strcpy 0030                                   __size_of_strlen 0052  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 001A  
                                         _dpowers 7EF5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 39BC  
                                ___awmod@dividend 001A                      util_onewire_write_byte@value 001C  
                            main_loop@temperature 00D7                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0024                                    __pintcode_body 1B7C  
                            end_of_initialization 3622                       __end_of_util_pwm_initialize 3832  
                                         memset@c 001C                                           memset@n 001E  
                                         memset@p 0020                                     __Lmediumconst 7EF4  
                                         int_func 1B7C                     high_priority_int@received_bit 0018  
                     __size_of_util_transmit_dash 001A                                   ___lldiv@divisor 001E  
                          ??_util_getSolarCurrent 002A                                   ___lldiv@counter 0026  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 002C                                   ??_util_pwm_stop 001A  
                                         postinc0 000FEE                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00D0                    __size_of_util_waits_delay_mins 0038  
                                  __tdiv_to_l_@f1 001A                                    __tdiv_to_l_@f2 001D  
                  __size_of_util_waits_delay_secs 004E                     __end_of_util_waits_delay_mins 37FE  
                          _util_getBatteryCurrent 2EB6                     __end_of_util_waits_delay_secs 367E  
                                         strlen@s 001A                                     ??__tdiv_to_l_ 0020  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _PORTDbits 000F83                           high_priority_int@sample 0016  
          high_priority_int@previous_received_bit 002C                            _util_getBatteryVoltage 2F80  
                __size_of_util_onewire_write_byte 0182                          _util_getTemperature$2784 01A7  
                        _util_getTemperature$2785 01AA                          _util_getTemperature$2786 01AD  
                        _util_getTemperature$2787 01B0                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ?_init_initialize 0001                        __end_of_init_io_initialize 30FA  
                          ??_util_transmit_letter 0026                         _init_watchdogs_initialize 39DA  
                                     ___ftdiv@exp 007E                                       _CCP2CONbits 000F66  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 0128  
                                     ___ftmul@exp 007E                           ?_util_onewire_read_byte 001F  
                               _util_transmit_dot 39F8                        __size_of_high_priority_int 1EB6  
                        ??_init_timer1_initialize 001A                                    __end_of___ftge 32CC  
                 __size_of_util_waits_delay_hours 003C                  high_priority_int@noise_avg_value 0041  
                                  __end_of___wmul 3896                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 3AA2                                    __end_of_memset 394E  
                                  __end_of_fround 2148                                    __end_of_strcat 374E  
                                  __end_of_strcpy 38F6                                    __end_of_strlen 35E2  
                             start_initialization 35E2                               ??_util_transmit_dot 001F  
                          util_waits_delay_mins@i 0071                            util_waits_delay_secs@i 0022  
                          util_waits_delay_secs@j 0024                                    _util_pwm_start 3A9A  
                             __end_of__tdiv_to_l_ 2BDA                          _util_beacon_transmission 2D02  
                        ??_init_timer2_initialize 001A               util_beacon_transmission@temperature 00D4  
                                _low_priority_int 0018                                   ___llmod@divisor 0075  
                                 ___llmod@counter 0027                    __end_of_util_onewire_read_byte 2544  
                       __end_of_util_transmit_dot 3A12                           ?_util_onewire_write_bit 001A  
           high_priority_int@activation_threshold 0044                                          ??___ftge 0020  
                                        ??___wmul 0028                               _util_getTemperature 0C2E  
                                        ??_memset 0020                                          ??_fround 002A  
                                   sprintf@tmpval 00BD                                          ??_strcat 001E  
                                        ??_strcpy 001E                                          ??_strlen 001C  
                                      fround@prec 008D                            __end_of_util_pwm_start 3AA2  
                               __size_of___awtoft 003C                                 __size_of___ftpack 00AE  
                               __size_of___lltoft 0066                                       __pbssCOMRAM 002A  
                               __size_of___lwtoft 0024                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 0100            high_priority_int@previous_signal_level 002E  
                                    _isdigit$2418 001B                             _util_onewire_read_bit 3832  
                            ?_util_getTemperature 009A                            _util_waits_delay_hours 374E  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00B9  
                                     sprintf@fval 00C7             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00CA                    __end_of_util_onewire_write_bit 38C6  
                                       __pintcode 0008                                     __pmediumconst 7EF4  
                                        ?___awdiv 0020                                          ?___ftadd 008E  
                                        ?___awmod 001A                                          ?___ftdiv 0074  
                                        ?___ftneg 001A                                          ?___lldiv 001A  
                                        ?___ftmul 0075                                          ?___llmod 0071  
                                        ?___ftsub 009A                                         __npowers_ 7F44  
                                        ?___fttol 008B                   __size_of_init_timer1_initialize 0026  
                           _global_command_buffer 003E                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 2AA8  
                                    ??__div_to_l_ 0020                           _util_onewire_write_byte 2544  
                                 ?_util_pwm_start 0001                                          ?_isdigit 0001  
                                       _main_loop 32CC                        high_priority_int@total_add 0032  
      high_priority_int@cycles_transmitter_active 0034                               _util_waits_delay_ms 38F6  
                           ??_util_getTemperature 009D                                _util_onewire_reset 36CA  
                                        ?_sprintf 00A0                                    __size_of_scale 046A  
                 __size_of_init_timer2_initialize 001A                       util_getBatteryVoltage@value 0087  
                                  ___wmul@product 0028                                          _LATAbits 000F89  
                                        _LATBbits 000F8A                                          _LATDbits 000F8C  
                             ?_util_onewire_reset 001A                      _global_command_pending_check 003C  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 001A                                          i2u441_40 1C12  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 2D02  
                                        i2u442_48 1C14                                          i2u453_40 1D78  
                                        i2u453_45 1D70                                          i2u454_40 1D96  
                                        i2u446_40 1C70                                          i2u438_40 1BEA  
                                        i2u455_40 1D98                                          i2u439_48 1BEC  
              __size_of_init_watchdogs_initialize 001E                           ?_util_getBatteryCurrent 009A  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 001A           util_beacon_transmission@battery_current 00D2  
                         ?_util_getBatteryVoltage 0084                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0071                              ??_util_onewire_reset 001C  
                      util_transmit_letter@letter 0026                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00CD                            ?_util_onewire_read_bit 001A  
                     util_getBatteryCurrent@value 009C                                         copy_data0 35F6  
                          _init_timer1_initialize 394E                             util_waits_delay_ms@ms 001A  
                      __end_of_util_transmit_dash 3A2C            high_priority_int@is_transmitter_active 0040  
                  __end_of_util_getBatteryCurrent 2F80                                          __Hrparam 0000  
                    __size_of_util_pwm_initialize 0034                                _init_io_initialize 303E  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 001C  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
               __end_of_init_watchdogs_initialize 39F8                    __end_of_util_getBatteryVoltage 303E  
                          _init_timer2_initialize 3A2C                                  __size_of___awdiv 0084  
                                __size_of___ftadd 0268                                  __size_of___awmod 0070  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0024  
                           __end_of_util_pwm_stop 3A9A                                  __size_of___lldiv 0082  
                                __size_of___ftmul 015E                         ??_util_onewire_write_byte 001E  
                                __size_of___llmod 0094                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                               ?_init_io_initialize 0001  
                                        ___awtoft 378A                                          ___ftpack 30FA  
              high_priority_int@num_received_bits 002A                                       _fround$2788 008A  
                                     _fround$2789 0087                          __end_of_low_priority_int 00A6  
                                        ___lltoft 34CE                        ??_util_beacon_transmission 002A  
                           _util_waits_delay_mins 37C6                             _util_waits_delay_secs 3630  
                                      _ANSELAbits 000F38                                          ___lwtoft 3974  
                                      _ANSELBbits 000F39                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00C5                                        sprintf@val 00C1  
                                      strcat@from 001C                                  __size_of_isdigit 001E  
                                        __ptext10 3832                                          __ptext11 2968  
                                        __ptext20 3A6A                                          __ptext12 378A  
                                        __ptext21 3534                                          __ptext13 2DEC  
                                        __ptext30 370C                                          __ptext22 3A78  
                                        __ptext14 2F80                                          __ptext31 00AA  
                                        __ptext23 39F8                                          __ptext15 2EB6  
                                        __ptext40 2BDA                                          __ptext32 13C6  
                                        __ptext24 3A12                                          __ptext16 3974  
                                        __ptext41 34CE                                          __ptext33 39BC  
                                        __ptext25 38F6                                          __ptext17 2D02  
                                        __ptext50 3922                                          __ptext42 31A8  
                                        __ptext34 1EBE                                          __ptext26 3A92  
                                        __ptext18 1830                                          __ptext51 3A46  
                                        __ptext43 33DC                                          __ptext35 3864  
                                        __ptext27 3A9A                                          __ptext19 3A5C  
                                        __ptext52 37FE                                          __ptext44 2824  
                                        __ptext36 26C6                                          __ptext28 3590  
                                        __ptext53 39DA                                          __ptext45 367E  
                                        __ptext37 345E                                          __ptext29 38C6  
                                        __ptext54 3A2C                                          __ptext46 2148  
                                        __ptext38 3358                                          __ptext55 394E  
                                        __ptext47 30FA                                          __ptext39 2AA8  
                                        __ptext56 303E                                          __ptext48 3998  
                                        __ptext49 323C                                          __powers_ 7F1D  
                                __size_of_sprintf 0B84                              ??_init_io_initialize 001A  
                                      strcpy@from 001C                     __size_of_util_transmit_letter 034C  
                util_getSolarCurrent@solarCurrent 009F                          __size_of_init_initialize 0016  
                                   __size_of_main 000C                        util_onewire_reset@presence 001D  
                                    _PSTR2CONbits 000F63                                          int$flags 0046  
                   ?_util_transmit_morse_sequence 0020                     util_getBatteryVoltage@voltage 008A  
                                     ??_main_loop 002A                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0073                                          isdigit@c 001C  
                                        memset@p1 001A                            main_loop@solar_current 00DA  
                                        scale@scl 008A                   __end_of_util_onewire_write_byte 26C6  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00B7                                  __tdiv_to_l_@exp1 0028  
                                __tdiv_to_l_@cntr 0027                                         sprintf@sp 00A0  
                                __tdiv_to_l_@quot 0023                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 001A                                  ??_util_pwm_start 001A  
                          ?_util_waits_delay_mins 0026                            ?_util_waits_delay_secs 001F  
                                    ?__tdiv_to_l_ 001A                                          sprintf@c 00CC  
                                        sprintf@f 00A2                                          strcat@cp 001E  
                                        strcat@to 001A                    __end_of_util_waits_delay_hours 378A  
                                ___lldiv@quotient 0022                                          strcpy@cp 001E  
                                        strlen@cp 001E                                          strcpy@to 001A  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
            util_getBatteryCurrent@batteryCurrent 009F  
