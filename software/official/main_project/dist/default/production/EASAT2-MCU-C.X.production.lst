

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Apr 01 11:55:20 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 1.41
    77                           ; Generated 25/01/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F45K22 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  003CC0                     __pidataCOMRAM:
   113                           	opt stack 0
   114                           
   115                           ;initializer for high_priority_int@noise_mean_value
   116  003CC0  00                 	db	0
   117  003CC1  7D                 	db	125
   118  003CC2  00                 	db	0
   119                           
   120                           ;initializer for high_priority_int@activation_thresold
   121  003CC3  7D00               	dw	32000
   122                           
   123                           	psect	mediumconst
   124  007EF4                     __pmediumconst:
   125                           	opt stack 0
   126  007EF4  00                 	db	0
   127  007EF5                     _dpowers:
   128                           	opt stack 0
   129  007EF5  0001               	dw	1
   130  007EF7  0000               	dw	0
   131  007EF9  000A               	dw	10
   132  007EFB  0000               	dw	0
   133  007EFD  0064               	dw	100
   134  007EFF  0000               	dw	0
   135  007F01  03E8               	dw	1000
   136  007F03  0000               	dw	0
   137  007F05  2710               	dw	10000
   138  007F07  0000               	dw	0
   139  007F09  86A0               	dw	34464
   140  007F0B  0001               	dw	1
   141  007F0D  4240               	dw	16960
   142  007F0F  000F               	dw	15
   143  007F11  9680               	dw	38528
   144  007F13  0098               	dw	152
   145  007F15  E100               	dw	57600
   146  007F17  05F5               	dw	1525
   147  007F19  CA00               	dw	51712
   148  007F1B  3B9A               	dw	15258
   149  007F1D                     __end_of_dpowers:
   150                           	opt stack 0
   151  007F1D                     __powers_:
   152                           	opt stack 0
   153  007F1D  00                 	db	0
   154  007F1E  80                 	db	128
   155  007F1F  3F                 	db	63
   156  007F20  00                 	db	0
   157  007F21  20                 	db	32
   158  007F22  41                 	db	65
   159  007F23  00                 	db	0
   160  007F24  C8                 	db	200
   161  007F25  42                 	db	66
   162  007F26  00                 	db	0
   163  007F27  7A                 	db	122
   164  007F28  44                 	db	68
   165  007F29  40                 	db	64
   166  007F2A  1C                 	db	28
   167  007F2B  46                 	db	70
   168  007F2C  50                 	db	80
   169  007F2D  C3                 	db	195
   170  007F2E  47                 	db	71
   171  007F2F  24                 	db	36
   172  007F30  74                 	db	116
   173  007F31  49                 	db	73
   174  007F32  97                 	db	151
   175  007F33  18                 	db	24
   176  007F34  4B                 	db	75
   177  007F35  BC                 	db	188
   178  007F36  BE                 	db	190
   179  007F37  4C                 	db	76
   180  007F38  6B                 	db	107
   181  007F39  6E                 	db	110
   182  007F3A  4E                 	db	78
   183  007F3B  03                 	db	3
   184  007F3C  15                 	db	21
   185  007F3D  50                 	db	80
   186  007F3E  79                 	db	121
   187  007F3F  AD                 	db	173
   188  007F40  60                 	db	96
   189  007F41  F3                 	db	243
   190  007F42  49                 	db	73
   191  007F43  71                 	db	113
   192  007F44                     __end_of__powers_:
   193                           	opt stack 0
   194  007F44                     __npowers_:
   195                           	opt stack 0
   196  007F44  00                 	db	0
   197  007F45  80                 	db	128
   198  007F46  3F                 	db	63
   199  007F47  CD                 	db	205
   200  007F48  CC                 	db	204
   201  007F49  3D                 	db	61
   202  007F4A  D7                 	db	215
   203  007F4B  23                 	db	35
   204  007F4C  3C                 	db	60
   205  007F4D  12                 	db	18
   206  007F4E  83                 	db	131
   207  007F4F  3A                 	db	58
   208  007F50  B7                 	db	183
   209  007F51  D1                 	db	209
   210  007F52  38                 	db	56
   211  007F53  C6                 	db	198
   212  007F54  27                 	db	39
   213  007F55  37                 	db	55
   214  007F56  38                 	db	56
   215  007F57  86                 	db	134
   216  007F58  35                 	db	53
   217  007F59  C0                 	db	192
   218  007F5A  D6                 	db	214
   219  007F5B  33                 	db	51
   220  007F5C  CC                 	db	204
   221  007F5D  2B                 	db	43
   222  007F5E  32                 	db	50
   223  007F5F  70                 	db	112
   224  007F60  89                 	db	137
   225  007F61  30                 	db	48
   226  007F62  E7                 	db	231
   227  007F63  DB                 	db	219
   228  007F64  2E                 	db	46
   229  007F65  E5                 	db	229
   230  007F66  3C                 	db	60
   231  007F67  1E                 	db	30
   232  007F68  42                 	db	66
   233  007F69  A2                 	db	162
   234  007F6A  0D                 	db	13
   235  007F6B                     __end_of__npowers_:
   236                           	opt stack 0
   237  0000                     _ANSELDbits	set	3899
   238  0000                     _ANSELBbits	set	3897
   239  0000                     _ANSELAbits	set	3896
   240  0000                     _VREFCON0bits	set	3906
   241  0000                     _ADRES	set	4035
   242  0000                     _PORTDbits	set	3971
   243  0000                     _INTCONbits	set	4082
   244  0000                     _IPR1bits	set	3999
   245  0000                     _PIE1bits	set	3997
   246  0000                     _TMR1L	set	4046
   247  0000                     _TMR1H	set	4047
   248  0000                     _T1CONbits	set	4045
   249  0000                     _RCONbits	set	4048
   250  0000                     _PORTAbits	set	3968
   251  0000                     _PIR1bits	set	3998
   252  0000                     _ADCON0bits	set	4034
   253  0000                     _LATDbits	set	3980
   254  0000                     _TRISDbits	set	3989
   255  0000                     _LATBbits	set	3978
   256  0000                     _TRISBbits	set	3987
   257  0000                     _LATAbits	set	3977
   258  0000                     _TRISAbits	set	3986
   259  0000                     _ADCON2	set	4032
   260  0000                     _ADCON1	set	4033
   261  007F6B                     STR_2:
   262  007F6B  20                 	db	32
   263  007F6C  25                 	db	37
   264  007F6D  2E                 	db	46
   265  007F6E  31                 	db	49	;'1'
   266  007F6F  66                 	db	102	;'f'
   267  007F70  20                 	db	32
   268  007F71  25                 	db	37
   269  007F72  2E                 	db	46
   270  007F73  31                 	db	49	;'1'
   271  007F74  66                 	db	102	;'f'
   272  007F75  20                 	db	32
   273  007F76  25                 	db	37
   274  007F77  33                 	db	51	;'3'
   275  007F78  2E                 	db	46
   276  007F79  30                 	db	48	;'0'
   277  007F7A  64                 	db	100	;'d'
   278  007F7B  20                 	db	32
   279  007F7C  25                 	db	37
   280  007F7D  33                 	db	51	;'3'
   281  007F7E  2E                 	db	46
   282  007F7F  30                 	db	48	;'0'
   283  007F80  64                 	db	100	;'d'
   284  007F81  00                 	db	0
   285  007F82                     STR_39:
   286  007F82  2D                 	db	45
   287  007F83  2D                 	db	45
   288  007F84  2E                 	db	46
   289  007F85  2E                 	db	46
   290  007F86  2D                 	db	45
   291  007F87  2D                 	db	45
   292  007F88  00                 	db	0
   293  007F89                     STR_42:
   294  007F89  2E                 	db	46
   295  007F8A  2D                 	db	45
   296  007F8B  2E                 	db	46
   297  007F8C  2D                 	db	45
   298  007F8D  2E                 	db	46
   299  007F8E  2D                 	db	45
   300  007F8F  00                 	db	0
   301  007F90                     STR_43:
   302  007F90  2D                 	db	45
   303  007F91  2E                 	db	46
   304  007F92  2E                 	db	46
   305  007F93  2E                 	db	46
   306  007F94  2E                 	db	46
   307  007F95  2D                 	db	45
   308  007F96  00                 	db	0
   309  007F97                     STR_40:
   310  007F97  2E                 	db	46
   311  007F98  2E                 	db	46
   312  007F99  2D                 	db	45
   313  007F9A  2D                 	db	45
   314  007F9B  2E                 	db	46
   315  007F9C  2E                 	db	46
   316  007F9D  00                 	db	0
   317  007F9E                     STR_1:
   318  007F9E  45                 	db	69	;'E'
   319  007F9F  41                 	db	65	;'A'
   320  007FA0  53                 	db	83	;'S'
   321  007FA1  41                 	db	65	;'A'
   322  007FA2  54                 	db	84	;'T'
   323  007FA3  32                 	db	50	;'2'
   324  007FA4  00                 	db	0
   325  007FA5                     STR_29:
   326  007FA5  2D                 	db	45
   327  007FA6  2D                 	db	45
   328  007FA7  2D                 	db	45
   329  007FA8  2D                 	db	45
   330  007FA9  2D                 	db	45
   331  007FAA  00                 	db	0
   332  007FAB                     STR_30:
   333  007FAB  2E                 	db	46
   334  007FAC  2D                 	db	45
   335  007FAD  2D                 	db	45
   336  007FAE  2D                 	db	45
   337  007FAF  2D                 	db	45
   338  007FB0  00                 	db	0
   339  007FB1                     STR_31:
   340  007FB1  2E                 	db	46
   341  007FB2  2E                 	db	46
   342  007FB3  2D                 	db	45
   343  007FB4  2D                 	db	45
   344  007FB5  2D                 	db	45
   345  007FB6  00                 	db	0
   346  007FB7                     STR_32:
   347  007FB7  2E                 	db	46
   348  007FB8  2E                 	db	46
   349  007FB9  2E                 	db	46
   350  007FBA  2D                 	db	45
   351  007FBB  2D                 	db	45
   352  007FBC  00                 	db	0
   353  007FBD                     STR_38:
   354  007FBD  2D                 	db	45
   355  007FBE  2D                 	db	45
   356  007FBF  2D                 	db	45
   357  007FC0  2D                 	db	45
   358  007FC1  2E                 	db	46
   359  007FC2  00                 	db	0
   360  007FC3                     STR_41:
   361  007FC3  2D                 	db	45
   362  007FC4  2E                 	db	46
   363  007FC5  2E                 	db	46
   364  007FC6  2D                 	db	45
   365  007FC7  2E                 	db	46
   366  007FC8  00                 	db	0
   367  007FC9                     STR_37:
   368  007FC9  2D                 	db	45
   369  007FCA  2D                 	db	45
   370  007FCB  2D                 	db	45
   371  007FCC  2E                 	db	46
   372  007FCD  2E                 	db	46
   373  007FCE  00                 	db	0
   374  007FCF                     STR_36:
   375  007FCF  2D                 	db	45
   376  007FD0  2D                 	db	45
   377  007FD1  2E                 	db	46
   378  007FD2  2E                 	db	46
   379  007FD3  2E                 	db	46
   380  007FD4  00                 	db	0
   381  007FD5                     STR_35:
   382  007FD5  2D                 	db	45
   383  007FD6  2E                 	db	46
   384  007FD7  2E                 	db	46
   385  007FD8  2E                 	db	46
   386  007FD9  2E                 	db	46
   387  007FDA  00                 	db	0
   388  007FDB                     STR_34:
   389  007FDB  2E                 	db	46
   390  007FDC  2E                 	db	46
   391  007FDD  2E                 	db	46
   392  007FDE  2E                 	db	46
   393  007FDF  2E                 	db	46
   394  007FE0  00                 	db	0
   395  007FE1                     STR_27:
   396  007FE1  2D                 	db	45
   397  007FE2  2E                 	db	46
   398  007FE3  2D                 	db	45
   399  007FE4  2D                 	db	45
   400  007FE5  00                 	db	0
   401  007FE6                     STR_19:
   402  007FE6  2D                 	db	45
   403  007FE7  2D                 	db	45
   404  007FE8  2E                 	db	46
   405  007FE9  2D                 	db	45
   406  007FEA  00                 	db	0
   407  007FEB                     STR_26:
   408  007FEB  2D                 	db	45
   409  007FEC  2E                 	db	46
   410  007FED  2E                 	db	46
   411  007FEE  2D                 	db	45
   412  007FEF  00                 	db	0
   413  007FF0                     STR_18:
   414  007FF0  2E                 	db	46
   415  007FF1  2D                 	db	45
   416  007FF2  2D                 	db	45
   417  007FF3  2E                 	db	46
   418  007FF4  00                 	db	0
   419  007FF5                     STR_5:
   420  007FF5  2D                 	db	45
   421  007FF6  2E                 	db	46
   422  007FF7  2D                 	db	45
   423  007FF8  2E                 	db	46
   424  007FF9  00                 	db	0
   425  007FFA                     STR_14:
   426  007FFA  2E                 	db	46
   427  007FFB  2D                 	db	45
   428  007FFC  2E                 	db	46
   429  007FFD  2E                 	db	46
   430  007FFE  00                 	db	0
   431  0000                     
   432                           ; #config settings
   433  007FFF  00                 	db	0	; dummy byte at the end
   434  0000                     
   435                           	psect	cinit
   436  003872                     __pcinit:
   437                           	opt stack 0
   438  003872                     start_initialization:
   439                           	opt stack 0
   440  003872                     __initialization:
   441                           	opt stack 0
   442                           
   443                           ; Initialize objects allocated to COMRAM (5 bytes)
   444                           ; load TBLPTR registers with __pidataCOMRAM
   445  003872  0EC0               	movlw	low __pidataCOMRAM
   446  003874  6EF6               	movwf	tblptrl,c
   447  003876  0E3C               	movlw	high __pidataCOMRAM
   448  003878  6EF7               	movwf	tblptrh,c
   449  00387A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   450  00387C  6EF8               	movwf	tblptru,c
   451  00387E  EE00  F039         	lfsr	0,__pdataCOMRAM
   452  003882  EE10 F005          	lfsr	1,5
   453  003886                     copy_data0:
   454  003886  0009               	tblrd		*+
   455  003888  CFF5 FFEE          	movff	tablat,postinc0
   456  00388C  50E5               	movf	postdec1,w,c
   457  00388E  50E1               	movf	fsr1l,w,c
   458  003890  E1FA               	bnz	copy_data0
   459                           
   460                           ; Clear objects allocated to BANK2 (200 bytes)
   461  003892  EE02  F000         	lfsr	0,__pbssBANK2
   462  003896  0EC8               	movlw	200
   463  003898                     clear_0:
   464  003898  6AEE               	clrf	postinc0,c
   465  00389A  06E8               	decf	wreg,f,c
   466  00389C  E1FD               	bnz	clear_0
   467                           
   468                           ; Clear objects allocated to COMRAM (12 bytes)
   469  00389E  EE00  F02D         	lfsr	0,__pbssCOMRAM
   470  0038A2  0E0C               	movlw	12
   471  0038A4                     clear_1:
   472  0038A4  6AEE               	clrf	postinc0,c
   473  0038A6  06E8               	decf	wreg,f,c
   474  0038A8  E1FD               	bnz	clear_1
   475  0038AA                     end_of_initialization:
   476                           	opt stack 0
   477  0038AA                     __end_of__initialization:
   478                           	opt stack 0
   479  0038AA  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   480  0038AC  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   481  0038AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   482  0038B0  6EF8               	movwf	tblptru,c
   483  0038B2  0100               	movlb	0
   484  0038B4  EF55  F01E         	goto	_main	;jump to C main() function
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494                           	psect	bssCOMRAM
   495  00002D                     __pbssCOMRAM:
   496                           	opt stack 0
   497  00002D                     high_priority_int@valid_samples:
   498                           	opt stack 0
   499  00002D                     	ds	2
   500  00002F                     high_priority_int@is_transmitter_active:
   501                           	opt stack 0
   502  00002F                     	ds	2
   503  000031                     high_priority_int@cycles_transmitter_active:
   504                           	opt stack 0
   505  000031                     	ds	2
   506  000033                     high_priority_int@times_thresold_exceeded:
   507                           	opt stack 0
   508  000033                     	ds	2
   509  000035                     high_priority_int@sample_position:
   510                           	opt stack 0
   511  000035                     	ds	2
   512  000037                     _tmr1_interrupt_number:
   513                           	opt stack 0
   514  000037                     	ds	2
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           postdec1	equ	0xFE5
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	dataCOMRAM
   525  000039                     __pdataCOMRAM:
   526                           	opt stack 0
   527  000039                     high_priority_int@noise_mean_value:
   528                           	opt stack 0
   529  000039                     	ds	3
   530  00003C                     high_priority_int@activation_thresold:
   531                           	opt stack 0
   532  00003C                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	bssBANK2
   543  000200                     __pbssBANK2:
   544                           	opt stack 0
   545  000200                     high_priority_int@samples:
   546                           	opt stack 0
   547  000200                     	ds	200
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackBANK1
   558  000100                     __pcstackBANK1:
   559                           	opt stack 0
   560  000100                     util_beacon_transmission@BEACON_MESSAGE:
   561                           	opt stack 0
   562  000100                     util_getTemperature@bit_mem:
   563                           	opt stack 0
   564                           
   565                           ; 144 bytes @ 0x0
   566  000100                     	ds	128
   567  000180                     util_beacon_transmission@BEACON_BUFFER:
   568                           	opt stack 0
   569                           
   570                           ; 64 bytes @ 0x80
   571  000180                     	ds	16
   572  000190                     util_getTemperature@byte_mem:
   573                           	opt stack 0
   574                           
   575                           ; 18 bytes @ 0x90
   576  000190                     	ds	18
   577  0001A2                     util_getTemperature@num_bit:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xA2
   581  0001A2                     	ds	2
   582  0001A4                     util_getTemperature@sign:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0xA4
   586  0001A4                     	ds	3
   587  0001A7                     _util_getTemperature$2289:
   588                           	opt stack 0
   589                           
   590                           ; 3 bytes @ 0xA7
   591  0001A7                     	ds	3
   592  0001AA                     _util_getTemperature$2290:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0xAA
   596  0001AA                     	ds	3
   597  0001AD                     _util_getTemperature$2291:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0xAD
   601  0001AD                     	ds	3
   602  0001B0                     _util_getTemperature$2292:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0xB0
   606  0001B0                     	ds	3
   607  0001B3                     util_getTemperature@shift_reg_bit0:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xB3
   611  0001B3                     	ds	2
   612  0001B5                     util_getTemperature@shift_reg_bit1:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xB5
   616  0001B5                     	ds	2
   617  0001B7                     util_getTemperature@shift_reg_bit2:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0xB7
   621  0001B7                     	ds	2
   622  0001B9                     util_getTemperature@shift_reg_bit3:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xB9
   626  0001B9                     	ds	2
   627  0001BB                     util_getTemperature@shift_reg_bit4:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0xBB
   631  0001BB                     	ds	2
   632  0001BD                     util_getTemperature@shift_reg_bit5:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0xBD
   636  0001BD                     	ds	2
   637  0001BF                     util_getTemperature@shift_reg_bit6:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0xBF
   641  0001BF                     	ds	1
   642  0001C0                     util_beacon_transmission@i:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0xC0
   646  0001C0                     	ds	1
   647  0001C1                     util_getTemperature@shift_reg_bit7:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0xC1
   651  0001C1                     	ds	2
   652  0001C3                     util_getTemperature@shift_reg_bit_temp:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xC3
   656  0001C3                     	ds	2
   657  0001C5                     util_getTemperature@num_byte:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0xC5
   661  0001C5                     	ds	2
   662  0001C7                     util_getTemperature@bit_in_byte:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xC7
   666  0001C7                     	ds	2
   667  0001C9                     util_getTemperature@temperature:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0xC9
   671  0001C9                     	ds	3
   672  0001CC                     util_getTemperature@i:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0xCC
   676  0001CC                     	ds	2
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec1	equ	0xFE5
   684                           fsr1l	equ	0xFE1
   685                           
   686                           	psect	cstackBANK0
   687  000060                     __pcstackBANK0:
   688                           	opt stack 0
   689  000060                     ??_low_priority_int:
   690                           
   691                           ; 1 bytes @ 0x0
   692  000060                     	ds	17
   693  000071                     ?_util_onewire_reset:
   694                           	opt stack 0
   695  000071                     ?_util_onewire_read_bit:
   696                           	opt stack 0
   697  000071                     ?_strlen:
   698                           	opt stack 0
   699  000071                     ?___awmod:
   700                           	opt stack 0
   701  000071                     ?___ftpack:
   702                           	opt stack 0
   703  000071                     ?___ftneg:
   704                           	opt stack 0
   705  000071                     ?__tdiv_to_l_:
   706                           	opt stack 0
   707  000071                     ?__div_to_l_:
   708                           	opt stack 0
   709  000071                     ?___lldiv:
   710                           	opt stack 0
   711  000071                     util_onewire_write_bit@bit_in:
   712                           	opt stack 0
   713  000071                     util_waits_delay_ms@ms:
   714                           	opt stack 0
   715  000071                     util_waits_delay_hundred_us@hun_us:
   716                           	opt stack 0
   717  000071                     ___awmod@dividend:
   718                           	opt stack 0
   719  000071                     memset@p1:
   720                           	opt stack 0
   721  000071                     strcat@to:
   722                           	opt stack 0
   723  000071                     strcpy@to:
   724                           	opt stack 0
   725  000071                     strlen@s:
   726                           	opt stack 0
   727  000071                     __div_to_l_@f1:
   728                           	opt stack 0
   729  000071                     ___ftpack@arg:
   730                           	opt stack 0
   731  000071                     __tdiv_to_l_@f1:
   732                           	opt stack 0
   733  000071                     ___ftge@ff1:
   734                           	opt stack 0
   735  000071                     ___ftneg@f1:
   736                           	opt stack 0
   737  000071                     ___lldiv@dividend:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x11
   741  000071                     	ds	2
   742  000073                     ?_util_onewire_read_byte:
   743                           	opt stack 0
   744  000073                     util_onewire_write_byte@value:
   745                           	opt stack 0
   746  000073                     util_transmit_morse_sequence@morse_sequence:
   747                           	opt stack 0
   748  000073                     util_waits_delay_secs@secs:
   749                           	opt stack 0
   750  000073                     ___awmod@divisor:
   751                           	opt stack 0
   752  000073                     memset@c:
   753                           	opt stack 0
   754  000073                     strcat@from:
   755                           	opt stack 0
   756  000073                     strcpy@from:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x13
   760  000073                     	ds	1
   761  000074                     ___ftpack@exp:
   762                           	opt stack 0
   763  000074                     __div_to_l_@f2:
   764                           	opt stack 0
   765  000074                     __tdiv_to_l_@f2:
   766                           	opt stack 0
   767  000074                     ___ftge@ff2:
   768                           	opt stack 0
   769                           
   770                           ; 3 bytes @ 0x14
   771  000074                     	ds	1
   772  000075                     ??_util_onewire_read_byte:
   773  000075                     ?___awdiv:
   774                           	opt stack 0
   775  000075                     ___ftpack@sign:
   776                           	opt stack 0
   777  000075                     util_onewire_write_byte@bit0:
   778                           	opt stack 0
   779  000075                     util_waits_delay_mins@minutes:
   780                           	opt stack 0
   781  000075                     ___awdiv@dividend:
   782                           	opt stack 0
   783  000075                     memset@n:
   784                           	opt stack 0
   785  000075                     ___lldiv@divisor:
   786                           	opt stack 0
   787                           
   788                           ; 4 bytes @ 0x15
   789  000075                     	ds	1
   790  000076                     ?___awtoft:
   791                           	opt stack 0
   792  000076                     ?___lltoft:
   793                           	opt stack 0
   794  000076                     ?___lwtoft:
   795                           	opt stack 0
   796  000076                     ___awtoft@c:
   797                           	opt stack 0
   798  000076                     ___lwtoft@c:
   799                           	opt stack 0
   800  000076                     ___lltoft@c:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x16
   804  000076                     	ds	1
   805  000077                     util_onewire_write_byte@bit1:
   806                           	opt stack 0
   807  000077                     util_waits_delay_hours@hours:
   808                           	opt stack 0
   809  000077                     ___awdiv@divisor:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x17
   813  000077                     	ds	2
   814  000079                     ??_util_waits_delay_hours:
   815  000079                     ?___wmul:
   816                           	opt stack 0
   817  000079                     ?___ftdiv:
   818                           	opt stack 0
   819  000079                     ?___llmod:
   820                           	opt stack 0
   821  000079                     util_onewire_write_byte@bit2:
   822                           	opt stack 0
   823  000079                     ___wmul@multiplier:
   824                           	opt stack 0
   825  000079                     ___ftdiv@f1:
   826                           	opt stack 0
   827  000079                     ___llmod@dividend:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x19
   831  000079                     	ds	1
   832  00007A                     util_waits_delay_hours@i:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x1A
   836  00007A                     	ds	1
   837  00007B                     util_onewire_write_byte@bit3:
   838                           	opt stack 0
   839  00007B                     ___wmul@multiplicand:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x1B
   843  00007B                     	ds	1
   844  00007C                     ___ftdiv@f2:
   845                           	opt stack 0
   846                           
   847                           ; 3 bytes @ 0x1C
   848  00007C                     	ds	1
   849  00007D                     ?___ftmul:
   850                           	opt stack 0
   851  00007D                     util_onewire_write_byte@bit4:
   852                           	opt stack 0
   853  00007D                     ___ftmul@f1:
   854                           	opt stack 0
   855  00007D                     ___llmod@divisor:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x1D
   859  00007D                     	ds	2
   860  00007F                     ___ftdiv@cntr:
   861                           	opt stack 0
   862  00007F                     util_onewire_write_byte@bit5:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x1F
   866  00007F                     	ds	1
   867  000080                     ___ftdiv@f3:
   868                           	opt stack 0
   869  000080                     ___ftmul@f2:
   870                           	opt stack 0
   871                           
   872                           ; 3 bytes @ 0x20
   873  000080                     	ds	1
   874  000081                     util_onewire_write_byte@bit6:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x21
   878  000081                     	ds	2
   879  000083                     ___ftdiv@exp:
   880                           	opt stack 0
   881  000083                     ___ftmul@exp:
   882                           	opt stack 0
   883  000083                     util_onewire_write_byte@bit7:
   884                           	opt stack 0
   885  000083                     util_onewire_read_byte@bit0:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x23
   889  000083                     	ds	1
   890  000084                     ___ftdiv@sign:
   891                           	opt stack 0
   892  000084                     ___ftmul@f3_as_product:
   893                           	opt stack 0
   894                           
   895                           ; 3 bytes @ 0x24
   896  000084                     	ds	1
   897  000085                     util_onewire_read_byte@bit1:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x25
   901  000085                     	ds	2
   902  000087                     ___ftmul@cntr:
   903                           	opt stack 0
   904  000087                     util_onewire_read_byte@bit2:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x27
   908  000087                     	ds	1
   909  000088                     ___ftmul@sign:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x28
   913  000088                     	ds	1
   914  000089                     ?_util_getBatteryVoltage:
   915                           	opt stack 0
   916  000089                     ?_fround:
   917                           	opt stack 0
   918  000089                     ?_scale:
   919                           	opt stack 0
   920  000089                     util_onewire_read_byte@bit3:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x29
   924  000089                     	ds	2
   925  00008B                     util_onewire_read_byte@bit4:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x2B
   929  00008B                     	ds	1
   930  00008C                     util_getBatteryVoltage@value:
   931                           	opt stack 0
   932  00008C                     _fround$2294:
   933                           	opt stack 0
   934  00008C                     _scale$2295:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x2C
   938  00008C                     	ds	1
   939  00008D                     util_onewire_read_byte@bit5:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x2D
   943  00008D                     	ds	2
   944  00008F                     scale@scl:
   945                           	opt stack 0
   946  00008F                     util_onewire_read_byte@bit6:
   947                           	opt stack 0
   948  00008F                     util_getBatteryVoltage@voltage:
   949                           	opt stack 0
   950  00008F                     _fround$2293:
   951                           	opt stack 0
   952                           
   953                           ; 3 bytes @ 0x2F
   954  00008F                     	ds	1
   955  000090                     ?___fttol:
   956                           	opt stack 0
   957  000090                     ___fttol@f1:
   958                           	opt stack 0
   959                           
   960                           ; 3 bytes @ 0x30
   961  000090                     	ds	1
   962  000091                     util_onewire_read_byte@bit7:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x31
   966  000091                     	ds	1
   967  000092                     fround@prec:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x32
   971  000092                     	ds	1
   972  000093                     ?___ftadd:
   973                           	opt stack 0
   974  000093                     util_onewire_read_byte@value:
   975                           	opt stack 0
   976  000093                     ___ftadd@f1:
   977                           	opt stack 0
   978                           
   979                           ; 3 bytes @ 0x33
   980  000093                     	ds	1
   981  000094                     ??___fttol:
   982                           
   983                           ; 1 bytes @ 0x34
   984  000094                     	ds	2
   985  000096                     ___ftadd@f2:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x36
   989  000096                     	ds	3
   990  000099                     ??___ftadd:
   991  000099                     ___fttol@sign1:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x39
   995  000099                     	ds	1
   996  00009A                     ___fttol@lval:
   997                           	opt stack 0
   998                           
   999                           ; 4 bytes @ 0x3A
  1000  00009A                     	ds	2
  1001  00009C                     ___ftadd@sign:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x3C
  1005  00009C                     	ds	1
  1006  00009D                     ___ftadd@exp2:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x3D
  1010  00009D                     	ds	1
  1011  00009E                     ___ftadd@exp1:
  1012                           	opt stack 0
  1013  00009E                     ___fttol@exp1:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x3E
  1017  00009E                     	ds	1
  1018  00009F                     ?_util_getSolarCurrent:
  1019                           	opt stack 0
  1020  00009F                     ?_util_getBatteryCurrent:
  1021                           	opt stack 0
  1022  00009F                     ?_util_getTemperature:
  1023                           	opt stack 0
  1024  00009F                     ?___ftsub:
  1025                           	opt stack 0
  1026  00009F                     ___ftsub@f1:
  1027                           	opt stack 0
  1028                           
  1029                           ; 3 bytes @ 0x3F
  1030  00009F                     	ds	2
  1031  0000A1                     util_getSolarCurrent@value:
  1032                           	opt stack 0
  1033  0000A1                     util_getBatteryCurrent@value:
  1034                           	opt stack 0
  1035                           
  1036                           ; 3 bytes @ 0x41
  1037  0000A1                     	ds	1
  1038  0000A2                     ??_util_getTemperature:
  1039  0000A2                     ___ftsub@f2:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x42
  1043  0000A2                     	ds	2
  1044  0000A4                     util_getSolarCurrent@solarCurrent:
  1045                           	opt stack 0
  1046  0000A4                     util_getBatteryCurrent@batteryCurrent:
  1047                           	opt stack 0
  1048                           
  1049                           ; 3 bytes @ 0x44
  1050  0000A4                     	ds	1
  1051  0000A5                     ?_sprintf:
  1052                           	opt stack 0
  1053  0000A5                     sprintf@sp:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x45
  1057  0000A5                     	ds	2
  1058  0000A7                     sprintf@f:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x47
  1062  0000A7                     	ds	12
  1063  0000B3                     ??_sprintf:
  1064                           
  1065                           ; 1 bytes @ 0x53
  1066  0000B3                     	ds	6
  1067  0000B9                     _sprintf$2296:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x59
  1071  0000B9                     	ds	3
  1072  0000BC                     sprintf@ap:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x5C
  1076  0000BC                     	ds	2
  1077  0000BE                     sprintf@flag:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x5E
  1081  0000BE                     	ds	2
  1082  0000C0                     sprintf@width:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x60
  1086  0000C0                     	ds	2
  1087  0000C2                     sprintf@tmpval:
  1088                           	opt stack 0
  1089                           
  1090                           ; 4 bytes @ 0x62
  1091  0000C2                     	ds	4
  1092  0000C6                     sprintf@val:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x66
  1096  0000C6                     	ds	4
  1097  0000CA                     sprintf@exp:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x6A
  1101  0000CA                     	ds	2
  1102  0000CC                     sprintf@fval:
  1103                           	opt stack 0
  1104                           
  1105                           ; 3 bytes @ 0x6C
  1106  0000CC                     	ds	3
  1107  0000CF                     sprintf@prec:
  1108                           	opt stack 0
  1109                           
  1110                           ; 2 bytes @ 0x6F
  1111  0000CF                     	ds	2
  1112  0000D1                     sprintf@c:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x71
  1116  0000D1                     	ds	1
  1117  0000D2                     util_beacon_transmission@battery_voltage:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x72
  1121  0000D2                     	ds	3
  1122  0000D5                     util_beacon_transmission@solar_current:
  1123                           	opt stack 0
  1124                           
  1125                           ; 2 bytes @ 0x75
  1126  0000D5                     	ds	2
  1127  0000D7                     util_beacon_transmission@battery_current:
  1128                           	opt stack 0
  1129                           
  1130                           ; 2 bytes @ 0x77
  1131  0000D7                     	ds	2
  1132  0000D9                     util_beacon_transmission@temperature:
  1133                           	opt stack 0
  1134                           
  1135                           ; 3 bytes @ 0x79
  1136  0000D9                     	ds	3
  1137  0000DC                     main_loop@temperature:
  1138                           	opt stack 0
  1139                           
  1140                           ; 3 bytes @ 0x7C
  1141  0000DC                     	ds	3
  1142  0000DF                     main_loop@solar_current:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x7F
  1146  0000DF                     	ds	2
  1147  0000E1                     main_loop@battery_current:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x81
  1151  0000E1                     	ds	2
  1152  0000E3                     main_loop@battery_voltage:
  1153                           	opt stack 0
  1154                           
  1155                           ; 3 bytes @ 0x83
  1156  0000E3                     	ds	3
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166                           	psect	cstackCOMRAM
  1167  000001                     __pcstackCOMRAM:
  1168                           	opt stack 0
  1169  000001                     ?___ltdiv:
  1170                           	opt stack 0
  1171  000001                     ___ltdiv@dividend:
  1172                           	opt stack 0
  1173                           
  1174                           ; 3 bytes @ 0x0
  1175  000001                     	ds	3
  1176  000004                     ___ltdiv@divisor:
  1177                           	opt stack 0
  1178                           
  1179                           ; 3 bytes @ 0x3
  1180  000004                     	ds	3
  1181  000007                     ___ltdiv@quotient:
  1182                           	opt stack 0
  1183                           
  1184                           ; 3 bytes @ 0x6
  1185  000007                     	ds	3
  1186  00000A                     ___ltdiv@counter:
  1187                           	opt stack 0
  1188                           
  1189                           ; 1 bytes @ 0x9
  1190  00000A                     	ds	1
  1191  00000B                     ??_high_priority_int:
  1192                           
  1193                           ; 1 bytes @ 0xA
  1194  00000B                     	ds	19
  1195  00001E                     high_priority_int@sample:
  1196                           	opt stack 0
  1197                           
  1198                           ; 2 bytes @ 0x1D
  1199  00001E                     	ds	2
  1200  000020                     high_priority_int@i:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x1F
  1204  000020                     	ds	2
  1205  000022                     ??_util_onewire_reset:
  1206  000022                     ??_util_onewire_write_byte:
  1207  000022                     ??_util_onewire_read_bit:
  1208  000022                     ??_strlen:
  1209  000022                     ??_util_waits_delay_ms:
  1210  000022                     ??_util_waits_delay_hundred_us:
  1211  000022                     ??_isdigit:
  1212  000022                     ??__tdiv_to_l_:
  1213  000022                     ??___ftpack:
  1214  000022                     ??___ftge:
  1215  000022                     ___awmod@counter:
  1216                           	opt stack 0
  1217  000022                     memset@p:
  1218                           	opt stack 0
  1219  000022                     strcat@cp:
  1220                           	opt stack 0
  1221  000022                     strcpy@cp:
  1222                           	opt stack 0
  1223  000022                     __div_to_l_@quot:
  1224                           	opt stack 0
  1225  000022                     ___lldiv@quotient:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x21
  1229  000022                     	ds	1
  1230  000023                     ___awmod@sign:
  1231                           	opt stack 0
  1232  000023                     _isdigit$1935:
  1233                           	opt stack 0
  1234  000023                     util_onewire_reset@presence:
  1235                           	opt stack 0
  1236  000023                     util_onewire_read_bit@value:
  1237                           	opt stack 0
  1238  000023                     util_waits_delay_ms@i:
  1239                           	opt stack 0
  1240  000023                     util_waits_delay_hundred_us@i:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x22
  1244  000023                     	ds	1
  1245  000024                     ___awdiv@counter:
  1246                           	opt stack 0
  1247  000024                     isdigit@c:
  1248                           	opt stack 0
  1249  000024                     strlen@cp:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x23
  1253  000024                     	ds	1
  1254  000025                     ??_util_waits_delay_secs:
  1255  000025                     ??___lltoft:
  1256  000025                     ___awdiv@sign:
  1257                           	opt stack 0
  1258  000025                     ___awtoft@sign:
  1259                           	opt stack 0
  1260  000025                     util_transmit_dot@i:
  1261                           	opt stack 0
  1262  000025                     util_transmit_dash@i:
  1263                           	opt stack 0
  1264  000025                     __tdiv_to_l_@quot:
  1265                           	opt stack 0
  1266                           
  1267                           ; 4 bytes @ 0x24
  1268  000025                     	ds	1
  1269  000026                     ??___ftdiv:
  1270  000026                     __div_to_l_@cntr:
  1271                           	opt stack 0
  1272  000026                     ___lldiv@counter:
  1273                           	opt stack 0
  1274  000026                     util_waits_delay_secs@i:
  1275                           	opt stack 0
  1276  000026                     ___awdiv@quotient:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x25
  1280  000026                     	ds	1
  1281  000027                     ??_util_transmit_morse_sequence:
  1282  000027                     __div_to_l_@exp1:
  1283                           	opt stack 0
  1284  000027                     ___llmod@counter:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x26
  1288  000027                     	ds	1
  1289  000028                     util_waits_delay_secs@j:
  1290                           	opt stack 0
  1291  000028                     ___wmul@product:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x27
  1295  000028                     	ds	1
  1296  000029                     __tdiv_to_l_@cntr:
  1297                           	opt stack 0
  1298  000029                     ___lltoft@exp:
  1299                           	opt stack 0
  1300  000029                     util_transmit_morse_sequence@i:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x28
  1304  000029                     	ds	1
  1305  00002A                     ??_util_waits_delay_mins:
  1306  00002A                     ??___ftmul:
  1307  00002A                     __tdiv_to_l_@exp1:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x29
  1311  00002A                     	ds	1
  1312  00002B                     util_transmit_letter@letter:
  1313                           	opt stack 0
  1314  00002B                     util_waits_delay_mins@i:
  1315                           	opt stack 0
  1316                           
  1317                           ; 2 bytes @ 0x2A
  1318  00002B                     	ds	2
  1319  00002D                     tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           postdec1	equ	0xFE5
  1326                           fsr1l	equ	0xFE1
  1327                           
  1328                           ; 1 bytes @ 0x2C
  1329 ;;
  1330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1331 ;;
  1332 ;; *************** function _main *****************
  1333 ;; Defined at:
  1334 ;;		line 19 in file "easat2_main_mcu.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels required when called:   10
  1354 ;; This function calls:
  1355 ;;		_initialize
  1356 ;;		_main_loop
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text0
  1363  003CAA                     __ptext0:
  1364                           	opt stack 0
  1365  003CAA                     _main:
  1366                           	opt stack 21
  1367                           
  1368                           ;easat2_main_mcu.c: 22: initialize();
  1369                           
  1370                           ;incstack = 0
  1371  003CAA  EC5B  F01E         	call	_initialize	;wreg free
  1372                           
  1373                           ;easat2_main_mcu.c: 25: main_loop();
  1374  003CAE  ECDD  F01A         	call	_main_loop	;wreg free
  1375  003CB2  EF53  F000         	goto	start
  1376  003CB6                     __end_of_main:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           postdec1	equ	0xFE5
  1385                           fsr1l	equ	0xFE1
  1386                           
  1387 ;; *************** function _main_loop *****************
  1388 ;; Defined at:
  1389 ;;		line 31 in file "easat2_main_mcu.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  battery_volt    3  131[BANK0 ] float 
  1394 ;;  temperature     3  124[BANK0 ] float 
  1395 ;;  battery_curr    2  129[BANK0 ] int 
  1396 ;;  solar_curren    2  127[BANK0 ] int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1406 ;;      Params:         0       0       0       0       0       0       0
  1407 ;;      Locals:         0      10       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0
  1409 ;;      Totals:         0      10       0       0       0       0       0
  1410 ;;Total ram usage:       10 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    9
  1413 ;; This function calls:
  1414 ;;		_util_beacon_transmission
  1415 ;;		_util_getBatteryCurrent
  1416 ;;		_util_getBatteryVoltage
  1417 ;;		_util_getSolarCurrent
  1418 ;;		_util_getTemperature
  1419 ;;		_util_waits_delay_hours
  1420 ;;		_util_waits_delay_mins
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text1
  1427  0035BA                     __ptext1:
  1428                           	opt stack 0
  1429  0035BA                     _main_loop:
  1430                           	opt stack 21
  1431  0035BA                     l24:
  1432  0035BA  0004               	clrwdt		;# 
  1433                           
  1434                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1435  0035BC  EC88  F018         	call	_util_getBatteryVoltage	;wreg free
  1436  0035C0  C089  F0E3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1437  0035C4  C08A  F0E4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1438  0035C8  C08B  F0E5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1439                           
  1440                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1441  0035CC  ECBE  F017         	call	_util_getSolarCurrent	;wreg free
  1442  0035D0  C09F  F0DF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1443  0035D4  C0A0  F0E0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1444                           
  1445                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1446  0035D8  EC23  F018         	call	_util_getBatteryCurrent	;wreg free
  1447  0035DC  C09F  F0E1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1448  0035E0  C0A0  F0E2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1449                           
  1450                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1451  0035E4  EC24  F006         	call	_util_getTemperature	;wreg free
  1452  0035E8  C09F  F0DC         	movff	?_util_getTemperature,main_loop@temperature
  1453  0035EC  C0A0  F0DD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1454  0035F0  C0A1  F0DE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1455                           
  1456                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1457  0035F4  0100               	movlb	0	; () banked
  1458  0035F6  BFE5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1459  0035F8  D017               	goto	l6234
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1463  0035FA  C0E3  F0D2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1464  0035FE  C0E4  F0D3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1465  003602  C0E5  F0D4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1466  003606  C0DF  F0D5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1467  00360A  C0E0  F0D6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1468  00360E  C0E1  F0D7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1469  003612  C0E2  F0D8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1470  003616  C0DC  F0D9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1471  00361A  C0DD  F0DA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1472  00361E  C0DE  F0DB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1473  003622  ECBB  F016         	call	_util_beacon_transmission	;wreg free
  1474                           
  1475                           ;easat2_main_mcu.c: 62: } else {
  1476  003626  D007               	goto	l26
  1477  003628                     l6234:
  1478                           
  1479                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1480  003628  0E00               	movlw	0
  1481  00362A  0100               	movlb	0	; () banked
  1482  00362C  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1483  00362E  0E02               	movlw	2
  1484  003630  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1485  003632  EC7E  F01C         	call	_util_waits_delay_hours	;wreg free
  1486  003636                     l26:
  1487                           
  1488                           ;easat2_main_mcu.c: 65: }
  1489                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1490  003636  0E00               	movlw	0
  1491  003638  0100               	movlb	0	; () banked
  1492  00363A  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1493  00363C  0E03               	movlw	3
  1494  00363E  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1495  003640  ECE0  F01C         	call	_util_waits_delay_mins	;wreg free
  1496                           
  1497                           ;easat2_main_mcu.c: 71: } while (1);
  1498  003644  D7BA               	goto	l24
  1499  003646                     __end_of_main_loop:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           
  1510 ;; *************** function _util_waits_delay_hours *****************
  1511 ;; Defined at:
  1512 ;;		line 17 in file "easat2_util_waits.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  hours           2   23[BANK0 ] int 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  i               2   26[BANK0 ] int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       2       0       0       0       0       0
  1527 ;;      Locals:         0       2       0       0       0       0       0
  1528 ;;      Temps:          0       1       0       0       0       0       0
  1529 ;;      Totals:         0       5       0       0       0       0       0
  1530 ;;Total ram usage:        5 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    6
  1533 ;; This function calls:
  1534 ;;		_util_waits_delay_mins
  1535 ;; This function is called by:
  1536 ;;		_main_loop
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text2
  1541  0038FC                     __ptext2:
  1542                           	opt stack 0
  1543  0038FC                     _util_waits_delay_hours:
  1544                           	opt stack 23
  1545                           
  1546                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1547                           
  1548                           ;incstack = 0
  1549  0038FC  0E00               	movlw	0
  1550  0038FE  0100               	movlb	0	; () banked
  1551  003900  6F7B               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1552  003902  0E00               	movlw	0
  1553  003904  6F7A               	movwf	util_waits_delay_hours@i& (0+255),b
  1554  003906  D00A               	goto	l6082
  1555  003908                     l6078:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1559  003908  0E00               	movlw	0
  1560  00390A  0100               	movlb	0	; () banked
  1561  00390C  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1562  00390E  0E3C               	movlw	60
  1563  003910  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1564  003912  ECE0  F01C         	call	_util_waits_delay_mins	;wreg free
  1565  003916  0100               	movlb	0	; () banked
  1566  003918  4B7A               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1567  00391A  2B7B               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1568  00391C                     l6082:
  1569                           
  1570                           ; BSR set to: 0
  1571  00391C  0100               	movlb	0	; () banked
  1572  00391E  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1573  003920  0100               	movlb	0	; () banked
  1574  003922  5D7A               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1575  003924  0100               	movlb	0	; () banked
  1576  003926  517B               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1577  003928  0A80               	xorlw	128
  1578  00392A  0100               	movlb	0	; () banked
  1579  00392C  6F79               	movwf	??_util_waits_delay_hours& (0+255),b
  1580  00392E  0100               	movlb	0	; () banked
  1581  003930  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1582  003932  0A80               	xorlw	128
  1583  003934  0100               	movlb	0	; () banked
  1584  003936  5979               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1585  003938  B0D8               	btfsc	status,0,c
  1586  00393A  0012               	return	
  1587  00393C  D7E5               	goto	l6078
  1588  00393E                     __end_of_util_waits_delay_hours:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _util_waits_delay_mins *****************
  1601 ;; Defined at:
  1602 ;;		line 24 in file "easat2_util_waits.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  minutes         2   21[BANK0 ] int 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  i               2   42[COMRAM] int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1616 ;;      Params:         0       2       0       0       0       0       0
  1617 ;;      Locals:         2       0       0       0       0       0       0
  1618 ;;      Temps:          1       0       0       0       0       0       0
  1619 ;;      Totals:         3       2       0       0       0       0       0
  1620 ;;Total ram usage:        5 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		_util_waits_delay_secs
  1625 ;; This function is called by:
  1626 ;;		_main_loop
  1627 ;;		_util_waits_delay_hours
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text3
  1632  0039C0                     __ptext3:
  1633                           	opt stack 0
  1634  0039C0                     _util_waits_delay_mins:
  1635                           	opt stack 24
  1636                           
  1637                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;incstack = 0
  1641  0039C0  0E00               	movlw	0
  1642  0039C2  6E2C               	movwf	util_waits_delay_mins@i+1,c
  1643  0039C4  0E00               	movlw	0
  1644  0039C6  6E2B               	movwf	util_waits_delay_mins@i,c
  1645  0039C8  D009               	goto	l5308
  1646  0039CA                     l5304:
  1647                           
  1648                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1649  0039CA  0E00               	movlw	0
  1650  0039CC  0100               	movlb	0	; () banked
  1651  0039CE  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1652  0039D0  0E3C               	movlw	60
  1653  0039D2  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1654  0039D4  ECE9  F01B         	call	_util_waits_delay_secs	;wreg free
  1655  0039D8  4A2B               	infsnz	util_waits_delay_mins@i,f,c
  1656  0039DA  2A2C               	incf	util_waits_delay_mins@i+1,f,c
  1657  0039DC                     l5308:
  1658  0039DC  0100               	movlb	0	; () banked
  1659  0039DE  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1660  0039E0  5C2B               	subwf	util_waits_delay_mins@i,w,c
  1661  0039E2  502C               	movf	util_waits_delay_mins@i+1,w,c
  1662  0039E4  0A80               	xorlw	128
  1663  0039E6  6E2A               	movwf	??_util_waits_delay_mins& (0+255),c
  1664  0039E8  0100               	movlb	0	; () banked
  1665  0039EA  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1666  0039EC  0A80               	xorlw	128
  1667  0039EE  582A               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1668  0039F0  B0D8               	btfsc	status,0,c
  1669  0039F2  0012               	return	
  1670  0039F4  D7EA               	goto	l5304
  1671  0039F6                     __end_of_util_waits_delay_mins:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           postinc0	equ	0xFEE
  1678                           wreg	equ	0xFE8
  1679                           postdec1	equ	0xFE5
  1680                           fsr1l	equ	0xFE1
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _util_getTemperature *****************
  1684 ;; Defined at:
  1685 ;;		line 118 in file "easat2_util_inputs.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  bit_mem       144    0[BANK1 ] int [72]
  1690 ;;  byte_mem       18  144[BANK1 ] int [9]
  1691 ;;  temperature     3  201[BANK1 ] float 
  1692 ;;  sign            3  164[BANK1 ] float 
  1693 ;;  i               2  204[BANK1 ] int 
  1694 ;;  bit_in_byte     2  199[BANK1 ] int 
  1695 ;;  num_byte        2  197[BANK1 ] int 
  1696 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1697 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1698 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1699 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1700 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1701 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1702 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1703 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1704 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1705 ;;  num_bit         2  162[BANK1 ] int 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  3   63[BANK0 ] float 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       3       0       0       0       0       0
  1716 ;;      Locals:         0       0     206       0       0       0       0
  1717 ;;      Temps:          0       3       0       0       0       0       0
  1718 ;;      Totals:         0       6     206       0       0       0       0
  1719 ;;Total ram usage:      212 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		___awtoft
  1724 ;;		___ftadd
  1725 ;;		___ftdiv
  1726 ;;		___ftmul
  1727 ;;		_util_onewire_read_byte
  1728 ;;		_util_onewire_reset
  1729 ;;		_util_onewire_write_byte
  1730 ;;		_util_waits_delay_secs
  1731 ;; This function is called by:
  1732 ;;		_main_loop
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text4
  1737  000C48                     __ptext4:
  1738                           	opt stack 0
  1739  000C48                     _util_getTemperature:
  1740                           	opt stack 24
  1741                           
  1742                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1743                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1744                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;incstack = 0
  1748  000C48  0E00               	movlw	0
  1749  000C4A  0101               	movlb	1	; () banked
  1750  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1751  000C4E  0E00               	movlw	0
  1752  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1753                           
  1754                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1755  000C52  0E00               	movlw	0
  1756  000C54  0101               	movlb	1	; () banked
  1757  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1758  000C58  0E00               	movlw	0
  1759  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1760                           
  1761                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1762  000C5C  0E00               	movlw	0
  1763  000C5E  0101               	movlb	1	; () banked
  1764  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1765  000C62  0E00               	movlw	0
  1766  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1767                           
  1768                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1769  000C66  0E00               	movlw	0
  1770  000C68  0101               	movlb	1	; () banked
  1771  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1772  000C6C  0E00               	movlw	0
  1773  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1774                           
  1775                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1776  000C70  0E00               	movlw	0
  1777  000C72  0101               	movlb	1	; () banked
  1778  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1779  000C76  0E00               	movlw	0
  1780  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1781                           
  1782                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1783  000C7A  0E00               	movlw	0
  1784  000C7C  0101               	movlb	1	; () banked
  1785  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1786  000C80  0E00               	movlw	0
  1787  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1788                           
  1789                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1790  000C84  0E00               	movlw	0
  1791  000C86  0101               	movlb	1	; () banked
  1792  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1793  000C8A  0E00               	movlw	0
  1794  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1795                           
  1796                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1797  000C8E  0E00               	movlw	0
  1798  000C90  0101               	movlb	1	; () banked
  1799  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1800  000C94  0E00               	movlw	0
  1801  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1802                           
  1803                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1804  000C98  0E00               	movlw	0
  1805  000C9A  0101               	movlb	1	; () banked
  1806  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1807  000C9E  0E00               	movlw	0
  1808  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1809                           
  1810                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1811  000CA2  0E00               	movlw	0
  1812  000CA4  0101               	movlb	1	; () banked
  1813  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1814  000CA8  0E00               	movlw	0
  1815  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1816  000CAC  0E00               	movlw	0
  1817  000CAE  0101               	movlb	1	; () banked
  1818  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1819  000CB2  0E00               	movlw	0
  1820  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1821  000CB6  0E00               	movlw	0
  1822  000CB8  0101               	movlb	1	; () banked
  1823  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1824  000CBC  0E00               	movlw	0
  1825  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1826                           
  1827                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1828  000CC0  0E00               	movlw	0
  1829  000CC2  0101               	movlb	1	; () banked
  1830  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1831  000CC6  0E00               	movlw	0
  1832  000CC8  0101               	movlb	1	; () banked
  1833  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1834  000CCC  0E00               	movlw	0
  1835  000CCE  0101               	movlb	1	; () banked
  1836  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1837                           
  1838                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1839  000CD2  0E00               	movlw	0
  1840  000CD4  0101               	movlb	1	; () banked
  1841  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1842  000CD8  0E80               	movlw	128
  1843  000CDA  0101               	movlb	1	; () banked
  1844  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1845  000CDE  0E3F               	movlw	63
  1846  000CE0  0101               	movlb	1	; () banked
  1847  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1848                           
  1849                           ;easat2_util_inputs.c: 137: int i = 0;
  1850  000CE4  0E00               	movlw	0
  1851  000CE6  0101               	movlb	1	; () banked
  1852  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1853  000CEA  0E00               	movlw	0
  1854  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1858  000CEE  EC9F  F01C         	call	_util_onewire_reset	;wreg free
  1859  000CF2  0100               	movlb	0	; () banked
  1860  000CF4  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1861  000CF6  0100               	movlb	0	; () banked
  1862  000CF8  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1863  000CFA  B4D8               	btfsc	status,2,c
  1864  000CFC  D00A               	goto	l5926
  1865                           
  1866                           ; BSR set to: 0
  1867  000CFE  0E33               	movlw	51
  1868  000D00  0100               	movlb	0	; () banked
  1869  000D02  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1870  000D04  0EC6               	movlw	198
  1871  000D06  0100               	movlb	0	; () banked
  1872  000D08  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1873  000D0A  0EC2               	movlw	194
  1874  000D0C  0100               	movlb	0	; () banked
  1875  000D0E  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1876                           
  1877                           ; BSR set to: 0
  1878  000D10  0012               	return	
  1879  000D12                     l5926:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1883  000D12  0E00               	movlw	0
  1884  000D14  0100               	movlb	0	; () banked
  1885  000D16  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1886  000D18  0ECC               	movlw	204
  1887  000D1A  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1888  000D1C  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1889                           
  1890                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1891  000D20  0E00               	movlw	0
  1892  000D22  0100               	movlb	0	; () banked
  1893  000D24  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1894  000D26  0E44               	movlw	68
  1895  000D28  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1896  000D2A  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1897                           
  1898                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1899  000D2E  8692               	bsf	3986,3,c	;volatile
  1900                           
  1901                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1902  000D30  0E00               	movlw	0
  1903  000D32  0101               	movlb	1	; () banked
  1904  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1905  000D36  0E00               	movlw	0
  1906  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1907  000D3A  D00A               	goto	l5936
  1908  000D3C                     l5932:
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1912  000D3C  0E00               	movlw	0
  1913  000D3E  0100               	movlb	0	; () banked
  1914  000D40  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1915  000D42  0E01               	movlw	1
  1916  000D44  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1917  000D46  ECE9  F01B         	call	_util_waits_delay_secs	;wreg free
  1918  000D4A  0101               	movlb	1	; () banked
  1919  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1920  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1921  000D50                     l5936:
  1922                           
  1923                           ; BSR set to: 1
  1924  000D50  0101               	movlb	1	; () banked
  1925  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1926  000D54  D008               	goto	l5938
  1927  000D56  0101               	movlb	1	; () banked
  1928  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1929  000D5A  E107               	bnz	l5940
  1930  000D5C  0E05               	movlw	5
  1931  000D5E  0101               	movlb	1	; () banked
  1932  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1933  000D62  B0D8               	btfsc	status,0,c
  1934  000D64  D002               	goto	l5940
  1935  000D66                     l5938:
  1936                           
  1937                           ; BSR set to: 1
  1938  000D66  A680               	btfss	3968,3,c	;volatile
  1939  000D68  D7E9               	goto	l5932
  1940  000D6A                     l5940:
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1944  000D6A  0E05               	movlw	5
  1945  000D6C  0101               	movlb	1	; () banked
  1946  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1947  000D70  0101               	movlb	1	; () banked
  1948  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1949  000D74  A4D8               	btfss	status,2,c
  1950  000D76  D00A               	goto	l5946
  1951                           
  1952                           ; BSR set to: 1
  1953  000D78  0E66               	movlw	102
  1954  000D7A  0100               	movlb	0	; () banked
  1955  000D7C  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1956  000D7E  0EC6               	movlw	198
  1957  000D80  0100               	movlb	0	; () banked
  1958  000D82  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1959  000D84  0EC2               	movlw	194
  1960  000D86  0100               	movlb	0	; () banked
  1961  000D88  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964  000D8A  0012               	return	
  1965  000D8C                     l5946:
  1966                           
  1967                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1968  000D8C  EC9F  F01C         	call	_util_onewire_reset	;wreg free
  1969  000D90  0100               	movlb	0	; () banked
  1970  000D92  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1971  000D94  0100               	movlb	0	; () banked
  1972  000D96  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1973  000D98  B4D8               	btfsc	status,2,c
  1974  000D9A  D00A               	goto	l5952
  1975                           
  1976                           ; BSR set to: 0
  1977  000D9C  0E9A               	movlw	154
  1978  000D9E  0100               	movlb	0	; () banked
  1979  000DA0  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1980  000DA2  0EC6               	movlw	198
  1981  000DA4  0100               	movlb	0	; () banked
  1982  000DA6  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1983  000DA8  0EC2               	movlw	194
  1984  000DAA  0100               	movlb	0	; () banked
  1985  000DAC  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1986                           
  1987                           ; BSR set to: 0
  1988  000DAE  0012               	return	
  1989  000DB0                     l5952:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1993  000DB0  0E00               	movlw	0
  1994  000DB2  0100               	movlb	0	; () banked
  1995  000DB4  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1996  000DB6  0ECC               	movlw	204
  1997  000DB8  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1998  000DBA  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1999                           
  2000                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  2001  000DBE  0E00               	movlw	0
  2002  000DC0  0100               	movlb	0	; () banked
  2003  000DC2  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2004  000DC4  0EBE               	movlw	190
  2005  000DC6  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  2006  000DC8  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2007                           
  2008                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  2009  000DCC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2010  000DD0  C073  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2011  000DD4  C074  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2012                           
  2013                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  2014  000DD8  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2015  000DDC  C073  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2016  000DE0  C074  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2017                           
  2018                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  2019  000DE4  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2020  000DE8  C073  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2021  000DEC  C074  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2022                           
  2023                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  2024  000DF0  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2025  000DF4  C073  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2026  000DF8  C074  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2027                           
  2028                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2029  000DFC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2030  000E00  C073  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2031  000E04  C074  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2032                           
  2033                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2034  000E08  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2035  000E0C  C073  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2036  000E10  C074  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2037                           
  2038                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2039  000E14  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2040  000E18  C073  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2041  000E1C  C074  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2042                           
  2043                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2044  000E20  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2045  000E24  C073  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2046  000E28  C074  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2047                           
  2048                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2049  000E2C  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2050  000E30  C073  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2051  000E34  C074  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2052                           
  2053                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2054  000E38  0E00               	movlw	0
  2055  000E3A  0101               	movlb	1	; () banked
  2056  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2057  000E3E  0E00               	movlw	0
  2058  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2059  000E42                     l5956:
  2060                           
  2061                           ; BSR set to: 1
  2062  000E42  0101               	movlb	1	; () banked
  2063  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2064  000E46  D008               	goto	l5960
  2065  000E48  0101               	movlb	1	; () banked
  2066  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2067  000E4C  E14F               	bnz	l5978
  2068  000E4E  0E09               	movlw	9
  2069  000E50  0101               	movlb	1	; () banked
  2070  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2071  000E54  B0D8               	btfsc	status,0,c
  2072  000E56  D04A               	goto	l5978
  2073  000E58                     l5960:
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2077  000E58  0E00               	movlw	0
  2078  000E5A  0101               	movlb	1	; () banked
  2079  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2080  000E5E  0E00               	movlw	0
  2081  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2082  000E62                     l5962:
  2083                           
  2084                           ; BSR set to: 1
  2085  000E62  0101               	movlb	1	; () banked
  2086  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2087  000E66  D008               	goto	l5966
  2088  000E68  0101               	movlb	1	; () banked
  2089  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2090  000E6C  E13B               	bnz	l5974
  2091  000E6E  0E08               	movlw	8
  2092  000E70  0101               	movlb	1	; () banked
  2093  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2094  000E74  B0D8               	btfsc	status,0,c
  2095  000E76  D036               	goto	l5974
  2096  000E78                     l5966:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2100  000E78  C1C7  F0A2         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2101  000E7C  90D8               	bcf	status,0,c
  2102  000E7E  0101               	movlb	1	; () banked
  2103  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2104  000E82  6ED9               	movwf	fsr2l,c
  2105  000E84  0101               	movlb	1	; () banked
  2106  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2107  000E88  6EDA               	movwf	fsr2h,c
  2108  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2109  000E8C  26D9               	addwf	fsr2l,f,c
  2110  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2111  000E90  22DA               	addwfc	fsr2h,f,c
  2112  000E92  CFDE F0A3          	movff	postinc2,??_util_getTemperature+1
  2113  000E96  CFDD F0A4          	movff	postdec2,??_util_getTemperature+2
  2114  000E9A  0100               	movlb	0	; () banked
  2115  000E9C  2BA2               	incf	??_util_getTemperature& (0+255),f,b
  2116  000E9E  D004               	goto	u6184
  2117  000EA0                     u6185:
  2118  000EA0  0100               	movlb	0	; () banked
  2119  000EA2  35A4               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2120  000EA4  33A4               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2121  000EA6  33A3               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2122  000EA8                     u6184:
  2123  000EA8  0100               	movlb	0	; () banked
  2124  000EAA  2FA2               	decfsz	??_util_getTemperature& (0+255),f,b
  2125  000EAC  D7F9               	goto	u6185
  2126  000EAE  0E01               	movlw	1
  2127  000EB0  0100               	movlb	0	; () banked
  2128  000EB2  17A3               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2129  000EB4  0E00               	movlw	0
  2130  000EB6  17A4               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2131  000EB8  90D8               	bcf	status,0,c
  2132  000EBA  0101               	movlb	1	; () banked
  2133  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2134  000EBE  6ED9               	movwf	fsr2l,c
  2135  000EC0  0101               	movlb	1	; () banked
  2136  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2137  000EC4  6EDA               	movwf	fsr2h,c
  2138  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2139  000EC8  26D9               	addwf	fsr2l,f,c
  2140  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2141  000ECC  22DA               	addwfc	fsr2h,f,c
  2142  000ECE  C0A3  FFDE         	movff	??_util_getTemperature+1,postinc2
  2143  000ED2  C0A4  FFDD         	movff	??_util_getTemperature+2,postdec2
  2144                           
  2145                           ; BSR set to: 1
  2146  000ED6  0101               	movlb	1	; () banked
  2147  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2148  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2149                           
  2150                           ; BSR set to: 1
  2151  000EDC  0101               	movlb	1	; () banked
  2152  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2153  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2154  000EE2  D7BF               	goto	l5962
  2155  000EE4                     l5974:
  2156                           
  2157                           ; BSR set to: 1
  2158  000EE4  0101               	movlb	1	; () banked
  2159  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2160  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2161  000EEA  D7AB               	goto	l5956
  2162  000EEC                     l5978:
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;easat2_util_inputs.c: 205: }
  2166                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2167  000EEC  0E00               	movlw	0
  2168  000EEE  0101               	movlb	1	; () banked
  2169  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2170  000EF2  0E00               	movlw	0
  2171  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2172  000EF6                     l5980:
  2173                           
  2174                           ; BSR set to: 1
  2175  000EF6  0101               	movlb	1	; () banked
  2176  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2177  000EFA  D008               	goto	l5984
  2178  000EFC  0101               	movlb	1	; () banked
  2179  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2180  000F00  E154               	bnz	l6006
  2181  000F02  0E48               	movlw	72
  2182  000F04  0101               	movlb	1	; () banked
  2183  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2184  000F08  B0D8               	btfsc	status,0,c
  2185  000F0A  D04F               	goto	l6006
  2186  000F0C                     l5984:
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2190  000F0C  90D8               	bcf	status,0,c
  2191  000F0E  0101               	movlb	1	; () banked
  2192  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2193  000F12  6ED9               	movwf	fsr2l,c
  2194  000F14  0101               	movlb	1	; () banked
  2195  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2196  000F18  6EDA               	movwf	fsr2h,c
  2197  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2198  000F1C  26D9               	addwf	fsr2l,f,c
  2199  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2200  000F20  22DA               	addwfc	fsr2h,f,c
  2201  000F22  CFDE F0A2          	movff	postinc2,??_util_getTemperature
  2202  000F26  CFDD F0A3          	movff	postdec2,??_util_getTemperature+1
  2203  000F2A  0101               	movlb	1	; () banked
  2204  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2205  000F2E  0100               	movlb	0	; () banked
  2206  000F30  19A2               	xorwf	??_util_getTemperature& (0+255),w,b
  2207  000F32  0101               	movlb	1	; () banked
  2208  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2209  000F36  0101               	movlb	1	; () banked
  2210  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2211  000F3A  0100               	movlb	0	; () banked
  2212  000F3C  19A3               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2213  000F3E  0101               	movlb	1	; () banked
  2214  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2218  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2219  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2223  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2224  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2228  000F52  0101               	movlb	1	; () banked
  2229  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2230  000F56  0101               	movlb	1	; () banked
  2231  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2232  000F5A  0101               	movlb	1	; () banked
  2233  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2234  000F5E  0101               	movlb	1	; () banked
  2235  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2236  000F62  0101               	movlb	1	; () banked
  2237  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2238  000F66  0101               	movlb	1	; () banked
  2239  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2243  000F6A  0101               	movlb	1	; () banked
  2244  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2245  000F6E  0101               	movlb	1	; () banked
  2246  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2247  000F72  0101               	movlb	1	; () banked
  2248  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2249  000F76  0101               	movlb	1	; () banked
  2250  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2251  000F7A  0101               	movlb	1	; () banked
  2252  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2253  000F7E  0101               	movlb	1	; () banked
  2254  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2258  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2259  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2263  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2264  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2268  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2269  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2273  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2274  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2275                           
  2276                           ; BSR set to: 1
  2277  000FA2  0101               	movlb	1	; () banked
  2278  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2279  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2280  000FA8  D7A6               	goto	l5980
  2281  000FAA                     l6006:
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;easat2_util_inputs.c: 225: }
  2285                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2286                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2287                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2288  000FAA  0101               	movlb	1	; () banked
  2289  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2290  000FAE  0101               	movlb	1	; () banked
  2291  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2292  000FB2  A4D8               	btfss	status,2,c
  2293  000FB4  D02A               	goto	l6022
  2294                           
  2295                           ; BSR set to: 1
  2296  000FB6  0101               	movlb	1	; () banked
  2297  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2298  000FBA  0101               	movlb	1	; () banked
  2299  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2300  000FBE  A4D8               	btfss	status,2,c
  2301  000FC0  D024               	goto	l6022
  2302                           
  2303                           ; BSR set to: 1
  2304  000FC2  0101               	movlb	1	; () banked
  2305  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2306  000FC6  0101               	movlb	1	; () banked
  2307  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2308  000FCA  B4D8               	btfsc	status,2,c
  2309  000FCC  D006               	goto	l6014
  2310                           
  2311                           ; BSR set to: 1
  2312  000FCE  0101               	movlb	1	; () banked
  2313  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2314  000FD2  0101               	movlb	1	; () banked
  2315  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2316  000FD6  A4D8               	btfss	status,2,c
  2317  000FD8  D018               	goto	l6022
  2318  000FDA                     l6014:
  2319                           
  2320                           ; BSR set to: 1
  2321  000FDA  0101               	movlb	1	; () banked
  2322  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2323  000FDE  0101               	movlb	1	; () banked
  2324  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2325  000FE2  A4D8               	btfss	status,2,c
  2326  000FE4  D012               	goto	l6022
  2327                           
  2328                           ; BSR set to: 1
  2329  000FE6  0101               	movlb	1	; () banked
  2330  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2331  000FEA  0101               	movlb	1	; () banked
  2332  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2333  000FEE  B4D8               	btfsc	status,2,c
  2334  000FF0  D006               	goto	l6020
  2335                           
  2336                           ; BSR set to: 1
  2337  000FF2  0101               	movlb	1	; () banked
  2338  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2339  000FF6  0101               	movlb	1	; () banked
  2340  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2341  000FFA  A4D8               	btfss	status,2,c
  2342  000FFC  D006               	goto	l6022
  2343  000FFE                     l6020:
  2344                           
  2345                           ; BSR set to: 1
  2346  000FFE  0101               	movlb	1	; () banked
  2347  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2348  001002  0101               	movlb	1	; () banked
  2349  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2350  001006  B4D8               	btfsc	status,2,c
  2351  001008  D00A               	goto	l6026
  2352  00100A                     l6022:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;easat2_util_inputs.c: 232: return -99.7;
  2356  00100A  0E66               	movlw	102
  2357  00100C  0100               	movlb	0	; () banked
  2358  00100E  6F9F               	movwf	?_util_getTemperature& (0+255),b
  2359  001010  0EC7               	movlw	199
  2360  001012  0100               	movlb	0	; () banked
  2361  001014  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  2362  001016  0EC2               	movlw	194
  2363  001018  0100               	movlb	0	; () banked
  2364  00101A  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  2365                           
  2366                           ; BSR set to: 0
  2367  00101C  0012               	return	
  2368  00101E                     l6026:
  2369                           
  2370                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2371  00101E  0101               	movlb	1	; () banked
  2372  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2373  001022  0101               	movlb	1	; () banked
  2374  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2375  001026  A4D8               	btfss	status,2,c
  2376  001028  D008               	goto	l6030
  2377                           
  2378                           ; BSR set to: 1
  2379  00102A  0E00               	movlw	0
  2380  00102C  0101               	movlb	1	; () banked
  2381  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2382  001030  0E80               	movlw	128
  2383  001032  0101               	movlb	1	; () banked
  2384  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2385  001036  0E3F               	movlw	63
  2386  001038  D007               	goto	L1
  2387  00103A                     l6030:
  2388                           
  2389                           ; BSR set to: 1
  2390  00103A  0E00               	movlw	0
  2391  00103C  0101               	movlb	1	; () banked
  2392  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2393  001040  0E80               	movlw	128
  2394  001042  0101               	movlb	1	; () banked
  2395  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2396  001046  0EBF               	movlw	191
  2397  001048                     L1:
  2398  001048  0101               	movlb	1	; () banked
  2399  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2403                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2404                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2405                           
  2406                           ; BSR set to: 1
  2407  00104C  0E00               	movlw	0
  2408  00104E  0100               	movlb	0	; () banked
  2409  001050  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2410  001052  0E00               	movlw	0
  2411  001054  0100               	movlb	0	; () banked
  2412  001056  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2413  001058  0E41               	movlw	65
  2414  00105A  0100               	movlb	0	; () banked
  2415  00105C  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2416  00105E  C102  F076         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2417  001062  C103  F077         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2418  001066  ECC0  F01C         	call	___awtoft	;wreg free
  2419  00106A  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2420  00106E  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2421  001072  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2422  001076  EC1B  F016         	call	___ftdiv	;wreg free
  2423  00107A  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2424  00107E  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2425  001082  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2426  001086  0E00               	movlw	0
  2427  001088  0100               	movlb	0	; () banked
  2428  00108A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2429  00108C  0E80               	movlw	128
  2430  00108E  0100               	movlb	0	; () banked
  2431  001090  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2432  001092  0E41               	movlw	65
  2433  001094  0100               	movlb	0	; () banked
  2434  001096  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2435  001098  C100  F076         	movff	util_getTemperature@bit_mem,___awtoft@c
  2436  00109C  C101  F077         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2437  0010A0  ECC0  F01C         	call	___awtoft	;wreg free
  2438  0010A4  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2439  0010A8  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2440  0010AC  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2441  0010B0  EC1B  F016         	call	___ftdiv	;wreg free
  2442  0010B4  C079  F093         	movff	?___ftdiv,___ftadd@f1
  2443  0010B8  C07A  F094         	movff	?___ftdiv+1,___ftadd@f1+1
  2444  0010BC  C07B  F095         	movff	?___ftdiv+2,___ftadd@f1+2
  2445  0010C0  EC9A  F00F         	call	___ftadd	;wreg free
  2446  0010C4  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2289
  2447  0010C8  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2289+1
  2448  0010CC  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2289+2
  2449                           
  2450                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2451                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2452                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2453  0010D0  0E00               	movlw	0
  2454  0010D2  0100               	movlb	0	; () banked
  2455  0010D4  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2456  0010D6  0E80               	movlw	128
  2457  0010D8  0100               	movlb	0	; () banked
  2458  0010DA  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2459  0010DC  0E40               	movlw	64
  2460  0010DE  0100               	movlb	0	; () banked
  2461  0010E0  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2462  0010E2  C104  F076         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2463  0010E6  C105  F077         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2464  0010EA  ECC0  F01C         	call	___awtoft	;wreg free
  2465  0010EE  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2466  0010F2  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2467  0010F6  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2468  0010FA  EC1B  F016         	call	___ftdiv	;wreg free
  2469  0010FE  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2470  001102  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2471  001106  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2472  00110A  C1A7  F093         	movff	_util_getTemperature$2289,___ftadd@f1
  2473  00110E  C1A8  F094         	movff	_util_getTemperature$2289+1,___ftadd@f1+1
  2474  001112  C1A9  F095         	movff	_util_getTemperature$2289+2,___ftadd@f1+2
  2475  001116  EC9A  F00F         	call	___ftadd	;wreg free
  2476  00111A  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2290
  2477  00111E  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2290+1
  2478  001122  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2290+2
  2479                           
  2480                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2481                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2482                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2483  001126  0E00               	movlw	0
  2484  001128  0100               	movlb	0	; () banked
  2485  00112A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2486  00112C  0E00               	movlw	0
  2487  00112E  0100               	movlb	0	; () banked
  2488  001130  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2489  001132  0E40               	movlw	64
  2490  001134  0100               	movlb	0	; () banked
  2491  001136  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2492  001138  C106  F076         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2493  00113C  C107  F077         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2494  001140  ECC0  F01C         	call	___awtoft	;wreg free
  2495  001144  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2496  001148  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2497  00114C  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2498  001150  EC1B  F016         	call	___ftdiv	;wreg free
  2499  001154  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2500  001158  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2501  00115C  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2502  001160  C1AA  F093         	movff	_util_getTemperature$2290,___ftadd@f1
  2503  001164  C1AB  F094         	movff	_util_getTemperature$2290+1,___ftadd@f1+1
  2504  001168  C1AC  F095         	movff	_util_getTemperature$2290+2,___ftadd@f1+2
  2505  00116C  EC9A  F00F         	call	___ftadd	;wreg free
  2506  001170  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2291
  2507  001174  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2291+1
  2508  001178  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2291+2
  2509                           
  2510                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2511                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2512                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2513  00117C  C108  F076         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2514  001180  C109  F077         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2515  001184  ECC0  F01C         	call	___awtoft	;wreg free
  2516  001188  C076  F096         	movff	?___awtoft,___ftadd@f2
  2517  00118C  C077  F097         	movff	?___awtoft+1,___ftadd@f2+1
  2518  001190  C078  F098         	movff	?___awtoft+2,___ftadd@f2+2
  2519  001194  C1AD  F093         	movff	_util_getTemperature$2291,___ftadd@f1
  2520  001198  C1AE  F094         	movff	_util_getTemperature$2291+1,___ftadd@f1+1
  2521  00119C  C1AF  F095         	movff	_util_getTemperature$2291+2,___ftadd@f1+2
  2522  0011A0  EC9A  F00F         	call	___ftadd	;wreg free
  2523  0011A4  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2292
  2524  0011A8  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2292+1
  2525  0011AC  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2292+2
  2526                           
  2527                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2528                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2529                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2530  0011B0  C1B0  F093         	movff	_util_getTemperature$2292,___ftadd@f1
  2531  0011B4  C1B1  F094         	movff	_util_getTemperature$2292+1,___ftadd@f1+1
  2532  0011B8  C1B2  F095         	movff	_util_getTemperature$2292+2,___ftadd@f1+2
  2533  0011BC  0E00               	movlw	0
  2534  0011BE  0100               	movlb	0	; () banked
  2535  0011C0  6F80               	movwf	___ftmul@f2& (0+255),b
  2536  0011C2  0E00               	movlw	0
  2537  0011C4  0100               	movlb	0	; () banked
  2538  0011C6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2539  0011C8  0E40               	movlw	64
  2540  0011CA  0100               	movlb	0	; () banked
  2541  0011CC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2542  0011CE  C10A  F076         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2543  0011D2  C10B  F077         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2544  0011D6  ECC0  F01C         	call	___awtoft	;wreg free
  2545  0011DA  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2546  0011DE  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2547  0011E2  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2548  0011E6  ECD0  F014         	call	___ftmul	;wreg free
  2549  0011EA  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2550  0011EE  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2551  0011F2  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2552  0011F6  EC9A  F00F         	call	___ftadd	;wreg free
  2553  0011FA  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2554  0011FE  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2555  001202  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2556                           
  2557                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2558                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2559                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2560                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2561  001206  0E00               	movlw	0
  2562  001208  0100               	movlb	0	; () banked
  2563  00120A  6F80               	movwf	___ftmul@f2& (0+255),b
  2564  00120C  0E00               	movlw	0
  2565  00120E  0100               	movlb	0	; () banked
  2566  001210  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2567  001212  0E41               	movlw	65
  2568  001214  0100               	movlb	0	; () banked
  2569  001216  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2570  001218  C10E  F076         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2571  00121C  C10F  F077         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2572  001220  ECC0  F01C         	call	___awtoft	;wreg free
  2573  001224  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2574  001228  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2575  00122C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2576  001230  ECD0  F014         	call	___ftmul	;wreg free
  2577  001234  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2578  001238  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2579  00123C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2580  001240  0E00               	movlw	0
  2581  001242  0100               	movlb	0	; () banked
  2582  001244  6F80               	movwf	___ftmul@f2& (0+255),b
  2583  001246  0E80               	movlw	128
  2584  001248  0100               	movlb	0	; () banked
  2585  00124A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2586  00124C  0E40               	movlw	64
  2587  00124E  0100               	movlb	0	; () banked
  2588  001250  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2589  001252  C10C  F076         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2590  001256  C10D  F077         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2591  00125A  ECC0  F01C         	call	___awtoft	;wreg free
  2592  00125E  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2593  001262  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2594  001266  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2595  00126A  ECD0  F014         	call	___ftmul	;wreg free
  2596  00126E  C07D  F093         	movff	?___ftmul,___ftadd@f1
  2597  001272  C07E  F094         	movff	?___ftmul+1,___ftadd@f1+1
  2598  001276  C07F  F095         	movff	?___ftmul+2,___ftadd@f1+2
  2599  00127A  EC9A  F00F         	call	___ftadd	;wreg free
  2600  00127E  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2289
  2601  001282  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2289+1
  2602  001286  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2289+2
  2603                           
  2604                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2605                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2606                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2607                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2608  00128A  0E00               	movlw	0
  2609  00128C  0100               	movlb	0	; () banked
  2610  00128E  6F80               	movwf	___ftmul@f2& (0+255),b
  2611  001290  0E80               	movlw	128
  2612  001292  0100               	movlb	0	; () banked
  2613  001294  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2614  001296  0E41               	movlw	65
  2615  001298  0100               	movlb	0	; () banked
  2616  00129A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2617  00129C  C110  F076         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2618  0012A0  C111  F077         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2619  0012A4  ECC0  F01C         	call	___awtoft	;wreg free
  2620  0012A8  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2621  0012AC  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2622  0012B0  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2623  0012B4  ECD0  F014         	call	___ftmul	;wreg free
  2624  0012B8  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2625  0012BC  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2626  0012C0  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2627  0012C4  C1A7  F093         	movff	_util_getTemperature$2289,___ftadd@f1
  2628  0012C8  C1A8  F094         	movff	_util_getTemperature$2289+1,___ftadd@f1+1
  2629  0012CC  C1A9  F095         	movff	_util_getTemperature$2289+2,___ftadd@f1+2
  2630  0012D0  EC9A  F00F         	call	___ftadd	;wreg free
  2631  0012D4  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2290
  2632  0012D8  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2290+1
  2633  0012DC  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2290+2
  2634                           
  2635                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2636                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2637                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2638                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2639  0012E0  0E00               	movlw	0
  2640  0012E2  0100               	movlb	0	; () banked
  2641  0012E4  6F80               	movwf	___ftmul@f2& (0+255),b
  2642  0012E6  0E00               	movlw	0
  2643  0012E8  0100               	movlb	0	; () banked
  2644  0012EA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2645  0012EC  0E42               	movlw	66
  2646  0012EE  0100               	movlb	0	; () banked
  2647  0012F0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2648  0012F2  C112  F076         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2649  0012F6  C113  F077         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2650  0012FA  ECC0  F01C         	call	___awtoft	;wreg free
  2651  0012FE  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2652  001302  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2653  001306  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2654  00130A  ECD0  F014         	call	___ftmul	;wreg free
  2655  00130E  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2656  001312  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2657  001316  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2658  00131A  C1AA  F093         	movff	_util_getTemperature$2290,___ftadd@f1
  2659  00131E  C1AB  F094         	movff	_util_getTemperature$2290+1,___ftadd@f1+1
  2660  001322  C1AC  F095         	movff	_util_getTemperature$2290+2,___ftadd@f1+2
  2661  001326  EC9A  F00F         	call	___ftadd	;wreg free
  2662  00132A  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2291
  2663  00132E  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2291+1
  2664  001332  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2291+2
  2665                           
  2666                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2667                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2668                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2669                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2670  001336  0E00               	movlw	0
  2671  001338  0100               	movlb	0	; () banked
  2672  00133A  6F80               	movwf	___ftmul@f2& (0+255),b
  2673  00133C  0E80               	movlw	128
  2674  00133E  0100               	movlb	0	; () banked
  2675  001340  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2676  001342  0E42               	movlw	66
  2677  001344  0100               	movlb	0	; () banked
  2678  001346  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2679  001348  C114  F076         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2680  00134C  C115  F077         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2681  001350  ECC0  F01C         	call	___awtoft	;wreg free
  2682  001354  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2683  001358  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2684  00135C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2685  001360  ECD0  F014         	call	___ftmul	;wreg free
  2686  001364  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2687  001368  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2688  00136C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2689  001370  C1AD  F093         	movff	_util_getTemperature$2291,___ftadd@f1
  2690  001374  C1AE  F094         	movff	_util_getTemperature$2291+1,___ftadd@f1+1
  2691  001378  C1AF  F095         	movff	_util_getTemperature$2291+2,___ftadd@f1+2
  2692  00137C  EC9A  F00F         	call	___ftadd	;wreg free
  2693  001380  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2292
  2694  001384  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2292+1
  2695  001388  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2292+2
  2696                           
  2697                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2698                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2699                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2700                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2701  00138C  C1B0  F093         	movff	_util_getTemperature$2292,___ftadd@f1
  2702  001390  C1B1  F094         	movff	_util_getTemperature$2292+1,___ftadd@f1+1
  2703  001394  C1B2  F095         	movff	_util_getTemperature$2292+2,___ftadd@f1+2
  2704  001398  C1C9  F096         	movff	util_getTemperature@temperature,___ftadd@f2
  2705  00139C  C1CA  F097         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2706  0013A0  C1CB  F098         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2707  0013A4  EC9A  F00F         	call	___ftadd	;wreg free
  2708  0013A8  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2709  0013AC  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2710  0013B0  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2711                           
  2712                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2713  0013B4  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2714  0013B8  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2715  0013BC  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2716  0013C0  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2717  0013C4  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2718  0013C8  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2719  0013CC  ECD0  F014         	call	___ftmul	;wreg free
  2720  0013D0  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2721  0013D4  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2722  0013D8  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2723                           
  2724                           ;easat2_util_inputs.c: 248: return temperature;
  2725  0013DC  C1C9  F09F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2726  0013E0  C1CA  F0A0         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2727  0013E4  C1CB  F0A1         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2728  0013E8  0012               	return	
  2729  0013EA                     __end_of_util_getTemperature:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           postdec1	equ	0xFE5
  2738                           fsr1l	equ	0xFE1
  2739                           postinc2	equ	0xFDE
  2740                           postdec2	equ	0xFDD
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           
  2745 ;; *************** function _util_waits_delay_secs *****************
  2746 ;; Defined at:
  2747 ;;		line 31 in file "easat2_util_waits.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  secs            2   19[BANK0 ] int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  j               2   39[COMRAM] int 
  2752 ;;  i               2   37[COMRAM] int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2762 ;;      Params:         0       2       0       0       0       0       0
  2763 ;;      Locals:         4       0       0       0       0       0       0
  2764 ;;      Temps:          1       0       0       0       0       0       0
  2765 ;;      Totals:         5       2       0       0       0       0       0
  2766 ;;Total ram usage:        7 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		_util_waits_delay_ms
  2771 ;; This function is called by:
  2772 ;;		_util_getTemperature
  2773 ;;		_util_waits_delay_mins
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text5
  2778  0037D2                     __ptext5:
  2779                           	opt stack 0
  2780  0037D2                     _util_waits_delay_secs:
  2781                           	opt stack 24
  2782                           
  2783                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2784                           
  2785                           ;incstack = 0
  2786  0037D2  0E00               	movlw	0
  2787  0037D4  6E27               	movwf	util_waits_delay_secs@i+1,c
  2788  0037D6  0E00               	movlw	0
  2789  0037D8  6E26               	movwf	util_waits_delay_secs@i,c
  2790  0037DA  D018               	goto	l4982
  2791  0037DC                     l4968:
  2792                           
  2793                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2794  0037DC  0E00               	movlw	0
  2795  0037DE  6E29               	movwf	util_waits_delay_secs@j+1,c
  2796  0037E0  0E00               	movlw	0
  2797  0037E2  6E28               	movwf	util_waits_delay_secs@j,c
  2798  0037E4                     l4970:
  2799  0037E4  BE29               	btfsc	util_waits_delay_secs@j+1,7,c
  2800  0037E6  D006               	goto	l4974
  2801  0037E8  5029               	movf	util_waits_delay_secs@j+1,w,c
  2802  0037EA  E10E               	bnz	l4980
  2803  0037EC  0E0A               	movlw	10
  2804  0037EE  5C28               	subwf	util_waits_delay_secs@j,w,c
  2805  0037F0  B0D8               	btfsc	status,0,c
  2806  0037F2  D00A               	goto	l4980
  2807  0037F4                     l4974:
  2808                           
  2809                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2810  0037F4  0E00               	movlw	0
  2811  0037F6  0100               	movlb	0	; () banked
  2812  0037F8  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2813  0037FA  0E64               	movlw	100
  2814  0037FC  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  2815  0037FE  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  2816  003802  4A28               	infsnz	util_waits_delay_secs@j,f,c
  2817  003804  2A29               	incf	util_waits_delay_secs@j+1,f,c
  2818  003806  D7EE               	goto	l4970
  2819  003808                     l4980:
  2820  003808  4A26               	infsnz	util_waits_delay_secs@i,f,c
  2821  00380A  2A27               	incf	util_waits_delay_secs@i+1,f,c
  2822  00380C                     l4982:
  2823  00380C  0100               	movlb	0	; () banked
  2824  00380E  5173               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2825  003810  5C26               	subwf	util_waits_delay_secs@i,w,c
  2826  003812  5027               	movf	util_waits_delay_secs@i+1,w,c
  2827  003814  0A80               	xorlw	128
  2828  003816  6E25               	movwf	??_util_waits_delay_secs& (0+255),c
  2829  003818  0100               	movlb	0	; () banked
  2830  00381A  5174               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2831  00381C  0A80               	xorlw	128
  2832  00381E  5825               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2833  003820  B0D8               	btfsc	status,0,c
  2834  003822  0012               	return	
  2835  003824  D7DB               	goto	l4968
  2836  003826                     __end_of_util_waits_delay_secs:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _util_onewire_write_byte *****************
  2853 ;; Defined at:
  2854 ;;		line 62 in file "easat2_util_onewire.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  value           2   19[BANK0 ] int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  bit7            2   35[BANK0 ] int 
  2859 ;;  bit6            2   33[BANK0 ] int 
  2860 ;;  bit5            2   31[BANK0 ] int 
  2861 ;;  bit4            2   29[BANK0 ] int 
  2862 ;;  bit3            2   27[BANK0 ] int 
  2863 ;;  bit2            2   25[BANK0 ] int 
  2864 ;;  bit1            2   23[BANK0 ] int 
  2865 ;;  bit0            2   21[BANK0 ] int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         0       2       0       0       0       0       0
  2876 ;;      Locals:         0      16       0       0       0       0       0
  2877 ;;      Temps:          3       0       0       0       0       0       0
  2878 ;;      Totals:         3      18       0       0       0       0       0
  2879 ;;Total ram usage:       21 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		_util_onewire_write_bit
  2884 ;; This function is called by:
  2885 ;;		_util_getTemperature
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text6
  2890  002552                     __ptext6:
  2891                           	opt stack 0
  2892  002552                     _util_onewire_write_byte:
  2893                           	opt stack 24
  2894                           
  2895                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2896                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;incstack = 0
  2900  002552  0E01               	movlw	1
  2901  002554  0100               	movlb	0	; () banked
  2902  002556  1573               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2903  002558  0100               	movlb	0	; () banked
  2904  00255A  6F75               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2905  00255C  0100               	movlb	0	; () banked
  2906  00255E  6B76               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2907                           
  2908                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2909  002560  0100               	movlb	0	; () banked
  2910  002562  3574               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2911  002564  3174               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2912  002566  6E23               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2913  002568  0100               	movlb	0	; () banked
  2914  00256A  3173               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2915  00256C  6E22               	movwf	??_util_onewire_write_byte& (0+255),c
  2916  00256E  0E01               	movlw	1
  2917  002570  1422               	andwf	??_util_onewire_write_byte,w,c
  2918  002572  0100               	movlb	0	; () banked
  2919  002574  6F77               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2920  002576  0100               	movlb	0	; () banked
  2921  002578  6B78               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2922                           
  2923                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2924  00257A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2925  00257E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2926  002582  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2927  002584  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2928  002586  3222               	rrcf	??_util_onewire_write_byte,f,c
  2929  002588  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2930  00258A  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2931  00258C  3222               	rrcf	??_util_onewire_write_byte,f,c
  2932  00258E  0E01               	movlw	1
  2933  002590  1422               	andwf	??_util_onewire_write_byte,w,c
  2934  002592  0100               	movlb	0	; () banked
  2935  002594  6F79               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2936  002596  0100               	movlb	0	; () banked
  2937  002598  6B7A               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2938                           
  2939                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2940  00259A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2941  00259E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2942  0025A2  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2943  0025A4  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2944  0025A6  3222               	rrcf	??_util_onewire_write_byte,f,c
  2945  0025A8  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2946  0025AA  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2947  0025AC  3222               	rrcf	??_util_onewire_write_byte,f,c
  2948  0025AE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2949  0025B0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2950  0025B2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2951  0025B4  0E01               	movlw	1
  2952  0025B6  1422               	andwf	??_util_onewire_write_byte,w,c
  2953  0025B8  0100               	movlb	0	; () banked
  2954  0025BA  6F7B               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2955  0025BC  0100               	movlb	0	; () banked
  2956  0025BE  6B7C               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2957                           
  2958                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2959  0025C0  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2960  0025C4  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2961  0025C8  0E04               	movlw	4
  2962  0025CA  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2963  0025CC                     u5415:
  2964  0025CC  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2965  0025CE  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2966  0025D0  3222               	rrcf	??_util_onewire_write_byte,f,c
  2967  0025D2  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2968  0025D4  D7FB               	goto	u5415
  2969  0025D6  0E01               	movlw	1
  2970  0025D8  1422               	andwf	??_util_onewire_write_byte,w,c
  2971  0025DA  0100               	movlb	0	; () banked
  2972  0025DC  6F7D               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2973  0025DE  0100               	movlb	0	; () banked
  2974  0025E0  6B7E               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2975                           
  2976                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2977  0025E2  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2978  0025E6  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2979  0025EA  0E05               	movlw	5
  2980  0025EC  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2981  0025EE                     u5425:
  2982  0025EE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2983  0025F0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2984  0025F2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2985  0025F4  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2986  0025F6  D7FB               	goto	u5425
  2987  0025F8  0E01               	movlw	1
  2988  0025FA  1422               	andwf	??_util_onewire_write_byte,w,c
  2989  0025FC  0100               	movlb	0	; () banked
  2990  0025FE  6F7F               	movwf	util_onewire_write_byte@bit5& (0+255),b
  2991  002600  0100               	movlb	0	; () banked
  2992  002602  6B80               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  2993                           
  2994                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2995  002604  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2996  002608  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2997  00260C  0E06               	movlw	6
  2998  00260E  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2999  002610                     u5435:
  3000  002610  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3001  002612  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3002  002614  3222               	rrcf	??_util_onewire_write_byte,f,c
  3003  002616  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3004  002618  D7FB               	goto	u5435
  3005  00261A  0E01               	movlw	1
  3006  00261C  1422               	andwf	??_util_onewire_write_byte,w,c
  3007  00261E  0100               	movlb	0	; () banked
  3008  002620  6F81               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3009  002622  0100               	movlb	0	; () banked
  3010  002624  6B82               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3011                           
  3012                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3013  002626  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3014  00262A  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3015  00262E  0E07               	movlw	7
  3016  002630  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3017  002632                     u5445:
  3018  002632  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3019  002634  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3020  002636  3222               	rrcf	??_util_onewire_write_byte,f,c
  3021  002638  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3022  00263A  D7FB               	goto	u5445
  3023  00263C  0E01               	movlw	1
  3024  00263E  1422               	andwf	??_util_onewire_write_byte,w,c
  3025  002640  0100               	movlb	0	; () banked
  3026  002642  6F83               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3027  002644  0100               	movlb	0	; () banked
  3028  002646  6B84               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3032  002648  C075  F071         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3033  00264C  C076  F072         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3034  002650  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3035                           
  3036                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3037  002654  D000               	nop2		;2 cycle nop
  3038  002656  D000               	nop2		;2 cycle nop
  3039  002658  F000               	nop	
  3040                           
  3041                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3042  00265A  C077  F071         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3043  00265E  C078  F072         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3044  002662  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3045                           
  3046                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3047  002666  D000               	nop2		;2 cycle nop
  3048  002668  D000               	nop2		;2 cycle nop
  3049  00266A  F000               	nop	
  3050                           
  3051                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3052  00266C  C079  F071         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3053  002670  C07A  F072         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3054  002674  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3055                           
  3056                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3057  002678  D000               	nop2		;2 cycle nop
  3058  00267A  D000               	nop2		;2 cycle nop
  3059  00267C  F000               	nop	
  3060                           
  3061                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3062  00267E  C07B  F071         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3063  002682  C07C  F072         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3064  002686  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3065                           
  3066                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3067  00268A  D000               	nop2		;2 cycle nop
  3068  00268C  D000               	nop2		;2 cycle nop
  3069  00268E  F000               	nop	
  3070                           
  3071                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3072  002690  C07D  F071         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3073  002694  C07E  F072         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3074  002698  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3075                           
  3076                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3077  00269C  D000               	nop2		;2 cycle nop
  3078  00269E  D000               	nop2		;2 cycle nop
  3079  0026A0  F000               	nop	
  3080                           
  3081                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3082  0026A2  C07F  F071         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3083  0026A6  C080  F072         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3084  0026AA  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3085                           
  3086                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3087  0026AE  D000               	nop2		;2 cycle nop
  3088  0026B0  D000               	nop2		;2 cycle nop
  3089  0026B2  F000               	nop	
  3090                           
  3091                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3092  0026B4  C081  F071         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3093  0026B8  C082  F072         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3094  0026BC  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3095                           
  3096                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3097  0026C0  D000               	nop2		;2 cycle nop
  3098  0026C2  D000               	nop2		;2 cycle nop
  3099  0026C4  F000               	nop	
  3100                           
  3101                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3102  0026C6  C083  F071         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3103  0026CA  C084  F072         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3104  0026CE  ECFB  F01C         	call	_util_onewire_write_bit	;wreg free
  3105                           
  3106                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3107  0026D2  D000               	nop2		;2 cycle nop
  3108  0026D4  D000               	nop2		;2 cycle nop
  3109  0026D6  F000               	nop	
  3110  0026D8  0012               	return		;funcret
  3111  0026DA                     __end_of_util_onewire_write_byte:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1l	equ	0xFE1
  3121                           postinc2	equ	0xFDE
  3122                           postdec2	equ	0xFDD
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _util_onewire_write_bit *****************
  3128 ;; Defined at:
  3129 ;;		line 121 in file "easat2_util_onewire.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  bit_in          2   17[BANK0 ] int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         0       2       0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:         0       2       0       0       0       0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    3
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_util_onewire_write_byte
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text7
  3158  0039F6                     __ptext7:
  3159                           	opt stack 0
  3160  0039F6                     _util_onewire_write_bit:
  3161                           	opt stack 24
  3162                           
  3163                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3164                           
  3165                           ;incstack = 0
  3166  0039F6  9692               	bcf	3986,3,c	;volatile
  3167                           
  3168                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3169  0039F8  0100               	movlb	0	; () banked
  3170  0039FA  5171               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3171  0039FC  0100               	movlb	0	; () banked
  3172  0039FE  1172               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3173  003A00  B4D8               	btfsc	status,2,c
  3174  003A02  D009               	goto	l167
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3178  003A04  9680               	bcf	3968,3,c	;volatile
  3179                           
  3180                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3181  003A06  D000               	nop2		;2 cycle nop
  3182  003A08  D000               	nop2		;2 cycle nop
  3183  003A0A  F000               	nop	
  3184                           
  3185                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3186  003A0C  8680               	bsf	3968,3,c	;volatile
  3187                           
  3188                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3189  003A0E  0E09               	movlw	9
  3190  003A10                     u6357:
  3191  003A10  2EE8               	decfsz	wreg,f,c
  3192  003A12  D7FE               	bra	u6357
  3193                           
  3194                           ;easat2_util_onewire.c: 141: } else {
  3195  003A14  0012               	return	
  3196  003A16                     l167:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3200  003A16  9680               	bcf	3968,3,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3204  003A18  0E0B               	movlw	11
  3205  003A1A                     u6367:
  3206  003A1A  2EE8               	decfsz	wreg,f,c
  3207  003A1C  D7FE               	bra	u6367
  3208  003A1E  D000               	nop2	
  3209                           
  3210                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3211  003A20  8680               	bsf	3968,3,c	;volatile
  3212                           
  3213                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3214  003A22  D000               	nop2		;2 cycle nop
  3215  003A24  D000               	nop2		;2 cycle nop
  3216  003A26  F000               	nop	
  3217  003A28  0012               	return	
  3218  003A2A                     __end_of_util_onewire_write_bit:
  3219                           	opt stack 0
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1l	equ	0xFE1
  3228                           postinc2	equ	0xFDE
  3229                           postdec2	equ	0xFDD
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _util_onewire_reset *****************
  3235 ;; Defined at:
  3236 ;;		line 18 in file "easat2_util_onewire.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  presence        2   34[COMRAM] int 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2   17[BANK0 ] int 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3250 ;;      Params:         0       2       0       0       0       0       0
  3251 ;;      Locals:         2       0       0       0       0       0       0
  3252 ;;      Temps:          1       0       0       0       0       0       0
  3253 ;;      Totals:         3       2       0       0       0       0       0
  3254 ;;Total ram usage:        5 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    3
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_util_getTemperature
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text8
  3265  00393E                     __ptext8:
  3266                           	opt stack 0
  3267  00393E                     _util_onewire_reset:
  3268                           	opt stack 25
  3269                           
  3270                           ;easat2_util_onewire.c: 20: int presence = 1;
  3271                           
  3272                           ;incstack = 0
  3273  00393E  0E00               	movlw	0
  3274  003940  6E24               	movwf	util_onewire_reset@presence+1,c
  3275  003942  0E01               	movlw	1
  3276  003944  6E23               	movwf	util_onewire_reset@presence,c
  3277                           
  3278                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3279  003946  9692               	bcf	3986,3,c	;volatile
  3280                           
  3281                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3282  003948  9680               	bcf	3968,3,c	;volatile
  3283                           
  3284                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3285  00394A  0E5D               	movlw	93
  3286  00394C                     u6377:
  3287  00394C  2EE8               	decfsz	wreg,f,c
  3288  00394E  D7FE               	bra	u6377
  3289  003950  F000               	nop	
  3290                           
  3291                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3292  003952  8680               	bsf	3968,3,c	;volatile
  3293                           
  3294                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3295  003954  0E0B               	movlw	11
  3296  003956                     u6387:
  3297  003956  2EE8               	decfsz	wreg,f,c
  3298  003958  D7FE               	bra	u6387
  3299  00395A  D000               	nop2	
  3300                           
  3301                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3302  00395C  8692               	bsf	3986,3,c	;volatile
  3303                           
  3304                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3305  00395E  A680               	btfss	3968,3,c	;volatile
  3306  003960  D003               	goto	u5400
  3307  003962  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3308  003964  2A22               	incf	??_util_onewire_reset& (0+255),f,c
  3309  003966  D001               	goto	u5408
  3310  003968                     u5400:
  3311  003968  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3312  00396A                     u5408:
  3313  00396A  5022               	movf	??_util_onewire_reset,w,c
  3314  00396C  6E23               	movwf	util_onewire_reset@presence,c
  3315  00396E  6A24               	clrf	util_onewire_reset@presence+1,c
  3316                           
  3317                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3318  003970  0E46               	movlw	70
  3319  003972                     u6397:
  3320  003972  2EE8               	decfsz	wreg,f,c
  3321  003974  D7FE               	bra	u6397
  3322                           
  3323                           ;easat2_util_onewire.c: 56: return presence;
  3324  003976  C023  F071         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3325  00397A  C024  F072         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3326  00397E  0012               	return	
  3327  003980                     __end_of_util_onewire_reset:
  3328                           	opt stack 0
  3329                           tblptru	equ	0xFF8
  3330                           tblptrh	equ	0xFF7
  3331                           tblptrl	equ	0xFF6
  3332                           tablat	equ	0xFF5
  3333                           postinc0	equ	0xFEE
  3334                           wreg	equ	0xFE8
  3335                           postdec1	equ	0xFE5
  3336                           fsr1l	equ	0xFE1
  3337                           postinc2	equ	0xFDE
  3338                           postdec2	equ	0xFDD
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _util_onewire_read_byte *****************
  3344 ;; Defined at:
  3345 ;;		line 96 in file "easat2_util_onewire.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  value           2   51[BANK0 ] int 
  3350 ;;  bit7            2   49[BANK0 ] int 
  3351 ;;  bit6            2   47[BANK0 ] int 
  3352 ;;  bit5            2   45[BANK0 ] int 
  3353 ;;  bit4            2   43[BANK0 ] int 
  3354 ;;  bit3            2   41[BANK0 ] int 
  3355 ;;  bit2            2   39[BANK0 ] int 
  3356 ;;  bit1            2   37[BANK0 ] int 
  3357 ;;  bit0            2   35[BANK0 ] int 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2   19[BANK0 ] int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3367 ;;      Params:         0       2       0       0       0       0       0
  3368 ;;      Locals:         0      18       0       0       0       0       0
  3369 ;;      Temps:          0      14       0       0       0       0       0
  3370 ;;      Totals:         0      34       0       0       0       0       0
  3371 ;;Total ram usage:       34 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    4
  3374 ;; This function calls:
  3375 ;;		_util_onewire_read_bit
  3376 ;; This function is called by:
  3377 ;;		_util_getTemperature
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text9
  3382  0023BE                     __ptext9:
  3383                           	opt stack 0
  3384  0023BE                     _util_onewire_read_byte:
  3385                           	opt stack 24
  3386                           
  3387                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3388                           ;easat2_util_onewire.c: 99: int value = 0;
  3389                           
  3390                           ;incstack = 0
  3391  0023BE  0E00               	movlw	0
  3392  0023C0  0100               	movlb	0	; () banked
  3393  0023C2  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3394  0023C4  0E00               	movlw	0
  3395  0023C6  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3399  0023C8  8692               	bsf	3986,3,c	;volatile
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3403  0023CA  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3404  0023CE  C071  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3405  0023D2  C072  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3406                           
  3407                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3408  0023D6  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3409  0023DA  C071  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3410  0023DE  C072  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3411                           
  3412                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3413  0023E2  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3414  0023E6  C071  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3415  0023EA  C072  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3416                           
  3417                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3418  0023EE  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3419  0023F2  C071  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3420  0023F6  C072  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3421                           
  3422                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3423  0023FA  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3424  0023FE  C071  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3425  002402  C072  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3426                           
  3427                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3428  002406  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3429  00240A  C071  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3430  00240E  C072  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3431                           
  3432                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3433  002412  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3434  002416  C071  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3435  00241A  C072  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3436                           
  3437                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3438  00241E  EC49  F01D         	call	_util_onewire_read_bit	;wreg free
  3439  002422  C071  F091         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3440  002426  C072  F092         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3441                           
  3442                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3443                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3444  00242A  C091  F075         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3445  00242E  C092  F076         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3446  002432  0E07               	movlw	7
  3447  002434                     u5455:
  3448  002434  90D8               	bcf	status,0,c
  3449  002436  0100               	movlb	0	; () banked
  3450  002438  3775               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3451  00243A  3776               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3452  00243C  2EE8               	decfsz	wreg,f,c
  3453  00243E  D7FA               	goto	u5455
  3454  002440  C08F  F077         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3455  002444  C090  F078         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3456  002448  0E06               	movlw	6
  3457  00244A                     u5465:
  3458  00244A  90D8               	bcf	status,0,c
  3459  00244C  0100               	movlb	0	; () banked
  3460  00244E  3777               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3461  002450  3778               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3462  002452  2EE8               	decfsz	wreg,f,c
  3463  002454  D7FA               	goto	u5465
  3464  002456  C08D  F079         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3465  00245A  C08E  F07A         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3466  00245E  0E05               	movlw	5
  3467  002460                     u5475:
  3468  002460  90D8               	bcf	status,0,c
  3469  002462  0100               	movlb	0	; () banked
  3470  002464  3779               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3471  002466  377A               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3472  002468  2EE8               	decfsz	wreg,f,c
  3473  00246A  D7FA               	goto	u5475
  3474  00246C  C08B  F07B         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3475  002470  C08C  F07C         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3476  002474  0100               	movlb	0	; () banked
  3477  002476  3B7B               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3478  002478  3B7C               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3479  00247A  0EF0               	movlw	240
  3480  00247C  177C               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3481  00247E  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3482  002480  0B0F               	andlw	15
  3483  002482  137C               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3484  002484  0EF0               	movlw	240
  3485  002486  177B               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3486  002488  C089  F07D         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3487  00248C  C08A  F07E         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3488  002490  0100               	movlb	0	; () banked
  3489  002492  90D8               	bcf	status,0,c
  3490  002494  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3491  002496  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3492  002498  0100               	movlb	0	; () banked
  3493  00249A  90D8               	bcf	status,0,c
  3494  00249C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3495  00249E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3496  0024A0  0100               	movlb	0	; () banked
  3497  0024A2  90D8               	bcf	status,0,c
  3498  0024A4  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3499  0024A6  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3500  0024A8  C087  F07F         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3501  0024AC  C088  F080         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3502  0024B0  0100               	movlb	0	; () banked
  3503  0024B2  90D8               	bcf	status,0,c
  3504  0024B4  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3505  0024B6  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3506  0024B8  0100               	movlb	0	; () banked
  3507  0024BA  90D8               	bcf	status,0,c
  3508  0024BC  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3509  0024BE  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3510  0024C0  C085  F081         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3511  0024C4  C086  F082         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3512  0024C8  90D8               	bcf	status,0,c
  3513  0024CA  0100               	movlb	0	; () banked
  3514  0024CC  3781               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3515  0024CE  3782               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3516  0024D0  0100               	movlb	0	; () banked
  3517  0024D2  517F               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3518  0024D4  0100               	movlb	0	; () banked
  3519  0024D6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3520  0024D8  0100               	movlb	0	; () banked
  3521  0024DA  5180               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3522  0024DC  0100               	movlb	0	; () banked
  3523  0024DE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3524  0024E0  0100               	movlb	0	; () banked
  3525  0024E2  517D               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3526  0024E4  0100               	movlb	0	; () banked
  3527  0024E6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3528  0024E8  0100               	movlb	0	; () banked
  3529  0024EA  517E               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3530  0024EC  0100               	movlb	0	; () banked
  3531  0024EE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3532  0024F0  0100               	movlb	0	; () banked
  3533  0024F2  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3534  0024F4  0100               	movlb	0	; () banked
  3535  0024F6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3536  0024F8  0100               	movlb	0	; () banked
  3537  0024FA  517C               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3538  0024FC  0100               	movlb	0	; () banked
  3539  0024FE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3540  002500  0100               	movlb	0	; () banked
  3541  002502  5179               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3542  002504  0100               	movlb	0	; () banked
  3543  002506  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3544  002508  0100               	movlb	0	; () banked
  3545  00250A  517A               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3546  00250C  0100               	movlb	0	; () banked
  3547  00250E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3548  002510  0100               	movlb	0	; () banked
  3549  002512  5177               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3550  002514  0100               	movlb	0	; () banked
  3551  002516  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3552  002518  0100               	movlb	0	; () banked
  3553  00251A  5178               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3554  00251C  0100               	movlb	0	; () banked
  3555  00251E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3556  002520  0100               	movlb	0	; () banked
  3557  002522  5175               	movf	??_util_onewire_read_byte& (0+255),w,b
  3558  002524  0100               	movlb	0	; () banked
  3559  002526  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3560  002528  0100               	movlb	0	; () banked
  3561  00252A  5176               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3562  00252C  0100               	movlb	0	; () banked
  3563  00252E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3564  002530  0100               	movlb	0	; () banked
  3565  002532  5183               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3566  002534  0100               	movlb	0	; () banked
  3567  002536  2581               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3568  002538  0100               	movlb	0	; () banked
  3569  00253A  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3570  00253C  0100               	movlb	0	; () banked
  3571  00253E  5184               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3572  002540  0100               	movlb	0	; () banked
  3573  002542  2182               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3574  002544  0100               	movlb	0	; () banked
  3575  002546  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;easat2_util_onewire.c: 116: return value;
  3579  002548  C093  F073         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3580  00254C  C094  F074         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3581  002550  0012               	return	
  3582  002552                     __end_of_util_onewire_read_byte:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           postdec1	equ	0xFE5
  3591                           fsr1l	equ	0xFE1
  3592                           postinc2	equ	0xFDE
  3593                           postdec2	equ	0xFDD
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598 ;; *************** function _util_onewire_read_bit *****************
  3599 ;; Defined at:
  3600 ;;		line 162 in file "easat2_util_onewire.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  value           2   34[COMRAM] int 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  2   17[BANK0 ] int 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3614 ;;      Params:         0       2       0       0       0       0       0
  3615 ;;      Locals:         2       0       0       0       0       0       0
  3616 ;;      Temps:          1       0       0       0       0       0       0
  3617 ;;      Totals:         3       2       0       0       0       0       0
  3618 ;;Total ram usage:        5 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    3
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_util_onewire_read_byte
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text10
  3629  003A92                     __ptext10:
  3630                           	opt stack 0
  3631  003A92                     _util_onewire_read_bit:
  3632                           	opt stack 24
  3633                           
  3634                           ;easat2_util_onewire.c: 164: int value = 0;
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;incstack = 0
  3638  003A92  0E00               	movlw	0
  3639  003A94  6E24               	movwf	util_onewire_read_bit@value+1,c
  3640  003A96  0E00               	movlw	0
  3641  003A98  6E23               	movwf	util_onewire_read_bit@value,c
  3642                           
  3643                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3644  003A9A  9692               	bcf	3986,3,c	;volatile
  3645                           
  3646                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3647  003A9C  9680               	bcf	3968,3,c	;volatile
  3648                           
  3649                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3650                           
  3651                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3652  003A9E  8680               	bsf	3968,3,c	;volatile
  3653                           
  3654                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3655  003AA0  D000               	nop2		;2 cycle nop
  3656                           
  3657                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3658  003AA2  A680               	btfss	3968,3,c	;volatile
  3659  003AA4  D003               	goto	u5000
  3660  003AA6  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3661  003AA8  2A22               	incf	??_util_onewire_read_bit& (0+255),f,c
  3662  003AAA  D001               	goto	u5008
  3663  003AAC                     u5000:
  3664  003AAC  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3665  003AAE                     u5008:
  3666  003AAE  5022               	movf	??_util_onewire_read_bit,w,c
  3667  003AB0  6E23               	movwf	util_onewire_read_bit@value,c
  3668  003AB2  6A24               	clrf	util_onewire_read_bit@value+1,c
  3669                           
  3670                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3671  003AB4  0E0A               	movlw	10
  3672  003AB6                     u6407:
  3673  003AB6  2EE8               	decfsz	wreg,f,c
  3674  003AB8  D7FE               	bra	u6407
  3675                           
  3676                           ;easat2_util_onewire.c: 187: return value;
  3677  003ABA  C023  F071         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3678  003ABE  C024  F072         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3679  003AC2  0012               	return	
  3680  003AC4                     __end_of_util_onewire_read_bit:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           postdec1	equ	0xFE5
  3689                           fsr1l	equ	0xFE1
  3690                           postinc2	equ	0xFDE
  3691                           postdec2	equ	0xFDD
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function ___ftdiv *****************
  3697 ;; Defined at:
  3698 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  f1              3   25[BANK0 ] float 
  3701 ;;  f2              3   28[BANK0 ] float 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  f3              3   32[BANK0 ] float 
  3704 ;;  sign            1   36[BANK0 ] unsigned char 
  3705 ;;  exp             1   35[BANK0 ] unsigned char 
  3706 ;;  cntr            1   31[BANK0 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  3   25[BANK0 ] float 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3716 ;;      Params:         0       6       0       0       0       0       0
  3717 ;;      Locals:         0       6       0       0       0       0       0
  3718 ;;      Temps:          3       0       0       0       0       0       0
  3719 ;;      Totals:         3      12       0       0       0       0       0
  3720 ;;Total ram usage:       15 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    4
  3723 ;; This function calls:
  3724 ;;		___ftpack
  3725 ;; This function is called by:
  3726 ;;		_util_getTemperature
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text11
  3731  002C36                     __ptext11:
  3732                           	opt stack 0
  3733  002C36                     ___ftdiv:
  3734                           	opt stack 24
  3735                           
  3736                           ;incstack = 0
  3737  002C36  C07B  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3738  002C3A  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3739  002C3C  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3740  002C3E  0100               	movlb	0	; () banked
  3741  002C40  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3742  002C42  3626               	rlcf	??___ftdiv& (0+255),f,c
  3743  002C44  E301               	bnc	u6021
  3744  002C46  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3745  002C48                     u6021:
  3746  002C48  5026               	movf	??___ftdiv,w,c
  3747  002C4A  0100               	movlb	0	; () banked
  3748  002C4C  6F83               	movwf	___ftdiv@exp& (0+255),b
  3749  002C4E  0100               	movlb	0	; () banked
  3750  002C50  5183               	movf	___ftdiv@exp& (0+255),w,b
  3751  002C52  A4D8               	btfss	status,2,c
  3752  002C54  D00A               	goto	l5806
  3753                           
  3754                           ; BSR set to: 0
  3755  002C56  0E00               	movlw	0
  3756  002C58  0100               	movlb	0	; () banked
  3757  002C5A  6F79               	movwf	?___ftdiv& (0+255),b
  3758  002C5C  0E00               	movlw	0
  3759  002C5E  0100               	movlb	0	; () banked
  3760  002C60  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3761  002C62  0E00               	movlw	0
  3762  002C64  0100               	movlb	0	; () banked
  3763  002C66  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766  002C68  0012               	return	
  3767  002C6A                     l5806:
  3768                           
  3769                           ; BSR set to: 0
  3770  002C6A  C07E  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3771  002C6E  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3772  002C70  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3773  002C72  0100               	movlb	0	; () banked
  3774  002C74  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3775  002C76  3626               	rlcf	??___ftdiv& (0+255),f,c
  3776  002C78  E301               	bnc	u6041
  3777  002C7A  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3778  002C7C                     u6041:
  3779  002C7C  5026               	movf	??___ftdiv,w,c
  3780  002C7E  0100               	movlb	0	; () banked
  3781  002C80  6F84               	movwf	___ftdiv@sign& (0+255),b
  3782  002C82  0100               	movlb	0	; () banked
  3783  002C84  5184               	movf	___ftdiv@sign& (0+255),w,b
  3784  002C86  A4D8               	btfss	status,2,c
  3785  002C88  D00A               	goto	l5812
  3786                           
  3787                           ; BSR set to: 0
  3788  002C8A  0E00               	movlw	0
  3789  002C8C  0100               	movlb	0	; () banked
  3790  002C8E  6F79               	movwf	?___ftdiv& (0+255),b
  3791  002C90  0E00               	movlw	0
  3792  002C92  0100               	movlb	0	; () banked
  3793  002C94  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3794  002C96  0E00               	movlw	0
  3795  002C98  0100               	movlb	0	; () banked
  3796  002C9A  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799  002C9C  0012               	return	
  3800  002C9E                     l5812:
  3801                           
  3802                           ; BSR set to: 0
  3803  002C9E  0E00               	movlw	0
  3804  002CA0  0100               	movlb	0	; () banked
  3805  002CA2  6F80               	movwf	___ftdiv@f3& (0+255),b
  3806  002CA4  0E00               	movlw	0
  3807  002CA6  0100               	movlb	0	; () banked
  3808  002CA8  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3809  002CAA  0E00               	movlw	0
  3810  002CAC  0100               	movlb	0	; () banked
  3811  002CAE  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3812                           
  3813                           ; BSR set to: 0
  3814  002CB0  0100               	movlb	0	; () banked
  3815  002CB2  5184               	movf	___ftdiv@sign& (0+255),w,b
  3816  002CB4  0F89               	addlw	137
  3817  002CB6  0100               	movlb	0	; () banked
  3818  002CB8  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821  002CBA  C07B  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3822                           
  3823                           ; BSR set to: 0
  3824  002CBE  0100               	movlb	0	; () banked
  3825  002CC0  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3826  002CC2  0100               	movlb	0	; () banked
  3827  002CC4  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3828                           
  3829                           ; BSR set to: 0
  3830  002CC6  0E80               	movlw	128
  3831  002CC8  0100               	movlb	0	; () banked
  3832  002CCA  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3833                           
  3834                           ; BSR set to: 0
  3835  002CCC  0100               	movlb	0	; () banked
  3836  002CCE  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3837                           
  3838                           ; BSR set to: 0
  3839  002CD0  0EFF               	movlw	255
  3840  002CD2  0100               	movlb	0	; () banked
  3841  002CD4  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3842  002CD6  0EFF               	movlw	255
  3843  002CD8  0100               	movlb	0	; () banked
  3844  002CDA  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3845  002CDC  0E00               	movlw	0
  3846  002CDE  0100               	movlb	0	; () banked
  3847  002CE0  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3848                           
  3849                           ; BSR set to: 0
  3850  002CE2  0100               	movlb	0	; () banked
  3851  002CE4  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3852                           
  3853                           ; BSR set to: 0
  3854  002CE6  0EFF               	movlw	255
  3855  002CE8  0100               	movlb	0	; () banked
  3856  002CEA  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3857  002CEC  0EFF               	movlw	255
  3858  002CEE  0100               	movlb	0	; () banked
  3859  002CF0  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3860  002CF2  0E00               	movlw	0
  3861  002CF4  0100               	movlb	0	; () banked
  3862  002CF6  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3863                           
  3864                           ; BSR set to: 0
  3865  002CF8  0E18               	movlw	24
  3866  002CFA  0100               	movlb	0	; () banked
  3867  002CFC  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3868  002CFE                     l5832:
  3869                           
  3870                           ; BSR set to: 0
  3871  002CFE  0100               	movlb	0	; () banked
  3872  002D00  90D8               	bcf	status,0,c
  3873  002D02  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3874  002D04  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3875  002D06  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3876                           
  3877                           ; BSR set to: 0
  3878  002D08  0100               	movlb	0	; () banked
  3879  002D0A  517C               	movf	___ftdiv@f2& (0+255),w,b
  3880  002D0C  0100               	movlb	0	; () banked
  3881  002D0E  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3882  002D10  0100               	movlb	0	; () banked
  3883  002D12  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3884  002D14  0100               	movlb	0	; () banked
  3885  002D16  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3886  002D18  0100               	movlb	0	; () banked
  3887  002D1A  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3888  002D1C  0100               	movlb	0	; () banked
  3889  002D1E  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3890  002D20  A0D8               	btfss	status,0,c
  3891  002D22  D00E               	goto	l818
  3892                           
  3893                           ; BSR set to: 0
  3894  002D24  0100               	movlb	0	; () banked
  3895  002D26  517C               	movf	___ftdiv@f2& (0+255),w,b
  3896  002D28  0100               	movlb	0	; () banked
  3897  002D2A  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3898  002D2C  0100               	movlb	0	; () banked
  3899  002D2E  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3900  002D30  0100               	movlb	0	; () banked
  3901  002D32  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3902  002D34  0100               	movlb	0	; () banked
  3903  002D36  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3904  002D38  0100               	movlb	0	; () banked
  3905  002D3A  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3906                           
  3907                           ; BSR set to: 0
  3908  002D3C  0100               	movlb	0	; () banked
  3909  002D3E  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3910  002D40                     l818:
  3911                           
  3912                           ; BSR set to: 0
  3913  002D40  0100               	movlb	0	; () banked
  3914  002D42  90D8               	bcf	status,0,c
  3915  002D44  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3916  002D46  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3917  002D48  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3918                           
  3919                           ; BSR set to: 0
  3920  002D4A  0100               	movlb	0	; () banked
  3921  002D4C  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3922  002D4E  D7D7               	goto	l5832
  3923                           
  3924                           ; BSR set to: 0
  3925                           
  3926                           ; BSR set to: 0
  3927  002D50  C080  F071         	movff	___ftdiv@f3,___ftpack@arg
  3928  002D54  C081  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3929  002D58  C082  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3930  002D5C  C083  F074         	movff	___ftdiv@exp,___ftpack@exp
  3931  002D60  C084  F075         	movff	___ftdiv@sign,___ftpack@sign
  3932  002D64  EC44  F017         	call	___ftpack	;wreg free
  3933  002D68  C071  F079         	movff	?___ftpack,?___ftdiv
  3934  002D6C  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3935  002D70  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3936  002D74  0012               	return	
  3937  002D76                     __end_of___ftdiv:
  3938                           	opt stack 0
  3939                           tblptru	equ	0xFF8
  3940                           tblptrh	equ	0xFF7
  3941                           tblptrl	equ	0xFF6
  3942                           tablat	equ	0xFF5
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           postdec1	equ	0xFE5
  3946                           fsr1l	equ	0xFE1
  3947                           postinc2	equ	0xFDE
  3948                           postdec2	equ	0xFDD
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           
  3953 ;; *************** function ___awtoft *****************
  3954 ;; Defined at:
  3955 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  c               2   22[BANK0 ] int 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  sign            1   36[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  3   22[BANK0 ] float 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3969 ;;      Params:         0       3       0       0       0       0       0
  3970 ;;      Locals:         1       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0
  3972 ;;      Totals:         1       3       0       0       0       0       0
  3973 ;;Total ram usage:        4 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    4
  3976 ;; This function calls:
  3977 ;;		___ftpack
  3978 ;; This function is called by:
  3979 ;;		_util_getTemperature
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text12
  3984  003980                     __ptext12:
  3985                           	opt stack 0
  3986  003980                     ___awtoft:
  3987                           	opt stack 24
  3988                           
  3989                           ;incstack = 0
  3990  003980  0E00               	movlw	0
  3991  003982  6E25               	movwf	___awtoft@sign,c
  3992  003984  0100               	movlb	0	; () banked
  3993  003986  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
  3994  003988  D007               	goto	l5854
  3995                           
  3996                           ; BSR set to: 0
  3997  00398A  0100               	movlb	0	; () banked
  3998  00398C  6D76               	negf	___awtoft@c& (0+255),b
  3999  00398E  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
  4000  003990  B0D8               	btfsc	status,0,c
  4001  003992  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
  4002                           
  4003                           ; BSR set to: 0
  4004  003994  0E01               	movlw	1
  4005  003996  6E25               	movwf	___awtoft@sign,c
  4006  003998                     l5854:
  4007                           
  4008                           ; BSR set to: 0
  4009  003998  C076  F071         	movff	___awtoft@c,___ftpack@arg
  4010  00399C  C077  F072         	movff	___awtoft@c+1,___ftpack@arg+1
  4011  0039A0  0100               	movlb	0	; () banked
  4012  0039A2  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4013  0039A4  0E8E               	movlw	142
  4014  0039A6  0100               	movlb	0	; () banked
  4015  0039A8  6F74               	movwf	___ftpack@exp& (0+255),b
  4016  0039AA  C025  F075         	movff	___awtoft@sign,___ftpack@sign
  4017  0039AE  EC44  F017         	call	___ftpack	;wreg free
  4018  0039B2  C071  F076         	movff	?___ftpack,?___awtoft
  4019  0039B6  C072  F077         	movff	?___ftpack+1,?___awtoft+1
  4020  0039BA  C073  F078         	movff	?___ftpack+2,?___awtoft+2
  4021  0039BE  0012               	return	
  4022  0039C0                     __end_of___awtoft:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1l	equ	0xFE1
  4032                           postinc2	equ	0xFDE
  4033                           postdec2	equ	0xFDD
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _util_getSolarCurrent *****************
  4039 ;; Defined at:
  4040 ;;		line 52 in file "easat2_util_inputs.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  solarCurrent    3   68[BANK0 ] float 
  4045 ;;  value           3   65[BANK0 ] float 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2   63[BANK0 ] int 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4055 ;;      Params:         0       2       0       0       0       0       0
  4056 ;;      Locals:         0       6       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0
  4058 ;;      Totals:         0       8       0       0       0       0       0
  4059 ;;Total ram usage:        8 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    5
  4062 ;; This function calls:
  4063 ;;		___ftmul
  4064 ;;		___fttol
  4065 ;;		___lwtoft
  4066 ;; This function is called by:
  4067 ;;		_main_loop
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text13
  4072  002F7C                     __ptext13:
  4073                           	opt stack 0
  4074  002F7C                     _util_getSolarCurrent:
  4075                           	opt stack 24
  4076                           
  4077                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4078                           
  4079                           ;incstack = 0
  4080  002F7C  0E00               	movlw	0
  4081  002F7E  0100               	movlb	0	; () banked
  4082  002F80  6FA1               	movwf	util_getSolarCurrent@value& (0+255),b
  4083  002F82  0E00               	movlw	0
  4084  002F84  0100               	movlb	0	; () banked
  4085  002F86  6FA2               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4086  002F88  0E00               	movlw	0
  4087  002F8A  0100               	movlb	0	; () banked
  4088  002F8C  6FA3               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4089  002F8E  0E00               	movlw	0
  4090  002F90  0100               	movlb	0	; () banked
  4091  002F92  6FA4               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4092  002F94  0E00               	movlw	0
  4093  002F96  0100               	movlb	0	; () banked
  4094  002F98  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4095  002F9A  0E00               	movlw	0
  4096  002F9C  0100               	movlb	0	; () banked
  4097  002F9E  6FA6               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4101  002FA0  84C2               	bsf	4034,2,c	;volatile
  4102  002FA2  96C2               	bcf	4034,3,c	;volatile
  4103  002FA4  98C2               	bcf	4034,4,c	;volatile
  4104  002FA6  9AC2               	bcf	4034,5,c	;volatile
  4105  002FA8  9CC2               	bcf	4034,6,c	;volatile
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4109  002FAA  80C2               	bsf	4034,0,c	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4113  002FAC  9C9E               	bcf	3998,6,c	;volatile
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4117  002FAE  82C2               	bsf	4034,1,c	;volatile
  4118  002FB0                     l110:
  4119  002FB0  AC9E               	btfss	3998,6,c	;volatile
  4120  002FB2  D7FE               	goto	l110
  4121                           
  4122                           ;easat2_util_inputs.c: 63: value = ADRES;
  4123  002FB4  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4124  002FB8  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4125  002FBC  ECF5  F01D         	call	___lwtoft	;wreg free
  4126  002FC0  C076  F0A1         	movff	?___lwtoft,util_getSolarCurrent@value
  4127  002FC4  C077  F0A2         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4128  002FC8  C078  F0A3         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4129                           
  4130                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4131  002FCC  9C9E               	bcf	3998,6,c	;volatile
  4132                           
  4133                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4134  002FCE  90C2               	bcf	4034,0,c	;volatile
  4135                           
  4136                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4137  002FD0  C0A1  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4138  002FD4  C0A2  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4139  002FD8  C0A3  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4140  002FDC  0E33               	movlw	51
  4141  002FDE  0100               	movlb	0	; () banked
  4142  002FE0  6F80               	movwf	___ftmul@f2& (0+255),b
  4143  002FE2  0E03               	movlw	3
  4144  002FE4  0100               	movlb	0	; () banked
  4145  002FE6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4146  002FE8  0E3B               	movlw	59
  4147  002FEA  0100               	movlb	0	; () banked
  4148  002FEC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4149  002FEE  ECD0  F014         	call	___ftmul	;wreg free
  4150  002FF2  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4151  002FF6  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4152  002FFA  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4153                           
  4154                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4155  002FFE  C0A4  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4156  003002  C0A5  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4157  003006  C0A6  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4158  00300A  0E00               	movlw	0
  4159  00300C  0100               	movlb	0	; () banked
  4160  00300E  6F80               	movwf	___ftmul@f2& (0+255),b
  4161  003010  0E80               	movlw	128
  4162  003012  0100               	movlb	0	; () banked
  4163  003014  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4164  003016  0E3F               	movlw	63
  4165  003018  0100               	movlb	0	; () banked
  4166  00301A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4167  00301C  ECD0  F014         	call	___ftmul	;wreg free
  4168  003020  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4169  003024  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4170  003028  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4171                           
  4172                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4173  00302C  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4174  003030  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4175  003034  C0A6  F092         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4176  003038  EC79  F015         	call	___fttol	;wreg free
  4177  00303C  C090  F09F         	movff	?___fttol,?_util_getSolarCurrent
  4178  003040  C091  F0A0         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4179  003044  0012               	return	
  4180  003046                     __end_of_util_getSolarCurrent:
  4181                           	opt stack 0
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           postinc0	equ	0xFEE
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           fsr1l	equ	0xFE1
  4190                           postinc2	equ	0xFDE
  4191                           postdec2	equ	0xFDD
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _util_getBatteryVoltage *****************
  4197 ;; Defined at:
  4198 ;;		line 19 in file "easat2_util_inputs.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  voltage         3   47[BANK0 ] float 
  4203 ;;  value           3   44[BANK0 ] float 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  3   41[BANK0 ] float 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4213 ;;      Params:         0       3       0       0       0       0       0
  4214 ;;      Locals:         0       6       0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0
  4216 ;;      Totals:         0       9       0       0       0       0       0
  4217 ;;Total ram usage:        9 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    5
  4220 ;; This function calls:
  4221 ;;		___ftmul
  4222 ;;		___lwtoft
  4223 ;; This function is called by:
  4224 ;;		_main_loop
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text14
  4229  003110                     __ptext14:
  4230                           	opt stack 0
  4231  003110                     _util_getBatteryVoltage:
  4232                           	opt stack 24
  4233                           
  4234                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4235                           
  4236                           ;incstack = 0
  4237  003110  0E00               	movlw	0
  4238  003112  0100               	movlb	0	; () banked
  4239  003114  6F8C               	movwf	util_getBatteryVoltage@value& (0+255),b
  4240  003116  0E00               	movlw	0
  4241  003118  0100               	movlb	0	; () banked
  4242  00311A  6F8D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4243  00311C  0E00               	movlw	0
  4244  00311E  0100               	movlb	0	; () banked
  4245  003120  6F8E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4246  003122  0E00               	movlw	0
  4247  003124  0100               	movlb	0	; () banked
  4248  003126  6F8F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4249  003128  0E00               	movlw	0
  4250  00312A  0100               	movlb	0	; () banked
  4251  00312C  6F90               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4252  00312E  0E00               	movlw	0
  4253  003130  0100               	movlb	0	; () banked
  4254  003132  6F91               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4258  003134  94C2               	bcf	4034,2,c	;volatile
  4259  003136  96C2               	bcf	4034,3,c	;volatile
  4260  003138  98C2               	bcf	4034,4,c	;volatile
  4261  00313A  9AC2               	bcf	4034,5,c	;volatile
  4262  00313C  9CC2               	bcf	4034,6,c	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4266  00313E  80C2               	bsf	4034,0,c	;volatile
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4270  003140  9C9E               	bcf	3998,6,c	;volatile
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4274  003142  82C2               	bsf	4034,1,c	;volatile
  4275  003144                     l104:
  4276  003144  AC9E               	btfss	3998,6,c	;volatile
  4277  003146  D7FE               	goto	l104
  4278                           
  4279                           ;easat2_util_inputs.c: 30: value = ADRES;
  4280  003148  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4281  00314C  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4282  003150  ECF5  F01D         	call	___lwtoft	;wreg free
  4283  003154  C076  F08C         	movff	?___lwtoft,util_getBatteryVoltage@value
  4284  003158  C077  F08D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4285  00315C  C078  F08E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4286                           
  4287                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4288  003160  9C9E               	bcf	3998,6,c	;volatile
  4289                           
  4290                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4291  003162  90C2               	bcf	4034,0,c	;volatile
  4292                           
  4293                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4294  003164  C08C  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4295  003168  C08D  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4296  00316C  C08E  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4297  003170  0E33               	movlw	51
  4298  003172  0100               	movlb	0	; () banked
  4299  003174  6F80               	movwf	___ftmul@f2& (0+255),b
  4300  003176  0E03               	movlw	3
  4301  003178  0100               	movlb	0	; () banked
  4302  00317A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4303  00317C  0E3B               	movlw	59
  4304  00317E  0100               	movlb	0	; () banked
  4305  003180  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4306  003182  ECD0  F014         	call	___ftmul	;wreg free
  4307  003186  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4308  00318A  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4309  00318E  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4310                           
  4311                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4312  003192  C08F  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4313  003196  C090  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4314  00319A  C091  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4315  00319E  0E66               	movlw	102
  4316  0031A0  0100               	movlb	0	; () banked
  4317  0031A2  6F80               	movwf	___ftmul@f2& (0+255),b
  4318  0031A4  0EB6               	movlw	182
  4319  0031A6  0100               	movlb	0	; () banked
  4320  0031A8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4321  0031AA  0E40               	movlw	64
  4322  0031AC  0100               	movlb	0	; () banked
  4323  0031AE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4324  0031B0  ECD0  F014         	call	___ftmul	;wreg free
  4325  0031B4  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4326  0031B8  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4327  0031BC  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4328                           
  4329                           ;easat2_util_inputs.c: 46: return voltage;
  4330  0031C0  C08F  F089         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4331  0031C4  C090  F08A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4332  0031C8  C091  F08B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4333  0031CC  0012               	return	
  4334  0031CE                     __end_of_util_getBatteryVoltage:
  4335                           	opt stack 0
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           postdec1	equ	0xFE5
  4343                           fsr1l	equ	0xFE1
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function _util_getBatteryCurrent *****************
  4351 ;; Defined at:
  4352 ;;		line 85 in file "easat2_util_inputs.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  batteryCurre    3   68[BANK0 ] float 
  4357 ;;  value           3   65[BANK0 ] float 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  2   63[BANK0 ] int 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         0       2       0       0       0       0       0
  4368 ;;      Locals:         0       6       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0
  4370 ;;      Totals:         0       8       0       0       0       0       0
  4371 ;;Total ram usage:        8 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    5
  4374 ;; This function calls:
  4375 ;;		___ftmul
  4376 ;;		___fttol
  4377 ;;		___lwtoft
  4378 ;; This function is called by:
  4379 ;;		_main_loop
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text15
  4384  003046                     __ptext15:
  4385                           	opt stack 0
  4386  003046                     _util_getBatteryCurrent:
  4387                           	opt stack 24
  4388                           
  4389                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4390                           
  4391                           ;incstack = 0
  4392  003046  0E00               	movlw	0
  4393  003048  0100               	movlb	0	; () banked
  4394  00304A  6FA1               	movwf	util_getBatteryCurrent@value& (0+255),b
  4395  00304C  0E00               	movlw	0
  4396  00304E  0100               	movlb	0	; () banked
  4397  003050  6FA2               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4398  003052  0E00               	movlw	0
  4399  003054  0100               	movlb	0	; () banked
  4400  003056  6FA3               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4401  003058  0E00               	movlw	0
  4402  00305A  0100               	movlb	0	; () banked
  4403  00305C  6FA4               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4404  00305E  0E00               	movlw	0
  4405  003060  0100               	movlb	0	; () banked
  4406  003062  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4407  003064  0E00               	movlw	0
  4408  003066  0100               	movlb	0	; () banked
  4409  003068  6FA6               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4413  00306A  94C2               	bcf	4034,2,c	;volatile
  4414  00306C  96C2               	bcf	4034,3,c	;volatile
  4415  00306E  88C2               	bsf	4034,4,c	;volatile
  4416  003070  8AC2               	bsf	4034,5,c	;volatile
  4417  003072  9CC2               	bcf	4034,6,c	;volatile
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4421  003074  80C2               	bsf	4034,0,c	;volatile
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4425  003076  9C9E               	bcf	3998,6,c	;volatile
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4429  003078  82C2               	bsf	4034,1,c	;volatile
  4430  00307A                     l116:
  4431  00307A  AC9E               	btfss	3998,6,c	;volatile
  4432  00307C  D7FE               	goto	l116
  4433                           
  4434                           ;easat2_util_inputs.c: 96: value = ADRES;
  4435  00307E  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4436  003082  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4437  003086  ECF5  F01D         	call	___lwtoft	;wreg free
  4438  00308A  C076  F0A1         	movff	?___lwtoft,util_getBatteryCurrent@value
  4439  00308E  C077  F0A2         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4440  003092  C078  F0A3         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4441                           
  4442                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4443  003096  9C9E               	bcf	3998,6,c	;volatile
  4444                           
  4445                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4446  003098  90C2               	bcf	4034,0,c	;volatile
  4447                           
  4448                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4449  00309A  C0A1  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4450  00309E  C0A2  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4451  0030A2  C0A3  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4452  0030A6  0E33               	movlw	51
  4453  0030A8  0100               	movlb	0	; () banked
  4454  0030AA  6F80               	movwf	___ftmul@f2& (0+255),b
  4455  0030AC  0E03               	movlw	3
  4456  0030AE  0100               	movlb	0	; () banked
  4457  0030B0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4458  0030B2  0E3B               	movlw	59
  4459  0030B4  0100               	movlb	0	; () banked
  4460  0030B6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4461  0030B8  ECD0  F014         	call	___ftmul	;wreg free
  4462  0030BC  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4463  0030C0  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4464  0030C4  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4465                           
  4466                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4467  0030C8  C0A4  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4468  0030CC  C0A5  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4469  0030D0  C0A6  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4470  0030D4  0E00               	movlw	0
  4471  0030D6  0100               	movlb	0	; () banked
  4472  0030D8  6F80               	movwf	___ftmul@f2& (0+255),b
  4473  0030DA  0E80               	movlw	128
  4474  0030DC  0100               	movlb	0	; () banked
  4475  0030DE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4476  0030E0  0E3F               	movlw	63
  4477  0030E2  0100               	movlb	0	; () banked
  4478  0030E4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4479  0030E6  ECD0  F014         	call	___ftmul	;wreg free
  4480  0030EA  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4481  0030EE  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4482  0030F2  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4483                           
  4484                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4485  0030F6  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4486  0030FA  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4487  0030FE  C0A6  F092         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4488  003102  EC79  F015         	call	___fttol	;wreg free
  4489  003106  C090  F09F         	movff	?___fttol,?_util_getBatteryCurrent
  4490  00310A  C091  F0A0         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4491  00310E  0012               	return	
  4492  003110                     __end_of_util_getBatteryCurrent:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           postinc0	equ	0xFEE
  4499                           wreg	equ	0xFE8
  4500                           postdec1	equ	0xFE5
  4501                           fsr1l	equ	0xFE1
  4502                           postinc2	equ	0xFDE
  4503                           postdec2	equ	0xFDD
  4504                           fsr2h	equ	0xFDA
  4505                           fsr2l	equ	0xFD9
  4506                           status	equ	0xFD8
  4507                           
  4508 ;; *************** function ___lwtoft *****************
  4509 ;; Defined at:
  4510 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  c               2   22[BANK0 ] unsigned int 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  3   22[BANK0 ] float 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4524 ;;      Params:         0       3       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0
  4527 ;;      Totals:         0       3       0       0       0       0       0
  4528 ;;Total ram usage:        3 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    4
  4531 ;; This function calls:
  4532 ;;		___ftpack
  4533 ;; This function is called by:
  4534 ;;		_util_getBatteryVoltage
  4535 ;;		_util_getSolarCurrent
  4536 ;;		_util_getBatteryCurrent
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text16
  4541  003BEA                     __ptext16:
  4542                           	opt stack 0
  4543  003BEA                     ___lwtoft:
  4544                           	opt stack 24
  4545                           
  4546                           ;incstack = 0
  4547  003BEA  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  4548  003BEE  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  4549  003BF2  0100               	movlb	0	; () banked
  4550  003BF4  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4551  003BF6  0E8E               	movlw	142
  4552  003BF8  0100               	movlb	0	; () banked
  4553  003BFA  6F74               	movwf	___ftpack@exp& (0+255),b
  4554  003BFC  0E00               	movlw	0
  4555  003BFE  0100               	movlb	0	; () banked
  4556  003C00  6F75               	movwf	___ftpack@sign& (0+255),b
  4557  003C02  EC44  F017         	call	___ftpack	;wreg free
  4558  003C06  C071  F076         	movff	?___ftpack,?___lwtoft
  4559  003C0A  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  4560  003C0E  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  4561  003C12  0012               	return	
  4562  003C14                     __end_of___lwtoft:
  4563                           	opt stack 0
  4564                           tblptru	equ	0xFF8
  4565                           tblptrh	equ	0xFF7
  4566                           tblptrl	equ	0xFF6
  4567                           tablat	equ	0xFF5
  4568                           postinc0	equ	0xFEE
  4569                           wreg	equ	0xFE8
  4570                           postdec1	equ	0xFE5
  4571                           fsr1l	equ	0xFE1
  4572                           postinc2	equ	0xFDE
  4573                           postdec2	equ	0xFDD
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _util_beacon_transmission *****************
  4579 ;; Defined at:
  4580 ;;		line 21 in file "easat2_util_transmission.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  battery_volt    3  114[BANK0 ] float 
  4583 ;;  solar_curren    2  117[BANK0 ] int 
  4584 ;;  battery_curr    2  119[BANK0 ] int 
  4585 ;;  temperature     3  121[BANK0 ] float 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  i               2  192[BANK1 ] int 
  4588 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4589 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4599 ;;      Params:         0      10       0       0       0       0       0
  4600 ;;      Locals:         0       0     194       0       0       0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0
  4602 ;;      Totals:         0      10     194       0       0       0       0
  4603 ;;Total ram usage:      204 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    8
  4606 ;; This function calls:
  4607 ;;		_memset
  4608 ;;		_sprintf
  4609 ;;		_strcat
  4610 ;;		_strcpy
  4611 ;;		_strlen
  4612 ;;		_util_transmit_letter
  4613 ;; This function is called by:
  4614 ;;		_main_loop
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text17
  4619  002D76                     __ptext17:
  4620                           	opt stack 0
  4621  002D76                     _util_beacon_transmission:
  4622                           	opt stack 21
  4623                           
  4624                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4625                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4626                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4627                           
  4628                           ;incstack = 0
  4629  002D76  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4630  002D78  0100               	movlb	0	; () banked
  4631  002D7A  6F71               	movwf	memset@p1& (0+255),b
  4632  002D7C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4633  002D7E  0100               	movlb	0	; () banked
  4634  002D80  6F72               	movwf	(memset@p1+1)& (0+255),b
  4635  002D82  0E00               	movlw	0
  4636  002D84  0100               	movlb	0	; () banked
  4637  002D86  6F74               	movwf	(memset@c+1)& (0+255),b
  4638  002D88  0E00               	movlw	0
  4639  002D8A  6F73               	movwf	memset@c& (0+255),b
  4640  002D8C  0E00               	movlw	0
  4641  002D8E  0100               	movlb	0	; () banked
  4642  002D90  6F76               	movwf	(memset@n+1)& (0+255),b
  4643  002D92  0E80               	movlw	128
  4644  002D94  6F75               	movwf	memset@n& (0+255),b
  4645  002D96  EC94  F01D         	call	_memset	;wreg free
  4646                           
  4647                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4648  002D9A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4649  002D9C  0100               	movlb	0	; () banked
  4650  002D9E  6F71               	movwf	strcpy@to& (0+255),b
  4651  002DA0  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4652  002DA2  0100               	movlb	0	; () banked
  4653  002DA4  6F72               	movwf	(strcpy@to+1)& (0+255),b
  4654  002DA6  0E9E               	movlw	low STR_1
  4655  002DA8  0100               	movlb	0	; () banked
  4656  002DAA  6F73               	movwf	strcpy@from& (0+255),b
  4657  002DAC  0E7F               	movlw	high STR_1
  4658  002DAE  0100               	movlb	0	; () banked
  4659  002DB0  6F74               	movwf	(strcpy@from+1)& (0+255),b
  4660  002DB2  EC62  F01D         	call	_strcpy	;wreg free
  4661                           
  4662                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4663  002DB6  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4664  002DB8  0100               	movlb	0	; () banked
  4665  002DBA  6F71               	movwf	memset@p1& (0+255),b
  4666  002DBC  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4667  002DBE  0100               	movlb	0	; () banked
  4668  002DC0  6F72               	movwf	(memset@p1+1)& (0+255),b
  4669  002DC2  0E00               	movlw	0
  4670  002DC4  0100               	movlb	0	; () banked
  4671  002DC6  6F74               	movwf	(memset@c+1)& (0+255),b
  4672  002DC8  0E00               	movlw	0
  4673  002DCA  6F73               	movwf	memset@c& (0+255),b
  4674  002DCC  0E00               	movlw	0
  4675  002DCE  0100               	movlb	0	; () banked
  4676  002DD0  6F76               	movwf	(memset@n+1)& (0+255),b
  4677  002DD2  0E40               	movlw	64
  4678  002DD4  6F75               	movwf	memset@n& (0+255),b
  4679  002DD6  EC94  F01D         	call	_memset	;wreg free
  4680                           
  4681                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4682                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4683  002DDA  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4684  002DDC  0100               	movlb	0	; () banked
  4685  002DDE  6FA5               	movwf	sprintf@sp& (0+255),b
  4686  002DE0  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4687  002DE2  0100               	movlb	0	; () banked
  4688  002DE4  6FA6               	movwf	(sprintf@sp+1)& (0+255),b
  4689  002DE6  0E6B               	movlw	low STR_2
  4690  002DE8  0100               	movlb	0	; () banked
  4691  002DEA  6FA7               	movwf	sprintf@f& (0+255),b
  4692  002DEC  0E7F               	movlw	high STR_2
  4693  002DEE  0100               	movlb	0	; () banked
  4694  002DF0  6FA8               	movwf	(sprintf@f+1)& (0+255),b
  4695  002DF2  C0D9  F0A9         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4696  002DF6  C0DA  F0AA         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4697  002DFA  C0DB  F0AB         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4698  002DFE  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4699  002E02  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4700  002E06  C0D4  F0AE         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4701  002E0A  C0D5  F0AF         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4702  002E0E  C0D6  F0B0         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4703  002E12  C0D7  F0B1         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4704  002E16  C0D8  F0B2         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4705  002E1A  EC55  F000         	call	_sprintf	;wreg free
  4706                           
  4707                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4708  002E1E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4709  002E20  0100               	movlb	0	; () banked
  4710  002E22  6F71               	movwf	strcat@to& (0+255),b
  4711  002E24  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4712  002E26  0100               	movlb	0	; () banked
  4713  002E28  6F72               	movwf	(strcat@to+1)& (0+255),b
  4714  002E2A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4715  002E2C  0100               	movlb	0	; () banked
  4716  002E2E  6F73               	movwf	strcat@from& (0+255),b
  4717  002E30  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4718  002E32  0100               	movlb	0	; () banked
  4719  002E34  6F74               	movwf	(strcat@from+1)& (0+255),b
  4720  002E36  EC5C  F01C         	call	_strcat	;wreg free
  4721                           
  4722                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4723  002E3A  0E00               	movlw	0
  4724  002E3C  0101               	movlb	1	; () banked
  4725  002E3E  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4726  002E40  0E00               	movlw	0
  4727  002E42  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4728  002E44  D00E               	goto	l6074
  4729  002E46                     l6070:
  4730                           
  4731                           ; BSR set to: 1
  4732                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4733  002E46  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4734  002E48  0101               	movlb	1	; () banked
  4735  002E4A  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4736  002E4C  6ED9               	movwf	fsr2l,c
  4737  002E4E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4738  002E50  0101               	movlb	1	; () banked
  4739  002E52  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4740  002E54  6EDA               	movwf	fsr2h,c
  4741  002E56  50DF               	movf	indf2,w,c
  4742  002E58  EC4C  F00C         	call	_util_transmit_letter
  4743  002E5C  0101               	movlb	1	; () banked
  4744  002E5E  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4745  002E60  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4746  002E62                     l6074:
  4747                           
  4748                           ; BSR set to: 1
  4749  002E62  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4750  002E64  0100               	movlb	0	; () banked
  4751  002E66  6F71               	movwf	strlen@s& (0+255),b
  4752  002E68  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4753  002E6A  0100               	movlb	0	; () banked
  4754  002E6C  6F72               	movwf	(strlen@s+1)& (0+255),b
  4755  002E6E  ECBE  F01B         	call	_strlen	;wreg free
  4756  002E72  0100               	movlb	0	; () banked
  4757  002E74  5171               	movf	?_strlen& (0+255),w,b
  4758  002E76  0101               	movlb	1	; () banked
  4759  002E78  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4760  002E7A  0100               	movlb	0	; () banked
  4761  002E7C  5172               	movf	(?_strlen+1)& (0+255),w,b
  4762  002E7E  0101               	movlb	1	; () banked
  4763  002E80  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4764  002E82  B0D8               	btfsc	status,0,c
  4765  002E84  0012               	return	
  4766  002E86  D7DF               	goto	l6070
  4767  002E88                     __end_of_util_beacon_transmission:
  4768                           	opt stack 0
  4769                           tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           postdec1	equ	0xFE5
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           postinc2	equ	0xFDE
  4779                           postdec2	equ	0xFDD
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _util_transmit_letter *****************
  4785 ;; Defined at:
  4786 ;;		line 52 in file "easat2_util_transmission.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  letter          1    wreg     unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  letter          1   42[COMRAM] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4800 ;;      Params:         0       0       0       0       0       0       0
  4801 ;;      Locals:         1       0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0
  4803 ;;      Totals:         1       0       0       0       0       0       0
  4804 ;;Total ram usage:        1 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    7
  4807 ;; This function calls:
  4808 ;;		_util_transmit_morse_sequence
  4809 ;;		_util_transmit_space_between_letters
  4810 ;;		_util_transmit_space_between_words
  4811 ;; This function is called by:
  4812 ;;		_util_beacon_transmission
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text18
  4817  001898                     __ptext18:
  4818                           	opt stack 0
  4819  001898                     _util_transmit_letter:
  4820                           	opt stack 21
  4821                           
  4822                           ; BSR set to: 1
  4823                           ;incstack = 0
  4824                           ;util_transmit_letter@letter stored from wreg
  4825  001898  6E2B               	movwf	util_transmit_letter@letter,c
  4826                           
  4827                           ;easat2_util_transmission.c: 54: switch (letter) {
  4828  00189A  D174               	goto	l5796
  4829  00189C                     l5710:
  4830                           
  4831                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4832  00189C  0EE8               	movlw	low (STR_19+2)
  4833  00189E  0100               	movlb	0	; () banked
  4834  0018A0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4835  0018A2  0E7F               	movlw	high (STR_19+2)
  4836  0018A4  0100               	movlb	0	; () banked
  4837  0018A6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4838  0018A8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4839                           
  4840                           ;easat2_util_transmission.c: 61: break;
  4841  0018AC  D1EA               	goto	l5798
  4842  0018AE                     l5712:
  4843                           
  4844                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4845  0018AE  0ED0               	movlw	low (STR_36+1)
  4846  0018B0  0100               	movlb	0	; () banked
  4847  0018B2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4848  0018B4  0E7F               	movlw	high (STR_36+1)
  4849  0018B6  0100               	movlb	0	; () banked
  4850  0018B8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4851  0018BA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4852                           
  4853                           ;easat2_util_transmission.c: 64: break;
  4854  0018BE  D1E1               	goto	l5798
  4855  0018C0                     l5714:
  4856                           
  4857                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4858  0018C0  0EF5               	movlw	low STR_5
  4859  0018C2  0100               	movlb	0	; () banked
  4860  0018C4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4861  0018C6  0E7F               	movlw	high STR_5
  4862  0018C8  0100               	movlb	0	; () banked
  4863  0018CA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4864  0018CC  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4865                           
  4866                           ;easat2_util_transmission.c: 67: break;
  4867  0018D0  D1D8               	goto	l5798
  4868  0018D2                     l5716:
  4869                           
  4870                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4871  0018D2  0ECB               	movlw	low (STR_37+2)
  4872  0018D4  0100               	movlb	0	; () banked
  4873  0018D6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4874  0018D8  0E7F               	movlw	high (STR_37+2)
  4875  0018DA  0100               	movlb	0	; () banked
  4876  0018DC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4877  0018DE  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4878                           
  4879                           ;easat2_util_transmission.c: 70: break;
  4880  0018E2  D1CF               	goto	l5798
  4881  0018E4                     l5718:
  4882                           
  4883                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4884  0018E4  0EC1               	movlw	low (STR_38+4)
  4885  0018E6  0100               	movlb	0	; () banked
  4886  0018E8  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4887  0018EA  0E7F               	movlw	high (STR_38+4)
  4888  0018EC  0100               	movlb	0	; () banked
  4889  0018EE  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4890  0018F0  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4891                           
  4892                           ;easat2_util_transmission.c: 73: break;
  4893  0018F4  D1C6               	goto	l5798
  4894  0018F6                     l5720:
  4895                           
  4896                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4897  0018F6  0EC4               	movlw	low (STR_41+1)
  4898  0018F8  0100               	movlb	0	; () banked
  4899  0018FA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4900  0018FC  0E7F               	movlw	high (STR_41+1)
  4901  0018FE  0100               	movlb	0	; () banked
  4902  001900  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4903  001902  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4904                           
  4905                           ;easat2_util_transmission.c: 76: break;
  4906  001906  D1BD               	goto	l5798
  4907  001908                     l5722:
  4908                           
  4909                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4910  001908  0EBF               	movlw	low (STR_38+2)
  4911  00190A  0100               	movlb	0	; () banked
  4912  00190C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4913  00190E  0E7F               	movlw	high (STR_38+2)
  4914  001910  0100               	movlb	0	; () banked
  4915  001912  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4916  001914  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4917                           
  4918                           ;easat2_util_transmission.c: 79: break;
  4919  001918  D1B4               	goto	l5798
  4920  00191A                     l5724:
  4921                           
  4922                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4923  00191A  0ED6               	movlw	low (STR_35+1)
  4924  00191C  0100               	movlb	0	; () banked
  4925  00191E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4926  001920  0E7F               	movlw	high (STR_35+1)
  4927  001922  0100               	movlb	0	; () banked
  4928  001924  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4929  001926  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4930                           
  4931                           ;easat2_util_transmission.c: 82: break;
  4932  00192A  D1AB               	goto	l5798
  4933  00192C                     l5726:
  4934                           
  4935                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4936  00192C  0ECC               	movlw	low (STR_37+3)
  4937  00192E  0100               	movlb	0	; () banked
  4938  001930  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4939  001932  0E7F               	movlw	high (STR_37+3)
  4940  001934  0100               	movlb	0	; () banked
  4941  001936  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4942  001938  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4943                           
  4944                           ;easat2_util_transmission.c: 85: break;
  4945  00193C  D1A2               	goto	l5798
  4946  00193E                     l5728:
  4947                           
  4948                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4949  00193E  0EB2               	movlw	low (STR_31+1)
  4950  001940  0100               	movlb	0	; () banked
  4951  001942  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4952  001944  0E7F               	movlw	high (STR_31+1)
  4953  001946  0100               	movlb	0	; () banked
  4954  001948  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4955  00194A  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4956                           
  4957                           ;easat2_util_transmission.c: 88: break;
  4958  00194E  D199               	goto	l5798
  4959  001950                     l5730:
  4960                           
  4961                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4962  001950  0EE7               	movlw	low (STR_19+1)
  4963  001952  0100               	movlb	0	; () banked
  4964  001954  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4965  001956  0E7F               	movlw	high (STR_19+1)
  4966  001958  0100               	movlb	0	; () banked
  4967  00195A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4968  00195C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4969                           
  4970                           ;easat2_util_transmission.c: 91: break;
  4971  001960  D190               	goto	l5798
  4972  001962                     l5732:
  4973                           
  4974                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4975  001962  0EFA               	movlw	low STR_14
  4976  001964  0100               	movlb	0	; () banked
  4977  001966  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4978  001968  0E7F               	movlw	high STR_14
  4979  00196A  0100               	movlb	0	; () banked
  4980  00196C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4981  00196E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4982                           
  4983                           ;easat2_util_transmission.c: 94: break;
  4984  001972  D187               	goto	l5798
  4985  001974                     l5734:
  4986                           
  4987                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4988  001974  0EA8               	movlw	low (STR_29+3)
  4989  001976  0100               	movlb	0	; () banked
  4990  001978  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4991  00197A  0E7F               	movlw	high (STR_29+3)
  4992  00197C  0100               	movlb	0	; () banked
  4993  00197E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4994  001980  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4995                           
  4996                           ;easat2_util_transmission.c: 97: break;
  4997  001984  D17E               	goto	l5798
  4998  001986                     l5736:
  4999                           
  5000                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  5001  001986  0EC0               	movlw	low (STR_38+3)
  5002  001988  0100               	movlb	0	; () banked
  5003  00198A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5004  00198C  0E7F               	movlw	high (STR_38+3)
  5005  00198E  0100               	movlb	0	; () banked
  5006  001990  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5007  001992  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5008                           
  5009                           ;easat2_util_transmission.c: 100: break;
  5010  001996  D175               	goto	l5798
  5011  001998                     l5738:
  5012                           
  5013                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  5014  001998  0EA7               	movlw	low (STR_29+2)
  5015  00199A  0100               	movlb	0	; () banked
  5016  00199C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5017  00199E  0E7F               	movlw	high (STR_29+2)
  5018  0019A0  0100               	movlb	0	; () banked
  5019  0019A2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5020  0019A4  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5021                           
  5022                           ;easat2_util_transmission.c: 103: break;
  5023  0019A8  D16C               	goto	l5798
  5024  0019AA                     l5740:
  5025                           
  5026                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  5027  0019AA  0EF0               	movlw	low STR_18
  5028  0019AC  0100               	movlb	0	; () banked
  5029  0019AE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5030  0019B0  0E7F               	movlw	high STR_18
  5031  0019B2  0100               	movlb	0	; () banked
  5032  0019B4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5033  0019B6  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5034                           
  5035                           ;easat2_util_transmission.c: 106: break;
  5036  0019BA  D163               	goto	l5798
  5037  0019BC                     l5742:
  5038                           
  5039                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  5040  0019BC  0EE6               	movlw	low STR_19
  5041  0019BE  0100               	movlb	0	; () banked
  5042  0019C0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5043  0019C2  0E7F               	movlw	high STR_19
  5044  0019C4  0100               	movlb	0	; () banked
  5045  0019C6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5046  0019C8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5047                           
  5048                           ;easat2_util_transmission.c: 109: break;
  5049  0019CC  D15A               	goto	l5798
  5050  0019CE                     l5744:
  5051                           
  5052                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  5053  0019CE  0EF6               	movlw	low (STR_5+1)
  5054  0019D0  0100               	movlb	0	; () banked
  5055  0019D2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5056  0019D4  0E7F               	movlw	high (STR_5+1)
  5057  0019D6  0100               	movlb	0	; () banked
  5058  0019D8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5059  0019DA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5060                           
  5061                           ;easat2_util_transmission.c: 112: break;
  5062  0019DE  D151               	goto	l5798
  5063  0019E0                     l5746:
  5064                           
  5065                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  5066  0019E0  0ED1               	movlw	low (STR_36+2)
  5067  0019E2  0100               	movlb	0	; () banked
  5068  0019E4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5069  0019E6  0E7F               	movlw	high (STR_36+2)
  5070  0019E8  0100               	movlb	0	; () banked
  5071  0019EA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5072  0019EC  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5073                           
  5074                           ;easat2_util_transmission.c: 115: break;
  5075  0019F0  D148               	goto	l5798
  5076  0019F2                     l5748:
  5077                           
  5078                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  5079  0019F2  0EA9               	movlw	low (STR_29+4)
  5080  0019F4  0100               	movlb	0	; () banked
  5081  0019F6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5082  0019F8  0E7F               	movlw	high (STR_29+4)
  5083  0019FA  0100               	movlb	0	; () banked
  5084  0019FC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5085  0019FE  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5086                           
  5087                           ;easat2_util_transmission.c: 118: break;
  5088  001A02  D13F               	goto	l5798
  5089  001A04                     l5750:
  5090                           
  5091                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  5092  001A04  0EEC               	movlw	low (STR_26+1)
  5093  001A06  0100               	movlb	0	; () banked
  5094  001A08  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5095  001A0A  0E7F               	movlw	high (STR_26+1)
  5096  001A0C  0100               	movlb	0	; () banked
  5097  001A0E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5098  001A10  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5099                           
  5100                           ;easat2_util_transmission.c: 121: break;
  5101  001A14  D136               	goto	l5798
  5102  001A16                     l5752:
  5103                           
  5104                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  5105  001A16  0E92               	movlw	low (STR_43+2)
  5106  001A18  0100               	movlb	0	; () banked
  5107  001A1A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5108  001A1C  0E7F               	movlw	high (STR_43+2)
  5109  001A1E  0100               	movlb	0	; () banked
  5110  001A20  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5111  001A22  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5112                           
  5113                           ;easat2_util_transmission.c: 124: break;
  5114  001A26  D12D               	goto	l5798
  5115  001A28                     l5754:
  5116                           
  5117                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  5118  001A28  0EE2               	movlw	low (STR_27+1)
  5119  001A2A  0100               	movlb	0	; () banked
  5120  001A2C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5121  001A2E  0E7F               	movlw	high (STR_27+1)
  5122  001A30  0100               	movlb	0	; () banked
  5123  001A32  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5124  001A34  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5125                           
  5126                           ;easat2_util_transmission.c: 127: break;
  5127  001A38  D124               	goto	l5798
  5128  001A3A                     l5756:
  5129                           
  5130                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  5131  001A3A  0EEB               	movlw	low STR_26
  5132  001A3C  0100               	movlb	0	; () banked
  5133  001A3E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5134  001A40  0E7F               	movlw	high STR_26
  5135  001A42  0100               	movlb	0	; () banked
  5136  001A44  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5137  001A46  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5138                           
  5139                           ;easat2_util_transmission.c: 130: break;
  5140  001A4A  D11B               	goto	l5798
  5141  001A4C                     l5758:
  5142                           
  5143                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  5144  001A4C  0EE1               	movlw	low STR_27
  5145  001A4E  0100               	movlb	0	; () banked
  5146  001A50  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5147  001A52  0E7F               	movlw	high STR_27
  5148  001A54  0100               	movlb	0	; () banked
  5149  001A56  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5150  001A58  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5151                           
  5152                           ;easat2_util_transmission.c: 133: break;
  5153  001A5C  D112               	goto	l5798
  5154  001A5E                     l5760:
  5155                           
  5156                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  5157  001A5E  0ECA               	movlw	low (STR_37+1)
  5158  001A60  0100               	movlb	0	; () banked
  5159  001A62  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5160  001A64  0E7F               	movlw	high (STR_37+1)
  5161  001A66  0100               	movlb	0	; () banked
  5162  001A68  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5163  001A6A  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5164                           
  5165                           ;easat2_util_transmission.c: 136: break;
  5166  001A6E  D109               	goto	l5798
  5167  001A70                     l5762:
  5168                           
  5169                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  5170  001A70  0EA5               	movlw	low STR_29
  5171  001A72  0100               	movlb	0	; () banked
  5172  001A74  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5173  001A76  0E7F               	movlw	high STR_29
  5174  001A78  0100               	movlb	0	; () banked
  5175  001A7A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5176  001A7C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5177                           
  5178                           ;easat2_util_transmission.c: 139: break;
  5179  001A80  D100               	goto	l5798
  5180  001A82                     l5764:
  5181                           
  5182                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  5183  001A82  0EAB               	movlw	low STR_30
  5184  001A84  0100               	movlb	0	; () banked
  5185  001A86  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5186  001A88  0E7F               	movlw	high STR_30
  5187  001A8A  0100               	movlb	0	; () banked
  5188  001A8C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5189  001A8E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5190                           
  5191                           ;easat2_util_transmission.c: 142: break;
  5192  001A92  D0F7               	goto	l5798
  5193  001A94                     l5766:
  5194                           
  5195                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  5196  001A94  0EB1               	movlw	low STR_31
  5197  001A96  0100               	movlb	0	; () banked
  5198  001A98  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5199  001A9A  0E7F               	movlw	high STR_31
  5200  001A9C  0100               	movlb	0	; () banked
  5201  001A9E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5202  001AA0  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5203                           
  5204                           ;easat2_util_transmission.c: 145: break;
  5205  001AA4  D0EE               	goto	l5798
  5206  001AA6                     l5768:
  5207                           
  5208                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  5209  001AA6  0EB7               	movlw	low STR_32
  5210  001AA8  0100               	movlb	0	; () banked
  5211  001AAA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5212  001AAC  0E7F               	movlw	high STR_32
  5213  001AAE  0100               	movlb	0	; () banked
  5214  001AB0  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5215  001AB2  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5216                           
  5217                           ;easat2_util_transmission.c: 148: break;
  5218  001AB6  D0E5               	goto	l5798
  5219  001AB8                     l5770:
  5220                           
  5221                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  5222  001AB8  0E91               	movlw	low (STR_43+1)
  5223  001ABA  0100               	movlb	0	; () banked
  5224  001ABC  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5225  001ABE  0E7F               	movlw	high (STR_43+1)
  5226  001AC0  0100               	movlb	0	; () banked
  5227  001AC2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5228  001AC4  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5229                           
  5230                           ;easat2_util_transmission.c: 151: break;
  5231  001AC8  D0DC               	goto	l5798
  5232  001ACA                     l5772:
  5233                           
  5234                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  5235  001ACA  0EDB               	movlw	low STR_34
  5236  001ACC  0100               	movlb	0	; () banked
  5237  001ACE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5238  001AD0  0E7F               	movlw	high STR_34
  5239  001AD2  0100               	movlb	0	; () banked
  5240  001AD4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5241  001AD6  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5242                           
  5243                           ;easat2_util_transmission.c: 154: break;
  5244  001ADA  D0D3               	goto	l5798
  5245  001ADC                     l5774:
  5246                           
  5247                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  5248  001ADC  0ED5               	movlw	low STR_35
  5249  001ADE  0100               	movlb	0	; () banked
  5250  001AE0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5251  001AE2  0E7F               	movlw	high STR_35
  5252  001AE4  0100               	movlb	0	; () banked
  5253  001AE6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5254  001AE8  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5255                           
  5256                           ;easat2_util_transmission.c: 157: break;
  5257  001AEC  D0CA               	goto	l5798
  5258  001AEE                     l5776:
  5259                           
  5260                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  5261  001AEE  0ECF               	movlw	low STR_36
  5262  001AF0  0100               	movlb	0	; () banked
  5263  001AF2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5264  001AF4  0E7F               	movlw	high STR_36
  5265  001AF6  0100               	movlb	0	; () banked
  5266  001AF8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5267  001AFA  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5268                           
  5269                           ;easat2_util_transmission.c: 160: break;
  5270  001AFE  D0C1               	goto	l5798
  5271  001B00                     l5778:
  5272                           
  5273                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  5274  001B00  0EC9               	movlw	low STR_37
  5275  001B02  0100               	movlb	0	; () banked
  5276  001B04  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5277  001B06  0E7F               	movlw	high STR_37
  5278  001B08  0100               	movlb	0	; () banked
  5279  001B0A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5280  001B0C  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5281                           
  5282                           ;easat2_util_transmission.c: 163: break;
  5283  001B10  D0B8               	goto	l5798
  5284  001B12                     l5780:
  5285                           
  5286                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  5287  001B12  0EBD               	movlw	low STR_38
  5288  001B14  0100               	movlb	0	; () banked
  5289  001B16  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5290  001B18  0E7F               	movlw	high STR_38
  5291  001B1A  0100               	movlb	0	; () banked
  5292  001B1C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5293  001B1E  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5294                           
  5295                           ;easat2_util_transmission.c: 166: break;
  5296  001B22  D0AF               	goto	l5798
  5297  001B24                     l5782:
  5298                           
  5299                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  5300  001B24  0E82               	movlw	low STR_39
  5301  001B26  0100               	movlb	0	; () banked
  5302  001B28  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5303  001B2A  0E7F               	movlw	high STR_39
  5304  001B2C  0100               	movlb	0	; () banked
  5305  001B2E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5306  001B30  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5307                           
  5308                           ;easat2_util_transmission.c: 169: break;
  5309  001B34  D0A6               	goto	l5798
  5310  001B36                     l5784:
  5311                           
  5312                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  5313  001B36  0E97               	movlw	low STR_40
  5314  001B38  0100               	movlb	0	; () banked
  5315  001B3A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5316  001B3C  0E7F               	movlw	high STR_40
  5317  001B3E  0100               	movlb	0	; () banked
  5318  001B40  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5319  001B42  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5320                           
  5321                           ;easat2_util_transmission.c: 172: break;
  5322  001B46  D09D               	goto	l5798
  5323  001B48                     l5786:
  5324                           
  5325                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  5326  001B48  0EC3               	movlw	low STR_41
  5327  001B4A  0100               	movlb	0	; () banked
  5328  001B4C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5329  001B4E  0E7F               	movlw	high STR_41
  5330  001B50  0100               	movlb	0	; () banked
  5331  001B52  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5332  001B54  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5333                           
  5334                           ;easat2_util_transmission.c: 175: break;
  5335  001B58  D094               	goto	l5798
  5336  001B5A                     l5788:
  5337                           
  5338                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  5339  001B5A  0E89               	movlw	low STR_42
  5340  001B5C  0100               	movlb	0	; () banked
  5341  001B5E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5342  001B60  0E7F               	movlw	high STR_42
  5343  001B62  0100               	movlb	0	; () banked
  5344  001B64  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5345  001B66  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5346                           
  5347                           ;easat2_util_transmission.c: 178: break;
  5348  001B6A  D08B               	goto	l5798
  5349  001B6C                     l5790:
  5350                           
  5351                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  5352  001B6C  0E90               	movlw	low STR_43
  5353  001B6E  0100               	movlb	0	; () banked
  5354  001B70  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5355  001B72  0E7F               	movlw	high STR_43
  5356  001B74  0100               	movlb	0	; () banked
  5357  001B76  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5358  001B78  EC8C  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5359                           
  5360                           ;easat2_util_transmission.c: 181: break;
  5361  001B7C  D082               	goto	l5798
  5362  001B7E                     l5792:
  5363                           
  5364                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  5365  001B7E  EC3D  F01E         	call	_util_transmit_space_between_words	;wreg free
  5366                           
  5367                           ;easat2_util_transmission.c: 188: }
  5368                           
  5369                           ;easat2_util_transmission.c: 186: break;
  5370                           
  5371                           ;easat2_util_transmission.c: 185: default:
  5372                           
  5373                           ;easat2_util_transmission.c: 184: break;
  5374  001B82  D07F               	goto	l5798
  5375  001B84                     l5796:
  5376  001B84  502B               	movf	util_transmit_letter@letter,w,c
  5377                           
  5378                           ; Switch size 1, requested type "space"
  5379                           ; Number of cases is 42, Range of values is 32 to 90
  5380                           ; switch strategies available:
  5381                           ; Name         Instructions Cycles
  5382                           ; simple_byte          127    64 (average)
  5383                           ;	Chosen strategy is simple_byte
  5384  001B86  0A20               	xorlw	32	; case 32
  5385  001B88  B4D8               	btfsc	status,2,c
  5386  001B8A  D7F9               	goto	l5792
  5387  001B8C  0A0C               	xorlw	12	; case 44
  5388  001B8E  B4D8               	btfsc	status,2,c
  5389  001B90  D7C9               	goto	l5782
  5390  001B92  0A01               	xorlw	1	; case 45
  5391  001B94  B4D8               	btfsc	status,2,c
  5392  001B96  D7EA               	goto	l5790
  5393  001B98  0A03               	xorlw	3	; case 46
  5394  001B9A  B4D8               	btfsc	status,2,c
  5395  001B9C  D7DE               	goto	l5788
  5396  001B9E  0A01               	xorlw	1	; case 47
  5397  001BA0  B4D8               	btfsc	status,2,c
  5398  001BA2  D7D2               	goto	l5786
  5399  001BA4  0A1F               	xorlw	31	; case 48
  5400  001BA6  B4D8               	btfsc	status,2,c
  5401  001BA8  D763               	goto	l5762
  5402  001BAA  0A01               	xorlw	1	; case 49
  5403  001BAC  B4D8               	btfsc	status,2,c
  5404  001BAE  D769               	goto	l5764
  5405  001BB0  0A03               	xorlw	3	; case 50
  5406  001BB2  B4D8               	btfsc	status,2,c
  5407  001BB4  D76F               	goto	l5766
  5408  001BB6  0A01               	xorlw	1	; case 51
  5409  001BB8  B4D8               	btfsc	status,2,c
  5410  001BBA  D775               	goto	l5768
  5411  001BBC  0A07               	xorlw	7	; case 52
  5412  001BBE  B4D8               	btfsc	status,2,c
  5413  001BC0  D77B               	goto	l5770
  5414  001BC2  0A01               	xorlw	1	; case 53
  5415  001BC4  B4D8               	btfsc	status,2,c
  5416  001BC6  D781               	goto	l5772
  5417  001BC8  0A03               	xorlw	3	; case 54
  5418  001BCA  B4D8               	btfsc	status,2,c
  5419  001BCC  D787               	goto	l5774
  5420  001BCE  0A01               	xorlw	1	; case 55
  5421  001BD0  B4D8               	btfsc	status,2,c
  5422  001BD2  D78D               	goto	l5776
  5423  001BD4  0A0F               	xorlw	15	; case 56
  5424  001BD6  B4D8               	btfsc	status,2,c
  5425  001BD8  D793               	goto	l5778
  5426  001BDA  0A01               	xorlw	1	; case 57
  5427  001BDC  B4D8               	btfsc	status,2,c
  5428  001BDE  D799               	goto	l5780
  5429  001BE0  0A06               	xorlw	6	; case 63
  5430  001BE2  B4D8               	btfsc	status,2,c
  5431  001BE4  D7A8               	goto	l5784
  5432  001BE6  0A7E               	xorlw	126	; case 65
  5433  001BE8  B4D8               	btfsc	status,2,c
  5434  001BEA  D658               	goto	l5710
  5435  001BEC  0A03               	xorlw	3	; case 66
  5436  001BEE  B4D8               	btfsc	status,2,c
  5437  001BF0  D65E               	goto	l5712
  5438  001BF2  0A01               	xorlw	1	; case 67
  5439  001BF4  B4D8               	btfsc	status,2,c
  5440  001BF6  D664               	goto	l5714
  5441  001BF8  0A07               	xorlw	7	; case 68
  5442  001BFA  B4D8               	btfsc	status,2,c
  5443  001BFC  D66A               	goto	l5716
  5444  001BFE  0A01               	xorlw	1	; case 69
  5445  001C00  B4D8               	btfsc	status,2,c
  5446  001C02  D670               	goto	l5718
  5447  001C04  0A03               	xorlw	3	; case 70
  5448  001C06  B4D8               	btfsc	status,2,c
  5449  001C08  D676               	goto	l5720
  5450  001C0A  0A01               	xorlw	1	; case 71
  5451  001C0C  B4D8               	btfsc	status,2,c
  5452  001C0E  D67C               	goto	l5722
  5453  001C10  0A0F               	xorlw	15	; case 72
  5454  001C12  B4D8               	btfsc	status,2,c
  5455  001C14  D682               	goto	l5724
  5456  001C16  0A01               	xorlw	1	; case 73
  5457  001C18  B4D8               	btfsc	status,2,c
  5458  001C1A  D688               	goto	l5726
  5459  001C1C  0A03               	xorlw	3	; case 74
  5460  001C1E  B4D8               	btfsc	status,2,c
  5461  001C20  D68E               	goto	l5728
  5462  001C22  0A01               	xorlw	1	; case 75
  5463  001C24  B4D8               	btfsc	status,2,c
  5464  001C26  D694               	goto	l5730
  5465  001C28  0A07               	xorlw	7	; case 76
  5466  001C2A  B4D8               	btfsc	status,2,c
  5467  001C2C  D69A               	goto	l5732
  5468  001C2E  0A01               	xorlw	1	; case 77
  5469  001C30  B4D8               	btfsc	status,2,c
  5470  001C32  D6A0               	goto	l5734
  5471  001C34  0A03               	xorlw	3	; case 78
  5472  001C36  B4D8               	btfsc	status,2,c
  5473  001C38  D6A6               	goto	l5736
  5474  001C3A  0A01               	xorlw	1	; case 79
  5475  001C3C  B4D8               	btfsc	status,2,c
  5476  001C3E  D6AC               	goto	l5738
  5477  001C40  0A1F               	xorlw	31	; case 80
  5478  001C42  B4D8               	btfsc	status,2,c
  5479  001C44  D6B2               	goto	l5740
  5480  001C46  0A01               	xorlw	1	; case 81
  5481  001C48  B4D8               	btfsc	status,2,c
  5482  001C4A  D6B8               	goto	l5742
  5483  001C4C  0A03               	xorlw	3	; case 82
  5484  001C4E  B4D8               	btfsc	status,2,c
  5485  001C50  D6BE               	goto	l5744
  5486  001C52  0A01               	xorlw	1	; case 83
  5487  001C54  B4D8               	btfsc	status,2,c
  5488  001C56  D6C4               	goto	l5746
  5489  001C58  0A07               	xorlw	7	; case 84
  5490  001C5A  B4D8               	btfsc	status,2,c
  5491  001C5C  D6CA               	goto	l5748
  5492  001C5E  0A01               	xorlw	1	; case 85
  5493  001C60  B4D8               	btfsc	status,2,c
  5494  001C62  D6D0               	goto	l5750
  5495  001C64  0A03               	xorlw	3	; case 86
  5496  001C66  B4D8               	btfsc	status,2,c
  5497  001C68  D6D6               	goto	l5752
  5498  001C6A  0A01               	xorlw	1	; case 87
  5499  001C6C  B4D8               	btfsc	status,2,c
  5500  001C6E  D6DC               	goto	l5754
  5501  001C70  0A0F               	xorlw	15	; case 88
  5502  001C72  B4D8               	btfsc	status,2,c
  5503  001C74  D6E2               	goto	l5756
  5504  001C76  0A01               	xorlw	1	; case 89
  5505  001C78  B4D8               	btfsc	status,2,c
  5506  001C7A  D6E8               	goto	l5758
  5507  001C7C  0A03               	xorlw	3	; case 90
  5508  001C7E  B4D8               	btfsc	status,2,c
  5509  001C80  D6EE               	goto	l5760
  5510  001C82                     l5798:
  5511                           
  5512                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  5513  001C82  EC45  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5514  001C86  0012               	return		;funcret
  5515  001C88                     __end_of_util_transmit_letter:
  5516                           	opt stack 0
  5517                           tblptru	equ	0xFF8
  5518                           tblptrh	equ	0xFF7
  5519                           tblptrl	equ	0xFF6
  5520                           tablat	equ	0xFF5
  5521                           postinc0	equ	0xFEE
  5522                           wreg	equ	0xFE8
  5523                           postdec1	equ	0xFE5
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           postinc2	equ	0xFDE
  5527                           postdec2	equ	0xFDD
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _util_transmit_space_between_words *****************
  5533 ;; Defined at:
  5534 ;;		line 304 in file "easat2_util_transmission.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5548 ;;      Params:         0       0       0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0
  5551 ;;      Totals:         0       0       0       0       0       0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    4
  5555 ;; This function calls:
  5556 ;;		_util_waits_delay_ms
  5557 ;; This function is called by:
  5558 ;;		_util_transmit_letter
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text19
  5563  003C7A                     __ptext19:
  5564                           	opt stack 0
  5565  003C7A                     _util_transmit_space_between_words:
  5566                           	opt stack 23
  5567                           
  5568                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  5569                           
  5570                           ;incstack = 0
  5571  003C7A  0E02               	movlw	2
  5572  003C7C  0100               	movlb	0	; () banked
  5573  003C7E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5574  003C80  0E0D               	movlw	13
  5575  003C82  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5576  003C84  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5577  003C88  0012               	return		;funcret
  5578  003C8A                     __end_of_util_transmit_space_between_words:
  5579                           	opt stack 0
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           postdec1	equ	0xFE5
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _util_transmit_space_between_letters *****************
  5596 ;; Defined at:
  5597 ;;		line 297 in file "easat2_util_transmission.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:         0       0       0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    4
  5618 ;; This function calls:
  5619 ;;		_util_waits_delay_ms
  5620 ;; This function is called by:
  5621 ;;		_util_transmit_letter
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text20
  5626  003C8A                     __ptext20:
  5627                           	opt stack 0
  5628  003C8A                     _util_transmit_space_between_letters:
  5629                           	opt stack 23
  5630                           
  5631                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  5632                           
  5633                           ;incstack = 0
  5634  003C8A  0E00               	movlw	0
  5635  003C8C  0100               	movlb	0	; () banked
  5636  003C8E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5637  003C90  0EE1               	movlw	225
  5638  003C92  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5639  003C94  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5640  003C98  0012               	return		;funcret
  5641  003C9A                     __end_of_util_transmit_space_between_letters:
  5642                           	opt stack 0
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           postinc0	equ	0xFEE
  5648                           wreg	equ	0xFE8
  5649                           postdec1	equ	0xFE5
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _util_transmit_morse_sequence *****************
  5659 ;; Defined at:
  5660 ;;		line 201 in file "easat2_util_transmission.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  morse_sequen    2   19[BANK0 ] PTR unsigned char 
  5663 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5664 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5665 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5666 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5667 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5668 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5669 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5670 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5671 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5672 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5673 ;;		 -> STR_3(3), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  i               2   40[COMRAM] int 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5685 ;;      Params:         0       2       0       0       0       0       0
  5686 ;;      Locals:         2       0       0       0       0       0       0
  5687 ;;      Temps:          2       0       0       0       0       0       0
  5688 ;;      Totals:         4       2       0       0       0       0       0
  5689 ;;Total ram usage:        6 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    6
  5692 ;; This function calls:
  5693 ;;		_strlen
  5694 ;;		_util_transmit_dash
  5695 ;;		_util_transmit_dot
  5696 ;;		_util_transmit_space_between_dots_dashes
  5697 ;; This function is called by:
  5698 ;;		_util_transmit_letter
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text21
  5703  003718                     __ptext21:
  5704                           	opt stack 0
  5705  003718                     _util_transmit_morse_sequence:
  5706                           	opt stack 21
  5707                           
  5708                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5709                           
  5710                           ;incstack = 0
  5711  003718  0E00               	movlw	0
  5712  00371A  6E2A               	movwf	util_transmit_morse_sequence@i+1,c
  5713  00371C  0E00               	movlw	0
  5714  00371E  6E29               	movwf	util_transmit_morse_sequence@i,c
  5715  003720  D01E               	goto	l5030
  5716  003722                     l5018:
  5717                           
  5718                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5719  003722  EC15  F01D         	call	_util_transmit_dot	;wreg free
  5720                           
  5721                           ;easat2_util_transmission.c: 211: break;
  5722  003726  D017               	goto	l5026
  5723  003728                     l5020:
  5724                           
  5725                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5726  003728  EC2F  F01D         	call	_util_transmit_dash	;wreg free
  5727                           
  5728                           ;easat2_util_transmission.c: 217: }
  5729                           
  5730                           ;easat2_util_transmission.c: 216: break;
  5731                           
  5732                           ;easat2_util_transmission.c: 215: default:
  5733                           
  5734                           ;easat2_util_transmission.c: 214: break;
  5735  00372C  D014               	goto	l5026
  5736  00372E                     l5024:
  5737  00372E  5029               	movf	util_transmit_morse_sequence@i,w,c
  5738  003730  0100               	movlb	0	; () banked
  5739  003732  2573               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5740  003734  6E27               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5741  003736  502A               	movf	util_transmit_morse_sequence@i+1,w,c
  5742  003738  0100               	movlb	0	; () banked
  5743  00373A  2174               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5744  00373C  6E28               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5745  00373E  C027  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5746  003742  C028  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5747  003746                     	if	0	;tblptru may be non-zero
  5748  003746                     	endif
  5749  003746                     	if	0	;tblptru may be non-zero
  5750  003746                     	endif
  5751  003746  0008               	tblrd		*
  5752  003748  50F5               	movf	tablat,w,c
  5753                           
  5754                           ; Switch size 1, requested type "space"
  5755                           ; Number of cases is 2, Range of values is 45 to 46
  5756                           ; switch strategies available:
  5757                           ; Name         Instructions Cycles
  5758                           ; simple_byte            7     4 (average)
  5759                           ;	Chosen strategy is simple_byte
  5760  00374A  0A2D               	xorlw	45	; case 45
  5761  00374C  B4D8               	btfsc	status,2,c
  5762  00374E  D7EC               	goto	l5020
  5763  003750  0A03               	xorlw	3	; case 46
  5764  003752  B4D8               	btfsc	status,2,c
  5765  003754  D7E6               	goto	l5018
  5766  003756                     l5026:
  5767                           
  5768                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5769  003756  EC4D  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5770  00375A  4A29               	infsnz	util_transmit_morse_sequence@i,f,c
  5771  00375C  2A2A               	incf	util_transmit_morse_sequence@i+1,f,c
  5772  00375E                     l5030:
  5773  00375E  C073  F071         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5774  003762  C074  F072         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5775  003766  ECBE  F01B         	call	_strlen	;wreg free
  5776  00376A  0100               	movlb	0	; () banked
  5777  00376C  5171               	movf	?_strlen& (0+255),w,b
  5778  00376E  5C29               	subwf	util_transmit_morse_sequence@i,w,c
  5779  003770  0100               	movlb	0	; () banked
  5780  003772  5172               	movf	(?_strlen+1)& (0+255),w,b
  5781  003774  582A               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5782  003776  B0D8               	btfsc	status,0,c
  5783  003778  0012               	return	
  5784  00377A  D7D9               	goto	l5024
  5785  00377C                     __end_of_util_transmit_morse_sequence:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           postinc0	equ	0xFEE
  5792                           wreg	equ	0xFE8
  5793                           postdec1	equ	0xFE5
  5794                           fsr1l	equ	0xFE1
  5795                           indf2	equ	0xFDF
  5796                           postinc2	equ	0xFDE
  5797                           postdec2	equ	0xFDD
  5798                           fsr2h	equ	0xFDA
  5799                           fsr2l	equ	0xFD9
  5800                           status	equ	0xFD8
  5801                           
  5802 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5803 ;; Defined at:
  5804 ;;		line 289 in file "easat2_util_transmission.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5818 ;;      Params:         0       0       0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0
  5821 ;;      Totals:         0       0       0       0       0       0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    4
  5825 ;; This function calls:
  5826 ;;		_util_waits_delay_ms
  5827 ;; This function is called by:
  5828 ;;		_util_transmit_morse_sequence
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text22
  5833  003C9A                     __ptext22:
  5834                           	opt stack 0
  5835  003C9A                     _util_transmit_space_between_dots_dashes:
  5836                           	opt stack 22
  5837                           
  5838                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;incstack = 0
  5842  003C9A  0E00               	movlw	0
  5843  003C9C  0100               	movlb	0	; () banked
  5844  003C9E  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5845  003CA0  0E4B               	movlw	75
  5846  003CA2  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5847  003CA4  ECAD  F01D         	call	_util_waits_delay_ms	;wreg free
  5848  003CA8  0012               	return		;funcret
  5849  003CAA                     __end_of_util_transmit_space_between_dots_dashes:
  5850                           	opt stack 0
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           postinc0	equ	0xFEE
  5856                           wreg	equ	0xFE8
  5857                           postdec1	equ	0xFE5
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           postdec2	equ	0xFDD
  5862                           fsr2h	equ	0xFDA
  5863                           fsr2l	equ	0xFD9
  5864                           status	equ	0xFD8
  5865                           
  5866 ;; *************** function _util_transmit_dot *****************
  5867 ;; Defined at:
  5868 ;;		line 231 in file "easat2_util_transmission.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  i               2   36[COMRAM] int 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5882 ;;      Params:         0       0       0       0       0       0       0
  5883 ;;      Locals:         2       0       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0
  5885 ;;      Totals:         2       0       0       0       0       0       0
  5886 ;;Total ram usage:        2 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    5
  5889 ;; This function calls:
  5890 ;;		_util_transmit_buzzer_1ms_cycle
  5891 ;;		_util_waits_delay_ms
  5892 ;; This function is called by:
  5893 ;;		_util_transmit_morse_sequence
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text23
  5898  003A2A                     __ptext23:
  5899                           	opt stack 0
  5900  003A2A                     _util_transmit_dot:
  5901                           	opt stack 21
  5902                           
  5903                           ;easat2_util_transmission.c: 235: (PORTDbits.RD1) = 1;
  5904                           
  5905                           ;incstack = 0
  5906  003A2A  8283               	bsf	3971,1,c	;volatile
  5907                           
  5908                           ;easat2_util_transmission.c: 236: (PORTDbits.RD3) = 1;
  5909  003A2C  8683               	bsf	3971,3,c	;volatile
  5910                           
  5911                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5912  003A2E  0E00               	movlw	0
  5913  003A30  6E26               	movwf	util_transmit_dot@i+1,c
  5914  003A32  0E00               	movlw	0
  5915  003A34  6E25               	movwf	util_transmit_dot@i,c
  5916  003A36  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5917  003A38  D006               	goto	l4736
  5918  003A3A  5026               	movf	util_transmit_dot@i+1,w,c
  5919  003A3C  E10D               	bnz	l337
  5920  003A3E  0E4B               	movlw	75
  5921  003A40  5C25               	subwf	util_transmit_dot@i,w,c
  5922  003A42  B0D8               	btfsc	status,0,c
  5923  003A44  D009               	goto	l337
  5924  003A46                     l4736:
  5925                           
  5926                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5927  003A46  EC1D  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5928                           
  5929                           ;easat2_util_transmission.c: 246: else
  5930                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5931  003A4A  4A25               	infsnz	util_transmit_dot@i,f,c
  5932  003A4C  2A26               	incf	util_transmit_dot@i+1,f,c
  5933  003A4E  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5934  003A50  D7FA               	goto	l4736
  5935  003A52  5026               	movf	util_transmit_dot@i+1,w,c
  5936  003A54  E101               	bnz	u4540
  5937  003A56  D7F3               	goto	L2
  5938  003A58                     u4540:
  5939  003A58                     l337:
  5940                           
  5941                           ;easat2_util_transmission.c: 249: }
  5942                           ;easat2_util_transmission.c: 251: (PORTDbits.RD1) = 0;
  5943  003A58  9283               	bcf	3971,1,c	;volatile
  5944                           
  5945                           ;easat2_util_transmission.c: 252: (PORTDbits.RD3) = 0;
  5946  003A5A  9683               	bcf	3971,3,c	;volatile
  5947  003A5C  0012               	return		;funcret
  5948  003A5E                     __end_of_util_transmit_dot:
  5949                           	opt stack 0
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           postdec1	equ	0xFE5
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _util_transmit_dash *****************
  5966 ;; Defined at:
  5967 ;;		line 262 in file "easat2_util_transmission.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  i               2   36[COMRAM] int 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5981 ;;      Params:         0       0       0       0       0       0       0
  5982 ;;      Locals:         2       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0
  5984 ;;      Totals:         2       0       0       0       0       0       0
  5985 ;;Total ram usage:        2 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    5
  5988 ;; This function calls:
  5989 ;;		_util_transmit_buzzer_1ms_cycle
  5990 ;;		_util_waits_delay_ms
  5991 ;; This function is called by:
  5992 ;;		_util_transmit_morse_sequence
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text24
  5997  003A5E                     __ptext24:
  5998                           	opt stack 0
  5999  003A5E                     _util_transmit_dash:
  6000                           	opt stack 21
  6001                           
  6002                           ;easat2_util_transmission.c: 266: (PORTDbits.RD1) = 1;
  6003                           
  6004                           ;incstack = 0
  6005  003A5E  8283               	bsf	3971,1,c	;volatile
  6006                           
  6007                           ;easat2_util_transmission.c: 267: (PORTDbits.RD3) = 1;
  6008  003A60  8683               	bsf	3971,3,c	;volatile
  6009                           
  6010                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  6011  003A62  0E00               	movlw	0
  6012  003A64  6E26               	movwf	util_transmit_dash@i+1,c
  6013  003A66  0E00               	movlw	0
  6014  003A68  6E25               	movwf	util_transmit_dash@i,c
  6015  003A6A  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6016  003A6C  D006               	goto	l4752
  6017  003A6E  5026               	movf	util_transmit_dash@i+1,w,c
  6018  003A70  E10D               	bnz	l344
  6019  003A72  0EE1               	movlw	225
  6020  003A74  5C25               	subwf	util_transmit_dash@i,w,c
  6021  003A76  B0D8               	btfsc	status,0,c
  6022  003A78  D009               	goto	l344
  6023  003A7A                     l4752:
  6024                           
  6025                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  6026  003A7A  EC1D  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  6027                           
  6028                           ;easat2_util_transmission.c: 277: else
  6029                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  6030  003A7E  4A25               	infsnz	util_transmit_dash@i,f,c
  6031  003A80  2A26               	incf	util_transmit_dash@i+1,f,c
  6032  003A82  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6033  003A84  D7FA               	goto	l4752
  6034  003A86  5026               	movf	util_transmit_dash@i+1,w,c
  6035  003A88  E101               	bnz	u4560
  6036  003A8A  D7F3               	goto	L3
  6037  003A8C                     u4560:
  6038  003A8C                     l344:
  6039                           
  6040                           ;easat2_util_transmission.c: 280: }
  6041                           ;easat2_util_transmission.c: 282: (PORTDbits.RD1) = 0;
  6042  003A8C  9283               	bcf	3971,1,c	;volatile
  6043                           
  6044                           ;easat2_util_transmission.c: 283: (PORTDbits.RD3) = 0;
  6045  003A8E  9683               	bcf	3971,3,c	;volatile
  6046  003A90  0012               	return		;funcret
  6047  003A92                     __end_of_util_transmit_dash:
  6048                           	opt stack 0
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           postdec1	equ	0xFE5
  6056                           fsr1l	equ	0xFE1
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _util_waits_delay_ms *****************
  6065 ;; Defined at:
  6066 ;;		line 40 in file "easat2_util_waits.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  ms              2   17[BANK0 ] int 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  i               2   34[COMRAM] int 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6080 ;;      Params:         0       2       0       0       0       0       0
  6081 ;;      Locals:         2       0       0       0       0       0       0
  6082 ;;      Temps:          1       0       0       0       0       0       0
  6083 ;;      Totals:         3       2       0       0       0       0       0
  6084 ;;Total ram usage:        5 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    3
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_util_transmit_dot
  6091 ;;		_util_transmit_dash
  6092 ;;		_util_transmit_space_between_dots_dashes
  6093 ;;		_util_transmit_space_between_letters
  6094 ;;		_util_transmit_space_between_words
  6095 ;;		_util_waits_delay_secs
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text25
  6100  003B5A                     __ptext25:
  6101                           	opt stack 0
  6102  003B5A                     _util_waits_delay_ms:
  6103                           	opt stack 24
  6104                           
  6105                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6106                           
  6107                           ;incstack = 0
  6108  003B5A  0E00               	movlw	0
  6109  003B5C  6E24               	movwf	util_waits_delay_ms@i+1,c
  6110  003B5E  0E00               	movlw	0
  6111  003B60  6E23               	movwf	util_waits_delay_ms@i,c
  6112  003B62  D006               	goto	l390
  6113  003B64                     l4678:
  6114                           
  6115                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6116  003B64  0EA6               	movlw	166
  6117  003B66                     u6417:
  6118  003B66  2EE8               	decfsz	wreg,f,c
  6119  003B68  D7FE               	bra	u6417
  6120  003B6A  D000               	nop2	
  6121  003B6C  4A23               	infsnz	util_waits_delay_ms@i,f,c
  6122  003B6E  2A24               	incf	util_waits_delay_ms@i+1,f,c
  6123  003B70                     l390:
  6124  003B70  0100               	movlb	0	; () banked
  6125  003B72  5171               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6126  003B74  5C23               	subwf	util_waits_delay_ms@i,w,c
  6127  003B76  5024               	movf	util_waits_delay_ms@i+1,w,c
  6128  003B78  0A80               	xorlw	128
  6129  003B7A  6E22               	movwf	??_util_waits_delay_ms& (0+255),c
  6130  003B7C  0100               	movlb	0	; () banked
  6131  003B7E  5172               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6132  003B80  0A80               	xorlw	128
  6133  003B82  5822               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6134  003B84  B0D8               	btfsc	status,0,c
  6135  003B86  0012               	return	
  6136  003B88  D7ED               	goto	l4678
  6137  003B8A                     __end_of_util_waits_delay_ms:
  6138                           	opt stack 0
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           postinc0	equ	0xFEE
  6144                           wreg	equ	0xFE8
  6145                           postdec1	equ	0xFE5
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  6155 ;; Defined at:
  6156 ;;		line 310 in file "easat2_util_transmission.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6170 ;;      Params:         0       0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    4
  6177 ;; This function calls:
  6178 ;;		_util_waits_delay_hundred_us
  6179 ;; This function is called by:
  6180 ;;		_util_transmit_dot
  6181 ;;		_util_transmit_dash
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text26
  6186  003C3A                     __ptext26:
  6187                           	opt stack 0
  6188  003C3A                     _util_transmit_buzzer_1ms_cycle:
  6189                           	opt stack 21
  6190                           
  6191                           ;easat2_util_transmission.c: 312: (PORTDbits.RD2) = 1;
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;incstack = 0
  6195  003C3A  8483               	bsf	3971,2,c	;volatile
  6196                           
  6197                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  6198  003C3C  0E00               	movlw	0
  6199  003C3E  0100               	movlb	0	; () banked
  6200  003C40  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6201  003C42  0E05               	movlw	5
  6202  003C44  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6203  003C46  ECC5  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6204                           
  6205                           ;easat2_util_transmission.c: 314: (PORTDbits.RD2) = 0;
  6206  003C4A  9483               	bcf	3971,2,c	;volatile
  6207                           
  6208                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  6209  003C4C  0E00               	movlw	0
  6210  003C4E  0100               	movlb	0	; () banked
  6211  003C50  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6212  003C52  0E05               	movlw	5
  6213  003C54  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6214  003C56  ECC5  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6215  003C5A  0012               	return		;funcret
  6216  003C5C                     __end_of_util_transmit_buzzer_1ms_cycle:
  6217                           	opt stack 0
  6218                           tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           postdec1	equ	0xFE5
  6225                           fsr1l	equ	0xFE1
  6226                           indf2	equ	0xFDF
  6227                           postinc2	equ	0xFDE
  6228                           postdec2	equ	0xFDD
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _util_waits_delay_hundred_us *****************
  6234 ;; Defined at:
  6235 ;;		line 47 in file "easat2_util_waits.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  hun_us          2   17[BANK0 ] int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  i               2   34[COMRAM] int 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6249 ;;      Params:         0       2       0       0       0       0       0
  6250 ;;      Locals:         2       0       0       0       0       0       0
  6251 ;;      Temps:          1       0       0       0       0       0       0
  6252 ;;      Totals:         3       2       0       0       0       0       0
  6253 ;;Total ram usage:        5 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    3
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_util_transmit_buzzer_1ms_cycle
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text27
  6264  003B8A                     __ptext27:
  6265                           	opt stack 0
  6266  003B8A                     _util_waits_delay_hundred_us:
  6267                           	opt stack 21
  6268                           
  6269                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  6270                           
  6271                           ;incstack = 0
  6272  003B8A  0E00               	movlw	0
  6273  003B8C  6E24               	movwf	util_waits_delay_hundred_us@i+1,c
  6274  003B8E  0E00               	movlw	0
  6275  003B90  6E23               	movwf	util_waits_delay_hundred_us@i,c
  6276  003B92  D006               	goto	l396
  6277  003B94                     l4666:
  6278                           
  6279                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  6280  003B94  0E10               	movlw	16
  6281  003B96                     u6427:
  6282  003B96  2EE8               	decfsz	wreg,f,c
  6283  003B98  D7FE               	bra	u6427
  6284  003B9A  D000               	nop2	
  6285  003B9C  4A23               	infsnz	util_waits_delay_hundred_us@i,f,c
  6286  003B9E  2A24               	incf	util_waits_delay_hundred_us@i+1,f,c
  6287  003BA0                     l396:
  6288  003BA0  0100               	movlb	0	; () banked
  6289  003BA2  5171               	movf	util_waits_delay_hundred_us@hun_us& (0+255),w,b
  6290  003BA4  5C23               	subwf	util_waits_delay_hundred_us@i,w,c
  6291  003BA6  5024               	movf	util_waits_delay_hundred_us@i+1,w,c
  6292  003BA8  0A80               	xorlw	128
  6293  003BAA  6E22               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  6294  003BAC  0100               	movlb	0	; () banked
  6295  003BAE  5172               	movf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),w,b
  6296  003BB0  0A80               	xorlw	128
  6297  003BB2  5822               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  6298  003BB4  B0D8               	btfsc	status,0,c
  6299  003BB6  0012               	return	
  6300  003BB8  D7ED               	goto	l4666
  6301  003BBA                     __end_of_util_waits_delay_hundred_us:
  6302                           	opt stack 0
  6303                           tblptru	equ	0xFF8
  6304                           tblptrh	equ	0xFF7
  6305                           tblptrl	equ	0xFF6
  6306                           tablat	equ	0xFF5
  6307                           postinc0	equ	0xFEE
  6308                           wreg	equ	0xFE8
  6309                           postdec1	equ	0xFE5
  6310                           fsr1l	equ	0xFE1
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           postdec2	equ	0xFDD
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _strlen *****************
  6319 ;; Defined at:
  6320 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  6323 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6324 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6325 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6326 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6327 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6328 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6329 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6330 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6331 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6332 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6333 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  cp              2   35[COMRAM] PTR const unsigned char 
  6336 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6337 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6338 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6339 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6340 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6341 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6342 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6343 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6344 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6345 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6346 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  2   17[BANK0 ] unsigned int 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6356 ;;      Params:         0       2       0       0       0       0       0
  6357 ;;      Locals:         2       0       0       0       0       0       0
  6358 ;;      Temps:          2       0       0       0       0       0       0
  6359 ;;      Totals:         4       2       0       0       0       0       0
  6360 ;;Total ram usage:        6 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_util_beacon_transmission
  6367 ;;		_util_transmit_morse_sequence
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text28
  6372  00377C                     __ptext28:
  6373                           	opt stack 0
  6374  00377C                     _strlen:
  6375                           	opt stack 23
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;incstack = 0
  6379  00377C  C071  F024         	movff	strlen@s,strlen@cp
  6380  003780  C072  F025         	movff	strlen@s+1,strlen@cp+1
  6381  003784  D002               	goto	l4722
  6382  003786                     l4720:
  6383  003786  4A24               	infsnz	strlen@cp,f,c
  6384  003788  2A25               	incf	strlen@cp+1,f,c
  6385  00378A                     l4722:
  6386  00378A  C024  FFF6         	movff	strlen@cp,tblptrl
  6387  00378E  C025  FFF7         	movff	strlen@cp+1,tblptrh
  6388  003792  6AF8               	clrf	tblptru,c
  6389  003794  0E05               	movlw	(high __ramtop+-1)
  6390  003796  64F7               	cpfsgt	tblptrh,c
  6391  003798  D003               	bra	u4517
  6392  00379A  0008               	tblrd		*
  6393  00379C  50F5               	movf	tablat,w,c
  6394  00379E  D005               	bra	u4510
  6395  0037A0                     u4517:
  6396  0037A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6397  0037A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6398  0037A8  50EF               	movf	indf0,w,c
  6399  0037AA                     u4510:
  6400  0037AA  0900               	iorlw	0
  6401  0037AC  A4D8               	btfss	status,2,c
  6402  0037AE  D7EB               	goto	l4720
  6403  0037B0  C071  F022         	movff	strlen@s,??_strlen
  6404  0037B4  C072  F023         	movff	strlen@s+1,??_strlen+1
  6405  0037B8  1E22               	comf	??_strlen,f,c
  6406  0037BA  1E23               	comf	??_strlen+1,f,c
  6407  0037BC  4A22               	infsnz	??_strlen,f,c
  6408  0037BE  2A23               	incf	??_strlen+1,f,c
  6409  0037C0  5024               	movf	strlen@cp,w,c
  6410  0037C2  2422               	addwf	??_strlen,w,c
  6411  0037C4  0100               	movlb	0	; () banked
  6412  0037C6  6F71               	movwf	?_strlen& (0+255),b
  6413  0037C8  5025               	movf	strlen@cp+1,w,c
  6414  0037CA  2023               	addwfc	??_strlen+1,w,c
  6415  0037CC  0100               	movlb	0	; () banked
  6416  0037CE  6F72               	movwf	(?_strlen+1)& (0+255),b
  6417  0037D0  0012               	return	
  6418  0037D2                     __end_of_strlen:
  6419                           	opt stack 0
  6420                           tblptru	equ	0xFF8
  6421                           tblptrh	equ	0xFF7
  6422                           tblptrl	equ	0xFF6
  6423                           tablat	equ	0xFF5
  6424                           indf0	equ	0xFEF
  6425                           postinc0	equ	0xFEE
  6426                           fsr0h	equ	0xFEA
  6427                           fsr0l	equ	0xFE9
  6428                           wreg	equ	0xFE8
  6429                           postdec1	equ	0xFE5
  6430                           fsr1l	equ	0xFE1
  6431                           indf2	equ	0xFDF
  6432                           postinc2	equ	0xFDE
  6433                           postdec2	equ	0xFDD
  6434                           fsr2h	equ	0xFDA
  6435                           fsr2l	equ	0xFD9
  6436                           status	equ	0xFD8
  6437                           
  6438 ;; *************** function _strcpy *****************
  6439 ;; Defined at:
  6440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6443 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6444 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6445 ;;		 -> STR_1(7), 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6448 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2   17[BANK0 ] PTR unsigned char 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6458 ;;      Params:         0       4       0       0       0       0       0
  6459 ;;      Locals:         2       0       0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0
  6461 ;;      Totals:         2       4       0       0       0       0       0
  6462 ;;Total ram usage:        6 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    3
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_util_beacon_transmission
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text29
  6473  003AC4                     __ptext29:
  6474                           	opt stack 0
  6475  003AC4                     _strcpy:
  6476                           	opt stack 25
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;incstack = 0
  6480  003AC4  C071  F022         	movff	strcpy@to,strcpy@cp
  6481  003AC8  C072  F023         	movff	strcpy@to+1,strcpy@cp+1
  6482  003ACC  D005               	goto	l5402
  6483  003ACE                     l5400:
  6484  003ACE  4A22               	infsnz	strcpy@cp,f,c
  6485  003AD0  2A23               	incf	strcpy@cp+1,f,c
  6486  003AD2  0100               	movlb	0	; () banked
  6487  003AD4  4B73               	infsnz	strcpy@from& (0+255),f,b
  6488  003AD6  2B74               	incf	(strcpy@from+1)& (0+255),f,b
  6489  003AD8                     l5402:
  6490  003AD8  C073  FFF6         	movff	strcpy@from,tblptrl
  6491  003ADC  C074  FFF7         	movff	strcpy@from+1,tblptrh
  6492  003AE0                     	if	0	;tblptru may be non-zero
  6493  003AE0                     	endif
  6494  003AE0                     	if	0	;tblptru may be non-zero
  6495  003AE0                     	endif
  6496  003AE0  C022  FFD9         	movff	strcpy@cp,fsr2l
  6497  003AE4  C023  FFDA         	movff	strcpy@cp+1,fsr2h
  6498  003AE8  0008               	tblrd		*
  6499  003AEA  CFF5 FFDF          	movff	tablat,indf2
  6500  003AEE  50DF               	movf	indf2,w,c
  6501  003AF0  B4D8               	btfsc	status,2,c
  6502  003AF2  0012               	return	
  6503  003AF4  D7EC               	goto	l5400
  6504  003AF6                     __end_of_strcpy:
  6505                           	opt stack 0
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           indf0	equ	0xFEF
  6511                           postinc0	equ	0xFEE
  6512                           fsr0h	equ	0xFEA
  6513                           fsr0l	equ	0xFE9
  6514                           wreg	equ	0xFE8
  6515                           postdec1	equ	0xFE5
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _strcat *****************
  6525 ;; Defined at:
  6526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6529 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6530 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6531 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6534 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  2   17[BANK0 ] PTR unsigned char 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6544 ;;      Params:         0       4       0       0       0       0       0
  6545 ;;      Locals:         2       0       0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0
  6547 ;;      Totals:         2       4       0       0       0       0       0
  6548 ;;Total ram usage:        6 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    3
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_util_beacon_transmission
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text30
  6559  0038B8                     __ptext30:
  6560                           	opt stack 0
  6561  0038B8                     _strcat:
  6562                           	opt stack 25
  6563                           
  6564                           ;incstack = 0
  6565  0038B8  C071  F022         	movff	strcat@to,strcat@cp
  6566  0038BC  C072  F023         	movff	strcat@to+1,strcat@cp+1
  6567  0038C0  D002               	goto	l5702
  6568  0038C2                     l5700:
  6569  0038C2  4A22               	infsnz	strcat@cp,f,c
  6570  0038C4  2A23               	incf	strcat@cp+1,f,c
  6571  0038C6                     l5702:
  6572  0038C6  C022  FFD9         	movff	strcat@cp,fsr2l
  6573  0038CA  C023  FFDA         	movff	strcat@cp+1,fsr2h
  6574  0038CE  50DF               	movf	indf2,w,c
  6575  0038D0  B4D8               	btfsc	status,2,c
  6576  0038D2  D006               	goto	l5706
  6577  0038D4  D7F6               	goto	l5700
  6578  0038D6                     l5704:
  6579  0038D6  4A22               	infsnz	strcat@cp,f,c
  6580  0038D8  2A23               	incf	strcat@cp+1,f,c
  6581  0038DA  0100               	movlb	0	; () banked
  6582  0038DC  4B73               	infsnz	strcat@from& (0+255),f,b
  6583  0038DE  2B74               	incf	(strcat@from+1)& (0+255),f,b
  6584  0038E0                     l5706:
  6585  0038E0  C073  FFD9         	movff	strcat@from,fsr2l
  6586  0038E4  C074  FFDA         	movff	strcat@from+1,fsr2h
  6587  0038E8  C022  FFE1         	movff	strcat@cp,fsr1l
  6588  0038EC  C023  FFE2         	movff	strcat@cp+1,fsr1h
  6589  0038F0  CFDF FFE7          	movff	indf2,indf1
  6590  0038F4  50E7               	movf	indf1,w,c
  6591  0038F6  B4D8               	btfsc	status,2,c
  6592  0038F8  0012               	return	
  6593  0038FA  D7ED               	goto	l5704
  6594  0038FC                     __end_of_strcat:
  6595                           	opt stack 0
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           indf0	equ	0xFEF
  6601                           postinc0	equ	0xFEE
  6602                           fsr0h	equ	0xFEA
  6603                           fsr0l	equ	0xFE9
  6604                           wreg	equ	0xFE8
  6605                           indf1	equ	0xFE7
  6606                           postdec1	equ	0xFE5
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           postinc2	equ	0xFDE
  6611                           postdec2	equ	0xFDD
  6612                           fsr2h	equ	0xFDA
  6613                           fsr2l	equ	0xFD9
  6614                           status	equ	0xFD8
  6615                           
  6616 ;; *************** function _sprintf *****************
  6617 ;; Defined at:
  6618 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  sp              2   69[BANK0 ] PTR unsigned char 
  6621 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6622 ;;  f               2   71[BANK0 ] PTR const unsigned char 
  6623 ;;		 -> STR_2(23), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  val             4  102[BANK0 ] unsigned long 
  6626 ;;  tmpval          4   98[BANK0 ] struct .
  6627 ;;  fval            3  108[BANK0 ] struct .
  6628 ;;  cp              3    0        PTR const unsigned char 
  6629 ;;  prec            2  111[BANK0 ] int 
  6630 ;;  exp             2  106[BANK0 ] int 
  6631 ;;  width           2   96[BANK0 ] int 
  6632 ;;  flag            2   94[BANK0 ] unsigned short 
  6633 ;;  ap              2   92[BANK0 ] PTR void [1]
  6634 ;;		 -> ?_sprintf(2), 
  6635 ;;  len             2    0        unsigned int 
  6636 ;;  c               1  113[BANK0 ] char 
  6637 ;;  d               1    0        unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2   69[BANK0 ] int 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6647 ;;      Params:         0      14       0       0       0       0       0
  6648 ;;      Locals:         0      25       0       0       0       0       0
  6649 ;;      Temps:          0       6       0       0       0       0       0
  6650 ;;      Totals:         0      45       0       0       0       0       0
  6651 ;;Total ram usage:       45 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    6
  6654 ;; This function calls:
  6655 ;;		___awdiv
  6656 ;;		___ftadd
  6657 ;;		___ftge
  6658 ;;		___ftmul
  6659 ;;		___ftneg
  6660 ;;		___ftsub
  6661 ;;		___fttol
  6662 ;;		___lldiv
  6663 ;;		___llmod
  6664 ;;		___lltoft
  6665 ;;		___wmul
  6666 ;;		__div_to_l_
  6667 ;;		__tdiv_to_l_
  6668 ;;		_fround
  6669 ;;		_isdigit
  6670 ;;		_scale
  6671 ;; This function is called by:
  6672 ;;		_util_beacon_transmission
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text31
  6677  0000AA                     __ptext31:
  6678                           	opt stack 0
  6679  0000AA                     _sprintf:
  6680                           	opt stack 22
  6681                           
  6682                           ;doprnt.c: 494: va_list ap;
  6683                           ;doprnt.c: 499: signed char c;
  6684                           ;doprnt.c: 501: int width;
  6685                           ;doprnt.c: 504: int prec;
  6686                           ;doprnt.c: 508: unsigned short flag;
  6687                           ;doprnt.c: 515: char d;
  6688                           ;doprnt.c: 516: double fval;
  6689                           ;doprnt.c: 517: int exp;
  6690                           ;doprnt.c: 523: union {
  6691                           ;doprnt.c: 524: unsigned long vd;
  6692                           ;doprnt.c: 525: double integ;
  6693                           ;doprnt.c: 526: } tmpval;
  6694                           ;doprnt.c: 528: unsigned long val;
  6695                           ;doprnt.c: 529: unsigned len;
  6696                           ;doprnt.c: 530: const char * cp;
  6697                           ;doprnt.c: 533: *ap = __va_start();
  6698                           
  6699                           ;incstack = 0
  6700  0000AA  0EA9               	movlw	low (?_sprintf+4)
  6701  0000AC  0100               	movlb	0	; () banked
  6702  0000AE  6FBC               	movwf	sprintf@ap& (0+255),b
  6703  0000B0  0E00               	movlw	high (?_sprintf+4)
  6704  0000B2  0100               	movlb	0	; () banked
  6705  0000B4  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6706                           
  6707                           ;doprnt.c: 536: while(c = *f++) {
  6708  0000B6  EF0E  F006         	goto	l5692
  6709  0000BA                     l5406:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;doprnt.c: 538: if(c != '%')
  6713  0000BA  0E25               	movlw	37
  6714  0000BC  0100               	movlb	0	; () banked
  6715  0000BE  19D1               	xorwf	sprintf@c& (0+255),w,b
  6716  0000C0  B4D8               	btfsc	status,2,c
  6717  0000C2  D00B               	goto	l5412
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;doprnt.c: 540: {
  6721                           ;doprnt.c: 541: ((*sp++ = (c)));
  6722  0000C4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  6723  0000C8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  6724  0000CC  C0D1  FFDF         	movff	sprintf@c,indf2
  6725                           
  6726                           ; BSR set to: 0
  6727  0000D0  0100               	movlb	0	; () banked
  6728  0000D2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  6729  0000D4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  6730                           
  6731                           ;doprnt.c: 542: continue;
  6732  0000D6  EF0E  F006         	goto	l5692
  6733  0000DA                     l5412:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;doprnt.c: 543: }
  6737                           ;doprnt.c: 546: width = 0;
  6738  0000DA  0E00               	movlw	0
  6739  0000DC  0100               	movlb	0	; () banked
  6740  0000DE  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6741  0000E0  0E00               	movlw	0
  6742  0000E2  6FC0               	movwf	sprintf@width& (0+255),b
  6743                           
  6744                           ;doprnt.c: 548: flag = 0;
  6745  0000E4  0E00               	movlw	0
  6746  0000E6  0100               	movlb	0	; () banked
  6747  0000E8  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  6748  0000EA  0E00               	movlw	0
  6749  0000EC  6FBE               	movwf	sprintf@flag& (0+255),b
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6753  0000EE  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6754  0000F2  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6755  0000F6                     	if	0	;tblptru may be non-zero
  6756  0000F6                     	endif
  6757  0000F6                     	if	0	;tblptru may be non-zero
  6758  0000F6                     	endif
  6759  0000F6  0008               	tblrd		*
  6760  0000F8  50F5               	movf	tablat,w,c
  6761  0000FA  EC2E  F01E         	call	_isdigit
  6762  0000FE  A0D8               	btfss	status,0,c
  6763  000100  D040               	goto	l5426
  6764                           
  6765                           ;doprnt.c: 598: width = 0;
  6766  000102  0E00               	movlw	0
  6767  000104  0100               	movlb	0	; () banked
  6768  000106  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6769  000108  0E00               	movlw	0
  6770  00010A  6FC0               	movwf	sprintf@width& (0+255),b
  6771  00010C                     l5418:
  6772                           
  6773                           ;doprnt.c: 600: width *= 10;
  6774  00010C  C0C0  F079         	movff	sprintf@width,___wmul@multiplier
  6775  000110  C0C1  F07A         	movff	sprintf@width+1,___wmul@multiplier+1
  6776  000114  0E00               	movlw	0
  6777  000116  0100               	movlb	0	; () banked
  6778  000118  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6779  00011A  0E0A               	movlw	10
  6780  00011C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6781  00011E  EC7B  F01D         	call	___wmul	;wreg free
  6782  000122  C079  F0C0         	movff	?___wmul,sprintf@width
  6783  000126  C07A  F0C1         	movff	?___wmul+1,sprintf@width+1
  6784                           
  6785                           ;doprnt.c: 601: width += *f++ - '0';
  6786  00012A  0ED0               	movlw	208
  6787  00012C  0100               	movlb	0	; () banked
  6788  00012E  6FB3               	movwf	??_sprintf& (0+255),b
  6789  000130  0EFF               	movlw	255
  6790  000132  0100               	movlb	0	; () banked
  6791  000134  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  6792  000136  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6793  00013A  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6794  00013E                     	if	0	;tblptru may be non-zero
  6795  00013E                     	endif
  6796  00013E                     	if	0	;tblptru may be non-zero
  6797  00013E                     	endif
  6798  00013E  0008               	tblrd		*
  6799  000140  50F5               	movf	tablat,w,c
  6800  000142  0100               	movlb	0	; () banked
  6801  000144  6FB5               	movwf	(??_sprintf+2)& (0+255),b
  6802  000146  6BB6               	clrf	(??_sprintf+3)& (0+255),b
  6803  000148  0100               	movlb	0	; () banked
  6804  00014A  51B3               	movf	??_sprintf& (0+255),w,b
  6805  00014C  0100               	movlb	0	; () banked
  6806  00014E  27B5               	addwf	(??_sprintf+2)& (0+255),f,b
  6807  000150  0100               	movlb	0	; () banked
  6808  000152  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  6809  000154  0100               	movlb	0	; () banked
  6810  000156  23B6               	addwfc	(??_sprintf+3)& (0+255),f,b
  6811  000158  0100               	movlb	0	; () banked
  6812  00015A  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  6813  00015C  0100               	movlb	0	; () banked
  6814  00015E  27C0               	addwf	sprintf@width& (0+255),f,b
  6815  000160  0100               	movlb	0	; () banked
  6816  000162  51B6               	movf	(??_sprintf+3)& (0+255),w,b
  6817  000164  0100               	movlb	0	; () banked
  6818  000166  23C1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6819                           
  6820                           ; BSR set to: 0
  6821  000168  0100               	movlb	0	; () banked
  6822  00016A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6823  00016C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6827  00016E  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6828  000172  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6829  000176                     	if	0	;tblptru may be non-zero
  6830  000176                     	endif
  6831  000176                     	if	0	;tblptru may be non-zero
  6832  000176                     	endif
  6833  000176  0008               	tblrd		*
  6834  000178  50F5               	movf	tablat,w,c
  6835  00017A  EC2E  F01E         	call	_isdigit
  6836  00017E  B0D8               	btfsc	status,0,c
  6837  000180  D7C5               	goto	l5418
  6838  000182                     l5426:
  6839                           
  6840                           ;doprnt.c: 608: }
  6841                           ;doprnt.c: 611: if(*f == '.') {
  6842  000182  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6843  000186  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6844  00018A                     	if	0	;tblptru may be non-zero
  6845  00018A                     	endif
  6846  00018A                     	if	0	;tblptru may be non-zero
  6847  00018A                     	endif
  6848  00018A  0008               	tblrd		*
  6849  00018C  50F5               	movf	tablat,w,c
  6850  00018E  0A2E               	xorlw	46
  6851  000190  A4D8               	btfss	status,2,c
  6852  000192  D039               	goto	l5438
  6853                           
  6854                           ;doprnt.c: 612: flag |= 0x4000;
  6855  000194  0100               	movlb	0	; () banked
  6856  000196  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  6857                           
  6858                           ;doprnt.c: 613: f++;
  6859  000198  0100               	movlb	0	; () banked
  6860  00019A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6861  00019C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;doprnt.c: 620: {
  6865                           ;doprnt.c: 621: prec = 0;
  6866  00019E  0E00               	movlw	0
  6867  0001A0  0100               	movlb	0	; () banked
  6868  0001A2  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6869  0001A4  0E00               	movlw	0
  6870  0001A6  6FCF               	movwf	sprintf@prec& (0+255),b
  6871                           
  6872                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6873  0001A8  D023               	goto	l5436
  6874  0001AA                     l5432:
  6875                           
  6876                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6877  0001AA  C0CF  F079         	movff	sprintf@prec,___wmul@multiplier
  6878  0001AE  C0D0  F07A         	movff	sprintf@prec+1,___wmul@multiplier+1
  6879  0001B2  0E00               	movlw	0
  6880  0001B4  0100               	movlb	0	; () banked
  6881  0001B6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6882  0001B8  0E0A               	movlw	10
  6883  0001BA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6884  0001BC  EC7B  F01D         	call	___wmul	;wreg free
  6885  0001C0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6886  0001C4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6887  0001C8                     	if	0	;tblptru may be non-zero
  6888  0001C8                     	endif
  6889  0001C8                     	if	0	;tblptru may be non-zero
  6890  0001C8                     	endif
  6891  0001C8  0008               	tblrd		*
  6892  0001CA  50F5               	movf	tablat,w,c
  6893  0001CC  0100               	movlb	0	; () banked
  6894  0001CE  2779               	addwf	?___wmul& (0+255),f,b
  6895  0001D0  0E00               	movlw	0
  6896  0001D2  0100               	movlb	0	; () banked
  6897  0001D4  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  6898  0001D6  0ED0               	movlw	208
  6899  0001D8  0100               	movlb	0	; () banked
  6900  0001DA  2579               	addwf	?___wmul& (0+255),w,b
  6901  0001DC  0100               	movlb	0	; () banked
  6902  0001DE  6FCF               	movwf	sprintf@prec& (0+255),b
  6903  0001E0  0EFF               	movlw	255
  6904  0001E2  0100               	movlb	0	; () banked
  6905  0001E4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  6906  0001E6  0100               	movlb	0	; () banked
  6907  0001E8  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6908                           
  6909                           ; BSR set to: 0
  6910  0001EA  0100               	movlb	0	; () banked
  6911  0001EC  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6912  0001EE  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6913  0001F0                     l5436:
  6914                           
  6915                           ; BSR set to: 0
  6916  0001F0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6917  0001F4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6918  0001F8                     	if	0	;tblptru may be non-zero
  6919  0001F8                     	endif
  6920  0001F8                     	if	0	;tblptru may be non-zero
  6921  0001F8                     	endif
  6922  0001F8  0008               	tblrd		*
  6923  0001FA  50F5               	movf	tablat,w,c
  6924  0001FC  EC2E  F01E         	call	_isdigit
  6925  000200  A0D8               	btfss	status,0,c
  6926  000202  D00C               	goto	l5446
  6927  000204  D7D2               	goto	l5432
  6928  000206                     l5438:
  6929                           
  6930                           ;doprnt.c: 626: prec = 0;
  6931  000206  0E00               	movlw	0
  6932  000208  0100               	movlb	0	; () banked
  6933  00020A  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6934  00020C  0E00               	movlw	0
  6935  00020E  6FCF               	movwf	sprintf@prec& (0+255),b
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;doprnt.c: 628: flag |= 0x1000;
  6939  000210  0100               	movlb	0	; () banked
  6940  000212  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;doprnt.c: 630: }
  6944                           ;doprnt.c: 635: switch(c = *f++) {
  6945  000214  D003               	goto	l5446
  6946  000216                     l5442:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;doprnt.c: 663: flag |= 0x400;
  6950  000216  0100               	movlb	0	; () banked
  6951  000218  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;doprnt.c: 698: case 'i':
  6955                           ;doprnt.c: 699: break;
  6956                           
  6957                           ; BSR set to: 0
  6958                           
  6959                           ;doprnt.c: 697: case 'd':
  6960                           
  6961                           ;doprnt.c: 664: break;
  6962  00021A  D01A               	goto	l5448
  6963  00021C                     l5446:
  6964  00021C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6965  000220  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6966  000224  0100               	movlb	0	; () banked
  6967  000226  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6968  000228  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6969  00022A                     	if	0	;tblptru may be non-zero
  6970  00022A                     	endif
  6971  00022A                     	if	0	;tblptru may be non-zero
  6972  00022A                     	endif
  6973  00022A  0008               	tblrd		*
  6974  00022C  CFF5 F0D1          	movff	tablat,sprintf@c
  6975  000230  0100               	movlb	0	; () banked
  6976  000232  51D1               	movf	sprintf@c& (0+255),w,b
  6977                           
  6978                           ; Switch size 1, requested type "space"
  6979                           ; Number of cases is 4, Range of values is 0 to 105
  6980                           ; switch strategies available:
  6981                           ; Name         Instructions Cycles
  6982                           ; simple_byte           13     7 (average)
  6983                           ;	Chosen strategy is simple_byte
  6984  000234  0A00               	xorlw	0	; case 0
  6985  000236  B4D8               	btfsc	status,2,c
  6986  000238  EF1D  F006         	goto	l5694
  6987  00023C  0A64               	xorlw	100	; case 100
  6988  00023E  B4D8               	btfsc	status,2,c
  6989  000240  D007               	goto	l5448
  6990  000242  0A02               	xorlw	2	; case 102
  6991  000244  B4D8               	btfsc	status,2,c
  6992  000246  D7E7               	goto	l5442
  6993  000248  0A0F               	xorlw	15	; case 105
  6994  00024A  A4D8               	btfss	status,2,c
  6995  00024C  EF0E  F006         	goto	l5692
  6996  000250                     l5448:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;doprnt.c: 825: if(flag & (0x700)) {
  7000  000250  0E07               	movlw	7
  7001  000252  0100               	movlb	0	; () banked
  7002  000254  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7003  000256  B4D8               	btfsc	status,2,c
  7004  000258  D379               	goto	l5612
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;doprnt.c: 827: if(flag & 0x1000)
  7008  00025A  0100               	movlb	0	; () banked
  7009  00025C  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  7010  00025E  D005               	goto	l5454
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;doprnt.c: 829: prec = 6;
  7014  000260  0E00               	movlw	0
  7015  000262  0100               	movlb	0	; () banked
  7016  000264  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  7017  000266  0E06               	movlw	6
  7018  000268  6FCF               	movwf	sprintf@prec& (0+255),b
  7019  00026A                     l5454:
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7023  00026A  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7024  00026E  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7025  000272  CFDE F0CC          	movff	postinc2,sprintf@fval
  7026  000276  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  7027  00027A  CFDD F0CE          	movff	postdec2,sprintf@fval+2
  7028                           
  7029                           ; BSR set to: 0
  7030  00027E  0E03               	movlw	3
  7031  000280  0100               	movlb	0	; () banked
  7032  000282  27BC               	addwf	sprintf@ap& (0+255),f,b
  7033  000284  0E00               	movlw	0
  7034  000286  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;doprnt.c: 831: if(fval < 0.0) {
  7038  000288  0100               	movlb	0	; () banked
  7039  00028A  AFCE               	btfss	(sprintf@fval+2)& (0+255),7,b
  7040  00028C  D011               	goto	l5464
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;doprnt.c: 832: fval = -fval;
  7044  00028E  C0CC  F071         	movff	sprintf@fval,___ftneg@f1
  7045  000292  C0CD  F072         	movff	sprintf@fval+1,___ftneg@f1+1
  7046  000296  C0CE  F073         	movff	sprintf@fval+2,___ftneg@f1+2
  7047  00029A  ECDD  F01D         	call	___ftneg	;wreg free
  7048  00029E  C071  F0CC         	movff	?___ftneg,sprintf@fval
  7049  0002A2  C072  F0CD         	movff	?___ftneg+1,sprintf@fval+1
  7050  0002A6  C073  F0CE         	movff	?___ftneg+2,sprintf@fval+2
  7051                           
  7052                           ;doprnt.c: 833: flag |= 0x03;
  7053  0002AA  0E03               	movlw	3
  7054  0002AC  0100               	movlb	0	; () banked
  7055  0002AE  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7056  0002B0                     l5464:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;doprnt.c: 834: }
  7060                           ;doprnt.c: 835: exp = 0;
  7061  0002B0  0E00               	movlw	0
  7062  0002B2  0100               	movlb	0	; () banked
  7063  0002B4  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7064  0002B6  0E00               	movlw	0
  7065  0002B8  6FCA               	movwf	sprintf@exp& (0+255),b
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;doprnt.c: 836: if( fval!=0) {
  7069  0002BA  0100               	movlb	0	; () banked
  7070  0002BC  51CC               	movf	sprintf@fval& (0+255),w,b
  7071  0002BE  0100               	movlb	0	; () banked
  7072  0002C0  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7073  0002C2  0100               	movlb	0	; () banked
  7074  0002C4  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7075  0002C6  B4D8               	btfsc	status,2,c
  7076  0002C8  D09B               	goto	l5492
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7080  0002CA  0E82               	movlw	130
  7081  0002CC  0100               	movlb	0	; () banked
  7082  0002CE  6FB3               	movwf	??_sprintf& (0+255),b
  7083  0002D0  0EFF               	movlw	255
  7084  0002D2  0100               	movlb	0	; () banked
  7085  0002D4  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7086  0002D6  C0CC  F0B5         	movff	sprintf@fval,??_sprintf+2
  7087  0002DA  C0CD  F0B6         	movff	sprintf@fval+1,??_sprintf+3
  7088  0002DE  C0CE  F0B7         	movff	sprintf@fval+2,??_sprintf+4
  7089  0002E2  C0CF  F0B8         	movff	sprintf@fval+3,??_sprintf+5
  7090  0002E6  0E10               	movlw	16
  7091  0002E8  D006               	goto	u5590
  7092  0002EA                     u5595:
  7093  0002EA  0100               	movlb	0	; () banked
  7094  0002EC  90D8               	bcf	status,0,c
  7095  0002EE  33B8               	rrcf	(??_sprintf+5)& (0+255),f,b
  7096  0002F0  33B7               	rrcf	(??_sprintf+4)& (0+255),f,b
  7097  0002F2  33B6               	rrcf	(??_sprintf+3)& (0+255),f,b
  7098  0002F4  33B5               	rrcf	(??_sprintf+2)& (0+255),f,b
  7099  0002F6                     u5590:
  7100  0002F6  2EE8               	decfsz	wreg,f,c
  7101  0002F8  D7F8               	goto	u5595
  7102  0002FA  0100               	movlb	0	; () banked
  7103  0002FC  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  7104  0002FE  0100               	movlb	0	; () banked
  7105  000300  25B3               	addwf	??_sprintf& (0+255),w,b
  7106  000302  0100               	movlb	0	; () banked
  7107  000304  6FCA               	movwf	sprintf@exp& (0+255),b
  7108  000306  0E00               	movlw	0
  7109  000308  0100               	movlb	0	; () banked
  7110  00030A  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  7111  00030C  0100               	movlb	0	; () banked
  7112  00030E  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;doprnt.c: 838: exp--;
  7116  000310  0100               	movlb	0	; () banked
  7117  000312  07CA               	decf	sprintf@exp& (0+255),f,b
  7118  000314  A0D8               	btfss	status,0,c
  7119  000316  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;doprnt.c: 839: exp *= 3;
  7123  000318  C0CA  F079         	movff	sprintf@exp,___wmul@multiplier
  7124  00031C  C0CB  F07A         	movff	sprintf@exp+1,___wmul@multiplier+1
  7125  000320  0E00               	movlw	0
  7126  000322  0100               	movlb	0	; () banked
  7127  000324  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7128  000326  0E03               	movlw	3
  7129  000328  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7130  00032A  EC7B  F01D         	call	___wmul	;wreg free
  7131  00032E  C079  F0CA         	movff	?___wmul,sprintf@exp
  7132  000332  C07A  F0CB         	movff	?___wmul+1,sprintf@exp+1
  7133                           
  7134                           ;doprnt.c: 840: exp /= 10;
  7135  000336  C0CA  F075         	movff	sprintf@exp,___awdiv@dividend
  7136  00033A  C0CB  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  7137  00033E  0E00               	movlw	0
  7138  000340  0100               	movlb	0	; () banked
  7139  000342  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7140  000344  0E0A               	movlw	10
  7141  000346  6F77               	movwf	___awdiv@divisor& (0+255),b
  7142  000348  ECF6  F019         	call	___awdiv	;wreg free
  7143  00034C  C075  F0CA         	movff	?___awdiv,sprintf@exp
  7144  000350  C076  F0CB         	movff	?___awdiv+1,sprintf@exp+1
  7145                           
  7146                           ;doprnt.c: 841: if(exp < 0)
  7147  000354  0100               	movlb	0	; () banked
  7148  000356  AFCB               	btfss	(sprintf@exp+1)& (0+255),7,b
  7149  000358  D004               	goto	l5480
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;doprnt.c: 842: exp--;
  7153  00035A  0100               	movlb	0	; () banked
  7154  00035C  07CA               	decf	sprintf@exp& (0+255),f,b
  7155  00035E  A0D8               	btfss	status,0,c
  7156  000360  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7157  000362                     l5480:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7161  000362  0100               	movlb	0	; () banked
  7162  000364  51CA               	movf	sprintf@exp& (0+255),w,b
  7163  000366  0800               	sublw	0
  7164  000368  ECF5  F009         	call	_scale
  7165  00036C  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7166  000370  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7167  000374  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7168                           
  7169                           ;doprnt.c: 847: tmpval.integ *= fval;
  7170  000378  C0C2  F07D         	movff	sprintf@tmpval,___ftmul@f1
  7171  00037C  C0C3  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7172  000380  C0C4  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7173  000384  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7174  000388  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7175  00038C  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7176  000390  ECD0  F014         	call	___ftmul	;wreg free
  7177  000394  C07D  F0C2         	movff	?___ftmul,sprintf@tmpval
  7178  000398  C07E  F0C3         	movff	?___ftmul+1,sprintf@tmpval+1
  7179  00039C  C07F  F0C4         	movff	?___ftmul+2,sprintf@tmpval+2
  7180                           
  7181                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7182  0003A0  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7183  0003A4  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7184  0003A8  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7185  0003AC  0E00               	movlw	0
  7186  0003AE  0100               	movlb	0	; () banked
  7187  0003B0  6F74               	movwf	___ftge@ff2& (0+255),b
  7188  0003B2  0E80               	movlw	128
  7189  0003B4  0100               	movlb	0	; () banked
  7190  0003B6  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7191  0003B8  0E3F               	movlw	63
  7192  0003BA  0100               	movlb	0	; () banked
  7193  0003BC  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7194  0003BE  ECE7  F018         	call	___ftge	;wreg free
  7195  0003C2  0100               	movlb	0	; () banked
  7196  0003C4  B0D8               	btfsc	status,0,c
  7197  0003C6  D005               	goto	l5488
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;doprnt.c: 849: exp--;
  7201  0003C8  0100               	movlb	0	; () banked
  7202  0003CA  07CA               	decf	sprintf@exp& (0+255),f,b
  7203  0003CC  A0D8               	btfss	status,0,c
  7204  0003CE  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7205  0003D0  D017               	goto	l5492
  7206  0003D2                     l5488:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7210  0003D2  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7211  0003D6  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7212  0003DA  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7213  0003DE  0E00               	movlw	0
  7214  0003E0  0100               	movlb	0	; () banked
  7215  0003E2  6F74               	movwf	___ftge@ff2& (0+255),b
  7216  0003E4  0E20               	movlw	32
  7217  0003E6  0100               	movlb	0	; () banked
  7218  0003E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7219  0003EA  0E41               	movlw	65
  7220  0003EC  0100               	movlb	0	; () banked
  7221  0003EE  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7222  0003F0  ECE7  F018         	call	___ftge	;wreg free
  7223  0003F4  0100               	movlb	0	; () banked
  7224  0003F6  A0D8               	btfss	status,0,c
  7225  0003F8  D003               	goto	l5492
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;doprnt.c: 851: exp++;
  7229  0003FA  0100               	movlb	0	; () banked
  7230  0003FC  4BCA               	infsnz	sprintf@exp& (0+255),f,b
  7231  0003FE  2BCB               	incf	(sprintf@exp+1)& (0+255),f,b
  7232  000400                     l5492:
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;doprnt.c: 852: }
  7236                           ;doprnt.c: 1112: if(prec <= 12)
  7237  000400  0100               	movlb	0	; () banked
  7238  000402  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7239  000404  D008               	goto	l5494
  7240  000406  0100               	movlb	0	; () banked
  7241  000408  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7242  00040A  E11D               	bnz	l5496
  7243  00040C  0E0D               	movlw	13
  7244  00040E  0100               	movlb	0	; () banked
  7245  000410  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7246  000412  B0D8               	btfsc	status,0,c
  7247  000414  D018               	goto	l5496
  7248  000416                     l5494:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;doprnt.c: 1113: fval += fround(prec);
  7252  000416  C0CC  F093         	movff	sprintf@fval,___ftadd@f1
  7253  00041A  C0CD  F094         	movff	sprintf@fval+1,___ftadd@f1+1
  7254  00041E  C0CE  F095         	movff	sprintf@fval+2,___ftadd@f1+2
  7255  000422  0100               	movlb	0	; () banked
  7256  000424  51CF               	movf	sprintf@prec& (0+255),w,b
  7257  000426  EC44  F00E         	call	_fround
  7258  00042A  C089  F096         	movff	?_fround,___ftadd@f2
  7259  00042E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
  7260  000432  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
  7261  000436  EC9A  F00F         	call	___ftadd	;wreg free
  7262  00043A  C093  F0CC         	movff	?___ftadd,sprintf@fval
  7263  00043E  C094  F0CD         	movff	?___ftadd+1,sprintf@fval+1
  7264  000442  C095  F0CE         	movff	?___ftadd+2,sprintf@fval+2
  7265  000446                     l5496:
  7266                           
  7267                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7268  000446  0100               	movlb	0	; () banked
  7269  000448  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7270  00044A  D008               	goto	l5498
  7271  00044C  0100               	movlb	0	; () banked
  7272  00044E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7273  000450  E12A               	bnz	l5504
  7274  000452  0E0A               	movlw	10
  7275  000454  0100               	movlb	0	; () banked
  7276  000456  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7277  000458  B0D8               	btfsc	status,0,c
  7278  00045A  D025               	goto	l5504
  7279  00045C                     l5498:
  7280                           
  7281                           ; BSR set to: 0
  7282  00045C  0100               	movlb	0	; () banked
  7283  00045E  51CC               	movf	sprintf@fval& (0+255),w,b
  7284  000460  0100               	movlb	0	; () banked
  7285  000462  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7286  000464  0100               	movlb	0	; () banked
  7287  000466  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7288  000468  B4D8               	btfsc	status,2,c
  7289  00046A  D063               	goto	l5518
  7290                           
  7291                           ; BSR set to: 0
  7292  00046C  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7293  000470  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7294  000474  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7295  000478  EC79  F015         	call	___fttol	;wreg free
  7296  00047C  0100               	movlb	0	; () banked
  7297  00047E  5190               	movf	?___fttol& (0+255),w,b
  7298  000480  0100               	movlb	0	; () banked
  7299  000482  1191               	iorwf	(?___fttol+1)& (0+255),w,b
  7300  000484  0100               	movlb	0	; () banked
  7301  000486  1192               	iorwf	(?___fttol+2)& (0+255),w,b
  7302  000488  0100               	movlb	0	; () banked
  7303  00048A  1193               	iorwf	(?___fttol+3)& (0+255),w,b
  7304  00048C  A4D8               	btfss	status,2,c
  7305  00048E  D051               	goto	l5518
  7306                           
  7307                           ; BSR set to: 0
  7308  000490  0100               	movlb	0	; () banked
  7309  000492  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7310  000494  D04E               	goto	l5518
  7311  000496  0100               	movlb	0	; () banked
  7312  000498  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7313  00049A  E105               	bnz	l5504
  7314  00049C  0E02               	movlw	2
  7315  00049E  0100               	movlb	0	; () banked
  7316  0004A0  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7317  0004A2  A0D8               	btfss	status,0,c
  7318  0004A4  D046               	goto	l5518
  7319  0004A6                     l5504:
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7323  0004A6  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7324  0004AA  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7325  0004AE  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7326  0004B2  0E70               	movlw	112
  7327  0004B4  0100               	movlb	0	; () banked
  7328  0004B6  6F74               	movwf	___ftge@ff2& (0+255),b
  7329  0004B8  0E89               	movlw	137
  7330  0004BA  0100               	movlb	0	; () banked
  7331  0004BC  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7332  0004BE  0E40               	movlw	64
  7333  0004C0  0100               	movlb	0	; () banked
  7334  0004C2  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7335  0004C4  ECE7  F018         	call	___ftge	;wreg free
  7336  0004C8  0100               	movlb	0	; () banked
  7337  0004CA  B0D8               	btfsc	status,0,c
  7338  0004CC  D003               	goto	l5508
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7342  0004CE  0100               	movlb	0	; () banked
  7343  0004D0  0EF7               	movlw	247
  7344  0004D2  D002               	goto	L4
  7345  0004D4                     l5508:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7349  0004D4  0100               	movlb	0	; () banked
  7350  0004D6  0EF8               	movlw	248
  7351  0004D8                     L4:
  7352  0004D8  27CA               	addwf	sprintf@exp& (0+255),f,b
  7353  0004DA  0EFF               	movlw	255
  7354  0004DC  23CB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;doprnt.c: 1124: }
  7358                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7359                           
  7360                           ; BSR set to: 0
  7361  0004DE  0100               	movlb	0	; () banked
  7362  0004E0  51CA               	movf	sprintf@exp& (0+255),w,b
  7363  0004E2  ECF5  F009         	call	_scale
  7364  0004E6  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7365  0004EA  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7366  0004EE  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7367                           
  7368                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7369  0004F2  C0CC  F071         	movff	sprintf@fval,__tdiv_to_l_@f1
  7370  0004F6  C0CD  F072         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7371  0004FA  C0CE  F073         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7372  0004FE  C0C2  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7373  000502  C0C3  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7374  000506  C0C4  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7375  00050A  EC6D  F013         	call	__tdiv_to_l_	;wreg free
  7376  00050E  C071  F0C6         	movff	?__tdiv_to_l_,sprintf@val
  7377  000512  C072  F0C7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7378  000516  C073  F0C8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7379  00051A  C074  F0C9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7380                           
  7381                           ;doprnt.c: 1129: fval = 0.0;
  7382  00051E  0E00               	movlw	0
  7383  000520  0100               	movlb	0	; () banked
  7384  000522  6FCC               	movwf	sprintf@fval& (0+255),b
  7385  000524  0E00               	movlw	0
  7386  000526  0100               	movlb	0	; () banked
  7387  000528  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  7388  00052A  0E00               	movlw	0
  7389  00052C  0100               	movlb	0	; () banked
  7390  00052E  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  7391                           
  7392                           ;doprnt.c: 1130: } else {
  7393  000530  D033               	goto	l5522
  7394  000532                     l5518:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7398  000532  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7399  000536  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7400  00053A  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7401  00053E  EC79  F015         	call	___fttol	;wreg free
  7402  000542  C090  F0C6         	movff	?___fttol,sprintf@val
  7403  000546  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7404  00054A  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7405  00054E  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7406                           
  7407                           ;doprnt.c: 1132: fval -= (double)val;
  7408  000552  C0CC  F09F         	movff	sprintf@fval,___ftsub@f1
  7409  000556  C0CD  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
  7410  00055A  C0CE  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
  7411  00055E  C0C6  F076         	movff	sprintf@val,___lltoft@c
  7412  000562  C0C7  F077         	movff	sprintf@val+1,___lltoft@c+1
  7413  000566  C0C8  F078         	movff	sprintf@val+2,___lltoft@c+2
  7414  00056A  C0C9  F079         	movff	sprintf@val+3,___lltoft@c+3
  7415  00056E  EC58  F01B         	call	___lltoft	;wreg free
  7416  000572  C076  F0A2         	movff	?___lltoft,___ftsub@f2
  7417  000576  C077  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
  7418  00057A  C078  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
  7419  00057E  EC13  F01C         	call	___ftsub	;wreg free
  7420  000582  C09F  F0CC         	movff	?___ftsub,sprintf@fval
  7421  000586  C0A0  F0CD         	movff	?___ftsub+1,sprintf@fval+1
  7422  00058A  C0A1  F0CE         	movff	?___ftsub+2,sprintf@fval+2
  7423                           
  7424                           ;doprnt.c: 1133: exp = 0;
  7425  00058E  0E00               	movlw	0
  7426  000590  0100               	movlb	0	; () banked
  7427  000592  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7428  000594  0E00               	movlw	0
  7429  000596  6FCA               	movwf	sprintf@exp& (0+255),b
  7430  000598                     l5522:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;doprnt.c: 1134: }
  7434                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7435  000598  0E01               	movlw	1
  7436  00059A  0100               	movlb	0	; () banked
  7437  00059C  6FD1               	movwf	sprintf@c& (0+255),b
  7438  00059E                     l5524:
  7439                           
  7440                           ; BSR set to: 0
  7441  00059E  0E0A               	movlw	10
  7442  0005A0  0100               	movlb	0	; () banked
  7443  0005A2  19D1               	xorwf	sprintf@c& (0+255),w,b
  7444  0005A4  B4D8               	btfsc	status,2,c
  7445  0005A6  D01E               	goto	l5536
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;doprnt.c: 1137: if(val < dpowers[c])
  7449                           
  7450                           ; BSR set to: 0
  7451                           
  7452                           ; BSR set to: 0
  7453  0005A8  0100               	movlb	0	; () banked
  7454  0005AA  51D1               	movf	sprintf@c& (0+255),w,b
  7455  0005AC  0D04               	mullw	4
  7456  0005AE  0EF5               	movlw	low _dpowers
  7457  0005B0  24F3               	addwf	prodl,w,c
  7458  0005B2  6EF6               	movwf	tblptrl,c
  7459  0005B4  0E7E               	movlw	high _dpowers
  7460  0005B6  20F4               	addwfc	prodh,w,c
  7461  0005B8  6EF7               	movwf	tblptrh,c
  7462  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7463  0005BA                     	endif
  7464  0005BA  0009               	tblrd		*+
  7465  0005BC  50F5               	movf	tablat,w,c
  7466  0005BE  0100               	movlb	0	; () banked
  7467  0005C0  5DC6               	subwf	sprintf@val& (0+255),w,b
  7468  0005C2  0009               	tblrd		*+
  7469  0005C4  50F5               	movf	tablat,w,c
  7470  0005C6  0100               	movlb	0	; () banked
  7471  0005C8  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7472  0005CA  0009               	tblrd		*+
  7473  0005CC  50F5               	movf	tablat,w,c
  7474  0005CE  0100               	movlb	0	; () banked
  7475  0005D0  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7476  0005D2  0009               	tblrd		*+
  7477  0005D4  50F5               	movf	tablat,w,c
  7478  0005D6  0100               	movlb	0	; () banked
  7479  0005D8  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7480  0005DA  A0D8               	btfss	status,0,c
  7481  0005DC  D003               	goto	l5536
  7482                           
  7483                           ; BSR set to: 0
  7484                           
  7485                           ; BSR set to: 0
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;doprnt.c: 1138: break;
  7489  0005DE  0100               	movlb	0	; () banked
  7490  0005E0  2BD1               	incf	sprintf@c& (0+255),f,b
  7491  0005E2  D7DD               	goto	l5524
  7492  0005E4                     l5536:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;doprnt.c: 1142: width -= prec + c + exp;
  7496  0005E4  C0D1  F0B3         	movff	sprintf@c,??_sprintf
  7497  0005E8  0100               	movlb	0	; () banked
  7498  0005EA  6BB4               	clrf	(??_sprintf+1)& (0+255),b
  7499  0005EC  BFB3               	btfsc	??_sprintf& (0+255),7,b
  7500  0005EE  07B4               	decf	(??_sprintf+1)& (0+255),f,b
  7501  0005F0  0100               	movlb	0	; () banked
  7502  0005F2  51CF               	movf	sprintf@prec& (0+255),w,b
  7503  0005F4  0100               	movlb	0	; () banked
  7504  0005F6  27B3               	addwf	??_sprintf& (0+255),f,b
  7505  0005F8  0100               	movlb	0	; () banked
  7506  0005FA  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7507  0005FC  0100               	movlb	0	; () banked
  7508  0005FE  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7509  000600  0100               	movlb	0	; () banked
  7510  000602  51CA               	movf	sprintf@exp& (0+255),w,b
  7511  000604  0100               	movlb	0	; () banked
  7512  000606  27B3               	addwf	??_sprintf& (0+255),f,b
  7513  000608  0100               	movlb	0	; () banked
  7514  00060A  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7515  00060C  0100               	movlb	0	; () banked
  7516  00060E  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7517  000610  0100               	movlb	0	; () banked
  7518  000612  51B3               	movf	??_sprintf& (0+255),w,b
  7519  000614  0100               	movlb	0	; () banked
  7520  000616  5FC0               	subwf	sprintf@width& (0+255),f,b
  7521  000618  0100               	movlb	0	; () banked
  7522  00061A  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  7523  00061C  0100               	movlb	0	; () banked
  7524  00061E  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7525                           
  7526                           ;doprnt.c: 1143: if(
  7527                           ;doprnt.c: 1147: prec)
  7528  000620  0100               	movlb	0	; () banked
  7529  000622  51CF               	movf	sprintf@prec& (0+255),w,b
  7530  000624  0100               	movlb	0	; () banked
  7531  000626  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7532  000628  B4D8               	btfsc	status,2,c
  7533  00062A  D004               	goto	l5540
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;doprnt.c: 1148: width--;
  7537  00062C  0100               	movlb	0	; () banked
  7538  00062E  07C0               	decf	sprintf@width& (0+255),f,b
  7539  000630  A0D8               	btfss	status,0,c
  7540  000632  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7541  000634                     l5540:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;doprnt.c: 1149: if(flag & 0x03)
  7545  000634  0E03               	movlw	3
  7546  000636  0100               	movlb	0	; () banked
  7547  000638  15BE               	andwf	sprintf@flag& (0+255),w,b
  7548  00063A  0100               	movlb	0	; () banked
  7549  00063C  6FB3               	movwf	??_sprintf& (0+255),b
  7550  00063E  0E00               	movlw	0
  7551  000640  0100               	movlb	0	; () banked
  7552  000642  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7553  000644  0100               	movlb	0	; () banked
  7554  000646  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7555  000648  0100               	movlb	0	; () banked
  7556  00064A  51B3               	movf	??_sprintf& (0+255),w,b
  7557  00064C  0100               	movlb	0	; () banked
  7558  00064E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7559  000650  B4D8               	btfsc	status,2,c
  7560  000652  D00E               	goto	l5550
  7561  000654  D009               	goto	l5548
  7562  000656                     l5544:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7566  000656  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7567  00065A  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7568  00065E  0E20               	movlw	32
  7569  000660  6EDF               	movwf	indf2,c
  7570                           
  7571                           ; BSR set to: 0
  7572  000662  0100               	movlb	0	; () banked
  7573  000664  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7574  000666  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7575  000668                     l5548:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;doprnt.c: 1182: width--;
  7579  000668  0100               	movlb	0	; () banked
  7580  00066A  07C0               	decf	sprintf@width& (0+255),f,b
  7581  00066C  A0D8               	btfss	status,0,c
  7582  00066E  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7583  000670                     l5550:
  7584                           
  7585                           ; BSR set to: 0
  7586  000670  0100               	movlb	0	; () banked
  7587  000672  BFC1               	btfsc	(sprintf@width+1)& (0+255),7,b
  7588  000674  D007               	goto	l5552
  7589  000676  0100               	movlb	0	; () banked
  7590  000678  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  7591  00067A  E1ED               	bnz	l5544
  7592  00067C  0100               	movlb	0	; () banked
  7593  00067E  05C0               	decf	sprintf@width& (0+255),w,b
  7594  000680  B0D8               	btfsc	status,0,c
  7595  000682  D7E9               	goto	l5544
  7596  000684                     l5552:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;doprnt.c: 1183: }
  7600                           ;doprnt.c: 1188: if(flag & 0x03)
  7601  000684  0E03               	movlw	3
  7602  000686  0100               	movlb	0	; () banked
  7603  000688  15BE               	andwf	sprintf@flag& (0+255),w,b
  7604  00068A  0100               	movlb	0	; () banked
  7605  00068C  6FB3               	movwf	??_sprintf& (0+255),b
  7606  00068E  0E00               	movlw	0
  7607  000690  0100               	movlb	0	; () banked
  7608  000692  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7609  000694  0100               	movlb	0	; () banked
  7610  000696  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7611  000698  0100               	movlb	0	; () banked
  7612  00069A  51B3               	movf	??_sprintf& (0+255),w,b
  7613  00069C  0100               	movlb	0	; () banked
  7614  00069E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7615  0006A0  B4D8               	btfsc	status,2,c
  7616  0006A2  D055               	goto	l5566
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7620  0006A4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7621  0006A8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7622  0006AC  0E2D               	movlw	45
  7623  0006AE  D04D               	goto	L5
  7624  0006B0                     l5556:
  7625                           
  7626                           ; BSR set to: 0
  7627  0006B0  0100               	movlb	0	; () banked
  7628  0006B2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7629  0006B4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;doprnt.c: 1195: }
  7633                           ;doprnt.c: 1196: while(c--) {
  7634  0006B6  D04B               	goto	l5566
  7635  0006B8                     l5558:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;doprnt.c: 1200: {
  7639                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7640  0006B8  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7641  0006BC  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7642  0006C0  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7643  0006C4  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7644  0006C8  0100               	movlb	0	; () banked
  7645  0006CA  51D1               	movf	sprintf@c& (0+255),w,b
  7646  0006CC  0D04               	mullw	4
  7647  0006CE  0EF5               	movlw	low _dpowers
  7648  0006D0  24F3               	addwf	prodl,w,c
  7649  0006D2  6EF6               	movwf	tblptrl,c
  7650  0006D4  0E7E               	movlw	high _dpowers
  7651  0006D6  20F4               	addwfc	prodh,w,c
  7652  0006D8  6EF7               	movwf	tblptrh,c
  7653  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7654  0006DA                     	endif
  7655  0006DA  0009               	tblrd		*+
  7656  0006DC  CFF5 F075          	movff	tablat,___lldiv@divisor
  7657  0006E0  0009               	tblrd		*+
  7658  0006E2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7659  0006E6  0009               	tblrd		*+
  7660  0006E8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7661  0006EC  000A               	tblrd		*-
  7662  0006EE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7663  0006F2  EC9E  F019         	call	___lldiv	;wreg free
  7664  0006F6  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7665  0006FA  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7666  0006FE  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7667  000702  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7668                           
  7669                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7670  000706  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7671  00070A  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7672  00070E  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7673  000712  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7674  000716  0E0A               	movlw	10
  7675  000718  0100               	movlb	0	; () banked
  7676  00071A  6F7D               	movwf	___llmod@divisor& (0+255),b
  7677  00071C  0E00               	movlw	0
  7678  00071E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7679  000720  0E00               	movlw	0
  7680  000722  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7681  000724  0E00               	movlw	0
  7682  000726  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7683  000728  EC93  F01A         	call	___llmod	;wreg free
  7684  00072C  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7685  000730  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7686  000734  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7687  000738  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7688                           
  7689                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7690  00073C  0100               	movlb	0	; () banked
  7691  00073E  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7692  000740  0F30               	addlw	48
  7693  000742  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7694  000746  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7695  00074A                     L5:
  7696  00074A  6EDF               	movwf	indf2,c
  7697  00074C  D7B1               	goto	l5556
  7698  00074E                     l5566:
  7699                           
  7700                           ; BSR set to: 0
  7701  00074E  0100               	movlb	0	; () banked
  7702  000750  07D1               	decf	sprintf@c& (0+255),f,b
  7703  000752  0100               	movlb	0	; () banked
  7704  000754  29D1               	incf	sprintf@c& (0+255),w,b
  7705  000756  B4D8               	btfsc	status,2,c
  7706  000758  D00E               	goto	l5574
  7707  00075A  D7AE               	goto	l5558
  7708  00075C                     l5568:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7712  00075C  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7713  000760  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7714  000764  0E30               	movlw	48
  7715  000766  6EDF               	movwf	indf2,c
  7716                           
  7717                           ; BSR set to: 0
  7718  000768  0100               	movlb	0	; () banked
  7719  00076A  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7720  00076C  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;doprnt.c: 1209: exp--;
  7724  00076E  0100               	movlb	0	; () banked
  7725  000770  07CA               	decf	sprintf@exp& (0+255),f,b
  7726  000772  A0D8               	btfss	status,0,c
  7727  000774  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7728  000776                     l5574:
  7729                           
  7730                           ; BSR set to: 0
  7731  000776  0100               	movlb	0	; () banked
  7732  000778  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7733  00077A  D007               	goto	l5576
  7734  00077C  0100               	movlb	0	; () banked
  7735  00077E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7736  000780  E1ED               	bnz	l5568
  7737  000782  0100               	movlb	0	; () banked
  7738  000784  05CA               	decf	sprintf@exp& (0+255),w,b
  7739  000786  B0D8               	btfsc	status,0,c
  7740  000788  D7E9               	goto	l5568
  7741  00078A                     l5576:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;doprnt.c: 1210: }
  7745                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7746  00078A  0100               	movlb	0	; () banked
  7747  00078C  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7748  00078E  D00C               	goto	l487
  7749  000790  0100               	movlb	0	; () banked
  7750  000792  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7751  000794  E105               	bnz	u5780
  7752  000796  0E09               	movlw	9
  7753  000798  0100               	movlb	0	; () banked
  7754  00079A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7755  00079C  A0D8               	btfss	status,0,c
  7756  00079E  D004               	goto	l487
  7757  0007A0                     u5780:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7761  0007A0  0E08               	movlw	8
  7762  0007A2  0100               	movlb	0	; () banked
  7763  0007A4  6FD1               	movwf	sprintf@c& (0+255),b
  7764  0007A6  D002               	goto	l5580
  7765  0007A8                     l487:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;doprnt.c: 1213: else
  7769                           ;doprnt.c: 1214: c = prec;
  7770  0007A8  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  7771  0007AC                     l5580:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;doprnt.c: 1215: prec -= c;
  7775  0007AC  0100               	movlb	0	; () banked
  7776  0007AE  51D1               	movf	sprintf@c& (0+255),w,b
  7777  0007B0  0100               	movlb	0	; () banked
  7778  0007B2  5FCF               	subwf	sprintf@prec& (0+255),f,b
  7779  0007B4  0E00               	movlw	0
  7780  0007B6  0100               	movlb	0	; () banked
  7781  0007B8  BFD1               	btfsc	sprintf@c& (0+255),7,b
  7782  0007BA  0EFF               	movlw	255
  7783  0007BC  0100               	movlb	0	; () banked
  7784  0007BE  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;doprnt.c: 1219: if(c)
  7788  0007C0  0100               	movlb	0	; () banked
  7789  0007C2  51D1               	movf	sprintf@c& (0+255),w,b
  7790  0007C4  0100               	movlb	0	; () banked
  7791  0007C6  B4D8               	btfsc	status,2,c
  7792  0007C8  D009               	goto	l5588
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7796  0007CA  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7797  0007CE  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7798  0007D2  0E2E               	movlw	46
  7799  0007D4  6EDF               	movwf	indf2,c
  7800                           
  7801                           ; BSR set to: 0
  7802  0007D6  0100               	movlb	0	; () banked
  7803  0007D8  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7804  0007DA  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7805  0007DC                     l5588:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7809  0007DC  0100               	movlb	0	; () banked
  7810  0007DE  51D1               	movf	sprintf@c& (0+255),w,b
  7811  0007E0  ECF5  F009         	call	_scale
  7812  0007E4  C089  F0B9         	movff	?_scale,_sprintf$2296
  7813  0007E8  C08A  F0BA         	movff	?_scale+1,_sprintf$2296+1
  7814  0007EC  C08B  F0BB         	movff	?_scale+2,_sprintf$2296+2
  7815                           
  7816                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7817  0007F0  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7818  0007F4  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7819  0007F8  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7820  0007FC  C0B9  F07D         	movff	_sprintf$2296,___ftmul@f1
  7821  000800  C0BA  F07E         	movff	_sprintf$2296+1,___ftmul@f1+1
  7822  000804  C0BB  F07F         	movff	_sprintf$2296+2,___ftmul@f1+2
  7823  000808  ECD0  F014         	call	___ftmul	;wreg free
  7824  00080C  C07D  F090         	movff	?___ftmul,___fttol@f1
  7825  000810  C07E  F091         	movff	?___ftmul+1,___fttol@f1+1
  7826  000814  C07F  F092         	movff	?___ftmul+2,___fttol@f1+2
  7827  000818  EC79  F015         	call	___fttol	;wreg free
  7828  00081C  C090  F0C6         	movff	?___fttol,sprintf@val
  7829  000820  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7830  000824  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7831  000828  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7832                           
  7833                           ;doprnt.c: 1228: while(c--) {
  7834  00082C  D074               	goto	l5602
  7835  00082E                     l5592:
  7836                           
  7837                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7838  00082E  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7839  000832  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7840  000836  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7841  00083A  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7842  00083E  0100               	movlb	0	; () banked
  7843  000840  51D1               	movf	sprintf@c& (0+255),w,b
  7844  000842  0D04               	mullw	4
  7845  000844  0EF5               	movlw	low _dpowers
  7846  000846  24F3               	addwf	prodl,w,c
  7847  000848  6EF6               	movwf	tblptrl,c
  7848  00084A  0E7E               	movlw	high _dpowers
  7849  00084C  20F4               	addwfc	prodh,w,c
  7850  00084E  6EF7               	movwf	tblptrh,c
  7851  000850                     	if	0	;There are less than 3 active tblptr bytes
  7852  000850                     	endif
  7853  000850  0009               	tblrd		*+
  7854  000852  CFF5 F075          	movff	tablat,___lldiv@divisor
  7855  000856  0009               	tblrd		*+
  7856  000858  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7857  00085C  0009               	tblrd		*+
  7858  00085E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7859  000862  000A               	tblrd		*-
  7860  000864  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7861  000868  EC9E  F019         	call	___lldiv	;wreg free
  7862  00086C  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7863  000870  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7864  000874  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7865  000878  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7866                           
  7867                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7868  00087C  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7869  000880  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7870  000884  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7871  000888  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7872  00088C  0E0A               	movlw	10
  7873  00088E  0100               	movlb	0	; () banked
  7874  000890  6F7D               	movwf	___llmod@divisor& (0+255),b
  7875  000892  0E00               	movlw	0
  7876  000894  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7877  000896  0E00               	movlw	0
  7878  000898  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7879  00089A  0E00               	movlw	0
  7880  00089C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7881  00089E  EC93  F01A         	call	___llmod	;wreg free
  7882  0008A2  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7883  0008A6  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7884  0008AA  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7885  0008AE  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7886                           
  7887                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7888  0008B2  0100               	movlb	0	; () banked
  7889  0008B4  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7890  0008B6  0F30               	addlw	48
  7891  0008B8  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7892  0008BC  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7893  0008C0  6EDF               	movwf	indf2,c
  7894                           
  7895                           ; BSR set to: 0
  7896  0008C2  0100               	movlb	0	; () banked
  7897  0008C4  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7898  0008C6  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;doprnt.c: 1232: val %= dpowers[c];
  7902  0008C8  C0C6  F079         	movff	sprintf@val,___llmod@dividend
  7903  0008CC  C0C7  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7904  0008D0  C0C8  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7905  0008D4  C0C9  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7906  0008D8  0100               	movlb	0	; () banked
  7907  0008DA  51D1               	movf	sprintf@c& (0+255),w,b
  7908  0008DC  0D04               	mullw	4
  7909  0008DE  0EF5               	movlw	low _dpowers
  7910  0008E0  24F3               	addwf	prodl,w,c
  7911  0008E2  6EF6               	movwf	tblptrl,c
  7912  0008E4  0E7E               	movlw	high _dpowers
  7913  0008E6  20F4               	addwfc	prodh,w,c
  7914  0008E8  6EF7               	movwf	tblptrh,c
  7915  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7916  0008EA                     	endif
  7917  0008EA  0009               	tblrd		*+
  7918  0008EC  CFF5 F07D          	movff	tablat,___llmod@divisor
  7919  0008F0  0009               	tblrd		*+
  7920  0008F2  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7921  0008F6  0009               	tblrd		*+
  7922  0008F8  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7923  0008FC  000A               	tblrd		*-
  7924  0008FE  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7925  000902  EC93  F01A         	call	___llmod	;wreg free
  7926  000906  C079  F0C6         	movff	?___llmod,sprintf@val
  7927  00090A  C07A  F0C7         	movff	?___llmod+1,sprintf@val+1
  7928  00090E  C07B  F0C8         	movff	?___llmod+2,sprintf@val+2
  7929  000912  C07C  F0C9         	movff	?___llmod+3,sprintf@val+3
  7930  000916                     l5602:
  7931  000916  0100               	movlb	0	; () banked
  7932  000918  07D1               	decf	sprintf@c& (0+255),f,b
  7933  00091A  0100               	movlb	0	; () banked
  7934  00091C  29D1               	incf	sprintf@c& (0+255),w,b
  7935  00091E  B4D8               	btfsc	status,2,c
  7936  000920  D00E               	goto	l5610
  7937  000922  D785               	goto	l5592
  7938  000924                     l5604:
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7942  000924  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7943  000928  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7944  00092C  0E30               	movlw	48
  7945  00092E  6EDF               	movwf	indf2,c
  7946                           
  7947                           ; BSR set to: 0
  7948  000930  0100               	movlb	0	; () banked
  7949  000932  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7950  000934  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;doprnt.c: 1237: prec--;
  7954  000936  0100               	movlb	0	; () banked
  7955  000938  07CF               	decf	sprintf@prec& (0+255),f,b
  7956  00093A  A0D8               	btfss	status,0,c
  7957  00093C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  7958  00093E                     l5610:
  7959                           
  7960                           ; BSR set to: 0
  7961  00093E  0100               	movlb	0	; () banked
  7962  000940  51CF               	movf	sprintf@prec& (0+255),w,b
  7963  000942  0100               	movlb	0	; () banked
  7964  000944  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7965  000946  B4D8               	btfsc	status,2,c
  7966  000948  D169               	goto	l5692
  7967  00094A  D7EC               	goto	l5604
  7968  00094C                     l5612:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;doprnt.c: 1246: }
  7972                           ;doprnt.c: 1253: {
  7973                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7974  00094C  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7975  000950  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7976  000954  CFDE F0C6          	movff	postinc2,sprintf@val
  7977  000958  CFDD F0C7          	movff	postdec2,sprintf@val+1
  7978  00095C  0100               	movlb	0	; () banked
  7979  00095E  0E00               	movlw	0
  7980  000960  BFC7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7981  000962  0EFF               	movlw	-1
  7982  000964  6FC8               	movwf	(sprintf@val+2)& (0+255),b
  7983  000966  6FC9               	movwf	(sprintf@val+3)& (0+255),b
  7984                           
  7985                           ; BSR set to: 0
  7986  000968  0E02               	movlw	2
  7987  00096A  0100               	movlb	0	; () banked
  7988  00096C  27BC               	addwf	sprintf@ap& (0+255),f,b
  7989  00096E  0E00               	movlw	0
  7990  000970  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;doprnt.c: 1261: if((long)val < 0) {
  7994  000972  0100               	movlb	0	; () banked
  7995  000974  AFC9               	btfss	(sprintf@val+3)& (0+255),7,b
  7996  000976  D00C               	goto	l5622
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;doprnt.c: 1262: flag |= 0x03;
  8000  000978  0E03               	movlw	3
  8001  00097A  0100               	movlb	0	; () banked
  8002  00097C  13BE               	iorwf	sprintf@flag& (0+255),f,b
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;doprnt.c: 1263: val = -val;
  8006  00097E  0100               	movlb	0	; () banked
  8007  000980  1FC9               	comf	(sprintf@val+3)& (0+255),f,b
  8008  000982  1FC8               	comf	(sprintf@val+2)& (0+255),f,b
  8009  000984  1FC7               	comf	(sprintf@val+1)& (0+255),f,b
  8010  000986  6DC6               	negf	sprintf@val& (0+255),b
  8011  000988  0E00               	movlw	0
  8012  00098A  23C7               	addwfc	(sprintf@val+1)& (0+255),f,b
  8013  00098C  23C8               	addwfc	(sprintf@val+2)& (0+255),f,b
  8014  00098E  23C9               	addwfc	(sprintf@val+3)& (0+255),f,b
  8015  000990                     l5622:
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;doprnt.c: 1264: }
  8019                           ;doprnt.c: 1266: }
  8020                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8021  000990  0100               	movlb	0	; () banked
  8022  000992  51CF               	movf	sprintf@prec& (0+255),w,b
  8023  000994  0100               	movlb	0	; () banked
  8024  000996  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8025  000998  A4D8               	btfss	status,2,c
  8026  00099A  D00D               	goto	l5628
  8027                           
  8028                           ; BSR set to: 0
  8029  00099C  0100               	movlb	0	; () banked
  8030  00099E  51C6               	movf	sprintf@val& (0+255),w,b
  8031  0009A0  0100               	movlb	0	; () banked
  8032  0009A2  11C7               	iorwf	(sprintf@val+1)& (0+255),w,b
  8033  0009A4  0100               	movlb	0	; () banked
  8034  0009A6  11C8               	iorwf	(sprintf@val+2)& (0+255),w,b
  8035  0009A8  0100               	movlb	0	; () banked
  8036  0009AA  11C9               	iorwf	(sprintf@val+3)& (0+255),w,b
  8037  0009AC  A4D8               	btfss	status,2,c
  8038  0009AE  D003               	goto	l5628
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;doprnt.c: 1291: prec++;
  8042  0009B0  0100               	movlb	0	; () banked
  8043  0009B2  4BCF               	infsnz	sprintf@prec& (0+255),f,b
  8044  0009B4  2BD0               	incf	(sprintf@prec+1)& (0+255),f,b
  8045  0009B6                     l5628:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8049  0009B6  0E01               	movlw	1
  8050  0009B8  0100               	movlb	0	; () banked
  8051  0009BA  6FD1               	movwf	sprintf@c& (0+255),b
  8052  0009BC                     l5630:
  8053                           
  8054                           ; BSR set to: 0
  8055  0009BC  0E0A               	movlw	10
  8056  0009BE  0100               	movlb	0	; () banked
  8057  0009C0  19D1               	xorwf	sprintf@c& (0+255),w,b
  8058  0009C2  B4D8               	btfsc	status,2,c
  8059  0009C4  D01E               	goto	l5642
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;doprnt.c: 1306: if(val < dpowers[c])
  8063                           
  8064                           ; BSR set to: 0
  8065                           
  8066                           ; BSR set to: 0
  8067  0009C6  0100               	movlb	0	; () banked
  8068  0009C8  51D1               	movf	sprintf@c& (0+255),w,b
  8069  0009CA  0D04               	mullw	4
  8070  0009CC  0EF5               	movlw	low _dpowers
  8071  0009CE  24F3               	addwf	prodl,w,c
  8072  0009D0  6EF6               	movwf	tblptrl,c
  8073  0009D2  0E7E               	movlw	high _dpowers
  8074  0009D4  20F4               	addwfc	prodh,w,c
  8075  0009D6  6EF7               	movwf	tblptrh,c
  8076  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8077  0009D8                     	endif
  8078  0009D8  0009               	tblrd		*+
  8079  0009DA  50F5               	movf	tablat,w,c
  8080  0009DC  0100               	movlb	0	; () banked
  8081  0009DE  5DC6               	subwf	sprintf@val& (0+255),w,b
  8082  0009E0  0009               	tblrd		*+
  8083  0009E2  50F5               	movf	tablat,w,c
  8084  0009E4  0100               	movlb	0	; () banked
  8085  0009E6  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  8086  0009E8  0009               	tblrd		*+
  8087  0009EA  50F5               	movf	tablat,w,c
  8088  0009EC  0100               	movlb	0	; () banked
  8089  0009EE  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  8090  0009F0  0009               	tblrd		*+
  8091  0009F2  50F5               	movf	tablat,w,c
  8092  0009F4  0100               	movlb	0	; () banked
  8093  0009F6  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  8094  0009F8  A0D8               	btfss	status,0,c
  8095  0009FA  D003               	goto	l5642
  8096                           
  8097                           ; BSR set to: 0
  8098                           
  8099                           ; BSR set to: 0
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;doprnt.c: 1307: break;
  8103  0009FC  0100               	movlb	0	; () banked
  8104  0009FE  2BD1               	incf	sprintf@c& (0+255),f,b
  8105  000A00  D7DD               	goto	l5630
  8106  000A02                     l5642:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;doprnt.c: 1339: if(c < prec)
  8110  000A02  0E80               	movlw	128
  8111  000A04  0100               	movlb	0	; () banked
  8112  000A06  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8113  000A08  0E7F               	movlw	127
  8114  000A0A  0100               	movlb	0	; () banked
  8115  000A0C  6FB3               	movwf	??_sprintf& (0+255),b
  8116  000A0E  0100               	movlb	0	; () banked
  8117  000A10  51CF               	movf	sprintf@prec& (0+255),w,b
  8118  000A12  0100               	movlb	0	; () banked
  8119  000A14  5DD1               	subwf	sprintf@c& (0+255),w,b
  8120  000A16  0100               	movlb	0	; () banked
  8121  000A18  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8122  000A1A  0A80               	xorlw	128
  8123  000A1C  0100               	movlb	0	; () banked
  8124  000A1E  59B3               	subwfb	??_sprintf& (0+255),w,b
  8125  000A20  B0D8               	btfsc	status,0,c
  8126  000A22  D003               	goto	l5646
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;doprnt.c: 1340: c = prec;
  8130  000A24  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  8131  000A28  D018               	goto	l5650
  8132  000A2A                     l5646:
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;doprnt.c: 1341: else if(prec < c)
  8136  000A2A  0100               	movlb	0	; () banked
  8137  000A2C  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8138  000A2E  0A80               	xorlw	128
  8139  000A30  0100               	movlb	0	; () banked
  8140  000A32  6FB3               	movwf	??_sprintf& (0+255),b
  8141  000A34  0100               	movlb	0	; () banked
  8142  000A36  51D1               	movf	sprintf@c& (0+255),w,b
  8143  000A38  0100               	movlb	0	; () banked
  8144  000A3A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8145  000A3C  0E80               	movlw	128
  8146  000A3E  0100               	movlb	0	; () banked
  8147  000A40  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8148  000A42  0E7F               	movlw	127
  8149  000A44  0100               	movlb	0	; () banked
  8150  000A46  59B3               	subwfb	??_sprintf& (0+255),w,b
  8151  000A48  B0D8               	btfsc	status,0,c
  8152  000A4A  D007               	goto	l5650
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;doprnt.c: 1342: prec = c;
  8156  000A4C  0100               	movlb	0	; () banked
  8157  000A4E  51D1               	movf	sprintf@c& (0+255),w,b
  8158  000A50  0100               	movlb	0	; () banked
  8159  000A52  6FCF               	movwf	sprintf@prec& (0+255),b
  8160  000A54  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
  8161  000A56  BFCF               	btfsc	sprintf@prec& (0+255),7,b
  8162  000A58  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8163  000A5A                     l5650:
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8167  000A5A  0100               	movlb	0	; () banked
  8168  000A5C  51C0               	movf	sprintf@width& (0+255),w,b
  8169  000A5E  0100               	movlb	0	; () banked
  8170  000A60  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8171  000A62  B4D8               	btfsc	status,2,c
  8172  000A64  D014               	goto	l5656
  8173                           
  8174                           ; BSR set to: 0
  8175  000A66  0E03               	movlw	3
  8176  000A68  0100               	movlb	0	; () banked
  8177  000A6A  15BE               	andwf	sprintf@flag& (0+255),w,b
  8178  000A6C  0100               	movlb	0	; () banked
  8179  000A6E  6FB3               	movwf	??_sprintf& (0+255),b
  8180  000A70  0E00               	movlw	0
  8181  000A72  0100               	movlb	0	; () banked
  8182  000A74  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8183  000A76  0100               	movlb	0	; () banked
  8184  000A78  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8185  000A7A  0100               	movlb	0	; () banked
  8186  000A7C  51B3               	movf	??_sprintf& (0+255),w,b
  8187  000A7E  0100               	movlb	0	; () banked
  8188  000A80  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8189  000A82  B4D8               	btfsc	status,2,c
  8190  000A84  D004               	goto	l5656
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;doprnt.c: 1346: width--;
  8194  000A86  0100               	movlb	0	; () banked
  8195  000A88  07C0               	decf	sprintf@width& (0+255),f,b
  8196  000A8A  A0D8               	btfss	status,0,c
  8197  000A8C  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8198  000A8E                     l5656:
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8202  000A8E  0100               	movlb	0	; () banked
  8203  000A90  ADBF               	btfss	(sprintf@flag+1)& (0+255),6,b
  8204  000A92  D01E               	goto	l5664
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;doprnt.c: 1349: if(width > prec)
  8208  000A94  0100               	movlb	0	; () banked
  8209  000A96  51C0               	movf	sprintf@width& (0+255),w,b
  8210  000A98  0100               	movlb	0	; () banked
  8211  000A9A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8212  000A9C  0100               	movlb	0	; () banked
  8213  000A9E  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8214  000AA0  0A80               	xorlw	128
  8215  000AA2  0100               	movlb	0	; () banked
  8216  000AA4  6FB3               	movwf	??_sprintf& (0+255),b
  8217  000AA6  0100               	movlb	0	; () banked
  8218  000AA8  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8219  000AAA  0A80               	xorlw	128
  8220  000AAC  0100               	movlb	0	; () banked
  8221  000AAE  59B3               	subwfb	??_sprintf& (0+255),w,b
  8222  000AB0  B0D8               	btfsc	status,0,c
  8223  000AB2  D009               	goto	l5662
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;doprnt.c: 1350: width -= prec;
  8227  000AB4  0100               	movlb	0	; () banked
  8228  000AB6  51CF               	movf	sprintf@prec& (0+255),w,b
  8229  000AB8  0100               	movlb	0	; () banked
  8230  000ABA  5FC0               	subwf	sprintf@width& (0+255),f,b
  8231  000ABC  0100               	movlb	0	; () banked
  8232  000ABE  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8233  000AC0  0100               	movlb	0	; () banked
  8234  000AC2  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8235  000AC4  D005               	goto	l5664
  8236  000AC6                     l5662:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;doprnt.c: 1351: else
  8240                           ;doprnt.c: 1352: width = 0;
  8241  000AC6  0E00               	movlw	0
  8242  000AC8  0100               	movlb	0	; () banked
  8243  000ACA  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8244  000ACC  0E00               	movlw	0
  8245  000ACE  6FC0               	movwf	sprintf@width& (0+255),b
  8246  000AD0                     l5664:
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;doprnt.c: 1353: }
  8250                           ;doprnt.c: 1381: if(width > c)
  8251  000AD0  0E80               	movlw	128
  8252  000AD2  0100               	movlb	0	; () banked
  8253  000AD4  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8254  000AD6  0E7F               	movlw	127
  8255  000AD8  0100               	movlb	0	; () banked
  8256  000ADA  6FB3               	movwf	??_sprintf& (0+255),b
  8257  000ADC  0100               	movlb	0	; () banked
  8258  000ADE  51C0               	movf	sprintf@width& (0+255),w,b
  8259  000AE0  0100               	movlb	0	; () banked
  8260  000AE2  5DD1               	subwf	sprintf@c& (0+255),w,b
  8261  000AE4  0100               	movlb	0	; () banked
  8262  000AE6  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8263  000AE8  0A80               	xorlw	128
  8264  000AEA  0100               	movlb	0	; () banked
  8265  000AEC  59B3               	subwfb	??_sprintf& (0+255),w,b
  8266  000AEE  B0D8               	btfsc	status,0,c
  8267  000AF0  D00B               	goto	l5668
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;doprnt.c: 1382: width -= c;
  8271  000AF2  0100               	movlb	0	; () banked
  8272  000AF4  51D1               	movf	sprintf@c& (0+255),w,b
  8273  000AF6  0100               	movlb	0	; () banked
  8274  000AF8  5FC0               	subwf	sprintf@width& (0+255),f,b
  8275  000AFA  0E00               	movlw	0
  8276  000AFC  0100               	movlb	0	; () banked
  8277  000AFE  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8278  000B00  0EFF               	movlw	255
  8279  000B02  0100               	movlb	0	; () banked
  8280  000B04  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8281  000B06  D005               	goto	l5670
  8282  000B08                     l5668:
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;doprnt.c: 1383: else
  8286                           ;doprnt.c: 1384: width = 0;
  8287  000B08  0E00               	movlw	0
  8288  000B0A  0100               	movlb	0	; () banked
  8289  000B0C  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8290  000B0E  0E00               	movlw	0
  8291  000B10  6FC0               	movwf	sprintf@width& (0+255),b
  8292  000B12                     l5670:
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;doprnt.c: 1422: {
  8296                           ;doprnt.c: 1424: if(width
  8297                           ;doprnt.c: 1428: )
  8298  000B12  0100               	movlb	0	; () banked
  8299  000B14  51C0               	movf	sprintf@width& (0+255),w,b
  8300  000B16  0100               	movlb	0	; () banked
  8301  000B18  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8302  000B1A  B4D8               	btfsc	status,2,c
  8303  000B1C  D013               	goto	l5678
  8304  000B1E                     l5672:
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8308  000B1E  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8309  000B22  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8310  000B26  0E20               	movlw	32
  8311  000B28  6EDF               	movwf	indf2,c
  8312                           
  8313                           ; BSR set to: 0
  8314  000B2A  0100               	movlb	0	; () banked
  8315  000B2C  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8316  000B2E  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;doprnt.c: 1431: while(--width);
  8320  000B30  0100               	movlb	0	; () banked
  8321  000B32  07C0               	decf	sprintf@width& (0+255),f,b
  8322  000B34  A0D8               	btfss	status,0,c
  8323  000B36  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8324  000B38  0100               	movlb	0	; () banked
  8325  000B3A  51C0               	movf	sprintf@width& (0+255),w,b
  8326  000B3C  0100               	movlb	0	; () banked
  8327  000B3E  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8328  000B40  A4D8               	btfss	status,2,c
  8329  000B42  D7ED               	goto	l5672
  8330  000B44                     l5678:
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;doprnt.c: 1438: if(flag & 0x03)
  8334  000B44  0E03               	movlw	3
  8335  000B46  0100               	movlb	0	; () banked
  8336  000B48  15BE               	andwf	sprintf@flag& (0+255),w,b
  8337  000B4A  0100               	movlb	0	; () banked
  8338  000B4C  6FB3               	movwf	??_sprintf& (0+255),b
  8339  000B4E  0E00               	movlw	0
  8340  000B50  0100               	movlb	0	; () banked
  8341  000B52  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8342  000B54  0100               	movlb	0	; () banked
  8343  000B56  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8344  000B58  0100               	movlb	0	; () banked
  8345  000B5A  51B3               	movf	??_sprintf& (0+255),w,b
  8346  000B5C  0100               	movlb	0	; () banked
  8347  000B5E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8348  000B60  B4D8               	btfsc	status,2,c
  8349  000B62  D051               	goto	l5690
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8353  000B64  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8354  000B68  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8355  000B6C  0E2D               	movlw	45
  8356  000B6E  6EDF               	movwf	indf2,c
  8357  000B70  D047               	goto	l5688
  8358  000B72                     l5684:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;doprnt.c: 1478: {
  8362                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8363  000B72  C0CF  F0B3         	movff	sprintf@prec,??_sprintf
  8364  000B76  C0D0  F0B4         	movff	sprintf@prec+1,??_sprintf+1
  8365  000B7A  0100               	movlb	0	; () banked
  8366  000B7C  90D8               	bcf	status,0,c
  8367  000B7E  37B3               	rlcf	??_sprintf& (0+255),f,b
  8368  000B80  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8369  000B82  0100               	movlb	0	; () banked
  8370  000B84  90D8               	bcf	status,0,c
  8371  000B86  37B3               	rlcf	??_sprintf& (0+255),f,b
  8372  000B88  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8373  000B8A  0EF5               	movlw	low _dpowers
  8374  000B8C  0100               	movlb	0	; () banked
  8375  000B8E  25B3               	addwf	??_sprintf& (0+255),w,b
  8376  000B90  6EF6               	movwf	tblptrl,c
  8377  000B92  0E7E               	movlw	high _dpowers
  8378  000B94  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8379  000B96  6EF7               	movwf	tblptrh,c
  8380  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8381  000B98                     	endif
  8382  000B98  0009               	tblrd		*+
  8383  000B9A  CFF5 F075          	movff	tablat,___lldiv@divisor
  8384  000B9E  0009               	tblrd		*+
  8385  000BA0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8386  000BA4  0009               	tblrd		*+
  8387  000BA6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8388  000BAA  000A               	tblrd		*-
  8389  000BAC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8390  000BB0  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  8391  000BB4  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8392  000BB8  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8393  000BBC  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8394  000BC0  EC9E  F019         	call	___lldiv	;wreg free
  8395  000BC4  C071  F079         	movff	?___lldiv,___llmod@dividend
  8396  000BC8  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8397  000BCC  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8398  000BD0  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8399  000BD4  0E0A               	movlw	10
  8400  000BD6  0100               	movlb	0	; () banked
  8401  000BD8  6F7D               	movwf	___llmod@divisor& (0+255),b
  8402  000BDA  0E00               	movlw	0
  8403  000BDC  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8404  000BDE  0E00               	movlw	0
  8405  000BE0  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8406  000BE2  0E00               	movlw	0
  8407  000BE4  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8408  000BE6  EC93  F01A         	call	___llmod	;wreg free
  8409  000BEA  0100               	movlb	0	; () banked
  8410  000BEC  5179               	movf	?___llmod& (0+255),w,b
  8411  000BEE  0F30               	addlw	48
  8412  000BF0  0100               	movlb	0	; () banked
  8413  000BF2  6FD1               	movwf	sprintf@c& (0+255),b
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;doprnt.c: 1523: }
  8417                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8418  000BF4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8419  000BF8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8420  000BFC  C0D1  FFDF         	movff	sprintf@c,indf2
  8421  000C00                     l5688:
  8422                           
  8423                           ; BSR set to: 0
  8424  000C00  0100               	movlb	0	; () banked
  8425  000C02  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8426  000C04  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8427  000C06                     l5690:
  8428                           
  8429                           ; BSR set to: 0
  8430  000C06  0100               	movlb	0	; () banked
  8431  000C08  07CF               	decf	sprintf@prec& (0+255),f,b
  8432  000C0A  A0D8               	btfss	status,0,c
  8433  000C0C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8434  000C0E  0100               	movlb	0	; () banked
  8435  000C10  29CF               	incf	sprintf@prec& (0+255),w,b
  8436  000C12  E1AF               	bnz	l5684
  8437  000C14  0100               	movlb	0	; () banked
  8438  000C16  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
  8439  000C18  A4D8               	btfss	status,2,c
  8440  000C1A  D7AB               	goto	l5684
  8441  000C1C                     l5692:
  8442                           
  8443                           ; BSR set to: 0
  8444  000C1C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  8445  000C20  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  8446  000C24  0100               	movlb	0	; () banked
  8447  000C26  4BA7               	infsnz	sprintf@f& (0+255),f,b
  8448  000C28  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  8449  000C2A                     	if	0	;tblptru may be non-zero
  8450  000C2A                     	endif
  8451  000C2A                     	if	0	;tblptru may be non-zero
  8452  000C2A                     	endif
  8453  000C2A  0008               	tblrd		*
  8454  000C2C  CFF5 F0D1          	movff	tablat,sprintf@c
  8455  000C30  0100               	movlb	0	; () banked
  8456  000C32  51D1               	movf	sprintf@c& (0+255),w,b
  8457  000C34  A4D8               	btfss	status,2,c
  8458  000C36  EF5D  F000         	goto	l5406
  8459  000C3A                     l5694:
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;doprnt.c: 1538: *sp = 0;
  8463  000C3A  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8464  000C3E  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8465  000C42  0E00               	movlw	0
  8466  000C44  6EDF               	movwf	indf2,c
  8467  000C46  0012               	return	
  8468  000C48                     __end_of_sprintf:
  8469                           	opt stack 0
  8470                           tblptru	equ	0xFF8
  8471                           tblptrh	equ	0xFF7
  8472                           tblptrl	equ	0xFF6
  8473                           tablat	equ	0xFF5
  8474                           prodh	equ	0xFF4
  8475                           prodl	equ	0xFF3
  8476                           indf0	equ	0xFEF
  8477                           postinc0	equ	0xFEE
  8478                           fsr0h	equ	0xFEA
  8479                           fsr0l	equ	0xFE9
  8480                           wreg	equ	0xFE8
  8481                           indf1	equ	0xFE7
  8482                           postdec1	equ	0xFE5
  8483                           fsr1h	equ	0xFE2
  8484                           fsr1l	equ	0xFE1
  8485                           indf2	equ	0xFDF
  8486                           postinc2	equ	0xFDE
  8487                           postdec2	equ	0xFDD
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function _scale *****************
  8493 ;; Defined at:
  8494 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  scl             1    wreg     char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  scl             1   47[BANK0 ] char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  3   41[BANK0 ] char 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8508 ;;      Params:         0       3       0       0       0       0       0
  8509 ;;      Locals:         0       4       0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0
  8511 ;;      Totals:         0       7       0       0       0       0       0
  8512 ;;Total ram usage:        7 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    5
  8515 ;; This function calls:
  8516 ;;		___awdiv
  8517 ;;		___awmod
  8518 ;;		___ftmul
  8519 ;;		___wmul
  8520 ;; This function is called by:
  8521 ;;		_sprintf
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text32
  8526  0013EA                     __ptext32:
  8527                           	opt stack 0
  8528  0013EA                     _scale:
  8529                           	opt stack 22
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;incstack = 0
  8533                           ;scale@scl stored from wreg
  8534  0013EA  0100               	movlb	0	; () banked
  8535  0013EC  6F8F               	movwf	scale@scl& (0+255),b
  8536                           
  8537                           ;doprnt.c: 428: if(scl < 0) {
  8538  0013EE  0100               	movlb	0	; () banked
  8539  0013F0  AF8F               	btfss	scale@scl& (0+255),7,b
  8540  0013F2  D12A               	goto	l5078
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;doprnt.c: 429: scl = -scl;
  8544  0013F4  0100               	movlb	0	; () banked
  8545  0013F6  6D8F               	negf	scale@scl& (0+255),b
  8546                           
  8547                           ;doprnt.c: 430: if(scl>=110)
  8548  0013F8  0100               	movlb	0	; () banked
  8549  0013FA  518F               	movf	scale@scl& (0+255),w,b
  8550  0013FC  0A80               	xorlw	128
  8551  0013FE  0F12               	addlw	-238
  8552  001400  A0D8               	btfss	status,0,c
  8553  001402  D0AC               	goto	l5068
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8557  001404  0E00               	movlw	0
  8558  001406  0100               	movlb	0	; () banked
  8559  001408  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8560  00140A  0E03               	movlw	3
  8561  00140C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8562  00140E  0E00               	movlw	0
  8563  001410  0100               	movlb	0	; () banked
  8564  001412  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8565  001414  0E0A               	movlw	10
  8566  001416  6F77               	movwf	___awdiv@divisor& (0+255),b
  8567  001418  0E00               	movlw	0
  8568  00141A  0100               	movlb	0	; () banked
  8569  00141C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8570  00141E  0E64               	movlw	100
  8571  001420  6F73               	movwf	___awmod@divisor& (0+255),b
  8572  001422  0100               	movlb	0	; () banked
  8573  001424  518F               	movf	scale@scl& (0+255),w,b
  8574  001426  0100               	movlb	0	; () banked
  8575  001428  6F71               	movwf	___awmod@dividend& (0+255),b
  8576  00142A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8577  00142C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8578  00142E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8579  001430  EC49  F01A         	call	___awmod	;wreg free
  8580  001434  C071  F075         	movff	?___awmod,___awdiv@dividend
  8581  001438  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8582  00143C  ECF6  F019         	call	___awdiv	;wreg free
  8583  001440  0E09               	movlw	9
  8584  001442  0100               	movlb	0	; () banked
  8585  001444  2575               	addwf	?___awdiv& (0+255),w,b
  8586  001446  0100               	movlb	0	; () banked
  8587  001448  6F79               	movwf	___wmul@multiplier& (0+255),b
  8588  00144A  0E00               	movlw	0
  8589  00144C  0100               	movlb	0	; () banked
  8590  00144E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8591  001450  0100               	movlb	0	; () banked
  8592  001452  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8593  001454  EC7B  F01D         	call	___wmul	;wreg free
  8594  001458  0E44               	movlw	low __npowers_
  8595  00145A  0100               	movlb	0	; () banked
  8596  00145C  2579               	addwf	?___wmul& (0+255),w,b
  8597  00145E  6EF6               	movwf	tblptrl,c
  8598  001460  0E7F               	movlw	high __npowers_
  8599  001462  0100               	movlb	0	; () banked
  8600  001464  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8601  001466  6EF7               	movwf	tblptrh,c
  8602  001468                     	if	0	;There are less than 3 active tblptr bytes
  8603  001468                     	endif
  8604  001468  0009               	tblrd		*+
  8605  00146A  CFF5 F080          	movff	tablat,___ftmul@f2
  8606  00146E  0009               	tblrd		*+
  8607  001470  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8608  001474  000A               	tblrd		*-
  8609  001476  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8610  00147A  0E00               	movlw	0
  8611  00147C  0100               	movlb	0	; () banked
  8612  00147E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8613  001480  0E64               	movlw	100
  8614  001482  6F77               	movwf	___awdiv@divisor& (0+255),b
  8615  001484  0100               	movlb	0	; () banked
  8616  001486  518F               	movf	scale@scl& (0+255),w,b
  8617  001488  0100               	movlb	0	; () banked
  8618  00148A  6F75               	movwf	___awdiv@dividend& (0+255),b
  8619  00148C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8620  00148E  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8621  001490  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8622  001492  ECF6  F019         	call	___awdiv	;wreg free
  8623  001496  0E12               	movlw	18
  8624  001498  0100               	movlb	0	; () banked
  8625  00149A  2575               	addwf	?___awdiv& (0+255),w,b
  8626  00149C  0100               	movlb	0	; () banked
  8627  00149E  6F79               	movwf	___wmul@multiplier& (0+255),b
  8628  0014A0  0E00               	movlw	0
  8629  0014A2  0100               	movlb	0	; () banked
  8630  0014A4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8631  0014A6  0100               	movlb	0	; () banked
  8632  0014A8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8633  0014AA  0E00               	movlw	0
  8634  0014AC  0100               	movlb	0	; () banked
  8635  0014AE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8636  0014B0  0E03               	movlw	3
  8637  0014B2  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8638  0014B4  EC7B  F01D         	call	___wmul	;wreg free
  8639  0014B8  0E44               	movlw	low __npowers_
  8640  0014BA  0100               	movlb	0	; () banked
  8641  0014BC  2579               	addwf	?___wmul& (0+255),w,b
  8642  0014BE  6EF6               	movwf	tblptrl,c
  8643  0014C0  0E7F               	movlw	high __npowers_
  8644  0014C2  0100               	movlb	0	; () banked
  8645  0014C4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8646  0014C6  6EF7               	movwf	tblptrh,c
  8647  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8648  0014C8                     	endif
  8649  0014C8  0009               	tblrd		*+
  8650  0014CA  CFF5 F07D          	movff	tablat,___ftmul@f1
  8651  0014CE  0009               	tblrd		*+
  8652  0014D0  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8653  0014D4  000A               	tblrd		*-
  8654  0014D6  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8655  0014DA  ECD0  F014         	call	___ftmul	;wreg free
  8656  0014DE  C07D  F08C         	movff	?___ftmul,_scale$2295
  8657  0014E2  C07E  F08D         	movff	?___ftmul+1,_scale$2295+1
  8658  0014E6  C07F  F08E         	movff	?___ftmul+2,_scale$2295+2
  8659                           
  8660                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8661  0014EA  C08C  F07D         	movff	_scale$2295,___ftmul@f1
  8662  0014EE  C08D  F07E         	movff	_scale$2295+1,___ftmul@f1+1
  8663  0014F2  C08E  F07F         	movff	_scale$2295+2,___ftmul@f1+2
  8664  0014F6  0E00               	movlw	0
  8665  0014F8  0100               	movlb	0	; () banked
  8666  0014FA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8667  0014FC  0E03               	movlw	3
  8668  0014FE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8669  001500  0E00               	movlw	0
  8670  001502  0100               	movlb	0	; () banked
  8671  001504  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8672  001506  0E0A               	movlw	10
  8673  001508  6F73               	movwf	___awmod@divisor& (0+255),b
  8674  00150A  0100               	movlb	0	; () banked
  8675  00150C  518F               	movf	scale@scl& (0+255),w,b
  8676  00150E  0100               	movlb	0	; () banked
  8677  001510  6F71               	movwf	___awmod@dividend& (0+255),b
  8678  001512  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8679  001514  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8680  001516  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8681  001518  EC49  F01A         	call	___awmod	;wreg free
  8682  00151C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8683  001520  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8684  001524  EC7B  F01D         	call	___wmul	;wreg free
  8685  001528  0E44               	movlw	low __npowers_
  8686  00152A  0100               	movlb	0	; () banked
  8687  00152C  2579               	addwf	?___wmul& (0+255),w,b
  8688  00152E  6EF6               	movwf	tblptrl,c
  8689  001530  0E7F               	movlw	high __npowers_
  8690  001532  0100               	movlb	0	; () banked
  8691  001534  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8692  001536  6EF7               	movwf	tblptrh,c
  8693  001538                     	if	0	;There are less than 3 active tblptr bytes
  8694  001538                     	endif
  8695  001538  0009               	tblrd		*+
  8696  00153A  CFF5 F080          	movff	tablat,___ftmul@f2
  8697  00153E  0009               	tblrd		*+
  8698  001540  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8699  001544  000A               	tblrd		*-
  8700  001546  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8701  00154A  ECD0  F014         	call	___ftmul	;wreg free
  8702  00154E  C07D  F089         	movff	?___ftmul,?_scale
  8703  001552  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8704  001556  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8705  00155A  0012               	return	
  8706  00155C                     l5068:
  8707                           
  8708                           ;doprnt.c: 432: else if(scl > 10)
  8709  00155C  0100               	movlb	0	; () banked
  8710  00155E  518F               	movf	scale@scl& (0+255),w,b
  8711  001560  0A80               	xorlw	128
  8712  001562  0F75               	addlw	-139
  8713  001564  A0D8               	btfss	status,0,c
  8714  001566  D05D               	goto	l5074
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8718  001568  0E00               	movlw	0
  8719  00156A  0100               	movlb	0	; () banked
  8720  00156C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8721  00156E  0E0A               	movlw	10
  8722  001570  6F77               	movwf	___awdiv@divisor& (0+255),b
  8723  001572  0100               	movlb	0	; () banked
  8724  001574  518F               	movf	scale@scl& (0+255),w,b
  8725  001576  0100               	movlb	0	; () banked
  8726  001578  6F75               	movwf	___awdiv@dividend& (0+255),b
  8727  00157A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8728  00157C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8729  00157E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8730  001580  ECF6  F019         	call	___awdiv	;wreg free
  8731  001584  0E09               	movlw	9
  8732  001586  0100               	movlb	0	; () banked
  8733  001588  2575               	addwf	?___awdiv& (0+255),w,b
  8734  00158A  0100               	movlb	0	; () banked
  8735  00158C  6F79               	movwf	___wmul@multiplier& (0+255),b
  8736  00158E  0E00               	movlw	0
  8737  001590  0100               	movlb	0	; () banked
  8738  001592  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8739  001594  0100               	movlb	0	; () banked
  8740  001596  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8741  001598  0E00               	movlw	0
  8742  00159A  0100               	movlb	0	; () banked
  8743  00159C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8744  00159E  0E03               	movlw	3
  8745  0015A0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8746  0015A2  EC7B  F01D         	call	___wmul	;wreg free
  8747  0015A6  0E44               	movlw	low __npowers_
  8748  0015A8  0100               	movlb	0	; () banked
  8749  0015AA  2579               	addwf	?___wmul& (0+255),w,b
  8750  0015AC  6EF6               	movwf	tblptrl,c
  8751  0015AE  0E7F               	movlw	high __npowers_
  8752  0015B0  0100               	movlb	0	; () banked
  8753  0015B2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8754  0015B4  6EF7               	movwf	tblptrh,c
  8755  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8756  0015B6                     	endif
  8757  0015B6  0009               	tblrd		*+
  8758  0015B8  CFF5 F07D          	movff	tablat,___ftmul@f1
  8759  0015BC  0009               	tblrd		*+
  8760  0015BE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8761  0015C2  000A               	tblrd		*-
  8762  0015C4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8763  0015C8  0E00               	movlw	0
  8764  0015CA  0100               	movlb	0	; () banked
  8765  0015CC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8766  0015CE  0E03               	movlw	3
  8767  0015D0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8768  0015D2  0E00               	movlw	0
  8769  0015D4  0100               	movlb	0	; () banked
  8770  0015D6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8771  0015D8  0E0A               	movlw	10
  8772  0015DA  6F73               	movwf	___awmod@divisor& (0+255),b
  8773  0015DC  0100               	movlb	0	; () banked
  8774  0015DE  518F               	movf	scale@scl& (0+255),w,b
  8775  0015E0  0100               	movlb	0	; () banked
  8776  0015E2  6F71               	movwf	___awmod@dividend& (0+255),b
  8777  0015E4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8778  0015E6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8779  0015E8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8780  0015EA  EC49  F01A         	call	___awmod	;wreg free
  8781  0015EE  C071  F079         	movff	?___awmod,___wmul@multiplier
  8782  0015F2  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8783  0015F6  EC7B  F01D         	call	___wmul	;wreg free
  8784  0015FA  0E44               	movlw	low __npowers_
  8785  0015FC  0100               	movlb	0	; () banked
  8786  0015FE  2579               	addwf	?___wmul& (0+255),w,b
  8787  001600  6EF6               	movwf	tblptrl,c
  8788  001602  0E7F               	movlw	high __npowers_
  8789  001604  0100               	movlb	0	; () banked
  8790  001606  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8791  001608  6EF7               	movwf	tblptrh,c
  8792  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8793  00160A                     	endif
  8794  00160A  0009               	tblrd		*+
  8795  00160C  CFF5 F080          	movff	tablat,___ftmul@f2
  8796  001610  0009               	tblrd		*+
  8797  001612  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8798  001616  000A               	tblrd		*-
  8799  001618  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8800  00161C  ECD0  F014         	call	___ftmul	;wreg free
  8801  001620  D796               	goto	L6
  8802  001622                     l5074:
  8803                           
  8804                           ;doprnt.c: 434: return _npowers_[scl];
  8805  001622  0100               	movlb	0	; () banked
  8806  001624  518F               	movf	scale@scl& (0+255),w,b
  8807  001626  0D03               	mullw	3
  8808  001628  0E44               	movlw	low __npowers_
  8809  00162A  24F3               	addwf	prodl,w,c
  8810  00162C  6EF6               	movwf	tblptrl,c
  8811  00162E  0E7F               	movlw	high __npowers_
  8812  001630  20F4               	addwfc	prodh,w,c
  8813  001632  6EF7               	movwf	tblptrh,c
  8814  001634                     	if	0	;There are less than 3 active tblptr bytes
  8815  001634                     	endif
  8816  001634  0009               	tblrd		*+
  8817  001636  CFF5 F089          	movff	tablat,?_scale
  8818  00163A  0009               	tblrd		*+
  8819  00163C  CFF5 F08A          	movff	tablat,?_scale+1
  8820  001640  000A               	tblrd		*-
  8821  001642  CFF5 F08B          	movff	tablat,?_scale+2
  8822                           
  8823                           ; BSR set to: 0
  8824  001646  0012               	return	
  8825  001648                     l5078:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;doprnt.c: 435: }
  8829                           ;doprnt.c: 436: if(scl>=110)
  8830  001648  0100               	movlb	0	; () banked
  8831  00164A  518F               	movf	scale@scl& (0+255),w,b
  8832  00164C  0A80               	xorlw	128
  8833  00164E  0F12               	addlw	-238
  8834  001650  A0D8               	btfss	status,0,c
  8835  001652  D0AC               	goto	l5086
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8839  001654  0E00               	movlw	0
  8840  001656  0100               	movlb	0	; () banked
  8841  001658  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8842  00165A  0E03               	movlw	3
  8843  00165C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8844  00165E  0E00               	movlw	0
  8845  001660  0100               	movlb	0	; () banked
  8846  001662  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8847  001664  0E0A               	movlw	10
  8848  001666  6F77               	movwf	___awdiv@divisor& (0+255),b
  8849  001668  0E00               	movlw	0
  8850  00166A  0100               	movlb	0	; () banked
  8851  00166C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8852  00166E  0E64               	movlw	100
  8853  001670  6F73               	movwf	___awmod@divisor& (0+255),b
  8854  001672  0100               	movlb	0	; () banked
  8855  001674  518F               	movf	scale@scl& (0+255),w,b
  8856  001676  0100               	movlb	0	; () banked
  8857  001678  6F71               	movwf	___awmod@dividend& (0+255),b
  8858  00167A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8859  00167C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8860  00167E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8861  001680  EC49  F01A         	call	___awmod	;wreg free
  8862  001684  C071  F075         	movff	?___awmod,___awdiv@dividend
  8863  001688  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8864  00168C  ECF6  F019         	call	___awdiv	;wreg free
  8865  001690  0E09               	movlw	9
  8866  001692  0100               	movlb	0	; () banked
  8867  001694  2575               	addwf	?___awdiv& (0+255),w,b
  8868  001696  0100               	movlb	0	; () banked
  8869  001698  6F79               	movwf	___wmul@multiplier& (0+255),b
  8870  00169A  0E00               	movlw	0
  8871  00169C  0100               	movlb	0	; () banked
  8872  00169E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8873  0016A0  0100               	movlb	0	; () banked
  8874  0016A2  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8875  0016A4  EC7B  F01D         	call	___wmul	;wreg free
  8876  0016A8  0E1D               	movlw	low __powers_
  8877  0016AA  0100               	movlb	0	; () banked
  8878  0016AC  2579               	addwf	?___wmul& (0+255),w,b
  8879  0016AE  6EF6               	movwf	tblptrl,c
  8880  0016B0  0E7F               	movlw	high __powers_
  8881  0016B2  0100               	movlb	0	; () banked
  8882  0016B4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8883  0016B6  6EF7               	movwf	tblptrh,c
  8884  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8885  0016B8                     	endif
  8886  0016B8  0009               	tblrd		*+
  8887  0016BA  CFF5 F080          	movff	tablat,___ftmul@f2
  8888  0016BE  0009               	tblrd		*+
  8889  0016C0  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8890  0016C4  000A               	tblrd		*-
  8891  0016C6  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8892  0016CA  0E00               	movlw	0
  8893  0016CC  0100               	movlb	0	; () banked
  8894  0016CE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8895  0016D0  0E64               	movlw	100
  8896  0016D2  6F77               	movwf	___awdiv@divisor& (0+255),b
  8897  0016D4  0100               	movlb	0	; () banked
  8898  0016D6  518F               	movf	scale@scl& (0+255),w,b
  8899  0016D8  0100               	movlb	0	; () banked
  8900  0016DA  6F75               	movwf	___awdiv@dividend& (0+255),b
  8901  0016DC  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8902  0016DE  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8903  0016E0  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8904  0016E2  ECF6  F019         	call	___awdiv	;wreg free
  8905  0016E6  0E12               	movlw	18
  8906  0016E8  0100               	movlb	0	; () banked
  8907  0016EA  2575               	addwf	?___awdiv& (0+255),w,b
  8908  0016EC  0100               	movlb	0	; () banked
  8909  0016EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  8910  0016F0  0E00               	movlw	0
  8911  0016F2  0100               	movlb	0	; () banked
  8912  0016F4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8913  0016F6  0100               	movlb	0	; () banked
  8914  0016F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8915  0016FA  0E00               	movlw	0
  8916  0016FC  0100               	movlb	0	; () banked
  8917  0016FE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8918  001700  0E03               	movlw	3
  8919  001702  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8920  001704  EC7B  F01D         	call	___wmul	;wreg free
  8921  001708  0E1D               	movlw	low __powers_
  8922  00170A  0100               	movlb	0	; () banked
  8923  00170C  2579               	addwf	?___wmul& (0+255),w,b
  8924  00170E  6EF6               	movwf	tblptrl,c
  8925  001710  0E7F               	movlw	high __powers_
  8926  001712  0100               	movlb	0	; () banked
  8927  001714  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8928  001716  6EF7               	movwf	tblptrh,c
  8929  001718                     	if	0	;There are less than 3 active tblptr bytes
  8930  001718                     	endif
  8931  001718  0009               	tblrd		*+
  8932  00171A  CFF5 F07D          	movff	tablat,___ftmul@f1
  8933  00171E  0009               	tblrd		*+
  8934  001720  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8935  001724  000A               	tblrd		*-
  8936  001726  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8937  00172A  ECD0  F014         	call	___ftmul	;wreg free
  8938  00172E  C07D  F08C         	movff	?___ftmul,_scale$2295
  8939  001732  C07E  F08D         	movff	?___ftmul+1,_scale$2295+1
  8940  001736  C07F  F08E         	movff	?___ftmul+2,_scale$2295+2
  8941                           
  8942                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8943  00173A  C08C  F07D         	movff	_scale$2295,___ftmul@f1
  8944  00173E  C08D  F07E         	movff	_scale$2295+1,___ftmul@f1+1
  8945  001742  C08E  F07F         	movff	_scale$2295+2,___ftmul@f1+2
  8946  001746  0E00               	movlw	0
  8947  001748  0100               	movlb	0	; () banked
  8948  00174A  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8949  00174C  0E03               	movlw	3
  8950  00174E  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8951  001750  0E00               	movlw	0
  8952  001752  0100               	movlb	0	; () banked
  8953  001754  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8954  001756  0E0A               	movlw	10
  8955  001758  6F73               	movwf	___awmod@divisor& (0+255),b
  8956  00175A  0100               	movlb	0	; () banked
  8957  00175C  518F               	movf	scale@scl& (0+255),w,b
  8958  00175E  0100               	movlb	0	; () banked
  8959  001760  6F71               	movwf	___awmod@dividend& (0+255),b
  8960  001762  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8961  001764  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8962  001766  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8963  001768  EC49  F01A         	call	___awmod	;wreg free
  8964  00176C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8965  001770  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8966  001774  EC7B  F01D         	call	___wmul	;wreg free
  8967  001778  0E1D               	movlw	low __powers_
  8968  00177A  0100               	movlb	0	; () banked
  8969  00177C  2579               	addwf	?___wmul& (0+255),w,b
  8970  00177E  6EF6               	movwf	tblptrl,c
  8971  001780  0E7F               	movlw	high __powers_
  8972  001782  0100               	movlb	0	; () banked
  8973  001784  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8974  001786  6EF7               	movwf	tblptrh,c
  8975  001788                     	if	0	;There are less than 3 active tblptr bytes
  8976  001788                     	endif
  8977  001788  0009               	tblrd		*+
  8978  00178A  CFF5 F080          	movff	tablat,___ftmul@f2
  8979  00178E  0009               	tblrd		*+
  8980  001790  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8981  001794  000A               	tblrd		*-
  8982  001796  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8983  00179A  ECD0  F014         	call	___ftmul	;wreg free
  8984  00179E  C07D  F089         	movff	?___ftmul,?_scale
  8985  0017A2  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8986  0017A6  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8987  0017AA  0012               	return	
  8988  0017AC                     l5086:
  8989                           
  8990                           ;doprnt.c: 438: else if(scl > 10)
  8991  0017AC  0100               	movlb	0	; () banked
  8992  0017AE  518F               	movf	scale@scl& (0+255),w,b
  8993  0017B0  0A80               	xorlw	128
  8994  0017B2  0F75               	addlw	-139
  8995  0017B4  A0D8               	btfss	status,0,c
  8996  0017B6  D05D               	goto	l5092
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9000  0017B8  0E00               	movlw	0
  9001  0017BA  0100               	movlb	0	; () banked
  9002  0017BC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9003  0017BE  0E0A               	movlw	10
  9004  0017C0  6F77               	movwf	___awdiv@divisor& (0+255),b
  9005  0017C2  0100               	movlb	0	; () banked
  9006  0017C4  518F               	movf	scale@scl& (0+255),w,b
  9007  0017C6  0100               	movlb	0	; () banked
  9008  0017C8  6F75               	movwf	___awdiv@dividend& (0+255),b
  9009  0017CA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9010  0017CC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  9011  0017CE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9012  0017D0  ECF6  F019         	call	___awdiv	;wreg free
  9013  0017D4  0E09               	movlw	9
  9014  0017D6  0100               	movlb	0	; () banked
  9015  0017D8  2575               	addwf	?___awdiv& (0+255),w,b
  9016  0017DA  0100               	movlb	0	; () banked
  9017  0017DC  6F79               	movwf	___wmul@multiplier& (0+255),b
  9018  0017DE  0E00               	movlw	0
  9019  0017E0  0100               	movlb	0	; () banked
  9020  0017E2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9021  0017E4  0100               	movlb	0	; () banked
  9022  0017E6  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9023  0017E8  0E00               	movlw	0
  9024  0017EA  0100               	movlb	0	; () banked
  9025  0017EC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9026  0017EE  0E03               	movlw	3
  9027  0017F0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9028  0017F2  EC7B  F01D         	call	___wmul	;wreg free
  9029  0017F6  0E1D               	movlw	low __powers_
  9030  0017F8  0100               	movlb	0	; () banked
  9031  0017FA  2579               	addwf	?___wmul& (0+255),w,b
  9032  0017FC  6EF6               	movwf	tblptrl,c
  9033  0017FE  0E7F               	movlw	high __powers_
  9034  001800  0100               	movlb	0	; () banked
  9035  001802  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9036  001804  6EF7               	movwf	tblptrh,c
  9037  001806                     	if	0	;There are less than 3 active tblptr bytes
  9038  001806                     	endif
  9039  001806  0009               	tblrd		*+
  9040  001808  CFF5 F07D          	movff	tablat,___ftmul@f1
  9041  00180C  0009               	tblrd		*+
  9042  00180E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9043  001812  000A               	tblrd		*-
  9044  001814  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9045  001818  0E00               	movlw	0
  9046  00181A  0100               	movlb	0	; () banked
  9047  00181C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9048  00181E  0E03               	movlw	3
  9049  001820  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9050  001822  0E00               	movlw	0
  9051  001824  0100               	movlb	0	; () banked
  9052  001826  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9053  001828  0E0A               	movlw	10
  9054  00182A  6F73               	movwf	___awmod@divisor& (0+255),b
  9055  00182C  0100               	movlb	0	; () banked
  9056  00182E  518F               	movf	scale@scl& (0+255),w,b
  9057  001830  0100               	movlb	0	; () banked
  9058  001832  6F71               	movwf	___awmod@dividend& (0+255),b
  9059  001834  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9060  001836  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9061  001838  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9062  00183A  EC49  F01A         	call	___awmod	;wreg free
  9063  00183E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9064  001842  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9065  001846  EC7B  F01D         	call	___wmul	;wreg free
  9066  00184A  0E1D               	movlw	low __powers_
  9067  00184C  0100               	movlb	0	; () banked
  9068  00184E  2579               	addwf	?___wmul& (0+255),w,b
  9069  001850  6EF6               	movwf	tblptrl,c
  9070  001852  0E7F               	movlw	high __powers_
  9071  001854  0100               	movlb	0	; () banked
  9072  001856  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9073  001858  6EF7               	movwf	tblptrh,c
  9074  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9075  00185A                     	endif
  9076  00185A  0009               	tblrd		*+
  9077  00185C  CFF5 F080          	movff	tablat,___ftmul@f2
  9078  001860  0009               	tblrd		*+
  9079  001862  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9080  001866  000A               	tblrd		*-
  9081  001868  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9082  00186C  ECD0  F014         	call	___ftmul	;wreg free
  9083  001870  D796               	goto	L7
  9084  001872                     l5092:
  9085                           
  9086                           ;doprnt.c: 440: return _powers_[scl];
  9087  001872  0100               	movlb	0	; () banked
  9088  001874  518F               	movf	scale@scl& (0+255),w,b
  9089  001876  0D03               	mullw	3
  9090  001878  0E1D               	movlw	low __powers_
  9091  00187A  24F3               	addwf	prodl,w,c
  9092  00187C  6EF6               	movwf	tblptrl,c
  9093  00187E  0E7F               	movlw	high __powers_
  9094  001880  20F4               	addwfc	prodh,w,c
  9095  001882  6EF7               	movwf	tblptrh,c
  9096  001884                     	if	0	;There are less than 3 active tblptr bytes
  9097  001884                     	endif
  9098  001884  0009               	tblrd		*+
  9099  001886  CFF5 F089          	movff	tablat,?_scale
  9100  00188A  0009               	tblrd		*+
  9101  00188C  CFF5 F08A          	movff	tablat,?_scale+1
  9102  001890  000A               	tblrd		*-
  9103  001892  CFF5 F08B          	movff	tablat,?_scale+2
  9104  001896  0012               	return	
  9105  001898                     __end_of_scale:
  9106                           	opt stack 0
  9107                           tblptru	equ	0xFF8
  9108                           tblptrh	equ	0xFF7
  9109                           tblptrl	equ	0xFF6
  9110                           tablat	equ	0xFF5
  9111                           prodh	equ	0xFF4
  9112                           prodl	equ	0xFF3
  9113                           indf0	equ	0xFEF
  9114                           postinc0	equ	0xFEE
  9115                           fsr0h	equ	0xFEA
  9116                           fsr0l	equ	0xFE9
  9117                           wreg	equ	0xFE8
  9118                           indf1	equ	0xFE7
  9119                           postdec1	equ	0xFE5
  9120                           fsr1h	equ	0xFE2
  9121                           fsr1l	equ	0xFE1
  9122                           indf2	equ	0xFDF
  9123                           postinc2	equ	0xFDE
  9124                           postdec2	equ	0xFDD
  9125                           fsr2h	equ	0xFDA
  9126                           fsr2l	equ	0xFD9
  9127                           status	equ	0xFD8
  9128                           
  9129 ;; *************** function _isdigit *****************
  9130 ;; Defined at:
  9131 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  c               1    wreg     unsigned char 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  c               1   35[COMRAM] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;		None               void
  9138 ;; Registers used:
  9139 ;;		wreg, status,2, status,0
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9145 ;;      Params:         0       0       0       0       0       0       0
  9146 ;;      Locals:         2       0       0       0       0       0       0
  9147 ;;      Temps:          1       0       0       0       0       0       0
  9148 ;;      Totals:         3       0       0       0       0       0       0
  9149 ;;Total ram usage:        3 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:    3
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_sprintf
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text33
  9160  003C5C                     __ptext33:
  9161                           	opt stack 0
  9162  003C5C                     _isdigit:
  9163                           	opt stack 24
  9164                           
  9165                           ;incstack = 0
  9166                           ;isdigit@c stored from wreg
  9167  003C5C  6E24               	movwf	isdigit@c,c
  9168  003C5E  0E00               	movlw	0
  9169  003C60  6E23               	movwf	_isdigit$1935,c
  9170  003C62  0E3A               	movlw	58
  9171  003C64  6024               	cpfslt	isdigit@c,c
  9172  003C66  D005               	goto	l5104
  9173  003C68  0E2F               	movlw	47
  9174  003C6A  6424               	cpfsgt	isdigit@c,c
  9175  003C6C  D002               	goto	l5104
  9176  003C6E  0E01               	movlw	1
  9177  003C70  6E23               	movwf	_isdigit$1935,c
  9178  003C72                     l5104:
  9179  003C72  C023  F022         	movff	_isdigit$1935,??_isdigit
  9180  003C76  3022               	rrcf	??_isdigit,w,c
  9181  003C78  0012               	return	
  9182  003C7A                     __end_of_isdigit:
  9183                           	opt stack 0
  9184                           tblptru	equ	0xFF8
  9185                           tblptrh	equ	0xFF7
  9186                           tblptrl	equ	0xFF6
  9187                           tablat	equ	0xFF5
  9188                           prodh	equ	0xFF4
  9189                           prodl	equ	0xFF3
  9190                           indf0	equ	0xFEF
  9191                           postinc0	equ	0xFEE
  9192                           fsr0h	equ	0xFEA
  9193                           fsr0l	equ	0xFE9
  9194                           wreg	equ	0xFE8
  9195                           indf1	equ	0xFE7
  9196                           postdec1	equ	0xFE5
  9197                           fsr1h	equ	0xFE2
  9198                           fsr1l	equ	0xFE1
  9199                           indf2	equ	0xFDF
  9200                           postinc2	equ	0xFDE
  9201                           postdec2	equ	0xFDD
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8
  9205                           
  9206 ;; *************** function _fround *****************
  9207 ;; Defined at:
  9208 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  prec            1    wreg     unsigned char 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  prec            1   50[BANK0 ] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  3   41[BANK0 ] unsigned char 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9222 ;;      Params:         0       3       0       0       0       0       0
  9223 ;;      Locals:         0       7       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0
  9225 ;;      Totals:         0      10       0       0       0       0       0
  9226 ;;Total ram usage:       10 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    5
  9229 ;; This function calls:
  9230 ;;		___awdiv
  9231 ;;		___awmod
  9232 ;;		___ftmul
  9233 ;;		___wmul
  9234 ;; This function is called by:
  9235 ;;		_sprintf
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text34
  9240  001C88                     __ptext34:
  9241                           	opt stack 0
  9242  001C88                     _fround:
  9243                           	opt stack 22
  9244                           
  9245                           ;incstack = 0
  9246                           ;fround@prec stored from wreg
  9247  001C88  0100               	movlb	0	; () banked
  9248  001C8A  6F92               	movwf	fround@prec& (0+255),b
  9249                           
  9250                           ;doprnt.c: 413: if(prec>=110)
  9251  001C8C  0E6D               	movlw	109
  9252  001C8E  0100               	movlb	0	; () banked
  9253  001C90  6592               	cpfsgt	fround@prec& (0+255),b
  9254  001C92  D0BA               	goto	l5046
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9258  001C94  0E00               	movlw	0
  9259  001C96  0100               	movlb	0	; () banked
  9260  001C98  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9261  001C9A  0E03               	movlw	3
  9262  001C9C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9263  001C9E  0E00               	movlw	0
  9264  001CA0  0100               	movlb	0	; () banked
  9265  001CA2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9266  001CA4  0E0A               	movlw	10
  9267  001CA6  6F77               	movwf	___awdiv@divisor& (0+255),b
  9268  001CA8  0E00               	movlw	0
  9269  001CAA  0100               	movlb	0	; () banked
  9270  001CAC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9271  001CAE  0E64               	movlw	100
  9272  001CB0  6F73               	movwf	___awmod@divisor& (0+255),b
  9273  001CB2  C092  F071         	movff	fround@prec,___awmod@dividend
  9274  001CB6  0100               	movlb	0	; () banked
  9275  001CB8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9276  001CBA  EC49  F01A         	call	___awmod	;wreg free
  9277  001CBE  C071  F075         	movff	?___awmod,___awdiv@dividend
  9278  001CC2  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  9279  001CC6  ECF6  F019         	call	___awdiv	;wreg free
  9280  001CCA  0E09               	movlw	9
  9281  001CCC  0100               	movlb	0	; () banked
  9282  001CCE  2575               	addwf	?___awdiv& (0+255),w,b
  9283  001CD0  0100               	movlb	0	; () banked
  9284  001CD2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9285  001CD4  0E00               	movlw	0
  9286  001CD6  0100               	movlb	0	; () banked
  9287  001CD8  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9288  001CDA  0100               	movlb	0	; () banked
  9289  001CDC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9290  001CDE  EC7B  F01D         	call	___wmul	;wreg free
  9291  001CE2  0E44               	movlw	low __npowers_
  9292  001CE4  0100               	movlb	0	; () banked
  9293  001CE6  2579               	addwf	?___wmul& (0+255),w,b
  9294  001CE8  6EF6               	movwf	tblptrl,c
  9295  001CEA  0E7F               	movlw	high __npowers_
  9296  001CEC  0100               	movlb	0	; () banked
  9297  001CEE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9298  001CF0  6EF7               	movwf	tblptrh,c
  9299  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  9300  001CF2                     	endif
  9301  001CF2  0009               	tblrd		*+
  9302  001CF4  CFF5 F080          	movff	tablat,___ftmul@f2
  9303  001CF8  0009               	tblrd		*+
  9304  001CFA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9305  001CFE  000A               	tblrd		*-
  9306  001D00  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9307  001D04  0E00               	movlw	0
  9308  001D06  0100               	movlb	0	; () banked
  9309  001D08  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9310  001D0A  0E64               	movlw	100
  9311  001D0C  6F77               	movwf	___awdiv@divisor& (0+255),b
  9312  001D0E  C092  F075         	movff	fround@prec,___awdiv@dividend
  9313  001D12  0100               	movlb	0	; () banked
  9314  001D14  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9315  001D16  ECF6  F019         	call	___awdiv	;wreg free
  9316  001D1A  0E12               	movlw	18
  9317  001D1C  0100               	movlb	0	; () banked
  9318  001D1E  2575               	addwf	?___awdiv& (0+255),w,b
  9319  001D20  0100               	movlb	0	; () banked
  9320  001D22  6F79               	movwf	___wmul@multiplier& (0+255),b
  9321  001D24  0E00               	movlw	0
  9322  001D26  0100               	movlb	0	; () banked
  9323  001D28  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9324  001D2A  0100               	movlb	0	; () banked
  9325  001D2C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9326  001D2E  0E00               	movlw	0
  9327  001D30  0100               	movlb	0	; () banked
  9328  001D32  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9329  001D34  0E03               	movlw	3
  9330  001D36  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9331  001D38  EC7B  F01D         	call	___wmul	;wreg free
  9332  001D3C  0E44               	movlw	low __npowers_
  9333  001D3E  0100               	movlb	0	; () banked
  9334  001D40  2579               	addwf	?___wmul& (0+255),w,b
  9335  001D42  6EF6               	movwf	tblptrl,c
  9336  001D44  0E7F               	movlw	high __npowers_
  9337  001D46  0100               	movlb	0	; () banked
  9338  001D48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9339  001D4A  6EF7               	movwf	tblptrh,c
  9340  001D4C                     	if	0	;There are less than 3 active tblptr bytes
  9341  001D4C                     	endif
  9342  001D4C  0009               	tblrd		*+
  9343  001D4E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9344  001D52  0009               	tblrd		*+
  9345  001D54  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9346  001D58  000A               	tblrd		*-
  9347  001D5A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9348  001D5E  ECD0  F014         	call	___ftmul	;wreg free
  9349  001D62  C07D  F08F         	movff	?___ftmul,_fround$2293
  9350  001D66  C07E  F090         	movff	?___ftmul+1,_fround$2293+1
  9351  001D6A  C07F  F091         	movff	?___ftmul+2,_fround$2293+2
  9352                           
  9353                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9354  001D6E  0E00               	movlw	0
  9355  001D70  0100               	movlb	0	; () banked
  9356  001D72  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9357  001D74  0E03               	movlw	3
  9358  001D76  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9359  001D78  0E00               	movlw	0
  9360  001D7A  0100               	movlb	0	; () banked
  9361  001D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9362  001D7E  0E0A               	movlw	10
  9363  001D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9364  001D82  C092  F071         	movff	fround@prec,___awmod@dividend
  9365  001D86  0100               	movlb	0	; () banked
  9366  001D88  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9367  001D8A  EC49  F01A         	call	___awmod	;wreg free
  9368  001D8E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9369  001D92  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9370  001D96  EC7B  F01D         	call	___wmul	;wreg free
  9371  001D9A  0E44               	movlw	low __npowers_
  9372  001D9C  0100               	movlb	0	; () banked
  9373  001D9E  2579               	addwf	?___wmul& (0+255),w,b
  9374  001DA0  6EF6               	movwf	tblptrl,c
  9375  001DA2  0E7F               	movlw	high __npowers_
  9376  001DA4  0100               	movlb	0	; () banked
  9377  001DA6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9378  001DA8  6EF7               	movwf	tblptrh,c
  9379  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9380  001DAA                     	endif
  9381  001DAA  0009               	tblrd		*+
  9382  001DAC  CFF5 F080          	movff	tablat,___ftmul@f2
  9383  001DB0  0009               	tblrd		*+
  9384  001DB2  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9385  001DB6  000A               	tblrd		*-
  9386  001DB8  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9387  001DBC  C08F  F07D         	movff	_fround$2293,___ftmul@f1
  9388  001DC0  C090  F07E         	movff	_fround$2293+1,___ftmul@f1+1
  9389  001DC4  C091  F07F         	movff	_fround$2293+2,___ftmul@f1+2
  9390  001DC8  ECD0  F014         	call	___ftmul	;wreg free
  9391  001DCC  C07D  F08C         	movff	?___ftmul,_fround$2294
  9392  001DD0  C07E  F08D         	movff	?___ftmul+1,_fround$2294+1
  9393  001DD4  C07F  F08E         	movff	?___ftmul+2,_fround$2294+2
  9394                           
  9395                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9396  001DD8  C08C  F07D         	movff	_fround$2294,___ftmul@f1
  9397  001DDC  C08D  F07E         	movff	_fround$2294+1,___ftmul@f1+1
  9398  001DE0  C08E  F07F         	movff	_fround$2294+2,___ftmul@f1+2
  9399  001DE4  0E00               	movlw	0
  9400  001DE6  0100               	movlb	0	; () banked
  9401  001DE8  6F80               	movwf	___ftmul@f2& (0+255),b
  9402  001DEA  0E00               	movlw	0
  9403  001DEC  0100               	movlb	0	; () banked
  9404  001DEE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9405  001DF0  0E3F               	movlw	63
  9406  001DF2  0100               	movlb	0	; () banked
  9407  001DF4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9408  001DF6  ECD0  F014         	call	___ftmul	;wreg free
  9409  001DFA  C07D  F089         	movff	?___ftmul,?_fround
  9410  001DFE  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9411  001E02  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9412  001E06  0012               	return	
  9413  001E08                     l5046:
  9414                           
  9415                           ;doprnt.c: 415: else if(prec > 10)
  9416  001E08  0E0A               	movlw	10
  9417  001E0A  0100               	movlb	0	; () banked
  9418  001E0C  6592               	cpfsgt	fround@prec& (0+255),b
  9419  001E0E  D06E               	goto	l5054
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9423  001E10  0E00               	movlw	0
  9424  001E12  0100               	movlb	0	; () banked
  9425  001E14  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9426  001E16  0E03               	movlw	3
  9427  001E18  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9428  001E1A  0E00               	movlw	0
  9429  001E1C  0100               	movlb	0	; () banked
  9430  001E1E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9431  001E20  0E0A               	movlw	10
  9432  001E22  6F73               	movwf	___awmod@divisor& (0+255),b
  9433  001E24  C092  F071         	movff	fround@prec,___awmod@dividend
  9434  001E28  0100               	movlb	0	; () banked
  9435  001E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9436  001E2C  EC49  F01A         	call	___awmod	;wreg free
  9437  001E30  C071  F079         	movff	?___awmod,___wmul@multiplier
  9438  001E34  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9439  001E38  EC7B  F01D         	call	___wmul	;wreg free
  9440  001E3C  0E44               	movlw	low __npowers_
  9441  001E3E  0100               	movlb	0	; () banked
  9442  001E40  2579               	addwf	?___wmul& (0+255),w,b
  9443  001E42  6EF6               	movwf	tblptrl,c
  9444  001E44  0E7F               	movlw	high __npowers_
  9445  001E46  0100               	movlb	0	; () banked
  9446  001E48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9447  001E4A  6EF7               	movwf	tblptrh,c
  9448  001E4C                     	if	0	;There are less than 3 active tblptr bytes
  9449  001E4C                     	endif
  9450  001E4C  0009               	tblrd		*+
  9451  001E4E  CFF5 F080          	movff	tablat,___ftmul@f2
  9452  001E52  0009               	tblrd		*+
  9453  001E54  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9454  001E58  000A               	tblrd		*-
  9455  001E5A  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9456  001E5E  0E00               	movlw	0
  9457  001E60  0100               	movlb	0	; () banked
  9458  001E62  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9459  001E64  0E0A               	movlw	10
  9460  001E66  6F77               	movwf	___awdiv@divisor& (0+255),b
  9461  001E68  C092  F075         	movff	fround@prec,___awdiv@dividend
  9462  001E6C  0100               	movlb	0	; () banked
  9463  001E6E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9464  001E70  ECF6  F019         	call	___awdiv	;wreg free
  9465  001E74  0E09               	movlw	9
  9466  001E76  0100               	movlb	0	; () banked
  9467  001E78  2575               	addwf	?___awdiv& (0+255),w,b
  9468  001E7A  0100               	movlb	0	; () banked
  9469  001E7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9470  001E7E  0E00               	movlw	0
  9471  001E80  0100               	movlb	0	; () banked
  9472  001E82  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9473  001E84  0100               	movlb	0	; () banked
  9474  001E86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9475  001E88  0E00               	movlw	0
  9476  001E8A  0100               	movlb	0	; () banked
  9477  001E8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9478  001E8E  0E03               	movlw	3
  9479  001E90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9480  001E92  EC7B  F01D         	call	___wmul	;wreg free
  9481  001E96  0E44               	movlw	low __npowers_
  9482  001E98  0100               	movlb	0	; () banked
  9483  001E9A  2579               	addwf	?___wmul& (0+255),w,b
  9484  001E9C  6EF6               	movwf	tblptrl,c
  9485  001E9E  0E7F               	movlw	high __npowers_
  9486  001EA0  0100               	movlb	0	; () banked
  9487  001EA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9488  001EA4  6EF7               	movwf	tblptrh,c
  9489  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  9490  001EA6                     	endif
  9491  001EA6  0009               	tblrd		*+
  9492  001EA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9493  001EAC  0009               	tblrd		*+
  9494  001EAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9495  001EB2  000A               	tblrd		*-
  9496  001EB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9497  001EB8  ECD0  F014         	call	___ftmul	;wreg free
  9498  001EBC  C07D  F08F         	movff	?___ftmul,_fround$2293
  9499  001EC0  C07E  F090         	movff	?___ftmul+1,_fround$2293+1
  9500  001EC4  C07F  F091         	movff	?___ftmul+2,_fround$2293+2
  9501                           
  9502                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9503  001EC8  C08F  F07D         	movff	_fround$2293,___ftmul@f1
  9504  001ECC  C090  F07E         	movff	_fround$2293+1,___ftmul@f1+1
  9505  001ED0  C091  F07F         	movff	_fround$2293+2,___ftmul@f1+2
  9506  001ED4  0E00               	movlw	0
  9507  001ED6  0100               	movlb	0	; () banked
  9508  001ED8  6F80               	movwf	___ftmul@f2& (0+255),b
  9509  001EDA  0E00               	movlw	0
  9510  001EDC  0100               	movlb	0	; () banked
  9511  001EDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9512  001EE0  0E3F               	movlw	63
  9513  001EE2  0100               	movlb	0	; () banked
  9514  001EE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9515  001EE6  ECD0  F014         	call	___ftmul	;wreg free
  9516  001EEA  D787               	goto	L8
  9517  001EEC                     l5054:
  9518                           
  9519                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9520  001EEC  0100               	movlb	0	; () banked
  9521  001EEE  5192               	movf	fround@prec& (0+255),w,b
  9522  001EF0  0D03               	mullw	3
  9523  001EF2  0E44               	movlw	low __npowers_
  9524  001EF4  24F3               	addwf	prodl,w,c
  9525  001EF6  6EF6               	movwf	tblptrl,c
  9526  001EF8  0E7F               	movlw	high __npowers_
  9527  001EFA  20F4               	addwfc	prodh,w,c
  9528  001EFC  6EF7               	movwf	tblptrh,c
  9529  001EFE                     	if	0	;There are less than 3 active tblptr bytes
  9530  001EFE                     	endif
  9531  001EFE  0009               	tblrd		*+
  9532  001F00  CFF5 F07D          	movff	tablat,___ftmul@f1
  9533  001F04  0009               	tblrd		*+
  9534  001F06  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9535  001F0A  000A               	tblrd		*-
  9536  001F0C  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9537  001F10  0E00               	movlw	0
  9538  001F12  0100               	movlb	0	; () banked
  9539  001F14  6F80               	movwf	___ftmul@f2& (0+255),b
  9540  001F16  0E00               	movlw	0
  9541  001F18  0100               	movlb	0	; () banked
  9542  001F1A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9543  001F1C  0E3F               	movlw	63
  9544  001F1E  0100               	movlb	0	; () banked
  9545  001F20  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9546  001F22  ECD0  F014         	call	___ftmul	;wreg free
  9547  001F26  C07D  F089         	movff	?___ftmul,?_fround
  9548  001F2A  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9549  001F2E  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9550  001F32  0012               	return	
  9551  001F34                     __end_of_fround:
  9552                           	opt stack 0
  9553                           tblptru	equ	0xFF8
  9554                           tblptrh	equ	0xFF7
  9555                           tblptrl	equ	0xFF6
  9556                           tablat	equ	0xFF5
  9557                           prodh	equ	0xFF4
  9558                           prodl	equ	0xFF3
  9559                           indf0	equ	0xFEF
  9560                           postinc0	equ	0xFEE
  9561                           fsr0h	equ	0xFEA
  9562                           fsr0l	equ	0xFE9
  9563                           wreg	equ	0xFE8
  9564                           indf1	equ	0xFE7
  9565                           postdec1	equ	0xFE5
  9566                           fsr1h	equ	0xFE2
  9567                           fsr1l	equ	0xFE1
  9568                           indf2	equ	0xFDF
  9569                           postinc2	equ	0xFDE
  9570                           postdec2	equ	0xFDD
  9571                           fsr2h	equ	0xFDA
  9572                           fsr2l	equ	0xFD9
  9573                           status	equ	0xFD8
  9574                           
  9575 ;; *************** function ___wmul *****************
  9576 ;; Defined at:
  9577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  multiplier      2   25[BANK0 ] unsigned int 
  9580 ;;  multiplicand    2   27[BANK0 ] unsigned int 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  product         2   39[COMRAM] unsigned int 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  2   25[BANK0 ] unsigned int 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, prodl, prodh
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9592 ;;      Params:         0       4       0       0       0       0       0
  9593 ;;      Locals:         2       0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0
  9595 ;;      Totals:         2       4       0       0       0       0       0
  9596 ;;Total ram usage:        6 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    3
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_fround
  9603 ;;		_scale
  9604 ;;		_sprintf
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text35
  9609  003AF6                     __ptext35:
  9610                           	opt stack 0
  9611  003AF6                     ___wmul:
  9612                           	opt stack 23
  9613                           
  9614                           ;incstack = 0
  9615  003AF6  0100               	movlb	0	; () banked
  9616  003AF8  5179               	movf	___wmul@multiplier& (0+255),w,b
  9617  003AFA  0100               	movlb	0	; () banked
  9618  003AFC  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9619  003AFE  CFF3 F028          	movff	prodl,___wmul@product
  9620  003B02  CFF4 F029          	movff	prodh,___wmul@product+1
  9621  003B06  0100               	movlb	0	; () banked
  9622  003B08  5179               	movf	___wmul@multiplier& (0+255),w,b
  9623  003B0A  0100               	movlb	0	; () banked
  9624  003B0C  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9625  003B0E  50F3               	movf	prodl,w,c
  9626  003B10  2629               	addwf	___wmul@product+1,f,c
  9627  003B12  0100               	movlb	0	; () banked
  9628  003B14  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9629  003B16  0100               	movlb	0	; () banked
  9630  003B18  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9631  003B1A  50F3               	movf	prodl,w,c
  9632  003B1C  2629               	addwf	___wmul@product+1,f,c
  9633                           
  9634                           ; BSR set to: 0
  9635  003B1E  C028  F079         	movff	___wmul@product,?___wmul
  9636  003B22  C029  F07A         	movff	___wmul@product+1,?___wmul+1
  9637  003B26  0012               	return	
  9638  003B28                     __end_of___wmul:
  9639                           	opt stack 0
  9640                           tblptru	equ	0xFF8
  9641                           tblptrh	equ	0xFF7
  9642                           tblptrl	equ	0xFF6
  9643                           tablat	equ	0xFF5
  9644                           prodh	equ	0xFF4
  9645                           prodl	equ	0xFF3
  9646                           indf0	equ	0xFEF
  9647                           postinc0	equ	0xFEE
  9648                           fsr0h	equ	0xFEA
  9649                           fsr0l	equ	0xFE9
  9650                           wreg	equ	0xFE8
  9651                           indf1	equ	0xFE7
  9652                           postdec1	equ	0xFE5
  9653                           fsr1h	equ	0xFE2
  9654                           fsr1l	equ	0xFE1
  9655                           indf2	equ	0xFDF
  9656                           postinc2	equ	0xFDE
  9657                           postdec2	equ	0xFDD
  9658                           fsr2h	equ	0xFDA
  9659                           fsr2l	equ	0xFD9
  9660                           status	equ	0xFD8
  9661                           
  9662 ;; *************** function ___ftmul *****************
  9663 ;; Defined at:
  9664 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;  f1              3   29[BANK0 ] float 
  9667 ;;  f2              3   32[BANK0 ] float 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  9670 ;;  sign            1   40[BANK0 ] unsigned char 
  9671 ;;  cntr            1   39[BANK0 ] unsigned char 
  9672 ;;  exp             1   35[BANK0 ] unsigned char 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  3   29[BANK0 ] float 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, status,0, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9682 ;;      Params:         0       6       0       0       0       0       0
  9683 ;;      Locals:         0       6       0       0       0       0       0
  9684 ;;      Temps:          3       0       0       0       0       0       0
  9685 ;;      Totals:         3      12       0       0       0       0       0
  9686 ;;Total ram usage:       15 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    4
  9689 ;; This function calls:
  9690 ;;		___ftpack
  9691 ;; This function is called by:
  9692 ;;		_util_getBatteryVoltage
  9693 ;;		_util_getSolarCurrent
  9694 ;;		_util_getBatteryCurrent
  9695 ;;		_util_getTemperature
  9696 ;;		_fround
  9697 ;;		_scale
  9698 ;;		_sprintf
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text36
  9703  0029A0                     __ptext36:
  9704                           	opt stack 0
  9705  0029A0                     ___ftmul:
  9706                           	opt stack 24
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;incstack = 0
  9710  0029A0  C07F  F02A         	movff	___ftmul@f1+2,??___ftmul
  9711  0029A4  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9712  0029A6  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9713  0029A8  0100               	movlb	0	; () banked
  9714  0029AA  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9715  0029AC  362A               	rlcf	??___ftmul& (0+255),f,c
  9716  0029AE  E301               	bnc	u4781
  9717  0029B0  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9718  0029B2                     u4781:
  9719  0029B2  502A               	movf	??___ftmul,w,c
  9720  0029B4  0100               	movlb	0	; () banked
  9721  0029B6  6F83               	movwf	___ftmul@exp& (0+255),b
  9722  0029B8  0100               	movlb	0	; () banked
  9723  0029BA  5183               	movf	___ftmul@exp& (0+255),w,b
  9724  0029BC  A4D8               	btfss	status,2,c
  9725  0029BE  D00A               	goto	l4844
  9726                           
  9727                           ; BSR set to: 0
  9728  0029C0  0E00               	movlw	0
  9729  0029C2  0100               	movlb	0	; () banked
  9730  0029C4  6F7D               	movwf	?___ftmul& (0+255),b
  9731  0029C6  0E00               	movlw	0
  9732  0029C8  0100               	movlb	0	; () banked
  9733  0029CA  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9734  0029CC  0E00               	movlw	0
  9735  0029CE  0100               	movlb	0	; () banked
  9736  0029D0  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739  0029D2  0012               	return	
  9740  0029D4                     l4844:
  9741                           
  9742                           ; BSR set to: 0
  9743  0029D4  C082  F02A         	movff	___ftmul@f2+2,??___ftmul
  9744  0029D8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9745  0029DA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9746  0029DC  0100               	movlb	0	; () banked
  9747  0029DE  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9748  0029E0  362A               	rlcf	??___ftmul& (0+255),f,c
  9749  0029E2  E301               	bnc	u4801
  9750  0029E4  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9751  0029E6                     u4801:
  9752  0029E6  502A               	movf	??___ftmul,w,c
  9753  0029E8  0100               	movlb	0	; () banked
  9754  0029EA  6F88               	movwf	___ftmul@sign& (0+255),b
  9755  0029EC  0100               	movlb	0	; () banked
  9756  0029EE  5188               	movf	___ftmul@sign& (0+255),w,b
  9757  0029F0  A4D8               	btfss	status,2,c
  9758  0029F2  D00A               	goto	l4850
  9759                           
  9760                           ; BSR set to: 0
  9761  0029F4  0E00               	movlw	0
  9762  0029F6  0100               	movlb	0	; () banked
  9763  0029F8  6F7D               	movwf	?___ftmul& (0+255),b
  9764  0029FA  0E00               	movlw	0
  9765  0029FC  0100               	movlb	0	; () banked
  9766  0029FE  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9767  002A00  0E00               	movlw	0
  9768  002A02  0100               	movlb	0	; () banked
  9769  002A04  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9770                           
  9771                           ; BSR set to: 0
  9772  002A06  0012               	return	
  9773  002A08                     l4850:
  9774                           
  9775                           ; BSR set to: 0
  9776  002A08  0100               	movlb	0	; () banked
  9777  002A0A  5188               	movf	___ftmul@sign& (0+255),w,b
  9778  002A0C  0F7B               	addlw	123
  9779  002A0E  0100               	movlb	0	; () banked
  9780  002A10  2783               	addwf	___ftmul@exp& (0+255),f,b
  9781                           
  9782                           ; BSR set to: 0
  9783  002A12  C07F  F088         	movff	___ftmul@f1+2,___ftmul@sign
  9784  002A16  0100               	movlb	0	; () banked
  9785  002A18  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9786  002A1A  0100               	movlb	0	; () banked
  9787  002A1C  1B88               	xorwf	___ftmul@sign& (0+255),f,b
  9788  002A1E  0E80               	movlw	128
  9789  002A20  0100               	movlb	0	; () banked
  9790  002A22  1788               	andwf	___ftmul@sign& (0+255),f,b
  9791                           
  9792                           ; BSR set to: 0
  9793  002A24  0100               	movlb	0	; () banked
  9794  002A26  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9795                           
  9796                           ; BSR set to: 0
  9797  002A28  0100               	movlb	0	; () banked
  9798  002A2A  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9799                           
  9800                           ; BSR set to: 0
  9801  002A2C  0EFF               	movlw	255
  9802  002A2E  0100               	movlb	0	; () banked
  9803  002A30  1780               	andwf	___ftmul@f2& (0+255),f,b
  9804  002A32  0EFF               	movlw	255
  9805  002A34  0100               	movlb	0	; () banked
  9806  002A36  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9807  002A38  0E00               	movlw	0
  9808  002A3A  0100               	movlb	0	; () banked
  9809  002A3C  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9810                           
  9811                           ; BSR set to: 0
  9812  002A3E  0E00               	movlw	0
  9813  002A40  0100               	movlb	0	; () banked
  9814  002A42  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
  9815  002A44  0E00               	movlw	0
  9816  002A46  0100               	movlb	0	; () banked
  9817  002A48  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9818  002A4A  0E00               	movlw	0
  9819  002A4C  0100               	movlb	0	; () banked
  9820  002A4E  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9821                           
  9822                           ; BSR set to: 0
  9823  002A50  0E07               	movlw	7
  9824  002A52  0100               	movlb	0	; () banked
  9825  002A54  6F87               	movwf	___ftmul@cntr& (0+255),b
  9826  002A56                     l4864:
  9827                           
  9828                           ; BSR set to: 0
  9829  002A56  0100               	movlb	0	; () banked
  9830  002A58  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9831  002A5A  D00C               	goto	l4868
  9832                           
  9833                           ; BSR set to: 0
  9834  002A5C  0100               	movlb	0	; () banked
  9835  002A5E  5180               	movf	___ftmul@f2& (0+255),w,b
  9836  002A60  0100               	movlb	0	; () banked
  9837  002A62  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9838  002A64  0100               	movlb	0	; () banked
  9839  002A66  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9840  002A68  0100               	movlb	0	; () banked
  9841  002A6A  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9842  002A6C  0100               	movlb	0	; () banked
  9843  002A6E  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9844  002A70  0100               	movlb	0	; () banked
  9845  002A72  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9846  002A74                     l4868:
  9847                           
  9848                           ; BSR set to: 0
  9849  002A74  0100               	movlb	0	; () banked
  9850  002A76  90D8               	bcf	status,0,c
  9851  002A78  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9852  002A7A  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9853  002A7C  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9854  002A7E  0100               	movlb	0	; () banked
  9855  002A80  90D8               	bcf	status,0,c
  9856  002A82  3780               	rlcf	___ftmul@f2& (0+255),f,b
  9857  002A84  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9858  002A86  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9859                           
  9860                           ; BSR set to: 0
  9861  002A88  0100               	movlb	0	; () banked
  9862  002A8A  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9863  002A8C  D7E4               	goto	l4864
  9864                           
  9865                           ; BSR set to: 0
  9866                           
  9867                           ; BSR set to: 0
  9868  002A8E  0E09               	movlw	9
  9869  002A90  0100               	movlb	0	; () banked
  9870  002A92  6F87               	movwf	___ftmul@cntr& (0+255),b
  9871  002A94                     l4874:
  9872                           
  9873                           ; BSR set to: 0
  9874  002A94  0100               	movlb	0	; () banked
  9875  002A96  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9876  002A98  D00C               	goto	l4878
  9877                           
  9878                           ; BSR set to: 0
  9879  002A9A  0100               	movlb	0	; () banked
  9880  002A9C  5180               	movf	___ftmul@f2& (0+255),w,b
  9881  002A9E  0100               	movlb	0	; () banked
  9882  002AA0  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9883  002AA2  0100               	movlb	0	; () banked
  9884  002AA4  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9885  002AA6  0100               	movlb	0	; () banked
  9886  002AA8  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9887  002AAA  0100               	movlb	0	; () banked
  9888  002AAC  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9889  002AAE  0100               	movlb	0	; () banked
  9890  002AB0  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9891  002AB2                     l4878:
  9892                           
  9893                           ; BSR set to: 0
  9894  002AB2  0100               	movlb	0	; () banked
  9895  002AB4  90D8               	bcf	status,0,c
  9896  002AB6  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9897  002AB8  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9898  002ABA  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9899  002ABC  0100               	movlb	0	; () banked
  9900  002ABE  90D8               	bcf	status,0,c
  9901  002AC0  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9902  002AC2  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9903  002AC4  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9904                           
  9905                           ; BSR set to: 0
  9906  002AC6  0100               	movlb	0	; () banked
  9907  002AC8  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9908  002ACA  D7E4               	goto	l4874
  9909                           
  9910                           ; BSR set to: 0
  9911                           
  9912                           ; BSR set to: 0
  9913  002ACC  C084  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  9914  002AD0  C085  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9915  002AD4  C086  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9916  002AD8  C083  F074         	movff	___ftmul@exp,___ftpack@exp
  9917  002ADC  C088  F075         	movff	___ftmul@sign,___ftpack@sign
  9918  002AE0  EC44  F017         	call	___ftpack	;wreg free
  9919  002AE4  C071  F07D         	movff	?___ftpack,?___ftmul
  9920  002AE8  C072  F07E         	movff	?___ftpack+1,?___ftmul+1
  9921  002AEC  C073  F07F         	movff	?___ftpack+2,?___ftmul+2
  9922  002AF0  0012               	return	
  9923  002AF2                     __end_of___ftmul:
  9924                           	opt stack 0
  9925                           tblptru	equ	0xFF8
  9926                           tblptrh	equ	0xFF7
  9927                           tblptrl	equ	0xFF6
  9928                           tablat	equ	0xFF5
  9929                           prodh	equ	0xFF4
  9930                           prodl	equ	0xFF3
  9931                           indf0	equ	0xFEF
  9932                           postinc0	equ	0xFEE
  9933                           fsr0h	equ	0xFEA
  9934                           fsr0l	equ	0xFE9
  9935                           wreg	equ	0xFE8
  9936                           indf1	equ	0xFE7
  9937                           postdec1	equ	0xFE5
  9938                           fsr1h	equ	0xFE2
  9939                           fsr1l	equ	0xFE1
  9940                           indf2	equ	0xFDF
  9941                           postinc2	equ	0xFDE
  9942                           postdec2	equ	0xFDD
  9943                           fsr2h	equ	0xFDA
  9944                           fsr2l	equ	0xFD9
  9945                           status	equ	0xFD8
  9946                           
  9947 ;; *************** function ___awmod *****************
  9948 ;; Defined at:
  9949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  dividend        2   17[BANK0 ] int 
  9952 ;;  divisor         2   19[BANK0 ] int 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  sign            1   34[COMRAM] unsigned char 
  9955 ;;  counter         1   33[COMRAM] unsigned char 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  2   17[BANK0 ] int 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9965 ;;      Params:         0       4       0       0       0       0       0
  9966 ;;      Locals:         2       0       0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0
  9968 ;;      Totals:         2       4       0       0       0       0       0
  9969 ;;Total ram usage:        6 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:    3
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		_fround
  9976 ;;		_scale
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text37
  9981  003492                     __ptext37:
  9982                           	opt stack 0
  9983  003492                     ___awmod:
  9984                           	opt stack 23
  9985                           
  9986                           ;incstack = 0
  9987  003492  0E00               	movlw	0
  9988  003494  6E23               	movwf	___awmod@sign,c
  9989  003496  0100               	movlb	0	; () banked
  9990  003498  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9991  00349A  D007               	goto	l4938
  9992                           
  9993                           ; BSR set to: 0
  9994  00349C  0100               	movlb	0	; () banked
  9995  00349E  6D71               	negf	___awmod@dividend& (0+255),b
  9996  0034A0  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
  9997  0034A2  B0D8               	btfsc	status,0,c
  9998  0034A4  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
  9999                           
 10000                           ; BSR set to: 0
 10001  0034A6  0E01               	movlw	1
 10002  0034A8  6E23               	movwf	___awmod@sign,c
 10003  0034AA                     l4938:
 10004                           
 10005                           ; BSR set to: 0
 10006  0034AA  0100               	movlb	0	; () banked
 10007  0034AC  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10008  0034AE  D005               	goto	l4942
 10009                           
 10010                           ; BSR set to: 0
 10011  0034B0  0100               	movlb	0	; () banked
 10012  0034B2  6D73               	negf	___awmod@divisor& (0+255),b
 10013  0034B4  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10014  0034B6  B0D8               	btfsc	status,0,c
 10015  0034B8  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10016  0034BA                     l4942:
 10017                           
 10018                           ; BSR set to: 0
 10019  0034BA  0100               	movlb	0	; () banked
 10020  0034BC  5173               	movf	___awmod@divisor& (0+255),w,b
 10021  0034BE  0100               	movlb	0	; () banked
 10022  0034C0  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10023  0034C2  B4D8               	btfsc	status,2,c
 10024  0034C4  D023               	goto	l4958
 10025                           
 10026                           ; BSR set to: 0
 10027  0034C6  0E01               	movlw	1
 10028  0034C8  6E22               	movwf	___awmod@counter,c
 10029  0034CA  D005               	goto	l4948
 10030  0034CC                     l4946:
 10031                           
 10032                           ; BSR set to: 0
 10033  0034CC  0100               	movlb	0	; () banked
 10034  0034CE  90D8               	bcf	status,0,c
 10035  0034D0  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10036  0034D2  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10037  0034D4  2A22               	incf	___awmod@counter,f,c
 10038  0034D6                     l4948:
 10039                           
 10040                           ; BSR set to: 0
 10041  0034D6  0100               	movlb	0	; () banked
 10042  0034D8  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10043  0034DA  D7F8               	goto	l4946
 10044  0034DC                     l4950:
 10045                           
 10046                           ; BSR set to: 0
 10047  0034DC  0100               	movlb	0	; () banked
 10048  0034DE  5173               	movf	___awmod@divisor& (0+255),w,b
 10049  0034E0  0100               	movlb	0	; () banked
 10050  0034E2  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10051  0034E4  0100               	movlb	0	; () banked
 10052  0034E6  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10053  0034E8  0100               	movlb	0	; () banked
 10054  0034EA  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10055  0034EC  A0D8               	btfss	status,0,c
 10056  0034EE  D008               	goto	l4954
 10057                           
 10058                           ; BSR set to: 0
 10059  0034F0  0100               	movlb	0	; () banked
 10060  0034F2  5173               	movf	___awmod@divisor& (0+255),w,b
 10061  0034F4  0100               	movlb	0	; () banked
 10062  0034F6  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10063  0034F8  0100               	movlb	0	; () banked
 10064  0034FA  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10065  0034FC  0100               	movlb	0	; () banked
 10066  0034FE  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10067  003500                     l4954:
 10068                           
 10069                           ; BSR set to: 0
 10070  003500  0100               	movlb	0	; () banked
 10071  003502  90D8               	bcf	status,0,c
 10072  003504  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10073  003506  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10074                           
 10075                           ; BSR set to: 0
 10076  003508  2E22               	decfsz	___awmod@counter,f,c
 10077  00350A  D7E8               	goto	l4950
 10078  00350C                     l4958:
 10079                           
 10080                           ; BSR set to: 0
 10081  00350C  5023               	movf	___awmod@sign,w,c
 10082  00350E  B4D8               	btfsc	status,2,c
 10083  003510  D005               	goto	l4962
 10084                           
 10085                           ; BSR set to: 0
 10086  003512  0100               	movlb	0	; () banked
 10087  003514  6D71               	negf	___awmod@dividend& (0+255),b
 10088  003516  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10089  003518  B0D8               	btfsc	status,0,c
 10090  00351A  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10091  00351C                     l4962:
 10092                           
 10093                           ; BSR set to: 0
 10094  00351C  C071  F071         	movff	___awmod@dividend,?___awmod
 10095  003520  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10096  003524  0012               	return	
 10097  003526                     __end_of___awmod:
 10098                           	opt stack 0
 10099                           tblptru	equ	0xFF8
 10100                           tblptrh	equ	0xFF7
 10101                           tblptrl	equ	0xFF6
 10102                           tablat	equ	0xFF5
 10103                           prodh	equ	0xFF4
 10104                           prodl	equ	0xFF3
 10105                           indf0	equ	0xFEF
 10106                           postinc0	equ	0xFEE
 10107                           fsr0h	equ	0xFEA
 10108                           fsr0l	equ	0xFE9
 10109                           wreg	equ	0xFE8
 10110                           indf1	equ	0xFE7
 10111                           postdec1	equ	0xFE5
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function ___awdiv *****************
 10122 ;; Defined at:
 10123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  dividend        2   21[BANK0 ] int 
 10126 ;;  divisor         2   23[BANK0 ] int 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  quotient        2   37[COMRAM] int 
 10129 ;;  sign            1   36[COMRAM] unsigned char 
 10130 ;;  counter         1   35[COMRAM] unsigned char 
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  2   21[BANK0 ] int 
 10133 ;; Registers used:
 10134 ;;		wreg, status,2, status,0
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10140 ;;      Params:         0       4       0       0       0       0       0
 10141 ;;      Locals:         4       0       0       0       0       0       0
 10142 ;;      Temps:          0       0       0       0       0       0       0
 10143 ;;      Totals:         4       4       0       0       0       0       0
 10144 ;;Total ram usage:        8 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    3
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_fround
 10151 ;;		_scale
 10152 ;;		_sprintf
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text38
 10157  0033EC                     __ptext38:
 10158                           	opt stack 0
 10159  0033EC                     ___awdiv:
 10160                           	opt stack 23
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;incstack = 0
 10164  0033EC  0E00               	movlw	0
 10165  0033EE  6E25               	movwf	___awdiv@sign,c
 10166  0033F0  0100               	movlb	0	; () banked
 10167  0033F2  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10168  0033F4  D007               	goto	l4894
 10169                           
 10170                           ; BSR set to: 0
 10171  0033F6  0100               	movlb	0	; () banked
 10172  0033F8  6D77               	negf	___awdiv@divisor& (0+255),b
 10173  0033FA  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10174  0033FC  B0D8               	btfsc	status,0,c
 10175  0033FE  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10176                           
 10177                           ; BSR set to: 0
 10178  003400  0E01               	movlw	1
 10179  003402  6E25               	movwf	___awdiv@sign,c
 10180  003404                     l4894:
 10181                           
 10182                           ; BSR set to: 0
 10183  003404  0100               	movlb	0	; () banked
 10184  003406  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10185  003408  D007               	goto	l4900
 10186                           
 10187                           ; BSR set to: 0
 10188  00340A  0100               	movlb	0	; () banked
 10189  00340C  6D75               	negf	___awdiv@dividend& (0+255),b
 10190  00340E  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10191  003410  B0D8               	btfsc	status,0,c
 10192  003412  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10193                           
 10194                           ; BSR set to: 0
 10195  003414  0E01               	movlw	1
 10196  003416  1A25               	xorwf	___awdiv@sign,f,c
 10197  003418                     l4900:
 10198                           
 10199                           ; BSR set to: 0
 10200  003418  0E00               	movlw	0
 10201  00341A  6E27               	movwf	___awdiv@quotient+1,c
 10202  00341C  0E00               	movlw	0
 10203  00341E  6E26               	movwf	___awdiv@quotient,c
 10204                           
 10205                           ; BSR set to: 0
 10206  003420  0100               	movlb	0	; () banked
 10207  003422  5177               	movf	___awdiv@divisor& (0+255),w,b
 10208  003424  0100               	movlb	0	; () banked
 10209  003426  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10210  003428  B4D8               	btfsc	status,2,c
 10211  00342A  D027               	goto	l4922
 10212                           
 10213                           ; BSR set to: 0
 10214  00342C  0E01               	movlw	1
 10215  00342E  6E24               	movwf	___awdiv@counter,c
 10216  003430  D005               	goto	l4908
 10217  003432                     l4906:
 10218                           
 10219                           ; BSR set to: 0
 10220  003432  0100               	movlb	0	; () banked
 10221  003434  90D8               	bcf	status,0,c
 10222  003436  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 10223  003438  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10224  00343A  2A24               	incf	___awdiv@counter,f,c
 10225  00343C                     l4908:
 10226                           
 10227                           ; BSR set to: 0
 10228  00343C  0100               	movlb	0	; () banked
 10229  00343E  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10230  003440  D7F8               	goto	l4906
 10231  003442                     l4910:
 10232                           
 10233                           ; BSR set to: 0
 10234  003442  90D8               	bcf	status,0,c
 10235  003444  3626               	rlcf	___awdiv@quotient,f,c
 10236  003446  3627               	rlcf	___awdiv@quotient+1,f,c
 10237                           
 10238                           ; BSR set to: 0
 10239  003448  0100               	movlb	0	; () banked
 10240  00344A  5177               	movf	___awdiv@divisor& (0+255),w,b
 10241  00344C  0100               	movlb	0	; () banked
 10242  00344E  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 10243  003450  0100               	movlb	0	; () banked
 10244  003452  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10245  003454  0100               	movlb	0	; () banked
 10246  003456  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10247  003458  A0D8               	btfss	status,0,c
 10248  00345A  D009               	goto	l4918
 10249                           
 10250                           ; BSR set to: 0
 10251  00345C  0100               	movlb	0	; () banked
 10252  00345E  5177               	movf	___awdiv@divisor& (0+255),w,b
 10253  003460  0100               	movlb	0	; () banked
 10254  003462  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 10255  003464  0100               	movlb	0	; () banked
 10256  003466  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10257  003468  0100               	movlb	0	; () banked
 10258  00346A  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10259                           
 10260                           ; BSR set to: 0
 10261  00346C  8026               	bsf	___awdiv@quotient,0,c
 10262  00346E                     l4918:
 10263                           
 10264                           ; BSR set to: 0
 10265  00346E  0100               	movlb	0	; () banked
 10266  003470  90D8               	bcf	status,0,c
 10267  003472  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10268  003474  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 10269                           
 10270                           ; BSR set to: 0
 10271  003476  2E24               	decfsz	___awdiv@counter,f,c
 10272  003478  D7E4               	goto	l4910
 10273  00347A                     l4922:
 10274                           
 10275                           ; BSR set to: 0
 10276  00347A  5025               	movf	___awdiv@sign,w,c
 10277  00347C  B4D8               	btfsc	status,2,c
 10278  00347E  D004               	goto	l4926
 10279                           
 10280                           ; BSR set to: 0
 10281  003480  6C26               	negf	___awdiv@quotient,c
 10282  003482  1E27               	comf	___awdiv@quotient+1,f,c
 10283  003484  B0D8               	btfsc	status,0,c
 10284  003486  2A27               	incf	___awdiv@quotient+1,f,c
 10285  003488                     l4926:
 10286                           
 10287                           ; BSR set to: 0
 10288  003488  C026  F075         	movff	___awdiv@quotient,?___awdiv
 10289  00348C  C027  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 10290  003490  0012               	return	
 10291  003492                     __end_of___awdiv:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           indf0	equ	0xFEF
 10300                           postinc0	equ	0xFEE
 10301                           fsr0h	equ	0xFEA
 10302                           fsr0l	equ	0xFE9
 10303                           wreg	equ	0xFE8
 10304                           indf1	equ	0xFE7
 10305                           postdec1	equ	0xFE5
 10306                           fsr1h	equ	0xFE2
 10307                           fsr1l	equ	0xFE1
 10308                           indf2	equ	0xFDF
 10309                           postinc2	equ	0xFDE
 10310                           postdec2	equ	0xFDD
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function __tdiv_to_l_ *****************
 10316 ;; Defined at:
 10317 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  f1              3   17[BANK0 ] float 
 10320 ;;  f2              3   20[BANK0 ] float 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  quot            4   36[COMRAM] unsigned long 
 10323 ;;  exp1            1   41[COMRAM] unsigned char 
 10324 ;;  cntr            1   40[COMRAM] unsigned char 
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  4   17[BANK0 ] unsigned long 
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10334 ;;      Params:         0       6       0       0       0       0       0
 10335 ;;      Locals:         6       0       0       0       0       0       0
 10336 ;;      Temps:          3       0       0       0       0       0       0
 10337 ;;      Totals:         9       6       0       0       0       0       0
 10338 ;;Total ram usage:       15 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:    3
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_sprintf
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text39
 10349  0026DA                     __ptext39:
 10350                           	opt stack 0
 10351  0026DA                     __tdiv_to_l_:
 10352                           	opt stack 24
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;incstack = 0
 10356  0026DA  C073  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10357  0026DE  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10358  0026E0  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10359  0026E2  0100               	movlb	0	; () banked
 10360  0026E4  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10361  0026E6  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10362  0026E8  E301               	bnc	u5111
 10363  0026EA  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10364  0026EC                     u5111:
 10365  0026EC  5022               	movf	??__tdiv_to_l_,w,c
 10366  0026EE  6E2A               	movwf	__tdiv_to_l_@exp1,c
 10367  0026F0  502A               	movf	__tdiv_to_l_@exp1,w,c
 10368  0026F2  A4D8               	btfss	status,2,c
 10369  0026F4  D00A               	goto	l5114
 10370                           
 10371                           ; BSR set to: 0
 10372  0026F6  0E00               	movlw	0
 10373  0026F8  0100               	movlb	0	; () banked
 10374  0026FA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10375  0026FC  0E00               	movlw	0
 10376  0026FE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10377  002700  0E00               	movlw	0
 10378  002702  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10379  002704  0E00               	movlw	0
 10380  002706  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10381                           
 10382                           ; BSR set to: 0
 10383  002708  0012               	return	
 10384  00270A                     l5114:
 10385                           
 10386                           ; BSR set to: 0
 10387  00270A  C076  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10388  00270E  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10389  002710  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10390  002712  0100               	movlb	0	; () banked
 10391  002714  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10392  002716  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10393  002718  E301               	bnc	u5131
 10394  00271A  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10395  00271C                     u5131:
 10396  00271C  5022               	movf	??__tdiv_to_l_,w,c
 10397  00271E  6E29               	movwf	__tdiv_to_l_@cntr,c
 10398  002720  5029               	movf	__tdiv_to_l_@cntr,w,c
 10399  002722  A4D8               	btfss	status,2,c
 10400  002724  D00A               	goto	l5120
 10401                           
 10402                           ; BSR set to: 0
 10403  002726  0E00               	movlw	0
 10404  002728  0100               	movlb	0	; () banked
 10405  00272A  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10406  00272C  0E00               	movlw	0
 10407  00272E  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10408  002730  0E00               	movlw	0
 10409  002732  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10410  002734  0E00               	movlw	0
 10411  002736  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10412                           
 10413                           ; BSR set to: 0
 10414  002738  0012               	return	
 10415  00273A                     l5120:
 10416                           
 10417                           ; BSR set to: 0
 10418  00273A  0100               	movlb	0	; () banked
 10419  00273C  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10420                           
 10421                           ; BSR set to: 0
 10422  00273E  0EFF               	movlw	255
 10423  002740  0100               	movlb	0	; () banked
 10424  002742  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10425  002744  0EFF               	movlw	255
 10426  002746  0100               	movlb	0	; () banked
 10427  002748  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10428  00274A  0E00               	movlw	0
 10429  00274C  0100               	movlb	0	; () banked
 10430  00274E  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10431  002750  0100               	movlb	0	; () banked
 10432  002752  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10433                           
 10434                           ; BSR set to: 0
 10435  002754  0EFF               	movlw	255
 10436  002756  0100               	movlb	0	; () banked
 10437  002758  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10438  00275A  0EFF               	movlw	255
 10439  00275C  0100               	movlb	0	; () banked
 10440  00275E  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10441  002760  0E00               	movlw	0
 10442  002762  0100               	movlb	0	; () banked
 10443  002764  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10444                           
 10445                           ; BSR set to: 0
 10446  002766  0E00               	movlw	0
 10447  002768  6E25               	movwf	__tdiv_to_l_@quot,c
 10448  00276A  0E00               	movlw	0
 10449  00276C  6E26               	movwf	__tdiv_to_l_@quot+1,c
 10450  00276E  0E00               	movlw	0
 10451  002770  6E27               	movwf	__tdiv_to_l_@quot+2,c
 10452  002772  0E00               	movlw	0
 10453  002774  6E28               	movwf	__tdiv_to_l_@quot+3,c
 10454                           
 10455                           ; BSR set to: 0
 10456  002776  0E7F               	movlw	127
 10457  002778  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10458                           
 10459                           ; BSR set to: 0
 10460  00277A  5029               	movf	__tdiv_to_l_@cntr,w,c
 10461  00277C  0F98               	addlw	152
 10462  00277E  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10463                           
 10464                           ; BSR set to: 0
 10465  002780  0E18               	movlw	24
 10466  002782  6E29               	movwf	__tdiv_to_l_@cntr,c
 10467  002784                     l825:
 10468                           
 10469                           ; BSR set to: 0
 10470  002784  90D8               	bcf	status,0,c
 10471  002786  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10472  002788  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10473  00278A  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10474  00278C  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10475                           
 10476                           ; BSR set to: 0
 10477  00278E  0100               	movlb	0	; () banked
 10478  002790  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10479  002792  0100               	movlb	0	; () banked
 10480  002794  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10481  002796  0100               	movlb	0	; () banked
 10482  002798  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10483  00279A  0100               	movlb	0	; () banked
 10484  00279C  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10485  00279E  0100               	movlb	0	; () banked
 10486  0027A0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10487  0027A2  0100               	movlb	0	; () banked
 10488  0027A4  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10489  0027A6  A0D8               	btfss	status,0,c
 10490  0027A8  D00D               	goto	l826
 10491                           
 10492                           ; BSR set to: 0
 10493  0027AA  0100               	movlb	0	; () banked
 10494  0027AC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10495  0027AE  0100               	movlb	0	; () banked
 10496  0027B0  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10497  0027B2  0100               	movlb	0	; () banked
 10498  0027B4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10499  0027B6  0100               	movlb	0	; () banked
 10500  0027B8  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10501  0027BA  0100               	movlb	0	; () banked
 10502  0027BC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10503  0027BE  0100               	movlb	0	; () banked
 10504  0027C0  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10505                           
 10506                           ; BSR set to: 0
 10507  0027C2  8025               	bsf	__tdiv_to_l_@quot,0,c
 10508  0027C4                     l826:
 10509                           
 10510                           ; BSR set to: 0
 10511  0027C4  0100               	movlb	0	; () banked
 10512  0027C6  90D8               	bcf	status,0,c
 10513  0027C8  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10514  0027CA  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10515  0027CC  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10516                           
 10517                           ; BSR set to: 0
 10518  0027CE  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 10519  0027D0  D7D9               	goto	l825
 10520                           
 10521                           ; BSR set to: 0
 10522                           
 10523                           ; BSR set to: 0
 10524  0027D2  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 10525  0027D4  D017               	goto	l5154
 10526                           
 10527                           ; BSR set to: 0
 10528  0027D6  502A               	movf	__tdiv_to_l_@exp1,w,c
 10529  0027D8  0A80               	xorlw	128
 10530  0027DA  0F97               	addlw	151
 10531  0027DC  B0D8               	btfsc	status,0,c
 10532  0027DE  D00A               	goto	l5150
 10533                           
 10534                           ; BSR set to: 0
 10535  0027E0  0E00               	movlw	0
 10536  0027E2  0100               	movlb	0	; () banked
 10537  0027E4  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10538  0027E6  0E00               	movlw	0
 10539  0027E8  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10540  0027EA  0E00               	movlw	0
 10541  0027EC  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10542  0027EE  0E00               	movlw	0
 10543  0027F0  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10544                           
 10545                           ; BSR set to: 0
 10546  0027F2  0012               	return	
 10547  0027F4                     l5150:
 10548  0027F4  90D8               	bcf	status,0,c
 10549  0027F6  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 10550  0027F8  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 10551  0027FA  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 10552  0027FC  3225               	rrcf	__tdiv_to_l_@quot,f,c
 10553  0027FE  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 10554  002800  D7F9               	goto	l5150
 10555  002802  D016               	goto	l832
 10556  002804                     l5154:
 10557  002804  0E17               	movlw	23
 10558  002806  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 10559  002808  D010               	goto	l5162
 10560  00280A  0E00               	movlw	0
 10561  00280C  0100               	movlb	0	; () banked
 10562  00280E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10563  002810  0E00               	movlw	0
 10564  002812  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10565  002814  0E00               	movlw	0
 10566  002816  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10567  002818  0E00               	movlw	0
 10568  00281A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10569                           
 10570                           ; BSR set to: 0
 10571  00281C  0012               	return	
 10572  00281E                     l5160:
 10573  00281E  90D8               	bcf	status,0,c
 10574  002820  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10575  002822  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10576  002824  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10577  002826  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10578  002828  062A               	decf	__tdiv_to_l_@exp1,f,c
 10579  00282A                     l5162:
 10580  00282A  502A               	movf	__tdiv_to_l_@exp1,w,c
 10581  00282C  A4D8               	btfss	status,2,c
 10582  00282E  D7F7               	goto	l5160
 10583  002830                     l832:
 10584  002830  C025  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10585  002834  C026  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10586  002838  C027  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10587  00283C  C028  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10588  002840  0012               	return		;funcret
 10589  002842                     __end_of__tdiv_to_l_:
 10590                           	opt stack 0
 10591                           tblptru	equ	0xFF8
 10592                           tblptrh	equ	0xFF7
 10593                           tblptrl	equ	0xFF6
 10594                           tablat	equ	0xFF5
 10595                           prodh	equ	0xFF4
 10596                           prodl	equ	0xFF3
 10597                           indf0	equ	0xFEF
 10598                           postinc0	equ	0xFEE
 10599                           fsr0h	equ	0xFEA
 10600                           fsr0l	equ	0xFE9
 10601                           wreg	equ	0xFE8
 10602                           indf1	equ	0xFE7
 10603                           postdec1	equ	0xFE5
 10604                           fsr1h	equ	0xFE2
 10605                           fsr1l	equ	0xFE1
 10606                           indf2	equ	0xFDF
 10607                           postinc2	equ	0xFDE
 10608                           postdec2	equ	0xFDD
 10609                           fsr2h	equ	0xFDA
 10610                           fsr2l	equ	0xFD9
 10611                           status	equ	0xFD8
 10612                           
 10613 ;; *************** function __div_to_l_ *****************
 10614 ;; Defined at:
 10615 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  f1              3   17[BANK0 ] unsigned long 
 10618 ;;  f2              3   20[BANK0 ] unsigned long 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  quot            4   33[COMRAM] unsigned long 
 10621 ;;  exp1            1   38[COMRAM] unsigned char 
 10622 ;;  cntr            1   37[COMRAM] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  4   17[BANK0 ] unsigned long 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2, status,0
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10632 ;;      Params:         0       6       0       0       0       0       0
 10633 ;;      Locals:         6       0       0       0       0       0       0
 10634 ;;      Temps:          0       0       0       0       0       0       0
 10635 ;;      Totals:         6       6       0       0       0       0       0
 10636 ;;Total ram usage:       12 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    3
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_sprintf
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text40
 10647  002842                     __ptext40:
 10648                           	opt stack 0
 10649  002842                     __div_to_l_:
 10650                           	opt stack 24
 10651                           
 10652                           ;incstack = 0
 10653  002842  0100               	movlb	0	; () banked
 10654  002844  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10655  002846  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10656  002848  6E27               	movwf	__div_to_l_@exp1,c
 10657  00284A  5027               	movf	__div_to_l_@exp1,w,c
 10658  00284C  A4D8               	btfss	status,2,c
 10659  00284E  D00A               	goto	l5170
 10660                           
 10661                           ; BSR set to: 0
 10662  002850  0E00               	movlw	0
 10663  002852  0100               	movlb	0	; () banked
 10664  002854  6F71               	movwf	?__div_to_l_& (0+255),b
 10665  002856  0E00               	movlw	0
 10666  002858  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10667  00285A  0E00               	movlw	0
 10668  00285C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10669  00285E  0E00               	movlw	0
 10670  002860  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673  002862  0012               	return	
 10674  002864                     l5170:
 10675                           
 10676                           ; BSR set to: 0
 10677  002864  0100               	movlb	0	; () banked
 10678  002866  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10679  002868  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10680  00286A  6E26               	movwf	__div_to_l_@cntr,c
 10681  00286C  5026               	movf	__div_to_l_@cntr,w,c
 10682  00286E  A4D8               	btfss	status,2,c
 10683  002870  D00A               	goto	l5176
 10684                           
 10685                           ; BSR set to: 0
 10686  002872  0E00               	movlw	0
 10687  002874  0100               	movlb	0	; () banked
 10688  002876  6F71               	movwf	?__div_to_l_& (0+255),b
 10689  002878  0E00               	movlw	0
 10690  00287A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10691  00287C  0E00               	movlw	0
 10692  00287E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10693  002880  0E00               	movlw	0
 10694  002882  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10695                           
 10696                           ; BSR set to: 0
 10697  002884  0012               	return	
 10698  002886                     l5176:
 10699                           
 10700                           ; BSR set to: 0
 10701  002886  0100               	movlb	0	; () banked
 10702  002888  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10703                           
 10704                           ; BSR set to: 0
 10705  00288A  0EFF               	movlw	255
 10706  00288C  0100               	movlb	0	; () banked
 10707  00288E  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10708  002890  0EFF               	movlw	255
 10709  002892  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10710  002894  0EFF               	movlw	255
 10711  002896  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10712  002898  0E00               	movlw	0
 10713  00289A  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10714                           
 10715                           ; BSR set to: 0
 10716  00289C  0100               	movlb	0	; () banked
 10717  00289E  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10718  0028A0  0EFF               	movlw	255
 10719  0028A2  0100               	movlb	0	; () banked
 10720  0028A4  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10721  0028A6  0EFF               	movlw	255
 10722  0028A8  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10723  0028AA  0EFF               	movlw	255
 10724  0028AC  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10725  0028AE  0E00               	movlw	0
 10726  0028B0  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10727                           
 10728                           ; BSR set to: 0
 10729  0028B2  0E00               	movlw	0
 10730  0028B4  6E22               	movwf	__div_to_l_@quot,c
 10731  0028B6  0E00               	movlw	0
 10732  0028B8  6E23               	movwf	__div_to_l_@quot+1,c
 10733  0028BA  0E00               	movlw	0
 10734  0028BC  6E24               	movwf	__div_to_l_@quot+2,c
 10735  0028BE  0E00               	movlw	0
 10736  0028C0  6E25               	movwf	__div_to_l_@quot+3,c
 10737                           
 10738                           ; BSR set to: 0
 10739  0028C2  0E7F               	movlw	127
 10740  0028C4  5E27               	subwf	__div_to_l_@exp1,f,c
 10741                           
 10742                           ; BSR set to: 0
 10743  0028C6  5026               	movf	__div_to_l_@cntr,w,c
 10744  0028C8  0FA0               	addlw	160
 10745  0028CA  5E27               	subwf	__div_to_l_@exp1,f,c
 10746                           
 10747                           ; BSR set to: 0
 10748  0028CC  0E20               	movlw	32
 10749  0028CE  6E26               	movwf	__div_to_l_@cntr,c
 10750  0028D0                     l5190:
 10751                           
 10752                           ; BSR set to: 0
 10753  0028D0  90D8               	bcf	status,0,c
 10754  0028D2  3622               	rlcf	__div_to_l_@quot,f,c
 10755  0028D4  3623               	rlcf	__div_to_l_@quot+1,f,c
 10756  0028D6  3624               	rlcf	__div_to_l_@quot+2,f,c
 10757  0028D8  3625               	rlcf	__div_to_l_@quot+3,f,c
 10758                           
 10759                           ; BSR set to: 0
 10760  0028DA  0100               	movlb	0	; () banked
 10761  0028DC  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10762  0028DE  0100               	movlb	0	; () banked
 10763  0028E0  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10764  0028E2  0100               	movlb	0	; () banked
 10765  0028E4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10766  0028E6  0100               	movlb	0	; () banked
 10767  0028E8  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10768  0028EA  0100               	movlb	0	; () banked
 10769  0028EC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10770  0028EE  0100               	movlb	0	; () banked
 10771  0028F0  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10772  0028F2  0100               	movlb	0	; () banked
 10773  0028F4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10774  0028F6  0100               	movlb	0	; () banked
 10775  0028F8  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10776  0028FA  A0D8               	btfss	status,0,c
 10777  0028FC  D011               	goto	l5198
 10778                           
 10779                           ; BSR set to: 0
 10780  0028FE  0100               	movlb	0	; () banked
 10781  002900  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10782  002902  0100               	movlb	0	; () banked
 10783  002904  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10784  002906  0100               	movlb	0	; () banked
 10785  002908  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10786  00290A  0100               	movlb	0	; () banked
 10787  00290C  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10788  00290E  0100               	movlb	0	; () banked
 10789  002910  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10790  002912  0100               	movlb	0	; () banked
 10791  002914  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10792  002916  0100               	movlb	0	; () banked
 10793  002918  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10794  00291A  0100               	movlb	0	; () banked
 10795  00291C  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10796                           
 10797                           ; BSR set to: 0
 10798  00291E  8022               	bsf	__div_to_l_@quot,0,c
 10799  002920                     l5198:
 10800                           
 10801                           ; BSR set to: 0
 10802  002920  0100               	movlb	0	; () banked
 10803  002922  90D8               	bcf	status,0,c
 10804  002924  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10805  002926  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10806  002928  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10807  00292A  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10808                           
 10809                           ; BSR set to: 0
 10810  00292C  2E26               	decfsz	__div_to_l_@cntr,f,c
 10811  00292E  D7D0               	goto	l5190
 10812                           
 10813                           ; BSR set to: 0
 10814                           
 10815                           ; BSR set to: 0
 10816  002930  AE27               	btfss	__div_to_l_@exp1,7,c
 10817  002932  D017               	goto	l5214
 10818                           
 10819                           ; BSR set to: 0
 10820  002934  5027               	movf	__div_to_l_@exp1,w,c
 10821  002936  0A80               	xorlw	128
 10822  002938  0F9F               	addlw	159
 10823  00293A  B0D8               	btfsc	status,0,c
 10824  00293C  D00A               	goto	l5210
 10825                           
 10826                           ; BSR set to: 0
 10827  00293E  0E00               	movlw	0
 10828  002940  0100               	movlb	0	; () banked
 10829  002942  6F71               	movwf	?__div_to_l_& (0+255),b
 10830  002944  0E00               	movlw	0
 10831  002946  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10832  002948  0E00               	movlw	0
 10833  00294A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10834  00294C  0E00               	movlw	0
 10835  00294E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838  002950  0012               	return	
 10839  002952                     l5210:
 10840  002952  90D8               	bcf	status,0,c
 10841  002954  3225               	rrcf	__div_to_l_@quot+3,f,c
 10842  002956  3224               	rrcf	__div_to_l_@quot+2,f,c
 10843  002958  3223               	rrcf	__div_to_l_@quot+1,f,c
 10844  00295A  3222               	rrcf	__div_to_l_@quot,f,c
 10845  00295C  3E27               	incfsz	__div_to_l_@exp1,f,c
 10846  00295E  D7F9               	goto	l5210
 10847  002960  D016               	goto	l728
 10848  002962                     l5214:
 10849  002962  0E1F               	movlw	31
 10850  002964  6427               	cpfsgt	__div_to_l_@exp1,c
 10851  002966  D010               	goto	l5222
 10852  002968  0E00               	movlw	0
 10853  00296A  0100               	movlb	0	; () banked
 10854  00296C  6F71               	movwf	?__div_to_l_& (0+255),b
 10855  00296E  0E00               	movlw	0
 10856  002970  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10857  002972  0E00               	movlw	0
 10858  002974  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10859  002976  0E00               	movlw	0
 10860  002978  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10861                           
 10862                           ; BSR set to: 0
 10863  00297A  0012               	return	
 10864  00297C                     l5220:
 10865  00297C  90D8               	bcf	status,0,c
 10866  00297E  3622               	rlcf	__div_to_l_@quot,f,c
 10867  002980  3623               	rlcf	__div_to_l_@quot+1,f,c
 10868  002982  3624               	rlcf	__div_to_l_@quot+2,f,c
 10869  002984  3625               	rlcf	__div_to_l_@quot+3,f,c
 10870  002986  0627               	decf	__div_to_l_@exp1,f,c
 10871  002988                     l5222:
 10872  002988  5027               	movf	__div_to_l_@exp1,w,c
 10873  00298A  A4D8               	btfss	status,2,c
 10874  00298C  D7F7               	goto	l5220
 10875  00298E                     l728:
 10876  00298E  C022  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10877  002992  C023  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10878  002996  C024  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10879  00299A  C025  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10880  00299E  0012               	return		;funcret
 10881  0029A0                     __end_of__div_to_l_:
 10882                           	opt stack 0
 10883                           tblptru	equ	0xFF8
 10884                           tblptrh	equ	0xFF7
 10885                           tblptrl	equ	0xFF6
 10886                           tablat	equ	0xFF5
 10887                           prodh	equ	0xFF4
 10888                           prodl	equ	0xFF3
 10889                           indf0	equ	0xFEF
 10890                           postinc0	equ	0xFEE
 10891                           fsr0h	equ	0xFEA
 10892                           fsr0l	equ	0xFE9
 10893                           wreg	equ	0xFE8
 10894                           indf1	equ	0xFE7
 10895                           postdec1	equ	0xFE5
 10896                           fsr1h	equ	0xFE2
 10897                           fsr1l	equ	0xFE1
 10898                           indf2	equ	0xFDF
 10899                           postinc2	equ	0xFDE
 10900                           postdec2	equ	0xFDD
 10901                           fsr2h	equ	0xFDA
 10902                           fsr2l	equ	0xFD9
 10903                           status	equ	0xFD8
 10904                           
 10905 ;; *************** function ___lltoft *****************
 10906 ;; Defined at:
 10907 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  c               4   22[BANK0 ] unsigned long 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  exp             1   40[COMRAM] unsigned char 
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  3   22[BANK0 ] float 
 10914 ;; Registers used:
 10915 ;;		wreg, status,2, status,0, cstack
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10921 ;;      Params:         0       4       0       0       0       0       0
 10922 ;;      Locals:         1       0       0       0       0       0       0
 10923 ;;      Temps:          4       0       0       0       0       0       0
 10924 ;;      Totals:         5       4       0       0       0       0       0
 10925 ;;Total ram usage:        9 bytes
 10926 ;; Hardware stack levels used:    1
 10927 ;; Hardware stack levels required when called:    4
 10928 ;; This function calls:
 10929 ;;		___ftpack
 10930 ;; This function is called by:
 10931 ;;		_sprintf
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text41
 10936  0036B0                     __ptext41:
 10937                           	opt stack 0
 10938  0036B0                     ___lltoft:
 10939                           	opt stack 23
 10940                           
 10941                           ;incstack = 0
 10942  0036B0  0E8E               	movlw	142
 10943  0036B2  6E29               	movwf	___lltoft@exp,c
 10944  0036B4  D007               	goto	l5296
 10945  0036B6                     l5294:
 10946  0036B6  0100               	movlb	0	; () banked
 10947  0036B8  90D8               	bcf	status,0,c
 10948  0036BA  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10949  0036BC  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10950  0036BE  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10951  0036C0  3376               	rrcf	___lltoft@c& (0+255),f,b
 10952  0036C2  2A29               	incf	___lltoft@exp,f,c
 10953  0036C4                     l5296:
 10954  0036C4  0E00               	movlw	0
 10955  0036C6  0100               	movlb	0	; () banked
 10956  0036C8  1576               	andwf	___lltoft@c& (0+255),w,b
 10957  0036CA  6E25               	movwf	??___lltoft& (0+255),c
 10958  0036CC  0E00               	movlw	0
 10959  0036CE  0100               	movlb	0	; () banked
 10960  0036D0  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 10961  0036D2  6E26               	movwf	(??___lltoft+1)& (0+255),c
 10962  0036D4  0E00               	movlw	0
 10963  0036D6  0100               	movlb	0	; () banked
 10964  0036D8  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 10965  0036DA  6E27               	movwf	(??___lltoft+2)& (0+255),c
 10966  0036DC  0EFF               	movlw	255
 10967  0036DE  0100               	movlb	0	; () banked
 10968  0036E0  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 10969  0036E2  6E28               	movwf	(??___lltoft+3)& (0+255),c
 10970  0036E4  5025               	movf	??___lltoft,w,c
 10971  0036E6  1026               	iorwf	??___lltoft+1,w,c
 10972  0036E8  1027               	iorwf	??___lltoft+2,w,c
 10973  0036EA  1028               	iorwf	??___lltoft+3,w,c
 10974  0036EC  A4D8               	btfss	status,2,c
 10975  0036EE  D7E3               	goto	l5294
 10976                           
 10977                           ; BSR set to: 0
 10978                           
 10979                           ; BSR set to: 0
 10980  0036F0  C076  F071         	movff	___lltoft@c,___ftpack@arg
 10981  0036F4  C077  F072         	movff	___lltoft@c+1,___ftpack@arg+1
 10982  0036F8  C078  F073         	movff	___lltoft@c+2,___ftpack@arg+2
 10983  0036FC  C029  F074         	movff	___lltoft@exp,___ftpack@exp
 10984  003700  0E00               	movlw	0
 10985  003702  0100               	movlb	0	; () banked
 10986  003704  6F75               	movwf	___ftpack@sign& (0+255),b
 10987  003706  EC44  F017         	call	___ftpack	;wreg free
 10988  00370A  C071  F076         	movff	?___ftpack,?___lltoft
 10989  00370E  C072  F077         	movff	?___ftpack+1,?___lltoft+1
 10990  003712  C073  F078         	movff	?___ftpack+2,?___lltoft+2
 10991  003716  0012               	return	
 10992  003718                     __end_of___lltoft:
 10993                           	opt stack 0
 10994                           tblptru	equ	0xFF8
 10995                           tblptrh	equ	0xFF7
 10996                           tblptrl	equ	0xFF6
 10997                           tablat	equ	0xFF5
 10998                           prodh	equ	0xFF4
 10999                           prodl	equ	0xFF3
 11000                           indf0	equ	0xFEF
 11001                           postinc0	equ	0xFEE
 11002                           fsr0h	equ	0xFEA
 11003                           fsr0l	equ	0xFE9
 11004                           wreg	equ	0xFE8
 11005                           indf1	equ	0xFE7
 11006                           postdec1	equ	0xFE5
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           indf2	equ	0xFDF
 11010                           postinc2	equ	0xFDE
 11011                           postdec2	equ	0xFDD
 11012                           fsr2h	equ	0xFDA
 11013                           fsr2l	equ	0xFD9
 11014                           status	equ	0xFD8
 11015                           
 11016 ;; *************** function ___llmod *****************
 11017 ;; Defined at:
 11018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  dividend        4   25[BANK0 ] unsigned long 
 11021 ;;  divisor         4   29[BANK0 ] unsigned long 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  counter         1   38[COMRAM] unsigned char 
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  4   25[BANK0 ] unsigned long 
 11026 ;; Registers used:
 11027 ;;		wreg, status,2, status,0
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11033 ;;      Params:         0       8       0       0       0       0       0
 11034 ;;      Locals:         1       0       0       0       0       0       0
 11035 ;;      Temps:          0       0       0       0       0       0       0
 11036 ;;      Totals:         1       8       0       0       0       0       0
 11037 ;;Total ram usage:        9 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    3
 11040 ;; This function calls:
 11041 ;;		Nothing
 11042 ;; This function is called by:
 11043 ;;		_sprintf
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text42
 11048  003526                     __ptext42:
 11049                           	opt stack 0
 11050  003526                     ___llmod:
 11051                           	opt stack 24
 11052                           
 11053                           ;incstack = 0
 11054  003526  0100               	movlb	0	; () banked
 11055  003528  517D               	movf	___llmod@divisor& (0+255),w,b
 11056  00352A  0100               	movlb	0	; () banked
 11057  00352C  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11058  00352E  0100               	movlb	0	; () banked
 11059  003530  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11060  003532  0100               	movlb	0	; () banked
 11061  003534  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11062  003536  B4D8               	btfsc	status,2,c
 11063  003538  D037               	goto	l917
 11064                           
 11065                           ; BSR set to: 0
 11066  00353A  0E01               	movlw	1
 11067  00353C  6E27               	movwf	___llmod@counter,c
 11068  00353E  D007               	goto	l5282
 11069  003540                     l5280:
 11070                           
 11071                           ; BSR set to: 0
 11072  003540  0100               	movlb	0	; () banked
 11073  003542  90D8               	bcf	status,0,c
 11074  003544  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11075  003546  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11076  003548  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11077  00354A  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11078  00354C  2A27               	incf	___llmod@counter,f,c
 11079  00354E                     l5282:
 11080                           
 11081                           ; BSR set to: 0
 11082  00354E  0100               	movlb	0	; () banked
 11083  003550  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11084  003552  D7F6               	goto	l5280
 11085  003554                     l5284:
 11086                           
 11087                           ; BSR set to: 0
 11088  003554  0100               	movlb	0	; () banked
 11089  003556  517D               	movf	___llmod@divisor& (0+255),w,b
 11090  003558  0100               	movlb	0	; () banked
 11091  00355A  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11092  00355C  0100               	movlb	0	; () banked
 11093  00355E  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11094  003560  0100               	movlb	0	; () banked
 11095  003562  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11096  003564  0100               	movlb	0	; () banked
 11097  003566  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11098  003568  0100               	movlb	0	; () banked
 11099  00356A  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11100  00356C  0100               	movlb	0	; () banked
 11101  00356E  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11102  003570  0100               	movlb	0	; () banked
 11103  003572  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11104  003574  A0D8               	btfss	status,0,c
 11105  003576  D010               	goto	l5288
 11106                           
 11107                           ; BSR set to: 0
 11108  003578  0100               	movlb	0	; () banked
 11109  00357A  517D               	movf	___llmod@divisor& (0+255),w,b
 11110  00357C  0100               	movlb	0	; () banked
 11111  00357E  5F79               	subwf	___llmod@dividend& (0+255),f,b
 11112  003580  0100               	movlb	0	; () banked
 11113  003582  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11114  003584  0100               	movlb	0	; () banked
 11115  003586  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11116  003588  0100               	movlb	0	; () banked
 11117  00358A  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11118  00358C  0100               	movlb	0	; () banked
 11119  00358E  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11120  003590  0100               	movlb	0	; () banked
 11121  003592  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11122  003594  0100               	movlb	0	; () banked
 11123  003596  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11124  003598                     l5288:
 11125                           
 11126                           ; BSR set to: 0
 11127  003598  0100               	movlb	0	; () banked
 11128  00359A  90D8               	bcf	status,0,c
 11129  00359C  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11130  00359E  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11131  0035A0  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11132  0035A2  337D               	rrcf	___llmod@divisor& (0+255),f,b
 11133                           
 11134                           ; BSR set to: 0
 11135  0035A4  2E27               	decfsz	___llmod@counter,f,c
 11136  0035A6  D7D6               	goto	l5284
 11137  0035A8                     l917:
 11138                           
 11139                           ; BSR set to: 0
 11140  0035A8  C079  F079         	movff	___llmod@dividend,?___llmod
 11141  0035AC  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 11142  0035B0  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 11143  0035B4  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 11144                           
 11145                           ; BSR set to: 0
 11146  0035B8  0012               	return		;funcret
 11147  0035BA                     __end_of___llmod:
 11148                           	opt stack 0
 11149                           tblptru	equ	0xFF8
 11150                           tblptrh	equ	0xFF7
 11151                           tblptrl	equ	0xFF6
 11152                           tablat	equ	0xFF5
 11153                           prodh	equ	0xFF4
 11154                           prodl	equ	0xFF3
 11155                           indf0	equ	0xFEF
 11156                           postinc0	equ	0xFEE
 11157                           fsr0h	equ	0xFEA
 11158                           fsr0l	equ	0xFE9
 11159                           wreg	equ	0xFE8
 11160                           indf1	equ	0xFE7
 11161                           postdec1	equ	0xFE5
 11162                           fsr1h	equ	0xFE2
 11163                           fsr1l	equ	0xFE1
 11164                           indf2	equ	0xFDF
 11165                           postinc2	equ	0xFDE
 11166                           postdec2	equ	0xFDD
 11167                           fsr2h	equ	0xFDA
 11168                           fsr2l	equ	0xFD9
 11169                           status	equ	0xFD8
 11170                           
 11171 ;; *************** function ___lldiv *****************
 11172 ;; Defined at:
 11173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  dividend        4   17[BANK0 ] unsigned long 
 11176 ;;  divisor         4   21[BANK0 ] unsigned long 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  quotient        4   33[COMRAM] unsigned long 
 11179 ;;  counter         1   37[COMRAM] unsigned char 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  4   17[BANK0 ] unsigned long 
 11182 ;; Registers used:
 11183 ;;		wreg, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11189 ;;      Params:         0       8       0       0       0       0       0
 11190 ;;      Locals:         5       0       0       0       0       0       0
 11191 ;;      Temps:          0       0       0       0       0       0       0
 11192 ;;      Totals:         5       8       0       0       0       0       0
 11193 ;;Total ram usage:       13 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; Hardware stack levels required when called:    3
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_sprintf
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text43
 11204  00333C                     __ptext43:
 11205                           	opt stack 0
 11206  00333C                     ___lldiv:
 11207                           	opt stack 24
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;incstack = 0
 11211  00333C  0E00               	movlw	0
 11212  00333E  6E22               	movwf	___lldiv@quotient,c
 11213  003340  0E00               	movlw	0
 11214  003342  6E23               	movwf	___lldiv@quotient+1,c
 11215  003344  0E00               	movlw	0
 11216  003346  6E24               	movwf	___lldiv@quotient+2,c
 11217  003348  0E00               	movlw	0
 11218  00334A  6E25               	movwf	___lldiv@quotient+3,c
 11219  00334C  0100               	movlb	0	; () banked
 11220  00334E  5175               	movf	___lldiv@divisor& (0+255),w,b
 11221  003350  0100               	movlb	0	; () banked
 11222  003352  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11223  003354  0100               	movlb	0	; () banked
 11224  003356  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11225  003358  0100               	movlb	0	; () banked
 11226  00335A  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11227  00335C  B4D8               	btfsc	status,2,c
 11228  00335E  D03D               	goto	l907
 11229                           
 11230                           ; BSR set to: 0
 11231  003360  0E01               	movlw	1
 11232  003362  6E26               	movwf	___lldiv@counter,c
 11233  003364  D007               	goto	l5262
 11234  003366                     l5260:
 11235                           
 11236                           ; BSR set to: 0
 11237  003366  0100               	movlb	0	; () banked
 11238  003368  90D8               	bcf	status,0,c
 11239  00336A  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11240  00336C  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11241  00336E  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11242  003370  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11243  003372  2A26               	incf	___lldiv@counter,f,c
 11244  003374                     l5262:
 11245                           
 11246                           ; BSR set to: 0
 11247  003374  0100               	movlb	0	; () banked
 11248  003376  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11249  003378  D7F6               	goto	l5260
 11250  00337A                     l5264:
 11251                           
 11252                           ; BSR set to: 0
 11253  00337A  90D8               	bcf	status,0,c
 11254  00337C  3622               	rlcf	___lldiv@quotient,f,c
 11255  00337E  3623               	rlcf	___lldiv@quotient+1,f,c
 11256  003380  3624               	rlcf	___lldiv@quotient+2,f,c
 11257  003382  3625               	rlcf	___lldiv@quotient+3,f,c
 11258                           
 11259                           ; BSR set to: 0
 11260  003384  0100               	movlb	0	; () banked
 11261  003386  5175               	movf	___lldiv@divisor& (0+255),w,b
 11262  003388  0100               	movlb	0	; () banked
 11263  00338A  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11264  00338C  0100               	movlb	0	; () banked
 11265  00338E  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11266  003390  0100               	movlb	0	; () banked
 11267  003392  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11268  003394  0100               	movlb	0	; () banked
 11269  003396  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11270  003398  0100               	movlb	0	; () banked
 11271  00339A  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11272  00339C  0100               	movlb	0	; () banked
 11273  00339E  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11274  0033A0  0100               	movlb	0	; () banked
 11275  0033A2  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11276  0033A4  A0D8               	btfss	status,0,c
 11277  0033A6  D011               	goto	l5272
 11278                           
 11279                           ; BSR set to: 0
 11280  0033A8  0100               	movlb	0	; () banked
 11281  0033AA  5175               	movf	___lldiv@divisor& (0+255),w,b
 11282  0033AC  0100               	movlb	0	; () banked
 11283  0033AE  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11284  0033B0  0100               	movlb	0	; () banked
 11285  0033B2  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11286  0033B4  0100               	movlb	0	; () banked
 11287  0033B6  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11288  0033B8  0100               	movlb	0	; () banked
 11289  0033BA  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11290  0033BC  0100               	movlb	0	; () banked
 11291  0033BE  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11292  0033C0  0100               	movlb	0	; () banked
 11293  0033C2  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11294  0033C4  0100               	movlb	0	; () banked
 11295  0033C6  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11296                           
 11297                           ; BSR set to: 0
 11298  0033C8  8022               	bsf	___lldiv@quotient,0,c
 11299  0033CA                     l5272:
 11300                           
 11301                           ; BSR set to: 0
 11302  0033CA  0100               	movlb	0	; () banked
 11303  0033CC  90D8               	bcf	status,0,c
 11304  0033CE  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11305  0033D0  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11306  0033D2  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11307  0033D4  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11308                           
 11309                           ; BSR set to: 0
 11310  0033D6  2E26               	decfsz	___lldiv@counter,f,c
 11311  0033D8  D7D0               	goto	l5264
 11312  0033DA                     l907:
 11313                           
 11314                           ; BSR set to: 0
 11315  0033DA  C022  F071         	movff	___lldiv@quotient,?___lldiv
 11316  0033DE  C023  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11317  0033E2  C024  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11318  0033E6  C025  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11319                           
 11320                           ; BSR set to: 0
 11321  0033EA  0012               	return		;funcret
 11322  0033EC                     __end_of___lldiv:
 11323                           	opt stack 0
 11324                           tblptru	equ	0xFF8
 11325                           tblptrh	equ	0xFF7
 11326                           tblptrl	equ	0xFF6
 11327                           tablat	equ	0xFF5
 11328                           prodh	equ	0xFF4
 11329                           prodl	equ	0xFF3
 11330                           indf0	equ	0xFEF
 11331                           postinc0	equ	0xFEE
 11332                           fsr0h	equ	0xFEA
 11333                           fsr0l	equ	0xFE9
 11334                           wreg	equ	0xFE8
 11335                           indf1	equ	0xFE7
 11336                           postdec1	equ	0xFE5
 11337                           fsr1h	equ	0xFE2
 11338                           fsr1l	equ	0xFE1
 11339                           indf2	equ	0xFDF
 11340                           postinc2	equ	0xFDE
 11341                           postdec2	equ	0xFDD
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function ___fttol *****************
 11347 ;; Defined at:
 11348 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  f1              3   48[BANK0 ] float 
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;  lval            4   58[BANK0 ] unsigned long 
 11353 ;;  exp1            1   62[BANK0 ] unsigned char 
 11354 ;;  sign1           1   57[BANK0 ] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  4   48[BANK0 ] long 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11364 ;;      Params:         0       4       0       0       0       0       0
 11365 ;;      Locals:         0       6       0       0       0       0       0
 11366 ;;      Temps:          0       5       0       0       0       0       0
 11367 ;;      Totals:         0      15       0       0       0       0       0
 11368 ;;Total ram usage:       15 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    3
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_util_getSolarCurrent
 11375 ;;		_util_getBatteryCurrent
 11376 ;;		_sprintf
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text44
 11381  002AF2                     __ptext44:
 11382                           	opt stack 0
 11383  002AF2                     ___fttol:
 11384                           	opt stack 25
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;incstack = 0
 11388  002AF2  C092  F094         	movff	___fttol@f1+2,??___fttol
 11389  002AF6  0100               	movlb	0	; () banked
 11390  002AF8  6B95               	clrf	(??___fttol+1)& (0+255),b
 11391  002AFA  6B96               	clrf	(??___fttol+2)& (0+255),b
 11392  002AFC  0100               	movlb	0	; () banked
 11393  002AFE  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11394  002B00  0100               	movlb	0	; () banked
 11395  002B02  3794               	rlcf	??___fttol& (0+255),f,b
 11396  002B04  E301               	bnc	u3121
 11397  002B06  8195               	bsf	(??___fttol+1)& (0+255),0,b
 11398  002B08                     u3121:
 11399  002B08  0100               	movlb	0	; () banked
 11400  002B0A  5194               	movf	??___fttol& (0+255),w,b
 11401  002B0C  0100               	movlb	0	; () banked
 11402  002B0E  6F9E               	movwf	___fttol@exp1& (0+255),b
 11403  002B10  0100               	movlb	0	; () banked
 11404  002B12  519E               	movf	___fttol@exp1& (0+255),w,b
 11405  002B14  A4D8               	btfss	status,2,c
 11406  002B16  D00A               	goto	l3536
 11407                           
 11408                           ; BSR set to: 0
 11409  002B18  0E00               	movlw	0
 11410  002B1A  0100               	movlb	0	; () banked
 11411  002B1C  6F90               	movwf	?___fttol& (0+255),b
 11412  002B1E  0E00               	movlw	0
 11413  002B20  6F91               	movwf	(?___fttol+1)& (0+255),b
 11414  002B22  0E00               	movlw	0
 11415  002B24  6F92               	movwf	(?___fttol+2)& (0+255),b
 11416  002B26  0E00               	movlw	0
 11417  002B28  6F93               	movwf	(?___fttol+3)& (0+255),b
 11418                           
 11419                           ; BSR set to: 0
 11420  002B2A  0012               	return	
 11421  002B2C                     l3536:
 11422                           
 11423                           ; BSR set to: 0
 11424  002B2C  0E17               	movlw	23
 11425  002B2E  0100               	movlb	0	; () banked
 11426  002B30  6F94               	movwf	??___fttol& (0+255),b
 11427  002B32  C090  F095         	movff	___fttol@f1,??___fttol+1
 11428  002B36  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 11429  002B3A  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 11430  002B3E  0100               	movlb	0	; () banked
 11431  002B40  2994               	incf	??___fttol& (0+255),w,b
 11432  002B42  0100               	movlb	0	; () banked
 11433  002B44  6F98               	movwf	(??___fttol+4)& (0+255),b
 11434  002B46  D005               	goto	u3140
 11435  002B48                     u3145:
 11436  002B48  0100               	movlb	0	; () banked
 11437  002B4A  90D8               	bcf	status,0,c
 11438  002B4C  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 11439  002B4E  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 11440  002B50  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 11441  002B52                     u3140:
 11442  002B52  0100               	movlb	0	; () banked
 11443  002B54  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 11444  002B56  D7F8               	goto	u3145
 11445  002B58  0100               	movlb	0	; () banked
 11446  002B5A  5195               	movf	(??___fttol+1)& (0+255),w,b
 11447  002B5C  0100               	movlb	0	; () banked
 11448  002B5E  6F99               	movwf	___fttol@sign1& (0+255),b
 11449                           
 11450                           ; BSR set to: 0
 11451  002B60  0100               	movlb	0	; () banked
 11452  002B62  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 11453                           
 11454                           ; BSR set to: 0
 11455  002B64  0EFF               	movlw	255
 11456  002B66  0100               	movlb	0	; () banked
 11457  002B68  1790               	andwf	___fttol@f1& (0+255),f,b
 11458  002B6A  0EFF               	movlw	255
 11459  002B6C  0100               	movlb	0	; () banked
 11460  002B6E  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 11461  002B70  0E00               	movlw	0
 11462  002B72  0100               	movlb	0	; () banked
 11463  002B74  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 11464                           
 11465                           ; BSR set to: 0
 11466  002B76  0100               	movlb	0	; () banked
 11467  002B78  5190               	movf	___fttol@f1& (0+255),w,b
 11468  002B7A  0100               	movlb	0	; () banked
 11469  002B7C  6F9A               	movwf	___fttol@lval& (0+255),b
 11470  002B7E  0100               	movlb	0	; () banked
 11471  002B80  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 11472  002B82  0100               	movlb	0	; () banked
 11473  002B84  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 11474  002B86  0100               	movlb	0	; () banked
 11475  002B88  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 11476  002B8A  0100               	movlb	0	; () banked
 11477  002B8C  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 11478  002B8E  0100               	movlb	0	; () banked
 11479  002B90  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 11480                           
 11481                           ; BSR set to: 0
 11482  002B92  0E8E               	movlw	142
 11483  002B94  0100               	movlb	0	; () banked
 11484  002B96  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 11485                           
 11486                           ; BSR set to: 0
 11487  002B98  0100               	movlb	0	; () banked
 11488  002B9A  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 11489  002B9C  D01A               	goto	l3558
 11490                           
 11491                           ; BSR set to: 0
 11492  002B9E  0100               	movlb	0	; () banked
 11493  002BA0  519E               	movf	___fttol@exp1& (0+255),w,b
 11494  002BA2  0A80               	xorlw	128
 11495  002BA4  0F8F               	addlw	143
 11496  002BA6  B0D8               	btfsc	status,0,c
 11497  002BA8  D00A               	goto	l3554
 11498                           
 11499                           ; BSR set to: 0
 11500  002BAA  0E00               	movlw	0
 11501  002BAC  0100               	movlb	0	; () banked
 11502  002BAE  6F90               	movwf	?___fttol& (0+255),b
 11503  002BB0  0E00               	movlw	0
 11504  002BB2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11505  002BB4  0E00               	movlw	0
 11506  002BB6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11507  002BB8  0E00               	movlw	0
 11508  002BBA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11509                           
 11510                           ; BSR set to: 0
 11511  002BBC  0012               	return	
 11512  002BBE                     l3554:
 11513                           
 11514                           ; BSR set to: 0
 11515  002BBE  0100               	movlb	0	; () banked
 11516  002BC0  90D8               	bcf	status,0,c
 11517  002BC2  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11518  002BC4  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11519  002BC6  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11520  002BC8  339A               	rrcf	___fttol@lval& (0+255),f,b
 11521                           
 11522                           ; BSR set to: 0
 11523  002BCA  0100               	movlb	0	; () banked
 11524  002BCC  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 11525  002BCE  D7F7               	goto	l3554
 11526                           
 11527                           ; BSR set to: 0
 11528  002BD0  D01B               	goto	l3568
 11529  002BD2                     l3558:
 11530                           
 11531                           ; BSR set to: 0
 11532  002BD2  0E17               	movlw	23
 11533  002BD4  0100               	movlb	0	; () banked
 11534  002BD6  659E               	cpfsgt	___fttol@exp1& (0+255),b
 11535  002BD8  D012               	goto	l3566
 11536                           
 11537                           ; BSR set to: 0
 11538  002BDA  0E00               	movlw	0
 11539  002BDC  0100               	movlb	0	; () banked
 11540  002BDE  6F90               	movwf	?___fttol& (0+255),b
 11541  002BE0  0E00               	movlw	0
 11542  002BE2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11543  002BE4  0E00               	movlw	0
 11544  002BE6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11545  002BE8  0E00               	movlw	0
 11546  002BEA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11547                           
 11548                           ; BSR set to: 0
 11549  002BEC  0012               	return	
 11550  002BEE                     l3564:
 11551                           
 11552                           ; BSR set to: 0
 11553  002BEE  0100               	movlb	0	; () banked
 11554  002BF0  90D8               	bcf	status,0,c
 11555  002BF2  379A               	rlcf	___fttol@lval& (0+255),f,b
 11556  002BF4  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11557  002BF6  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11558  002BF8  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11559  002BFA  0100               	movlb	0	; () banked
 11560  002BFC  079E               	decf	___fttol@exp1& (0+255),f,b
 11561  002BFE                     l3566:
 11562                           
 11563                           ; BSR set to: 0
 11564  002BFE  0100               	movlb	0	; () banked
 11565  002C00  519E               	movf	___fttol@exp1& (0+255),w,b
 11566  002C02  0100               	movlb	0	; () banked
 11567  002C04  A4D8               	btfss	status,2,c
 11568  002C06  D7F3               	goto	l3564
 11569  002C08                     l3568:
 11570                           
 11571                           ; BSR set to: 0
 11572  002C08  0100               	movlb	0	; () banked
 11573  002C0A  5199               	movf	___fttol@sign1& (0+255),w,b
 11574  002C0C  0100               	movlb	0	; () banked
 11575  002C0E  B4D8               	btfsc	status,2,c
 11576  002C10  D009               	goto	l3572
 11577                           
 11578                           ; BSR set to: 0
 11579  002C12  0100               	movlb	0	; () banked
 11580  002C14  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 11581  002C16  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 11582  002C18  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 11583  002C1A  6D9A               	negf	___fttol@lval& (0+255),b
 11584  002C1C  0E00               	movlw	0
 11585  002C1E  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11586  002C20  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11587  002C22  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11588  002C24                     l3572:
 11589                           
 11590                           ; BSR set to: 0
 11591  002C24  C09A  F090         	movff	___fttol@lval,?___fttol
 11592  002C28  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 11593  002C2C  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 11594  002C30  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 11595  002C34  0012               	return	
 11596  002C36                     __end_of___fttol:
 11597                           	opt stack 0
 11598                           tblptru	equ	0xFF8
 11599                           tblptrh	equ	0xFF7
 11600                           tblptrl	equ	0xFF6
 11601                           tablat	equ	0xFF5
 11602                           prodh	equ	0xFF4
 11603                           prodl	equ	0xFF3
 11604                           indf0	equ	0xFEF
 11605                           postinc0	equ	0xFEE
 11606                           fsr0h	equ	0xFEA
 11607                           fsr0l	equ	0xFE9
 11608                           wreg	equ	0xFE8
 11609                           indf1	equ	0xFE7
 11610                           postdec1	equ	0xFE5
 11611                           fsr1h	equ	0xFE2
 11612                           fsr1l	equ	0xFE1
 11613                           indf2	equ	0xFDF
 11614                           postinc2	equ	0xFDE
 11615                           postdec2	equ	0xFDD
 11616                           fsr2h	equ	0xFDA
 11617                           fsr2l	equ	0xFD9
 11618                           status	equ	0xFD8
 11619                           
 11620 ;; *************** function ___ftsub *****************
 11621 ;; Defined at:
 11622 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  f1              3   63[BANK0 ] float 
 11625 ;;  f2              3   66[BANK0 ] float 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  3   63[BANK0 ] float 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, status,0, cstack
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11637 ;;      Params:         0       6       0       0       0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0
 11640 ;;      Totals:         0       6       0       0       0       0       0
 11641 ;;Total ram usage:        6 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:    5
 11644 ;; This function calls:
 11645 ;;		___ftadd
 11646 ;; This function is called by:
 11647 ;;		_sprintf
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text45
 11652  003826                     __ptext45:
 11653                           	opt stack 0
 11654  003826                     ___ftsub:
 11655                           	opt stack 22
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;incstack = 0
 11659  003826  0100               	movlb	0	; () banked
 11660  003828  51A2               	movf	___ftsub@f2& (0+255),w,b
 11661  00382A  0100               	movlb	0	; () banked
 11662  00382C  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11663  00382E  0100               	movlb	0	; () banked
 11664  003830  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11665  003832  B4D8               	btfsc	status,2,c
 11666  003834  D009               	goto	l5228
 11667                           
 11668                           ; BSR set to: 0
 11669  003836  0E00               	movlw	0
 11670  003838  0100               	movlb	0	; () banked
 11671  00383A  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 11672  00383C  0E00               	movlw	0
 11673  00383E  0100               	movlb	0	; () banked
 11674  003840  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11675  003842  0E80               	movlw	128
 11676  003844  0100               	movlb	0	; () banked
 11677  003846  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11678  003848                     l5228:
 11679                           
 11680                           ; BSR set to: 0
 11681  003848  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 11682  00384C  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 11683  003850  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 11684  003854  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 11685  003858  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 11686  00385C  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 11687  003860  EC9A  F00F         	call	___ftadd	;wreg free
 11688  003864  C093  F09F         	movff	?___ftadd,?___ftsub
 11689  003868  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 11690  00386C  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 11691  003870  0012               	return	
 11692  003872                     __end_of___ftsub:
 11693                           	opt stack 0
 11694                           tblptru	equ	0xFF8
 11695                           tblptrh	equ	0xFF7
 11696                           tblptrl	equ	0xFF6
 11697                           tablat	equ	0xFF5
 11698                           prodh	equ	0xFF4
 11699                           prodl	equ	0xFF3
 11700                           indf0	equ	0xFEF
 11701                           postinc0	equ	0xFEE
 11702                           fsr0h	equ	0xFEA
 11703                           fsr0l	equ	0xFE9
 11704                           wreg	equ	0xFE8
 11705                           indf1	equ	0xFE7
 11706                           postdec1	equ	0xFE5
 11707                           fsr1h	equ	0xFE2
 11708                           fsr1l	equ	0xFE1
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           postdec2	equ	0xFDD
 11712                           fsr2h	equ	0xFDA
 11713                           fsr2l	equ	0xFD9
 11714                           status	equ	0xFD8
 11715                           
 11716 ;; *************** function ___ftadd *****************
 11717 ;; Defined at:
 11718 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  f1              3   51[BANK0 ] float 
 11721 ;;  f2              3   54[BANK0 ] float 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;  exp1            1   62[BANK0 ] unsigned char 
 11724 ;;  exp2            1   61[BANK0 ] unsigned char 
 11725 ;;  sign            1   60[BANK0 ] unsigned char 
 11726 ;; Return value:  Size  Location     Type
 11727 ;;                  3   51[BANK0 ] float 
 11728 ;; Registers used:
 11729 ;;		wreg, status,2, status,0, cstack
 11730 ;; Tracked objects:
 11731 ;;		On entry : 0/0
 11732 ;;		On exit  : 0/0
 11733 ;;		Unchanged: 0/0
 11734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11735 ;;      Params:         0       6       0       0       0       0       0
 11736 ;;      Locals:         0       3       0       0       0       0       0
 11737 ;;      Temps:          0       3       0       0       0       0       0
 11738 ;;      Totals:         0      12       0       0       0       0       0
 11739 ;;Total ram usage:       12 bytes
 11740 ;; Hardware stack levels used:    1
 11741 ;; Hardware stack levels required when called:    4
 11742 ;; This function calls:
 11743 ;;		___ftpack
 11744 ;; This function is called by:
 11745 ;;		_util_getTemperature
 11746 ;;		_sprintf
 11747 ;;		___ftsub
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           	psect	text46
 11752  001F34                     __ptext46:
 11753                           	opt stack 0
 11754  001F34                     ___ftadd:
 11755                           	opt stack 24
 11756                           
 11757                           ;incstack = 0
 11758  001F34  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 11759  001F38  0100               	movlb	0	; () banked
 11760  001F3A  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11761  001F3C  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11762  001F3E  0100               	movlb	0	; () banked
 11763  001F40  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11764  001F42  0100               	movlb	0	; () banked
 11765  001F44  3799               	rlcf	??___ftadd& (0+255),f,b
 11766  001F46  E301               	bnc	u4571
 11767  001F48  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11768  001F4A                     u4571:
 11769  001F4A  0100               	movlb	0	; () banked
 11770  001F4C  5199               	movf	??___ftadd& (0+255),w,b
 11771  001F4E  0100               	movlb	0	; () banked
 11772  001F50  6F9E               	movwf	___ftadd@exp1& (0+255),b
 11773  001F52  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 11774  001F56  0100               	movlb	0	; () banked
 11775  001F58  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11776  001F5A  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11777  001F5C  0100               	movlb	0	; () banked
 11778  001F5E  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11779  001F60  0100               	movlb	0	; () banked
 11780  001F62  3799               	rlcf	??___ftadd& (0+255),f,b
 11781  001F64  E301               	bnc	u4581
 11782  001F66  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11783  001F68                     u4581:
 11784  001F68  0100               	movlb	0	; () banked
 11785  001F6A  5199               	movf	??___ftadd& (0+255),w,b
 11786  001F6C  0100               	movlb	0	; () banked
 11787  001F6E  6F9D               	movwf	___ftadd@exp2& (0+255),b
 11788                           
 11789                           ; BSR set to: 0
 11790  001F70  0100               	movlb	0	; () banked
 11791  001F72  519E               	movf	___ftadd@exp1& (0+255),w,b
 11792  001F74  0100               	movlb	0	; () banked
 11793  001F76  B4D8               	btfsc	status,2,c
 11794  001F78  D011               	goto	l783
 11795                           
 11796                           ; BSR set to: 0
 11797  001F7A  0100               	movlb	0	; () banked
 11798  001F7C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11799  001F7E  0100               	movlb	0	; () banked
 11800  001F80  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11801  001F82  B0D8               	btfsc	status,0,c
 11802  001F84  D012               	goto	l4776
 11803                           
 11804                           ; BSR set to: 0
 11805  001F86  0100               	movlb	0	; () banked
 11806  001F88  519E               	movf	___ftadd@exp1& (0+255),w,b
 11807  001F8A  0800               	sublw	0
 11808  001F8C  0100               	movlb	0	; () banked
 11809  001F8E  259D               	addwf	___ftadd@exp2& (0+255),w,b
 11810  001F90  0100               	movlb	0	; () banked
 11811  001F92  6F99               	movwf	??___ftadd& (0+255),b
 11812  001F94  0E18               	movlw	24
 11813  001F96  0100               	movlb	0	; () banked
 11814  001F98  6599               	cpfsgt	??___ftadd& (0+255),b
 11815  001F9A  D007               	goto	l4776
 11816  001F9C                     l783:
 11817                           
 11818                           ; BSR set to: 0
 11819  001F9C  C096  F093         	movff	___ftadd@f2,?___ftadd
 11820  001FA0  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 11821  001FA4  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 11822  001FA8  0012               	return	
 11823  001FAA                     l4776:
 11824                           
 11825                           ; BSR set to: 0
 11826  001FAA  0100               	movlb	0	; () banked
 11827  001FAC  519D               	movf	___ftadd@exp2& (0+255),w,b
 11828  001FAE  0100               	movlb	0	; () banked
 11829  001FB0  B4D8               	btfsc	status,2,c
 11830  001FB2  D011               	goto	l787
 11831                           
 11832                           ; BSR set to: 0
 11833  001FB4  0100               	movlb	0	; () banked
 11834  001FB6  519E               	movf	___ftadd@exp1& (0+255),w,b
 11835  001FB8  0100               	movlb	0	; () banked
 11836  001FBA  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11837  001FBC  B0D8               	btfsc	status,0,c
 11838  001FBE  D012               	goto	l4782
 11839                           
 11840                           ; BSR set to: 0
 11841  001FC0  0100               	movlb	0	; () banked
 11842  001FC2  519D               	movf	___ftadd@exp2& (0+255),w,b
 11843  001FC4  0800               	sublw	0
 11844  001FC6  0100               	movlb	0	; () banked
 11845  001FC8  259E               	addwf	___ftadd@exp1& (0+255),w,b
 11846  001FCA  0100               	movlb	0	; () banked
 11847  001FCC  6F99               	movwf	??___ftadd& (0+255),b
 11848  001FCE  0E18               	movlw	24
 11849  001FD0  0100               	movlb	0	; () banked
 11850  001FD2  6599               	cpfsgt	??___ftadd& (0+255),b
 11851  001FD4  D007               	goto	l4782
 11852  001FD6                     l787:
 11853                           
 11854                           ; BSR set to: 0
 11855  001FD6  C093  F093         	movff	___ftadd@f1,?___ftadd
 11856  001FDA  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 11857  001FDE  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 11858  001FE2  0012               	return	
 11859  001FE4                     l4782:
 11860                           
 11861                           ; BSR set to: 0
 11862  001FE4  0E06               	movlw	6
 11863  001FE6  0100               	movlb	0	; () banked
 11864  001FE8  6F9C               	movwf	___ftadd@sign& (0+255),b
 11865                           
 11866                           ; BSR set to: 0
 11867  001FEA  0100               	movlb	0	; () banked
 11868  001FEC  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11869  001FEE  D002               	goto	l4788
 11870                           
 11871                           ; BSR set to: 0
 11872  001FF0  0100               	movlb	0	; () banked
 11873  001FF2  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 11874  001FF4                     l4788:
 11875                           
 11876                           ; BSR set to: 0
 11877  001FF4  0100               	movlb	0	; () banked
 11878  001FF6  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11879  001FF8  D002               	goto	l789
 11880                           
 11881                           ; BSR set to: 0
 11882  001FFA  0100               	movlb	0	; () banked
 11883  001FFC  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 11884  001FFE                     l789:
 11885                           
 11886                           ; BSR set to: 0
 11887  001FFE  0100               	movlb	0	; () banked
 11888  002000  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11889                           
 11890                           ; BSR set to: 0
 11891  002002  0EFF               	movlw	255
 11892  002004  0100               	movlb	0	; () banked
 11893  002006  1793               	andwf	___ftadd@f1& (0+255),f,b
 11894  002008  0EFF               	movlw	255
 11895  00200A  0100               	movlb	0	; () banked
 11896  00200C  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11897  00200E  0E00               	movlw	0
 11898  002010  0100               	movlb	0	; () banked
 11899  002012  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11900  002014  0100               	movlb	0	; () banked
 11901  002016  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11902                           
 11903                           ; BSR set to: 0
 11904  002018  0EFF               	movlw	255
 11905  00201A  0100               	movlb	0	; () banked
 11906  00201C  1796               	andwf	___ftadd@f2& (0+255),f,b
 11907  00201E  0EFF               	movlw	255
 11908  002020  0100               	movlb	0	; () banked
 11909  002022  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11910  002024  0E00               	movlw	0
 11911  002026  0100               	movlb	0	; () banked
 11912  002028  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11913                           
 11914                           ; BSR set to: 0
 11915  00202A  0100               	movlb	0	; () banked
 11916  00202C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11917  00202E  0100               	movlb	0	; () banked
 11918  002030  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11919  002032  B0D8               	btfsc	status,0,c
 11920  002034  D025               	goto	l4808
 11921  002036                     l4798:
 11922                           
 11923                           ; BSR set to: 0
 11924  002036  0100               	movlb	0	; () banked
 11925  002038  90D8               	bcf	status,0,c
 11926  00203A  3796               	rlcf	___ftadd@f2& (0+255),f,b
 11927  00203C  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11928  00203E  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11929  002040  0100               	movlb	0	; () banked
 11930  002042  079D               	decf	___ftadd@exp2& (0+255),f,b
 11931                           
 11932                           ; BSR set to: 0
 11933  002044  0100               	movlb	0	; () banked
 11934  002046  519E               	movf	___ftadd@exp1& (0+255),w,b
 11935  002048  0100               	movlb	0	; () banked
 11936  00204A  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11937  00204C  B4D8               	btfsc	status,2,c
 11938  00204E  D011               	goto	l4806
 11939                           
 11940                           ; BSR set to: 0
 11941  002050  0100               	movlb	0	; () banked
 11942  002052  079C               	decf	___ftadd@sign& (0+255),f,b
 11943  002054  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11944  002058  0E07               	movlw	7
 11945  00205A  0100               	movlb	0	; () banked
 11946  00205C  1799               	andwf	??___ftadd& (0+255),f,b
 11947  00205E  B4D8               	btfsc	status,2,c
 11948  002060  D008               	goto	l4806
 11949  002062  D7E9               	goto	l4798
 11950  002064                     l4804:
 11951                           
 11952                           ; BSR set to: 0
 11953  002064  0100               	movlb	0	; () banked
 11954  002066  90D8               	bcf	status,0,c
 11955  002068  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11956  00206A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11957  00206C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 11958  00206E  0100               	movlb	0	; () banked
 11959  002070  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 11960  002072                     l4806:
 11961                           
 11962                           ; BSR set to: 0
 11963  002072  0100               	movlb	0	; () banked
 11964  002074  519D               	movf	___ftadd@exp2& (0+255),w,b
 11965  002076  0100               	movlb	0	; () banked
 11966  002078  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11967  00207A  B4D8               	btfsc	status,2,c
 11968  00207C  D02B               	goto	l798
 11969  00207E  D7F2               	goto	l4804
 11970  002080                     l4808:
 11971                           
 11972                           ; BSR set to: 0
 11973  002080  0100               	movlb	0	; () banked
 11974  002082  519E               	movf	___ftadd@exp1& (0+255),w,b
 11975  002084  0100               	movlb	0	; () banked
 11976  002086  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11977  002088  B0D8               	btfsc	status,0,c
 11978  00208A  D024               	goto	l798
 11979  00208C                     l4810:
 11980                           
 11981                           ; BSR set to: 0
 11982  00208C  0100               	movlb	0	; () banked
 11983  00208E  90D8               	bcf	status,0,c
 11984  002090  3793               	rlcf	___ftadd@f1& (0+255),f,b
 11985  002092  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11986  002094  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11987  002096  0100               	movlb	0	; () banked
 11988  002098  079E               	decf	___ftadd@exp1& (0+255),f,b
 11989                           
 11990                           ; BSR set to: 0
 11991  00209A  0100               	movlb	0	; () banked
 11992  00209C  519E               	movf	___ftadd@exp1& (0+255),w,b
 11993  00209E  0100               	movlb	0	; () banked
 11994  0020A0  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11995  0020A2  B4D8               	btfsc	status,2,c
 11996  0020A4  D011               	goto	l4818
 11997                           
 11998                           ; BSR set to: 0
 11999  0020A6  0100               	movlb	0	; () banked
 12000  0020A8  079C               	decf	___ftadd@sign& (0+255),f,b
 12001  0020AA  C09C  F099         	movff	___ftadd@sign,??___ftadd
 12002  0020AE  0E07               	movlw	7
 12003  0020B0  0100               	movlb	0	; () banked
 12004  0020B2  1799               	andwf	??___ftadd& (0+255),f,b
 12005  0020B4  B4D8               	btfsc	status,2,c
 12006  0020B6  D008               	goto	l4818
 12007  0020B8  D7E9               	goto	l4810
 12008  0020BA                     l4816:
 12009                           
 12010                           ; BSR set to: 0
 12011  0020BA  0100               	movlb	0	; () banked
 12012  0020BC  90D8               	bcf	status,0,c
 12013  0020BE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12014  0020C0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12015  0020C2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 12016  0020C4  0100               	movlb	0	; () banked
 12017  0020C6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 12018  0020C8                     l4818:
 12019                           
 12020                           ; BSR set to: 0
 12021  0020C8  0100               	movlb	0	; () banked
 12022  0020CA  519D               	movf	___ftadd@exp2& (0+255),w,b
 12023  0020CC  0100               	movlb	0	; () banked
 12024  0020CE  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 12025  0020D0  A4D8               	btfss	status,2,c
 12026  0020D2  D7F3               	goto	l4816
 12027  0020D4                     l798:
 12028                           
 12029                           ; BSR set to: 0
 12030  0020D4  0100               	movlb	0	; () banked
 12031  0020D6  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 12032  0020D8  D012               	goto	l807
 12033                           
 12034                           ; BSR set to: 0
 12035  0020DA  0EFF               	movlw	255
 12036  0020DC  0100               	movlb	0	; () banked
 12037  0020DE  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 12038  0020E0  0EFF               	movlw	255
 12039  0020E2  0100               	movlb	0	; () banked
 12040  0020E4  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12041  0020E6  0EFF               	movlw	255
 12042  0020E8  0100               	movlb	0	; () banked
 12043  0020EA  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12044  0020EC  0E01               	movlw	1
 12045  0020EE  0100               	movlb	0	; () banked
 12046  0020F0  2793               	addwf	___ftadd@f1& (0+255),f,b
 12047  0020F2  0E00               	movlw	0
 12048  0020F4  0100               	movlb	0	; () banked
 12049  0020F6  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12050  0020F8  0E00               	movlw	0
 12051  0020FA  0100               	movlb	0	; () banked
 12052  0020FC  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12053  0020FE                     l807:
 12054                           
 12055                           ; BSR set to: 0
 12056  0020FE  0100               	movlb	0	; () banked
 12057  002100  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 12058  002102  D012               	goto	l4824
 12059                           
 12060                           ; BSR set to: 0
 12061  002104  0EFF               	movlw	255
 12062  002106  0100               	movlb	0	; () banked
 12063  002108  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12064  00210A  0EFF               	movlw	255
 12065  00210C  0100               	movlb	0	; () banked
 12066  00210E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12067  002110  0EFF               	movlw	255
 12068  002112  0100               	movlb	0	; () banked
 12069  002114  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12070  002116  0E01               	movlw	1
 12071  002118  0100               	movlb	0	; () banked
 12072  00211A  2796               	addwf	___ftadd@f2& (0+255),f,b
 12073  00211C  0E00               	movlw	0
 12074  00211E  0100               	movlb	0	; () banked
 12075  002120  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12076  002122  0E00               	movlw	0
 12077  002124  0100               	movlb	0	; () banked
 12078  002126  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12079  002128                     l4824:
 12080                           
 12081                           ; BSR set to: 0
 12082  002128  0E00               	movlw	0
 12083  00212A  0100               	movlb	0	; () banked
 12084  00212C  6F9C               	movwf	___ftadd@sign& (0+255),b
 12085                           
 12086                           ; BSR set to: 0
 12087  00212E  0100               	movlb	0	; () banked
 12088  002130  5193               	movf	___ftadd@f1& (0+255),w,b
 12089  002132  0100               	movlb	0	; () banked
 12090  002134  2796               	addwf	___ftadd@f2& (0+255),f,b
 12091  002136  0100               	movlb	0	; () banked
 12092  002138  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 12093  00213A  0100               	movlb	0	; () banked
 12094  00213C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12095  00213E  0100               	movlb	0	; () banked
 12096  002140  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 12097  002142  0100               	movlb	0	; () banked
 12098  002144  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12099                           
 12100                           ; BSR set to: 0
 12101  002146  0100               	movlb	0	; () banked
 12102  002148  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12103  00214A  D015               	goto	l4834
 12104                           
 12105                           ; BSR set to: 0
 12106  00214C  0EFF               	movlw	255
 12107  00214E  0100               	movlb	0	; () banked
 12108  002150  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12109  002152  0EFF               	movlw	255
 12110  002154  0100               	movlb	0	; () banked
 12111  002156  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12112  002158  0EFF               	movlw	255
 12113  00215A  0100               	movlb	0	; () banked
 12114  00215C  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12115  00215E  0E01               	movlw	1
 12116  002160  0100               	movlb	0	; () banked
 12117  002162  2796               	addwf	___ftadd@f2& (0+255),f,b
 12118  002164  0E00               	movlw	0
 12119  002166  0100               	movlb	0	; () banked
 12120  002168  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12121  00216A  0E00               	movlw	0
 12122  00216C  0100               	movlb	0	; () banked
 12123  00216E  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12124                           
 12125                           ; BSR set to: 0
 12126  002170  0E01               	movlw	1
 12127  002172  0100               	movlb	0	; () banked
 12128  002174  6F9C               	movwf	___ftadd@sign& (0+255),b
 12129  002176                     l4834:
 12130                           
 12131                           ; BSR set to: 0
 12132  002176  C096  F071         	movff	___ftadd@f2,___ftpack@arg
 12133  00217A  C097  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
 12134  00217E  C098  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
 12135  002182  C09E  F074         	movff	___ftadd@exp1,___ftpack@exp
 12136  002186  C09C  F075         	movff	___ftadd@sign,___ftpack@sign
 12137  00218A  EC44  F017         	call	___ftpack	;wreg free
 12138  00218E  C071  F093         	movff	?___ftpack,?___ftadd
 12139  002192  C072  F094         	movff	?___ftpack+1,?___ftadd+1
 12140  002196  C073  F095         	movff	?___ftpack+2,?___ftadd+2
 12141  00219A  0012               	return	
 12142  00219C                     __end_of___ftadd:
 12143                           	opt stack 0
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           indf0	equ	0xFEF
 12151                           postinc0	equ	0xFEE
 12152                           fsr0h	equ	0xFEA
 12153                           fsr0l	equ	0xFE9
 12154                           wreg	equ	0xFE8
 12155                           indf1	equ	0xFE7
 12156                           postdec1	equ	0xFE5
 12157                           fsr1h	equ	0xFE2
 12158                           fsr1l	equ	0xFE1
 12159                           indf2	equ	0xFDF
 12160                           postinc2	equ	0xFDE
 12161                           postdec2	equ	0xFDD
 12162                           fsr2h	equ	0xFDA
 12163                           fsr2l	equ	0xFD9
 12164                           status	equ	0xFD8
 12165                           
 12166 ;; *************** function ___ftpack *****************
 12167 ;; Defined at:
 12168 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;  arg             3   17[BANK0 ] unsigned um
 12171 ;;  exp             1   20[BANK0 ] unsigned char 
 12172 ;;  sign            1   21[BANK0 ] unsigned char 
 12173 ;; Auto vars:     Size  Location     Type
 12174 ;;		None
 12175 ;; Return value:  Size  Location     Type
 12176 ;;                  3   17[BANK0 ] float 
 12177 ;; Registers used:
 12178 ;;		wreg, status,2, status,0
 12179 ;; Tracked objects:
 12180 ;;		On entry : 0/0
 12181 ;;		On exit  : 0/0
 12182 ;;		Unchanged: 0/0
 12183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12184 ;;      Params:         0       5       0       0       0       0       0
 12185 ;;      Locals:         0       0       0       0       0       0       0
 12186 ;;      Temps:          3       0       0       0       0       0       0
 12187 ;;      Totals:         3       5       0       0       0       0       0
 12188 ;;Total ram usage:        8 bytes
 12189 ;; Hardware stack levels used:    1
 12190 ;; Hardware stack levels required when called:    3
 12191 ;; This function calls:
 12192 ;;		Nothing
 12193 ;; This function is called by:
 12194 ;;		___awtoft
 12195 ;;		___ftadd
 12196 ;;		___ftdiv
 12197 ;;		___ftmul
 12198 ;;		___lltoft
 12199 ;;		___lwtoft
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text47
 12204  002E88                     __ptext47:
 12205                           	opt stack 0
 12206  002E88                     ___ftpack:
 12207                           	opt stack 24
 12208                           
 12209                           ;incstack = 0
 12210  002E88  0100               	movlb	0	; () banked
 12211  002E8A  5174               	movf	___ftpack@exp& (0+255),w,b
 12212  002E8C  0100               	movlb	0	; () banked
 12213  002E8E  B4D8               	btfsc	status,2,c
 12214  002E90  D008               	goto	l4686
 12215                           
 12216                           ; BSR set to: 0
 12217  002E92  0100               	movlb	0	; () banked
 12218  002E94  5171               	movf	___ftpack@arg& (0+255),w,b
 12219  002E96  0100               	movlb	0	; () banked
 12220  002E98  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12221  002E9A  0100               	movlb	0	; () banked
 12222  002E9C  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12223  002E9E  A4D8               	btfss	status,2,c
 12224  002EA0  D011               	goto	l4692
 12225  002EA2                     l4686:
 12226                           
 12227                           ; BSR set to: 0
 12228  002EA2  0E00               	movlw	0
 12229  002EA4  0100               	movlb	0	; () banked
 12230  002EA6  6F71               	movwf	?___ftpack& (0+255),b
 12231  002EA8  0E00               	movlw	0
 12232  002EAA  0100               	movlb	0	; () banked
 12233  002EAC  6F72               	movwf	(?___ftpack+1)& (0+255),b
 12234  002EAE  0E00               	movlw	0
 12235  002EB0  0100               	movlb	0	; () banked
 12236  002EB2  6F73               	movwf	(?___ftpack+2)& (0+255),b
 12237                           
 12238                           ; BSR set to: 0
 12239  002EB4  0012               	return	
 12240  002EB6                     l4690:
 12241                           
 12242                           ; BSR set to: 0
 12243  002EB6  0100               	movlb	0	; () banked
 12244  002EB8  2B74               	incf	___ftpack@exp& (0+255),f,b
 12245  002EBA  0100               	movlb	0	; () banked
 12246  002EBC  90D8               	bcf	status,0,c
 12247  002EBE  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12248  002EC0  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12249  002EC2  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12250  002EC4                     l4692:
 12251                           
 12252                           ; BSR set to: 0
 12253  002EC4  0E00               	movlw	0
 12254  002EC6  0100               	movlb	0	; () banked
 12255  002EC8  1571               	andwf	___ftpack@arg& (0+255),w,b
 12256  002ECA  6E22               	movwf	??___ftpack& (0+255),c
 12257  002ECC  0E00               	movlw	0
 12258  002ECE  0100               	movlb	0	; () banked
 12259  002ED0  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12260  002ED2  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12261  002ED4  0EFE               	movlw	254
 12262  002ED6  0100               	movlb	0	; () banked
 12263  002ED8  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12264  002EDA  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12265  002EDC  5022               	movf	??___ftpack,w,c
 12266  002EDE  1023               	iorwf	??___ftpack+1,w,c
 12267  002EE0  1024               	iorwf	??___ftpack+2,w,c
 12268  002EE2  B4D8               	btfsc	status,2,c
 12269  002EE4  D011               	goto	l4698
 12270  002EE6  D7E7               	goto	l4690
 12271  002EE8                     l4694:
 12272                           
 12273                           ; BSR set to: 0
 12274  002EE8  0100               	movlb	0	; () banked
 12275  002EEA  2B74               	incf	___ftpack@exp& (0+255),f,b
 12276                           
 12277                           ; BSR set to: 0
 12278  002EEC  0E01               	movlw	1
 12279  002EEE  0100               	movlb	0	; () banked
 12280  002EF0  2771               	addwf	___ftpack@arg& (0+255),f,b
 12281  002EF2  0E00               	movlw	0
 12282  002EF4  0100               	movlb	0	; () banked
 12283  002EF6  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12284  002EF8  0E00               	movlw	0
 12285  002EFA  0100               	movlb	0	; () banked
 12286  002EFC  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12287  002EFE  0100               	movlb	0	; () banked
 12288  002F00  90D8               	bcf	status,0,c
 12289  002F02  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12290  002F04  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12291  002F06  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12292  002F08                     l4698:
 12293                           
 12294                           ; BSR set to: 0
 12295  002F08  0E00               	movlw	0
 12296  002F0A  0100               	movlb	0	; () banked
 12297  002F0C  1571               	andwf	___ftpack@arg& (0+255),w,b
 12298  002F0E  6E22               	movwf	??___ftpack& (0+255),c
 12299  002F10  0E00               	movlw	0
 12300  002F12  0100               	movlb	0	; () banked
 12301  002F14  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12302  002F16  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12303  002F18  0EFF               	movlw	255
 12304  002F1A  0100               	movlb	0	; () banked
 12305  002F1C  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12306  002F1E  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12307  002F20  5022               	movf	??___ftpack,w,c
 12308  002F22  1023               	iorwf	??___ftpack+1,w,c
 12309  002F24  1024               	iorwf	??___ftpack+2,w,c
 12310  002F26  B4D8               	btfsc	status,2,c
 12311  002F28  D008               	goto	l4702
 12312  002F2A  D7DE               	goto	l4694
 12313  002F2C                     l4700:
 12314                           
 12315                           ; BSR set to: 0
 12316  002F2C  0100               	movlb	0	; () banked
 12317  002F2E  0774               	decf	___ftpack@exp& (0+255),f,b
 12318  002F30  0100               	movlb	0	; () banked
 12319  002F32  90D8               	bcf	status,0,c
 12320  002F34  3771               	rlcf	___ftpack@arg& (0+255),f,b
 12321  002F36  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12322  002F38  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12323  002F3A                     l4702:
 12324                           
 12325                           ; BSR set to: 0
 12326  002F3A  0100               	movlb	0	; () banked
 12327  002F3C  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12328  002F3E  D004               	goto	l760
 12329                           
 12330                           ; BSR set to: 0
 12331  002F40  0E02               	movlw	2
 12332  002F42  0100               	movlb	0	; () banked
 12333  002F44  6174               	cpfslt	___ftpack@exp& (0+255),b
 12334  002F46  D7F2               	goto	l4700
 12335  002F48                     l760:
 12336                           
 12337                           ; BSR set to: 0
 12338  002F48  0100               	movlb	0	; () banked
 12339  002F4A  B174               	btfsc	___ftpack@exp& (0+255),0,b
 12340  002F4C  D002               	goto	l4708
 12341                           
 12342                           ; BSR set to: 0
 12343  002F4E  0100               	movlb	0	; () banked
 12344  002F50  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12345  002F52                     l4708:
 12346                           
 12347                           ; BSR set to: 0
 12348  002F52  0100               	movlb	0	; () banked
 12349  002F54  90D8               	bcf	status,0,c
 12350  002F56  3374               	rrcf	___ftpack@exp& (0+255),f,b
 12351  002F58  0100               	movlb	0	; () banked
 12352  002F5A  5174               	movf	___ftpack@exp& (0+255),w,b
 12353  002F5C  0100               	movlb	0	; () banked
 12354  002F5E  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12355                           
 12356                           ; BSR set to: 0
 12357  002F60  0100               	movlb	0	; () banked
 12358  002F62  5175               	movf	___ftpack@sign& (0+255),w,b
 12359  002F64  0100               	movlb	0	; () banked
 12360  002F66  B4D8               	btfsc	status,2,c
 12361  002F68  D002               	goto	l4714
 12362                           
 12363                           ; BSR set to: 0
 12364  002F6A  0100               	movlb	0	; () banked
 12365  002F6C  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12366  002F6E                     l4714:
 12367                           
 12368                           ; BSR set to: 0
 12369  002F6E  C071  F071         	movff	___ftpack@arg,?___ftpack
 12370  002F72  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
 12371  002F76  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
 12372  002F7A  0012               	return	
 12373  002F7C                     __end_of___ftpack:
 12374                           	opt stack 0
 12375                           tblptru	equ	0xFF8
 12376                           tblptrh	equ	0xFF7
 12377                           tblptrl	equ	0xFF6
 12378                           tablat	equ	0xFF5
 12379                           prodh	equ	0xFF4
 12380                           prodl	equ	0xFF3
 12381                           indf0	equ	0xFEF
 12382                           postinc0	equ	0xFEE
 12383                           fsr0h	equ	0xFEA
 12384                           fsr0l	equ	0xFE9
 12385                           wreg	equ	0xFE8
 12386                           indf1	equ	0xFE7
 12387                           postdec1	equ	0xFE5
 12388                           fsr1h	equ	0xFE2
 12389                           fsr1l	equ	0xFE1
 12390                           indf2	equ	0xFDF
 12391                           postinc2	equ	0xFDE
 12392                           postdec2	equ	0xFDD
 12393                           fsr2h	equ	0xFDA
 12394                           fsr2l	equ	0xFD9
 12395                           status	equ	0xFD8
 12396                           
 12397 ;; *************** function ___ftneg *****************
 12398 ;; Defined at:
 12399 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  f1              3   17[BANK0 ] float 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;		None
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  3   17[BANK0 ] float 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12413 ;;      Params:         0       3       0       0       0       0       0
 12414 ;;      Locals:         0       0       0       0       0       0       0
 12415 ;;      Temps:          0       0       0       0       0       0       0
 12416 ;;      Totals:         0       3       0       0       0       0       0
 12417 ;;Total ram usage:        3 bytes
 12418 ;; Hardware stack levels used:    1
 12419 ;; Hardware stack levels required when called:    3
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_sprintf
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           	psect	text48
 12428  003BBA                     __ptext48:
 12429                           	opt stack 0
 12430  003BBA                     ___ftneg:
 12431                           	opt stack 24
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;incstack = 0
 12435  003BBA  0100               	movlb	0	; () banked
 12436  003BBC  5171               	movf	___ftneg@f1& (0+255),w,b
 12437  003BBE  0100               	movlb	0	; () banked
 12438  003BC0  1172               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12439  003BC2  0100               	movlb	0	; () banked
 12440  003BC4  1173               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12441  003BC6  B4D8               	btfsc	status,2,c
 12442  003BC8  D009               	goto	l857
 12443                           
 12444                           ; BSR set to: 0
 12445  003BCA  0E00               	movlw	0
 12446  003BCC  0100               	movlb	0	; () banked
 12447  003BCE  1B71               	xorwf	___ftneg@f1& (0+255),f,b
 12448  003BD0  0E00               	movlw	0
 12449  003BD2  0100               	movlb	0	; () banked
 12450  003BD4  1B72               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12451  003BD6  0E80               	movlw	128
 12452  003BD8  0100               	movlb	0	; () banked
 12453  003BDA  1B73               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12454  003BDC                     l857:
 12455                           
 12456                           ; BSR set to: 0
 12457  003BDC  C071  F071         	movff	___ftneg@f1,?___ftneg
 12458  003BE0  C072  F072         	movff	___ftneg@f1+1,?___ftneg+1
 12459  003BE4  C073  F073         	movff	___ftneg@f1+2,?___ftneg+2
 12460                           
 12461                           ; BSR set to: 0
 12462  003BE8  0012               	return		;funcret
 12463  003BEA                     __end_of___ftneg:
 12464                           	opt stack 0
 12465                           tblptru	equ	0xFF8
 12466                           tblptrh	equ	0xFF7
 12467                           tblptrl	equ	0xFF6
 12468                           tablat	equ	0xFF5
 12469                           prodh	equ	0xFF4
 12470                           prodl	equ	0xFF3
 12471                           indf0	equ	0xFEF
 12472                           postinc0	equ	0xFEE
 12473                           fsr0h	equ	0xFEA
 12474                           fsr0l	equ	0xFE9
 12475                           wreg	equ	0xFE8
 12476                           indf1	equ	0xFE7
 12477                           postdec1	equ	0xFE5
 12478                           fsr1h	equ	0xFE2
 12479                           fsr1l	equ	0xFE1
 12480                           indf2	equ	0xFDF
 12481                           postinc2	equ	0xFDE
 12482                           postdec2	equ	0xFDD
 12483                           fsr2h	equ	0xFDA
 12484                           fsr2l	equ	0xFD9
 12485                           status	equ	0xFD8
 12486                           
 12487 ;; *************** function ___ftge *****************
 12488 ;; Defined at:
 12489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 12490 ;; Parameters:    Size  Location     Type
 12491 ;;  ff1             3   17[BANK0 ] float 
 12492 ;;  ff2             3   20[BANK0 ] float 
 12493 ;; Auto vars:     Size  Location     Type
 12494 ;;		None
 12495 ;; Return value:  Size  Location     Type
 12496 ;;		None               void
 12497 ;; Registers used:
 12498 ;;		wreg, status,2, status,0
 12499 ;; Tracked objects:
 12500 ;;		On entry : 0/0
 12501 ;;		On exit  : 0/0
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12504 ;;      Params:         0       6       0       0       0       0       0
 12505 ;;      Locals:         0       0       0       0       0       0       0
 12506 ;;      Temps:          3       0       0       0       0       0       0
 12507 ;;      Totals:         3       6       0       0       0       0       0
 12508 ;;Total ram usage:        9 bytes
 12509 ;; Hardware stack levels used:    1
 12510 ;; Hardware stack levels required when called:    3
 12511 ;; This function calls:
 12512 ;;		Nothing
 12513 ;; This function is called by:
 12514 ;;		_sprintf
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           	psect	text49
 12519  0031CE                     __ptext49:
 12520                           	opt stack 0
 12521  0031CE                     ___ftge:
 12522                           	opt stack 24
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;incstack = 0
 12526  0031CE  0100               	movlb	0	; () banked
 12527  0031D0  AF73               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12528  0031D2  D019               	goto	l5236
 12529                           
 12530                           ; BSR set to: 0
 12531  0031D4  C071  F022         	movff	___ftge@ff1,??___ftge
 12532  0031D8  C072  F023         	movff	___ftge@ff1+1,??___ftge+1
 12533  0031DC  C073  F024         	movff	___ftge@ff1+2,??___ftge+2
 12534  0031E0  1E22               	comf	??___ftge,f,c
 12535  0031E2  1E23               	comf	??___ftge+1,f,c
 12536  0031E4  1E24               	comf	??___ftge+2,f,c
 12537  0031E6  2A22               	incf	??___ftge,f,c
 12538  0031E8  0E00               	movlw	0
 12539  0031EA  2223               	addwfc	??___ftge+1,f,c
 12540  0031EC  2224               	addwfc	??___ftge+2,f,c
 12541  0031EE  0E00               	movlw	0
 12542  0031F0  2422               	addwf	??___ftge,w,c
 12543  0031F2  0100               	movlb	0	; () banked
 12544  0031F4  6F71               	movwf	___ftge@ff1& (0+255),b
 12545  0031F6  0E00               	movlw	0
 12546  0031F8  2023               	addwfc	??___ftge+1,w,c
 12547  0031FA  0100               	movlb	0	; () banked
 12548  0031FC  6F72               	movwf	(___ftge@ff1+1)& (0+255),b
 12549  0031FE  0E80               	movlw	128
 12550  003200  2024               	addwfc	??___ftge+2,w,c
 12551  003202  0100               	movlb	0	; () banked
 12552  003204  6F73               	movwf	(___ftge@ff1+2)& (0+255),b
 12553  003206                     l5236:
 12554                           
 12555                           ; BSR set to: 0
 12556  003206  0100               	movlb	0	; () banked
 12557  003208  AF76               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12558  00320A  D019               	goto	l5240
 12559                           
 12560                           ; BSR set to: 0
 12561  00320C  C074  F022         	movff	___ftge@ff2,??___ftge
 12562  003210  C075  F023         	movff	___ftge@ff2+1,??___ftge+1
 12563  003214  C076  F024         	movff	___ftge@ff2+2,??___ftge+2
 12564  003218  1E22               	comf	??___ftge,f,c
 12565  00321A  1E23               	comf	??___ftge+1,f,c
 12566  00321C  1E24               	comf	??___ftge+2,f,c
 12567  00321E  2A22               	incf	??___ftge,f,c
 12568  003220  0E00               	movlw	0
 12569  003222  2223               	addwfc	??___ftge+1,f,c
 12570  003224  2224               	addwfc	??___ftge+2,f,c
 12571  003226  0E00               	movlw	0
 12572  003228  2422               	addwf	??___ftge,w,c
 12573  00322A  0100               	movlb	0	; () banked
 12574  00322C  6F74               	movwf	___ftge@ff2& (0+255),b
 12575  00322E  0E00               	movlw	0
 12576  003230  2023               	addwfc	??___ftge+1,w,c
 12577  003232  0100               	movlb	0	; () banked
 12578  003234  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
 12579  003236  0E80               	movlw	128
 12580  003238  2024               	addwfc	??___ftge+2,w,c
 12581  00323A  0100               	movlb	0	; () banked
 12582  00323C  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
 12583  00323E                     l5240:
 12584                           
 12585                           ; BSR set to: 0
 12586  00323E  0E00               	movlw	0
 12587  003240  0100               	movlb	0	; () banked
 12588  003242  1B71               	xorwf	___ftge@ff1& (0+255),f,b
 12589  003244  0E00               	movlw	0
 12590  003246  0100               	movlb	0	; () banked
 12591  003248  1B72               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12592  00324A  0E80               	movlw	128
 12593  00324C  0100               	movlb	0	; () banked
 12594  00324E  1B73               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12595                           
 12596                           ; BSR set to: 0
 12597  003250  0E00               	movlw	0
 12598  003252  0100               	movlb	0	; () banked
 12599  003254  1B74               	xorwf	___ftge@ff2& (0+255),f,b
 12600  003256  0E00               	movlw	0
 12601  003258  0100               	movlb	0	; () banked
 12602  00325A  1B75               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12603  00325C  0E80               	movlw	128
 12604  00325E  0100               	movlb	0	; () banked
 12605  003260  1B76               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12606  003262  0100               	movlb	0	; () banked
 12607  003264  5174               	movf	___ftge@ff2& (0+255),w,b
 12608  003266  0100               	movlb	0	; () banked
 12609  003268  5D71               	subwf	___ftge@ff1& (0+255),w,b
 12610  00326A  0100               	movlb	0	; () banked
 12611  00326C  5175               	movf	(___ftge@ff2+1)& (0+255),w,b
 12612  00326E  0100               	movlb	0	; () banked
 12613  003270  5972               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12614  003272  0100               	movlb	0	; () banked
 12615  003274  5176               	movf	(___ftge@ff2+2)& (0+255),w,b
 12616  003276  0100               	movlb	0	; () banked
 12617  003278  5973               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12618  00327A  B0D8               	btfsc	status,0,c
 12619  00327C  D002               	goto	l5246
 12620                           
 12621                           ; BSR set to: 0
 12622  00327E  90D8               	bcf	status,0,c
 12623  003280  0012               	return	
 12624  003282                     l5246:
 12625                           
 12626                           ; BSR set to: 0
 12627  003282  80D8               	bsf	status,0,c
 12628                           
 12629                           ; BSR set to: 0
 12630  003284  0012               	return	
 12631  003286                     __end_of___ftge:
 12632                           	opt stack 0
 12633                           tblptru	equ	0xFF8
 12634                           tblptrh	equ	0xFF7
 12635                           tblptrl	equ	0xFF6
 12636                           tablat	equ	0xFF5
 12637                           prodh	equ	0xFF4
 12638                           prodl	equ	0xFF3
 12639                           indf0	equ	0xFEF
 12640                           postinc0	equ	0xFEE
 12641                           fsr0h	equ	0xFEA
 12642                           fsr0l	equ	0xFE9
 12643                           wreg	equ	0xFE8
 12644                           indf1	equ	0xFE7
 12645                           postdec1	equ	0xFE5
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           indf2	equ	0xFDF
 12649                           postinc2	equ	0xFDE
 12650                           postdec2	equ	0xFDD
 12651                           fsr2h	equ	0xFDA
 12652                           fsr2l	equ	0xFD9
 12653                           status	equ	0xFD8
 12654                           
 12655 ;; *************** function _memset *****************
 12656 ;; Defined at:
 12657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  p1              2   17[BANK0 ] PTR void 
 12660 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12661 ;;  c               2   19[BANK0 ] int 
 12662 ;;  n               2   21[BANK0 ] unsigned int 
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;  p               2   33[COMRAM] PTR unsigned char 
 12665 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  2   17[BANK0 ] PTR void 
 12668 ;; Registers used:
 12669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12675 ;;      Params:         0       6       0       0       0       0       0
 12676 ;;      Locals:         2       0       0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0
 12678 ;;      Totals:         2       6       0       0       0       0       0
 12679 ;;Total ram usage:        8 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    3
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_util_beacon_transmission
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text50
 12690  003B28                     __ptext50:
 12691                           	opt stack 0
 12692  003B28                     _memset:
 12693                           	opt stack 25
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;incstack = 0
 12697  003B28  C071  F022         	movff	memset@p1,memset@p
 12698  003B2C  C072  F023         	movff	memset@p1+1,memset@p+1
 12699  003B30  D008               	goto	l5396
 12700  003B32                     l5392:
 12701  003B32  C022  FFD9         	movff	memset@p,fsr2l
 12702  003B36  C023  FFDA         	movff	memset@p+1,fsr2h
 12703  003B3A  C073  FFDF         	movff	memset@c,indf2
 12704  003B3E  4A22               	infsnz	memset@p,f,c
 12705  003B40  2A23               	incf	memset@p+1,f,c
 12706  003B42                     l5396:
 12707  003B42  0100               	movlb	0	; () banked
 12708  003B44  0775               	decf	memset@n& (0+255),f,b
 12709  003B46  A0D8               	btfss	status,0,c
 12710  003B48  0776               	decf	(memset@n+1)& (0+255),f,b
 12711  003B4A  0100               	movlb	0	; () banked
 12712  003B4C  2975               	incf	memset@n& (0+255),w,b
 12713  003B4E  E1F1               	bnz	l5392
 12714  003B50  0100               	movlb	0	; () banked
 12715  003B52  2976               	incf	(memset@n+1)& (0+255),w,b
 12716  003B54  B4D8               	btfsc	status,2,c
 12717  003B56  0012               	return	
 12718  003B58  D7EC               	goto	l5392
 12719  003B5A                     __end_of_memset:
 12720                           	opt stack 0
 12721                           tblptru	equ	0xFF8
 12722                           tblptrh	equ	0xFF7
 12723                           tblptrl	equ	0xFF6
 12724                           tablat	equ	0xFF5
 12725                           prodh	equ	0xFF4
 12726                           prodl	equ	0xFF3
 12727                           indf0	equ	0xFEF
 12728                           postinc0	equ	0xFEE
 12729                           fsr0h	equ	0xFEA
 12730                           fsr0l	equ	0xFE9
 12731                           wreg	equ	0xFE8
 12732                           indf1	equ	0xFE7
 12733                           postdec1	equ	0xFE5
 12734                           fsr1h	equ	0xFE2
 12735                           fsr1l	equ	0xFE1
 12736                           indf2	equ	0xFDF
 12737                           postinc2	equ	0xFDE
 12738                           postdec2	equ	0xFDD
 12739                           fsr2h	equ	0xFDA
 12740                           fsr2l	equ	0xFD9
 12741                           status	equ	0xFD8
 12742                           
 12743 ;; *************** function _initialize *****************
 12744 ;; Defined at:
 12745 ;;		line 17 in file "easat2_util_initialize.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;		None
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;		None
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  1    wreg      void 
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, cstack
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12759 ;;      Params:         0       0       0       0       0       0       0
 12760 ;;      Locals:         0       0       0       0       0       0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0
 12762 ;;      Totals:         0       0       0       0       0       0       0
 12763 ;;Total ram usage:        0 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; Hardware stack levels required when called:    4
 12766 ;; This function calls:
 12767 ;;		_io_initialize
 12768 ;;		_util_timer1_initialize
 12769 ;; This function is called by:
 12770 ;;		_main
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774                           	psect	text51
 12775  003CB6                     __ptext51:
 12776                           	opt stack 0
 12777  003CB6                     _initialize:
 12778                           	opt stack 26
 12779                           
 12780                           ;easat2_util_initialize.c: 19: io_initialize();
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;incstack = 0
 12784  003CB6  EC43  F019         	call	_io_initialize	;wreg free
 12785                           
 12786                           ;easat2_util_initialize.c: 20: util_timer1_initialize();
 12787  003CBA  EC0A  F01E         	call	_util_timer1_initialize	;wreg free
 12788  003CBE  0012               	return		;funcret
 12789  003CC0                     __end_of_initialize:
 12790                           	opt stack 0
 12791                           tblptru	equ	0xFF8
 12792                           tblptrh	equ	0xFF7
 12793                           tblptrl	equ	0xFF6
 12794                           tablat	equ	0xFF5
 12795                           prodh	equ	0xFF4
 12796                           prodl	equ	0xFF3
 12797                           indf0	equ	0xFEF
 12798                           postinc0	equ	0xFEE
 12799                           fsr0h	equ	0xFEA
 12800                           fsr0l	equ	0xFE9
 12801                           wreg	equ	0xFE8
 12802                           indf1	equ	0xFE7
 12803                           postdec1	equ	0xFE5
 12804                           fsr1h	equ	0xFE2
 12805                           fsr1l	equ	0xFE1
 12806                           indf2	equ	0xFDF
 12807                           postinc2	equ	0xFDE
 12808                           postdec2	equ	0xFDD
 12809                           fsr2h	equ	0xFDA
 12810                           fsr2l	equ	0xFD9
 12811                           status	equ	0xFD8
 12812                           
 12813 ;; *************** function _util_timer1_initialize *****************
 12814 ;; Defined at:
 12815 ;;		line 19 in file "easat2_util_timer.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;		None
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;		None
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  1    wreg      void 
 12822 ;; Registers used:
 12823 ;;		wreg, status,2
 12824 ;; Tracked objects:
 12825 ;;		On entry : 0/0
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12829 ;;      Params:         0       0       0       0       0       0       0
 12830 ;;      Locals:         0       0       0       0       0       0       0
 12831 ;;      Temps:          0       0       0       0       0       0       0
 12832 ;;      Totals:         0       0       0       0       0       0       0
 12833 ;;Total ram usage:        0 bytes
 12834 ;; Hardware stack levels used:    1
 12835 ;; Hardware stack levels required when called:    3
 12836 ;; This function calls:
 12837 ;;		Nothing
 12838 ;; This function is called by:
 12839 ;;		_initialize
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           	psect	text52
 12844  003C14                     __ptext52:
 12845                           	opt stack 0
 12846  003C14                     _util_timer1_initialize:
 12847                           	opt stack 26
 12848                           
 12849                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 12850                           
 12851                           ;incstack = 0
 12852  003C14  8ED0               	bsf	4048,7,c	;volatile
 12853                           
 12854                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 12855  003C16  90CD               	bcf	4045,0,c	;volatile
 12856                           
 12857                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 12858  003C18  9CCD               	bcf	4045,6,c	;volatile
 12859                           
 12860                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 12861  003C1A  9ECD               	bcf	4045,7,c	;volatile
 12862                           
 12863                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 12864  003C1C  9ACD               	bcf	4045,5,c	;volatile
 12865                           
 12866                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 12867  003C1E  98CD               	bcf	4045,4,c	;volatile
 12868                           
 12869                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 12870  003C20  96CD               	bcf	4045,3,c	;volatile
 12871                           
 12872                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 12873  003C22  82CD               	bsf	4045,1,c	;volatile
 12874                           
 12875                           ;easat2_util_timer.c: 53: TMR1H = 0xEC;
 12876  003C24  0EEC               	movlw	236
 12877  003C26  6ECF               	movwf	4047,c	;volatile
 12878                           
 12879                           ;easat2_util_timer.c: 54: TMR1L = 0x77 ; 60535;
 12880  003C28  0E77               	movlw	119
 12881  003C2A  6ECE               	movwf	4046,c	;volatile
 12882                           
 12883                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 12884  003C2C  809D               	bsf	3997,0,c	;volatile
 12885                           
 12886                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 12887  003C2E  809F               	bsf	3999,0,c	;volatile
 12888                           
 12889                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 12890  003C30  909E               	bcf	3998,0,c	;volatile
 12891                           
 12892                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 12893  003C32  80CD               	bsf	4045,0,c	;volatile
 12894                           
 12895                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 12896  003C34  9CF2               	bcf	intcon,6,c	;volatile
 12897                           
 12898                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 12899  003C36  8EF2               	bsf	intcon,7,c	;volatile
 12900  003C38  0012               	return		;funcret
 12901  003C3A                     __end_of_util_timer1_initialize:
 12902                           	opt stack 0
 12903                           tblptru	equ	0xFF8
 12904                           tblptrh	equ	0xFF7
 12905                           tblptrl	equ	0xFF6
 12906                           tablat	equ	0xFF5
 12907                           prodh	equ	0xFF4
 12908                           prodl	equ	0xFF3
 12909                           intcon	equ	0xFF2
 12910                           indf0	equ	0xFEF
 12911                           postinc0	equ	0xFEE
 12912                           fsr0h	equ	0xFEA
 12913                           fsr0l	equ	0xFE9
 12914                           wreg	equ	0xFE8
 12915                           indf1	equ	0xFE7
 12916                           postdec1	equ	0xFE5
 12917                           fsr1h	equ	0xFE2
 12918                           fsr1l	equ	0xFE1
 12919                           indf2	equ	0xFDF
 12920                           postinc2	equ	0xFDE
 12921                           postdec2	equ	0xFDD
 12922                           fsr2h	equ	0xFDA
 12923                           fsr2l	equ	0xFD9
 12924                           status	equ	0xFD8
 12925                           
 12926 ;; *************** function _io_initialize *****************
 12927 ;; Defined at:
 12928 ;;		line 27 in file "easat2_util_initialize.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12942 ;;      Params:         0       0       0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    3
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_initialize
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text53
 12957  003286                     __ptext53:
 12958                           	opt stack 0
 12959  003286                     _io_initialize:
 12960                           	opt stack 26
 12961                           
 12962                           ;easat2_util_initialize.c: 36: VREFCON0bits.FVREN = 1;
 12963                           
 12964                           ;incstack = 0
 12965  003286  010F               	movlb	15	; () banked
 12966  003288  8F42               	bsf	66,7,b	;volatile
 12967                           
 12968                           ;easat2_util_initialize.c: 37: VREFCON0bits.FVRS0 = 0;
 12969  00328A  010F               	movlb	15	; () banked
 12970  00328C  9942               	bcf	66,4,b	;volatile
 12971                           
 12972                           ;easat2_util_initialize.c: 38: VREFCON0bits.FVRS1 = 1;
 12973  00328E  010F               	movlb	15	; () banked
 12974  003290  8B42               	bsf	66,5,b	;volatile
 12975                           
 12976                           ;easat2_util_initialize.c: 40: VREFCON0bits.FVRST = 1;
 12977  003292  010F               	movlb	15	; () banked
 12978  003294  8D42               	bsf	66,6,b	;volatile
 12979                           
 12980                           ; BSR set to: 15
 12981                           ;easat2_util_initialize.c: 45: ADCON1 = 0x08;
 12982  003296  0E08               	movlw	8
 12983  003298  6EC1               	movwf	4033,c	;volatile
 12984                           
 12985                           ;easat2_util_initialize.c: 46: ADCON2 = 0xAF;
 12986  00329A  0EAF               	movlw	175
 12987  00329C  6EC0               	movwf	4032,c	;volatile
 12988                           
 12989                           ; BSR set to: 15
 12990                           ;easat2_util_initialize.c: 50: TRISAbits.TRISA0 = 1;
 12991  00329E  8092               	bsf	3986,0,c	;volatile
 12992                           
 12993                           ; BSR set to: 15
 12994                           ;easat2_util_initialize.c: 51: TRISAbits.TRISA1 = 1;
 12995  0032A0  8292               	bsf	3986,1,c	;volatile
 12996                           
 12997                           ; BSR set to: 15
 12998                           ;easat2_util_initialize.c: 52: TRISAbits.TRISA2 = 0;
 12999  0032A2  9492               	bcf	3986,2,c	;volatile
 13000                           
 13001                           ; BSR set to: 15
 13002                           ;easat2_util_initialize.c: 53: TRISAbits.TRISA3 = 1;
 13003  0032A4  8692               	bsf	3986,3,c	;volatile
 13004                           
 13005                           ; BSR set to: 15
 13006                           ;easat2_util_initialize.c: 54: TRISAbits.TRISA4 = 1;
 13007  0032A6  8892               	bsf	3986,4,c	;volatile
 13008                           
 13009                           ; BSR set to: 15
 13010                           ;easat2_util_initialize.c: 55: TRISAbits.TRISA5 = 1;
 13011  0032A8  8A92               	bsf	3986,5,c	;volatile
 13012                           
 13013                           ; BSR set to: 15
 13014                           ;easat2_util_initialize.c: 62: ANSELAbits.ANSA0 = 1;
 13015  0032AA  010F               	movlb	15	; () banked
 13016  0032AC  8138               	bsf	56,0,b	;volatile
 13017                           
 13018                           ; BSR set to: 15
 13019                           ;easat2_util_initialize.c: 63: ANSELAbits.ANSA1 = 1;
 13020  0032AE  010F               	movlb	15	; () banked
 13021  0032B0  8338               	bsf	56,1,b	;volatile
 13022                           
 13023                           ; BSR set to: 15
 13024                           ;easat2_util_initialize.c: 64: ANSELAbits.ANSA2 = 1;
 13025  0032B2  010F               	movlb	15	; () banked
 13026  0032B4  8538               	bsf	56,2,b	;volatile
 13027                           
 13028                           ; BSR set to: 15
 13029                           ;easat2_util_initialize.c: 65: ANSELAbits.ANSA3 = 0;
 13030  0032B6  010F               	movlb	15	; () banked
 13031  0032B8  9738               	bcf	56,3,b	;volatile
 13032                           
 13033                           ; BSR set to: 15
 13034                           ;easat2_util_initialize.c: 67: ANSELAbits.ANSA5 = 1;
 13035  0032BA  010F               	movlb	15	; () banked
 13036  0032BC  8B38               	bsf	56,5,b	;volatile
 13037                           
 13038                           ; BSR set to: 15
 13039                           ;easat2_util_initialize.c: 71: LATAbits.LATA0 = 0;
 13040  0032BE  9089               	bcf	3977,0,c	;volatile
 13041                           
 13042                           ; BSR set to: 15
 13043                           ;easat2_util_initialize.c: 72: LATAbits.LATA1 = 0;
 13044  0032C0  9289               	bcf	3977,1,c	;volatile
 13045                           
 13046                           ; BSR set to: 15
 13047                           ;easat2_util_initialize.c: 73: LATAbits.LATA2 = 0;
 13048  0032C2  9489               	bcf	3977,2,c	;volatile
 13049                           
 13050                           ; BSR set to: 15
 13051                           ;easat2_util_initialize.c: 74: LATAbits.LATA3 = 0;
 13052  0032C4  9689               	bcf	3977,3,c	;volatile
 13053                           
 13054                           ; BSR set to: 15
 13055                           ;easat2_util_initialize.c: 75: LATAbits.LATA4 = 0;
 13056  0032C6  9889               	bcf	3977,4,c	;volatile
 13057                           
 13058                           ; BSR set to: 15
 13059                           ;easat2_util_initialize.c: 76: LATAbits.LATA5 = 0;
 13060  0032C8  9A89               	bcf	3977,5,c	;volatile
 13061                           
 13062                           ; BSR set to: 15
 13063                           ;easat2_util_initialize.c: 83: TRISBbits.TRISB0 = 1;
 13064  0032CA  8093               	bsf	3987,0,c	;volatile
 13065                           
 13066                           ; BSR set to: 15
 13067                           ;easat2_util_initialize.c: 84: TRISBbits.TRISB1 = 1;
 13068  0032CC  8293               	bsf	3987,1,c	;volatile
 13069                           
 13070                           ; BSR set to: 15
 13071                           ;easat2_util_initialize.c: 85: TRISBbits.TRISB2 = 1;
 13072  0032CE  8493               	bsf	3987,2,c	;volatile
 13073                           
 13074                           ; BSR set to: 15
 13075                           ;easat2_util_initialize.c: 86: TRISBbits.TRISB3 = 1;
 13076  0032D0  8693               	bsf	3987,3,c	;volatile
 13077                           
 13078                           ; BSR set to: 15
 13079                           ;easat2_util_initialize.c: 87: TRISBbits.TRISB4 = 1;
 13080  0032D2  8893               	bsf	3987,4,c	;volatile
 13081                           
 13082                           ; BSR set to: 15
 13083                           ;easat2_util_initialize.c: 88: TRISBbits.TRISB5 = 1;
 13084  0032D4  8A93               	bsf	3987,5,c	;volatile
 13085                           
 13086                           ; BSR set to: 15
 13087                           ;easat2_util_initialize.c: 89: TRISBbits.TRISB6 = 1;
 13088  0032D6  8C93               	bsf	3987,6,c	;volatile
 13089                           
 13090                           ; BSR set to: 15
 13091                           ;easat2_util_initialize.c: 90: TRISBbits.TRISB7 = 1;
 13092  0032D8  8E93               	bsf	3987,7,c	;volatile
 13093                           
 13094                           ; BSR set to: 15
 13095                           ;easat2_util_initialize.c: 94: ANSELBbits.ANSB0 = 1;
 13096  0032DA  010F               	movlb	15	; () banked
 13097  0032DC  8139               	bsf	57,0,b	;volatile
 13098                           
 13099                           ; BSR set to: 15
 13100                           ;easat2_util_initialize.c: 95: ANSELBbits.ANSB1 = 1;
 13101  0032DE  010F               	movlb	15	; () banked
 13102  0032E0  8339               	bsf	57,1,b	;volatile
 13103                           
 13104                           ; BSR set to: 15
 13105                           ;easat2_util_initialize.c: 96: ANSELBbits.ANSB2 = 1;
 13106  0032E2  010F               	movlb	15	; () banked
 13107  0032E4  8539               	bsf	57,2,b	;volatile
 13108                           
 13109                           ; BSR set to: 15
 13110                           ;easat2_util_initialize.c: 97: ANSELBbits.ANSB3 = 1;
 13111  0032E6  010F               	movlb	15	; () banked
 13112  0032E8  8739               	bsf	57,3,b	;volatile
 13113                           
 13114                           ; BSR set to: 15
 13115                           ;easat2_util_initialize.c: 99: ANSELBbits.ANSB5 = 1;
 13116  0032EA  010F               	movlb	15	; () banked
 13117  0032EC  8B39               	bsf	57,5,b	;volatile
 13118                           
 13119                           ; BSR set to: 15
 13120                           ;easat2_util_initialize.c: 103: LATBbits.LATB0 = 0;
 13121  0032EE  908A               	bcf	3978,0,c	;volatile
 13122                           
 13123                           ; BSR set to: 15
 13124                           ;easat2_util_initialize.c: 104: LATBbits.LATB1 = 0;
 13125  0032F0  928A               	bcf	3978,1,c	;volatile
 13126                           
 13127                           ; BSR set to: 15
 13128                           ;easat2_util_initialize.c: 105: LATBbits.LATB2 = 0;
 13129  0032F2  948A               	bcf	3978,2,c	;volatile
 13130                           
 13131                           ; BSR set to: 15
 13132                           ;easat2_util_initialize.c: 106: LATBbits.LATB3 = 0;
 13133  0032F4  968A               	bcf	3978,3,c	;volatile
 13134                           
 13135                           ; BSR set to: 15
 13136                           ;easat2_util_initialize.c: 107: LATBbits.LATB4 = 0;
 13137  0032F6  988A               	bcf	3978,4,c	;volatile
 13138                           
 13139                           ; BSR set to: 15
 13140                           ;easat2_util_initialize.c: 108: LATBbits.LATB5 = 0;
 13141  0032F8  9A8A               	bcf	3978,5,c	;volatile
 13142                           
 13143                           ; BSR set to: 15
 13144                           ;easat2_util_initialize.c: 112: TRISDbits.TRISD0 = 0;
 13145  0032FA  9095               	bcf	3989,0,c	;volatile
 13146                           
 13147                           ; BSR set to: 15
 13148                           ;easat2_util_initialize.c: 113: TRISDbits.TRISD1 = 0;
 13149  0032FC  9295               	bcf	3989,1,c	;volatile
 13150                           
 13151                           ; BSR set to: 15
 13152                           ;easat2_util_initialize.c: 114: TRISDbits.TRISD2 = 0;
 13153  0032FE  9495               	bcf	3989,2,c	;volatile
 13154                           
 13155                           ; BSR set to: 15
 13156                           ;easat2_util_initialize.c: 115: TRISDbits.TRISD3 = 0;
 13157  003300  9695               	bcf	3989,3,c	;volatile
 13158                           
 13159                           ; BSR set to: 15
 13160                           ;easat2_util_initialize.c: 116: TRISDbits.TRISD4 = 0;
 13161  003302  9895               	bcf	3989,4,c	;volatile
 13162                           
 13163                           ; BSR set to: 15
 13164                           ;easat2_util_initialize.c: 117: TRISDbits.TRISD5 = 0;
 13165  003304  9A95               	bcf	3989,5,c	;volatile
 13166                           
 13167                           ; BSR set to: 15
 13168                           ;easat2_util_initialize.c: 118: TRISDbits.TRISD6 = 0;
 13169  003306  9C95               	bcf	3989,6,c	;volatile
 13170                           
 13171                           ; BSR set to: 15
 13172                           ;easat2_util_initialize.c: 119: TRISDbits.TRISD7 = 0;
 13173  003308  9E95               	bcf	3989,7,c	;volatile
 13174                           
 13175                           ; BSR set to: 15
 13176                           ;easat2_util_initialize.c: 123: ANSELDbits.ANSD0 = 0;
 13177  00330A  010F               	movlb	15	; () banked
 13178  00330C  913B               	bcf	59,0,b	;volatile
 13179                           
 13180                           ; BSR set to: 15
 13181                           ;easat2_util_initialize.c: 124: ANSELDbits.ANSD1 = 0;
 13182  00330E  010F               	movlb	15	; () banked
 13183  003310  933B               	bcf	59,1,b	;volatile
 13184                           
 13185                           ; BSR set to: 15
 13186                           ;easat2_util_initialize.c: 125: ANSELDbits.ANSD2 = 0;
 13187  003312  010F               	movlb	15	; () banked
 13188  003314  953B               	bcf	59,2,b	;volatile
 13189                           
 13190                           ; BSR set to: 15
 13191                           ;easat2_util_initialize.c: 126: ANSELDbits.ANSD3 = 0;
 13192  003316  010F               	movlb	15	; () banked
 13193  003318  973B               	bcf	59,3,b	;volatile
 13194                           
 13195                           ; BSR set to: 15
 13196                           ;easat2_util_initialize.c: 127: ANSELDbits.ANSD4 = 0;
 13197  00331A  010F               	movlb	15	; () banked
 13198  00331C  993B               	bcf	59,4,b	;volatile
 13199                           
 13200                           ; BSR set to: 15
 13201                           ;easat2_util_initialize.c: 128: ANSELDbits.ANSD5 = 0;
 13202  00331E  010F               	movlb	15	; () banked
 13203  003320  9B3B               	bcf	59,5,b	;volatile
 13204                           
 13205                           ; BSR set to: 15
 13206                           ;easat2_util_initialize.c: 129: ANSELDbits.ANSD6 = 0;
 13207  003322  010F               	movlb	15	; () banked
 13208  003324  9D3B               	bcf	59,6,b	;volatile
 13209                           
 13210                           ; BSR set to: 15
 13211                           ;easat2_util_initialize.c: 130: ANSELDbits.ANSD7 = 0;
 13212  003326  010F               	movlb	15	; () banked
 13213  003328  9F3B               	bcf	59,7,b	;volatile
 13214                           
 13215                           ; BSR set to: 15
 13216                           ;easat2_util_initialize.c: 134: LATDbits.LATD0 = 0;
 13217  00332A  908C               	bcf	3980,0,c	;volatile
 13218                           
 13219                           ; BSR set to: 15
 13220                           ;easat2_util_initialize.c: 135: LATDbits.LATD1 = 0;
 13221  00332C  928C               	bcf	3980,1,c	;volatile
 13222                           
 13223                           ; BSR set to: 15
 13224                           ;easat2_util_initialize.c: 136: LATDbits.LATD2 = 0;
 13225  00332E  948C               	bcf	3980,2,c	;volatile
 13226                           
 13227                           ; BSR set to: 15
 13228                           ;easat2_util_initialize.c: 137: LATDbits.LATD3 = 0;
 13229  003330  968C               	bcf	3980,3,c	;volatile
 13230                           
 13231                           ; BSR set to: 15
 13232                           ;easat2_util_initialize.c: 138: LATDbits.LATD4 = 0;
 13233  003332  988C               	bcf	3980,4,c	;volatile
 13234                           
 13235                           ; BSR set to: 15
 13236                           ;easat2_util_initialize.c: 139: LATDbits.LATD5 = 0;
 13237  003334  9A8C               	bcf	3980,5,c	;volatile
 13238                           
 13239                           ; BSR set to: 15
 13240                           ;easat2_util_initialize.c: 140: LATDbits.LATD6 = 0;
 13241  003336  9C8C               	bcf	3980,6,c	;volatile
 13242                           
 13243                           ; BSR set to: 15
 13244                           ;easat2_util_initialize.c: 141: LATDbits.LATD7 = 0;
 13245  003338  9E8C               	bcf	3980,7,c	;volatile
 13246                           
 13247                           ; BSR set to: 15
 13248  00333A  0012               	return		;funcret
 13249  00333C                     __end_of_io_initialize:
 13250                           	opt stack 0
 13251                           tblptru	equ	0xFF8
 13252                           tblptrh	equ	0xFF7
 13253                           tblptrl	equ	0xFF6
 13254                           tablat	equ	0xFF5
 13255                           prodh	equ	0xFF4
 13256                           prodl	equ	0xFF3
 13257                           intcon	equ	0xFF2
 13258                           indf0	equ	0xFEF
 13259                           postinc0	equ	0xFEE
 13260                           fsr0h	equ	0xFEA
 13261                           fsr0l	equ	0xFE9
 13262                           wreg	equ	0xFE8
 13263                           indf1	equ	0xFE7
 13264                           postdec1	equ	0xFE5
 13265                           fsr1h	equ	0xFE2
 13266                           fsr1l	equ	0xFE1
 13267                           indf2	equ	0xFDF
 13268                           postinc2	equ	0xFDE
 13269                           postdec2	equ	0xFDD
 13270                           fsr2h	equ	0xFDA
 13271                           fsr2l	equ	0xFD9
 13272                           status	equ	0xFD8
 13273                           
 13274 ;; *************** function _low_priority_int *****************
 13275 ;; Defined at:
 13276 ;;		line 223 in file "easat2_util_timer.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		None
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13290 ;;      Params:         0       0       0       0       0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0
 13292 ;;      Temps:          0      17       0       0       0       0       0
 13293 ;;      Totals:         0      17       0       0       0       0       0
 13294 ;;Total ram usage:       17 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    2
 13297 ;; This function calls:
 13298 ;;		Nothing
 13299 ;; This function is called by:
 13300 ;;		Interrupt level 1
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           	psect	intcodelo
 13305  000018                     __pintcodelo:
 13306                           	opt stack 0
 13307  000018                     _low_priority_int:
 13308                           	opt stack 21
 13309                           
 13310                           ; BSR set to: 15
 13311                           ;incstack = 0
 13312  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13313  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13314  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13315  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13316  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13317  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13318  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13319  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13320  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13321  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13322  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13323  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13324  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13325  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13326  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13327  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13328  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13329  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13330  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13331  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13332  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13333  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13334  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13335  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13336  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13337  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13338  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13339  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13340  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13341  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13342  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13343  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13344  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13345  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13346  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13347  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13348  0000A4  0010               	retfie	
 13349  0000A6                     __end_of_low_priority_int:
 13350                           	opt stack 0
 13351                           pclatu	equ	0xFFB
 13352                           pclath	equ	0xFFA
 13353                           tblptru	equ	0xFF8
 13354                           tblptrh	equ	0xFF7
 13355                           tblptrl	equ	0xFF6
 13356                           tablat	equ	0xFF5
 13357                           prodh	equ	0xFF4
 13358                           prodl	equ	0xFF3
 13359                           intcon	equ	0xFF2
 13360                           indf0	equ	0xFEF
 13361                           postinc0	equ	0xFEE
 13362                           fsr0h	equ	0xFEA
 13363                           fsr0l	equ	0xFE9
 13364                           wreg	equ	0xFE8
 13365                           indf1	equ	0xFE7
 13366                           postdec1	equ	0xFE5
 13367                           fsr1h	equ	0xFE2
 13368                           fsr1l	equ	0xFE1
 13369                           bsr	equ	0xFE0
 13370                           indf2	equ	0xFDF
 13371                           postinc2	equ	0xFDE
 13372                           postdec2	equ	0xFDD
 13373                           fsr2h	equ	0xFDA
 13374                           fsr2l	equ	0xFD9
 13375                           status	equ	0xFD8
 13376                           
 13377 ;; *************** function _high_priority_int *****************
 13378 ;; Defined at:
 13379 ;;		line 74 in file "easat2_util_timer.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;		None
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;  i               2   31[COMRAM] int 
 13384 ;;  sample          2   29[COMRAM] unsigned int 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  1    wreg      void 
 13387 ;; Registers used:
 13388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13394 ;;      Params:         0       0       0       0       0       0       0
 13395 ;;      Locals:         4       0       0       0       0       0       0
 13396 ;;      Temps:         19       0       0       0       0       0       0
 13397 ;;      Totals:        23       0       0       0       0       0       0
 13398 ;;Total ram usage:       23 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:    1
 13401 ;; This function calls:
 13402 ;;		___ltdiv
 13403 ;; This function is called by:
 13404 ;;		Interrupt level 2
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	intcode
 13409  000008                     __pintcode:
 13410                           	opt stack 0
 13411  000008                     _high_priority_int:
 13412                           	opt stack 21
 13413                           
 13414                           ;incstack = 0
 13415  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13416  00000A  EFCE  F010         	goto	int_func
 13417                           pclatu	equ	0xFFB
 13418                           pclath	equ	0xFFA
 13419                           tblptru	equ	0xFF8
 13420                           tblptrh	equ	0xFF7
 13421                           tblptrl	equ	0xFF6
 13422                           tablat	equ	0xFF5
 13423                           prodh	equ	0xFF4
 13424                           prodl	equ	0xFF3
 13425                           intcon	equ	0xFF2
 13426                           indf0	equ	0xFEF
 13427                           postinc0	equ	0xFEE
 13428                           fsr0h	equ	0xFEA
 13429                           fsr0l	equ	0xFE9
 13430                           wreg	equ	0xFE8
 13431                           indf1	equ	0xFE7
 13432                           postdec1	equ	0xFE5
 13433                           fsr1h	equ	0xFE2
 13434                           fsr1l	equ	0xFE1
 13435                           bsr	equ	0xFE0
 13436                           indf2	equ	0xFDF
 13437                           postinc2	equ	0xFDE
 13438                           postdec2	equ	0xFDD
 13439                           fsr2h	equ	0xFDA
 13440                           fsr2l	equ	0xFD9
 13441                           status	equ	0xFD8
 13442                           
 13443                           	psect	intcode_body
 13444  00219C                     __pintcode_body:
 13445                           	opt stack 21
 13446  00219C                     int_func:
 13447                           	opt stack 21
 13448  00219C  CFFA F010          	movff	pclath,??_high_priority_int+5
 13449  0021A0  CFFB F011          	movff	pclatu,??_high_priority_int+6
 13450  0021A4  CFE9 F012          	movff	fsr0l,??_high_priority_int+7
 13451  0021A8  CFEA F013          	movff	fsr0h,??_high_priority_int+8
 13452  0021AC  CFE1 F014          	movff	fsr1l,??_high_priority_int+9
 13453  0021B0  CFE2 F015          	movff	fsr1h,??_high_priority_int+10
 13454  0021B4  CFD9 F016          	movff	fsr2l,??_high_priority_int+11
 13455  0021B8  CFDA F017          	movff	fsr2h,??_high_priority_int+12
 13456  0021BC  CFF3 F018          	movff	prodl,??_high_priority_int+13
 13457  0021C0  CFF4 F019          	movff	prodh,??_high_priority_int+14
 13458  0021C4  CFF6 F01A          	movff	tblptrl,??_high_priority_int+15
 13459  0021C8  CFF7 F01B          	movff	tblptrh,??_high_priority_int+16
 13460  0021CC  CFF8 F01C          	movff	tblptru,??_high_priority_int+17
 13461  0021D0  CFF5 F01D          	movff	tablat,??_high_priority_int+18
 13462                           
 13463                           ;easat2_util_timer.c: 76: static unsigned int samples[100];
 13464                           ;easat2_util_timer.c: 77: static int sample_position = 0;
 13465                           ;easat2_util_timer.c: 78: static unsigned short long noise_mean_value = 32000;
 13466                           ;easat2_util_timer.c: 79: static unsigned int activation_thresold = 32000;
 13467                           ;easat2_util_timer.c: 80: static int times_thresold_exceeded = 0;
 13468                           ;easat2_util_timer.c: 81: static int cycles_transmitter_active = 0;
 13469                           ;easat2_util_timer.c: 82: static int is_transmitter_active = 0;
 13470                           ;easat2_util_timer.c: 84: static int valid_samples = 0;
 13471  0021D4  0E00               	movlw	0
 13472  0021D6  6E1F               	movwf	high_priority_int@sample+1,c
 13473  0021D8  0E00               	movlw	0
 13474  0021DA  6E1E               	movwf	high_priority_int@sample,c
 13475                           
 13476                           ;easat2_util_timer.c: 90: if (PIR1bits.TMR1IF) {
 13477  0021DC  A09E               	btfss	3998,0,c	;volatile
 13478  0021DE  D0D1               	goto	i2l233
 13479                           
 13480                           ;easat2_util_timer.c: 94: TMR1H = 0xEC;
 13481  0021E0  0EEC               	movlw	236
 13482  0021E2  6ECF               	movwf	4047,c	;volatile
 13483                           
 13484                           ;easat2_util_timer.c: 95: TMR1L = 0x77 ; 60535;
 13485  0021E4  0E77               	movlw	119
 13486  0021E6  6ECE               	movwf	4046,c	;volatile
 13487  0021E8  0004               	clrwdt		;# 
 13488                           
 13489                           ;easat2_util_timer.c: 112: tmr1_interrupt_number++;
 13490  0021EA  4A37               	infsnz	_tmr1_interrupt_number,f,c
 13491  0021EC  2A38               	incf	_tmr1_interrupt_number+1,f,c
 13492                           
 13493                           ;easat2_util_timer.c: 116: if (tmr1_interrupt_number == 50) {
 13494  0021EE  0E32               	movlw	50
 13495  0021F0  1837               	xorwf	_tmr1_interrupt_number,w,c
 13496  0021F2  1038               	iorwf	_tmr1_interrupt_number+1,w,c
 13497  0021F4  A4D8               	btfss	status,2,c
 13498  0021F6  D010               	goto	i2l4596
 13499                           
 13500                           ;easat2_util_timer.c: 119: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13501  0021F8  B883               	btfsc	3971,4,c	;volatile
 13502  0021FA  D003               	goto	i2u428_40
 13503  0021FC  6A0B               	clrf	??_high_priority_int& (0+255),c
 13504  0021FE  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13505  002200  D001               	goto	i2u429_48
 13506  002202                     i2u428_40:
 13507  002202  6A0B               	clrf	??_high_priority_int& (0+255),c
 13508  002204                     i2u429_48:
 13509  002204  3A0B               	swapf	??_high_priority_int,f,c
 13510  002206  5083               	movf	3971,w,c	;volatile
 13511  002208  180B               	xorwf	??_high_priority_int,w,c
 13512  00220A  0BEF               	andlw	-17
 13513  00220C  180B               	xorwf	??_high_priority_int,w,c
 13514  00220E  6E83               	movwf	3971,c	;volatile
 13515                           
 13516                           ;easat2_util_timer.c: 121: tmr1_interrupt_number = 0;
 13517  002210  0E00               	movlw	0
 13518  002212  6E38               	movwf	_tmr1_interrupt_number+1,c
 13519  002214  0E00               	movlw	0
 13520  002216  6E37               	movwf	_tmr1_interrupt_number,c
 13521  002218                     i2l4596:
 13522                           
 13523                           ;easat2_util_timer.c: 123: }
 13524                           ;easat2_util_timer.c: 127: if (valid_samples < 100) valid_samples++;
 13525  002218  BE2E               	btfsc	high_priority_int@valid_samples+1,7,c
 13526  00221A  D006               	goto	i2l4598
 13527  00221C  502E               	movf	high_priority_int@valid_samples+1,w,c
 13528  00221E  E106               	bnz	i2l4600
 13529  002220  0E64               	movlw	100
 13530  002222  5C2D               	subwf	high_priority_int@valid_samples,w,c
 13531  002224  B0D8               	btfsc	status,0,c
 13532  002226  D002               	goto	i2l4600
 13533  002228                     i2l4598:
 13534  002228  4A2D               	infsnz	high_priority_int@valid_samples,f,c
 13535  00222A  2A2E               	incf	high_priority_int@valid_samples+1,f,c
 13536  00222C                     i2l4600:
 13537                           
 13538                           ;easat2_util_timer.c: 140: ADCON0bits.CHS = 4;
 13539  00222C  94C2               	bcf	4034,2,c	;volatile
 13540  00222E  96C2               	bcf	4034,3,c	;volatile
 13541  002230  88C2               	bsf	4034,4,c	;volatile
 13542  002232  9AC2               	bcf	4034,5,c	;volatile
 13543  002234  9CC2               	bcf	4034,6,c	;volatile
 13544                           
 13545                           ;easat2_util_timer.c: 141: ADCON0bits.ADON = 1;
 13546  002236  80C2               	bsf	4034,0,c	;volatile
 13547                           
 13548                           ;easat2_util_timer.c: 142: PIR1bits.ADIF = 0;
 13549  002238  9C9E               	bcf	3998,6,c	;volatile
 13550                           
 13551                           ;easat2_util_timer.c: 144: ADCON0bits.GO = 1;
 13552  00223A  82C2               	bsf	4034,1,c	;volatile
 13553  00223C                     i2l221:
 13554  00223C  AC9E               	btfss	3998,6,c	;volatile
 13555  00223E  D7FE               	goto	i2l221
 13556                           
 13557                           ;easat2_util_timer.c: 147: sample = ADRES;
 13558  002240  CFC3 F01E          	movff	4035,high_priority_int@sample	;volatile
 13559  002244  CFC4 F01F          	movff	4036,high_priority_int@sample+1	;volatile
 13560                           
 13561                           ;easat2_util_timer.c: 149: PIR1bits.ADIF = 0;
 13562  002248  9C9E               	bcf	3998,6,c	;volatile
 13563                           
 13564                           ;easat2_util_timer.c: 150: ADCON0bits.ADON = 0;
 13565  00224A  90C2               	bcf	4034,0,c	;volatile
 13566                           
 13567                           ;easat2_util_timer.c: 152: if (is_transmitter_active) cycles_transmitter_active++;
 13568  00224C  502F               	movf	high_priority_int@is_transmitter_active,w,c
 13569  00224E  1030               	iorwf	high_priority_int@is_transmitter_active+1,w,c
 13570  002250  B4D8               	btfsc	status,2,c
 13571  002252  D002               	goto	i2l4612
 13572  002254  4A31               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13573  002256  2A32               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13574  002258                     i2l4612:
 13575                           
 13576                           ;easat2_util_timer.c: 157: if (sample > 128 && sample > activation_thresold) {
 13577  002258  501F               	movf	high_priority_int@sample+1,w,c
 13578  00225A  E104               	bnz	i2u433_40
 13579  00225C  0E81               	movlw	129
 13580  00225E  5C1E               	subwf	high_priority_int@sample,w,c
 13581  002260  A0D8               	btfss	status,0,c
 13582  002262  D01B               	goto	i2l4624
 13583  002264                     i2u433_40:
 13584  002264  501E               	movf	high_priority_int@sample,w,c
 13585  002266  5C3C               	subwf	high_priority_int@activation_thresold,w,c
 13586  002268  501F               	movf	high_priority_int@sample+1,w,c
 13587  00226A  583D               	subwfb	high_priority_int@activation_thresold+1,w,c
 13588  00226C  B0D8               	btfsc	status,0,c
 13589  00226E  D015               	goto	i2l4624
 13590                           
 13591                           ;easat2_util_timer.c: 159: times_thresold_exceeded++;
 13592  002270  4A33               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 13593  002272  2A34               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 13594                           
 13595                           ;easat2_util_timer.c: 161: if (times_thresold_exceeded == 200) {
 13596  002274  0EC8               	movlw	200
 13597  002276  1833               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 13598  002278  1034               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 13599  00227A  A4D8               	btfss	status,2,c
 13600  00227C  D081               	goto	i2l4658
 13601                           
 13602                           ;easat2_util_timer.c: 166: (PORTDbits.RD6) = 1;
 13603  00227E  8C83               	bsf	3971,6,c	;volatile
 13604                           
 13605                           ;easat2_util_timer.c: 168: is_transmitter_active = 1;
 13606  002280  0E00               	movlw	0
 13607  002282  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13608  002284  0E01               	movlw	1
 13609  002286  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13610                           
 13611                           ;easat2_util_timer.c: 169: cycles_transmitter_active = 0;
 13612  002288  0E00               	movlw	0
 13613  00228A  6E32               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13614  00228C  0E00               	movlw	0
 13615  00228E  6E31               	movwf	high_priority_int@cycles_transmitter_active,c
 13616                           
 13617                           ;easat2_util_timer.c: 171: times_thresold_exceeded = 0;
 13618  002290  0E00               	movlw	0
 13619  002292  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13620  002294  0E00               	movlw	0
 13621  002296  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13622                           
 13623                           ;easat2_util_timer.c: 173: }
 13624                           ;easat2_util_timer.c: 176: } else {
 13625  002298  D073               	goto	i2l4658
 13626  00229A                     i2l4624:
 13627                           
 13628                           ;easat2_util_timer.c: 178: times_thresold_exceeded = 0;
 13629  00229A  0E00               	movlw	0
 13630  00229C  6E34               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13631  00229E  0E00               	movlw	0
 13632  0022A0  6E33               	movwf	high_priority_int@times_thresold_exceeded,c
 13633                           
 13634                           ;easat2_util_timer.c: 180: if (cycles_transmitter_active == 12000) {
 13635  0022A2  0EE0               	movlw	224
 13636  0022A4  1831               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13637  0022A6  E109               	bnz	i2l4632
 13638  0022A8  0E2E               	movlw	46
 13639  0022AA  1832               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13640  0022AC  A4D8               	btfss	status,2,c
 13641  0022AE  D005               	goto	i2l4632
 13642                           
 13643                           ;easat2_util_timer.c: 182: (PORTDbits.RD6) = 0;
 13644  0022B0  9C83               	bcf	3971,6,c	;volatile
 13645                           
 13646                           ;easat2_util_timer.c: 183: is_transmitter_active = 0;
 13647  0022B2  0E00               	movlw	0
 13648  0022B4  6E30               	movwf	high_priority_int@is_transmitter_active+1,c
 13649  0022B6  0E00               	movlw	0
 13650  0022B8  6E2F               	movwf	high_priority_int@is_transmitter_active,c
 13651  0022BA                     i2l4632:
 13652                           
 13653                           ;easat2_util_timer.c: 184: }
 13654                           ;easat2_util_timer.c: 186: samples[sample_position++] = sample;
 13655  0022BA  90D8               	bcf	status,0,c
 13656  0022BC  3435               	rlcf	high_priority_int@sample_position,w,c
 13657  0022BE  6ED9               	movwf	fsr2l,c
 13658  0022C0  3436               	rlcf	high_priority_int@sample_position+1,w,c
 13659  0022C2  6EDA               	movwf	fsr2h,c
 13660  0022C4  0E00               	movlw	low high_priority_int@samples
 13661  0022C6  26D9               	addwf	fsr2l,f,c
 13662  0022C8  0E02               	movlw	high high_priority_int@samples
 13663  0022CA  22DA               	addwfc	fsr2h,f,c
 13664  0022CC  C01E  FFDE         	movff	high_priority_int@sample,postinc2
 13665  0022D0  C01F  FFDD         	movff	high_priority_int@sample+1,postdec2
 13666  0022D4  4A35               	infsnz	high_priority_int@sample_position,f,c
 13667  0022D6  2A36               	incf	high_priority_int@sample_position+1,f,c
 13668                           
 13669                           ;easat2_util_timer.c: 189: if (sample_position == 100) sample_position = 0;
 13670  0022D8  0E64               	movlw	100
 13671  0022DA  1835               	xorwf	high_priority_int@sample_position,w,c
 13672  0022DC  1036               	iorwf	high_priority_int@sample_position+1,w,c
 13673  0022DE  A4D8               	btfss	status,2,c
 13674  0022E0  D004               	goto	i2l4640
 13675  0022E2  0E00               	movlw	0
 13676  0022E4  6E36               	movwf	high_priority_int@sample_position+1,c
 13677  0022E6  0E00               	movlw	0
 13678  0022E8  6E35               	movwf	high_priority_int@sample_position,c
 13679  0022EA                     i2l4640:
 13680                           
 13681                           ;easat2_util_timer.c: 191: if (valid_samples == 100) {
 13682  0022EA  0E64               	movlw	100
 13683  0022EC  182D               	xorwf	high_priority_int@valid_samples,w,c
 13684  0022EE  102E               	iorwf	high_priority_int@valid_samples+1,w,c
 13685  0022F0  A4D8               	btfss	status,2,c
 13686  0022F2  D046               	goto	i2l4658
 13687                           
 13688                           ;easat2_util_timer.c: 194: noise_mean_value = 0;
 13689  0022F4  0E00               	movlw	0
 13690  0022F6  6E39               	movwf	high_priority_int@noise_mean_value,c
 13691  0022F8  0E00               	movlw	0
 13692  0022FA  6E3A               	movwf	high_priority_int@noise_mean_value+1,c
 13693  0022FC  0E00               	movlw	0
 13694  0022FE  6E3B               	movwf	high_priority_int@noise_mean_value+2,c
 13695                           
 13696                           ;easat2_util_timer.c: 196: for (int i = 0; i < 100; i++)
 13697  002300  0E00               	movlw	0
 13698  002302  6E21               	movwf	high_priority_int@i+1,c
 13699  002304  0E00               	movlw	0
 13700  002306  6E20               	movwf	high_priority_int@i,c
 13701  002308                     i2l4644:
 13702  002308  BE21               	btfsc	high_priority_int@i+1,7,c
 13703  00230A  D006               	goto	i2l4648
 13704  00230C  5021               	movf	high_priority_int@i+1,w,c
 13705  00230E  E11F               	bnz	i2l4654
 13706  002310  0E64               	movlw	100
 13707  002312  5C20               	subwf	high_priority_int@i,w,c
 13708  002314  B0D8               	btfsc	status,0,c
 13709  002316  D01B               	goto	i2l4654
 13710  002318                     i2l4648:
 13711                           
 13712                           ;easat2_util_timer.c: 197: noise_mean_value += samples[i];
 13713  002318  90D8               	bcf	status,0,c
 13714  00231A  3420               	rlcf	high_priority_int@i,w,c
 13715  00231C  6ED9               	movwf	fsr2l,c
 13716  00231E  3421               	rlcf	high_priority_int@i+1,w,c
 13717  002320  6EDA               	movwf	fsr2h,c
 13718  002322  0E00               	movlw	low high_priority_int@samples
 13719  002324  26D9               	addwf	fsr2l,f,c
 13720  002326  0E02               	movlw	high high_priority_int@samples
 13721  002328  22DA               	addwfc	fsr2h,f,c
 13722  00232A  CFDE F00B          	movff	postinc2,??_high_priority_int
 13723  00232E  CFDD F00C          	movff	postdec2,??_high_priority_int+1
 13724  002332  C00B  F00D         	movff	??_high_priority_int,??_high_priority_int+2
 13725  002336  C00C  F00E         	movff	??_high_priority_int+1,??_high_priority_int+3
 13726  00233A  6A0F               	clrf	(??_high_priority_int+4)& (0+255),c
 13727  00233C  500D               	movf	??_high_priority_int+2,w,c
 13728  00233E  2639               	addwf	high_priority_int@noise_mean_value,f,c
 13729  002340  500E               	movf	??_high_priority_int+3,w,c
 13730  002342  223A               	addwfc	high_priority_int@noise_mean_value+1,f,c
 13731  002344  500F               	movf	??_high_priority_int+4,w,c
 13732  002346  223B               	addwfc	high_priority_int@noise_mean_value+2,f,c
 13733  002348  4A20               	infsnz	high_priority_int@i,f,c
 13734  00234A  2A21               	incf	high_priority_int@i+1,f,c
 13735  00234C  D7DD               	goto	i2l4644
 13736  00234E                     i2l4654:
 13737                           
 13738                           ;easat2_util_timer.c: 200: noise_mean_value = (unsigned short long)(noise_mean_value / 1
      +                          00);
 13739  00234E  C039  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 13740  002352  C03A  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 13741  002356  C03B  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 13742  00235A  0E64               	movlw	100
 13743  00235C  6E04               	movwf	___ltdiv@divisor,c
 13744  00235E  0E00               	movlw	0
 13745  002360  6E05               	movwf	___ltdiv@divisor+1,c
 13746  002362  0E00               	movlw	0
 13747  002364  6E06               	movwf	___ltdiv@divisor+2,c
 13748  002366  EC23  F01B         	call	___ltdiv	;wreg free
 13749  00236A  C001  F039         	movff	?___ltdiv,high_priority_int@noise_mean_value
 13750  00236E  C002  F03A         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 13751  002372  C003  F03B         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 13752                           
 13753                           ;easat2_util_timer.c: 205: activation_thresold = noise_mean_value * 2;
 13754  002376  90D8               	bcf	status,0,c
 13755  002378  3439               	rlcf	high_priority_int@noise_mean_value,w,c
 13756  00237A  6E3C               	movwf	high_priority_int@activation_thresold,c
 13757  00237C  343A               	rlcf	high_priority_int@noise_mean_value+1,w,c
 13758  00237E  6E3D               	movwf	high_priority_int@activation_thresold+1,c
 13759  002380                     i2l4658:
 13760                           
 13761                           ;easat2_util_timer.c: 207: }
 13762                           ;easat2_util_timer.c: 209: }
 13763                           ;easat2_util_timer.c: 214: PIR1bits.TMR1IF = 0;
 13764  002380  909E               	bcf	3998,0,c	;volatile
 13765  002382                     i2l233:
 13766  002382  C01D  FFF5         	movff	??_high_priority_int+18,tablat
 13767  002386  C01C  FFF8         	movff	??_high_priority_int+17,tblptru
 13768  00238A  C01B  FFF7         	movff	??_high_priority_int+16,tblptrh
 13769  00238E  C01A  FFF6         	movff	??_high_priority_int+15,tblptrl
 13770  002392  C019  FFF4         	movff	??_high_priority_int+14,prodh
 13771  002396  C018  FFF3         	movff	??_high_priority_int+13,prodl
 13772  00239A  C017  FFDA         	movff	??_high_priority_int+12,fsr2h
 13773  00239E  C016  FFD9         	movff	??_high_priority_int+11,fsr2l
 13774  0023A2  C015  FFE2         	movff	??_high_priority_int+10,fsr1h
 13775  0023A6  C014  FFE1         	movff	??_high_priority_int+9,fsr1l
 13776  0023AA  C013  FFEA         	movff	??_high_priority_int+8,fsr0h
 13777  0023AE  C012  FFE9         	movff	??_high_priority_int+7,fsr0l
 13778  0023B2  C011  FFFB         	movff	??_high_priority_int+6,pclatu
 13779  0023B6  C010  FFFA         	movff	??_high_priority_int+5,pclath
 13780  0023BA  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13781  0023BC  0011               	retfie		f
 13782  0023BE                     __end_of_high_priority_int:
 13783                           	opt stack 0
 13784                           pclatu	equ	0xFFB
 13785                           pclath	equ	0xFFA
 13786                           tblptru	equ	0xFF8
 13787                           tblptrh	equ	0xFF7
 13788                           tblptrl	equ	0xFF6
 13789                           tablat	equ	0xFF5
 13790                           prodh	equ	0xFF4
 13791                           prodl	equ	0xFF3
 13792                           intcon	equ	0xFF2
 13793                           indf0	equ	0xFEF
 13794                           postinc0	equ	0xFEE
 13795                           fsr0h	equ	0xFEA
 13796                           fsr0l	equ	0xFE9
 13797                           wreg	equ	0xFE8
 13798                           indf1	equ	0xFE7
 13799                           postdec1	equ	0xFE5
 13800                           fsr1h	equ	0xFE2
 13801                           fsr1l	equ	0xFE1
 13802                           bsr	equ	0xFE0
 13803                           indf2	equ	0xFDF
 13804                           postinc2	equ	0xFDE
 13805                           postdec2	equ	0xFDD
 13806                           fsr2h	equ	0xFDA
 13807                           fsr2l	equ	0xFD9
 13808                           status	equ	0xFD8
 13809                           
 13810 ;; *************** function ___ltdiv *****************
 13811 ;; Defined at:
 13812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ltdiv.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;  dividend        3    0[COMRAM] unsigned um
 13815 ;;  divisor         3    3[COMRAM] unsigned um
 13816 ;; Auto vars:     Size  Location     Type
 13817 ;;  quotient        3    6[COMRAM] unsigned um
 13818 ;;  counter         1    9[COMRAM] unsigned char 
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  3    0[COMRAM] unsigned um
 13821 ;; Registers used:
 13822 ;;		wreg, status,2, status,0
 13823 ;; Tracked objects:
 13824 ;;		On entry : 0/0
 13825 ;;		On exit  : 0/0
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13828 ;;      Params:         6       0       0       0       0       0       0
 13829 ;;      Locals:         4       0       0       0       0       0       0
 13830 ;;      Temps:          0       0       0       0       0       0       0
 13831 ;;      Totals:        10       0       0       0       0       0       0
 13832 ;;Total ram usage:       10 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; This function calls:
 13835 ;;		Nothing
 13836 ;; This function is called by:
 13837 ;;		_high_priority_int
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           	psect	text56
 13842  003646                     __ptext56:
 13843                           	opt stack 0
 13844  003646                     ___ltdiv:
 13845                           	opt stack 21
 13846                           
 13847                           ;incstack = 0
 13848  003646  0E00               	movlw	0
 13849  003648  6E07               	movwf	___ltdiv@quotient,c
 13850  00364A  0E00               	movlw	0
 13851  00364C  6E08               	movwf	___ltdiv@quotient+1,c
 13852  00364E  0E00               	movlw	0
 13853  003650  6E09               	movwf	___ltdiv@quotient+2,c
 13854  003652  5004               	movf	___ltdiv@divisor,w,c
 13855  003654  1005               	iorwf	___ltdiv@divisor+1,w,c
 13856  003656  1006               	iorwf	___ltdiv@divisor+2,w,c
 13857  003658  B4D8               	btfsc	status,2,c
 13858  00365A  D023               	goto	i2l935
 13859  00365C  0E01               	movlw	1
 13860  00365E  6E0A               	movwf	___ltdiv@counter,c
 13861  003660  D005               	goto	i2l4566
 13862  003662                     i2l4564:
 13863  003662  90D8               	bcf	status,0,c
 13864  003664  3604               	rlcf	___ltdiv@divisor,f,c
 13865  003666  3605               	rlcf	___ltdiv@divisor+1,f,c
 13866  003668  3606               	rlcf	___ltdiv@divisor+2,f,c
 13867  00366A  2A0A               	incf	___ltdiv@counter,f,c
 13868  00366C                     i2l4566:
 13869  00366C  AE06               	btfss	___ltdiv@divisor+2,7,c
 13870  00366E  D7F9               	goto	i2l4564
 13871  003670                     i2l4568:
 13872  003670  90D8               	bcf	status,0,c
 13873  003672  3607               	rlcf	___ltdiv@quotient,f,c
 13874  003674  3608               	rlcf	___ltdiv@quotient+1,f,c
 13875  003676  3609               	rlcf	___ltdiv@quotient+2,f,c
 13876  003678  5004               	movf	___ltdiv@divisor,w,c
 13877  00367A  5C01               	subwf	___ltdiv@dividend,w,c
 13878  00367C  5005               	movf	___ltdiv@divisor+1,w,c
 13879  00367E  5802               	subwfb	___ltdiv@dividend+1,w,c
 13880  003680  5006               	movf	___ltdiv@divisor+2,w,c
 13881  003682  5803               	subwfb	___ltdiv@dividend+2,w,c
 13882  003684  A0D8               	btfss	status,0,c
 13883  003686  D007               	goto	i2l940
 13884  003688  5004               	movf	___ltdiv@divisor,w,c
 13885  00368A  5E01               	subwf	___ltdiv@dividend,f,c
 13886  00368C  5005               	movf	___ltdiv@divisor+1,w,c
 13887  00368E  5A02               	subwfb	___ltdiv@dividend+1,f,c
 13888  003690  5006               	movf	___ltdiv@divisor+2,w,c
 13889  003692  5A03               	subwfb	___ltdiv@dividend+2,f,c
 13890  003694  8007               	bsf	___ltdiv@quotient,0,c
 13891  003696                     i2l940:
 13892  003696  90D8               	bcf	status,0,c
 13893  003698  3206               	rrcf	___ltdiv@divisor+2,f,c
 13894  00369A  3205               	rrcf	___ltdiv@divisor+1,f,c
 13895  00369C  3204               	rrcf	___ltdiv@divisor,f,c
 13896  00369E  2E0A               	decfsz	___ltdiv@counter,f,c
 13897  0036A0  D7E7               	goto	i2l4568
 13898  0036A2                     i2l935:
 13899  0036A2  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 13900  0036A6  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13901  0036AA  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13902  0036AE  0012               	return		;funcret
 13903  0036B0                     __end_of___ltdiv:
 13904                           	opt stack 0
 13905                           pclatu	equ	0xFFB
 13906                           pclath	equ	0xFFA
 13907                           tblptru	equ	0xFF8
 13908                           tblptrh	equ	0xFF7
 13909                           tblptrl	equ	0xFF6
 13910                           tablat	equ	0xFF5
 13911                           prodh	equ	0xFF4
 13912                           prodl	equ	0xFF3
 13913                           intcon	equ	0xFF2
 13914                           indf0	equ	0xFEF
 13915                           postinc0	equ	0xFEE
 13916                           fsr0h	equ	0xFEA
 13917                           fsr0l	equ	0xFE9
 13918                           wreg	equ	0xFE8
 13919                           indf1	equ	0xFE7
 13920                           postdec1	equ	0xFE5
 13921                           fsr1h	equ	0xFE2
 13922                           fsr1l	equ	0xFE1
 13923                           bsr	equ	0xFE0
 13924                           indf2	equ	0xFDF
 13925                           postinc2	equ	0xFDE
 13926                           postdec2	equ	0xFDD
 13927                           fsr2h	equ	0xFDA
 13928                           fsr2l	equ	0xFD9
 13929                           status	equ	0xFD8
 13930                           pclatu	equ	0xFFB
 13931                           pclath	equ	0xFFA
 13932                           tblptru	equ	0xFF8
 13933                           tblptrh	equ	0xFF7
 13934                           tblptrl	equ	0xFF6
 13935                           tablat	equ	0xFF5
 13936                           prodh	equ	0xFF4
 13937                           prodl	equ	0xFF3
 13938                           intcon	equ	0xFF2
 13939                           indf0	equ	0xFEF
 13940                           postinc0	equ	0xFEE
 13941                           fsr0h	equ	0xFEA
 13942                           fsr0l	equ	0xFE9
 13943                           wreg	equ	0xFE8
 13944                           indf1	equ	0xFE7
 13945                           postdec1	equ	0xFE5
 13946                           fsr1h	equ	0xFE2
 13947                           fsr1l	equ	0xFE1
 13948                           bsr	equ	0xFE0
 13949                           indf2	equ	0xFDF
 13950                           postinc2	equ	0xFDE
 13951                           postdec2	equ	0xFDD
 13952                           fsr2h	equ	0xFDA
 13953                           fsr2l	equ	0xFD9
 13954                           status	equ	0xFD8
 13955                           
 13956                           	psect	rparam
 13957  0000                     pclatu	equ	0xFFB
 13958                           pclath	equ	0xFFA
 13959                           tblptru	equ	0xFF8
 13960                           tblptrh	equ	0xFF7
 13961                           tblptrl	equ	0xFF6
 13962                           tablat	equ	0xFF5
 13963                           prodh	equ	0xFF4
 13964                           prodl	equ	0xFF3
 13965                           intcon	equ	0xFF2
 13966                           indf0	equ	0xFEF
 13967                           postinc0	equ	0xFEE
 13968                           fsr0h	equ	0xFEA
 13969                           fsr0l	equ	0xFE9
 13970                           wreg	equ	0xFE8
 13971                           indf1	equ	0xFE7
 13972                           postdec1	equ	0xFE5
 13973                           fsr1h	equ	0xFE2
 13974                           fsr1l	equ	0xFE1
 13975                           bsr	equ	0xFE0
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           postdec2	equ	0xFDD
 13979                           fsr2h	equ	0xFDA
 13980                           fsr2l	equ	0xFD9
 13981                           status	equ	0xFD8
 13982                           
 13983                           	psect	temp
 13984  00003E                     btemp:
 13985                           	opt stack 0
 13986  00003E                     	ds	1
 13987  0000                     int$flags	set	btemp
 13988                           pclatu	equ	0xFFB
 13989                           pclath	equ	0xFFA
 13990                           tblptru	equ	0xFF8
 13991                           tblptrh	equ	0xFF7
 13992                           tblptrl	equ	0xFF6
 13993                           tablat	equ	0xFF5
 13994                           prodh	equ	0xFF4
 13995                           prodl	equ	0xFF3
 13996                           intcon	equ	0xFF2
 13997                           indf0	equ	0xFEF
 13998                           postinc0	equ	0xFEE
 13999                           fsr0h	equ	0xFEA
 14000                           fsr0l	equ	0xFE9
 14001                           wreg	equ	0xFE8
 14002                           indf1	equ	0xFE7
 14003                           postdec1	equ	0xFE5
 14004                           fsr1h	equ	0xFE2
 14005                           fsr1l	equ	0xFE1
 14006                           bsr	equ	0xFE0
 14007                           indf2	equ	0xFDF
 14008                           postinc2	equ	0xFDE
 14009                           postdec2	equ	0xFDD
 14010                           fsr2h	equ	0xFDA
 14011                           fsr2l	equ	0xFD9
 14012                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      61
    BANK0           160    134     134
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_mins
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134161
                         _initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  134161
                                            124 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             23 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             41 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             63 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             36 COMRAM     5     5      0
                                             19 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             33 COMRAM     3     3      0
                                             19 BANK0     18    16      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             19 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             37 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             36 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             41 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   74084
                                            114 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6832
                                             42 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5741
                                             38 COMRAM     4     4      0
                                             19 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     222
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     222
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             69 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             41 COMRAM     3     3      0
                                             29 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             35 COMRAM     4     4      0
                                             21 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             33 COMRAM     9     9      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             33 COMRAM     6     6      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             36 COMRAM     5     5      0
                                             22 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             38 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             33 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             48 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             51 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             33 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             33 COMRAM     3     3      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             33 COMRAM     2     2      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                      _io_initialize
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _io_initialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   23    23      0     426
                                             10 COMRAM    23    23      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (10) ___ltdiv                                            10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _io_initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3D       1       64.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259       9        0.0%
DATA                 0      0     259      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Apr 01 11:55:20 2017

                     util_onewire_read_byte@value 0093              high_priority_int@activation_thresold 003C  
                            util_getTemperature@i 01CC                                                l24 35BA  
                                              l26 3636                                      ___awdiv@sign 0025  
                                              bsr 000FE0                               ___wmul@multiplicand 007B  
                __end_of_util_beacon_transmission 2E88                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 009E  
                                    ___ftadd@exp2 009D                                      ___ftadd@sign 009C  
                                             l110 2FB0                                               l104 3144  
                                             l116 307A                                               l167 3A16  
                                             l344 3A8C                                               l337 3A58  
                                             l390 3B70                                               l396 3BA0  
                                             l807 20FE                                               l487 07A8  
                                             l760 2F48                                               l728 298E  
                                             l832 2830                                               l825 2784  
                                             l826 27C4                                               l818 2D40  
                                             l907 33DA                                               l917 35A8  
                                             l783 1F9C                                               l857 3BDC  
                                             l787 1FD6                                               l789 1FFE  
                                             l798 20D4                           ??_util_onewire_read_bit 0022  
                                    __CFG_CPB$OFF 000000                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13EA                   __size_of_util_timer1_initialize 0026  
                                    ___awmod@sign 0023                    ??_util_transmit_morse_sequence 0027  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0073  
                                    ___ftdiv@cntr 007F                                      ___ftdiv@sign 0084  
                                            l5020 3728                                              l5030 375E  
                                            l5120 273A                                              l5104 3C72  
                                            l5024 372E                                              l5210 2952  
                                            l5114 270A                                              l5026 3756  
                                            l5018 3722                                              l5220 297C  
                                            l6020 0FFE                                              l5222 2988  
                                            l5214 2962                                              l5150 27F4  
                                            l5054 1EEC                                              l5046 1E08  
                                            l6030 103A                                              l6014 0FDA  
                                            l6022 100A                                              l6006 0FAA  
                                            l5240 323E                                              l3536 2B2C  
                                            l5160 281E                                              l5400 3ACE  
                                            l5304 39CA                                              l3554 2BBE  
                                            l5170 2864                                              l5162 282A  
                                            l5154 2804                                              l5074 1622  
                                            l5402 3AD8                                              l6026 101E  
                                            l5236 3206                                              l4700 2F2C  
                                            l5228 3848                                              l3572 2C24  
                                            l3564 2BEE                                              l5260 3366  
                                            l5092 1872                                              l5068 155C  
                                            l5412 00DA                                              l5308 39DC  
                                            l5246 3282                                              l4702 2F3A  
                                            l3566 2BFE                                              l3558 2BD2  
                                            l5262 3374                                              l5190 28D0  
                                            l5086 17AC                                              l5078 1648  
                                            l5406 00BA                                              l6070 2E46  
                                            l3568 2C08                                              l5272 33CA  
                                            l5264 337A                                              l5280 3540  
                                            l5176 2886                                              l5504 04A6  
                                            l5432 01AA                                              l4720 3786  
                                            l4714 2F6E                                              l4810 208C  
                                            l5282 354E                                              l5610 093E  
                                            l5602 0916                                              l5522 0598  
                                            l5442 0216                                              l5418 010C  
                                            l5426 0182                                              l4722 378A  
                                            l6074 2E62                                              l6082 391C  
                                            l6234 3628                                              l4708 2F52  
                                            l4804 2064                                              l5284 3554  
                                            l4900 3418                                              l5604 0924  
                                            l5540 0634                                              l5524 059E  
                                            l5508 04D4                                              l5612 094C  
                                            l5436 01F0                                              l5700 38C2  
                                            l4806 2072                                              l5294 36B6  
                                            l5198 2920                                              l4910 3442  
                                            l5630 09BC                                              l5622 0990  
                                            l5550 0670                                              l5518 0532  
                                            l5454 026A                                              l5446 021C  
                                            l5438 0206                                              l5702 38C6  
                                            l5710 189C                                              l6078 3908  
                                            l5392 3B32                                              l4824 2128  
                                            l4816 20BA                                              l4808 2080  
                                            l5288 3598                                              l5296 36C4  
                                            l5552 0684                                              l5544 0656  
                                            l5536 05E4                                              l5480 0362  
                                            l5464 02B0                                              l5448 0250  
                                            l5704 38D6                                              l4752 3A7A  
                                            l4736 3A46                                              l5720 18F6  
                                            l5712 18AE                                              l4690 2EB6  
                                            l4834 2176                                              l4818 20C8  
                                            l4906 3432                                              l4922 347A  
                                            l4850 2A08                                              l5650 0A5A  
                                            l5642 0A02                                              l5706 38E0  
                                            l4666 3B94                                              l5730 1950  
                                            l5722 1908                                              l5714 18C0  
                                            l5396 3B42                                              l4692 2EC4  
                                            l4908 343C                                              l4844 29D4  
                                            l5628 09B6                                              l5580 07AC  
                                            l5556 06B0                                              l5548 0668  
                                            l5492 0400                                              l5740 19AA  
                                            l5732 1962                                              l5724 191A  
                                            l5716 18D2                                              l5812 2C9E  
                                            l4694 2EE8                                              l4686 2EA2  
                                            l4782 1FE4                                              l4926 3488  
                                            l4918 346E                                              l4950 34DC  
                                            l4942 34BA                                              l5670 0B12  
                                            l5662 0AC6                                              l5646 0A2A  
                                            l5574 0776                                              l5558 06B8  
                                            l5566 074E                                              l5494 0416  
                                            l4678 3B64                                              l5750 1A04  
                                            l5742 19BC                                              l5734 1974  
                                            l5726 192C                                              l5718 18E4  
                                            l5806 2C6A                                              l4776 1FAA  
                                            l4864 2A56                                              l5672 0B1E  
                                            l5664 0AD0                                              l5656 0A8E  
                                            l5592 082E                                              l5576 078A  
                                            l5568 075C                                              l5496 0446  
                                            l5488 03D2                                              l5760 1A5E  
                                            l5752 1A16                                              l5744 19CE  
                                            l5736 1986                                              l5728 193E  
                                            l5832 2CFE                                              l4698 2F08  
                                            l4962 351C                                              l4954 3500  
                                            l4946 34CC                                              l4938 34AA  
                                            l4874 2A94                                              l5690 0C06  
                                            l5498 045C                                              l5770 1AB8  
                                            l5762 1A70                                              l5754 1A28  
                                            l5746 19E0                                              l5738 1998  
                                            l4970 37E4                                              l4788 1FF4  
                                            l4948 34D6                                              l4868 2A74  
                                            l5684 0B72                                              l5668 0B08  
                                            l5588 07DC                                              l5692 0C1C  
                                            l5780 1B12                                              l5772 1ACA  
                                            l5764 1A82                                              l5756 1A3A  
                                            l5748 19F2                                              l4980 3808  
                                            l5940 0D6A                                              l5932 0D3C  
                                            l4798 2036                                              l4894 3404  
                                            l4958 350C                                              l4878 2AB2  
                                            l5678 0B44                                              l5694 0C3A  
                                            l5790 1B6C                                              l5782 1B24  
                                            l5774 1ADC                                              l5766 1A94  
                                            l5758 1A4C                                              l5854 3998  
                                            l4974 37F4                                              l4982 380C  
                                            l5926 0D12                                              l5688 0C00  
                                            l5792 1B7E                                              l5784 1B36  
                                            l5776 1AEE                                              l5768 1AA6  
                                            l4968 37DC                                              l5960 0E58  
                                            l5952 0DB0                                              l5936 0D50  
                                            l5786 1B48                                              l5778 1B00  
                                            l5962 0E62                                              l5946 0D8C  
                                            l5938 0D66                                              l5788 1B5A  
                                            l5796 1B84                                              l5980 0EF6  
                                            l5956 0E42                                              l5798 1C82  
                                            l5974 0EE4                                              l5966 0E78  
                                            l5984 0F0C                                              l5978 0EEC  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3121 2B08  
                                            u3140 2B52                                              u5000 3AAC  
                                            u3145 2B48                                              u5111 26EC  
                                            u5008 3AAE                                              u5131 271C  
                                            u6021 2C48                                              u4510 37AA  
                                            u5400 3968                                              u6041 2C7C  
                                            u4540 3A58                                              u4517 37A0  
                                            u5415 25CC                                              u4560 3A8C  
                                            u5408 396A                                              u4801 29E6  
                                            u5425 25EE                                              u4571 1F4A  
                                            u5435 2610                                              u4581 1F68  
                                            u5445 2632                                              u6407 3AB6  
                                            u5455 2434                                              u6184 0EA8  
                                            u6417 3B66                                              u5465 244A  
                                            u6185 0EA0                                              u6427 3B96  
                                            u5475 2460                                              u4781 29B2  
                                            u6357 3A10                                              u5590 02F6  
                                            u6367 3A1A                                              u6377 394C  
                                            u5595 02EA                                              u6387 3956  
                                            u5780 07A0                                              u6397 3972  
                        ??_util_onewire_read_byte 0075                                high_priority_int@i 0020  
                          __size_of_io_initialize 00B6                                      __CFG_WRTC$ON 000000  
                                    __CFG_WRTD$ON 000000                                              _main 3CAA  
                                    ___ftpack@arg 0071                                      ___ftpack@exp 0074  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 003E  
                                   __CFG_BORV$190 000000                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A6  
                                   __CFG_IESO$OFF 000000   __end_of_util_transmit_space_between_dots_dashes 3CAA  
__size_of_util_transmit_space_between_dots_dashes 0010         ??_util_transmit_space_between_dots_dashes 0025  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3C9A  
                                    _sprintf$2296 00B9                                      ___ftmul@cntr 0087  
                                    ___param_bank 000000                                      ___ftmul@sign 0088  
                                    ___fttol@exp1 009E                                      ___fttol@lval 009A  
                              _util_transmit_dash 3A5E                           util_getTemperature@sign 01A4  
                                           ?_main 0001               __end_of_util_waits_delay_hundred_us 3BBA  
                     _util_waits_delay_hundred_us 3B8A                                   __end_of___awdiv 3492  
                                           _ADRES 000FC3                                   __end_of___ftadd 219C  
                                           STR_10 7FD6                                             STR_11 7FCC  
                                           STR_12 7FB2                                             STR_20 7FF6  
                                           STR_13 7FE7                                             STR_21 7FD1  
                                           STR_22 7FA9                                             STR_14 7FFA  
                                           STR_30 7FAB                                             STR_15 7FA8  
                                           STR_23 7FEC                                             STR_31 7FB1  
                                           STR_24 7F92                                             STR_16 7FC0  
                                           STR_32 7FB7                                             STR_40 7F97  
                                           STR_17 7FA7                                             STR_25 7FE2  
                                           STR_33 7F91                                             STR_41 7FC3  
                                           STR_18 7FF0                                             STR_26 7FEB  
                                           STR_34 7FDB                                             STR_42 7F89  
                                           STR_19 7FE6                                             STR_27 7FE1  
                                           STR_35 7FD5                                             STR_43 7F90  
                                           STR_28 7FCA                                             STR_36 7FCF  
                                 __end_of___awmod 3526                                             STR_37 7FC9  
                                           STR_29 7FA5                                             STR_38 7FBD  
                                           STR_39 7F82                                   __end_of___ftdiv 2D76  
                                 __end_of___ftneg 3BEA                                   __end_of___lldiv 33EC  
                               ?_low_priority_int 0001                                   __end_of___ftmul 2AF2  
                                 ___awdiv@divisor 0077                                   __end_of___llmod 35BA  
                                 __end_of___ftsub 3872                                   __end_of___fttol 2C36  
                                 __end_of___ltdiv 36B0                       __size_of_util_onewire_reset 0042  
                                           i2l221 223C                                             i2l233 2382  
                                   __CFG_WDTEN$ON 000000                                             i2l940 3696  
                                           i2l935 36A2                                   ___awdiv@counter 0024  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0060  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0029                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 3046                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 0025  
                                 __end_of_dpowers 7F1D                                             _scale 13EA  
                                 __end_of_isdigit 3C7A                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0075                          ??_util_onewire_write_bit 0022  
                       util_waits_delay_secs@secs 0073                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
               high_priority_int@noise_mean_value 0039                                             status 000FD8  
                     __end_of_util_waits_delay_ms 3B8A                                   __end_of_sprintf 0C48  
                          _util_timer1_initialize 3C14                              ??_util_transmit_dash 0025  
                         util_waits_delay_hours@i 007A                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 3872                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3CB6                      __end_of_util_transmit_letter 1C88  
                                   _io_initialize 3286                                            ??_main 002D  
                                   ___fttol@sign1 0099                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 0168                        util_onewire_read_bit@value 0023  
                       util_getSolarCurrent@value 00A1                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0089                                  ___awdiv@dividend 0075  
                                __end_of___awtoft 39C0                                  __end_of___ftpack 2F7C  
                  high_priority_int@valid_samples 002D                                  __end_of___lltoft 3718  
                                          i2l4600 222C                                            i2l4612 2258  
                                          i2l4640 22EA                                            i2l4632 22BA  
                                          i2l4624 229A                                            i2l4564 3662  
                                          i2l4644 2308                                            i2l4566 366C  
                                          i2l4654 234E                                            i2l4568 3670  
                                          i2l4648 2318                                            i2l4658 2380  
                                          i2l4596 2218                                            i2l4598 2228  
                                __end_of___lwtoft 3C14                   __size_of_util_onewire_read_byte 0194  
               __size_of_util_beacon_transmission 0112                         ?_util_beacon_transmission 00D2  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F44  
                        ?_util_onewire_write_byte 0073                                            ___ftge 31CE  
                      util_onewire_read_byte@bit0 0083                        util_onewire_read_byte@bit1 0085  
                      util_onewire_read_byte@bit2 0087                        util_onewire_read_byte@bit3 0089  
                      util_onewire_read_byte@bit4 008B                        util_onewire_read_byte@bit5 008D  
                      util_onewire_read_byte@bit6 008F                        util_onewire_read_byte@bit7 0091  
                         ??_util_waits_delay_mins 002A                           ??_util_waits_delay_secs 0025  
                                          ___wmul 3AF6                                         ??___awdiv 0024  
                                       ??___ftadd 0099                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 0022                                         ??___ftdiv 0026  
                                       ??___ftneg 0022                                         ??___lldiv 0022  
                                       ??___ftmul 002A                                         ??___llmod 0027  
                                       ??___ftsub 002D                                         ??___fttol 0094  
                                       ??___ltdiv 0007                       util_onewire_write_byte@bit0 0075  
                     util_onewire_write_byte@bit1 0077                       util_onewire_write_byte@bit2 0079  
                     util_onewire_write_byte@bit3 007B                       util_onewire_write_byte@bit4 007D  
                     util_onewire_write_byte@bit5 007F                       util_onewire_write_byte@bit6 0081  
                     util_onewire_write_byte@bit7 0083                                    ?_io_initialize 0001  
                                          _memset 3B28                                            _fround 1C88  
                                          clear_0 3898                                            clear_1 38A4  
                                ___awdiv@quotient 0026                                   ___awmod@divisor 0073  
                                 ___awmod@counter 0022                       util_waits_delay_hours@hours 0077  
                                          _strcat 38B8                                            _strcpy 3AC4  
                                          _strlen 377C                             ___ftmul@f3_as_product 0084  
                                    __pdataCOMRAM 0039                                         ??_isdigit 0022  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00B3                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 002D                   __size_of_util_onewire_write_bit 0034  
                                      __accesstop 0060                           __end_of__initialization 38AA  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 0093  
                                      ___ftadd@f2 0096                                        ___ftge@ff1 0071  
                                      ___ftge@ff2 0074                                     ___rparam_used 000001  
                                      ___ftdiv@f1 0079                                        ___ftdiv@f2 007C  
                                      ___ftdiv@f3 0080                          ??_util_getBatteryVoltage 002D  
                                      ___ftneg@f1 0071                                        ___awtoft@c 0076  
                                      ___ftmul@f1 007D                                        ___ftmul@f2 0080  
                                      ___ftsub@f1 009F                                        ___ftsub@f2 00A2  
                                      ___fttol@f1 0090                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 2F7C                                        ___lltoft@c 0076  
                        main_loop@battery_current 00E1                                     __end_of_scale 1898  
                          _util_onewire_read_byte 23BE                                        ___lwtoft@c 0076  
                                      __div_to_l_ 2842                          main_loop@battery_voltage 00E3  
                  __size_of_util_onewire_read_bit 0032                     __end_of_util_onewire_read_bit 3AC4  
                                 __div_to_l_@exp1 0027                                   __div_to_l_@cntr 0026  
                                         ??_scale 002D                                   __div_to_l_@quot 0022  
                                    sprintf@width 00C0         __end_of_util_transmit_space_between_words 3C8A  
      __size_of_util_transmit_space_between_words 0010               ??_util_transmit_space_between_words 0025  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 3C7A  
                                      __pbssBANK2 0200                                __size_of_main_loop 008C  
                                 __CFG_PLLCFG$OFF 000000                              _util_transmit_letter 1898  
                                   __div_to_l_@f1 0071                                     __div_to_l_@f2 0074  
                              __CFG_CCP2MX$PORTC1 000000                             ?_util_getSolarCurrent 009F  
                                         ?___ftge 0071                                   ??_io_initialize 0022  
                    util_onewire_write_bit@bit_in 0071                                           ?___wmul 0079  
                high_priority_int@sample_position 0035                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 39F6                                           ?_memset 0071  
                                         ?_fround 0089                                         ?___awtoft 0076  
                                       ?___ftpack 0071                                 _high_priority_int 0008  
                                       ?___lltoft 0076                                           ?_strcat 0071  
                                         ?_strcpy 0071                                           ?_strlen 0071  
                                       ?___lwtoft 0076                                ?_high_priority_int 0001  
                             ??_high_priority_int 000B                      __size_of_util_getTemperature 07A2  
                         ?_util_timer1_initialize 0001                             ?_util_transmit_letter 0001  
            __size_of_util_waits_delay_hundred_us 0030                   __size_of_util_getBatteryCurrent 00CA  
                       __size_of_low_priority_int 008E                              util_waits_delay_ms@i 0023  
                    util_waits_delay_mins@minutes 0075                                   __CFG_PWRTEN$OFF 000000  
                               __end_of__npowers_ 7F6B                                           __Hparam 0000  
                 __size_of_util_getBatteryVoltage 00BE                                        _scale$2295 008C  
            __end_of_util_transmit_morse_sequence 377C             __size_of_util_transmit_morse_sequence 0064  
                    _util_transmit_morse_sequence 3718                                           __Lparam 0000  
                      util_getTemperature@bit_mem 0100       __end_of_util_transmit_space_between_letters 3C9A  
    __size_of_util_transmit_space_between_letters 0010             ??_util_transmit_space_between_letters 0025  
            ?_util_transmit_space_between_letters 0001               _util_transmit_space_between_letters 3C8A  
                                 __size_of___ftge 00B8                                           ___awdiv 33EC  
                                         ___ftadd 1F34                                           ___awmod 3492  
                                         ___ftdiv 2C36                                           ___ftneg 3BBA  
                                         ___lldiv 333C                                   __size_of___wmul 0032  
                                         ___ftmul 29A0                          ??_util_waits_delay_hours 0079  
                                         ___llmod 3526                                           ___ftsub 3826  
                     util_getTemperature@byte_mem 0190                                           ___fttol 2AF2  
                                         ___ltdiv 3646                         __end_of_high_priority_int 23BE  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 3980  
                               __end_of_main_loop 3646                                           __pcinit 3872  
                                      ??___awtoft 0025                                        ??___ftpack 0022  
                                 __size_of_memset 0032                                   __size_of_fround 02AC  
                                         __ramtop 0600                                        _initialize 3CB6  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0025  
                                         __ptext0 3CAA                                           __ptext1 35BA  
                                         __ptext2 38FC                                           __ptext3 39C0  
                                         __ptext4 0C48                                           __ptext5 37D2  
                                         __ptext6 2552                                           __ptext7 39F6  
                                         __ptext8 393E                                           __ptext9 23BE  
                                      ??___lwtoft 0025                                   __size_of_strcat 0044  
                                 __size_of_strcpy 0032                                   __size_of_strlen 0056  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0071  
                                         _dpowers 7EF5                       util_getTemperature@num_byte 01C5  
                                         _isdigit 3C5C                                  ___awmod@dividend 0071  
                    util_onewire_write_byte@value 0073                  ??_util_transmit_buzzer_1ms_cycle 0025  
                 ?_util_transmit_buzzer_1ms_cycle 0001                    __end_of_util_timer1_initialize 3C3A  
                            main_loop@temperature 00DC                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0029                                    __pintcode_body 219C  
                            end_of_initialization 38AA                      util_waits_delay_hundred_us@i 0023  
                                         memset@c 0073                                           memset@n 0075  
                                         memset@p 0022                                     __Lmediumconst 7EF4  
                                         int_func 219C                       __size_of_util_transmit_dash 0034  
                                 ___lldiv@divisor 0075                                  ___ltdiv@dividend 0001  
                          ??_util_getSolarCurrent 002D                                   ___lldiv@counter 0026  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 0030                                           postinc0 000FEE  
                                         postinc2 000FDE             util_beacon_transmission@solar_current 00D5  
                  __size_of_util_waits_delay_mins 0036                                    __tdiv_to_l_@f1 0071  
                                  __tdiv_to_l_@f2 0074                    __size_of_util_waits_delay_secs 0054  
                   __end_of_util_waits_delay_mins 39F6                            _util_getBatteryCurrent 3046  
                   __end_of_util_waits_delay_secs 3826                                           strlen@s 0071  
                                   ??__tdiv_to_l_ 0022                                         _PORTAbits 000F80  
                                       _PORTDbits 000F83                           high_priority_int@sample 001E  
                          _util_getBatteryVoltage 3110                  __size_of_util_onewire_write_byte 0188  
                        _util_getTemperature$2290 01AA                          _util_getTemperature$2291 01AD  
                        _util_getTemperature$2292 01B0                          _util_getTemperature$2289 01A7  
                                       _TRISAbits 000F92                                         _TRISBbits 000F93  
                                       _TRISDbits 000F95                                  ___ltdiv@quotient 0007  
                          ??_util_transmit_letter 002B                                       ___ftdiv@exp 0083  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 015E  
                                     ___ftmul@exp 0083                           ?_util_onewire_read_byte 0073  
                               _util_transmit_dot 3A2A                        __size_of_high_priority_int 23B6  
                                  __end_of___ftge 3286                   __size_of_util_waits_delay_hours 0042  
                                  __end_of___wmul 3B28                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 3CC0                                       ?_initialize 0001  
                                  __end_of_memset 3B5A                                    __end_of_fround 1F34  
                                  __end_of_strcat 38FC                                    __end_of_strcpy 3AF6  
                                  __end_of_strlen 37D2                 util_waits_delay_hundred_us@hun_us 0071  
                             start_initialization 3872                               ??_util_transmit_dot 0025  
                          util_waits_delay_mins@i 002B                            util_waits_delay_secs@i 0026  
                          util_waits_delay_secs@j 0028                               __end_of__tdiv_to_l_ 2842  
                        _util_beacon_transmission 2D76               util_beacon_transmission@temperature 00D9  
                                _low_priority_int 0018                                   ___llmod@divisor 007D  
                                 ___llmod@counter 0027                               util_transmit_dash@i 0025  
                  __end_of_util_onewire_read_byte 2552                         __end_of_util_transmit_dot 3A5E  
                         ?_util_onewire_write_bit 0071                                          ??___ftge 0022  
                                        ??___wmul 0028                               _util_getTemperature 0C48  
                                        ??_memset 0022                                          ??_fround 002D  
                                   sprintf@tmpval 00C2                                          ??_strcat 0022  
                                        ??_strcpy 0022                                          ??_strlen 0022  
                    ?_util_waits_delay_hundred_us 0071                                        fround@prec 0092  
                               __size_of___awtoft 0040                                 __size_of___ftpack 00F4  
                               __size_of___lltoft 0068                                       __pbssCOMRAM 002D  
                               __size_of___lwtoft 002A                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 0100                                      _isdigit$1935 0023  
                           _util_onewire_read_bit 3A92                              ?_util_getTemperature 009F  
                          _util_waits_delay_hours 38FC                 util_getTemperature@shift_reg_bit0 01B3  
               util_getTemperature@shift_reg_bit1 01B5                 util_getTemperature@shift_reg_bit2 01B7  
               util_getTemperature@shift_reg_bit3 01B9                 util_getTemperature@shift_reg_bit4 01BB  
               util_getTemperature@shift_reg_bit5 01BD                 util_getTemperature@shift_reg_bit6 01BF  
               util_getTemperature@shift_reg_bit7 01C1            util_beacon_transmission@BEACON_MESSAGE 0100  
                                     sprintf@flag 00BE                                       sprintf@fval 00CC  
           util_getTemperature@shift_reg_bit_temp 01C3                                       sprintf@prec 00CF  
                             __size_of_initialize 000A                    __end_of_util_onewire_write_bit 3A2A  
                                       __pintcode 0008                                     __pmediumconst 7EF4  
                                        ?___awdiv 0075                                          ?___ftadd 0093  
                                        ?___awmod 0071                                          ?___ftdiv 0079  
                                        ?___ftneg 0071                                          ?___lldiv 0071  
                                        ?___ftmul 007D                                          ?___llmod 0079  
                                        ?___ftsub 009F                                         __npowers_ 7F44  
                                        ?___fttol 0090                                          ?___ltdiv 0001  
                           __end_of_io_initialize 333C                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 26DA  
                                    ??__div_to_l_ 0022                           _util_onewire_write_byte 2552  
                                        ?_isdigit 0001                                         _main_loop 35BA  
                   ??_util_waits_delay_hundred_us 0022        high_priority_int@cycles_transmitter_active 0031  
                             _util_waits_delay_ms 3B5A                             ??_util_getTemperature 00A2  
                              _util_onewire_reset 393E                                          ?_sprintf 00A5  
                                  __size_of_scale 04AE                       util_getBatteryVoltage@value 008C  
                                  ___wmul@product 0028                                          _LATAbits 000F89  
                                        _LATBbits 000F8A                                          _LATDbits 000F8C  
                             ?_util_onewire_reset 0071                                          _IPR1bits 000F9F  
                                        _PIE1bits 000F9D                        __size_of_util_transmit_dot 0034  
                                        i2u433_40 2264                                   ___ltdiv@divisor 0004  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 29A0  
                                        i2u428_40 2202                                          i2u429_48 2204  
          __end_of_util_transmit_buzzer_1ms_cycle 3C5C           __size_of_util_transmit_buzzer_1ms_cycle 0022  
                  _util_transmit_buzzer_1ms_cycle 3C3A                           ?_util_getBatteryCurrent 009F  
                                 ___ltdiv@counter 000A                                          _RCONbits 000FD0  
                                __CFG_WDTPS$32768 000000                              ?_util_waits_delay_ms 0071  
         util_beacon_transmission@battery_current 00D7                           ?_util_getBatteryVoltage 0089  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0079  
                            ??_util_onewire_reset 0022                        util_transmit_letter@letter 002B  
                                      ?_main_loop 0001           util_beacon_transmission@battery_voltage 00D2  
                          ?_util_onewire_read_bit 0071                       util_getBatteryCurrent@value 00A1  
                                       copy_data0 3886                             util_waits_delay_ms@ms 0071  
                      __end_of_util_transmit_dash 3A92            high_priority_int@is_transmitter_active 002F  
                  __end_of_util_getBatteryCurrent 3110                                          __Hrparam 0000  
                              util_transmit_dot@i 0025                                          __Lrparam 0000  
                           ??_util_waits_delay_ms 0022                     __size_of_util_getSolarCurrent 00CA  
                               __CFG_P2BMX$PORTC0 000000                    __end_of_util_getBatteryVoltage 31CE  
                                __size_of___awdiv 00A6                                  __size_of___ftadd 0268  
                                __size_of___awmod 0094                                  __size_of___ftdiv 0140  
                                __size_of___ftneg 0030                                  __size_of___lldiv 00B0  
                                __size_of___ftmul 0152                         ??_util_onewire_write_byte 0022  
                                __size_of___llmod 0094                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                                  __size_of___ltdiv 006A  
                                    ??_initialize 0022                                          ___awtoft 3980  
                                        ___ftpack 2E88                                       _fround$2293 008F  
                                     _fround$2294 008C                          __end_of_low_priority_int 00A6  
                                        ___lltoft 36B0                        ??_util_beacon_transmission 002D  
                           _util_waits_delay_mins 39C0                             _util_waits_delay_secs 37D2  
                                      _ANSELAbits 000F38                                          ___lwtoft 3BEA  
                                      _ANSELBbits 000F39                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00CA                                        sprintf@val 00C6  
                                      strcat@from 0073                                  __size_of_isdigit 001E  
                                        __ptext10 3A92                                          __ptext11 2C36  
                                        __ptext20 3C8A                                          __ptext12 3980  
                                        __ptext21 3718                                          __ptext13 2F7C  
                                        __ptext30 38B8                                          __ptext22 3C9A  
                                        __ptext14 3110                                          __ptext31 00AA  
                                        __ptext23 3A2A                                          __ptext15 3046  
                                        __ptext40 2842                                          __ptext32 13EA  
                                        __ptext24 3A5E                                          __ptext16 3BEA  
                                        __ptext41 36B0                                          __ptext33 3C5C  
                                        __ptext25 3B5A                                          __ptext17 2D76  
                                        __ptext50 3B28                                          __ptext42 3526  
                                        __ptext34 1C88                                          __ptext26 3C3A  
                                        __ptext18 1898                                          __ptext51 3CB6  
                                        __ptext43 333C                                          __ptext35 3AF6  
                                        __ptext27 3B8A                                          __ptext19 3C7A  
                                        __ptext52 3C14                                          __ptext44 2AF2  
                                        __ptext36 29A0                                          __ptext28 377C  
                                        __ptext53 3286                                          __ptext45 3826  
                                        __ptext37 3492                                          __ptext29 3AC4  
                                        __ptext46 1F34                                          __ptext38 33EC  
                                        __ptext47 2E88                                          __ptext39 26DA  
                                        __ptext56 3646                                          __ptext48 3BBA  
                                        __ptext49 31CE                                          __powers_ 7F1D  
                                __size_of_sprintf 0B9E                                        strcpy@from 0073  
                   __size_of_util_transmit_letter 03F0                  util_getSolarCurrent@solarCurrent 00A4  
                                   __size_of_main 000C                        util_onewire_reset@presence 0023  
                              __end_of_initialize 3CC0                                          int$flags 003E  
                   ?_util_transmit_morse_sequence 0073                     util_getBatteryVoltage@voltage 008F  
                           _tmr1_interrupt_number 0037                          ??_util_timer1_initialize 0022  
                                     ??_main_loop 002D                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0077                                          isdigit@c 0024  
                                        memset@p1 0071                            main_loop@solar_current 00DF  
                                        scale@scl 008F                   __end_of_util_onewire_write_byte 26DA  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00BC                                  __tdiv_to_l_@exp1 002A  
                                __tdiv_to_l_@cntr 0029                                         sprintf@sp 00A5  
                                __tdiv_to_l_@quot 0025                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 0071                            ?_util_waits_delay_mins 0075  
                          ?_util_waits_delay_secs 0073                                      ?__tdiv_to_l_ 0071  
                                        sprintf@c 00D1                                          sprintf@f 00A7  
                                        strcat@cp 0022                                          strcat@to 0071  
                  __end_of_util_waits_delay_hours 393E                                  ___lldiv@quotient 0022  
                                        strcpy@cp 0022                                          strlen@cp 0024  
                                        strcpy@to 0071                                 __CFG_T3CMX$PORTB5 000000  
                        high_priority_int@samples 0200          high_priority_int@times_thresold_exceeded 0033  
            util_getBatteryCurrent@batteryCurrent 00A4  
