

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 14 13:50:31 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 1.41
    79                           ; Generated 25/01/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F45K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  003C34                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for high_priority_int@noise_avg_value
   118  003C34  00                 	db	0
   119  003C35  7D                 	db	125
   120  003C36  00                 	db	0
   121                           
   122                           ;initializer for high_priority_int@activation_threshold
   123  003C37  7D00               	dw	32000
   124                           
   125                           	psect	mediumconst
   126  007EF4                     __pmediumconst:
   127                           	opt stack 0
   128  007EF4  00                 	db	0
   129  007EF5                     _dpowers:
   130                           	opt stack 0
   131  007EF5  0001               	dw	1
   132  007EF7  0000               	dw	0
   133  007EF9  000A               	dw	10
   134  007EFB  0000               	dw	0
   135  007EFD  0064               	dw	100
   136  007EFF  0000               	dw	0
   137  007F01  03E8               	dw	1000
   138  007F03  0000               	dw	0
   139  007F05  2710               	dw	10000
   140  007F07  0000               	dw	0
   141  007F09  86A0               	dw	34464
   142  007F0B  0001               	dw	1
   143  007F0D  4240               	dw	16960
   144  007F0F  000F               	dw	15
   145  007F11  9680               	dw	38528
   146  007F13  0098               	dw	152
   147  007F15  E100               	dw	57600
   148  007F17  05F5               	dw	1525
   149  007F19  CA00               	dw	51712
   150  007F1B  3B9A               	dw	15258
   151  007F1D                     __end_of_dpowers:
   152                           	opt stack 0
   153  007F1D                     __powers_:
   154                           	opt stack 0
   155  007F1D  00                 	db	0
   156  007F1E  80                 	db	128
   157  007F1F  3F                 	db	63
   158  007F20  00                 	db	0
   159  007F21  20                 	db	32
   160  007F22  41                 	db	65
   161  007F23  00                 	db	0
   162  007F24  C8                 	db	200
   163  007F25  42                 	db	66
   164  007F26  00                 	db	0
   165  007F27  7A                 	db	122
   166  007F28  44                 	db	68
   167  007F29  40                 	db	64
   168  007F2A  1C                 	db	28
   169  007F2B  46                 	db	70
   170  007F2C  50                 	db	80
   171  007F2D  C3                 	db	195
   172  007F2E  47                 	db	71
   173  007F2F  24                 	db	36
   174  007F30  74                 	db	116
   175  007F31  49                 	db	73
   176  007F32  97                 	db	151
   177  007F33  18                 	db	24
   178  007F34  4B                 	db	75
   179  007F35  BC                 	db	188
   180  007F36  BE                 	db	190
   181  007F37  4C                 	db	76
   182  007F38  6B                 	db	107
   183  007F39  6E                 	db	110
   184  007F3A  4E                 	db	78
   185  007F3B  03                 	db	3
   186  007F3C  15                 	db	21
   187  007F3D  50                 	db	80
   188  007F3E  79                 	db	121
   189  007F3F  AD                 	db	173
   190  007F40  60                 	db	96
   191  007F41  F3                 	db	243
   192  007F42  49                 	db	73
   193  007F43  71                 	db	113
   194  007F44                     __end_of__powers_:
   195                           	opt stack 0
   196  007F44                     __npowers_:
   197                           	opt stack 0
   198  007F44  00                 	db	0
   199  007F45  80                 	db	128
   200  007F46  3F                 	db	63
   201  007F47  CD                 	db	205
   202  007F48  CC                 	db	204
   203  007F49  3D                 	db	61
   204  007F4A  D7                 	db	215
   205  007F4B  23                 	db	35
   206  007F4C  3C                 	db	60
   207  007F4D  12                 	db	18
   208  007F4E  83                 	db	131
   209  007F4F  3A                 	db	58
   210  007F50  B7                 	db	183
   211  007F51  D1                 	db	209
   212  007F52  38                 	db	56
   213  007F53  C6                 	db	198
   214  007F54  27                 	db	39
   215  007F55  37                 	db	55
   216  007F56  38                 	db	56
   217  007F57  86                 	db	134
   218  007F58  35                 	db	53
   219  007F59  C0                 	db	192
   220  007F5A  D6                 	db	214
   221  007F5B  33                 	db	51
   222  007F5C  CC                 	db	204
   223  007F5D  2B                 	db	43
   224  007F5E  32                 	db	50
   225  007F5F  70                 	db	112
   226  007F60  89                 	db	137
   227  007F61  30                 	db	48
   228  007F62  E7                 	db	231
   229  007F63  DB                 	db	219
   230  007F64  2E                 	db	46
   231  007F65  E5                 	db	229
   232  007F66  3C                 	db	60
   233  007F67  1E                 	db	30
   234  007F68  42                 	db	66
   235  007F69  A2                 	db	162
   236  007F6A  0D                 	db	13
   237  007F6B                     __end_of__npowers_:
   238                           	opt stack 0
   239  0000                     _CCPTMRS0bits	set	3913
   240  0000                     _ANSELDbits	set	3899
   241  0000                     _ANSELBbits	set	3897
   242  0000                     _ANSELAbits	set	3896
   243  0000                     _VREFCON0bits	set	3906
   244  0000                     _ADRES	set	4035
   245  0000                     _PORTBbits	set	3969
   246  0000                     _TMR2	set	4028
   247  0000                     _IPR1bits	set	3999
   248  0000                     _PIE1bits	set	3997
   249  0000                     _TMR1L	set	4046
   250  0000                     _TMR1H	set	4047
   251  0000                     _T1CONbits	set	4045
   252  0000                     _RCONbits	set	4048
   253  0000                     _T2CONbits	set	4026
   254  0000                     _CCPR2L	set	3943
   255  0000                     _PSTR2CONbits	set	3939
   256  0000                     _CCP2CONbits	set	3942
   257  0000                     _PR2	set	4027
   258  0000                     _PORTAbits	set	3968
   259  0000                     _INTCONbits	set	4082
   260  0000                     _PIR1bits	set	3998
   261  0000                     _ADCON0bits	set	4034
   262  0000                     _LATDbits	set	3980
   263  0000                     _TRISDbits	set	3989
   264  0000                     _LATBbits	set	3978
   265  0000                     _TRISBbits	set	3987
   266  0000                     _WPUB	set	3937
   267  0000                     _LATAbits	set	3977
   268  0000                     _TRISAbits	set	3986
   269  0000                     _ADCON2	set	4032
   270  0000                     _ADCON1	set	4033
   271  0000                     _PORTDbits	set	3971
   272  0000                     _RBPU	set	32655
   273  007F6B                     STR_2:
   274  007F6B  20                 	db	32
   275  007F6C  25                 	db	37
   276  007F6D  2E                 	db	46
   277  007F6E  31                 	db	49	;'1'
   278  007F6F  66                 	db	102	;'f'
   279  007F70  20                 	db	32
   280  007F71  25                 	db	37
   281  007F72  2E                 	db	46
   282  007F73  31                 	db	49	;'1'
   283  007F74  66                 	db	102	;'f'
   284  007F75  20                 	db	32
   285  007F76  25                 	db	37
   286  007F77  33                 	db	51	;'3'
   287  007F78  2E                 	db	46
   288  007F79  30                 	db	48	;'0'
   289  007F7A  64                 	db	100	;'d'
   290  007F7B  20                 	db	32
   291  007F7C  25                 	db	37
   292  007F7D  33                 	db	51	;'3'
   293  007F7E  2E                 	db	46
   294  007F7F  30                 	db	48	;'0'
   295  007F80  64                 	db	100	;'d'
   296  007F81  00                 	db	0
   297  007F82                     STR_39:
   298  007F82  2D                 	db	45
   299  007F83  2D                 	db	45
   300  007F84  2E                 	db	46
   301  007F85  2E                 	db	46
   302  007F86  2D                 	db	45
   303  007F87  2D                 	db	45
   304  007F88  00                 	db	0
   305  007F89                     STR_42:
   306  007F89  2E                 	db	46
   307  007F8A  2D                 	db	45
   308  007F8B  2E                 	db	46
   309  007F8C  2D                 	db	45
   310  007F8D  2E                 	db	46
   311  007F8E  2D                 	db	45
   312  007F8F  00                 	db	0
   313  007F90                     STR_43:
   314  007F90  2D                 	db	45
   315  007F91  2E                 	db	46
   316  007F92  2E                 	db	46
   317  007F93  2E                 	db	46
   318  007F94  2E                 	db	46
   319  007F95  2D                 	db	45
   320  007F96  00                 	db	0
   321  007F97                     STR_40:
   322  007F97  2E                 	db	46
   323  007F98  2E                 	db	46
   324  007F99  2D                 	db	45
   325  007F9A  2D                 	db	45
   326  007F9B  2E                 	db	46
   327  007F9C  2E                 	db	46
   328  007F9D  00                 	db	0
   329  007F9E                     STR_1:
   330  007F9E  45                 	db	69	;'E'
   331  007F9F  41                 	db	65	;'A'
   332  007FA0  53                 	db	83	;'S'
   333  007FA1  41                 	db	65	;'A'
   334  007FA2  54                 	db	84	;'T'
   335  007FA3  32                 	db	50	;'2'
   336  007FA4  00                 	db	0
   337  007FA5                     STR_29:
   338  007FA5  2D                 	db	45
   339  007FA6  2D                 	db	45
   340  007FA7  2D                 	db	45
   341  007FA8  2D                 	db	45
   342  007FA9  2D                 	db	45
   343  007FAA  00                 	db	0
   344  007FAB                     STR_30:
   345  007FAB  2E                 	db	46
   346  007FAC  2D                 	db	45
   347  007FAD  2D                 	db	45
   348  007FAE  2D                 	db	45
   349  007FAF  2D                 	db	45
   350  007FB0  00                 	db	0
   351  007FB1                     STR_31:
   352  007FB1  2E                 	db	46
   353  007FB2  2E                 	db	46
   354  007FB3  2D                 	db	45
   355  007FB4  2D                 	db	45
   356  007FB5  2D                 	db	45
   357  007FB6  00                 	db	0
   358  007FB7                     STR_32:
   359  007FB7  2E                 	db	46
   360  007FB8  2E                 	db	46
   361  007FB9  2E                 	db	46
   362  007FBA  2D                 	db	45
   363  007FBB  2D                 	db	45
   364  007FBC  00                 	db	0
   365  007FBD                     STR_38:
   366  007FBD  2D                 	db	45
   367  007FBE  2D                 	db	45
   368  007FBF  2D                 	db	45
   369  007FC0  2D                 	db	45
   370  007FC1  2E                 	db	46
   371  007FC2  00                 	db	0
   372  007FC3                     STR_41:
   373  007FC3  2D                 	db	45
   374  007FC4  2E                 	db	46
   375  007FC5  2E                 	db	46
   376  007FC6  2D                 	db	45
   377  007FC7  2E                 	db	46
   378  007FC8  00                 	db	0
   379  007FC9                     STR_37:
   380  007FC9  2D                 	db	45
   381  007FCA  2D                 	db	45
   382  007FCB  2D                 	db	45
   383  007FCC  2E                 	db	46
   384  007FCD  2E                 	db	46
   385  007FCE  00                 	db	0
   386  007FCF                     STR_36:
   387  007FCF  2D                 	db	45
   388  007FD0  2D                 	db	45
   389  007FD1  2E                 	db	46
   390  007FD2  2E                 	db	46
   391  007FD3  2E                 	db	46
   392  007FD4  00                 	db	0
   393  007FD5                     STR_35:
   394  007FD5  2D                 	db	45
   395  007FD6  2E                 	db	46
   396  007FD7  2E                 	db	46
   397  007FD8  2E                 	db	46
   398  007FD9  2E                 	db	46
   399  007FDA  00                 	db	0
   400  007FDB                     STR_34:
   401  007FDB  2E                 	db	46
   402  007FDC  2E                 	db	46
   403  007FDD  2E                 	db	46
   404  007FDE  2E                 	db	46
   405  007FDF  2E                 	db	46
   406  007FE0  00                 	db	0
   407  007FE1                     STR_27:
   408  007FE1  2D                 	db	45
   409  007FE2  2E                 	db	46
   410  007FE3  2D                 	db	45
   411  007FE4  2D                 	db	45
   412  007FE5  00                 	db	0
   413  007FE6                     STR_19:
   414  007FE6  2D                 	db	45
   415  007FE7  2D                 	db	45
   416  007FE8  2E                 	db	46
   417  007FE9  2D                 	db	45
   418  007FEA  00                 	db	0
   419  007FEB                     STR_26:
   420  007FEB  2D                 	db	45
   421  007FEC  2E                 	db	46
   422  007FED  2E                 	db	46
   423  007FEE  2D                 	db	45
   424  007FEF  00                 	db	0
   425  007FF0                     STR_18:
   426  007FF0  2E                 	db	46
   427  007FF1  2D                 	db	45
   428  007FF2  2D                 	db	45
   429  007FF3  2E                 	db	46
   430  007FF4  00                 	db	0
   431  007FF5                     STR_5:
   432  007FF5  2D                 	db	45
   433  007FF6  2E                 	db	46
   434  007FF7  2D                 	db	45
   435  007FF8  2E                 	db	46
   436  007FF9  00                 	db	0
   437  007FFA                     STR_14:
   438  007FFA  2E                 	db	46
   439  007FFB  2D                 	db	45
   440  007FFC  2E                 	db	46
   441  007FFD  2E                 	db	46
   442  007FFE  00                 	db	0
   443  0000                     
   444                           ; #config settings
   445  007FFF  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           	psect	cinit
   448  0037BA                     __pcinit:
   449                           	opt stack 0
   450  0037BA                     start_initialization:
   451                           	opt stack 0
   452  0037BA                     __initialization:
   453                           	opt stack 0
   454                           
   455                           ; Initialize objects allocated to COMRAM (5 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457  0037BA  0E34               	movlw	low __pidataCOMRAM
   458  0037BC  6EF6               	movwf	tblptrl,c
   459  0037BE  0E3C               	movlw	high __pidataCOMRAM
   460  0037C0  6EF7               	movwf	tblptrh,c
   461  0037C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462  0037C4  6EF8               	movwf	tblptru,c
   463  0037C6  EE00  F03F         	lfsr	0,__pdataCOMRAM
   464  0037CA  EE10 F005          	lfsr	1,5
   465  0037CE                     copy_data0:
   466  0037CE  0009               	tblrd		*+
   467  0037D0  CFF5 FFEE          	movff	tablat,postinc0
   468  0037D4  50E5               	movf	postdec1,w,c
   469  0037D6  50E1               	movf	fsr1l,w,c
   470  0037D8  E1FA               	bnz	copy_data0
   471                           
   472                           ; Clear objects allocated to BANK2 (256 bytes)
   473  0037DA  EE02  F000         	lfsr	0,__pbssBANK2
   474  0037DE  EE11 F000          	lfsr	1,256
   475  0037E2                     clear_0:
   476  0037E2  6AEE               	clrf	postinc0,c
   477  0037E4  50E5               	movf	postdec1,w,c
   478  0037E6  50E1               	movf	fsr1l,w,c
   479  0037E8  E1FC               	bnz	clear_0
   480  0037EA  50E2               	movf	fsr1h,w,c
   481  0037EC  E1FA               	bnz	clear_0
   482                           
   483                           ; Clear objects allocated to COMRAM (23 bytes)
   484  0037EE  EE00  F028         	lfsr	0,__pbssCOMRAM
   485  0037F2  0E17               	movlw	23
   486  0037F4                     clear_1:
   487  0037F4  6AEE               	clrf	postinc0,c
   488  0037F6  06E8               	decf	wreg,f,c
   489  0037F8  E1FD               	bnz	clear_1
   490  0037FA                     end_of_initialization:
   491                           	opt stack 0
   492  0037FA                     __end_of__initialization:
   493                           	opt stack 0
   494  0037FA  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   495  0037FC  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   496  0037FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  003800  6EF8               	movwf	tblptru,c
   498  003802  0100               	movlb	0
   499  003804  EF0C  F01E         	goto	_main	;jump to C main() function
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	bssCOMRAM
   511  000028                     __pbssCOMRAM:
   512                           	opt stack 0
   513  000028                     high_priority_int@num_received_bits:
   514                           	opt stack 0
   515  000028                     	ds	2
   516  00002A                     high_priority_int@previous_received_bit:
   517                           	opt stack 0
   518  00002A                     	ds	2
   519  00002C                     high_priority_int@previous_signal_level:
   520                           	opt stack 0
   521  00002C                     	ds	2
   522  00002E                     high_priority_int@valid_samples:
   523                           	opt stack 0
   524  00002E                     	ds	2
   525  000030                     high_priority_int@total_add:
   526                           	opt stack 0
   527  000030                     	ds	2
   528  000032                     high_priority_int@cycles_transmitter_active:
   529                           	opt stack 0
   530  000032                     	ds	2
   531  000034                     high_priority_int@times_threshold_exceeded:
   532                           	opt stack 0
   533  000034                     	ds	2
   534  000036                     high_priority_int@sample_position:
   535                           	opt stack 0
   536  000036                     	ds	2
   537  000038                     high_priority_int@tmr1_interrupt_number:
   538                           	opt stack 0
   539  000038                     	ds	2
   540  00003A                     _global_command_pending_check:
   541                           	opt stack 0
   542  00003A                     	ds	2
   543  00003C                     _global_command_buffer:
   544                           	opt stack 0
   545  00003C                     	ds	2
   546  00003E                     high_priority_int@is_transmitter_active:
   547                           	opt stack 0
   548  00003E                     	ds	1
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1h	equ	0xFE2
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	dataCOMRAM
   560  00003F                     __pdataCOMRAM:
   561                           	opt stack 0
   562  00003F                     high_priority_int@noise_avg_value:
   563                           	opt stack 0
   564  00003F                     	ds	3
   565  000042                     high_priority_int@activation_threshold:
   566                           	opt stack 0
   567  000042                     	ds	2
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           postdec1	equ	0xFE5
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	bssBANK2
   579  000200                     __pbssBANK2:
   580                           	opt stack 0
   581  000200                     high_priority_int@samples:
   582                           	opt stack 0
   583  000200                     	ds	256
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1h	equ	0xFE2
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	cstackBANK1
   595  000100                     __pcstackBANK1:
   596                           	opt stack 0
   597  000100                     util_beacon_transmission@BEACON_MESSAGE:
   598                           	opt stack 0
   599  000100                     util_getTemperature@bit_mem:
   600                           	opt stack 0
   601                           
   602                           ; 144 bytes @ 0x0
   603  000100                     	ds	128
   604  000180                     util_beacon_transmission@BEACON_BUFFER:
   605                           	opt stack 0
   606                           
   607                           ; 64 bytes @ 0x80
   608  000180                     	ds	16
   609  000190                     util_getTemperature@byte_mem:
   610                           	opt stack 0
   611                           
   612                           ; 18 bytes @ 0x90
   613  000190                     	ds	18
   614  0001A2                     util_getTemperature@num_bit:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0xA2
   618  0001A2                     	ds	2
   619  0001A4                     util_getTemperature@sign:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0xA4
   623  0001A4                     	ds	3
   624  0001A7                     _util_getTemperature$2785:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0xA7
   628  0001A7                     	ds	3
   629  0001AA                     _util_getTemperature$2786:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0xAA
   633  0001AA                     	ds	3
   634  0001AD                     _util_getTemperature$2787:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0xAD
   638  0001AD                     	ds	3
   639  0001B0                     _util_getTemperature$2788:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0xB0
   643  0001B0                     	ds	3
   644  0001B3                     util_getTemperature@shift_reg_bit0:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xB3
   648  0001B3                     	ds	2
   649  0001B5                     util_getTemperature@shift_reg_bit1:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xB5
   653  0001B5                     	ds	2
   654  0001B7                     util_getTemperature@shift_reg_bit2:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0xB7
   658  0001B7                     	ds	2
   659  0001B9                     util_getTemperature@shift_reg_bit3:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xB9
   663  0001B9                     	ds	2
   664  0001BB                     util_getTemperature@shift_reg_bit4:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xBB
   668  0001BB                     	ds	2
   669  0001BD                     util_getTemperature@shift_reg_bit5:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xBD
   673  0001BD                     	ds	2
   674  0001BF                     util_getTemperature@shift_reg_bit6:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xBF
   678  0001BF                     	ds	1
   679  0001C0                     util_beacon_transmission@i:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0xC0
   683  0001C0                     	ds	1
   684  0001C1                     util_getTemperature@shift_reg_bit7:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xC1
   688  0001C1                     	ds	2
   689  0001C3                     util_getTemperature@shift_reg_bit_temp:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0xC3
   693  0001C3                     	ds	2
   694  0001C5                     util_getTemperature@num_byte:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xC5
   698  0001C5                     	ds	2
   699  0001C7                     util_getTemperature@bit_in_byte:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0xC7
   703  0001C7                     	ds	2
   704  0001C9                     util_getTemperature@temperature:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0xC9
   708  0001C9                     	ds	3
   709  0001CC                     util_getTemperature@i:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0xCC
   713  0001CC                     	ds	2
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           postdec1	equ	0xFE5
   721                           fsr1h	equ	0xFE2
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	cstackBANK0
   725  000060                     __pcstackBANK0:
   726                           	opt stack 0
   727  000060                     ??_low_priority_int:
   728                           
   729                           ; 1 bytes @ 0x0
   730  000060                     	ds	17
   731  000071                     ?_util_onewire_read_byte:
   732                           	opt stack 0
   733  000071                     ?___awdiv:
   734                           	opt stack 0
   735  000071                     ?___awtoft:
   736                           	opt stack 0
   737  000071                     ?___lltoft:
   738                           	opt stack 0
   739  000071                     ?___lwtoft:
   740                           	opt stack 0
   741  000071                     ?___lldiv:
   742                           	opt stack 0
   743  000071                     util_onewire_write_byte@bit0:
   744                           	opt stack 0
   745  000071                     util_transmit_morse_sequence@morse_sequence:
   746                           	opt stack 0
   747  000071                     util_waits_delay_secs@secs:
   748                           	opt stack 0
   749  000071                     ___awdiv@dividend:
   750                           	opt stack 0
   751  000071                     ___awtoft@c:
   752                           	opt stack 0
   753  000071                     ___lwtoft@c:
   754                           	opt stack 0
   755  000071                     __tdiv_to_l_@quot:
   756                           	opt stack 0
   757  000071                     ___lldiv@dividend:
   758                           	opt stack 0
   759  000071                     ___lltoft@c:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x11
   763  000071                     	ds	2
   764  000073                     ??_util_onewire_read_byte:
   765  000073                     util_onewire_write_byte@bit1:
   766                           	opt stack 0
   767  000073                     util_waits_delay_mins@minutes:
   768                           	opt stack 0
   769  000073                     ___awdiv@divisor:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x13
   773  000073                     	ds	1
   774  000074                     ?___ftdiv:
   775                           	opt stack 0
   776  000074                     ___ftdiv@f1:
   777                           	opt stack 0
   778                           
   779                           ; 3 bytes @ 0x14
   780  000074                     	ds	1
   781  000075                     ?___wmul:
   782                           	opt stack 0
   783  000075                     __tdiv_to_l_@cntr:
   784                           	opt stack 0
   785  000075                     ___lltoft@exp:
   786                           	opt stack 0
   787  000075                     util_onewire_write_byte@bit2:
   788                           	opt stack 0
   789  000075                     util_waits_delay_mins@i:
   790                           	opt stack 0
   791  000075                     ___wmul@multiplier:
   792                           	opt stack 0
   793  000075                     ___lldiv@divisor:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x15
   797  000075                     	ds	1
   798  000076                     __tdiv_to_l_@exp1:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x16
   802  000076                     	ds	1
   803  000077                     util_onewire_write_byte@bit3:
   804                           	opt stack 0
   805  000077                     util_waits_delay_hours@hours:
   806                           	opt stack 0
   807  000077                     ___wmul@multiplicand:
   808                           	opt stack 0
   809  000077                     ___ftdiv@f2:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x17
   813  000077                     	ds	2
   814  000079                     ?___ftmul:
   815                           	opt stack 0
   816  000079                     ?___llmod:
   817                           	opt stack 0
   818  000079                     util_onewire_write_byte@bit4:
   819                           	opt stack 0
   820  000079                     util_waits_delay_hours@i:
   821                           	opt stack 0
   822  000079                     ___ftmul@f1:
   823                           	opt stack 0
   824  000079                     ___llmod@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x19
   828  000079                     	ds	1
   829  00007A                     ___ftdiv@cntr:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x1A
   833  00007A                     	ds	1
   834  00007B                     util_onewire_write_byte@bit5:
   835                           	opt stack 0
   836  00007B                     ___ftdiv@f3:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x1B
   840  00007B                     	ds	1
   841  00007C                     ___ftmul@f2:
   842                           	opt stack 0
   843                           
   844                           ; 3 bytes @ 0x1C
   845  00007C                     	ds	1
   846  00007D                     util_onewire_write_byte@bit6:
   847                           	opt stack 0
   848  00007D                     ___llmod@divisor:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x1D
   852  00007D                     	ds	1
   853  00007E                     ___ftdiv@exp:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x1E
   857  00007E                     	ds	1
   858  00007F                     ??___ftmul:
   859  00007F                     ___ftdiv@sign:
   860                           	opt stack 0
   861  00007F                     util_onewire_write_byte@bit7:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x1F
   865  00007F                     	ds	2
   866  000081                     util_onewire_read_byte@bit0:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x21
   870  000081                     	ds	1
   871  000082                     ___ftmul@exp:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x22
   875  000082                     	ds	1
   876  000083                     util_onewire_read_byte@bit1:
   877                           	opt stack 0
   878  000083                     ___ftmul@f3_as_product:
   879                           	opt stack 0
   880                           
   881                           ; 3 bytes @ 0x23
   882  000083                     	ds	2
   883  000085                     util_onewire_read_byte@bit2:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x25
   887  000085                     	ds	1
   888  000086                     ___ftmul@cntr:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x26
   892  000086                     	ds	1
   893  000087                     ___ftmul@sign:
   894                           	opt stack 0
   895  000087                     util_onewire_read_byte@bit3:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x27
   899  000087                     	ds	1
   900  000088                     ?_util_getBatteryVoltage:
   901                           	opt stack 0
   902  000088                     ?_fround:
   903                           	opt stack 0
   904  000088                     ?_scale:
   905                           	opt stack 0
   906                           
   907                           ; 3 bytes @ 0x28
   908  000088                     	ds	1
   909  000089                     util_onewire_read_byte@bit4:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x29
   913  000089                     	ds	2
   914  00008B                     util_onewire_read_byte@bit5:
   915                           	opt stack 0
   916  00008B                     util_getBatteryVoltage@value:
   917                           	opt stack 0
   918  00008B                     _fround$2790:
   919                           	opt stack 0
   920  00008B                     _scale$2791:
   921                           	opt stack 0
   922                           
   923                           ; 3 bytes @ 0x2B
   924  00008B                     	ds	2
   925  00008D                     util_onewire_read_byte@bit6:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x2D
   929  00008D                     	ds	1
   930  00008E                     scale@scl:
   931                           	opt stack 0
   932  00008E                     util_getBatteryVoltage@voltage:
   933                           	opt stack 0
   934  00008E                     _fround$2789:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x2E
   938  00008E                     	ds	1
   939  00008F                     ?___fttol:
   940                           	opt stack 0
   941  00008F                     util_onewire_read_byte@bit7:
   942                           	opt stack 0
   943  00008F                     ___fttol@f1:
   944                           	opt stack 0
   945                           
   946                           ; 3 bytes @ 0x2F
   947  00008F                     	ds	2
   948  000091                     fround@prec:
   949                           	opt stack 0
   950  000091                     util_onewire_read_byte@value:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x31
   954  000091                     	ds	1
   955  000092                     ?___ftadd:
   956                           	opt stack 0
   957  000092                     ___ftadd@f1:
   958                           	opt stack 0
   959                           
   960                           ; 3 bytes @ 0x32
   961  000092                     	ds	1
   962  000093                     ??___fttol:
   963                           
   964                           ; 1 bytes @ 0x33
   965  000093                     	ds	2
   966  000095                     ___ftadd@f2:
   967                           	opt stack 0
   968                           
   969                           ; 3 bytes @ 0x35
   970  000095                     	ds	3
   971  000098                     ??___ftadd:
   972  000098                     ___fttol@sign1:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x38
   976  000098                     	ds	1
   977  000099                     ___fttol@lval:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x39
   981  000099                     	ds	2
   982  00009B                     ___ftadd@sign:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x3B
   986  00009B                     	ds	1
   987  00009C                     ___ftadd@exp2:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x3C
   991  00009C                     	ds	1
   992  00009D                     ___ftadd@exp1:
   993                           	opt stack 0
   994  00009D                     ___fttol@exp1:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x3D
   998  00009D                     	ds	1
   999  00009E                     ?_util_getSolarCurrent:
  1000                           	opt stack 0
  1001  00009E                     ?_util_getBatteryCurrent:
  1002                           	opt stack 0
  1003  00009E                     ?_util_getTemperature:
  1004                           	opt stack 0
  1005  00009E                     ?___ftsub:
  1006                           	opt stack 0
  1007  00009E                     ___ftsub@f1:
  1008                           	opt stack 0
  1009                           
  1010                           ; 3 bytes @ 0x3E
  1011  00009E                     	ds	2
  1012  0000A0                     util_getSolarCurrent@value:
  1013                           	opt stack 0
  1014  0000A0                     util_getBatteryCurrent@value:
  1015                           	opt stack 0
  1016                           
  1017                           ; 3 bytes @ 0x40
  1018  0000A0                     	ds	1
  1019  0000A1                     ??_util_getTemperature:
  1020  0000A1                     ___ftsub@f2:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x41
  1024  0000A1                     	ds	2
  1025  0000A3                     util_getSolarCurrent@solarCurrent:
  1026                           	opt stack 0
  1027  0000A3                     util_getBatteryCurrent@batteryCurrent:
  1028                           	opt stack 0
  1029                           
  1030                           ; 3 bytes @ 0x43
  1031  0000A3                     	ds	1
  1032  0000A4                     ?_sprintf:
  1033                           	opt stack 0
  1034  0000A4                     sprintf@sp:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x44
  1038  0000A4                     	ds	2
  1039  0000A6                     sprintf@f:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x46
  1043  0000A6                     	ds	12
  1044  0000B2                     ??_sprintf:
  1045                           
  1046                           ; 1 bytes @ 0x52
  1047  0000B2                     	ds	6
  1048  0000B8                     _sprintf$2792:
  1049                           	opt stack 0
  1050                           
  1051                           ; 3 bytes @ 0x58
  1052  0000B8                     	ds	3
  1053  0000BB                     sprintf@ap:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x5B
  1057  0000BB                     	ds	2
  1058  0000BD                     sprintf@flag:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x5D
  1062  0000BD                     	ds	2
  1063  0000BF                     sprintf@width:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x5F
  1067  0000BF                     	ds	2
  1068  0000C1                     sprintf@tmpval:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x61
  1072  0000C1                     	ds	4
  1073  0000C5                     sprintf@val:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x65
  1077  0000C5                     	ds	4
  1078  0000C9                     sprintf@exp:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x69
  1082  0000C9                     	ds	2
  1083  0000CB                     sprintf@fval:
  1084                           	opt stack 0
  1085                           
  1086                           ; 3 bytes @ 0x6B
  1087  0000CB                     	ds	3
  1088  0000CE                     sprintf@prec:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x6E
  1092  0000CE                     	ds	2
  1093  0000D0                     sprintf@c:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0x70
  1097  0000D0                     	ds	1
  1098  0000D1                     util_beacon_transmission@battery_voltage:
  1099                           	opt stack 0
  1100                           
  1101                           ; 3 bytes @ 0x71
  1102  0000D1                     	ds	3
  1103  0000D4                     util_beacon_transmission@solar_current:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x74
  1107  0000D4                     	ds	2
  1108  0000D6                     util_beacon_transmission@battery_current:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x76
  1112  0000D6                     	ds	2
  1113  0000D8                     util_beacon_transmission@temperature:
  1114                           	opt stack 0
  1115                           
  1116                           ; 3 bytes @ 0x78
  1117  0000D8                     	ds	3
  1118  0000DB                     main_loop@temperature:
  1119                           	opt stack 0
  1120                           
  1121                           ; 3 bytes @ 0x7B
  1122  0000DB                     	ds	3
  1123  0000DE                     main_loop@solar_current:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x7E
  1127  0000DE                     	ds	2
  1128  0000E0                     main_loop@battery_current:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x80
  1132  0000E0                     	ds	2
  1133  0000E2                     main_loop@battery_voltage:
  1134                           	opt stack 0
  1135                           
  1136                           ; 3 bytes @ 0x82
  1137  0000E2                     	ds	3
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1h	equ	0xFE2
  1146                           fsr1l	equ	0xFE1
  1147                           
  1148                           	psect	cstackCOMRAM
  1149  000001                     __pcstackCOMRAM:
  1150                           	opt stack 0
  1151  000001                     ??_high_priority_int:
  1152  000001                     
  1153                           ; 1 bytes @ 0x0
  1154  000001                     	ds	19
  1155  000014                     high_priority_int@oldest_sample:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x13
  1159  000014                     	ds	2
  1160  000016                     high_priority_int@current_signal_level:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x15
  1164  000016                     	ds	2
  1165  000018                     high_priority_int@sample:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x17
  1169  000018                     	ds	2
  1170  00001A                     high_priority_int@received_bit:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x19
  1174  00001A                     	ds	2
  1175  00001C                     ??_init_watchdogs_initialize:
  1176  00001C                     ??_isdigit:
  1177  00001C                     ?_util_onewire_reset:
  1178                           	opt stack 0
  1179  00001C                     ?_util_onewire_read_bit:
  1180                           	opt stack 0
  1181  00001C                     ?_strlen:
  1182                           	opt stack 0
  1183  00001C                     ?___awmod:
  1184                           	opt stack 0
  1185  00001C                     ?___ftpack:
  1186                           	opt stack 0
  1187  00001C                     ?___ftneg:
  1188                           	opt stack 0
  1189  00001C                     ?__tdiv_to_l_:
  1190                           	opt stack 0
  1191  00001C                     ?__div_to_l_:
  1192                           	opt stack 0
  1193  00001C                     util_onewire_write_bit@bit_in:
  1194                           	opt stack 0
  1195  00001C                     util_waits_delay_ms@ms:
  1196                           	opt stack 0
  1197  00001C                     ___awmod@dividend:
  1198                           	opt stack 0
  1199  00001C                     memset@p1:
  1200                           	opt stack 0
  1201  00001C                     strcat@to:
  1202                           	opt stack 0
  1203  00001C                     strcpy@to:
  1204                           	opt stack 0
  1205  00001C                     strlen@s:
  1206                           	opt stack 0
  1207  00001C                     __div_to_l_@f1:
  1208                           	opt stack 0
  1209  00001C                     ___ftpack@arg:
  1210                           	opt stack 0
  1211  00001C                     __tdiv_to_l_@f1:
  1212                           	opt stack 0
  1213  00001C                     ___ftge@ff1:
  1214                           	opt stack 0
  1215  00001C                     ___ftneg@f1:
  1216                           	opt stack 0
  1217  00001C                     ___lldiv@quotient:
  1218                           	opt stack 0
  1219                           
  1220                           ; 4 bytes @ 0x1B
  1221  00001C                     	ds	1
  1222  00001D                     _isdigit$2419:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x1C
  1226  00001D                     	ds	1
  1227  00001E                     ??_util_onewire_reset:
  1228  00001E                     ??_util_onewire_read_bit:
  1229  00001E                     ??_strlen:
  1230  00001E                     ??_util_waits_delay_ms:
  1231  00001E                     isdigit@c:
  1232                           	opt stack 0
  1233  00001E                     util_onewire_write_byte@value:
  1234                           	opt stack 0
  1235  00001E                     ___awmod@divisor:
  1236                           	opt stack 0
  1237  00001E                     memset@c:
  1238                           	opt stack 0
  1239  00001E                     strcat@from:
  1240                           	opt stack 0
  1241  00001E                     strcpy@from:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x1D
  1245  00001E                     	ds	1
  1246  00001F                     ___ftpack@exp:
  1247                           	opt stack 0
  1248  00001F                     util_onewire_reset@presence:
  1249                           	opt stack 0
  1250  00001F                     util_onewire_read_bit@value:
  1251                           	opt stack 0
  1252  00001F                     util_waits_delay_ms@i:
  1253                           	opt stack 0
  1254  00001F                     __div_to_l_@f2:
  1255                           	opt stack 0
  1256  00001F                     __tdiv_to_l_@f2:
  1257                           	opt stack 0
  1258  00001F                     ___ftge@ff2:
  1259                           	opt stack 0
  1260                           
  1261                           ; 3 bytes @ 0x1E
  1262  00001F                     	ds	1
  1263  000020                     ??_util_onewire_write_byte:
  1264  000020                     ___awmod@counter:
  1265                           	opt stack 0
  1266  000020                     ___ftpack@sign:
  1267                           	opt stack 0
  1268  000020                     ___lldiv@counter:
  1269                           	opt stack 0
  1270  000020                     memset@n:
  1271                           	opt stack 0
  1272  000020                     strcat@cp:
  1273                           	opt stack 0
  1274  000020                     strcpy@cp:
  1275                           	opt stack 0
  1276  000020                     strlen@cp:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x1F
  1280  000020                     	ds	1
  1281  000021                     ??_util_waits_delay_secs:
  1282  000021                     ??___ftpack:
  1283  000021                     ___awmod@sign:
  1284                           	opt stack 0
  1285  000021                     ___llmod@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x20
  1289  000021                     	ds	1
  1290  000022                     ??_util_transmit_morse_sequence:
  1291  000022                     ??__tdiv_to_l_:
  1292  000022                     ??___ftge:
  1293  000022                     ___awdiv@counter:
  1294                           	opt stack 0
  1295  000022                     util_waits_delay_secs@i:
  1296                           	opt stack 0
  1297  000022                     memset@p:
  1298                           	opt stack 0
  1299  000022                     __div_to_l_@quot:
  1300                           	opt stack 0
  1301                           
  1302                           ; 4 bytes @ 0x21
  1303  000022                     	ds	1
  1304  000023                     ___awdiv@sign:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x22
  1308  000023                     	ds	1
  1309  000024                     ??___lltoft:
  1310  000024                     ___awtoft@sign:
  1311                           	opt stack 0
  1312  000024                     util_transmit_morse_sequence@i:
  1313                           	opt stack 0
  1314  000024                     util_waits_delay_secs@j:
  1315                           	opt stack 0
  1316  000024                     ___awdiv@quotient:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0x23
  1320  000024                     	ds	1
  1321  000025                     ??___ftdiv:
  1322                           
  1323                           ; 1 bytes @ 0x24
  1324  000025                     	ds	1
  1325  000026                     ??_util_waits_delay_mins:
  1326  000026                     util_transmit_letter@letter:
  1327                           	opt stack 0
  1328  000026                     __div_to_l_@cntr:
  1329                           	opt stack 0
  1330  000026                     ___wmul@product:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0x25
  1334  000026                     	ds	1
  1335  000027                     ??_util_waits_delay_hours:
  1336  000027                     __div_to_l_@exp1:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x26
  1340  000027                     	ds	1
  1341  000028                     tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1h	equ	0xFE2
  1349                           fsr1l	equ	0xFE1
  1350                           
  1351                           ; 1 bytes @ 0x27
  1352 ;;
  1353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1354 ;;
  1355 ;; *************** function _main *****************
  1356 ;; Defined at:
  1357 ;;		line 19 in file "easat2_main_mcu.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1371 ;;      Params:         0       0       0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels required when called:    8
  1377 ;; This function calls:
  1378 ;;		_init_initialize
  1379 ;;		_main_loop
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text0
  1386  003C18                     __ptext0:
  1387                           	opt stack 0
  1388  003C18                     _main:
  1389                           	opt stack 23
  1390                           
  1391                           ;easat2_main_mcu.c: 22: init_initialize();
  1392                           
  1393                           ;incstack = 0
  1394  003C18  ECEC  F01D         	call	_init_initialize	;wreg free
  1395                           
  1396                           ;easat2_main_mcu.c: 25: main_loop();
  1397  003C1C  ECA7  F01A         	call	_main_loop	;wreg free
  1398  003C20  EF53  F000         	goto	start
  1399  003C24                     __end_of_main:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1h	equ	0xFE2
  1409                           fsr1l	equ	0xFE1
  1410                           
  1411 ;; *************** function _main_loop *****************
  1412 ;; Defined at:
  1413 ;;		line 31 in file "easat2_main_mcu.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  battery_volt    3  130[BANK0 ] float 
  1418 ;;  temperature     3  123[BANK0 ] float 
  1419 ;;  battery_curr    2  128[BANK0 ] int 
  1420 ;;  solar_curren    2  126[BANK0 ] int 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1430 ;;      Params:         0       0       0       0       0       0       0
  1431 ;;      Locals:         0      10       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0
  1433 ;;      Totals:         0      10       0       0       0       0       0
  1434 ;;Total ram usage:       10 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    7
  1437 ;; This function calls:
  1438 ;;		_init_watchdogs_initialize
  1439 ;;		_util_beacon_transmission
  1440 ;;		_util_getBatteryCurrent
  1441 ;;		_util_getBatteryVoltage
  1442 ;;		_util_getSolarCurrent
  1443 ;;		_util_getTemperature
  1444 ;;		_util_waits_delay_hours
  1445 ;;		_util_waits_delay_mins
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text1
  1452  00354E                     __ptext1:
  1453                           	opt stack 0
  1454  00354E                     _main_loop:
  1455                           	opt stack 23
  1456  00354E                     
  1457                           ;easat2_main_mcu.c: 41: init_watchdogs_initialize();
  1458  00354E  ECB6  F01D         	call	_init_watchdogs_initialize	;wreg free
  1459                           
  1460                           ;easat2_main_mcu.c: 46: battery_voltage = util_getBatteryVoltage();
  1461  003552  EC56  F018         	call	_util_getBatteryVoltage	;wreg free
  1462  003556  C088  F0E2         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1463  00355A  C089  F0E3         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1464  00355E  C08A  F0E4         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1465                           
  1466                           ;easat2_main_mcu.c: 49: solar_current = util_getSolarCurrent();
  1467  003562  EC8C  F017         	call	_util_getSolarCurrent	;wreg free
  1468  003566  C09E  F0DE         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1469  00356A  C09F  F0DF         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1470                           
  1471                           ;easat2_main_mcu.c: 52: battery_current = util_getBatteryCurrent();
  1472  00356E  ECF1  F017         	call	_util_getBatteryCurrent	;wreg free
  1473  003572  C09E  F0E0         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1474  003576  C09F  F0E1         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1475                           
  1476                           ;easat2_main_mcu.c: 55: temperature = util_getTemperature();
  1477  00357A  EC18  F006         	call	_util_getTemperature	;wreg free
  1478  00357E  C09E  F0DB         	movff	?_util_getTemperature,main_loop@temperature
  1479  003582  C09F  F0DC         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1480  003586  C0A0  F0DD         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1481                           
  1482                           ;easat2_main_mcu.c: 59: if (battery_voltage >= 0) {
  1483  00358A  0100               	movlb	0	; () banked
  1484  00358C  BFE4               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1485  00358E  D017               	goto	l5930
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;easat2_main_mcu.c: 60: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1489  003590  C0E2  F0D1         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1490  003594  C0E3  F0D2         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1491  003598  C0E4  F0D3         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1492  00359C  C0DE  F0D4         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1493  0035A0  C0DF  F0D5         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1494  0035A4  C0E0  F0D6         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1495  0035A8  C0E1  F0D7         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1496  0035AC  C0DB  F0D8         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1497  0035B0  C0DC  F0D9         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1498  0035B4  C0DD  F0DA         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1499  0035B8  EC17  F017         	call	_util_beacon_transmission	;wreg free
  1500                           
  1501                           ;easat2_main_mcu.c: 61: } else {
  1502  0035BC  D007               	goto	l77
  1503  0035BE                     l5930:
  1504                           
  1505                           ;easat2_main_mcu.c: 63: util_waits_delay_hours(2);
  1506  0035BE  0E00               	movlw	0
  1507  0035C0  0100               	movlb	0	; () banked
  1508  0035C2  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1509  0035C4  0E02               	movlw	2
  1510  0035C6  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1511  0035C8  EC6C  F01C         	call	_util_waits_delay_hours	;wreg free
  1512  0035CC                     l77:
  1513                           
  1514                           ;easat2_main_mcu.c: 64: }
  1515                           ;easat2_main_mcu.c: 67: util_waits_delay_mins(3);
  1516  0035CC  0E00               	movlw	0
  1517  0035CE  0100               	movlb	0	; () banked
  1518  0035D0  6F74               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1519  0035D2  0E03               	movlw	3
  1520  0035D4  6F73               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1521  0035D6  EC8B  F01C         	call	_util_waits_delay_mins	;wreg free
  1522                           
  1523                           ;easat2_main_mcu.c: 70: } while (1);
  1524  0035DA  D7B9               	goto	l5922
  1525  0035DC                     __end_of_main_loop:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537 ;; *************** function _util_waits_delay_hours *****************
  1538 ;; Defined at:
  1539 ;;		line 17 in file "easat2_util_waits.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  hours           2   23[BANK0 ] int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  i               2   25[BANK0 ] int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1553 ;;      Params:         0       2       0       0       0       0       0
  1554 ;;      Locals:         0       2       0       0       0       0       0
  1555 ;;      Temps:          1       0       0       0       0       0       0
  1556 ;;      Totals:         1       4       0       0       0       0       0
  1557 ;;Total ram usage:        5 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    5
  1560 ;; This function calls:
  1561 ;;		_util_waits_delay_mins
  1562 ;; This function is called by:
  1563 ;;		_main_loop
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text2
  1568  0038D8                     __ptext2:
  1569                           	opt stack 0
  1570  0038D8                     _util_waits_delay_hours:
  1571                           	opt stack 24
  1572                           
  1573                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1574                           
  1575                           ;incstack = 0
  1576  0038D8  0E00               	movlw	0
  1577  0038DA  0100               	movlb	0	; () banked
  1578  0038DC  6F7A               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1579  0038DE  0E00               	movlw	0
  1580  0038E0  6F79               	movwf	util_waits_delay_hours@i& (0+255),b
  1581  0038E2  D00A               	goto	l5920
  1582  0038E4                     l5916:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1586  0038E4  0E00               	movlw	0
  1587  0038E6  0100               	movlb	0	; () banked
  1588  0038E8  6F74               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1589  0038EA  0E3C               	movlw	60
  1590  0038EC  6F73               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1591  0038EE  EC8B  F01C         	call	_util_waits_delay_mins	;wreg free
  1592  0038F2  0100               	movlb	0	; () banked
  1593  0038F4  4B79               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1594  0038F6  2B7A               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1595  0038F8                     l5920:
  1596                           
  1597                           ; BSR set to: 0
  1598  0038F8  0100               	movlb	0	; () banked
  1599  0038FA  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1600  0038FC  0100               	movlb	0	; () banked
  1601  0038FE  5D79               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1602  003900  0100               	movlb	0	; () banked
  1603  003902  517A               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1604  003904  0A80               	xorlw	128
  1605  003906  6E27               	movwf	??_util_waits_delay_hours& (0+255),c
  1606  003908  0100               	movlb	0	; () banked
  1607  00390A  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1608  00390C  0A80               	xorlw	128
  1609  00390E  5827               	subwfb	??_util_waits_delay_hours& (0+255),w,c
  1610  003910  B0D8               	btfsc	status,0,c
  1611  003912  0012               	return	
  1612  003914  D7E7               	goto	l5916
  1613  003916                     __end_of_util_waits_delay_hours:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _util_waits_delay_mins *****************
  1627 ;; Defined at:
  1628 ;;		line 24 in file "easat2_util_waits.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  minutes         2   19[BANK0 ] int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  i               2   21[BANK0 ] int 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1642 ;;      Params:         0       2       0       0       0       0       0
  1643 ;;      Locals:         0       2       0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0
  1645 ;;      Totals:         1       4       0       0       0       0       0
  1646 ;;Total ram usage:        5 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    4
  1649 ;; This function calls:
  1650 ;;		_util_waits_delay_secs
  1651 ;; This function is called by:
  1652 ;;		_main_loop
  1653 ;;		_util_waits_delay_hours
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text3
  1658  003916                     __ptext3:
  1659                           	opt stack 0
  1660  003916                     _util_waits_delay_mins:
  1661                           	opt stack 25
  1662                           
  1663                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;incstack = 0
  1667  003916  0E00               	movlw	0
  1668  003918  0100               	movlb	0	; () banked
  1669  00391A  6F76               	movwf	(util_waits_delay_mins@i+1)& (0+255),b
  1670  00391C  0E00               	movlw	0
  1671  00391E  6F75               	movwf	util_waits_delay_mins@i& (0+255),b
  1672  003920  D00A               	goto	l5202
  1673  003922                     l5198:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1677  003922  0E00               	movlw	0
  1678  003924  0100               	movlb	0	; () banked
  1679  003926  6F72               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1680  003928  0E3C               	movlw	60
  1681  00392A  6F71               	movwf	util_waits_delay_secs@secs& (0+255),b
  1682  00392C  EC8B  F01B         	call	_util_waits_delay_secs	;wreg free
  1683  003930  0100               	movlb	0	; () banked
  1684  003932  4B75               	infsnz	util_waits_delay_mins@i& (0+255),f,b
  1685  003934  2B76               	incf	(util_waits_delay_mins@i+1)& (0+255),f,b
  1686  003936                     l5202:
  1687                           
  1688                           ; BSR set to: 0
  1689  003936  0100               	movlb	0	; () banked
  1690  003938  5173               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1691  00393A  0100               	movlb	0	; () banked
  1692  00393C  5D75               	subwf	util_waits_delay_mins@i& (0+255),w,b
  1693  00393E  0100               	movlb	0	; () banked
  1694  003940  5176               	movf	(util_waits_delay_mins@i+1)& (0+255),w,b
  1695  003942  0A80               	xorlw	128
  1696  003944  6E26               	movwf	??_util_waits_delay_mins& (0+255),c
  1697  003946  0100               	movlb	0	; () banked
  1698  003948  5174               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1699  00394A  0A80               	xorlw	128
  1700  00394C  5826               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1701  00394E  B0D8               	btfsc	status,0,c
  1702  003950  0012               	return	
  1703  003952  D7E7               	goto	l5198
  1704  003954                     __end_of_util_waits_delay_mins:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec1	equ	0xFE5
  1713                           fsr1h	equ	0xFE2
  1714                           fsr1l	equ	0xFE1
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _util_getTemperature *****************
  1718 ;; Defined at:
  1719 ;;		line 118 in file "easat2_util_inputs.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  bit_mem       144    0[BANK1 ] int [72]
  1724 ;;  byte_mem       18  144[BANK1 ] int [9]
  1725 ;;  temperature     3  201[BANK1 ] float 
  1726 ;;  sign            3  164[BANK1 ] float 
  1727 ;;  i               2  204[BANK1 ] int 
  1728 ;;  bit_in_byte     2  199[BANK1 ] int 
  1729 ;;  num_byte        2  197[BANK1 ] int 
  1730 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1731 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1732 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1733 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1734 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1735 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1736 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1737 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1738 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1739 ;;  num_bit         2  162[BANK1 ] int 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  3   62[BANK0 ] float 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       3       0       0       0       0       0
  1750 ;;      Locals:         0       0     206       0       0       0       0
  1751 ;;      Temps:          0       3       0       0       0       0       0
  1752 ;;      Totals:         0       6     206       0       0       0       0
  1753 ;;Total ram usage:      212 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		___awtoft
  1758 ;;		___ftadd
  1759 ;;		___ftdiv
  1760 ;;		___ftmul
  1761 ;;		_util_onewire_read_byte
  1762 ;;		_util_onewire_reset
  1763 ;;		_util_onewire_write_byte
  1764 ;;		_util_waits_delay_secs
  1765 ;; This function is called by:
  1766 ;;		_main_loop
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text4
  1771  000C30                     __ptext4:
  1772                           	opt stack 0
  1773  000C30                     _util_getTemperature:
  1774                           	opt stack 25
  1775                           
  1776                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1777                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1778                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;incstack = 0
  1782  000C30  0E00               	movlw	0
  1783  000C32  0101               	movlb	1	; () banked
  1784  000C34  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1785  000C36  0E00               	movlw	0
  1786  000C38  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1787                           
  1788                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1789  000C3A  0E00               	movlw	0
  1790  000C3C  0101               	movlb	1	; () banked
  1791  000C3E  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1792  000C40  0E00               	movlw	0
  1793  000C42  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1794                           
  1795                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1796  000C44  0E00               	movlw	0
  1797  000C46  0101               	movlb	1	; () banked
  1798  000C48  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1799  000C4A  0E00               	movlw	0
  1800  000C4C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1801                           
  1802                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1803  000C4E  0E00               	movlw	0
  1804  000C50  0101               	movlb	1	; () banked
  1805  000C52  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1806  000C54  0E00               	movlw	0
  1807  000C56  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1808                           
  1809                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1810  000C58  0E00               	movlw	0
  1811  000C5A  0101               	movlb	1	; () banked
  1812  000C5C  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1813  000C5E  0E00               	movlw	0
  1814  000C60  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1815                           
  1816                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1817  000C62  0E00               	movlw	0
  1818  000C64  0101               	movlb	1	; () banked
  1819  000C66  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1820  000C68  0E00               	movlw	0
  1821  000C6A  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1822                           
  1823                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1824  000C6C  0E00               	movlw	0
  1825  000C6E  0101               	movlb	1	; () banked
  1826  000C70  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1827  000C72  0E00               	movlw	0
  1828  000C74  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1829                           
  1830                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1831  000C76  0E00               	movlw	0
  1832  000C78  0101               	movlb	1	; () banked
  1833  000C7A  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1834  000C7C  0E00               	movlw	0
  1835  000C7E  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1836                           
  1837                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1838  000C80  0E00               	movlw	0
  1839  000C82  0101               	movlb	1	; () banked
  1840  000C84  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1841  000C86  0E00               	movlw	0
  1842  000C88  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1843                           
  1844                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1845  000C8A  0E00               	movlw	0
  1846  000C8C  0101               	movlb	1	; () banked
  1847  000C8E  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1848  000C90  0E00               	movlw	0
  1849  000C92  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1850  000C94  0E00               	movlw	0
  1851  000C96  0101               	movlb	1	; () banked
  1852  000C98  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1853  000C9A  0E00               	movlw	0
  1854  000C9C  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1855  000C9E  0E00               	movlw	0
  1856  000CA0  0101               	movlb	1	; () banked
  1857  000CA2  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1858  000CA4  0E00               	movlw	0
  1859  000CA6  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1860                           
  1861                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1862  000CA8  0E00               	movlw	0
  1863  000CAA  0101               	movlb	1	; () banked
  1864  000CAC  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1865  000CAE  0E00               	movlw	0
  1866  000CB0  0101               	movlb	1	; () banked
  1867  000CB2  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1868  000CB4  0E00               	movlw	0
  1869  000CB6  0101               	movlb	1	; () banked
  1870  000CB8  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1871                           
  1872                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1873  000CBA  0E00               	movlw	0
  1874  000CBC  0101               	movlb	1	; () banked
  1875  000CBE  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1876  000CC0  0E80               	movlw	128
  1877  000CC2  0101               	movlb	1	; () banked
  1878  000CC4  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1879  000CC6  0E3F               	movlw	63
  1880  000CC8  0101               	movlb	1	; () banked
  1881  000CCA  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1882                           
  1883                           ;easat2_util_inputs.c: 137: int i = 0;
  1884  000CCC  0E00               	movlw	0
  1885  000CCE  0101               	movlb	1	; () banked
  1886  000CD0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1887  000CD2  0E00               	movlw	0
  1888  000CD4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1889                           
  1890                           ; BSR set to: 1
  1891                           ;easat2_util_inputs.c: 143: INTCONbits.GIE = 0;
  1892  000CD6  9EF2               	bcf	intcon,7,c	;volatile
  1893                           
  1894                           ; BSR set to: 1
  1895                           ;easat2_util_inputs.c: 151: if (util_onewire_reset()) return -99.1;
  1896  000CD8  EC2A  F01C         	call	_util_onewire_reset	;wreg free
  1897  000CDC  501C               	movf	?_util_onewire_reset,w,c
  1898  000CDE  101D               	iorwf	?_util_onewire_reset+1,w,c
  1899  000CE0  B4D8               	btfsc	status,2,c
  1900  000CE2  D00A               	goto	l5760
  1901  000CE4  0E33               	movlw	51
  1902  000CE6  0100               	movlb	0	; () banked
  1903  000CE8  6F9E               	movwf	?_util_getTemperature& (0+255),b
  1904  000CEA  0EC6               	movlw	198
  1905  000CEC  0100               	movlb	0	; () banked
  1906  000CEE  6F9F               	movwf	(?_util_getTemperature+1)& (0+255),b
  1907  000CF0  0EC2               	movlw	194
  1908  000CF2  0100               	movlb	0	; () banked
  1909  000CF4  6FA0               	movwf	(?_util_getTemperature+2)& (0+255),b
  1910                           
  1911                           ; BSR set to: 0
  1912  000CF6  0012               	return	
  1913  000CF8                     l5760:
  1914                           
  1915                           ;easat2_util_inputs.c: 154: util_onewire_write_byte(0xCC);
  1916  000CF8  0E00               	movlw	0
  1917  000CFA  6E1F               	movwf	util_onewire_write_byte@value+1,c
  1918  000CFC  0ECC               	movlw	204
  1919  000CFE  6E1E               	movwf	util_onewire_write_byte@value,c
  1920  000D00  EC23  F013         	call	_util_onewire_write_byte	;wreg free
  1921                           
  1922                           ;easat2_util_inputs.c: 157: util_onewire_write_byte(0x44);
  1923  000D04  0E00               	movlw	0
  1924  000D06  6E1F               	movwf	util_onewire_write_byte@value+1,c
  1925  000D08  0E44               	movlw	68
  1926  000D0A  6E1E               	movwf	util_onewire_write_byte@value,c
  1927  000D0C  EC23  F013         	call	_util_onewire_write_byte	;wreg free
  1928                           
  1929                           ;easat2_util_inputs.c: 162: TRISAbits.TRISA3 = 1;
  1930  000D10  8692               	bsf	3986,3,c	;volatile
  1931                           
  1932                           ;easat2_util_inputs.c: 164: INTCONbits.GIE = 1;
  1933  000D12  8EF2               	bsf	intcon,7,c	;volatile
  1934                           
  1935                           ;easat2_util_inputs.c: 168: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1936  000D14  0E00               	movlw	0
  1937  000D16  0101               	movlb	1	; () banked
  1938  000D18  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1939  000D1A  0E00               	movlw	0
  1940  000D1C  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1941  000D1E  D00A               	goto	l5772
  1942  000D20                     l5768:
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;easat2_util_inputs.c: 169: util_waits_delay_secs(1);
  1946  000D20  0E00               	movlw	0
  1947  000D22  0100               	movlb	0	; () banked
  1948  000D24  6F72               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1949  000D26  0E01               	movlw	1
  1950  000D28  6F71               	movwf	util_waits_delay_secs@secs& (0+255),b
  1951  000D2A  EC8B  F01B         	call	_util_waits_delay_secs	;wreg free
  1952  000D2E  0101               	movlb	1	; () banked
  1953  000D30  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1954  000D32  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1955  000D34                     l5772:
  1956                           
  1957                           ; BSR set to: 1
  1958  000D34  0101               	movlb	1	; () banked
  1959  000D36  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1960  000D38  D008               	goto	l5774
  1961  000D3A  0101               	movlb	1	; () banked
  1962  000D3C  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1963  000D3E  E107               	bnz	l5776
  1964  000D40  0E05               	movlw	5
  1965  000D42  0101               	movlb	1	; () banked
  1966  000D44  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1967  000D46  B0D8               	btfsc	status,0,c
  1968  000D48  D002               	goto	l5776
  1969  000D4A                     l5774:
  1970                           
  1971                           ; BSR set to: 1
  1972  000D4A  A680               	btfss	3968,3,c	;volatile
  1973  000D4C  D7E9               	goto	l5768
  1974  000D4E                     l5776:
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;easat2_util_inputs.c: 171: if (i == 5) return -99.2;
  1978  000D4E  0E05               	movlw	5
  1979  000D50  0101               	movlb	1	; () banked
  1980  000D52  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1981  000D54  0101               	movlb	1	; () banked
  1982  000D56  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1983  000D58  A4D8               	btfss	status,2,c
  1984  000D5A  D00A               	goto	l148
  1985                           
  1986                           ; BSR set to: 1
  1987  000D5C  0E66               	movlw	102
  1988  000D5E  0100               	movlb	0	; () banked
  1989  000D60  6F9E               	movwf	?_util_getTemperature& (0+255),b
  1990  000D62  0EC6               	movlw	198
  1991  000D64  0100               	movlb	0	; () banked
  1992  000D66  6F9F               	movwf	(?_util_getTemperature+1)& (0+255),b
  1993  000D68  0EC2               	movlw	194
  1994  000D6A  0100               	movlb	0	; () banked
  1995  000D6C  6FA0               	movwf	(?_util_getTemperature+2)& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998  000D6E  0012               	return	
  1999  000D70                     l148:
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;easat2_util_inputs.c: 175: INTCONbits.GIE = 0;
  2003  000D70  9EF2               	bcf	intcon,7,c	;volatile
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;easat2_util_inputs.c: 181: if (util_onewire_reset()) return -99.3;
  2007  000D72  EC2A  F01C         	call	_util_onewire_reset	;wreg free
  2008  000D76  501C               	movf	?_util_onewire_reset,w,c
  2009  000D78  101D               	iorwf	?_util_onewire_reset+1,w,c
  2010  000D7A  B4D8               	btfsc	status,2,c
  2011  000D7C  D00A               	goto	l5788
  2012  000D7E  0E9A               	movlw	154
  2013  000D80  0100               	movlb	0	; () banked
  2014  000D82  6F9E               	movwf	?_util_getTemperature& (0+255),b
  2015  000D84  0EC6               	movlw	198
  2016  000D86  0100               	movlb	0	; () banked
  2017  000D88  6F9F               	movwf	(?_util_getTemperature+1)& (0+255),b
  2018  000D8A  0EC2               	movlw	194
  2019  000D8C  0100               	movlb	0	; () banked
  2020  000D8E  6FA0               	movwf	(?_util_getTemperature+2)& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023  000D90  0012               	return	
  2024  000D92                     l5788:
  2025                           
  2026                           ;easat2_util_inputs.c: 184: util_onewire_write_byte(0xCC);
  2027  000D92  0E00               	movlw	0
  2028  000D94  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2029  000D96  0ECC               	movlw	204
  2030  000D98  6E1E               	movwf	util_onewire_write_byte@value,c
  2031  000D9A  EC23  F013         	call	_util_onewire_write_byte	;wreg free
  2032                           
  2033                           ;easat2_util_inputs.c: 187: util_onewire_write_byte(0xBE);
  2034  000D9E  0E00               	movlw	0
  2035  000DA0  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2036  000DA2  0EBE               	movlw	190
  2037  000DA4  6E1E               	movwf	util_onewire_write_byte@value,c
  2038  000DA6  EC23  F013         	call	_util_onewire_write_byte	;wreg free
  2039                           
  2040                           ;easat2_util_inputs.c: 198: byte_mem[0] = util_onewire_read_byte();
  2041  000DAA  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2042  000DAE  C071  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2043  000DB2  C072  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2044                           
  2045                           ;easat2_util_inputs.c: 200: byte_mem[1] = util_onewire_read_byte();
  2046  000DB6  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2047  000DBA  C071  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2048  000DBE  C072  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2049                           
  2050                           ;easat2_util_inputs.c: 202: byte_mem[2] = util_onewire_read_byte();
  2051  000DC2  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2052  000DC6  C071  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2053  000DCA  C072  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2054                           
  2055                           ;easat2_util_inputs.c: 204: byte_mem[3] = util_onewire_read_byte();
  2056  000DCE  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2057  000DD2  C071  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2058  000DD6  C072  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2059                           
  2060                           ;easat2_util_inputs.c: 206: byte_mem[4] = util_onewire_read_byte();
  2061  000DDA  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2062  000DDE  C071  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2063  000DE2  C072  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2064                           
  2065                           ;easat2_util_inputs.c: 208: byte_mem[5] = util_onewire_read_byte();
  2066  000DE6  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2067  000DEA  C071  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2068  000DEE  C072  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2069                           
  2070                           ;easat2_util_inputs.c: 210: byte_mem[6] = util_onewire_read_byte();
  2071  000DF2  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2072  000DF6  C071  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2073  000DFA  C072  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2074                           
  2075                           ;easat2_util_inputs.c: 212: byte_mem[7] = util_onewire_read_byte();
  2076  000DFE  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2077  000E02  C071  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2078  000E06  C072  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2079                           
  2080                           ;easat2_util_inputs.c: 214: byte_mem[8] = util_onewire_read_byte();
  2081  000E0A  EC59  F012         	call	_util_onewire_read_byte	;wreg free
  2082  000E0E  C071  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2083  000E12  C072  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2084                           
  2085                           ;easat2_util_inputs.c: 218: INTCONbits.GIE = 1;
  2086  000E16  8EF2               	bsf	intcon,7,c	;volatile
  2087                           
  2088                           ;easat2_util_inputs.c: 224: for (num_byte = 0; num_byte < 9; num_byte++) {
  2089  000E18  0E00               	movlw	0
  2090  000E1A  0101               	movlb	1	; () banked
  2091  000E1C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2092  000E1E  0E00               	movlw	0
  2093  000E20  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2094  000E22                     l5794:
  2095                           
  2096                           ; BSR set to: 1
  2097  000E22  0101               	movlb	1	; () banked
  2098  000E24  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2099  000E26  D008               	goto	l5798
  2100  000E28  0101               	movlb	1	; () banked
  2101  000E2A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2102  000E2C  E14F               	bnz	l5816
  2103  000E2E  0E09               	movlw	9
  2104  000E30  0101               	movlb	1	; () banked
  2105  000E32  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2106  000E34  B0D8               	btfsc	status,0,c
  2107  000E36  D04A               	goto	l5816
  2108  000E38                     l5798:
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;easat2_util_inputs.c: 225: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2112  000E38  0E00               	movlw	0
  2113  000E3A  0101               	movlb	1	; () banked
  2114  000E3C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2115  000E3E  0E00               	movlw	0
  2116  000E40  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2117  000E42                     l5800:
  2118                           
  2119                           ; BSR set to: 1
  2120  000E42  0101               	movlb	1	; () banked
  2121  000E44  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2122  000E46  D008               	goto	l5804
  2123  000E48  0101               	movlb	1	; () banked
  2124  000E4A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2125  000E4C  E13B               	bnz	l5812
  2126  000E4E  0E08               	movlw	8
  2127  000E50  0101               	movlb	1	; () banked
  2128  000E52  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2129  000E54  B0D8               	btfsc	status,0,c
  2130  000E56  D036               	goto	l5812
  2131  000E58                     l5804:
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;easat2_util_inputs.c: 226: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2135  000E58  C1C7  F0A1         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2136  000E5C  90D8               	bcf	status,0,c
  2137  000E5E  0101               	movlb	1	; () banked
  2138  000E60  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2139  000E62  6ED9               	movwf	fsr2l,c
  2140  000E64  0101               	movlb	1	; () banked
  2141  000E66  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2142  000E68  6EDA               	movwf	fsr2h,c
  2143  000E6A  0E90               	movlw	low util_getTemperature@byte_mem
  2144  000E6C  26D9               	addwf	fsr2l,f,c
  2145  000E6E  0E01               	movlw	high util_getTemperature@byte_mem
  2146  000E70  22DA               	addwfc	fsr2h,f,c
  2147  000E72  CFDE F0A2          	movff	postinc2,??_util_getTemperature+1
  2148  000E76  CFDD F0A3          	movff	postdec2,??_util_getTemperature+2
  2149  000E7A  0100               	movlb	0	; () banked
  2150  000E7C  2BA1               	incf	??_util_getTemperature& (0+255),f,b
  2151  000E7E  D004               	goto	u6184
  2152  000E80                     u6185:
  2153  000E80  0100               	movlb	0	; () banked
  2154  000E82  35A3               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2155  000E84  33A3               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2156  000E86  33A2               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2157  000E88                     u6184:
  2158  000E88  0100               	movlb	0	; () banked
  2159  000E8A  2FA1               	decfsz	??_util_getTemperature& (0+255),f,b
  2160  000E8C  D7F9               	goto	u6185
  2161  000E8E  0E01               	movlw	1
  2162  000E90  0100               	movlb	0	; () banked
  2163  000E92  17A2               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2164  000E94  0E00               	movlw	0
  2165  000E96  17A3               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2166  000E98  90D8               	bcf	status,0,c
  2167  000E9A  0101               	movlb	1	; () banked
  2168  000E9C  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2169  000E9E  6ED9               	movwf	fsr2l,c
  2170  000EA0  0101               	movlb	1	; () banked
  2171  000EA2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2172  000EA4  6EDA               	movwf	fsr2h,c
  2173  000EA6  0E00               	movlw	low util_getTemperature@bit_mem
  2174  000EA8  26D9               	addwf	fsr2l,f,c
  2175  000EAA  0E01               	movlw	high util_getTemperature@bit_mem
  2176  000EAC  22DA               	addwfc	fsr2h,f,c
  2177  000EAE  C0A2  FFDE         	movff	??_util_getTemperature+1,postinc2
  2178  000EB2  C0A3  FFDD         	movff	??_util_getTemperature+2,postdec2
  2179                           
  2180                           ; BSR set to: 1
  2181  000EB6  0101               	movlb	1	; () banked
  2182  000EB8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2183  000EBA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2184                           
  2185                           ; BSR set to: 1
  2186  000EBC  0101               	movlb	1	; () banked
  2187  000EBE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2188  000EC0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2189  000EC2  D7BF               	goto	l5800
  2190  000EC4                     l5812:
  2191                           
  2192                           ; BSR set to: 1
  2193  000EC4  0101               	movlb	1	; () banked
  2194  000EC6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2195  000EC8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2196  000ECA  D7AB               	goto	l5794
  2197  000ECC                     l5816:
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;easat2_util_inputs.c: 227: }
  2201                           ;easat2_util_inputs.c: 231: for (i = 0; i < (9*8); i++) {
  2202  000ECC  0E00               	movlw	0
  2203  000ECE  0101               	movlb	1	; () banked
  2204  000ED0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2205  000ED2  0E00               	movlw	0
  2206  000ED4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2207  000ED6                     l5818:
  2208                           
  2209                           ; BSR set to: 1
  2210  000ED6  0101               	movlb	1	; () banked
  2211  000ED8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2212  000EDA  D008               	goto	l5822
  2213  000EDC  0101               	movlb	1	; () banked
  2214  000EDE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2215  000EE0  E154               	bnz	l5844
  2216  000EE2  0E48               	movlw	72
  2217  000EE4  0101               	movlb	1	; () banked
  2218  000EE6  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2219  000EE8  B0D8               	btfsc	status,0,c
  2220  000EEA  D04F               	goto	l5844
  2221  000EEC                     l5822:
  2222                           
  2223                           ; BSR set to: 1
  2224                           ;easat2_util_inputs.c: 236: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2225  000EEC  90D8               	bcf	status,0,c
  2226  000EEE  0101               	movlb	1	; () banked
  2227  000EF0  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2228  000EF2  6ED9               	movwf	fsr2l,c
  2229  000EF4  0101               	movlb	1	; () banked
  2230  000EF6  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2231  000EF8  6EDA               	movwf	fsr2h,c
  2232  000EFA  0E00               	movlw	low util_getTemperature@bit_mem
  2233  000EFC  26D9               	addwf	fsr2l,f,c
  2234  000EFE  0E01               	movlw	high util_getTemperature@bit_mem
  2235  000F00  22DA               	addwfc	fsr2h,f,c
  2236  000F02  CFDE F0A1          	movff	postinc2,??_util_getTemperature
  2237  000F06  CFDD F0A2          	movff	postdec2,??_util_getTemperature+1
  2238  000F0A  0101               	movlb	1	; () banked
  2239  000F0C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2240  000F0E  0100               	movlb	0	; () banked
  2241  000F10  19A1               	xorwf	??_util_getTemperature& (0+255),w,b
  2242  000F12  0101               	movlb	1	; () banked
  2243  000F14  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2244  000F16  0101               	movlb	1	; () banked
  2245  000F18  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2246  000F1A  0100               	movlb	0	; () banked
  2247  000F1C  19A2               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2248  000F1E  0101               	movlb	1	; () banked
  2249  000F20  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2250                           
  2251                           ; BSR set to: 1
  2252                           ;easat2_util_inputs.c: 238: shift_reg_bit0 = shift_reg_bit1;
  2253  000F22  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2254  000F26  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;easat2_util_inputs.c: 239: shift_reg_bit1 = shift_reg_bit2;
  2258  000F2A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2259  000F2E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;easat2_util_inputs.c: 240: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2263  000F32  0101               	movlb	1	; () banked
  2264  000F34  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2265  000F36  0101               	movlb	1	; () banked
  2266  000F38  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2267  000F3A  0101               	movlb	1	; () banked
  2268  000F3C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2269  000F3E  0101               	movlb	1	; () banked
  2270  000F40  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2271  000F42  0101               	movlb	1	; () banked
  2272  000F44  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2273  000F46  0101               	movlb	1	; () banked
  2274  000F48  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;easat2_util_inputs.c: 241: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2278  000F4A  0101               	movlb	1	; () banked
  2279  000F4C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2280  000F4E  0101               	movlb	1	; () banked
  2281  000F50  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2282  000F52  0101               	movlb	1	; () banked
  2283  000F54  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2284  000F56  0101               	movlb	1	; () banked
  2285  000F58  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2286  000F5A  0101               	movlb	1	; () banked
  2287  000F5C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2288  000F5E  0101               	movlb	1	; () banked
  2289  000F60  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;easat2_util_inputs.c: 242: shift_reg_bit4 = shift_reg_bit5;
  2293  000F62  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2294  000F66  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;easat2_util_inputs.c: 243: shift_reg_bit5 = shift_reg_bit6;
  2298  000F6A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2299  000F6E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;easat2_util_inputs.c: 244: shift_reg_bit6 = shift_reg_bit7;
  2303  000F72  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2304  000F76  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2305                           
  2306                           ; BSR set to: 1
  2307                           ;easat2_util_inputs.c: 245: shift_reg_bit7 = shift_reg_bit_temp;
  2308  000F7A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2309  000F7E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2310                           
  2311                           ; BSR set to: 1
  2312  000F82  0101               	movlb	1	; () banked
  2313  000F84  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2314  000F86  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2315  000F88  D7A6               	goto	l5818
  2316  000F8A                     l5844:
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;easat2_util_inputs.c: 247: }
  2320                           ;easat2_util_inputs.c: 251: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2321                           ;easat2_util_inputs.c: 252: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2322                           ;easat2_util_inputs.c: 253: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2323  000F8A  0101               	movlb	1	; () banked
  2324  000F8C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2325  000F8E  0101               	movlb	1	; () banked
  2326  000F90  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2327  000F92  A4D8               	btfss	status,2,c
  2328  000F94  D02A               	goto	l5860
  2329                           
  2330                           ; BSR set to: 1
  2331  000F96  0101               	movlb	1	; () banked
  2332  000F98  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2333  000F9A  0101               	movlb	1	; () banked
  2334  000F9C  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2335  000F9E  A4D8               	btfss	status,2,c
  2336  000FA0  D024               	goto	l5860
  2337                           
  2338                           ; BSR set to: 1
  2339  000FA2  0101               	movlb	1	; () banked
  2340  000FA4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2341  000FA6  0101               	movlb	1	; () banked
  2342  000FA8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2343  000FAA  B4D8               	btfsc	status,2,c
  2344  000FAC  D006               	goto	l5852
  2345                           
  2346                           ; BSR set to: 1
  2347  000FAE  0101               	movlb	1	; () banked
  2348  000FB0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2349  000FB2  0101               	movlb	1	; () banked
  2350  000FB4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2351  000FB6  A4D8               	btfss	status,2,c
  2352  000FB8  D018               	goto	l5860
  2353  000FBA                     l5852:
  2354                           
  2355                           ; BSR set to: 1
  2356  000FBA  0101               	movlb	1	; () banked
  2357  000FBC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2358  000FBE  0101               	movlb	1	; () banked
  2359  000FC0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2360  000FC2  A4D8               	btfss	status,2,c
  2361  000FC4  D012               	goto	l5860
  2362                           
  2363                           ; BSR set to: 1
  2364  000FC6  0101               	movlb	1	; () banked
  2365  000FC8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2366  000FCA  0101               	movlb	1	; () banked
  2367  000FCC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2368  000FCE  B4D8               	btfsc	status,2,c
  2369  000FD0  D006               	goto	l5858
  2370                           
  2371                           ; BSR set to: 1
  2372  000FD2  0101               	movlb	1	; () banked
  2373  000FD4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2374  000FD6  0101               	movlb	1	; () banked
  2375  000FD8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2376  000FDA  A4D8               	btfss	status,2,c
  2377  000FDC  D006               	goto	l5860
  2378  000FDE                     l5858:
  2379                           
  2380                           ; BSR set to: 1
  2381  000FDE  0101               	movlb	1	; () banked
  2382  000FE0  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2383  000FE2  0101               	movlb	1	; () banked
  2384  000FE4  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2385  000FE6  B4D8               	btfsc	status,2,c
  2386  000FE8  D00A               	goto	l5864
  2387  000FEA                     l5860:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;easat2_util_inputs.c: 254: return -99.7;
  2391  000FEA  0E66               	movlw	102
  2392  000FEC  0100               	movlb	0	; () banked
  2393  000FEE  6F9E               	movwf	?_util_getTemperature& (0+255),b
  2394  000FF0  0EC7               	movlw	199
  2395  000FF2  0100               	movlb	0	; () banked
  2396  000FF4  6F9F               	movwf	(?_util_getTemperature+1)& (0+255),b
  2397  000FF6  0EC2               	movlw	194
  2398  000FF8  0100               	movlb	0	; () banked
  2399  000FFA  6FA0               	movwf	(?_util_getTemperature+2)& (0+255),b
  2400                           
  2401                           ; BSR set to: 0
  2402  000FFC  0012               	return	
  2403  000FFE                     l5864:
  2404                           
  2405                           ;easat2_util_inputs.c: 258: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2406  000FFE  0101               	movlb	1	; () banked
  2407  001000  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2408  001002  0101               	movlb	1	; () banked
  2409  001004  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2410  001006  A4D8               	btfss	status,2,c
  2411  001008  D008               	goto	l5868
  2412                           
  2413                           ; BSR set to: 1
  2414  00100A  0E00               	movlw	0
  2415  00100C  0101               	movlb	1	; () banked
  2416  00100E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2417  001010  0E80               	movlw	128
  2418  001012  0101               	movlb	1	; () banked
  2419  001014  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2420  001016  0E3F               	movlw	63
  2421  001018  D007               	goto	L1
  2422  00101A                     l5868:
  2423                           
  2424                           ; BSR set to: 1
  2425  00101A  0E00               	movlw	0
  2426  00101C  0101               	movlb	1	; () banked
  2427  00101E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2428  001020  0E80               	movlw	128
  2429  001022  0101               	movlb	1	; () banked
  2430  001024  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2431  001026  0EBF               	movlw	191
  2432  001028                     L1:
  2433  001028  0101               	movlb	1	; () banked
  2434  00102A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2435                           
  2436                           ; BSR set to: 1
  2437                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2438                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2439                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2440                           
  2441                           ; BSR set to: 1
  2442  00102C  0E00               	movlw	0
  2443  00102E  0100               	movlb	0	; () banked
  2444  001030  6F77               	movwf	___ftdiv@f2& (0+255),b
  2445  001032  0E00               	movlw	0
  2446  001034  0100               	movlb	0	; () banked
  2447  001036  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2448  001038  0E41               	movlw	65
  2449  00103A  0100               	movlb	0	; () banked
  2450  00103C  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2451  00103E  C102  F071         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2452  001042  C103  F072         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2453  001046  ECAA  F01C         	call	___awtoft	;wreg free
  2454  00104A  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2455  00104E  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2456  001052  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2457  001056  ECE3  F015         	call	___ftdiv	;wreg free
  2458  00105A  C074  F095         	movff	?___ftdiv,___ftadd@f2
  2459  00105E  C075  F096         	movff	?___ftdiv+1,___ftadd@f2+1
  2460  001062  C076  F097         	movff	?___ftdiv+2,___ftadd@f2+2
  2461  001066  0E00               	movlw	0
  2462  001068  0100               	movlb	0	; () banked
  2463  00106A  6F77               	movwf	___ftdiv@f2& (0+255),b
  2464  00106C  0E80               	movlw	128
  2465  00106E  0100               	movlb	0	; () banked
  2466  001070  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2467  001072  0E41               	movlw	65
  2468  001074  0100               	movlb	0	; () banked
  2469  001076  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2470  001078  C100  F071         	movff	util_getTemperature@bit_mem,___awtoft@c
  2471  00107C  C101  F072         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2472  001080  ECAA  F01C         	call	___awtoft	;wreg free
  2473  001084  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2474  001088  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2475  00108C  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2476  001090  ECE3  F015         	call	___ftdiv	;wreg free
  2477  001094  C074  F092         	movff	?___ftdiv,___ftadd@f1
  2478  001098  C075  F093         	movff	?___ftdiv+1,___ftadd@f1+1
  2479  00109C  C076  F094         	movff	?___ftdiv+2,___ftadd@f1+2
  2480  0010A0  EC25  F011         	call	___ftadd	;wreg free
  2481  0010A4  C092  F1A7         	movff	?___ftadd,_util_getTemperature$2785
  2482  0010A8  C093  F1A8         	movff	?___ftadd+1,_util_getTemperature$2785+1
  2483  0010AC  C094  F1A9         	movff	?___ftadd+2,_util_getTemperature$2785+2
  2484                           
  2485                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2486                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2487                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2488  0010B0  0E00               	movlw	0
  2489  0010B2  0100               	movlb	0	; () banked
  2490  0010B4  6F77               	movwf	___ftdiv@f2& (0+255),b
  2491  0010B6  0E80               	movlw	128
  2492  0010B8  0100               	movlb	0	; () banked
  2493  0010BA  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2494  0010BC  0E40               	movlw	64
  2495  0010BE  0100               	movlb	0	; () banked
  2496  0010C0  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2497  0010C2  C104  F071         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2498  0010C6  C105  F072         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2499  0010CA  ECAA  F01C         	call	___awtoft	;wreg free
  2500  0010CE  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2501  0010D2  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2502  0010D6  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2503  0010DA  ECE3  F015         	call	___ftdiv	;wreg free
  2504  0010DE  C074  F095         	movff	?___ftdiv,___ftadd@f2
  2505  0010E2  C075  F096         	movff	?___ftdiv+1,___ftadd@f2+1
  2506  0010E6  C076  F097         	movff	?___ftdiv+2,___ftadd@f2+2
  2507  0010EA  C1A7  F092         	movff	_util_getTemperature$2785,___ftadd@f1
  2508  0010EE  C1A8  F093         	movff	_util_getTemperature$2785+1,___ftadd@f1+1
  2509  0010F2  C1A9  F094         	movff	_util_getTemperature$2785+2,___ftadd@f1+2
  2510  0010F6  EC25  F011         	call	___ftadd	;wreg free
  2511  0010FA  C092  F1AA         	movff	?___ftadd,_util_getTemperature$2786
  2512  0010FE  C093  F1AB         	movff	?___ftadd+1,_util_getTemperature$2786+1
  2513  001102  C094  F1AC         	movff	?___ftadd+2,_util_getTemperature$2786+2
  2514                           
  2515                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2516                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2517                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2518  001106  0E00               	movlw	0
  2519  001108  0100               	movlb	0	; () banked
  2520  00110A  6F77               	movwf	___ftdiv@f2& (0+255),b
  2521  00110C  0E00               	movlw	0
  2522  00110E  0100               	movlb	0	; () banked
  2523  001110  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2524  001112  0E40               	movlw	64
  2525  001114  0100               	movlb	0	; () banked
  2526  001116  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2527  001118  C106  F071         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2528  00111C  C107  F072         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2529  001120  ECAA  F01C         	call	___awtoft	;wreg free
  2530  001124  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2531  001128  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2532  00112C  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2533  001130  ECE3  F015         	call	___ftdiv	;wreg free
  2534  001134  C074  F095         	movff	?___ftdiv,___ftadd@f2
  2535  001138  C075  F096         	movff	?___ftdiv+1,___ftadd@f2+1
  2536  00113C  C076  F097         	movff	?___ftdiv+2,___ftadd@f2+2
  2537  001140  C1AA  F092         	movff	_util_getTemperature$2786,___ftadd@f1
  2538  001144  C1AB  F093         	movff	_util_getTemperature$2786+1,___ftadd@f1+1
  2539  001148  C1AC  F094         	movff	_util_getTemperature$2786+2,___ftadd@f1+2
  2540  00114C  EC25  F011         	call	___ftadd	;wreg free
  2541  001150  C092  F1AD         	movff	?___ftadd,_util_getTemperature$2787
  2542  001154  C093  F1AE         	movff	?___ftadd+1,_util_getTemperature$2787+1
  2543  001158  C094  F1AF         	movff	?___ftadd+2,_util_getTemperature$2787+2
  2544                           
  2545                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2546                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2547                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2548  00115C  C108  F071         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2549  001160  C109  F072         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2550  001164  ECAA  F01C         	call	___awtoft	;wreg free
  2551  001168  C071  F095         	movff	?___awtoft,___ftadd@f2
  2552  00116C  C072  F096         	movff	?___awtoft+1,___ftadd@f2+1
  2553  001170  C073  F097         	movff	?___awtoft+2,___ftadd@f2+2
  2554  001174  C1AD  F092         	movff	_util_getTemperature$2787,___ftadd@f1
  2555  001178  C1AE  F093         	movff	_util_getTemperature$2787+1,___ftadd@f1+1
  2556  00117C  C1AF  F094         	movff	_util_getTemperature$2787+2,___ftadd@f1+2
  2557  001180  EC25  F011         	call	___ftadd	;wreg free
  2558  001184  C092  F1B0         	movff	?___ftadd,_util_getTemperature$2788
  2559  001188  C093  F1B1         	movff	?___ftadd+1,_util_getTemperature$2788+1
  2560  00118C  C094  F1B2         	movff	?___ftadd+2,_util_getTemperature$2788+2
  2561                           
  2562                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2563                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2564                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2565  001190  C1B0  F092         	movff	_util_getTemperature$2788,___ftadd@f1
  2566  001194  C1B1  F093         	movff	_util_getTemperature$2788+1,___ftadd@f1+1
  2567  001198  C1B2  F094         	movff	_util_getTemperature$2788+2,___ftadd@f1+2
  2568  00119C  0E00               	movlw	0
  2569  00119E  0100               	movlb	0	; () banked
  2570  0011A0  6F7C               	movwf	___ftmul@f2& (0+255),b
  2571  0011A2  0E00               	movlw	0
  2572  0011A4  0100               	movlb	0	; () banked
  2573  0011A6  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2574  0011A8  0E40               	movlw	64
  2575  0011AA  0100               	movlb	0	; () banked
  2576  0011AC  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2577  0011AE  C10A  F071         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2578  0011B2  C10B  F072         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2579  0011B6  ECAA  F01C         	call	___awtoft	;wreg free
  2580  0011BA  C071  F079         	movff	?___awtoft,___ftmul@f1
  2581  0011BE  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2582  0011C2  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2583  0011C6  ECE4  F013         	call	___ftmul	;wreg free
  2584  0011CA  C079  F095         	movff	?___ftmul,___ftadd@f2
  2585  0011CE  C07A  F096         	movff	?___ftmul+1,___ftadd@f2+1
  2586  0011D2  C07B  F097         	movff	?___ftmul+2,___ftadd@f2+2
  2587  0011D6  EC25  F011         	call	___ftadd	;wreg free
  2588  0011DA  C092  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2589  0011DE  C093  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2590  0011E2  C094  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2591                           
  2592                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2593                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2594                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2595                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2596  0011E6  0E00               	movlw	0
  2597  0011E8  0100               	movlb	0	; () banked
  2598  0011EA  6F7C               	movwf	___ftmul@f2& (0+255),b
  2599  0011EC  0E00               	movlw	0
  2600  0011EE  0100               	movlb	0	; () banked
  2601  0011F0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2602  0011F2  0E41               	movlw	65
  2603  0011F4  0100               	movlb	0	; () banked
  2604  0011F6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2605  0011F8  C10E  F071         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2606  0011FC  C10F  F072         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2607  001200  ECAA  F01C         	call	___awtoft	;wreg free
  2608  001204  C071  F079         	movff	?___awtoft,___ftmul@f1
  2609  001208  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2610  00120C  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2611  001210  ECE4  F013         	call	___ftmul	;wreg free
  2612  001214  C079  F095         	movff	?___ftmul,___ftadd@f2
  2613  001218  C07A  F096         	movff	?___ftmul+1,___ftadd@f2+1
  2614  00121C  C07B  F097         	movff	?___ftmul+2,___ftadd@f2+2
  2615  001220  0E00               	movlw	0
  2616  001222  0100               	movlb	0	; () banked
  2617  001224  6F7C               	movwf	___ftmul@f2& (0+255),b
  2618  001226  0E80               	movlw	128
  2619  001228  0100               	movlb	0	; () banked
  2620  00122A  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2621  00122C  0E40               	movlw	64
  2622  00122E  0100               	movlb	0	; () banked
  2623  001230  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2624  001232  C10C  F071         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2625  001236  C10D  F072         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2626  00123A  ECAA  F01C         	call	___awtoft	;wreg free
  2627  00123E  C071  F079         	movff	?___awtoft,___ftmul@f1
  2628  001242  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2629  001246  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2630  00124A  ECE4  F013         	call	___ftmul	;wreg free
  2631  00124E  C079  F092         	movff	?___ftmul,___ftadd@f1
  2632  001252  C07A  F093         	movff	?___ftmul+1,___ftadd@f1+1
  2633  001256  C07B  F094         	movff	?___ftmul+2,___ftadd@f1+2
  2634  00125A  EC25  F011         	call	___ftadd	;wreg free
  2635  00125E  C092  F1A7         	movff	?___ftadd,_util_getTemperature$2785
  2636  001262  C093  F1A8         	movff	?___ftadd+1,_util_getTemperature$2785+1
  2637  001266  C094  F1A9         	movff	?___ftadd+2,_util_getTemperature$2785+2
  2638                           
  2639                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2640                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2641                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2642                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2643  00126A  0E00               	movlw	0
  2644  00126C  0100               	movlb	0	; () banked
  2645  00126E  6F7C               	movwf	___ftmul@f2& (0+255),b
  2646  001270  0E80               	movlw	128
  2647  001272  0100               	movlb	0	; () banked
  2648  001274  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2649  001276  0E41               	movlw	65
  2650  001278  0100               	movlb	0	; () banked
  2651  00127A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2652  00127C  C110  F071         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2653  001280  C111  F072         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2654  001284  ECAA  F01C         	call	___awtoft	;wreg free
  2655  001288  C071  F079         	movff	?___awtoft,___ftmul@f1
  2656  00128C  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2657  001290  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2658  001294  ECE4  F013         	call	___ftmul	;wreg free
  2659  001298  C079  F095         	movff	?___ftmul,___ftadd@f2
  2660  00129C  C07A  F096         	movff	?___ftmul+1,___ftadd@f2+1
  2661  0012A0  C07B  F097         	movff	?___ftmul+2,___ftadd@f2+2
  2662  0012A4  C1A7  F092         	movff	_util_getTemperature$2785,___ftadd@f1
  2663  0012A8  C1A8  F093         	movff	_util_getTemperature$2785+1,___ftadd@f1+1
  2664  0012AC  C1A9  F094         	movff	_util_getTemperature$2785+2,___ftadd@f1+2
  2665  0012B0  EC25  F011         	call	___ftadd	;wreg free
  2666  0012B4  C092  F1AA         	movff	?___ftadd,_util_getTemperature$2786
  2667  0012B8  C093  F1AB         	movff	?___ftadd+1,_util_getTemperature$2786+1
  2668  0012BC  C094  F1AC         	movff	?___ftadd+2,_util_getTemperature$2786+2
  2669                           
  2670                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2671                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2672                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2673                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2674  0012C0  0E00               	movlw	0
  2675  0012C2  0100               	movlb	0	; () banked
  2676  0012C4  6F7C               	movwf	___ftmul@f2& (0+255),b
  2677  0012C6  0E00               	movlw	0
  2678  0012C8  0100               	movlb	0	; () banked
  2679  0012CA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2680  0012CC  0E42               	movlw	66
  2681  0012CE  0100               	movlb	0	; () banked
  2682  0012D0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2683  0012D2  C112  F071         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2684  0012D6  C113  F072         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2685  0012DA  ECAA  F01C         	call	___awtoft	;wreg free
  2686  0012DE  C071  F079         	movff	?___awtoft,___ftmul@f1
  2687  0012E2  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2688  0012E6  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2689  0012EA  ECE4  F013         	call	___ftmul	;wreg free
  2690  0012EE  C079  F095         	movff	?___ftmul,___ftadd@f2
  2691  0012F2  C07A  F096         	movff	?___ftmul+1,___ftadd@f2+1
  2692  0012F6  C07B  F097         	movff	?___ftmul+2,___ftadd@f2+2
  2693  0012FA  C1AA  F092         	movff	_util_getTemperature$2786,___ftadd@f1
  2694  0012FE  C1AB  F093         	movff	_util_getTemperature$2786+1,___ftadd@f1+1
  2695  001302  C1AC  F094         	movff	_util_getTemperature$2786+2,___ftadd@f1+2
  2696  001306  EC25  F011         	call	___ftadd	;wreg free
  2697  00130A  C092  F1AD         	movff	?___ftadd,_util_getTemperature$2787
  2698  00130E  C093  F1AE         	movff	?___ftadd+1,_util_getTemperature$2787+1
  2699  001312  C094  F1AF         	movff	?___ftadd+2,_util_getTemperature$2787+2
  2700                           
  2701                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2702                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2703                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2704                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2705  001316  0E00               	movlw	0
  2706  001318  0100               	movlb	0	; () banked
  2707  00131A  6F7C               	movwf	___ftmul@f2& (0+255),b
  2708  00131C  0E80               	movlw	128
  2709  00131E  0100               	movlb	0	; () banked
  2710  001320  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2711  001322  0E42               	movlw	66
  2712  001324  0100               	movlb	0	; () banked
  2713  001326  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2714  001328  C114  F071         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2715  00132C  C115  F072         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2716  001330  ECAA  F01C         	call	___awtoft	;wreg free
  2717  001334  C071  F079         	movff	?___awtoft,___ftmul@f1
  2718  001338  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2719  00133C  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2720  001340  ECE4  F013         	call	___ftmul	;wreg free
  2721  001344  C079  F095         	movff	?___ftmul,___ftadd@f2
  2722  001348  C07A  F096         	movff	?___ftmul+1,___ftadd@f2+1
  2723  00134C  C07B  F097         	movff	?___ftmul+2,___ftadd@f2+2
  2724  001350  C1AD  F092         	movff	_util_getTemperature$2787,___ftadd@f1
  2725  001354  C1AE  F093         	movff	_util_getTemperature$2787+1,___ftadd@f1+1
  2726  001358  C1AF  F094         	movff	_util_getTemperature$2787+2,___ftadd@f1+2
  2727  00135C  EC25  F011         	call	___ftadd	;wreg free
  2728  001360  C092  F1B0         	movff	?___ftadd,_util_getTemperature$2788
  2729  001364  C093  F1B1         	movff	?___ftadd+1,_util_getTemperature$2788+1
  2730  001368  C094  F1B2         	movff	?___ftadd+2,_util_getTemperature$2788+2
  2731                           
  2732                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2733                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2734                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2735                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2736  00136C  C1B0  F092         	movff	_util_getTemperature$2788,___ftadd@f1
  2737  001370  C1B1  F093         	movff	_util_getTemperature$2788+1,___ftadd@f1+1
  2738  001374  C1B2  F094         	movff	_util_getTemperature$2788+2,___ftadd@f1+2
  2739  001378  C1C9  F095         	movff	util_getTemperature@temperature,___ftadd@f2
  2740  00137C  C1CA  F096         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2741  001380  C1CB  F097         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2742  001384  EC25  F011         	call	___ftadd	;wreg free
  2743  001388  C092  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2744  00138C  C093  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2745  001390  C094  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2746                           
  2747                           ;easat2_util_inputs.c: 268: temperature = temperature * sign;
  2748  001394  C1C9  F079         	movff	util_getTemperature@temperature,___ftmul@f1
  2749  001398  C1CA  F07A         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2750  00139C  C1CB  F07B         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2751  0013A0  C1A4  F07C         	movff	util_getTemperature@sign,___ftmul@f2
  2752  0013A4  C1A5  F07D         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2753  0013A8  C1A6  F07E         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2754  0013AC  ECE4  F013         	call	___ftmul	;wreg free
  2755  0013B0  C079  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2756  0013B4  C07A  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2757  0013B8  C07B  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2758                           
  2759                           ;easat2_util_inputs.c: 270: return temperature;
  2760  0013BC  C1C9  F09E         	movff	util_getTemperature@temperature,?_util_getTemperature
  2761  0013C0  C1CA  F09F         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2762  0013C4  C1CB  F0A0         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2763  0013C8  0012               	return	
  2764  0013CA                     __end_of_util_getTemperature:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           intcon	equ	0xFF2
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _util_waits_delay_secs *****************
  2783 ;; Defined at:
  2784 ;;		line 31 in file "easat2_util_waits.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  secs            2   17[BANK0 ] int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  j               2   35[COMRAM] int 
  2789 ;;  i               2   33[COMRAM] int 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2799 ;;      Params:         0       2       0       0       0       0       0
  2800 ;;      Locals:         4       0       0       0       0       0       0
  2801 ;;      Temps:          1       0       0       0       0       0       0
  2802 ;;      Totals:         5       2       0       0       0       0       0
  2803 ;;Total ram usage:        7 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    3
  2806 ;; This function calls:
  2807 ;;		_util_waits_delay_ms
  2808 ;; This function is called by:
  2809 ;;		_util_getTemperature
  2810 ;;		_util_waits_delay_mins
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text5
  2815  003716                     __ptext5:
  2816                           	opt stack 0
  2817  003716                     _util_waits_delay_secs:
  2818                           	opt stack 25
  2819                           
  2820                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2821                           
  2822                           ;incstack = 0
  2823  003716  0E00               	movlw	0
  2824  003718  6E23               	movwf	util_waits_delay_secs@i+1,c
  2825  00371A  0E00               	movlw	0
  2826  00371C  6E22               	movwf	util_waits_delay_secs@i,c
  2827  00371E  D017               	goto	l4962
  2828  003720                     l4948:
  2829                           
  2830                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2831  003720  0E00               	movlw	0
  2832  003722  6E25               	movwf	util_waits_delay_secs@j+1,c
  2833  003724  0E00               	movlw	0
  2834  003726  6E24               	movwf	util_waits_delay_secs@j,c
  2835  003728                     l4950:
  2836  003728  BE25               	btfsc	util_waits_delay_secs@j+1,7,c
  2837  00372A  D006               	goto	l4954
  2838  00372C  5025               	movf	util_waits_delay_secs@j+1,w,c
  2839  00372E  E10D               	bnz	l4960
  2840  003730  0E0A               	movlw	10
  2841  003732  5C24               	subwf	util_waits_delay_secs@j,w,c
  2842  003734  B0D8               	btfsc	status,0,c
  2843  003736  D009               	goto	l4960
  2844  003738                     l4954:
  2845                           
  2846                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2847  003738  0E00               	movlw	0
  2848  00373A  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  2849  00373C  0E64               	movlw	100
  2850  00373E  6E1C               	movwf	util_waits_delay_ms@ms,c
  2851  003740  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  2852  003744  4A24               	infsnz	util_waits_delay_secs@j,f,c
  2853  003746  2A25               	incf	util_waits_delay_secs@j+1,f,c
  2854  003748  D7EF               	goto	l4950
  2855  00374A                     l4960:
  2856  00374A  4A22               	infsnz	util_waits_delay_secs@i,f,c
  2857  00374C  2A23               	incf	util_waits_delay_secs@i+1,f,c
  2858  00374E                     l4962:
  2859  00374E  0100               	movlb	0	; () banked
  2860  003750  5171               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2861  003752  5C22               	subwf	util_waits_delay_secs@i,w,c
  2862  003754  5023               	movf	util_waits_delay_secs@i+1,w,c
  2863  003756  0A80               	xorlw	128
  2864  003758  6E21               	movwf	??_util_waits_delay_secs& (0+255),c
  2865  00375A  0100               	movlb	0	; () banked
  2866  00375C  5172               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2867  00375E  0A80               	xorlw	128
  2868  003760  5821               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2869  003762  B0D8               	btfsc	status,0,c
  2870  003764  0012               	return	
  2871  003766  D7DC               	goto	l4948
  2872  003768                     __end_of_util_waits_delay_secs:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           intcon	equ	0xFF2
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           postdec1	equ	0xFE5
  2882                           fsr1h	equ	0xFE2
  2883                           fsr1l	equ	0xFE1
  2884                           postinc2	equ	0xFDE
  2885                           postdec2	equ	0xFDD
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _util_onewire_write_byte *****************
  2891 ;; Defined at:
  2892 ;;		line 62 in file "easat2_util_onewire.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  value           2   29[COMRAM] int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  bit7            2   31[BANK0 ] int 
  2897 ;;  bit6            2   29[BANK0 ] int 
  2898 ;;  bit5            2   27[BANK0 ] int 
  2899 ;;  bit4            2   25[BANK0 ] int 
  2900 ;;  bit3            2   23[BANK0 ] int 
  2901 ;;  bit2            2   21[BANK0 ] int 
  2902 ;;  bit1            2   19[BANK0 ] int 
  2903 ;;  bit0            2   17[BANK0 ] int 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2913 ;;      Params:         2       0       0       0       0       0       0
  2914 ;;      Locals:         0      16       0       0       0       0       0
  2915 ;;      Temps:          3       0       0       0       0       0       0
  2916 ;;      Totals:         5      16       0       0       0       0       0
  2917 ;;Total ram usage:       21 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    3
  2920 ;; This function calls:
  2921 ;;		_util_onewire_write_bit
  2922 ;; This function is called by:
  2923 ;;		_util_getTemperature
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text6
  2928  002646                     __ptext6:
  2929                           	opt stack 0
  2930  002646                     _util_onewire_write_byte:
  2931                           	opt stack 25
  2932                           
  2933                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2934                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;incstack = 0
  2938  002646  0E01               	movlw	1
  2939  002648  141E               	andwf	util_onewire_write_byte@value,w,c
  2940  00264A  0100               	movlb	0	; () banked
  2941  00264C  6F71               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2942  00264E  0100               	movlb	0	; () banked
  2943  002650  6B72               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2944                           
  2945                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2946  002652  341F               	rlcf	util_onewire_write_byte@value+1,w,c
  2947  002654  301F               	rrcf	util_onewire_write_byte@value+1,w,c
  2948  002656  6E21               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2949  002658  301E               	rrcf	util_onewire_write_byte@value,w,c
  2950  00265A  6E20               	movwf	??_util_onewire_write_byte& (0+255),c
  2951  00265C  0E01               	movlw	1
  2952  00265E  1420               	andwf	??_util_onewire_write_byte,w,c
  2953  002660  0100               	movlb	0	; () banked
  2954  002662  6F73               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2955  002664  0100               	movlb	0	; () banked
  2956  002666  6B74               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2957                           
  2958                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2959  002668  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2960  00266C  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2961  002670  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  2962  002672  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  2963  002674  3220               	rrcf	??_util_onewire_write_byte,f,c
  2964  002676  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  2965  002678  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  2966  00267A  3220               	rrcf	??_util_onewire_write_byte,f,c
  2967  00267C  0E01               	movlw	1
  2968  00267E  1420               	andwf	??_util_onewire_write_byte,w,c
  2969  002680  0100               	movlb	0	; () banked
  2970  002682  6F75               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2971  002684  0100               	movlb	0	; () banked
  2972  002686  6B76               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2973                           
  2974                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2975  002688  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2976  00268C  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2977  002690  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  2978  002692  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  2979  002694  3220               	rrcf	??_util_onewire_write_byte,f,c
  2980  002696  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  2981  002698  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  2982  00269A  3220               	rrcf	??_util_onewire_write_byte,f,c
  2983  00269C  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  2984  00269E  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  2985  0026A0  3220               	rrcf	??_util_onewire_write_byte,f,c
  2986  0026A2  0E01               	movlw	1
  2987  0026A4  1420               	andwf	??_util_onewire_write_byte,w,c
  2988  0026A6  0100               	movlb	0	; () banked
  2989  0026A8  6F77               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2990  0026AA  0100               	movlb	0	; () banked
  2991  0026AC  6B78               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2992                           
  2993                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2994  0026AE  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2995  0026B2  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2996  0026B6  0E04               	movlw	4
  2997  0026B8  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2998  0026BA                     u5475:
  2999  0026BA  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3000  0026BC  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3001  0026BE  3220               	rrcf	??_util_onewire_write_byte,f,c
  3002  0026C0  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3003  0026C2  D7FB               	goto	u5475
  3004  0026C4  0E01               	movlw	1
  3005  0026C6  1420               	andwf	??_util_onewire_write_byte,w,c
  3006  0026C8  0100               	movlb	0	; () banked
  3007  0026CA  6F79               	movwf	util_onewire_write_byte@bit4& (0+255),b
  3008  0026CC  0100               	movlb	0	; () banked
  3009  0026CE  6B7A               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  3010                           
  3011                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  3012  0026D0  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3013  0026D4  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3014  0026D8  0E05               	movlw	5
  3015  0026DA  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3016  0026DC                     u5485:
  3017  0026DC  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3018  0026DE  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3019  0026E0  3220               	rrcf	??_util_onewire_write_byte,f,c
  3020  0026E2  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3021  0026E4  D7FB               	goto	u5485
  3022  0026E6  0E01               	movlw	1
  3023  0026E8  1420               	andwf	??_util_onewire_write_byte,w,c
  3024  0026EA  0100               	movlb	0	; () banked
  3025  0026EC  6F7B               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3026  0026EE  0100               	movlb	0	; () banked
  3027  0026F0  6B7C               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3028                           
  3029                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3030  0026F2  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3031  0026F6  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3032  0026FA  0E06               	movlw	6
  3033  0026FC  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3034  0026FE                     u5495:
  3035  0026FE  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3036  002700  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3037  002702  3220               	rrcf	??_util_onewire_write_byte,f,c
  3038  002704  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3039  002706  D7FB               	goto	u5495
  3040  002708  0E01               	movlw	1
  3041  00270A  1420               	andwf	??_util_onewire_write_byte,w,c
  3042  00270C  0100               	movlb	0	; () banked
  3043  00270E  6F7D               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3044  002710  0100               	movlb	0	; () banked
  3045  002712  6B7E               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3046                           
  3047                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3048  002714  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3049  002718  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3050  00271C  0E07               	movlw	7
  3051  00271E  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3052  002720                     u5505:
  3053  002720  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3054  002722  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3055  002724  3220               	rrcf	??_util_onewire_write_byte,f,c
  3056  002726  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3057  002728  D7FB               	goto	u5505
  3058  00272A  0E01               	movlw	1
  3059  00272C  1420               	andwf	??_util_onewire_write_byte,w,c
  3060  00272E  0100               	movlb	0	; () banked
  3061  002730  6F7F               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3062  002732  0100               	movlb	0	; () banked
  3063  002734  6B80               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3067  002736  C071  F01C         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3068  00273A  C072  F01D         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3069  00273E  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3070                           
  3071                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3072  002742  D000               	nop2		;2 cycle nop
  3073  002744  D000               	nop2		;2 cycle nop
  3074  002746  F000               	nop	
  3075                           
  3076                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3077  002748  C073  F01C         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3078  00274C  C074  F01D         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3079  002750  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3080                           
  3081                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3082  002754  D000               	nop2		;2 cycle nop
  3083  002756  D000               	nop2		;2 cycle nop
  3084  002758  F000               	nop	
  3085                           
  3086                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3087  00275A  C075  F01C         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3088  00275E  C076  F01D         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3089  002762  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3090                           
  3091                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3092  002766  D000               	nop2		;2 cycle nop
  3093  002768  D000               	nop2		;2 cycle nop
  3094  00276A  F000               	nop	
  3095                           
  3096                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3097  00276C  C077  F01C         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3098  002770  C078  F01D         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3099  002774  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3100                           
  3101                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3102  002778  D000               	nop2		;2 cycle nop
  3103  00277A  D000               	nop2		;2 cycle nop
  3104  00277C  F000               	nop	
  3105                           
  3106                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3107  00277E  C079  F01C         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3108  002782  C07A  F01D         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3109  002786  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3110                           
  3111                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3112  00278A  D000               	nop2		;2 cycle nop
  3113  00278C  D000               	nop2		;2 cycle nop
  3114  00278E  F000               	nop	
  3115                           
  3116                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3117  002790  C07B  F01C         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3118  002794  C07C  F01D         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3119  002798  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3120                           
  3121                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3122  00279C  D000               	nop2		;2 cycle nop
  3123  00279E  D000               	nop2		;2 cycle nop
  3124  0027A0  F000               	nop	
  3125                           
  3126                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3127  0027A2  C07D  F01C         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3128  0027A6  C07E  F01D         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3129  0027AA  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3130                           
  3131                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3132  0027AE  D000               	nop2		;2 cycle nop
  3133  0027B0  D000               	nop2		;2 cycle nop
  3134  0027B2  F000               	nop	
  3135                           
  3136                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3137  0027B4  C07F  F01C         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3138  0027B8  C080  F01D         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3139  0027BC  EC14  F01D         	call	_util_onewire_write_bit	;wreg free
  3140                           
  3141                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3142  0027C0  D000               	nop2		;2 cycle nop
  3143  0027C2  D000               	nop2		;2 cycle nop
  3144  0027C4  F000               	nop	
  3145  0027C6  0012               	return		;funcret
  3146  0027C8                     __end_of_util_onewire_write_byte:
  3147                           	opt stack 0
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _util_onewire_write_bit *****************
  3165 ;; Defined at:
  3166 ;;		line 121 in file "easat2_util_onewire.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  bit_in          2   27[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3180 ;;      Params:         2       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0
  3183 ;;      Totals:         2       0       0       0       0       0       0
  3184 ;;Total ram usage:        2 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_util_onewire_write_byte
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text7
  3195  003A28                     __ptext7:
  3196                           	opt stack 0
  3197  003A28                     _util_onewire_write_bit:
  3198                           	opt stack 25
  3199                           
  3200                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3201                           
  3202                           ;incstack = 0
  3203  003A28  9692               	bcf	3986,3,c	;volatile
  3204                           
  3205                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3206  003A2A  501C               	movf	util_onewire_write_bit@bit_in,w,c
  3207  003A2C  101D               	iorwf	util_onewire_write_bit@bit_in+1,w,c
  3208  003A2E  B4D8               	btfsc	status,2,c
  3209  003A30  D009               	goto	l186
  3210                           
  3211                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3212  003A32  9680               	bcf	3968,3,c	;volatile
  3213                           
  3214                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3215  003A34  D000               	nop2		;2 cycle nop
  3216  003A36  D000               	nop2		;2 cycle nop
  3217  003A38  F000               	nop	
  3218                           
  3219                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3220  003A3A  8680               	bsf	3968,3,c	;volatile
  3221                           
  3222                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3223  003A3C  0E09               	movlw	9
  3224  003A3E                     u6357:
  3225  003A3E  2EE8               	decfsz	wreg,f,c
  3226  003A40  D7FE               	bra	u6357
  3227                           
  3228                           ;easat2_util_onewire.c: 141: } else {
  3229  003A42  0012               	return	
  3230  003A44                     l186:
  3231                           
  3232                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3233  003A44  9680               	bcf	3968,3,c	;volatile
  3234                           
  3235                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3236  003A46  0E0B               	movlw	11
  3237  003A48                     u6367:
  3238  003A48  2EE8               	decfsz	wreg,f,c
  3239  003A4A  D7FE               	bra	u6367
  3240  003A4C  D000               	nop2	
  3241                           
  3242                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3243  003A4E  8680               	bsf	3968,3,c	;volatile
  3244                           
  3245                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3246  003A50  D000               	nop2		;2 cycle nop
  3247  003A52  D000               	nop2		;2 cycle nop
  3248  003A54  F000               	nop	
  3249  003A56  0012               	return	
  3250  003A58                     __end_of_util_onewire_write_bit:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           intcon	equ	0xFF2
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           postinc2	equ	0xFDE
  3263                           postdec2	equ	0xFDD
  3264                           fsr2h	equ	0xFDA
  3265                           fsr2l	equ	0xFD9
  3266                           status	equ	0xFD8
  3267                           
  3268 ;; *************** function _util_onewire_reset *****************
  3269 ;; Defined at:
  3270 ;;		line 18 in file "easat2_util_onewire.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  presence        2   30[COMRAM] int 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   27[COMRAM] int 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         2       0       0       0       0       0       0
  3285 ;;      Locals:         2       0       0       0       0       0       0
  3286 ;;      Temps:          1       0       0       0       0       0       0
  3287 ;;      Totals:         5       0       0       0       0       0       0
  3288 ;;Total ram usage:        5 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    2
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_util_getTemperature
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text8
  3299  003854                     __ptext8:
  3300                           	opt stack 0
  3301  003854                     _util_onewire_reset:
  3302                           	opt stack 26
  3303                           
  3304                           ;easat2_util_onewire.c: 20: int presence = 1;
  3305                           
  3306                           ;incstack = 0
  3307  003854  0E00               	movlw	0
  3308  003856  6E20               	movwf	util_onewire_reset@presence+1,c
  3309  003858  0E01               	movlw	1
  3310  00385A  6E1F               	movwf	util_onewire_reset@presence,c
  3311                           
  3312                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3313  00385C  9692               	bcf	3986,3,c	;volatile
  3314                           
  3315                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3316  00385E  9680               	bcf	3968,3,c	;volatile
  3317                           
  3318                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3319  003860  0E5D               	movlw	93
  3320  003862                     u6377:
  3321  003862  2EE8               	decfsz	wreg,f,c
  3322  003864  D7FE               	bra	u6377
  3323  003866  F000               	nop	
  3324                           
  3325                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3326  003868  8680               	bsf	3968,3,c	;volatile
  3327                           
  3328                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3329  00386A  0E0B               	movlw	11
  3330  00386C                     u6387:
  3331  00386C  2EE8               	decfsz	wreg,f,c
  3332  00386E  D7FE               	bra	u6387
  3333  003870  D000               	nop2	
  3334                           
  3335                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3336  003872  8692               	bsf	3986,3,c	;volatile
  3337                           
  3338                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3339  003874  A680               	btfss	3968,3,c	;volatile
  3340  003876  D003               	goto	u3380
  3341  003878  6A1E               	clrf	??_util_onewire_reset& (0+255),c
  3342  00387A  2A1E               	incf	??_util_onewire_reset& (0+255),f,c
  3343  00387C  D001               	goto	u3388
  3344  00387E                     u3380:
  3345  00387E  6A1E               	clrf	??_util_onewire_reset& (0+255),c
  3346  003880                     u3388:
  3347  003880  501E               	movf	??_util_onewire_reset,w,c
  3348  003882  6E1F               	movwf	util_onewire_reset@presence,c
  3349  003884  6A20               	clrf	util_onewire_reset@presence+1,c
  3350                           
  3351                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3352  003886  0E46               	movlw	70
  3353  003888                     u6397:
  3354  003888  2EE8               	decfsz	wreg,f,c
  3355  00388A  D7FE               	bra	u6397
  3356                           
  3357                           ;easat2_util_onewire.c: 56: return presence;
  3358  00388C  C01F  F01C         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3359  003890  C020  F01D         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3360  003894  0012               	return	
  3361  003896                     __end_of_util_onewire_reset:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postdec1	equ	0xFE5
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           postinc2	equ	0xFDE
  3374                           postdec2	equ	0xFDD
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _util_onewire_read_byte *****************
  3380 ;; Defined at:
  3381 ;;		line 96 in file "easat2_util_onewire.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  value           2   49[BANK0 ] int 
  3386 ;;  bit7            2   47[BANK0 ] int 
  3387 ;;  bit6            2   45[BANK0 ] int 
  3388 ;;  bit5            2   43[BANK0 ] int 
  3389 ;;  bit4            2   41[BANK0 ] int 
  3390 ;;  bit3            2   39[BANK0 ] int 
  3391 ;;  bit2            2   37[BANK0 ] int 
  3392 ;;  bit1            2   35[BANK0 ] int 
  3393 ;;  bit0            2   33[BANK0 ] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2   17[BANK0 ] int 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3403 ;;      Params:         0       2       0       0       0       0       0
  3404 ;;      Locals:         0      18       0       0       0       0       0
  3405 ;;      Temps:          0      14       0       0       0       0       0
  3406 ;;      Totals:         0      34       0       0       0       0       0
  3407 ;;Total ram usage:       34 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    3
  3410 ;; This function calls:
  3411 ;;		_util_onewire_read_bit
  3412 ;; This function is called by:
  3413 ;;		_util_getTemperature
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text9
  3418  0024B2                     __ptext9:
  3419                           	opt stack 0
  3420  0024B2                     _util_onewire_read_byte:
  3421                           	opt stack 25
  3422                           
  3423                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3424                           ;easat2_util_onewire.c: 99: int value = 0;
  3425                           
  3426                           ;incstack = 0
  3427  0024B2  0E00               	movlw	0
  3428  0024B4  0100               	movlb	0	; () banked
  3429  0024B6  6F92               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3430  0024B8  0E00               	movlw	0
  3431  0024BA  6F91               	movwf	util_onewire_read_byte@value& (0+255),b
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3435  0024BC  8692               	bsf	3986,3,c	;volatile
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3439  0024BE  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3440  0024C2  C01C  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3441  0024C6  C01D  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3442                           
  3443                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3444  0024CA  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3445  0024CE  C01C  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3446  0024D2  C01D  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3447                           
  3448                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3449  0024D6  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3450  0024DA  C01C  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3451  0024DE  C01D  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3452                           
  3453                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3454  0024E2  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3455  0024E6  C01C  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3456  0024EA  C01D  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3457                           
  3458                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3459  0024EE  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3460  0024F2  C01C  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3461  0024F6  C01D  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3462                           
  3463                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3464  0024FA  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3465  0024FE  C01C  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3466  002502  C01D  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3467                           
  3468                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3469  002506  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3470  00250A  C01C  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3471  00250E  C01D  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3472                           
  3473                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3474  002512  ECE2  F01C         	call	_util_onewire_read_bit	;wreg free
  3475  002516  C01C  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3476  00251A  C01D  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3477                           
  3478                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3479                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3480  00251E  C08F  F073         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3481  002522  C090  F074         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3482  002526  0E07               	movlw	7
  3483  002528                     u3435:
  3484  002528  90D8               	bcf	status,0,c
  3485  00252A  0100               	movlb	0	; () banked
  3486  00252C  3773               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3487  00252E  3774               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3488  002530  2EE8               	decfsz	wreg,f,c
  3489  002532  D7FA               	goto	u3435
  3490  002534  C08D  F075         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3491  002538  C08E  F076         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3492  00253C  0E06               	movlw	6
  3493  00253E                     u3445:
  3494  00253E  90D8               	bcf	status,0,c
  3495  002540  0100               	movlb	0	; () banked
  3496  002542  3775               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3497  002544  3776               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3498  002546  2EE8               	decfsz	wreg,f,c
  3499  002548  D7FA               	goto	u3445
  3500  00254A  C08B  F077         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3501  00254E  C08C  F078         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3502  002552  0E05               	movlw	5
  3503  002554                     u3455:
  3504  002554  90D8               	bcf	status,0,c
  3505  002556  0100               	movlb	0	; () banked
  3506  002558  3777               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3507  00255A  3778               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3508  00255C  2EE8               	decfsz	wreg,f,c
  3509  00255E  D7FA               	goto	u3455
  3510  002560  C089  F079         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3511  002564  C08A  F07A         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3512  002568  0100               	movlb	0	; () banked
  3513  00256A  3B79               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3514  00256C  3B7A               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3515  00256E  0EF0               	movlw	240
  3516  002570  177A               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3517  002572  5179               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3518  002574  0B0F               	andlw	15
  3519  002576  137A               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3520  002578  0EF0               	movlw	240
  3521  00257A  1779               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3522  00257C  C087  F07B         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3523  002580  C088  F07C         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3524  002584  0100               	movlb	0	; () banked
  3525  002586  90D8               	bcf	status,0,c
  3526  002588  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3527  00258A  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3528  00258C  0100               	movlb	0	; () banked
  3529  00258E  90D8               	bcf	status,0,c
  3530  002590  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3531  002592  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3532  002594  0100               	movlb	0	; () banked
  3533  002596  90D8               	bcf	status,0,c
  3534  002598  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3535  00259A  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3536  00259C  C085  F07D         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3537  0025A0  C086  F07E         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3538  0025A4  0100               	movlb	0	; () banked
  3539  0025A6  90D8               	bcf	status,0,c
  3540  0025A8  377D               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3541  0025AA  377E               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3542  0025AC  0100               	movlb	0	; () banked
  3543  0025AE  90D8               	bcf	status,0,c
  3544  0025B0  377D               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3545  0025B2  377E               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3546  0025B4  C083  F07F         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3547  0025B8  C084  F080         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3548  0025BC  90D8               	bcf	status,0,c
  3549  0025BE  0100               	movlb	0	; () banked
  3550  0025C0  377F               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3551  0025C2  3780               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3552  0025C4  0100               	movlb	0	; () banked
  3553  0025C6  517D               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3554  0025C8  0100               	movlb	0	; () banked
  3555  0025CA  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3556  0025CC  0100               	movlb	0	; () banked
  3557  0025CE  517E               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3558  0025D0  0100               	movlb	0	; () banked
  3559  0025D2  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3560  0025D4  0100               	movlb	0	; () banked
  3561  0025D6  517B               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3562  0025D8  0100               	movlb	0	; () banked
  3563  0025DA  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3564  0025DC  0100               	movlb	0	; () banked
  3565  0025DE  517C               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3566  0025E0  0100               	movlb	0	; () banked
  3567  0025E2  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3568  0025E4  0100               	movlb	0	; () banked
  3569  0025E6  5179               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3570  0025E8  0100               	movlb	0	; () banked
  3571  0025EA  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3572  0025EC  0100               	movlb	0	; () banked
  3573  0025EE  517A               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3574  0025F0  0100               	movlb	0	; () banked
  3575  0025F2  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3576  0025F4  0100               	movlb	0	; () banked
  3577  0025F6  5177               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3578  0025F8  0100               	movlb	0	; () banked
  3579  0025FA  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3580  0025FC  0100               	movlb	0	; () banked
  3581  0025FE  5178               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3582  002600  0100               	movlb	0	; () banked
  3583  002602  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3584  002604  0100               	movlb	0	; () banked
  3585  002606  5175               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3586  002608  0100               	movlb	0	; () banked
  3587  00260A  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3588  00260C  0100               	movlb	0	; () banked
  3589  00260E  5176               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3590  002610  0100               	movlb	0	; () banked
  3591  002612  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3592  002614  0100               	movlb	0	; () banked
  3593  002616  5173               	movf	??_util_onewire_read_byte& (0+255),w,b
  3594  002618  0100               	movlb	0	; () banked
  3595  00261A  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3596  00261C  0100               	movlb	0	; () banked
  3597  00261E  5174               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3598  002620  0100               	movlb	0	; () banked
  3599  002622  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3600  002624  0100               	movlb	0	; () banked
  3601  002626  5181               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3602  002628  0100               	movlb	0	; () banked
  3603  00262A  257F               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3604  00262C  0100               	movlb	0	; () banked
  3605  00262E  6F91               	movwf	util_onewire_read_byte@value& (0+255),b
  3606  002630  0100               	movlb	0	; () banked
  3607  002632  5182               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3608  002634  0100               	movlb	0	; () banked
  3609  002636  2180               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3610  002638  0100               	movlb	0	; () banked
  3611  00263A  6F92               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;easat2_util_onewire.c: 116: return value;
  3615  00263C  C091  F071         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3616  002640  C092  F072         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3617  002644  0012               	return	
  3618  002646                     __end_of_util_onewire_read_byte:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           intcon	equ	0xFF2
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           postdec1	equ	0xFE5
  3628                           fsr1h	equ	0xFE2
  3629                           fsr1l	equ	0xFE1
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _util_onewire_read_bit *****************
  3637 ;; Defined at:
  3638 ;;		line 162 in file "easat2_util_onewire.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  value           2   30[COMRAM] int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   27[COMRAM] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         2       0       0       0       0       0       0
  3653 ;;      Locals:         2       0       0       0       0       0       0
  3654 ;;      Temps:          1       0       0       0       0       0       0
  3655 ;;      Totals:         5       0       0       0       0       0       0
  3656 ;;Total ram usage:        5 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    2
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_util_onewire_read_byte
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text10
  3667  0039C4                     __ptext10:
  3668                           	opt stack 0
  3669  0039C4                     _util_onewire_read_bit:
  3670                           	opt stack 25
  3671                           
  3672                           ;easat2_util_onewire.c: 164: int value = 0;
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;incstack = 0
  3676  0039C4  0E00               	movlw	0
  3677  0039C6  6E20               	movwf	util_onewire_read_bit@value+1,c
  3678  0039C8  0E00               	movlw	0
  3679  0039CA  6E1F               	movwf	util_onewire_read_bit@value,c
  3680                           
  3681                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3682  0039CC  9692               	bcf	3986,3,c	;volatile
  3683                           
  3684                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3685  0039CE  9680               	bcf	3968,3,c	;volatile
  3686                           
  3687                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3688                           
  3689                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3690  0039D0  8680               	bsf	3968,3,c	;volatile
  3691                           
  3692                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3693  0039D2  D000               	nop2		;2 cycle nop
  3694                           
  3695                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3696  0039D4  A680               	btfss	3968,3,c	;volatile
  3697  0039D6  D003               	goto	u2900
  3698  0039D8  6A1E               	clrf	??_util_onewire_read_bit& (0+255),c
  3699  0039DA  2A1E               	incf	??_util_onewire_read_bit& (0+255),f,c
  3700  0039DC  D001               	goto	u2908
  3701  0039DE                     u2900:
  3702  0039DE  6A1E               	clrf	??_util_onewire_read_bit& (0+255),c
  3703  0039E0                     u2908:
  3704  0039E0  501E               	movf	??_util_onewire_read_bit,w,c
  3705  0039E2  6E1F               	movwf	util_onewire_read_bit@value,c
  3706  0039E4  6A20               	clrf	util_onewire_read_bit@value+1,c
  3707                           
  3708                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3709  0039E6  0E0A               	movlw	10
  3710  0039E8                     u6407:
  3711  0039E8  2EE8               	decfsz	wreg,f,c
  3712  0039EA  D7FE               	bra	u6407
  3713                           
  3714                           ;easat2_util_onewire.c: 187: return value;
  3715  0039EC  C01F  F01C         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3716  0039F0  C020  F01D         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3717  0039F4  0012               	return	
  3718  0039F6                     __end_of_util_onewire_read_bit:
  3719                           	opt stack 0
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           postdec1	equ	0xFE5
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function ___ftdiv *****************
  3737 ;; Defined at:
  3738 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  f1              3   20[BANK0 ] float 
  3741 ;;  f2              3   23[BANK0 ] float 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  f3              3   27[BANK0 ] float 
  3744 ;;  sign            1   31[BANK0 ] unsigned char 
  3745 ;;  exp             1   30[BANK0 ] unsigned char 
  3746 ;;  cntr            1   26[BANK0 ] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  3   20[BANK0 ] float 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         0       6       0       0       0       0       0
  3757 ;;      Locals:         0       6       0       0       0       0       0
  3758 ;;      Temps:          3       0       0       0       0       0       0
  3759 ;;      Totals:         3      12       0       0       0       0       0
  3760 ;;Total ram usage:       15 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		___ftpack
  3765 ;; This function is called by:
  3766 ;;		_util_getTemperature
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text11
  3771  002BC6                     __ptext11:
  3772                           	opt stack 0
  3773  002BC6                     ___ftdiv:
  3774                           	opt stack 25
  3775                           
  3776                           ;incstack = 0
  3777  002BC6  C076  F025         	movff	___ftdiv@f1+2,??___ftdiv
  3778  002BCA  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  3779  002BCC  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  3780  002BCE  0100               	movlb	0	; () banked
  3781  002BD0  3575               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3782  002BD2  3625               	rlcf	??___ftdiv& (0+255),f,c
  3783  002BD4  E301               	bnc	u6021
  3784  002BD6  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  3785  002BD8                     u6021:
  3786  002BD8  5025               	movf	??___ftdiv,w,c
  3787  002BDA  0100               	movlb	0	; () banked
  3788  002BDC  6F7E               	movwf	___ftdiv@exp& (0+255),b
  3789  002BDE  0100               	movlb	0	; () banked
  3790  002BE0  517E               	movf	___ftdiv@exp& (0+255),w,b
  3791  002BE2  A4D8               	btfss	status,2,c
  3792  002BE4  D00A               	goto	l5638
  3793                           
  3794                           ; BSR set to: 0
  3795  002BE6  0E00               	movlw	0
  3796  002BE8  0100               	movlb	0	; () banked
  3797  002BEA  6F74               	movwf	?___ftdiv& (0+255),b
  3798  002BEC  0E00               	movlw	0
  3799  002BEE  0100               	movlb	0	; () banked
  3800  002BF0  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  3801  002BF2  0E00               	movlw	0
  3802  002BF4  0100               	movlb	0	; () banked
  3803  002BF6  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806  002BF8  0012               	return	
  3807  002BFA                     l5638:
  3808                           
  3809                           ; BSR set to: 0
  3810  002BFA  C079  F025         	movff	___ftdiv@f2+2,??___ftdiv
  3811  002BFE  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  3812  002C00  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  3813  002C02  0100               	movlb	0	; () banked
  3814  002C04  3578               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3815  002C06  3625               	rlcf	??___ftdiv& (0+255),f,c
  3816  002C08  E301               	bnc	u6041
  3817  002C0A  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  3818  002C0C                     u6041:
  3819  002C0C  5025               	movf	??___ftdiv,w,c
  3820  002C0E  0100               	movlb	0	; () banked
  3821  002C10  6F7F               	movwf	___ftdiv@sign& (0+255),b
  3822  002C12  0100               	movlb	0	; () banked
  3823  002C14  517F               	movf	___ftdiv@sign& (0+255),w,b
  3824  002C16  A4D8               	btfss	status,2,c
  3825  002C18  D00A               	goto	l5644
  3826                           
  3827                           ; BSR set to: 0
  3828  002C1A  0E00               	movlw	0
  3829  002C1C  0100               	movlb	0	; () banked
  3830  002C1E  6F74               	movwf	?___ftdiv& (0+255),b
  3831  002C20  0E00               	movlw	0
  3832  002C22  0100               	movlb	0	; () banked
  3833  002C24  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  3834  002C26  0E00               	movlw	0
  3835  002C28  0100               	movlb	0	; () banked
  3836  002C2A  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  3837                           
  3838                           ; BSR set to: 0
  3839  002C2C  0012               	return	
  3840  002C2E                     l5644:
  3841                           
  3842                           ; BSR set to: 0
  3843  002C2E  0E00               	movlw	0
  3844  002C30  0100               	movlb	0	; () banked
  3845  002C32  6F7B               	movwf	___ftdiv@f3& (0+255),b
  3846  002C34  0E00               	movlw	0
  3847  002C36  0100               	movlb	0	; () banked
  3848  002C38  6F7C               	movwf	(___ftdiv@f3+1)& (0+255),b
  3849  002C3A  0E00               	movlw	0
  3850  002C3C  0100               	movlb	0	; () banked
  3851  002C3E  6F7D               	movwf	(___ftdiv@f3+2)& (0+255),b
  3852                           
  3853                           ; BSR set to: 0
  3854  002C40  0100               	movlb	0	; () banked
  3855  002C42  517F               	movf	___ftdiv@sign& (0+255),w,b
  3856  002C44  0F89               	addlw	137
  3857  002C46  0100               	movlb	0	; () banked
  3858  002C48  5F7E               	subwf	___ftdiv@exp& (0+255),f,b
  3859                           
  3860                           ; BSR set to: 0
  3861  002C4A  C076  F07F         	movff	___ftdiv@f1+2,___ftdiv@sign
  3862                           
  3863                           ; BSR set to: 0
  3864  002C4E  0100               	movlb	0	; () banked
  3865  002C50  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3866  002C52  0100               	movlb	0	; () banked
  3867  002C54  1B7F               	xorwf	___ftdiv@sign& (0+255),f,b
  3868                           
  3869                           ; BSR set to: 0
  3870  002C56  0E80               	movlw	128
  3871  002C58  0100               	movlb	0	; () banked
  3872  002C5A  177F               	andwf	___ftdiv@sign& (0+255),f,b
  3873                           
  3874                           ; BSR set to: 0
  3875  002C5C  0100               	movlb	0	; () banked
  3876  002C5E  8F75               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3877                           
  3878                           ; BSR set to: 0
  3879  002C60  0EFF               	movlw	255
  3880  002C62  0100               	movlb	0	; () banked
  3881  002C64  1774               	andwf	___ftdiv@f1& (0+255),f,b
  3882  002C66  0EFF               	movlw	255
  3883  002C68  0100               	movlb	0	; () banked
  3884  002C6A  1775               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3885  002C6C  0E00               	movlw	0
  3886  002C6E  0100               	movlb	0	; () banked
  3887  002C70  1776               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3888                           
  3889                           ; BSR set to: 0
  3890  002C72  0100               	movlb	0	; () banked
  3891  002C74  8F78               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3892                           
  3893                           ; BSR set to: 0
  3894  002C76  0EFF               	movlw	255
  3895  002C78  0100               	movlb	0	; () banked
  3896  002C7A  1777               	andwf	___ftdiv@f2& (0+255),f,b
  3897  002C7C  0EFF               	movlw	255
  3898  002C7E  0100               	movlb	0	; () banked
  3899  002C80  1778               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3900  002C82  0E00               	movlw	0
  3901  002C84  0100               	movlb	0	; () banked
  3902  002C86  1779               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3903                           
  3904                           ; BSR set to: 0
  3905  002C88  0E18               	movlw	24
  3906  002C8A  0100               	movlb	0	; () banked
  3907  002C8C  6F7A               	movwf	___ftdiv@cntr& (0+255),b
  3908  002C8E                     l5664:
  3909                           
  3910                           ; BSR set to: 0
  3911  002C8E  0100               	movlb	0	; () banked
  3912  002C90  90D8               	bcf	status,0,c
  3913  002C92  377B               	rlcf	___ftdiv@f3& (0+255),f,b
  3914  002C94  377C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3915  002C96  377D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3916                           
  3917                           ; BSR set to: 0
  3918  002C98  0100               	movlb	0	; () banked
  3919  002C9A  5177               	movf	___ftdiv@f2& (0+255),w,b
  3920  002C9C  0100               	movlb	0	; () banked
  3921  002C9E  5D74               	subwf	___ftdiv@f1& (0+255),w,b
  3922  002CA0  0100               	movlb	0	; () banked
  3923  002CA2  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3924  002CA4  0100               	movlb	0	; () banked
  3925  002CA6  5975               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3926  002CA8  0100               	movlb	0	; () banked
  3927  002CAA  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3928  002CAC  0100               	movlb	0	; () banked
  3929  002CAE  5976               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3930  002CB0  A0D8               	btfss	status,0,c
  3931  002CB2  D00E               	goto	l898
  3932                           
  3933                           ; BSR set to: 0
  3934  002CB4  0100               	movlb	0	; () banked
  3935  002CB6  5177               	movf	___ftdiv@f2& (0+255),w,b
  3936  002CB8  0100               	movlb	0	; () banked
  3937  002CBA  5F74               	subwf	___ftdiv@f1& (0+255),f,b
  3938  002CBC  0100               	movlb	0	; () banked
  3939  002CBE  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3940  002CC0  0100               	movlb	0	; () banked
  3941  002CC2  5B75               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3942  002CC4  0100               	movlb	0	; () banked
  3943  002CC6  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3944  002CC8  0100               	movlb	0	; () banked
  3945  002CCA  5B76               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3946                           
  3947                           ; BSR set to: 0
  3948  002CCC  0100               	movlb	0	; () banked
  3949  002CCE  817B               	bsf	___ftdiv@f3& (0+255),0,b
  3950  002CD0                     l898:
  3951                           
  3952                           ; BSR set to: 0
  3953  002CD0  0100               	movlb	0	; () banked
  3954  002CD2  90D8               	bcf	status,0,c
  3955  002CD4  3774               	rlcf	___ftdiv@f1& (0+255),f,b
  3956  002CD6  3775               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3957  002CD8  3776               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3958                           
  3959                           ; BSR set to: 0
  3960  002CDA  0100               	movlb	0	; () banked
  3961  002CDC  2F7A               	decfsz	___ftdiv@cntr& (0+255),f,b
  3962  002CDE  D7D7               	goto	l5664
  3963                           
  3964                           ; BSR set to: 0
  3965                           
  3966                           ; BSR set to: 0
  3967  002CE0  C07B  F01C         	movff	___ftdiv@f3,___ftpack@arg
  3968  002CE4  C07C  F01D         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3969  002CE8  C07D  F01E         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3970  002CEC  C07E  F01F         	movff	___ftdiv@exp,___ftpack@exp
  3971  002CF0  C07F  F020         	movff	___ftdiv@sign,___ftpack@sign
  3972  002CF4  EC6B  F019         	call	___ftpack	;wreg free
  3973  002CF8  C01C  F074         	movff	?___ftpack,?___ftdiv
  3974  002CFC  C01D  F075         	movff	?___ftpack+1,?___ftdiv+1
  3975  002D00  C01E  F076         	movff	?___ftpack+2,?___ftdiv+2
  3976  002D04  0012               	return	
  3977  002D06                     __end_of___ftdiv:
  3978                           	opt stack 0
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           postdec1	equ	0xFE5
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           postinc2	equ	0xFDE
  3990                           postdec2	equ	0xFDD
  3991                           fsr2h	equ	0xFDA
  3992                           fsr2l	equ	0xFD9
  3993                           status	equ	0xFD8
  3994                           
  3995 ;; *************** function ___awtoft *****************
  3996 ;; Defined at:
  3997 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  c               2   17[BANK0 ] int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  sign            1   35[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  3   17[BANK0 ] float 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         0       3       0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0
  4014 ;;      Totals:         1       3       0       0       0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    3
  4018 ;; This function calls:
  4019 ;;		___ftpack
  4020 ;; This function is called by:
  4021 ;;		_util_getTemperature
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text12
  4026  003954                     __ptext12:
  4027                           	opt stack 0
  4028  003954                     ___awtoft:
  4029                           	opt stack 25
  4030                           
  4031                           ;incstack = 0
  4032  003954  0E00               	movlw	0
  4033  003956  6E24               	movwf	___awtoft@sign,c
  4034  003958  0100               	movlb	0	; () banked
  4035  00395A  AF72               	btfss	(___awtoft@c+1)& (0+255),7,b
  4036  00395C  D007               	goto	l5686
  4037                           
  4038                           ; BSR set to: 0
  4039  00395E  0100               	movlb	0	; () banked
  4040  003960  6D71               	negf	___awtoft@c& (0+255),b
  4041  003962  1F72               	comf	(___awtoft@c+1)& (0+255),f,b
  4042  003964  B0D8               	btfsc	status,0,c
  4043  003966  2B72               	incf	(___awtoft@c+1)& (0+255),f,b
  4044                           
  4045                           ; BSR set to: 0
  4046  003968  0E01               	movlw	1
  4047  00396A  6E24               	movwf	___awtoft@sign,c
  4048  00396C                     l5686:
  4049                           
  4050                           ; BSR set to: 0
  4051  00396C  C071  F01C         	movff	___awtoft@c,___ftpack@arg
  4052  003970  C072  F01D         	movff	___awtoft@c+1,___ftpack@arg+1
  4053  003974  6A1E               	clrf	___ftpack@arg+2,c
  4054  003976  0E8E               	movlw	142
  4055  003978  6E1F               	movwf	___ftpack@exp,c
  4056  00397A  C024  F020         	movff	___awtoft@sign,___ftpack@sign
  4057  00397E  EC6B  F019         	call	___ftpack	;wreg free
  4058  003982  C01C  F071         	movff	?___ftpack,?___awtoft
  4059  003986  C01D  F072         	movff	?___ftpack+1,?___awtoft+1
  4060  00398A  C01E  F073         	movff	?___ftpack+2,?___awtoft+2
  4061  00398E  0012               	return	
  4062  003990                     __end_of___awtoft:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           intcon	equ	0xFF2
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           postinc2	equ	0xFDE
  4075                           postdec2	equ	0xFDD
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _util_getSolarCurrent *****************
  4081 ;; Defined at:
  4082 ;;		line 52 in file "easat2_util_inputs.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  solarCurrent    3   67[BANK0 ] float 
  4087 ;;  value           3   64[BANK0 ] float 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2   62[BANK0 ] int 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         0       2       0       0       0       0       0
  4098 ;;      Locals:         0       6       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0
  4100 ;;      Totals:         0       8       0       0       0       0       0
  4101 ;;Total ram usage:        8 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		___ftmul
  4106 ;;		___fttol
  4107 ;;		___lwtoft
  4108 ;; This function is called by:
  4109 ;;		_main_loop
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text13
  4114  002F18                     __ptext13:
  4115                           	opt stack 0
  4116  002F18                     _util_getSolarCurrent:
  4117                           	opt stack 25
  4118                           
  4119                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4120                           
  4121                           ;incstack = 0
  4122  002F18  0E00               	movlw	0
  4123  002F1A  0100               	movlb	0	; () banked
  4124  002F1C  6FA0               	movwf	util_getSolarCurrent@value& (0+255),b
  4125  002F1E  0E00               	movlw	0
  4126  002F20  0100               	movlb	0	; () banked
  4127  002F22  6FA1               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4128  002F24  0E00               	movlw	0
  4129  002F26  0100               	movlb	0	; () banked
  4130  002F28  6FA2               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4131  002F2A  0E00               	movlw	0
  4132  002F2C  0100               	movlb	0	; () banked
  4133  002F2E  6FA3               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4134  002F30  0E00               	movlw	0
  4135  002F32  0100               	movlb	0	; () banked
  4136  002F34  6FA4               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4137  002F36  0E00               	movlw	0
  4138  002F38  0100               	movlb	0	; () banked
  4139  002F3A  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4143  002F3C  84C2               	bsf	4034,2,c	;volatile
  4144  002F3E  96C2               	bcf	4034,3,c	;volatile
  4145  002F40  98C2               	bcf	4034,4,c	;volatile
  4146  002F42  9AC2               	bcf	4034,5,c	;volatile
  4147  002F44  9CC2               	bcf	4034,6,c	;volatile
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4151  002F46  80C2               	bsf	4034,0,c	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4155  002F48  9C9E               	bcf	3998,6,c	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4159  002F4A  82C2               	bsf	4034,1,c	;volatile
  4160  002F4C                     l129:
  4161  002F4C  AC9E               	btfss	3998,6,c	;volatile
  4162  002F4E  D7FE               	goto	l129
  4163                           
  4164                           ;easat2_util_inputs.c: 63: value = ADRES;
  4165  002F50  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4166  002F54  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4167  002F58  EC83  F01D         	call	___lwtoft	;wreg free
  4168  002F5C  C071  F0A0         	movff	?___lwtoft,util_getSolarCurrent@value
  4169  002F60  C072  F0A1         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4170  002F64  C073  F0A2         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4171                           
  4172                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4173  002F68  9C9E               	bcf	3998,6,c	;volatile
  4174                           
  4175                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4176  002F6A  90C2               	bcf	4034,0,c	;volatile
  4177                           
  4178                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4179  002F6C  C0A0  F079         	movff	util_getSolarCurrent@value,___ftmul@f1
  4180  002F70  C0A1  F07A         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4181  002F74  C0A2  F07B         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4182  002F78  0E33               	movlw	51
  4183  002F7A  0100               	movlb	0	; () banked
  4184  002F7C  6F7C               	movwf	___ftmul@f2& (0+255),b
  4185  002F7E  0E03               	movlw	3
  4186  002F80  0100               	movlb	0	; () banked
  4187  002F82  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4188  002F84  0E3B               	movlw	59
  4189  002F86  0100               	movlb	0	; () banked
  4190  002F88  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4191  002F8A  ECE4  F013         	call	___ftmul	;wreg free
  4192  002F8E  C079  F0A3         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4193  002F92  C07A  F0A4         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4194  002F96  C07B  F0A5         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4195                           
  4196                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4197  002F9A  C0A3  F079         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4198  002F9E  C0A4  F07A         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4199  002FA2  C0A5  F07B         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4200  002FA6  0E00               	movlw	0
  4201  002FA8  0100               	movlb	0	; () banked
  4202  002FAA  6F7C               	movwf	___ftmul@f2& (0+255),b
  4203  002FAC  0E80               	movlw	128
  4204  002FAE  0100               	movlb	0	; () banked
  4205  002FB0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4206  002FB2  0E3F               	movlw	63
  4207  002FB4  0100               	movlb	0	; () banked
  4208  002FB6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4209  002FB8  ECE4  F013         	call	___ftmul	;wreg free
  4210  002FBC  C079  F0A3         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4211  002FC0  C07A  F0A4         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4212  002FC4  C07B  F0A5         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4213                           
  4214                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4215  002FC8  C0A3  F08F         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4216  002FCC  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4217  002FD0  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4218  002FD4  EC41  F015         	call	___fttol	;wreg free
  4219  002FD8  C08F  F09E         	movff	?___fttol,?_util_getSolarCurrent
  4220  002FDC  C090  F09F         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4221  002FE0  0012               	return	
  4222  002FE2                     __end_of_util_getSolarCurrent:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           intcon	equ	0xFF2
  4229                           postinc0	equ	0xFEE
  4230                           wreg	equ	0xFE8
  4231                           postdec1	equ	0xFE5
  4232                           fsr1h	equ	0xFE2
  4233                           fsr1l	equ	0xFE1
  4234                           postinc2	equ	0xFDE
  4235                           postdec2	equ	0xFDD
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240 ;; *************** function _util_getBatteryVoltage *****************
  4241 ;; Defined at:
  4242 ;;		line 19 in file "easat2_util_inputs.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  voltage         3   46[BANK0 ] float 
  4247 ;;  value           3   43[BANK0 ] float 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  3   40[BANK0 ] float 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4257 ;;      Params:         0       3       0       0       0       0       0
  4258 ;;      Locals:         0       6       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0
  4260 ;;      Totals:         0       9       0       0       0       0       0
  4261 ;;Total ram usage:        9 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    4
  4264 ;; This function calls:
  4265 ;;		___ftmul
  4266 ;;		___lwtoft
  4267 ;; This function is called by:
  4268 ;;		_main_loop
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text14
  4273  0030AC                     __ptext14:
  4274                           	opt stack 0
  4275  0030AC                     _util_getBatteryVoltage:
  4276                           	opt stack 25
  4277                           
  4278                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4279                           
  4280                           ;incstack = 0
  4281  0030AC  0E00               	movlw	0
  4282  0030AE  0100               	movlb	0	; () banked
  4283  0030B0  6F8B               	movwf	util_getBatteryVoltage@value& (0+255),b
  4284  0030B2  0E00               	movlw	0
  4285  0030B4  0100               	movlb	0	; () banked
  4286  0030B6  6F8C               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4287  0030B8  0E00               	movlw	0
  4288  0030BA  0100               	movlb	0	; () banked
  4289  0030BC  6F8D               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4290  0030BE  0E00               	movlw	0
  4291  0030C0  0100               	movlb	0	; () banked
  4292  0030C2  6F8E               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4293  0030C4  0E00               	movlw	0
  4294  0030C6  0100               	movlb	0	; () banked
  4295  0030C8  6F8F               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4296  0030CA  0E00               	movlw	0
  4297  0030CC  0100               	movlb	0	; () banked
  4298  0030CE  6F90               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4302  0030D0  94C2               	bcf	4034,2,c	;volatile
  4303  0030D2  96C2               	bcf	4034,3,c	;volatile
  4304  0030D4  98C2               	bcf	4034,4,c	;volatile
  4305  0030D6  9AC2               	bcf	4034,5,c	;volatile
  4306  0030D8  9CC2               	bcf	4034,6,c	;volatile
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4310  0030DA  80C2               	bsf	4034,0,c	;volatile
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4314  0030DC  9C9E               	bcf	3998,6,c	;volatile
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4318  0030DE  82C2               	bsf	4034,1,c	;volatile
  4319  0030E0                     l123:
  4320  0030E0  AC9E               	btfss	3998,6,c	;volatile
  4321  0030E2  D7FE               	goto	l123
  4322                           
  4323                           ;easat2_util_inputs.c: 30: value = ADRES;
  4324  0030E4  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4325  0030E8  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4326  0030EC  EC83  F01D         	call	___lwtoft	;wreg free
  4327  0030F0  C071  F08B         	movff	?___lwtoft,util_getBatteryVoltage@value
  4328  0030F4  C072  F08C         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4329  0030F8  C073  F08D         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4330                           
  4331                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4332  0030FC  9C9E               	bcf	3998,6,c	;volatile
  4333                           
  4334                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4335  0030FE  90C2               	bcf	4034,0,c	;volatile
  4336                           
  4337                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4338  003100  C08B  F079         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4339  003104  C08C  F07A         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4340  003108  C08D  F07B         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4341  00310C  0E33               	movlw	51
  4342  00310E  0100               	movlb	0	; () banked
  4343  003110  6F7C               	movwf	___ftmul@f2& (0+255),b
  4344  003112  0E03               	movlw	3
  4345  003114  0100               	movlb	0	; () banked
  4346  003116  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4347  003118  0E3B               	movlw	59
  4348  00311A  0100               	movlb	0	; () banked
  4349  00311C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4350  00311E  ECE4  F013         	call	___ftmul	;wreg free
  4351  003122  C079  F08E         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4352  003126  C07A  F08F         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4353  00312A  C07B  F090         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4354                           
  4355                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4356  00312E  C08E  F079         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4357  003132  C08F  F07A         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4358  003136  C090  F07B         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4359  00313A  0E66               	movlw	102
  4360  00313C  0100               	movlb	0	; () banked
  4361  00313E  6F7C               	movwf	___ftmul@f2& (0+255),b
  4362  003140  0EB6               	movlw	182
  4363  003142  0100               	movlb	0	; () banked
  4364  003144  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4365  003146  0E40               	movlw	64
  4366  003148  0100               	movlb	0	; () banked
  4367  00314A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4368  00314C  ECE4  F013         	call	___ftmul	;wreg free
  4369  003150  C079  F08E         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4370  003154  C07A  F08F         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4371  003158  C07B  F090         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4372                           
  4373                           ;easat2_util_inputs.c: 46: return voltage;
  4374  00315C  C08E  F088         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4375  003160  C08F  F089         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4376  003164  C090  F08A         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4377  003168  0012               	return	
  4378  00316A                     __end_of_util_getBatteryVoltage:
  4379                           	opt stack 0
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           intcon	equ	0xFF2
  4385                           postinc0	equ	0xFEE
  4386                           wreg	equ	0xFE8
  4387                           postdec1	equ	0xFE5
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8
  4395                           
  4396 ;; *************** function _util_getBatteryCurrent *****************
  4397 ;; Defined at:
  4398 ;;		line 85 in file "easat2_util_inputs.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  batteryCurre    3   67[BANK0 ] float 
  4403 ;;  value           3   64[BANK0 ] float 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  2   62[BANK0 ] int 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4413 ;;      Params:         0       2       0       0       0       0       0
  4414 ;;      Locals:         0       6       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0
  4416 ;;      Totals:         0       8       0       0       0       0       0
  4417 ;;Total ram usage:        8 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    4
  4420 ;; This function calls:
  4421 ;;		___ftmul
  4422 ;;		___fttol
  4423 ;;		___lwtoft
  4424 ;; This function is called by:
  4425 ;;		_main_loop
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text15
  4430  002FE2                     __ptext15:
  4431                           	opt stack 0
  4432  002FE2                     _util_getBatteryCurrent:
  4433                           	opt stack 25
  4434                           
  4435                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4436                           
  4437                           ;incstack = 0
  4438  002FE2  0E00               	movlw	0
  4439  002FE4  0100               	movlb	0	; () banked
  4440  002FE6  6FA0               	movwf	util_getBatteryCurrent@value& (0+255),b
  4441  002FE8  0E00               	movlw	0
  4442  002FEA  0100               	movlb	0	; () banked
  4443  002FEC  6FA1               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4444  002FEE  0E00               	movlw	0
  4445  002FF0  0100               	movlb	0	; () banked
  4446  002FF2  6FA2               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4447  002FF4  0E00               	movlw	0
  4448  002FF6  0100               	movlb	0	; () banked
  4449  002FF8  6FA3               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4450  002FFA  0E00               	movlw	0
  4451  002FFC  0100               	movlb	0	; () banked
  4452  002FFE  6FA4               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4453  003000  0E00               	movlw	0
  4454  003002  0100               	movlb	0	; () banked
  4455  003004  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4459  003006  94C2               	bcf	4034,2,c	;volatile
  4460  003008  96C2               	bcf	4034,3,c	;volatile
  4461  00300A  88C2               	bsf	4034,4,c	;volatile
  4462  00300C  8AC2               	bsf	4034,5,c	;volatile
  4463  00300E  9CC2               	bcf	4034,6,c	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4467  003010  80C2               	bsf	4034,0,c	;volatile
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4471  003012  9C9E               	bcf	3998,6,c	;volatile
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4475  003014  82C2               	bsf	4034,1,c	;volatile
  4476  003016                     l135:
  4477  003016  AC9E               	btfss	3998,6,c	;volatile
  4478  003018  D7FE               	goto	l135
  4479                           
  4480                           ;easat2_util_inputs.c: 96: value = ADRES;
  4481  00301A  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4482  00301E  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4483  003022  EC83  F01D         	call	___lwtoft	;wreg free
  4484  003026  C071  F0A0         	movff	?___lwtoft,util_getBatteryCurrent@value
  4485  00302A  C072  F0A1         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4486  00302E  C073  F0A2         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4487                           
  4488                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4489  003032  9C9E               	bcf	3998,6,c	;volatile
  4490                           
  4491                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4492  003034  90C2               	bcf	4034,0,c	;volatile
  4493                           
  4494                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4495  003036  C0A0  F079         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4496  00303A  C0A1  F07A         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4497  00303E  C0A2  F07B         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4498  003042  0E33               	movlw	51
  4499  003044  0100               	movlb	0	; () banked
  4500  003046  6F7C               	movwf	___ftmul@f2& (0+255),b
  4501  003048  0E03               	movlw	3
  4502  00304A  0100               	movlb	0	; () banked
  4503  00304C  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4504  00304E  0E3B               	movlw	59
  4505  003050  0100               	movlb	0	; () banked
  4506  003052  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4507  003054  ECE4  F013         	call	___ftmul	;wreg free
  4508  003058  C079  F0A3         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4509  00305C  C07A  F0A4         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4510  003060  C07B  F0A5         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4511                           
  4512                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4513  003064  C0A3  F079         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4514  003068  C0A4  F07A         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4515  00306C  C0A5  F07B         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4516  003070  0E00               	movlw	0
  4517  003072  0100               	movlb	0	; () banked
  4518  003074  6F7C               	movwf	___ftmul@f2& (0+255),b
  4519  003076  0E80               	movlw	128
  4520  003078  0100               	movlb	0	; () banked
  4521  00307A  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4522  00307C  0E3F               	movlw	63
  4523  00307E  0100               	movlb	0	; () banked
  4524  003080  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4525  003082  ECE4  F013         	call	___ftmul	;wreg free
  4526  003086  C079  F0A3         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4527  00308A  C07A  F0A4         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4528  00308E  C07B  F0A5         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4529                           
  4530                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4531  003092  C0A3  F08F         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4532  003096  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4533  00309A  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4534  00309E  EC41  F015         	call	___fttol	;wreg free
  4535  0030A2  C08F  F09E         	movff	?___fttol,?_util_getBatteryCurrent
  4536  0030A6  C090  F09F         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4537  0030AA  0012               	return	
  4538  0030AC                     __end_of_util_getBatteryCurrent:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           intcon	equ	0xFF2
  4545                           postinc0	equ	0xFEE
  4546                           wreg	equ	0xFE8
  4547                           postdec1	equ	0xFE5
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function ___lwtoft *****************
  4557 ;; Defined at:
  4558 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  c               2   17[BANK0 ] unsigned int 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  3   17[BANK0 ] float 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         0       3       0       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0
  4575 ;;      Totals:         0       3       0       0       0       0       0
  4576 ;;Total ram usage:        3 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    3
  4579 ;; This function calls:
  4580 ;;		___ftpack
  4581 ;; This function is called by:
  4582 ;;		_util_getBatteryVoltage
  4583 ;;		_util_getSolarCurrent
  4584 ;;		_util_getBatteryCurrent
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text16
  4589  003B06                     __ptext16:
  4590                           	opt stack 0
  4591  003B06                     ___lwtoft:
  4592                           	opt stack 25
  4593                           
  4594                           ;incstack = 0
  4595  003B06  C071  F01C         	movff	___lwtoft@c,___ftpack@arg
  4596  003B0A  C072  F01D         	movff	___lwtoft@c+1,___ftpack@arg+1
  4597  003B0E  6A1E               	clrf	___ftpack@arg+2,c
  4598  003B10  0E8E               	movlw	142
  4599  003B12  6E1F               	movwf	___ftpack@exp,c
  4600  003B14  0E00               	movlw	0
  4601  003B16  6E20               	movwf	___ftpack@sign,c
  4602  003B18  EC6B  F019         	call	___ftpack	;wreg free
  4603  003B1C  C01C  F071         	movff	?___ftpack,?___lwtoft
  4604  003B20  C01D  F072         	movff	?___ftpack+1,?___lwtoft+1
  4605  003B24  C01E  F073         	movff	?___ftpack+2,?___lwtoft+2
  4606  003B28  0012               	return	
  4607  003B2A                     __end_of___lwtoft:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           postdec1	equ	0xFE5
  4617                           fsr1h	equ	0xFE2
  4618                           fsr1l	equ	0xFE1
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _util_beacon_transmission *****************
  4626 ;; Defined at:
  4627 ;;		line 22 in file "easat2_util_transmission.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  battery_volt    3  113[BANK0 ] float 
  4630 ;;  solar_curren    2  116[BANK0 ] int 
  4631 ;;  battery_curr    2  118[BANK0 ] int 
  4632 ;;  temperature     3  120[BANK0 ] float 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               2  192[BANK1 ] int 
  4635 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4636 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4646 ;;      Params:         0      10       0       0       0       0       0
  4647 ;;      Locals:         0       0     194       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0
  4649 ;;      Totals:         0      10     194       0       0       0       0
  4650 ;;Total ram usage:      204 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    6
  4653 ;; This function calls:
  4654 ;;		_memset
  4655 ;;		_sprintf
  4656 ;;		_strcat
  4657 ;;		_strcpy
  4658 ;;		_strlen
  4659 ;;		_util_transmit_letter
  4660 ;; This function is called by:
  4661 ;;		_main_loop
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text17
  4666  002E2E                     __ptext17:
  4667                           	opt stack 0
  4668  002E2E                     _util_beacon_transmission:
  4669                           	opt stack 23
  4670                           
  4671                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4672                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4673                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4674                           
  4675                           ;incstack = 0
  4676  002E2E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4677  002E30  6E1C               	movwf	memset@p1,c
  4678  002E32  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4679  002E34  6E1D               	movwf	memset@p1+1,c
  4680  002E36  0E00               	movlw	0
  4681  002E38  6E1F               	movwf	memset@c+1,c
  4682  002E3A  0E00               	movlw	0
  4683  002E3C  6E1E               	movwf	memset@c,c
  4684  002E3E  0E00               	movlw	0
  4685  002E40  6E21               	movwf	memset@n+1,c
  4686  002E42  0E80               	movlw	128
  4687  002E44  6E20               	movwf	memset@n,c
  4688  002E46  EC5A  F01D         	call	_memset	;wreg free
  4689                           
  4690                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4691  002E4A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4692  002E4C  6E1C               	movwf	strcpy@to,c
  4693  002E4E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4694  002E50  6E1D               	movwf	strcpy@to+1,c
  4695  002E52  0E9E               	movlw	low STR_1
  4696  002E54  6E1E               	movwf	strcpy@from,c
  4697  002E56  0E7F               	movlw	high STR_1
  4698  002E58  6E1F               	movwf	strcpy@from+1,c
  4699  002E5A  EC2C  F01D         	call	_strcpy	;wreg free
  4700                           
  4701                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4702  002E5E  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4703  002E60  6E1C               	movwf	memset@p1,c
  4704  002E62  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4705  002E64  6E1D               	movwf	memset@p1+1,c
  4706  002E66  0E00               	movlw	0
  4707  002E68  6E1F               	movwf	memset@c+1,c
  4708  002E6A  0E00               	movlw	0
  4709  002E6C  6E1E               	movwf	memset@c,c
  4710  002E6E  0E00               	movlw	0
  4711  002E70  6E21               	movwf	memset@n+1,c
  4712  002E72  0E40               	movlw	64
  4713  002E74  6E20               	movwf	memset@n,c
  4714  002E76  EC5A  F01D         	call	_memset	;wreg free
  4715                           
  4716                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4717                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4718  002E7A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4719  002E7C  0100               	movlb	0	; () banked
  4720  002E7E  6FA4               	movwf	sprintf@sp& (0+255),b
  4721  002E80  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4722  002E82  0100               	movlb	0	; () banked
  4723  002E84  6FA5               	movwf	(sprintf@sp+1)& (0+255),b
  4724  002E86  0E6B               	movlw	low STR_2
  4725  002E88  0100               	movlb	0	; () banked
  4726  002E8A  6FA6               	movwf	sprintf@f& (0+255),b
  4727  002E8C  0E7F               	movlw	high STR_2
  4728  002E8E  0100               	movlb	0	; () banked
  4729  002E90  6FA7               	movwf	(sprintf@f+1)& (0+255),b
  4730  002E92  C0D8  F0A8         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4731  002E96  C0D9  F0A9         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4732  002E9A  C0DA  F0AA         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4733  002E9E  C0D1  F0AB         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4734  002EA2  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4735  002EA6  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4736  002EAA  C0D4  F0AE         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4737  002EAE  C0D5  F0AF         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4738  002EB2  C0D6  F0B0         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4739  002EB6  C0D7  F0B1         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4740  002EBA  EC55  F000         	call	_sprintf	;wreg free
  4741                           
  4742                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4743  002EBE  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4744  002EC0  6E1C               	movwf	strcat@to,c
  4745  002EC2  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4746  002EC4  6E1D               	movwf	strcat@to+1,c
  4747  002EC6  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4748  002EC8  6E1E               	movwf	strcat@from,c
  4749  002ECA  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4750  002ECC  6E1F               	movwf	strcat@from+1,c
  4751  002ECE  EC4B  F01C         	call	_strcat	;wreg free
  4752                           
  4753                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4754  002ED2  0E00               	movlw	0
  4755  002ED4  0101               	movlb	1	; () banked
  4756  002ED6  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4757  002ED8  0E00               	movlw	0
  4758  002EDA  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4759  002EDC  D00E               	goto	l5912
  4760  002EDE                     l5908:
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4764  002EDE  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4765  002EE0  0101               	movlb	1	; () banked
  4766  002EE2  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4767  002EE4  6ED9               	movwf	fsr2l,c
  4768  002EE6  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4769  002EE8  0101               	movlb	1	; () banked
  4770  002EEA  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4771  002EEC  6EDA               	movwf	fsr2h,c
  4772  002EEE  50DF               	movf	indf2,w,c
  4773  002EF0  EC30  F00C         	call	_util_transmit_letter
  4774  002EF4  0101               	movlb	1	; () banked
  4775  002EF6  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4776  002EF8  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4777  002EFA                     l5912:
  4778                           
  4779                           ; BSR set to: 1
  4780  002EFA  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4781  002EFC  6E1C               	movwf	strlen@s,c
  4782  002EFE  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4783  002F00  6E1D               	movwf	strlen@s+1,c
  4784  002F02  ECB4  F01B         	call	_strlen	;wreg free
  4785  002F06  501C               	movf	?_strlen,w,c
  4786  002F08  0101               	movlb	1	; () banked
  4787  002F0A  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4788  002F0C  501D               	movf	?_strlen+1,w,c
  4789  002F0E  0101               	movlb	1	; () banked
  4790  002F10  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4791  002F12  B0D8               	btfsc	status,0,c
  4792  002F14  0012               	return	
  4793  002F16  D7E3               	goto	l5908
  4794  002F18                     __end_of_util_beacon_transmission:
  4795                           	opt stack 0
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           intcon	equ	0xFF2
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           postdec1	equ	0xFE5
  4804                           fsr1h	equ	0xFE2
  4805                           fsr1l	equ	0xFE1
  4806                           indf2	equ	0xFDF
  4807                           postinc2	equ	0xFDE
  4808                           postdec2	equ	0xFDD
  4809                           fsr2h	equ	0xFDA
  4810                           fsr2l	equ	0xFD9
  4811                           status	equ	0xFD8
  4812                           
  4813 ;; *************** function _util_transmit_letter *****************
  4814 ;; Defined at:
  4815 ;;		line 53 in file "easat2_util_transmission.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  letter          1    wreg     unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  letter          1   37[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4829 ;;      Params:         0       0       0       0       0       0       0
  4830 ;;      Locals:         1       0       0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0
  4832 ;;      Totals:         1       0       0       0       0       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    5
  4836 ;; This function calls:
  4837 ;;		_util_transmit_morse_sequence
  4838 ;;		_util_transmit_space_between_letters
  4839 ;;		_util_transmit_space_between_words
  4840 ;; This function is called by:
  4841 ;;		_util_beacon_transmission
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text18
  4846  001860                     __ptext18:
  4847                           	opt stack 0
  4848  001860                     _util_transmit_letter:
  4849                           	opt stack 23
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;incstack = 0
  4853                           ;util_transmit_letter@letter stored from wreg
  4854  001860  6E26               	movwf	util_transmit_letter@letter,c
  4855                           
  4856                           ;easat2_util_transmission.c: 55: switch (letter) {
  4857  001862  D174               	goto	l5628
  4858  001864                     l5542:
  4859                           
  4860                           ;easat2_util_transmission.c: 61: util_transmit_morse_sequence((char*)".-");
  4861  001864  0EE8               	movlw	low (STR_19+2)
  4862  001866  0100               	movlb	0	; () banked
  4863  001868  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4864  00186A  0E7F               	movlw	high (STR_19+2)
  4865  00186C  0100               	movlb	0	; () banked
  4866  00186E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4867  001870  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4868                           
  4869                           ;easat2_util_transmission.c: 62: break;
  4870  001874  D1EA               	goto	l5630
  4871  001876                     l5544:
  4872                           
  4873                           ;easat2_util_transmission.c: 64: util_transmit_morse_sequence((char*)"-...");
  4874  001876  0ED0               	movlw	low (STR_36+1)
  4875  001878  0100               	movlb	0	; () banked
  4876  00187A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4877  00187C  0E7F               	movlw	high (STR_36+1)
  4878  00187E  0100               	movlb	0	; () banked
  4879  001880  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4880  001882  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4881                           
  4882                           ;easat2_util_transmission.c: 65: break;
  4883  001886  D1E1               	goto	l5630
  4884  001888                     l5546:
  4885                           
  4886                           ;easat2_util_transmission.c: 67: util_transmit_morse_sequence((char*)"-.-.");
  4887  001888  0EF5               	movlw	low STR_5
  4888  00188A  0100               	movlb	0	; () banked
  4889  00188C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4890  00188E  0E7F               	movlw	high STR_5
  4891  001890  0100               	movlb	0	; () banked
  4892  001892  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4893  001894  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4894                           
  4895                           ;easat2_util_transmission.c: 68: break;
  4896  001898  D1D8               	goto	l5630
  4897  00189A                     l5548:
  4898                           
  4899                           ;easat2_util_transmission.c: 70: util_transmit_morse_sequence((char*)"-..");
  4900  00189A  0ECB               	movlw	low (STR_37+2)
  4901  00189C  0100               	movlb	0	; () banked
  4902  00189E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4903  0018A0  0E7F               	movlw	high (STR_37+2)
  4904  0018A2  0100               	movlb	0	; () banked
  4905  0018A4  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4906  0018A6  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4907                           
  4908                           ;easat2_util_transmission.c: 71: break;
  4909  0018AA  D1CF               	goto	l5630
  4910  0018AC                     l5550:
  4911                           
  4912                           ;easat2_util_transmission.c: 73: util_transmit_morse_sequence((char*)".");
  4913  0018AC  0EC1               	movlw	low (STR_38+4)
  4914  0018AE  0100               	movlb	0	; () banked
  4915  0018B0  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4916  0018B2  0E7F               	movlw	high (STR_38+4)
  4917  0018B4  0100               	movlb	0	; () banked
  4918  0018B6  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4919  0018B8  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4920                           
  4921                           ;easat2_util_transmission.c: 74: break;
  4922  0018BC  D1C6               	goto	l5630
  4923  0018BE                     l5552:
  4924                           
  4925                           ;easat2_util_transmission.c: 76: util_transmit_morse_sequence((char*)"..-.");
  4926  0018BE  0EC4               	movlw	low (STR_41+1)
  4927  0018C0  0100               	movlb	0	; () banked
  4928  0018C2  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4929  0018C4  0E7F               	movlw	high (STR_41+1)
  4930  0018C6  0100               	movlb	0	; () banked
  4931  0018C8  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4932  0018CA  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4933                           
  4934                           ;easat2_util_transmission.c: 77: break;
  4935  0018CE  D1BD               	goto	l5630
  4936  0018D0                     l5554:
  4937                           
  4938                           ;easat2_util_transmission.c: 79: util_transmit_morse_sequence((char*)"--.");
  4939  0018D0  0EBF               	movlw	low (STR_38+2)
  4940  0018D2  0100               	movlb	0	; () banked
  4941  0018D4  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4942  0018D6  0E7F               	movlw	high (STR_38+2)
  4943  0018D8  0100               	movlb	0	; () banked
  4944  0018DA  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4945  0018DC  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4946                           
  4947                           ;easat2_util_transmission.c: 80: break;
  4948  0018E0  D1B4               	goto	l5630
  4949  0018E2                     l5556:
  4950                           
  4951                           ;easat2_util_transmission.c: 82: util_transmit_morse_sequence((char*)"....");
  4952  0018E2  0ED6               	movlw	low (STR_35+1)
  4953  0018E4  0100               	movlb	0	; () banked
  4954  0018E6  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4955  0018E8  0E7F               	movlw	high (STR_35+1)
  4956  0018EA  0100               	movlb	0	; () banked
  4957  0018EC  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4958  0018EE  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4959                           
  4960                           ;easat2_util_transmission.c: 83: break;
  4961  0018F2  D1AB               	goto	l5630
  4962  0018F4                     l5558:
  4963                           
  4964                           ;easat2_util_transmission.c: 85: util_transmit_morse_sequence((char*)"..");
  4965  0018F4  0ECC               	movlw	low (STR_37+3)
  4966  0018F6  0100               	movlb	0	; () banked
  4967  0018F8  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4968  0018FA  0E7F               	movlw	high (STR_37+3)
  4969  0018FC  0100               	movlb	0	; () banked
  4970  0018FE  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4971  001900  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4972                           
  4973                           ;easat2_util_transmission.c: 86: break;
  4974  001904  D1A2               	goto	l5630
  4975  001906                     l5560:
  4976                           
  4977                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".---");
  4978  001906  0EB2               	movlw	low (STR_31+1)
  4979  001908  0100               	movlb	0	; () banked
  4980  00190A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4981  00190C  0E7F               	movlw	high (STR_31+1)
  4982  00190E  0100               	movlb	0	; () banked
  4983  001910  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4984  001912  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4985                           
  4986                           ;easat2_util_transmission.c: 89: break;
  4987  001916  D199               	goto	l5630
  4988  001918                     l5562:
  4989                           
  4990                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-.-");
  4991  001918  0EE7               	movlw	low (STR_19+1)
  4992  00191A  0100               	movlb	0	; () banked
  4993  00191C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4994  00191E  0E7F               	movlw	high (STR_19+1)
  4995  001920  0100               	movlb	0	; () banked
  4996  001922  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4997  001924  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4998                           
  4999                           ;easat2_util_transmission.c: 92: break;
  5000  001928  D190               	goto	l5630
  5001  00192A                     l5564:
  5002                           
  5003                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)".-..");
  5004  00192A  0EFA               	movlw	low STR_14
  5005  00192C  0100               	movlb	0	; () banked
  5006  00192E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5007  001930  0E7F               	movlw	high STR_14
  5008  001932  0100               	movlb	0	; () banked
  5009  001934  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5010  001936  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5011                           
  5012                           ;easat2_util_transmission.c: 95: break;
  5013  00193A  D187               	goto	l5630
  5014  00193C                     l5566:
  5015                           
  5016                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"--");
  5017  00193C  0EA8               	movlw	low (STR_29+3)
  5018  00193E  0100               	movlb	0	; () banked
  5019  001940  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5020  001942  0E7F               	movlw	high (STR_29+3)
  5021  001944  0100               	movlb	0	; () banked
  5022  001946  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5023  001948  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5024                           
  5025                           ;easat2_util_transmission.c: 98: break;
  5026  00194C  D17E               	goto	l5630
  5027  00194E                     l5568:
  5028                           
  5029                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)"-.");
  5030  00194E  0EC0               	movlw	low (STR_38+3)
  5031  001950  0100               	movlb	0	; () banked
  5032  001952  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5033  001954  0E7F               	movlw	high (STR_38+3)
  5034  001956  0100               	movlb	0	; () banked
  5035  001958  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5036  00195A  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5037                           
  5038                           ;easat2_util_transmission.c: 101: break;
  5039  00195E  D175               	goto	l5630
  5040  001960                     l5570:
  5041                           
  5042                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"---");
  5043  001960  0EA7               	movlw	low (STR_29+2)
  5044  001962  0100               	movlb	0	; () banked
  5045  001964  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5046  001966  0E7F               	movlw	high (STR_29+2)
  5047  001968  0100               	movlb	0	; () banked
  5048  00196A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5049  00196C  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5050                           
  5051                           ;easat2_util_transmission.c: 104: break;
  5052  001970  D16C               	goto	l5630
  5053  001972                     l5572:
  5054                           
  5055                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)".--.");
  5056  001972  0EF0               	movlw	low STR_18
  5057  001974  0100               	movlb	0	; () banked
  5058  001976  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5059  001978  0E7F               	movlw	high STR_18
  5060  00197A  0100               	movlb	0	; () banked
  5061  00197C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5062  00197E  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5063                           
  5064                           ;easat2_util_transmission.c: 107: break;
  5065  001982  D163               	goto	l5630
  5066  001984                     l5574:
  5067                           
  5068                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"--.-");
  5069  001984  0EE6               	movlw	low STR_19
  5070  001986  0100               	movlb	0	; () banked
  5071  001988  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5072  00198A  0E7F               	movlw	high STR_19
  5073  00198C  0100               	movlb	0	; () banked
  5074  00198E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5075  001990  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5076                           
  5077                           ;easat2_util_transmission.c: 110: break;
  5078  001994  D15A               	goto	l5630
  5079  001996                     l5576:
  5080                           
  5081                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)".-.");
  5082  001996  0EF6               	movlw	low (STR_5+1)
  5083  001998  0100               	movlb	0	; () banked
  5084  00199A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5085  00199C  0E7F               	movlw	high (STR_5+1)
  5086  00199E  0100               	movlb	0	; () banked
  5087  0019A0  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5088  0019A2  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5089                           
  5090                           ;easat2_util_transmission.c: 113: break;
  5091  0019A6  D151               	goto	l5630
  5092  0019A8                     l5578:
  5093                           
  5094                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)"...");
  5095  0019A8  0ED1               	movlw	low (STR_36+2)
  5096  0019AA  0100               	movlb	0	; () banked
  5097  0019AC  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5098  0019AE  0E7F               	movlw	high (STR_36+2)
  5099  0019B0  0100               	movlb	0	; () banked
  5100  0019B2  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5101  0019B4  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5102                           
  5103                           ;easat2_util_transmission.c: 116: break;
  5104  0019B8  D148               	goto	l5630
  5105  0019BA                     l5580:
  5106                           
  5107                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-");
  5108  0019BA  0EA9               	movlw	low (STR_29+4)
  5109  0019BC  0100               	movlb	0	; () banked
  5110  0019BE  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5111  0019C0  0E7F               	movlw	high (STR_29+4)
  5112  0019C2  0100               	movlb	0	; () banked
  5113  0019C4  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5114  0019C6  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5115                           
  5116                           ;easat2_util_transmission.c: 119: break;
  5117  0019CA  D13F               	goto	l5630
  5118  0019CC                     l5582:
  5119                           
  5120                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)"..-");
  5121  0019CC  0EEC               	movlw	low (STR_26+1)
  5122  0019CE  0100               	movlb	0	; () banked
  5123  0019D0  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5124  0019D2  0E7F               	movlw	high (STR_26+1)
  5125  0019D4  0100               	movlb	0	; () banked
  5126  0019D6  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5127  0019D8  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5128                           
  5129                           ;easat2_util_transmission.c: 122: break;
  5130  0019DC  D136               	goto	l5630
  5131  0019DE                     l5584:
  5132                           
  5133                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"...-");
  5134  0019DE  0E92               	movlw	low (STR_43+2)
  5135  0019E0  0100               	movlb	0	; () banked
  5136  0019E2  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5137  0019E4  0E7F               	movlw	high (STR_43+2)
  5138  0019E6  0100               	movlb	0	; () banked
  5139  0019E8  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5140  0019EA  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5141                           
  5142                           ;easat2_util_transmission.c: 125: break;
  5143  0019EE  D12D               	goto	l5630
  5144  0019F0                     l5586:
  5145                           
  5146                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)".--");
  5147  0019F0  0EE2               	movlw	low (STR_27+1)
  5148  0019F2  0100               	movlb	0	; () banked
  5149  0019F4  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5150  0019F6  0E7F               	movlw	high (STR_27+1)
  5151  0019F8  0100               	movlb	0	; () banked
  5152  0019FA  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5153  0019FC  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5154                           
  5155                           ;easat2_util_transmission.c: 128: break;
  5156  001A00  D124               	goto	l5630
  5157  001A02                     l5588:
  5158                           
  5159                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"-..-");
  5160  001A02  0EEB               	movlw	low STR_26
  5161  001A04  0100               	movlb	0	; () banked
  5162  001A06  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5163  001A08  0E7F               	movlw	high STR_26
  5164  001A0A  0100               	movlb	0	; () banked
  5165  001A0C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5166  001A0E  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5167                           
  5168                           ;easat2_util_transmission.c: 131: break;
  5169  001A12  D11B               	goto	l5630
  5170  001A14                     l5590:
  5171                           
  5172                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)"-.--");
  5173  001A14  0EE1               	movlw	low STR_27
  5174  001A16  0100               	movlb	0	; () banked
  5175  001A18  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5176  001A1A  0E7F               	movlw	high STR_27
  5177  001A1C  0100               	movlb	0	; () banked
  5178  001A1E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5179  001A20  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5180                           
  5181                           ;easat2_util_transmission.c: 134: break;
  5182  001A24  D112               	goto	l5630
  5183  001A26                     l5592:
  5184                           
  5185                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--..");
  5186  001A26  0ECA               	movlw	low (STR_37+1)
  5187  001A28  0100               	movlb	0	; () banked
  5188  001A2A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5189  001A2C  0E7F               	movlw	high (STR_37+1)
  5190  001A2E  0100               	movlb	0	; () banked
  5191  001A30  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5192  001A32  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5193                           
  5194                           ;easat2_util_transmission.c: 137: break;
  5195  001A36  D109               	goto	l5630
  5196  001A38                     l5594:
  5197                           
  5198                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)"-----");
  5199  001A38  0EA5               	movlw	low STR_29
  5200  001A3A  0100               	movlb	0	; () banked
  5201  001A3C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5202  001A3E  0E7F               	movlw	high STR_29
  5203  001A40  0100               	movlb	0	; () banked
  5204  001A42  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5205  001A44  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5206                           
  5207                           ;easat2_util_transmission.c: 140: break;
  5208  001A48  D100               	goto	l5630
  5209  001A4A                     l5596:
  5210                           
  5211                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)".----");
  5212  001A4A  0EAB               	movlw	low STR_30
  5213  001A4C  0100               	movlb	0	; () banked
  5214  001A4E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5215  001A50  0E7F               	movlw	high STR_30
  5216  001A52  0100               	movlb	0	; () banked
  5217  001A54  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5218  001A56  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5219                           
  5220                           ;easat2_util_transmission.c: 143: break;
  5221  001A5A  D0F7               	goto	l5630
  5222  001A5C                     l5598:
  5223                           
  5224                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"..---");
  5225  001A5C  0EB1               	movlw	low STR_31
  5226  001A5E  0100               	movlb	0	; () banked
  5227  001A60  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5228  001A62  0E7F               	movlw	high STR_31
  5229  001A64  0100               	movlb	0	; () banked
  5230  001A66  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5231  001A68  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5232                           
  5233                           ;easat2_util_transmission.c: 146: break;
  5234  001A6C  D0EE               	goto	l5630
  5235  001A6E                     l5600:
  5236                           
  5237                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"...--");
  5238  001A6E  0EB7               	movlw	low STR_32
  5239  001A70  0100               	movlb	0	; () banked
  5240  001A72  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5241  001A74  0E7F               	movlw	high STR_32
  5242  001A76  0100               	movlb	0	; () banked
  5243  001A78  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5244  001A7A  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5245                           
  5246                           ;easat2_util_transmission.c: 149: break;
  5247  001A7E  D0E5               	goto	l5630
  5248  001A80                     l5602:
  5249                           
  5250                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"....-");
  5251  001A80  0E91               	movlw	low (STR_43+1)
  5252  001A82  0100               	movlb	0	; () banked
  5253  001A84  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5254  001A86  0E7F               	movlw	high (STR_43+1)
  5255  001A88  0100               	movlb	0	; () banked
  5256  001A8A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5257  001A8C  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5258                           
  5259                           ;easat2_util_transmission.c: 152: break;
  5260  001A90  D0DC               	goto	l5630
  5261  001A92                     l5604:
  5262                           
  5263                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".....");
  5264  001A92  0EDB               	movlw	low STR_34
  5265  001A94  0100               	movlb	0	; () banked
  5266  001A96  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5267  001A98  0E7F               	movlw	high STR_34
  5268  001A9A  0100               	movlb	0	; () banked
  5269  001A9C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5270  001A9E  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5271                           
  5272                           ;easat2_util_transmission.c: 155: break;
  5273  001AA2  D0D3               	goto	l5630
  5274  001AA4                     l5606:
  5275                           
  5276                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-....");
  5277  001AA4  0ED5               	movlw	low STR_35
  5278  001AA6  0100               	movlb	0	; () banked
  5279  001AA8  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5280  001AAA  0E7F               	movlw	high STR_35
  5281  001AAC  0100               	movlb	0	; () banked
  5282  001AAE  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5283  001AB0  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5284                           
  5285                           ;easat2_util_transmission.c: 158: break;
  5286  001AB4  D0CA               	goto	l5630
  5287  001AB6                     l5608:
  5288                           
  5289                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"--...");
  5290  001AB6  0ECF               	movlw	low STR_36
  5291  001AB8  0100               	movlb	0	; () banked
  5292  001ABA  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5293  001ABC  0E7F               	movlw	high STR_36
  5294  001ABE  0100               	movlb	0	; () banked
  5295  001AC0  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5296  001AC2  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5297                           
  5298                           ;easat2_util_transmission.c: 161: break;
  5299  001AC6  D0C1               	goto	l5630
  5300  001AC8                     l5610:
  5301                           
  5302                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"---..");
  5303  001AC8  0EC9               	movlw	low STR_37
  5304  001ACA  0100               	movlb	0	; () banked
  5305  001ACC  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5306  001ACE  0E7F               	movlw	high STR_37
  5307  001AD0  0100               	movlb	0	; () banked
  5308  001AD2  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5309  001AD4  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5310                           
  5311                           ;easat2_util_transmission.c: 164: break;
  5312  001AD8  D0B8               	goto	l5630
  5313  001ADA                     l5612:
  5314                           
  5315                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"----.");
  5316  001ADA  0EBD               	movlw	low STR_38
  5317  001ADC  0100               	movlb	0	; () banked
  5318  001ADE  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5319  001AE0  0E7F               	movlw	high STR_38
  5320  001AE2  0100               	movlb	0	; () banked
  5321  001AE4  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5322  001AE6  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5323                           
  5324                           ;easat2_util_transmission.c: 167: break;
  5325  001AEA  D0AF               	goto	l5630
  5326  001AEC                     l5614:
  5327                           
  5328                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)"--..--");
  5329  001AEC  0E82               	movlw	low STR_39
  5330  001AEE  0100               	movlb	0	; () banked
  5331  001AF0  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5332  001AF2  0E7F               	movlw	high STR_39
  5333  001AF4  0100               	movlb	0	; () banked
  5334  001AF6  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5335  001AF8  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5336                           
  5337                           ;easat2_util_transmission.c: 170: break;
  5338  001AFC  D0A6               	goto	l5630
  5339  001AFE                     l5616:
  5340                           
  5341                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..--..");
  5342  001AFE  0E97               	movlw	low STR_40
  5343  001B00  0100               	movlb	0	; () banked
  5344  001B02  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5345  001B04  0E7F               	movlw	high STR_40
  5346  001B06  0100               	movlb	0	; () banked
  5347  001B08  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5348  001B0A  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5349                           
  5350                           ;easat2_util_transmission.c: 173: break;
  5351  001B0E  D09D               	goto	l5630
  5352  001B10                     l5618:
  5353                           
  5354                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"-..-.");
  5355  001B10  0EC3               	movlw	low STR_41
  5356  001B12  0100               	movlb	0	; () banked
  5357  001B14  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5358  001B16  0E7F               	movlw	high STR_41
  5359  001B18  0100               	movlb	0	; () banked
  5360  001B1A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5361  001B1C  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5362                           
  5363                           ;easat2_util_transmission.c: 176: break;
  5364  001B20  D094               	goto	l5630
  5365  001B22                     l5620:
  5366                           
  5367                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)".-.-.-");
  5368  001B22  0E89               	movlw	low STR_42
  5369  001B24  0100               	movlb	0	; () banked
  5370  001B26  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5371  001B28  0E7F               	movlw	high STR_42
  5372  001B2A  0100               	movlb	0	; () banked
  5373  001B2C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5374  001B2E  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5375                           
  5376                           ;easat2_util_transmission.c: 179: break;
  5377  001B32  D08B               	goto	l5630
  5378  001B34                     l5622:
  5379                           
  5380                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)"-....-");
  5381  001B34  0E90               	movlw	low STR_43
  5382  001B36  0100               	movlb	0	; () banked
  5383  001B38  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5384  001B3A  0E7F               	movlw	high STR_43
  5385  001B3C  0100               	movlb	0	; () banked
  5386  001B3E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5387  001B40  EC5B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5388                           
  5389                           ;easat2_util_transmission.c: 182: break;
  5390  001B44  D082               	goto	l5630
  5391  001B46                     l5624:
  5392                           
  5393                           ;easat2_util_transmission.c: 184: util_transmit_space_between_words();
  5394  001B46  ECF7  F01D         	call	_util_transmit_space_between_words	;wreg free
  5395                           
  5396                           ;easat2_util_transmission.c: 189: }
  5397                           
  5398                           ;easat2_util_transmission.c: 187: break;
  5399                           
  5400                           ;easat2_util_transmission.c: 186: default:
  5401                           
  5402                           ;easat2_util_transmission.c: 185: break;
  5403  001B4A  D07F               	goto	l5630
  5404  001B4C                     l5628:
  5405  001B4C  5026               	movf	util_transmit_letter@letter,w,c
  5406                           
  5407                           ; Switch size 1, requested type "space"
  5408                           ; Number of cases is 42, Range of values is 32 to 90
  5409                           ; switch strategies available:
  5410                           ; Name         Instructions Cycles
  5411                           ; simple_byte          127    64 (average)
  5412                           ;	Chosen strategy is simple_byte
  5413  001B4E  0A20               	xorlw	32	; case 32
  5414  001B50  B4D8               	btfsc	status,2,c
  5415  001B52  D7F9               	goto	l5624
  5416  001B54  0A0C               	xorlw	12	; case 44
  5417  001B56  B4D8               	btfsc	status,2,c
  5418  001B58  D7C9               	goto	l5614
  5419  001B5A  0A01               	xorlw	1	; case 45
  5420  001B5C  B4D8               	btfsc	status,2,c
  5421  001B5E  D7EA               	goto	l5622
  5422  001B60  0A03               	xorlw	3	; case 46
  5423  001B62  B4D8               	btfsc	status,2,c
  5424  001B64  D7DE               	goto	l5620
  5425  001B66  0A01               	xorlw	1	; case 47
  5426  001B68  B4D8               	btfsc	status,2,c
  5427  001B6A  D7D2               	goto	l5618
  5428  001B6C  0A1F               	xorlw	31	; case 48
  5429  001B6E  B4D8               	btfsc	status,2,c
  5430  001B70  D763               	goto	l5594
  5431  001B72  0A01               	xorlw	1	; case 49
  5432  001B74  B4D8               	btfsc	status,2,c
  5433  001B76  D769               	goto	l5596
  5434  001B78  0A03               	xorlw	3	; case 50
  5435  001B7A  B4D8               	btfsc	status,2,c
  5436  001B7C  D76F               	goto	l5598
  5437  001B7E  0A01               	xorlw	1	; case 51
  5438  001B80  B4D8               	btfsc	status,2,c
  5439  001B82  D775               	goto	l5600
  5440  001B84  0A07               	xorlw	7	; case 52
  5441  001B86  B4D8               	btfsc	status,2,c
  5442  001B88  D77B               	goto	l5602
  5443  001B8A  0A01               	xorlw	1	; case 53
  5444  001B8C  B4D8               	btfsc	status,2,c
  5445  001B8E  D781               	goto	l5604
  5446  001B90  0A03               	xorlw	3	; case 54
  5447  001B92  B4D8               	btfsc	status,2,c
  5448  001B94  D787               	goto	l5606
  5449  001B96  0A01               	xorlw	1	; case 55
  5450  001B98  B4D8               	btfsc	status,2,c
  5451  001B9A  D78D               	goto	l5608
  5452  001B9C  0A0F               	xorlw	15	; case 56
  5453  001B9E  B4D8               	btfsc	status,2,c
  5454  001BA0  D793               	goto	l5610
  5455  001BA2  0A01               	xorlw	1	; case 57
  5456  001BA4  B4D8               	btfsc	status,2,c
  5457  001BA6  D799               	goto	l5612
  5458  001BA8  0A06               	xorlw	6	; case 63
  5459  001BAA  B4D8               	btfsc	status,2,c
  5460  001BAC  D7A8               	goto	l5616
  5461  001BAE  0A7E               	xorlw	126	; case 65
  5462  001BB0  B4D8               	btfsc	status,2,c
  5463  001BB2  D658               	goto	l5542
  5464  001BB4  0A03               	xorlw	3	; case 66
  5465  001BB6  B4D8               	btfsc	status,2,c
  5466  001BB8  D65E               	goto	l5544
  5467  001BBA  0A01               	xorlw	1	; case 67
  5468  001BBC  B4D8               	btfsc	status,2,c
  5469  001BBE  D664               	goto	l5546
  5470  001BC0  0A07               	xorlw	7	; case 68
  5471  001BC2  B4D8               	btfsc	status,2,c
  5472  001BC4  D66A               	goto	l5548
  5473  001BC6  0A01               	xorlw	1	; case 69
  5474  001BC8  B4D8               	btfsc	status,2,c
  5475  001BCA  D670               	goto	l5550
  5476  001BCC  0A03               	xorlw	3	; case 70
  5477  001BCE  B4D8               	btfsc	status,2,c
  5478  001BD0  D676               	goto	l5552
  5479  001BD2  0A01               	xorlw	1	; case 71
  5480  001BD4  B4D8               	btfsc	status,2,c
  5481  001BD6  D67C               	goto	l5554
  5482  001BD8  0A0F               	xorlw	15	; case 72
  5483  001BDA  B4D8               	btfsc	status,2,c
  5484  001BDC  D682               	goto	l5556
  5485  001BDE  0A01               	xorlw	1	; case 73
  5486  001BE0  B4D8               	btfsc	status,2,c
  5487  001BE2  D688               	goto	l5558
  5488  001BE4  0A03               	xorlw	3	; case 74
  5489  001BE6  B4D8               	btfsc	status,2,c
  5490  001BE8  D68E               	goto	l5560
  5491  001BEA  0A01               	xorlw	1	; case 75
  5492  001BEC  B4D8               	btfsc	status,2,c
  5493  001BEE  D694               	goto	l5562
  5494  001BF0  0A07               	xorlw	7	; case 76
  5495  001BF2  B4D8               	btfsc	status,2,c
  5496  001BF4  D69A               	goto	l5564
  5497  001BF6  0A01               	xorlw	1	; case 77
  5498  001BF8  B4D8               	btfsc	status,2,c
  5499  001BFA  D6A0               	goto	l5566
  5500  001BFC  0A03               	xorlw	3	; case 78
  5501  001BFE  B4D8               	btfsc	status,2,c
  5502  001C00  D6A6               	goto	l5568
  5503  001C02  0A01               	xorlw	1	; case 79
  5504  001C04  B4D8               	btfsc	status,2,c
  5505  001C06  D6AC               	goto	l5570
  5506  001C08  0A1F               	xorlw	31	; case 80
  5507  001C0A  B4D8               	btfsc	status,2,c
  5508  001C0C  D6B2               	goto	l5572
  5509  001C0E  0A01               	xorlw	1	; case 81
  5510  001C10  B4D8               	btfsc	status,2,c
  5511  001C12  D6B8               	goto	l5574
  5512  001C14  0A03               	xorlw	3	; case 82
  5513  001C16  B4D8               	btfsc	status,2,c
  5514  001C18  D6BE               	goto	l5576
  5515  001C1A  0A01               	xorlw	1	; case 83
  5516  001C1C  B4D8               	btfsc	status,2,c
  5517  001C1E  D6C4               	goto	l5578
  5518  001C20  0A07               	xorlw	7	; case 84
  5519  001C22  B4D8               	btfsc	status,2,c
  5520  001C24  D6CA               	goto	l5580
  5521  001C26  0A01               	xorlw	1	; case 85
  5522  001C28  B4D8               	btfsc	status,2,c
  5523  001C2A  D6D0               	goto	l5582
  5524  001C2C  0A03               	xorlw	3	; case 86
  5525  001C2E  B4D8               	btfsc	status,2,c
  5526  001C30  D6D6               	goto	l5584
  5527  001C32  0A01               	xorlw	1	; case 87
  5528  001C34  B4D8               	btfsc	status,2,c
  5529  001C36  D6DC               	goto	l5586
  5530  001C38  0A0F               	xorlw	15	; case 88
  5531  001C3A  B4D8               	btfsc	status,2,c
  5532  001C3C  D6E2               	goto	l5588
  5533  001C3E  0A01               	xorlw	1	; case 89
  5534  001C40  B4D8               	btfsc	status,2,c
  5535  001C42  D6E8               	goto	l5590
  5536  001C44  0A03               	xorlw	3	; case 90
  5537  001C46  B4D8               	btfsc	status,2,c
  5538  001C48  D6EE               	goto	l5592
  5539  001C4A                     l5630:
  5540                           
  5541                           ;easat2_util_transmission.c: 192: util_transmit_space_between_letters();
  5542  001C4A  ECFE  F01D         	call	_util_transmit_space_between_letters	;wreg free
  5543  001C4E  0012               	return		;funcret
  5544  001C50                     __end_of_util_transmit_letter:
  5545                           	opt stack 0
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           intcon	equ	0xFF2
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postdec1	equ	0xFE5
  5554                           fsr1h	equ	0xFE2
  5555                           fsr1l	equ	0xFE1
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _util_transmit_space_between_words *****************
  5564 ;; Defined at:
  5565 ;;		line 287 in file "easat2_util_transmission.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5579 ;;      Params:         0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		_util_waits_delay_ms
  5588 ;; This function is called by:
  5589 ;;		_util_transmit_letter
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text19
  5594  003BEE                     __ptext19:
  5595                           	opt stack 0
  5596  003BEE                     _util_transmit_space_between_words:
  5597                           	opt stack 24
  5598                           
  5599                           ;easat2_util_transmission.c: 288: util_waits_delay_ms(7*(int)(2400/32));
  5600                           
  5601                           ;incstack = 0
  5602  003BEE  0E02               	movlw	2
  5603  003BF0  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  5604  003BF2  0E0D               	movlw	13
  5605  003BF4  6E1C               	movwf	util_waits_delay_ms@ms,c
  5606  003BF6  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  5607  003BFA  0012               	return		;funcret
  5608  003BFC                     __end_of_util_transmit_space_between_words:
  5609                           	opt stack 0
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           intcon	equ	0xFF2
  5615                           postinc0	equ	0xFEE
  5616                           wreg	equ	0xFE8
  5617                           postdec1	equ	0xFE5
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           indf2	equ	0xFDF
  5621                           postinc2	equ	0xFDE
  5622                           postdec2	equ	0xFDD
  5623                           fsr2h	equ	0xFDA
  5624                           fsr2l	equ	0xFD9
  5625                           status	equ	0xFD8
  5626                           
  5627 ;; *************** function _util_transmit_space_between_letters *****************
  5628 ;; Defined at:
  5629 ;;		line 280 in file "easat2_util_transmission.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5643 ;;      Params:         0       0       0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0
  5646 ;;      Totals:         0       0       0       0       0       0       0
  5647 ;;Total ram usage:        0 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    3
  5650 ;; This function calls:
  5651 ;;		_util_waits_delay_ms
  5652 ;; This function is called by:
  5653 ;;		_util_transmit_letter
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text20
  5658  003BFC                     __ptext20:
  5659                           	opt stack 0
  5660  003BFC                     _util_transmit_space_between_letters:
  5661                           	opt stack 24
  5662                           
  5663                           ;easat2_util_transmission.c: 281: util_waits_delay_ms(3*(int)(2400/32));
  5664                           
  5665                           ;incstack = 0
  5666  003BFC  0E00               	movlw	0
  5667  003BFE  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  5668  003C00  0EE1               	movlw	225
  5669  003C02  6E1C               	movwf	util_waits_delay_ms@ms,c
  5670  003C04  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  5671  003C08  0012               	return		;funcret
  5672  003C0A                     __end_of_util_transmit_space_between_letters:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           intcon	equ	0xFF2
  5679                           postinc0	equ	0xFEE
  5680                           wreg	equ	0xFE8
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function _util_transmit_morse_sequence *****************
  5692 ;; Defined at:
  5693 ;;		line 202 in file "easat2_util_transmission.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  morse_sequen    2   17[BANK0 ] PTR unsigned char 
  5696 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5697 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5698 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5699 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5700 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5701 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5702 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5703 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5704 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5705 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5706 ;;		 -> STR_3(3), 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  i               2   35[COMRAM] int 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5718 ;;      Params:         0       2       0       0       0       0       0
  5719 ;;      Locals:         2       0       0       0       0       0       0
  5720 ;;      Temps:          2       0       0       0       0       0       0
  5721 ;;      Totals:         4       2       0       0       0       0       0
  5722 ;;Total ram usage:        6 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    4
  5725 ;; This function calls:
  5726 ;;		_strlen
  5727 ;;		_util_transmit_dash
  5728 ;;		_util_transmit_dot
  5729 ;;		_util_transmit_space_between_dots_dashes
  5730 ;; This function is called by:
  5731 ;;		_util_transmit_letter
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text21
  5736  0036B6                     __ptext21:
  5737                           	opt stack 0
  5738  0036B6                     _util_transmit_morse_sequence:
  5739                           	opt stack 23
  5740                           
  5741                           ;easat2_util_transmission.c: 206: for (int i = 0; i < strlen(morse_sequence); i++) {
  5742                           
  5743                           ;incstack = 0
  5744  0036B6  0E00               	movlw	0
  5745  0036B8  6E25               	movwf	util_transmit_morse_sequence@i+1,c
  5746  0036BA  0E00               	movlw	0
  5747  0036BC  6E24               	movwf	util_transmit_morse_sequence@i,c
  5748  0036BE  D01E               	goto	l4978
  5749  0036C0                     l4966:
  5750                           
  5751                           ;easat2_util_transmission.c: 211: util_transmit_dot();
  5752  0036C0  ECC5  F01D         	call	_util_transmit_dot	;wreg free
  5753                           
  5754                           ;easat2_util_transmission.c: 212: break;
  5755  0036C4  D017               	goto	l4974
  5756  0036C6                     l4968:
  5757                           
  5758                           ;easat2_util_transmission.c: 214: util_transmit_dash();
  5759  0036C6  ECD2  F01D         	call	_util_transmit_dash	;wreg free
  5760                           
  5761                           ;easat2_util_transmission.c: 218: }
  5762                           
  5763                           ;easat2_util_transmission.c: 217: break;
  5764                           
  5765                           ;easat2_util_transmission.c: 216: default:
  5766                           
  5767                           ;easat2_util_transmission.c: 215: break;
  5768  0036CA  D014               	goto	l4974
  5769  0036CC                     l4972:
  5770  0036CC  5024               	movf	util_transmit_morse_sequence@i,w,c
  5771  0036CE  0100               	movlb	0	; () banked
  5772  0036D0  2571               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5773  0036D2  6E22               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5774  0036D4  5025               	movf	util_transmit_morse_sequence@i+1,w,c
  5775  0036D6  0100               	movlb	0	; () banked
  5776  0036D8  2172               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5777  0036DA  6E23               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5778  0036DC  C022  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5779  0036E0  C023  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5780  0036E4                     	if	0	;tblptru may be non-zero
  5781  0036E4                     	endif
  5782  0036E4                     	if	0	;tblptru may be non-zero
  5783  0036E4                     	endif
  5784  0036E4  0008               	tblrd		*
  5785  0036E6  50F5               	movf	tablat,w,c
  5786                           
  5787                           ; Switch size 1, requested type "space"
  5788                           ; Number of cases is 2, Range of values is 45 to 46
  5789                           ; switch strategies available:
  5790                           ; Name         Instructions Cycles
  5791                           ; simple_byte            7     4 (average)
  5792                           ;	Chosen strategy is simple_byte
  5793  0036E8  0A2D               	xorlw	45	; case 45
  5794  0036EA  B4D8               	btfsc	status,2,c
  5795  0036EC  D7EC               	goto	l4968
  5796  0036EE  0A03               	xorlw	3	; case 46
  5797  0036F0  B4D8               	btfsc	status,2,c
  5798  0036F2  D7E6               	goto	l4966
  5799  0036F4                     l4974:
  5800                           
  5801                           ;easat2_util_transmission.c: 221: util_transmit_space_between_dots_dashes();
  5802  0036F4  EC05  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5803  0036F8  4A24               	infsnz	util_transmit_morse_sequence@i,f,c
  5804  0036FA  2A25               	incf	util_transmit_morse_sequence@i+1,f,c
  5805  0036FC                     l4978:
  5806  0036FC  C071  F01C         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5807  003700  C072  F01D         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5808  003704  ECB4  F01B         	call	_strlen	;wreg free
  5809  003708  501C               	movf	?_strlen,w,c
  5810  00370A  5C24               	subwf	util_transmit_morse_sequence@i,w,c
  5811  00370C  501D               	movf	?_strlen+1,w,c
  5812  00370E  5825               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5813  003710  B0D8               	btfsc	status,0,c
  5814  003712  0012               	return	
  5815  003714  D7DB               	goto	l4972
  5816  003716                     __end_of_util_transmit_morse_sequence:
  5817                           	opt stack 0
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           intcon	equ	0xFF2
  5823                           postinc0	equ	0xFEE
  5824                           wreg	equ	0xFE8
  5825                           postdec1	equ	0xFE5
  5826                           fsr1h	equ	0xFE2
  5827                           fsr1l	equ	0xFE1
  5828                           indf2	equ	0xFDF
  5829                           postinc2	equ	0xFDE
  5830                           postdec2	equ	0xFDD
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5836 ;; Defined at:
  5837 ;;		line 272 in file "easat2_util_transmission.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5851 ;;      Params:         0       0       0       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    3
  5858 ;; This function calls:
  5859 ;;		_util_waits_delay_ms
  5860 ;; This function is called by:
  5861 ;;		_util_transmit_morse_sequence
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text22
  5866  003C0A                     __ptext22:
  5867                           	opt stack 0
  5868  003C0A                     _util_transmit_space_between_dots_dashes:
  5869                           	opt stack 23
  5870                           
  5871                           ;easat2_util_transmission.c: 273: util_waits_delay_ms((int)(2400/32));
  5872                           
  5873                           ;incstack = 0
  5874  003C0A  0E00               	movlw	0
  5875  003C0C  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  5876  003C0E  0E4B               	movlw	75
  5877  003C10  6E1C               	movwf	util_waits_delay_ms@ms,c
  5878  003C12  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  5879  003C16  0012               	return		;funcret
  5880  003C18                     __end_of_util_transmit_space_between_dots_dashes:
  5881                           	opt stack 0
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           intcon	equ	0xFF2
  5887                           postinc0	equ	0xFEE
  5888                           wreg	equ	0xFE8
  5889                           postdec1	equ	0xFE5
  5890                           fsr1h	equ	0xFE2
  5891                           fsr1l	equ	0xFE1
  5892                           indf2	equ	0xFDF
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _util_transmit_dot *****************
  5900 ;; Defined at:
  5901 ;;		line 232 in file "easat2_util_transmission.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5915 ;;      Params:         0       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    3
  5922 ;; This function calls:
  5923 ;;		_util_pwm_start
  5924 ;;		_util_pwm_stop
  5925 ;;		_util_waits_delay_ms
  5926 ;; This function is called by:
  5927 ;;		_util_transmit_morse_sequence
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text23
  5932  003B8A                     __ptext23:
  5933                           	opt stack 0
  5934  003B8A                     _util_transmit_dot:
  5935                           	opt stack 23
  5936                           
  5937                           ;easat2_util_transmission.c: 236: (PORTDbits.RD1) = 1;
  5938                           
  5939                           ;incstack = 0
  5940  003B8A  8283               	bsf	3971,1,c	;volatile
  5941                           
  5942                           ;easat2_util_transmission.c: 239: util_pwm_start();
  5943  003B8C  EC16  F01E         	call	_util_pwm_start	;wreg free
  5944                           
  5945                           ;easat2_util_transmission.c: 240: util_waits_delay_ms((int)(2400/32));
  5946  003B90  0E00               	movlw	0
  5947  003B92  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  5948  003B94  0E4B               	movlw	75
  5949  003B96  6E1C               	movwf	util_waits_delay_ms@ms,c
  5950  003B98  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  5951                           
  5952                           ;easat2_util_transmission.c: 241: util_pwm_stop();
  5953  003B9C  EC12  F01E         	call	_util_pwm_stop	;wreg free
  5954                           
  5955                           ;easat2_util_transmission.c: 243: (PORTDbits.RD1) = 0;
  5956  003BA0  9283               	bcf	3971,1,c	;volatile
  5957  003BA2  0012               	return		;funcret
  5958  003BA4                     __end_of_util_transmit_dot:
  5959                           	opt stack 0
  5960                           tblptru	equ	0xFF8
  5961                           tblptrh	equ	0xFF7
  5962                           tblptrl	equ	0xFF6
  5963                           tablat	equ	0xFF5
  5964                           intcon	equ	0xFF2
  5965                           postinc0	equ	0xFEE
  5966                           wreg	equ	0xFE8
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _util_transmit_dash *****************
  5978 ;; Defined at:
  5979 ;;		line 254 in file "easat2_util_transmission.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5993 ;;      Params:         0       0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    3
  6000 ;; This function calls:
  6001 ;;		_util_pwm_start
  6002 ;;		_util_pwm_stop
  6003 ;;		_util_waits_delay_ms
  6004 ;; This function is called by:
  6005 ;;		_util_transmit_morse_sequence
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text24
  6010  003BA4                     __ptext24:
  6011                           	opt stack 0
  6012  003BA4                     _util_transmit_dash:
  6013                           	opt stack 23
  6014                           
  6015                           ;easat2_util_transmission.c: 258: (PORTDbits.RD1) = 1;
  6016                           
  6017                           ;incstack = 0
  6018  003BA4  8283               	bsf	3971,1,c	;volatile
  6019                           
  6020                           ;easat2_util_transmission.c: 261: util_pwm_start();
  6021  003BA6  EC16  F01E         	call	_util_pwm_start	;wreg free
  6022                           
  6023                           ;easat2_util_transmission.c: 262: util_waits_delay_ms(((int)(2400/32)*3));
  6024  003BAA  0E00               	movlw	0
  6025  003BAC  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6026  003BAE  0EE1               	movlw	225
  6027  003BB0  6E1C               	movwf	util_waits_delay_ms@ms,c
  6028  003BB2  EC44  F01D         	call	_util_waits_delay_ms	;wreg free
  6029                           
  6030                           ;easat2_util_transmission.c: 263: util_pwm_stop();
  6031  003BB6  EC12  F01E         	call	_util_pwm_stop	;wreg free
  6032                           
  6033                           ;easat2_util_transmission.c: 265: (PORTDbits.RD1) = 0;
  6034  003BBA  9283               	bcf	3971,1,c	;volatile
  6035  003BBC  0012               	return		;funcret
  6036  003BBE                     __end_of_util_transmit_dash:
  6037                           	opt stack 0
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           intcon	equ	0xFF2
  6043                           postinc0	equ	0xFEE
  6044                           wreg	equ	0xFE8
  6045                           postdec1	equ	0xFE5
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055 ;; *************** function _util_waits_delay_ms *****************
  6056 ;; Defined at:
  6057 ;;		line 40 in file "easat2_util_waits.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  ms              2   27[COMRAM] int 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  i               2   30[COMRAM] int 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6071 ;;      Params:         2       0       0       0       0       0       0
  6072 ;;      Locals:         2       0       0       0       0       0       0
  6073 ;;      Temps:          1       0       0       0       0       0       0
  6074 ;;      Totals:         5       0       0       0       0       0       0
  6075 ;;Total ram usage:        5 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    2
  6078 ;; This function calls:
  6079 ;;		Nothing
  6080 ;; This function is called by:
  6081 ;;		_util_transmit_dot
  6082 ;;		_util_transmit_dash
  6083 ;;		_util_transmit_space_between_dots_dashes
  6084 ;;		_util_transmit_space_between_letters
  6085 ;;		_util_transmit_space_between_words
  6086 ;;		_util_waits_delay_secs
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text25
  6091  003A88                     __ptext25:
  6092                           	opt stack 0
  6093  003A88                     _util_waits_delay_ms:
  6094                           	opt stack 25
  6095                           
  6096                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6097                           
  6098                           ;incstack = 0
  6099  003A88  0E00               	movlw	0
  6100  003A8A  6E20               	movwf	util_waits_delay_ms@i+1,c
  6101  003A8C  0E00               	movlw	0
  6102  003A8E  6E1F               	movwf	util_waits_delay_ms@i,c
  6103  003A90  D006               	goto	l367
  6104  003A92                     l4706:
  6105                           
  6106                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6107  003A92  0EA6               	movlw	166
  6108  003A94                     u6417:
  6109  003A94  2EE8               	decfsz	wreg,f,c
  6110  003A96  D7FE               	bra	u6417
  6111  003A98  D000               	nop2	
  6112  003A9A  4A1F               	infsnz	util_waits_delay_ms@i,f,c
  6113  003A9C  2A20               	incf	util_waits_delay_ms@i+1,f,c
  6114  003A9E                     l367:
  6115  003A9E  501C               	movf	util_waits_delay_ms@ms,w,c
  6116  003AA0  5C1F               	subwf	util_waits_delay_ms@i,w,c
  6117  003AA2  5020               	movf	util_waits_delay_ms@i+1,w,c
  6118  003AA4  0A80               	xorlw	128
  6119  003AA6  6E1E               	movwf	??_util_waits_delay_ms& (0+255),c
  6120  003AA8  501D               	movf	util_waits_delay_ms@ms+1,w,c
  6121  003AAA  0A80               	xorlw	128
  6122  003AAC  581E               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6123  003AAE  B0D8               	btfsc	status,0,c
  6124  003AB0  0012               	return	
  6125  003AB2  D7EF               	goto	l4706
  6126  003AB4                     __end_of_util_waits_delay_ms:
  6127                           	opt stack 0
  6128                           tblptru	equ	0xFF8
  6129                           tblptrh	equ	0xFF7
  6130                           tblptrl	equ	0xFF6
  6131                           tablat	equ	0xFF5
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           wreg	equ	0xFE8
  6135                           postdec1	equ	0xFE5
  6136                           fsr1h	equ	0xFE2
  6137                           fsr1l	equ	0xFE1
  6138                           indf2	equ	0xFDF
  6139                           postinc2	equ	0xFDE
  6140                           postdec2	equ	0xFDD
  6141                           fsr2h	equ	0xFDA
  6142                           fsr2l	equ	0xFD9
  6143                           status	equ	0xFD8
  6144                           
  6145 ;; *************** function _util_pwm_stop *****************
  6146 ;; Defined at:
  6147 ;;		line 95 in file "easat2_util_pwm.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		None
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6161 ;;      Params:         0       0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    2
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_util_transmit_dot
  6172 ;;		_util_transmit_dash
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text26
  6177  003C24                     __ptext26:
  6178                           	opt stack 0
  6179  003C24                     _util_pwm_stop:
  6180                           	opt stack 23
  6181                           
  6182                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6183                           
  6184                           ;incstack = 0
  6185  003C24  8495               	bsf	3989,2,c	;volatile
  6186                           
  6187                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6188  003C26  8695               	bsf	3989,3,c	;volatile
  6189                           
  6190                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6191  003C28  94BA               	bcf	4026,2,c	;volatile
  6192  003C2A  0012               	return		;funcret
  6193  003C2C                     __end_of_util_pwm_stop:
  6194                           	opt stack 0
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           intcon	equ	0xFF2
  6200                           postinc0	equ	0xFEE
  6201                           wreg	equ	0xFE8
  6202                           postdec1	equ	0xFE5
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           fsr2h	equ	0xFDA
  6209                           fsr2l	equ	0xFD9
  6210                           status	equ	0xFD8
  6211                           
  6212 ;; *************** function _util_pwm_start *****************
  6213 ;; Defined at:
  6214 ;;		line 78 in file "easat2_util_pwm.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		None
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6228 ;;      Params:         0       0       0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    2
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_util_transmit_dot
  6239 ;;		_util_transmit_dash
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text27
  6244  003C2C                     __ptext27:
  6245                           	opt stack 0
  6246  003C2C                     _util_pwm_start:
  6247                           	opt stack 23
  6248                           
  6249                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6250                           
  6251                           ;incstack = 0
  6252  003C2C  9495               	bcf	3989,2,c	;volatile
  6253                           
  6254                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6255  003C2E  9695               	bcf	3989,3,c	;volatile
  6256                           
  6257                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6258  003C30  84BA               	bsf	4026,2,c	;volatile
  6259  003C32  0012               	return		;funcret
  6260  003C34                     __end_of_util_pwm_start:
  6261                           	opt stack 0
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           intcon	equ	0xFF2
  6267                           postinc0	equ	0xFEE
  6268                           wreg	equ	0xFE8
  6269                           postdec1	equ	0xFE5
  6270                           fsr1h	equ	0xFE2
  6271                           fsr1l	equ	0xFE1
  6272                           indf2	equ	0xFDF
  6273                           postinc2	equ	0xFDE
  6274                           postdec2	equ	0xFDD
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function _strlen *****************
  6280 ;; Defined at:
  6281 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  s               2   27[COMRAM] PTR const unsigned char 
  6284 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6285 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6286 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6287 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6288 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6289 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6290 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6291 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6292 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6293 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6294 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  cp              2   31[COMRAM] PTR const unsigned char 
  6297 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6298 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6299 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6300 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6301 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6302 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6303 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6304 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6305 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6306 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6307 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2   27[COMRAM] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6317 ;;      Params:         2       0       0       0       0       0       0
  6318 ;;      Locals:         2       0       0       0       0       0       0
  6319 ;;      Temps:          2       0       0       0       0       0       0
  6320 ;;      Totals:         6       0       0       0       0       0       0
  6321 ;;Total ram usage:        6 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    2
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_util_beacon_transmission
  6328 ;;		_util_transmit_morse_sequence
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text28
  6333  003768                     __ptext28:
  6334                           	opt stack 0
  6335  003768                     _strlen:
  6336                           	opt stack 24
  6337                           
  6338                           ;incstack = 0
  6339  003768  C01C  F020         	movff	strlen@s,strlen@cp
  6340  00376C  C01D  F021         	movff	strlen@s+1,strlen@cp+1
  6341  003770  D002               	goto	l4750
  6342  003772                     l4748:
  6343  003772  4A20               	infsnz	strlen@cp,f,c
  6344  003774  2A21               	incf	strlen@cp+1,f,c
  6345  003776                     l4750:
  6346  003776  C020  FFF6         	movff	strlen@cp,tblptrl
  6347  00377A  C021  FFF7         	movff	strlen@cp+1,tblptrh
  6348  00377E  6AF8               	clrf	tblptru,c
  6349  003780  0E05               	movlw	(high __ramtop+-1)
  6350  003782  64F7               	cpfsgt	tblptrh,c
  6351  003784  D003               	bra	u4797
  6352  003786  0008               	tblrd		*
  6353  003788  50F5               	movf	tablat,w,c
  6354  00378A  D005               	bra	u4790
  6355  00378C                     u4797:
  6356  00378C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6357  003790  CFF7 FFEA          	movff	tblptrh,fsr0h
  6358  003794  50EF               	movf	indf0,w,c
  6359  003796                     u4790:
  6360  003796  0900               	iorlw	0
  6361  003798  A4D8               	btfss	status,2,c
  6362  00379A  D7EB               	goto	l4748
  6363  00379C  C01C  F01E         	movff	strlen@s,??_strlen
  6364  0037A0  C01D  F01F         	movff	strlen@s+1,??_strlen+1
  6365  0037A4  1E1E               	comf	??_strlen,f,c
  6366  0037A6  1E1F               	comf	??_strlen+1,f,c
  6367  0037A8  4A1E               	infsnz	??_strlen,f,c
  6368  0037AA  2A1F               	incf	??_strlen+1,f,c
  6369  0037AC  5020               	movf	strlen@cp,w,c
  6370  0037AE  241E               	addwf	??_strlen,w,c
  6371  0037B0  6E1C               	movwf	?_strlen,c
  6372  0037B2  5021               	movf	strlen@cp+1,w,c
  6373  0037B4  201F               	addwfc	??_strlen+1,w,c
  6374  0037B6  6E1D               	movwf	?_strlen+1,c
  6375  0037B8  0012               	return	
  6376  0037BA                     __end_of_strlen:
  6377                           	opt stack 0
  6378                           tblptru	equ	0xFF8
  6379                           tblptrh	equ	0xFF7
  6380                           tblptrl	equ	0xFF6
  6381                           tablat	equ	0xFF5
  6382                           intcon	equ	0xFF2
  6383                           indf0	equ	0xFEF
  6384                           postinc0	equ	0xFEE
  6385                           fsr0h	equ	0xFEA
  6386                           fsr0l	equ	0xFE9
  6387                           wreg	equ	0xFE8
  6388                           postdec1	equ	0xFE5
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _strcpy *****************
  6399 ;; Defined at:
  6400 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  to              2   27[COMRAM] PTR unsigned char 
  6403 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6404 ;;  from            2   29[COMRAM] PTR const unsigned char 
  6405 ;;		 -> STR_1(7), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  cp              2   31[COMRAM] PTR unsigned char 
  6408 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  2   27[COMRAM] PTR unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6418 ;;      Params:         4       0       0       0       0       0       0
  6419 ;;      Locals:         2       0       0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0
  6421 ;;      Totals:         6       0       0       0       0       0       0
  6422 ;;Total ram usage:        6 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    2
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_util_beacon_transmission
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text29
  6433  003A58                     __ptext29:
  6434                           	opt stack 0
  6435  003A58                     _strcpy:
  6436                           	opt stack 26
  6437                           
  6438                           ;incstack = 0
  6439  003A58  C01C  F020         	movff	strcpy@to,strcpy@cp
  6440  003A5C  C01D  F021         	movff	strcpy@to+1,strcpy@cp+1
  6441  003A60  D004               	goto	l3852
  6442  003A62                     l3850:
  6443  003A62  4A20               	infsnz	strcpy@cp,f,c
  6444  003A64  2A21               	incf	strcpy@cp+1,f,c
  6445  003A66  4A1E               	infsnz	strcpy@from,f,c
  6446  003A68  2A1F               	incf	strcpy@from+1,f,c
  6447  003A6A                     l3852:
  6448  003A6A  C01E  FFF6         	movff	strcpy@from,tblptrl
  6449  003A6E  C01F  FFF7         	movff	strcpy@from+1,tblptrh
  6450  003A72                     	if	0	;tblptru may be non-zero
  6451  003A72                     	endif
  6452  003A72                     	if	0	;tblptru may be non-zero
  6453  003A72                     	endif
  6454  003A72  C020  FFD9         	movff	strcpy@cp,fsr2l
  6455  003A76  C021  FFDA         	movff	strcpy@cp+1,fsr2h
  6456  003A7A  0008               	tblrd		*
  6457  003A7C  CFF5 FFDF          	movff	tablat,indf2
  6458  003A80  50DF               	movf	indf2,w,c
  6459  003A82  B4D8               	btfsc	status,2,c
  6460  003A84  0012               	return	
  6461  003A86  D7ED               	goto	l3850
  6462  003A88                     __end_of_strcpy:
  6463                           	opt stack 0
  6464                           tblptru	equ	0xFF8
  6465                           tblptrh	equ	0xFF7
  6466                           tblptrl	equ	0xFF6
  6467                           tablat	equ	0xFF5
  6468                           intcon	equ	0xFF2
  6469                           indf0	equ	0xFEF
  6470                           postinc0	equ	0xFEE
  6471                           fsr0h	equ	0xFEA
  6472                           fsr0l	equ	0xFE9
  6473                           wreg	equ	0xFE8
  6474                           postdec1	equ	0xFE5
  6475                           fsr1h	equ	0xFE2
  6476                           fsr1l	equ	0xFE1
  6477                           indf2	equ	0xFDF
  6478                           postinc2	equ	0xFDE
  6479                           postdec2	equ	0xFDD
  6480                           fsr2h	equ	0xFDA
  6481                           fsr2l	equ	0xFD9
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _strcat *****************
  6485 ;; Defined at:
  6486 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  to              2   27[COMRAM] PTR unsigned char 
  6489 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6490 ;;  from            2   29[COMRAM] PTR const unsigned char 
  6491 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  cp              2   31[COMRAM] PTR unsigned char 
  6494 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  2   27[COMRAM] PTR unsigned char 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6504 ;;      Params:         4       0       0       0       0       0       0
  6505 ;;      Locals:         2       0       0       0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0       0       0
  6507 ;;      Totals:         6       0       0       0       0       0       0
  6508 ;;Total ram usage:        6 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    2
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_util_beacon_transmission
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text30
  6519  003896                     __ptext30:
  6520                           	opt stack 0
  6521  003896                     _strcat:
  6522                           	opt stack 26
  6523                           
  6524                           ;incstack = 0
  6525  003896  C01C  F020         	movff	strcat@to,strcat@cp
  6526  00389A  C01D  F021         	movff	strcat@to+1,strcat@cp+1
  6527  00389E  D002               	goto	l4152
  6528  0038A0                     l4150:
  6529  0038A0  4A20               	infsnz	strcat@cp,f,c
  6530  0038A2  2A21               	incf	strcat@cp+1,f,c
  6531  0038A4                     l4152:
  6532  0038A4  C020  FFD9         	movff	strcat@cp,fsr2l
  6533  0038A8  C021  FFDA         	movff	strcat@cp+1,fsr2h
  6534  0038AC  50DF               	movf	indf2,w,c
  6535  0038AE  B4D8               	btfsc	status,2,c
  6536  0038B0  D005               	goto	l4156
  6537  0038B2  D7F6               	goto	l4150
  6538  0038B4                     l4154:
  6539  0038B4  4A20               	infsnz	strcat@cp,f,c
  6540  0038B6  2A21               	incf	strcat@cp+1,f,c
  6541  0038B8  4A1E               	infsnz	strcat@from,f,c
  6542  0038BA  2A1F               	incf	strcat@from+1,f,c
  6543  0038BC                     l4156:
  6544  0038BC  C01E  FFD9         	movff	strcat@from,fsr2l
  6545  0038C0  C01F  FFDA         	movff	strcat@from+1,fsr2h
  6546  0038C4  C020  FFE1         	movff	strcat@cp,fsr1l
  6547  0038C8  C021  FFE2         	movff	strcat@cp+1,fsr1h
  6548  0038CC  CFDF FFE7          	movff	indf2,indf1
  6549  0038D0  50E7               	movf	indf1,w,c
  6550  0038D2  B4D8               	btfsc	status,2,c
  6551  0038D4  0012               	return	
  6552  0038D6  D7EE               	goto	l4154
  6553  0038D8                     __end_of_strcat:
  6554                           	opt stack 0
  6555                           tblptru	equ	0xFF8
  6556                           tblptrh	equ	0xFF7
  6557                           tblptrl	equ	0xFF6
  6558                           tablat	equ	0xFF5
  6559                           intcon	equ	0xFF2
  6560                           indf0	equ	0xFEF
  6561                           postinc0	equ	0xFEE
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           indf1	equ	0xFE7
  6566                           postdec1	equ	0xFE5
  6567                           fsr1h	equ	0xFE2
  6568                           fsr1l	equ	0xFE1
  6569                           indf2	equ	0xFDF
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function _sprintf *****************
  6577 ;; Defined at:
  6578 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  sp              2   68[BANK0 ] PTR unsigned char 
  6581 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6582 ;;  f               2   70[BANK0 ] PTR const unsigned char 
  6583 ;;		 -> STR_2(23), 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  val             4  101[BANK0 ] unsigned long 
  6586 ;;  tmpval          4   97[BANK0 ] struct .
  6587 ;;  fval            3  107[BANK0 ] struct .
  6588 ;;  cp              3    0        PTR const unsigned char 
  6589 ;;  prec            2  110[BANK0 ] int 
  6590 ;;  exp             2  105[BANK0 ] int 
  6591 ;;  width           2   95[BANK0 ] int 
  6592 ;;  flag            2   93[BANK0 ] unsigned short 
  6593 ;;  ap              2   91[BANK0 ] PTR void [1]
  6594 ;;		 -> ?_sprintf(2), 
  6595 ;;  len             2    0        unsigned int 
  6596 ;;  c               1  112[BANK0 ] char 
  6597 ;;  d               1    0        unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  2   68[BANK0 ] int 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6607 ;;      Params:         0      14       0       0       0       0       0
  6608 ;;      Locals:         0      25       0       0       0       0       0
  6609 ;;      Temps:          0       6       0       0       0       0       0
  6610 ;;      Totals:         0      45       0       0       0       0       0
  6611 ;;Total ram usage:       45 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    5
  6614 ;; This function calls:
  6615 ;;		___awdiv
  6616 ;;		___ftadd
  6617 ;;		___ftge
  6618 ;;		___ftmul
  6619 ;;		___ftneg
  6620 ;;		___ftsub
  6621 ;;		___fttol
  6622 ;;		___lldiv
  6623 ;;		___llmod
  6624 ;;		___lltoft
  6625 ;;		___wmul
  6626 ;;		__div_to_l_
  6627 ;;		__tdiv_to_l_
  6628 ;;		_fround
  6629 ;;		_isdigit
  6630 ;;		_scale
  6631 ;; This function is called by:
  6632 ;;		_util_beacon_transmission
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text31
  6637  0000AA                     __ptext31:
  6638                           	opt stack 0
  6639  0000AA                     _sprintf:
  6640                           	opt stack 23
  6641                           
  6642                           ;doprnt.c: 494: va_list ap;
  6643                           ;doprnt.c: 499: signed char c;
  6644                           ;doprnt.c: 501: int width;
  6645                           ;doprnt.c: 504: int prec;
  6646                           ;doprnt.c: 508: unsigned short flag;
  6647                           ;doprnt.c: 515: char d;
  6648                           ;doprnt.c: 516: double fval;
  6649                           ;doprnt.c: 517: int exp;
  6650                           ;doprnt.c: 523: union {
  6651                           ;doprnt.c: 524: unsigned long vd;
  6652                           ;doprnt.c: 525: double integ;
  6653                           ;doprnt.c: 526: } tmpval;
  6654                           ;doprnt.c: 528: unsigned long val;
  6655                           ;doprnt.c: 529: unsigned len;
  6656                           ;doprnt.c: 530: const char * cp;
  6657                           ;doprnt.c: 533: *ap = __va_start();
  6658                           
  6659                           ;incstack = 0
  6660  0000AA  0EA8               	movlw	low (?_sprintf+4)
  6661  0000AC  0100               	movlb	0	; () banked
  6662  0000AE  6FBB               	movwf	sprintf@ap& (0+255),b
  6663  0000B0  0E00               	movlw	high (?_sprintf+4)
  6664  0000B2  0100               	movlb	0	; () banked
  6665  0000B4  6FBC               	movwf	(sprintf@ap+1)& (0+255),b
  6666                           
  6667                           ;doprnt.c: 536: while(c = *f++) {
  6668  0000B6  EF02  F006         	goto	l5534
  6669  0000BA                     l5248:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;doprnt.c: 538: if(c != '%')
  6673  0000BA  0E25               	movlw	37
  6674  0000BC  0100               	movlb	0	; () banked
  6675  0000BE  19D0               	xorwf	sprintf@c& (0+255),w,b
  6676  0000C0  B4D8               	btfsc	status,2,c
  6677  0000C2  D00B               	goto	l5254
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;doprnt.c: 540: {
  6681                           ;doprnt.c: 541: ((*sp++ = (c)));
  6682  0000C4  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  6683  0000C8  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  6684  0000CC  C0D0  FFDF         	movff	sprintf@c,indf2
  6685                           
  6686                           ; BSR set to: 0
  6687  0000D0  0100               	movlb	0	; () banked
  6688  0000D2  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  6689  0000D4  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  6690                           
  6691                           ;doprnt.c: 542: continue;
  6692  0000D6  EF02  F006         	goto	l5534
  6693  0000DA                     l5254:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;doprnt.c: 543: }
  6697                           ;doprnt.c: 546: width = 0;
  6698  0000DA  0E00               	movlw	0
  6699  0000DC  0100               	movlb	0	; () banked
  6700  0000DE  6FC0               	movwf	(sprintf@width+1)& (0+255),b
  6701  0000E0  0E00               	movlw	0
  6702  0000E2  6FBF               	movwf	sprintf@width& (0+255),b
  6703                           
  6704                           ;doprnt.c: 548: flag = 0;
  6705  0000E4  0E00               	movlw	0
  6706  0000E6  0100               	movlb	0	; () banked
  6707  0000E8  6FBE               	movwf	(sprintf@flag+1)& (0+255),b
  6708  0000EA  0E00               	movlw	0
  6709  0000EC  6FBD               	movwf	sprintf@flag& (0+255),b
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6713  0000EE  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6714  0000F2  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6715  0000F6                     	if	0	;tblptru may be non-zero
  6716  0000F6                     	endif
  6717  0000F6                     	if	0	;tblptru may be non-zero
  6718  0000F6                     	endif
  6719  0000F6  0008               	tblrd		*
  6720  0000F8  50F5               	movf	tablat,w,c
  6721  0000FA  ECA7  F01D         	call	_isdigit
  6722  0000FE  A0D8               	btfss	status,0,c
  6723  000100  D040               	goto	l5268
  6724                           
  6725                           ;doprnt.c: 598: width = 0;
  6726  000102  0E00               	movlw	0
  6727  000104  0100               	movlb	0	; () banked
  6728  000106  6FC0               	movwf	(sprintf@width+1)& (0+255),b
  6729  000108  0E00               	movlw	0
  6730  00010A  6FBF               	movwf	sprintf@width& (0+255),b
  6731  00010C                     l5260:
  6732                           
  6733                           ;doprnt.c: 600: width *= 10;
  6734  00010C  C0BF  F075         	movff	sprintf@width,___wmul@multiplier
  6735  000110  C0C0  F076         	movff	sprintf@width+1,___wmul@multiplier+1
  6736  000114  0E00               	movlw	0
  6737  000116  0100               	movlb	0	; () banked
  6738  000118  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6739  00011A  0E0A               	movlw	10
  6740  00011C  6F77               	movwf	___wmul@multiplicand& (0+255),b
  6741  00011E  ECFB  F01C         	call	___wmul	;wreg free
  6742  000122  C075  F0BF         	movff	?___wmul,sprintf@width
  6743  000126  C076  F0C0         	movff	?___wmul+1,sprintf@width+1
  6744                           
  6745                           ;doprnt.c: 601: width += *f++ - '0';
  6746  00012A  0ED0               	movlw	208
  6747  00012C  0100               	movlb	0	; () banked
  6748  00012E  6FB2               	movwf	??_sprintf& (0+255),b
  6749  000130  0EFF               	movlw	255
  6750  000132  0100               	movlb	0	; () banked
  6751  000134  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  6752  000136  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6753  00013A  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6754  00013E                     	if	0	;tblptru may be non-zero
  6755  00013E                     	endif
  6756  00013E                     	if	0	;tblptru may be non-zero
  6757  00013E                     	endif
  6758  00013E  0008               	tblrd		*
  6759  000140  50F5               	movf	tablat,w,c
  6760  000142  0100               	movlb	0	; () banked
  6761  000144  6FB4               	movwf	(??_sprintf+2)& (0+255),b
  6762  000146  6BB5               	clrf	(??_sprintf+3)& (0+255),b
  6763  000148  0100               	movlb	0	; () banked
  6764  00014A  51B2               	movf	??_sprintf& (0+255),w,b
  6765  00014C  0100               	movlb	0	; () banked
  6766  00014E  27B4               	addwf	(??_sprintf+2)& (0+255),f,b
  6767  000150  0100               	movlb	0	; () banked
  6768  000152  51B3               	movf	(??_sprintf+1)& (0+255),w,b
  6769  000154  0100               	movlb	0	; () banked
  6770  000156  23B5               	addwfc	(??_sprintf+3)& (0+255),f,b
  6771  000158  0100               	movlb	0	; () banked
  6772  00015A  51B4               	movf	(??_sprintf+2)& (0+255),w,b
  6773  00015C  0100               	movlb	0	; () banked
  6774  00015E  27BF               	addwf	sprintf@width& (0+255),f,b
  6775  000160  0100               	movlb	0	; () banked
  6776  000162  51B5               	movf	(??_sprintf+3)& (0+255),w,b
  6777  000164  0100               	movlb	0	; () banked
  6778  000166  23C0               	addwfc	(sprintf@width+1)& (0+255),f,b
  6779                           
  6780                           ; BSR set to: 0
  6781  000168  0100               	movlb	0	; () banked
  6782  00016A  4BA6               	infsnz	sprintf@f& (0+255),f,b
  6783  00016C  2BA7               	incf	(sprintf@f+1)& (0+255),f,b
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6787  00016E  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6788  000172  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6789  000176                     	if	0	;tblptru may be non-zero
  6790  000176                     	endif
  6791  000176                     	if	0	;tblptru may be non-zero
  6792  000176                     	endif
  6793  000176  0008               	tblrd		*
  6794  000178  50F5               	movf	tablat,w,c
  6795  00017A  ECA7  F01D         	call	_isdigit
  6796  00017E  B0D8               	btfsc	status,0,c
  6797  000180  D7C5               	goto	l5260
  6798  000182                     l5268:
  6799                           
  6800                           ;doprnt.c: 608: }
  6801                           ;doprnt.c: 611: if(*f == '.') {
  6802  000182  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6803  000186  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6804  00018A                     	if	0	;tblptru may be non-zero
  6805  00018A                     	endif
  6806  00018A                     	if	0	;tblptru may be non-zero
  6807  00018A                     	endif
  6808  00018A  0008               	tblrd		*
  6809  00018C  50F5               	movf	tablat,w,c
  6810  00018E  0A2E               	xorlw	46
  6811  000190  A4D8               	btfss	status,2,c
  6812  000192  D039               	goto	l5280
  6813                           
  6814                           ;doprnt.c: 612: flag |= 0x4000;
  6815  000194  0100               	movlb	0	; () banked
  6816  000196  8DBE               	bsf	(sprintf@flag+1)& (0+255),6,b
  6817                           
  6818                           ;doprnt.c: 613: f++;
  6819  000198  0100               	movlb	0	; () banked
  6820  00019A  4BA6               	infsnz	sprintf@f& (0+255),f,b
  6821  00019C  2BA7               	incf	(sprintf@f+1)& (0+255),f,b
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;doprnt.c: 620: {
  6825                           ;doprnt.c: 621: prec = 0;
  6826  00019E  0E00               	movlw	0
  6827  0001A0  0100               	movlb	0	; () banked
  6828  0001A2  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  6829  0001A4  0E00               	movlw	0
  6830  0001A6  6FCE               	movwf	sprintf@prec& (0+255),b
  6831                           
  6832                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6833  0001A8  D023               	goto	l5278
  6834  0001AA                     l5274:
  6835                           
  6836                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6837  0001AA  C0CE  F075         	movff	sprintf@prec,___wmul@multiplier
  6838  0001AE  C0CF  F076         	movff	sprintf@prec+1,___wmul@multiplier+1
  6839  0001B2  0E00               	movlw	0
  6840  0001B4  0100               	movlb	0	; () banked
  6841  0001B6  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6842  0001B8  0E0A               	movlw	10
  6843  0001BA  6F77               	movwf	___wmul@multiplicand& (0+255),b
  6844  0001BC  ECFB  F01C         	call	___wmul	;wreg free
  6845  0001C0  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6846  0001C4  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6847  0001C8                     	if	0	;tblptru may be non-zero
  6848  0001C8                     	endif
  6849  0001C8                     	if	0	;tblptru may be non-zero
  6850  0001C8                     	endif
  6851  0001C8  0008               	tblrd		*
  6852  0001CA  50F5               	movf	tablat,w,c
  6853  0001CC  0100               	movlb	0	; () banked
  6854  0001CE  2775               	addwf	?___wmul& (0+255),f,b
  6855  0001D0  0E00               	movlw	0
  6856  0001D2  0100               	movlb	0	; () banked
  6857  0001D4  2376               	addwfc	(?___wmul+1)& (0+255),f,b
  6858  0001D6  0ED0               	movlw	208
  6859  0001D8  0100               	movlb	0	; () banked
  6860  0001DA  2575               	addwf	?___wmul& (0+255),w,b
  6861  0001DC  0100               	movlb	0	; () banked
  6862  0001DE  6FCE               	movwf	sprintf@prec& (0+255),b
  6863  0001E0  0EFF               	movlw	255
  6864  0001E2  0100               	movlb	0	; () banked
  6865  0001E4  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  6866  0001E6  0100               	movlb	0	; () banked
  6867  0001E8  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870  0001EA  0100               	movlb	0	; () banked
  6871  0001EC  4BA6               	infsnz	sprintf@f& (0+255),f,b
  6872  0001EE  2BA7               	incf	(sprintf@f+1)& (0+255),f,b
  6873  0001F0                     l5278:
  6874                           
  6875                           ; BSR set to: 0
  6876  0001F0  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6877  0001F4  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6878  0001F8                     	if	0	;tblptru may be non-zero
  6879  0001F8                     	endif
  6880  0001F8                     	if	0	;tblptru may be non-zero
  6881  0001F8                     	endif
  6882  0001F8  0008               	tblrd		*
  6883  0001FA  50F5               	movf	tablat,w,c
  6884  0001FC  ECA7  F01D         	call	_isdigit
  6885  000200  A0D8               	btfss	status,0,c
  6886  000202  D00C               	goto	l5288
  6887  000204  D7D2               	goto	l5274
  6888  000206                     l5280:
  6889                           
  6890                           ;doprnt.c: 626: prec = 0;
  6891  000206  0E00               	movlw	0
  6892  000208  0100               	movlb	0	; () banked
  6893  00020A  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  6894  00020C  0E00               	movlw	0
  6895  00020E  6FCE               	movwf	sprintf@prec& (0+255),b
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;doprnt.c: 628: flag |= 0x1000;
  6899  000210  0100               	movlb	0	; () banked
  6900  000212  89BE               	bsf	(sprintf@flag+1)& (0+255),4,b
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;doprnt.c: 630: }
  6904                           ;doprnt.c: 635: switch(c = *f++) {
  6905  000214  D003               	goto	l5288
  6906  000216                     l5284:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;doprnt.c: 663: flag |= 0x400;
  6910  000216  0100               	movlb	0	; () banked
  6911  000218  85BE               	bsf	(sprintf@flag+1)& (0+255),2,b
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;doprnt.c: 698: case 'i':
  6915                           ;doprnt.c: 699: break;
  6916                           
  6917                           ; BSR set to: 0
  6918                           
  6919                           ;doprnt.c: 697: case 'd':
  6920                           
  6921                           ;doprnt.c: 664: break;
  6922  00021A  D01A               	goto	l5290
  6923  00021C                     l5288:
  6924  00021C  C0A6  FFF6         	movff	sprintf@f,tblptrl
  6925  000220  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  6926  000224  0100               	movlb	0	; () banked
  6927  000226  4BA6               	infsnz	sprintf@f& (0+255),f,b
  6928  000228  2BA7               	incf	(sprintf@f+1)& (0+255),f,b
  6929  00022A                     	if	0	;tblptru may be non-zero
  6930  00022A                     	endif
  6931  00022A                     	if	0	;tblptru may be non-zero
  6932  00022A                     	endif
  6933  00022A  0008               	tblrd		*
  6934  00022C  CFF5 F0D0          	movff	tablat,sprintf@c
  6935  000230  0100               	movlb	0	; () banked
  6936  000232  51D0               	movf	sprintf@c& (0+255),w,b
  6937                           
  6938                           ; Switch size 1, requested type "space"
  6939                           ; Number of cases is 4, Range of values is 0 to 105
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte           13     7 (average)
  6943                           ;	Chosen strategy is simple_byte
  6944  000234  0A00               	xorlw	0	; case 0
  6945  000236  B4D8               	btfsc	status,2,c
  6946  000238  EF11  F006         	goto	l5536
  6947  00023C  0A64               	xorlw	100	; case 100
  6948  00023E  B4D8               	btfsc	status,2,c
  6949  000240  D007               	goto	l5290
  6950  000242  0A02               	xorlw	2	; case 102
  6951  000244  B4D8               	btfsc	status,2,c
  6952  000246  D7E7               	goto	l5284
  6953  000248  0A0F               	xorlw	15	; case 105
  6954  00024A  A4D8               	btfss	status,2,c
  6955  00024C  EF02  F006         	goto	l5534
  6956  000250                     l5290:
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;doprnt.c: 825: if(flag & (0x700)) {
  6960  000250  0E07               	movlw	7
  6961  000252  0100               	movlb	0	; () banked
  6962  000254  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  6963  000256  B4D8               	btfsc	status,2,c
  6964  000258  D36D               	goto	l5454
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;doprnt.c: 827: if(flag & 0x1000)
  6968  00025A  0100               	movlb	0	; () banked
  6969  00025C  A9BE               	btfss	(sprintf@flag+1)& (0+255),4,b
  6970  00025E  D005               	goto	l5296
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;doprnt.c: 829: prec = 6;
  6974  000260  0E00               	movlw	0
  6975  000262  0100               	movlb	0	; () banked
  6976  000264  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  6977  000266  0E06               	movlw	6
  6978  000268  6FCE               	movwf	sprintf@prec& (0+255),b
  6979  00026A                     l5296:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6983  00026A  C0BB  FFD9         	movff	sprintf@ap,fsr2l
  6984  00026E  C0BC  FFDA         	movff	sprintf@ap+1,fsr2h
  6985  000272  CFDE F0CB          	movff	postinc2,sprintf@fval
  6986  000276  CFDE F0CC          	movff	postinc2,sprintf@fval+1
  6987  00027A  CFDD F0CD          	movff	postdec2,sprintf@fval+2
  6988                           
  6989                           ; BSR set to: 0
  6990  00027E  0E03               	movlw	3
  6991  000280  0100               	movlb	0	; () banked
  6992  000282  27BB               	addwf	sprintf@ap& (0+255),f,b
  6993  000284  0E00               	movlw	0
  6994  000286  23BC               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;doprnt.c: 831: if(fval < 0.0) {
  6998  000288  0100               	movlb	0	; () banked
  6999  00028A  AFCD               	btfss	(sprintf@fval+2)& (0+255),7,b
  7000  00028C  D011               	goto	l5306
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;doprnt.c: 832: fval = -fval;
  7004  00028E  C0CB  F01C         	movff	sprintf@fval,___ftneg@f1
  7005  000292  C0CC  F01D         	movff	sprintf@fval+1,___ftneg@f1+1
  7006  000296  C0CD  F01E         	movff	sprintf@fval+2,___ftneg@f1+2
  7007  00029A  EC95  F01D         	call	___ftneg	;wreg free
  7008  00029E  C01C  F0CB         	movff	?___ftneg,sprintf@fval
  7009  0002A2  C01D  F0CC         	movff	?___ftneg+1,sprintf@fval+1
  7010  0002A6  C01E  F0CD         	movff	?___ftneg+2,sprintf@fval+2
  7011                           
  7012                           ;doprnt.c: 833: flag |= 0x03;
  7013  0002AA  0E03               	movlw	3
  7014  0002AC  0100               	movlb	0	; () banked
  7015  0002AE  13BD               	iorwf	sprintf@flag& (0+255),f,b
  7016  0002B0                     l5306:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;doprnt.c: 834: }
  7020                           ;doprnt.c: 835: exp = 0;
  7021  0002B0  0E00               	movlw	0
  7022  0002B2  0100               	movlb	0	; () banked
  7023  0002B4  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  7024  0002B6  0E00               	movlw	0
  7025  0002B8  6FC9               	movwf	sprintf@exp& (0+255),b
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;doprnt.c: 836: if( fval!=0) {
  7029  0002BA  0100               	movlb	0	; () banked
  7030  0002BC  51CB               	movf	sprintf@fval& (0+255),w,b
  7031  0002BE  0100               	movlb	0	; () banked
  7032  0002C0  11CC               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7033  0002C2  0100               	movlb	0	; () banked
  7034  0002C4  11CD               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7035  0002C6  B4D8               	btfsc	status,2,c
  7036  0002C8  D093               	goto	l5334
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7040  0002CA  0E82               	movlw	130
  7041  0002CC  0100               	movlb	0	; () banked
  7042  0002CE  6FB2               	movwf	??_sprintf& (0+255),b
  7043  0002D0  0EFF               	movlw	255
  7044  0002D2  0100               	movlb	0	; () banked
  7045  0002D4  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  7046  0002D6  C0CB  F0B4         	movff	sprintf@fval,??_sprintf+2
  7047  0002DA  C0CC  F0B5         	movff	sprintf@fval+1,??_sprintf+3
  7048  0002DE  C0CD  F0B6         	movff	sprintf@fval+2,??_sprintf+4
  7049  0002E2  C0CE  F0B7         	movff	sprintf@fval+3,??_sprintf+5
  7050  0002E6  0E10               	movlw	16
  7051  0002E8  D006               	goto	u5610
  7052  0002EA                     u5615:
  7053  0002EA  0100               	movlb	0	; () banked
  7054  0002EC  90D8               	bcf	status,0,c
  7055  0002EE  33B7               	rrcf	(??_sprintf+5)& (0+255),f,b
  7056  0002F0  33B6               	rrcf	(??_sprintf+4)& (0+255),f,b
  7057  0002F2  33B5               	rrcf	(??_sprintf+3)& (0+255),f,b
  7058  0002F4  33B4               	rrcf	(??_sprintf+2)& (0+255),f,b
  7059  0002F6                     u5610:
  7060  0002F6  2EE8               	decfsz	wreg,f,c
  7061  0002F8  D7F8               	goto	u5615
  7062  0002FA  0100               	movlb	0	; () banked
  7063  0002FC  51B4               	movf	(??_sprintf+2)& (0+255),w,b
  7064  0002FE  0100               	movlb	0	; () banked
  7065  000300  25B2               	addwf	??_sprintf& (0+255),w,b
  7066  000302  0100               	movlb	0	; () banked
  7067  000304  6FC9               	movwf	sprintf@exp& (0+255),b
  7068  000306  0E00               	movlw	0
  7069  000308  0100               	movlb	0	; () banked
  7070  00030A  21B3               	addwfc	(??_sprintf+1)& (0+255),w,b
  7071  00030C  0100               	movlb	0	; () banked
  7072  00030E  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;doprnt.c: 838: exp--;
  7076  000310  0100               	movlb	0	; () banked
  7077  000312  07C9               	decf	sprintf@exp& (0+255),f,b
  7078  000314  A0D8               	btfss	status,0,c
  7079  000316  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;doprnt.c: 839: exp *= 3;
  7083  000318  C0C9  F075         	movff	sprintf@exp,___wmul@multiplier
  7084  00031C  C0CA  F076         	movff	sprintf@exp+1,___wmul@multiplier+1
  7085  000320  0E00               	movlw	0
  7086  000322  0100               	movlb	0	; () banked
  7087  000324  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7088  000326  0E03               	movlw	3
  7089  000328  6F77               	movwf	___wmul@multiplicand& (0+255),b
  7090  00032A  ECFB  F01C         	call	___wmul	;wreg free
  7091  00032E  C075  F0C9         	movff	?___wmul,sprintf@exp
  7092  000332  C076  F0CA         	movff	?___wmul+1,sprintf@exp+1
  7093                           
  7094                           ;doprnt.c: 840: exp /= 10;
  7095  000336  C0C9  F071         	movff	sprintf@exp,___awdiv@dividend
  7096  00033A  C0CA  F072         	movff	sprintf@exp+1,___awdiv@dividend+1
  7097  00033E  0E00               	movlw	0
  7098  000340  0100               	movlb	0	; () banked
  7099  000342  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  7100  000344  0E0A               	movlw	10
  7101  000346  6F73               	movwf	___awdiv@divisor& (0+255),b
  7102  000348  ECC2  F019         	call	___awdiv	;wreg free
  7103  00034C  C071  F0C9         	movff	?___awdiv,sprintf@exp
  7104  000350  C072  F0CA         	movff	?___awdiv+1,sprintf@exp+1
  7105                           
  7106                           ;doprnt.c: 841: if(exp < 0)
  7107  000354  0100               	movlb	0	; () banked
  7108  000356  AFCA               	btfss	(sprintf@exp+1)& (0+255),7,b
  7109  000358  D004               	goto	l5322
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;doprnt.c: 842: exp--;
  7113  00035A  0100               	movlb	0	; () banked
  7114  00035C  07C9               	decf	sprintf@exp& (0+255),f,b
  7115  00035E  A0D8               	btfss	status,0,c
  7116  000360  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  7117  000362                     l5322:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7121  000362  0100               	movlb	0	; () banked
  7122  000364  51C9               	movf	sprintf@exp& (0+255),w,b
  7123  000366  0800               	sublw	0
  7124  000368  ECE5  F009         	call	_scale
  7125  00036C  C088  F0C1         	movff	?_scale,sprintf@tmpval
  7126  000370  C089  F0C2         	movff	?_scale+1,sprintf@tmpval+1
  7127  000374  C08A  F0C3         	movff	?_scale+2,sprintf@tmpval+2
  7128                           
  7129                           ;doprnt.c: 847: tmpval.integ *= fval;
  7130  000378  C0C1  F079         	movff	sprintf@tmpval,___ftmul@f1
  7131  00037C  C0C2  F07A         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7132  000380  C0C3  F07B         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7133  000384  C0CB  F07C         	movff	sprintf@fval,___ftmul@f2
  7134  000388  C0CC  F07D         	movff	sprintf@fval+1,___ftmul@f2+1
  7135  00038C  C0CD  F07E         	movff	sprintf@fval+2,___ftmul@f2+2
  7136  000390  ECE4  F013         	call	___ftmul	;wreg free
  7137  000394  C079  F0C1         	movff	?___ftmul,sprintf@tmpval
  7138  000398  C07A  F0C2         	movff	?___ftmul+1,sprintf@tmpval+1
  7139  00039C  C07B  F0C3         	movff	?___ftmul+2,sprintf@tmpval+2
  7140                           
  7141                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7142  0003A0  C0C1  F01C         	movff	sprintf@tmpval,___ftge@ff1
  7143  0003A4  C0C2  F01D         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7144  0003A8  C0C3  F01E         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7145  0003AC  0E00               	movlw	0
  7146  0003AE  6E1F               	movwf	___ftge@ff2,c
  7147  0003B0  0E80               	movlw	128
  7148  0003B2  6E20               	movwf	___ftge@ff2+1,c
  7149  0003B4  0E3F               	movlw	63
  7150  0003B6  6E21               	movwf	___ftge@ff2+2,c
  7151  0003B8  EC5F  F01A         	call	___ftge	;wreg free
  7152  0003BC  B0D8               	btfsc	status,0,c
  7153  0003BE  D005               	goto	l5330
  7154                           
  7155                           ;doprnt.c: 849: exp--;
  7156  0003C0  0100               	movlb	0	; () banked
  7157  0003C2  07C9               	decf	sprintf@exp& (0+255),f,b
  7158  0003C4  A0D8               	btfss	status,0,c
  7159  0003C6  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  7160  0003C8  D013               	goto	l5334
  7161  0003CA                     l5330:
  7162                           
  7163                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7164  0003CA  C0C1  F01C         	movff	sprintf@tmpval,___ftge@ff1
  7165  0003CE  C0C2  F01D         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7166  0003D2  C0C3  F01E         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7167  0003D6  0E00               	movlw	0
  7168  0003D8  6E1F               	movwf	___ftge@ff2,c
  7169  0003DA  0E20               	movlw	32
  7170  0003DC  6E20               	movwf	___ftge@ff2+1,c
  7171  0003DE  0E41               	movlw	65
  7172  0003E0  6E21               	movwf	___ftge@ff2+2,c
  7173  0003E2  EC5F  F01A         	call	___ftge	;wreg free
  7174  0003E6  A0D8               	btfss	status,0,c
  7175  0003E8  D003               	goto	l5334
  7176                           
  7177                           ;doprnt.c: 851: exp++;
  7178  0003EA  0100               	movlb	0	; () banked
  7179  0003EC  4BC9               	infsnz	sprintf@exp& (0+255),f,b
  7180  0003EE  2BCA               	incf	(sprintf@exp+1)& (0+255),f,b
  7181  0003F0                     l5334:
  7182                           
  7183                           ;doprnt.c: 852: }
  7184                           ;doprnt.c: 1112: if(prec <= 12)
  7185  0003F0  0100               	movlb	0	; () banked
  7186  0003F2  BFCF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7187  0003F4  D008               	goto	l5336
  7188  0003F6  0100               	movlb	0	; () banked
  7189  0003F8  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  7190  0003FA  E11D               	bnz	l5338
  7191  0003FC  0E0D               	movlw	13
  7192  0003FE  0100               	movlb	0	; () banked
  7193  000400  5DCE               	subwf	sprintf@prec& (0+255),w,b
  7194  000402  B0D8               	btfsc	status,0,c
  7195  000404  D018               	goto	l5338
  7196  000406                     l5336:
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;doprnt.c: 1113: fval += fround(prec);
  7200  000406  C0CB  F092         	movff	sprintf@fval,___ftadd@f1
  7201  00040A  C0CC  F093         	movff	sprintf@fval+1,___ftadd@f1+1
  7202  00040E  C0CD  F094         	movff	sprintf@fval+2,___ftadd@f1+2
  7203  000412  0100               	movlb	0	; () banked
  7204  000414  51CE               	movf	sprintf@prec& (0+255),w,b
  7205  000416  ECD5  F00F         	call	_fround
  7206  00041A  C088  F095         	movff	?_fround,___ftadd@f2
  7207  00041E  C089  F096         	movff	?_fround+1,___ftadd@f2+1
  7208  000422  C08A  F097         	movff	?_fround+2,___ftadd@f2+2
  7209  000426  EC25  F011         	call	___ftadd	;wreg free
  7210  00042A  C092  F0CB         	movff	?___ftadd,sprintf@fval
  7211  00042E  C093  F0CC         	movff	?___ftadd+1,sprintf@fval+1
  7212  000432  C094  F0CD         	movff	?___ftadd+2,sprintf@fval+2
  7213  000436                     l5338:
  7214                           
  7215                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7216  000436  0100               	movlb	0	; () banked
  7217  000438  BFCA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7218  00043A  D008               	goto	l5340
  7219  00043C  0100               	movlb	0	; () banked
  7220  00043E  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  7221  000440  E12A               	bnz	l5346
  7222  000442  0E0A               	movlw	10
  7223  000444  0100               	movlb	0	; () banked
  7224  000446  5DC9               	subwf	sprintf@exp& (0+255),w,b
  7225  000448  B0D8               	btfsc	status,0,c
  7226  00044A  D025               	goto	l5346
  7227  00044C                     l5340:
  7228                           
  7229                           ; BSR set to: 0
  7230  00044C  0100               	movlb	0	; () banked
  7231  00044E  51CB               	movf	sprintf@fval& (0+255),w,b
  7232  000450  0100               	movlb	0	; () banked
  7233  000452  11CC               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7234  000454  0100               	movlb	0	; () banked
  7235  000456  11CD               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7236  000458  B4D8               	btfsc	status,2,c
  7237  00045A  D05F               	goto	l5360
  7238                           
  7239                           ; BSR set to: 0
  7240  00045C  C0CB  F08F         	movff	sprintf@fval,___fttol@f1
  7241  000460  C0CC  F090         	movff	sprintf@fval+1,___fttol@f1+1
  7242  000464  C0CD  F091         	movff	sprintf@fval+2,___fttol@f1+2
  7243  000468  EC41  F015         	call	___fttol	;wreg free
  7244  00046C  0100               	movlb	0	; () banked
  7245  00046E  518F               	movf	?___fttol& (0+255),w,b
  7246  000470  0100               	movlb	0	; () banked
  7247  000472  1190               	iorwf	(?___fttol+1)& (0+255),w,b
  7248  000474  0100               	movlb	0	; () banked
  7249  000476  1191               	iorwf	(?___fttol+2)& (0+255),w,b
  7250  000478  0100               	movlb	0	; () banked
  7251  00047A  1192               	iorwf	(?___fttol+3)& (0+255),w,b
  7252  00047C  A4D8               	btfss	status,2,c
  7253  00047E  D04D               	goto	l5360
  7254                           
  7255                           ; BSR set to: 0
  7256  000480  0100               	movlb	0	; () banked
  7257  000482  BFCA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7258  000484  D04A               	goto	l5360
  7259  000486  0100               	movlb	0	; () banked
  7260  000488  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  7261  00048A  E105               	bnz	l5346
  7262  00048C  0E02               	movlw	2
  7263  00048E  0100               	movlb	0	; () banked
  7264  000490  5DC9               	subwf	sprintf@exp& (0+255),w,b
  7265  000492  A0D8               	btfss	status,0,c
  7266  000494  D042               	goto	l5360
  7267  000496                     l5346:
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7271  000496  C0C1  F01C         	movff	sprintf@tmpval,___ftge@ff1
  7272  00049A  C0C2  F01D         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7273  00049E  C0C3  F01E         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7274  0004A2  0E70               	movlw	112
  7275  0004A4  6E1F               	movwf	___ftge@ff2,c
  7276  0004A6  0E89               	movlw	137
  7277  0004A8  6E20               	movwf	___ftge@ff2+1,c
  7278  0004AA  0E40               	movlw	64
  7279  0004AC  6E21               	movwf	___ftge@ff2+2,c
  7280  0004AE  EC5F  F01A         	call	___ftge	;wreg free
  7281  0004B2  B0D8               	btfsc	status,0,c
  7282  0004B4  D003               	goto	l5350
  7283                           
  7284                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7285  0004B6  0100               	movlb	0	; () banked
  7286  0004B8  0EF7               	movlw	247
  7287  0004BA  D002               	goto	L2
  7288  0004BC                     l5350:
  7289                           
  7290                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7291  0004BC  0100               	movlb	0	; () banked
  7292  0004BE  0EF8               	movlw	248
  7293  0004C0                     L2:
  7294  0004C0  27C9               	addwf	sprintf@exp& (0+255),f,b
  7295  0004C2  0EFF               	movlw	255
  7296  0004C4  23CA               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;doprnt.c: 1124: }
  7300                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7301                           
  7302                           ; BSR set to: 0
  7303  0004C6  0100               	movlb	0	; () banked
  7304  0004C8  51C9               	movf	sprintf@exp& (0+255),w,b
  7305  0004CA  ECE5  F009         	call	_scale
  7306  0004CE  C088  F0C1         	movff	?_scale,sprintf@tmpval
  7307  0004D2  C089  F0C2         	movff	?_scale+1,sprintf@tmpval+1
  7308  0004D6  C08A  F0C3         	movff	?_scale+2,sprintf@tmpval+2
  7309                           
  7310                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7311  0004DA  C0CB  F01C         	movff	sprintf@fval,__tdiv_to_l_@f1
  7312  0004DE  C0CC  F01D         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7313  0004E2  C0CD  F01E         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7314  0004E6  C0C1  F01F         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7315  0004EA  C0C2  F020         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7316  0004EE  C0C3  F021         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7317  0004F2  EC93  F014         	call	__tdiv_to_l_	;wreg free
  7318  0004F6  C01C  F0C5         	movff	?__tdiv_to_l_,sprintf@val
  7319  0004FA  C01D  F0C6         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7320  0004FE  C01E  F0C7         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7321  000502  C01F  F0C8         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7322                           
  7323                           ;doprnt.c: 1129: fval = 0.0;
  7324  000506  0E00               	movlw	0
  7325  000508  0100               	movlb	0	; () banked
  7326  00050A  6FCB               	movwf	sprintf@fval& (0+255),b
  7327  00050C  0E00               	movlw	0
  7328  00050E  0100               	movlb	0	; () banked
  7329  000510  6FCC               	movwf	(sprintf@fval+1)& (0+255),b
  7330  000512  0E00               	movlw	0
  7331  000514  0100               	movlb	0	; () banked
  7332  000516  6FCD               	movwf	(sprintf@fval+2)& (0+255),b
  7333                           
  7334                           ;doprnt.c: 1130: } else {
  7335  000518  D033               	goto	l5364
  7336  00051A                     l5360:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7340  00051A  C0CB  F08F         	movff	sprintf@fval,___fttol@f1
  7341  00051E  C0CC  F090         	movff	sprintf@fval+1,___fttol@f1+1
  7342  000522  C0CD  F091         	movff	sprintf@fval+2,___fttol@f1+2
  7343  000526  EC41  F015         	call	___fttol	;wreg free
  7344  00052A  C08F  F0C5         	movff	?___fttol,sprintf@val
  7345  00052E  C090  F0C6         	movff	?___fttol+1,sprintf@val+1
  7346  000532  C091  F0C7         	movff	?___fttol+2,sprintf@val+2
  7347  000536  C092  F0C8         	movff	?___fttol+3,sprintf@val+3
  7348                           
  7349                           ;doprnt.c: 1132: fval -= (double)val;
  7350  00053A  C0CB  F09E         	movff	sprintf@fval,___ftsub@f1
  7351  00053E  C0CC  F09F         	movff	sprintf@fval+1,___ftsub@f1+1
  7352  000542  C0CD  F0A0         	movff	sprintf@fval+2,___ftsub@f1+2
  7353  000546  C0C5  F071         	movff	sprintf@val,___lltoft@c
  7354  00054A  C0C6  F072         	movff	sprintf@val+1,___lltoft@c+1
  7355  00054E  C0C7  F073         	movff	sprintf@val+2,___lltoft@c+2
  7356  000552  C0C8  F074         	movff	sprintf@val+3,___lltoft@c+3
  7357  000556  EC26  F01B         	call	___lltoft	;wreg free
  7358  00055A  C071  F0A1         	movff	?___lltoft,___ftsub@f2
  7359  00055E  C072  F0A2         	movff	?___lltoft+1,___ftsub@f2+1
  7360  000562  C073  F0A3         	movff	?___lltoft+2,___ftsub@f2+2
  7361  000566  EC04  F01C         	call	___ftsub	;wreg free
  7362  00056A  C09E  F0CB         	movff	?___ftsub,sprintf@fval
  7363  00056E  C09F  F0CC         	movff	?___ftsub+1,sprintf@fval+1
  7364  000572  C0A0  F0CD         	movff	?___ftsub+2,sprintf@fval+2
  7365                           
  7366                           ;doprnt.c: 1133: exp = 0;
  7367  000576  0E00               	movlw	0
  7368  000578  0100               	movlb	0	; () banked
  7369  00057A  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  7370  00057C  0E00               	movlw	0
  7371  00057E  6FC9               	movwf	sprintf@exp& (0+255),b
  7372  000580                     l5364:
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;doprnt.c: 1134: }
  7376                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7377  000580  0E01               	movlw	1
  7378  000582  0100               	movlb	0	; () banked
  7379  000584  6FD0               	movwf	sprintf@c& (0+255),b
  7380  000586                     l5366:
  7381                           
  7382                           ; BSR set to: 0
  7383  000586  0E0A               	movlw	10
  7384  000588  0100               	movlb	0	; () banked
  7385  00058A  19D0               	xorwf	sprintf@c& (0+255),w,b
  7386  00058C  B4D8               	btfsc	status,2,c
  7387  00058E  D01E               	goto	l5378
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;doprnt.c: 1137: if(val < dpowers[c])
  7391                           
  7392                           ; BSR set to: 0
  7393                           
  7394                           ; BSR set to: 0
  7395  000590  0100               	movlb	0	; () banked
  7396  000592  51D0               	movf	sprintf@c& (0+255),w,b
  7397  000594  0D04               	mullw	4
  7398  000596  0EF5               	movlw	low _dpowers
  7399  000598  24F3               	addwf	prodl,w,c
  7400  00059A  6EF6               	movwf	tblptrl,c
  7401  00059C  0E7E               	movlw	high _dpowers
  7402  00059E  20F4               	addwfc	prodh,w,c
  7403  0005A0  6EF7               	movwf	tblptrh,c
  7404  0005A2                     	if	0	;There are less than 3 active tblptr bytes
  7405  0005A2                     	endif
  7406  0005A2  0009               	tblrd		*+
  7407  0005A4  50F5               	movf	tablat,w,c
  7408  0005A6  0100               	movlb	0	; () banked
  7409  0005A8  5DC5               	subwf	sprintf@val& (0+255),w,b
  7410  0005AA  0009               	tblrd		*+
  7411  0005AC  50F5               	movf	tablat,w,c
  7412  0005AE  0100               	movlb	0	; () banked
  7413  0005B0  59C6               	subwfb	(sprintf@val+1)& (0+255),w,b
  7414  0005B2  0009               	tblrd		*+
  7415  0005B4  50F5               	movf	tablat,w,c
  7416  0005B6  0100               	movlb	0	; () banked
  7417  0005B8  59C7               	subwfb	(sprintf@val+2)& (0+255),w,b
  7418  0005BA  0009               	tblrd		*+
  7419  0005BC  50F5               	movf	tablat,w,c
  7420  0005BE  0100               	movlb	0	; () banked
  7421  0005C0  59C8               	subwfb	(sprintf@val+3)& (0+255),w,b
  7422  0005C2  A0D8               	btfss	status,0,c
  7423  0005C4  D003               	goto	l5378
  7424                           
  7425                           ; BSR set to: 0
  7426                           
  7427                           ; BSR set to: 0
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;doprnt.c: 1138: break;
  7431  0005C6  0100               	movlb	0	; () banked
  7432  0005C8  2BD0               	incf	sprintf@c& (0+255),f,b
  7433  0005CA  D7DD               	goto	l5366
  7434  0005CC                     l5378:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;doprnt.c: 1142: width -= prec + c + exp;
  7438  0005CC  C0D0  F0B2         	movff	sprintf@c,??_sprintf
  7439  0005D0  0100               	movlb	0	; () banked
  7440  0005D2  6BB3               	clrf	(??_sprintf+1)& (0+255),b
  7441  0005D4  BFB2               	btfsc	??_sprintf& (0+255),7,b
  7442  0005D6  07B3               	decf	(??_sprintf+1)& (0+255),f,b
  7443  0005D8  0100               	movlb	0	; () banked
  7444  0005DA  51CE               	movf	sprintf@prec& (0+255),w,b
  7445  0005DC  0100               	movlb	0	; () banked
  7446  0005DE  27B2               	addwf	??_sprintf& (0+255),f,b
  7447  0005E0  0100               	movlb	0	; () banked
  7448  0005E2  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  7449  0005E4  0100               	movlb	0	; () banked
  7450  0005E6  23B3               	addwfc	(??_sprintf+1)& (0+255),f,b
  7451  0005E8  0100               	movlb	0	; () banked
  7452  0005EA  51C9               	movf	sprintf@exp& (0+255),w,b
  7453  0005EC  0100               	movlb	0	; () banked
  7454  0005EE  27B2               	addwf	??_sprintf& (0+255),f,b
  7455  0005F0  0100               	movlb	0	; () banked
  7456  0005F2  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  7457  0005F4  0100               	movlb	0	; () banked
  7458  0005F6  23B3               	addwfc	(??_sprintf+1)& (0+255),f,b
  7459  0005F8  0100               	movlb	0	; () banked
  7460  0005FA  51B2               	movf	??_sprintf& (0+255),w,b
  7461  0005FC  0100               	movlb	0	; () banked
  7462  0005FE  5FBF               	subwf	sprintf@width& (0+255),f,b
  7463  000600  0100               	movlb	0	; () banked
  7464  000602  51B3               	movf	(??_sprintf+1)& (0+255),w,b
  7465  000604  0100               	movlb	0	; () banked
  7466  000606  5BC0               	subwfb	(sprintf@width+1)& (0+255),f,b
  7467                           
  7468                           ;doprnt.c: 1143: if(
  7469                           ;doprnt.c: 1147: prec)
  7470  000608  0100               	movlb	0	; () banked
  7471  00060A  51CE               	movf	sprintf@prec& (0+255),w,b
  7472  00060C  0100               	movlb	0	; () banked
  7473  00060E  11CF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7474  000610  B4D8               	btfsc	status,2,c
  7475  000612  D004               	goto	l5382
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;doprnt.c: 1148: width--;
  7479  000614  0100               	movlb	0	; () banked
  7480  000616  07BF               	decf	sprintf@width& (0+255),f,b
  7481  000618  A0D8               	btfss	status,0,c
  7482  00061A  07C0               	decf	(sprintf@width+1)& (0+255),f,b
  7483  00061C                     l5382:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;doprnt.c: 1149: if(flag & 0x03)
  7487  00061C  0E03               	movlw	3
  7488  00061E  0100               	movlb	0	; () banked
  7489  000620  15BD               	andwf	sprintf@flag& (0+255),w,b
  7490  000622  0100               	movlb	0	; () banked
  7491  000624  6FB2               	movwf	??_sprintf& (0+255),b
  7492  000626  0E00               	movlw	0
  7493  000628  0100               	movlb	0	; () banked
  7494  00062A  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  7495  00062C  0100               	movlb	0	; () banked
  7496  00062E  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  7497  000630  0100               	movlb	0	; () banked
  7498  000632  51B2               	movf	??_sprintf& (0+255),w,b
  7499  000634  0100               	movlb	0	; () banked
  7500  000636  11B3               	iorwf	(??_sprintf+1)& (0+255),w,b
  7501  000638  B4D8               	btfsc	status,2,c
  7502  00063A  D00E               	goto	l5392
  7503  00063C  D009               	goto	l5390
  7504  00063E                     l5386:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7508  00063E  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7509  000642  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7510  000646  0E20               	movlw	32
  7511  000648  6EDF               	movwf	indf2,c
  7512                           
  7513                           ; BSR set to: 0
  7514  00064A  0100               	movlb	0	; () banked
  7515  00064C  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7516  00064E  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7517  000650                     l5390:
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;doprnt.c: 1182: width--;
  7521  000650  0100               	movlb	0	; () banked
  7522  000652  07BF               	decf	sprintf@width& (0+255),f,b
  7523  000654  A0D8               	btfss	status,0,c
  7524  000656  07C0               	decf	(sprintf@width+1)& (0+255),f,b
  7525  000658                     l5392:
  7526                           
  7527                           ; BSR set to: 0
  7528  000658  0100               	movlb	0	; () banked
  7529  00065A  BFC0               	btfsc	(sprintf@width+1)& (0+255),7,b
  7530  00065C  D007               	goto	l5394
  7531  00065E  0100               	movlb	0	; () banked
  7532  000660  51C0               	movf	(sprintf@width+1)& (0+255),w,b
  7533  000662  E1ED               	bnz	l5386
  7534  000664  0100               	movlb	0	; () banked
  7535  000666  05BF               	decf	sprintf@width& (0+255),w,b
  7536  000668  B0D8               	btfsc	status,0,c
  7537  00066A  D7E9               	goto	l5386
  7538  00066C                     l5394:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;doprnt.c: 1183: }
  7542                           ;doprnt.c: 1188: if(flag & 0x03)
  7543  00066C  0E03               	movlw	3
  7544  00066E  0100               	movlb	0	; () banked
  7545  000670  15BD               	andwf	sprintf@flag& (0+255),w,b
  7546  000672  0100               	movlb	0	; () banked
  7547  000674  6FB2               	movwf	??_sprintf& (0+255),b
  7548  000676  0E00               	movlw	0
  7549  000678  0100               	movlb	0	; () banked
  7550  00067A  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  7551  00067C  0100               	movlb	0	; () banked
  7552  00067E  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  7553  000680  0100               	movlb	0	; () banked
  7554  000682  51B2               	movf	??_sprintf& (0+255),w,b
  7555  000684  0100               	movlb	0	; () banked
  7556  000686  11B3               	iorwf	(??_sprintf+1)& (0+255),w,b
  7557  000688  B4D8               	btfsc	status,2,c
  7558  00068A  D055               	goto	l5408
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7562  00068C  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7563  000690  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7564  000694  0E2D               	movlw	45
  7565  000696  D04D               	goto	L3
  7566  000698                     l5398:
  7567                           
  7568                           ; BSR set to: 0
  7569  000698  0100               	movlb	0	; () banked
  7570  00069A  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7571  00069C  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;doprnt.c: 1195: }
  7575                           ;doprnt.c: 1196: while(c--) {
  7576  00069E  D04B               	goto	l5408
  7577  0006A0                     l5400:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;doprnt.c: 1200: {
  7581                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7582  0006A0  C0C5  F071         	movff	sprintf@val,___lldiv@dividend
  7583  0006A4  C0C6  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7584  0006A8  C0C7  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7585  0006AC  C0C8  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7586  0006B0  0100               	movlb	0	; () banked
  7587  0006B2  51D0               	movf	sprintf@c& (0+255),w,b
  7588  0006B4  0D04               	mullw	4
  7589  0006B6  0EF5               	movlw	low _dpowers
  7590  0006B8  24F3               	addwf	prodl,w,c
  7591  0006BA  6EF6               	movwf	tblptrl,c
  7592  0006BC  0E7E               	movlw	high _dpowers
  7593  0006BE  20F4               	addwfc	prodh,w,c
  7594  0006C0  6EF7               	movwf	tblptrh,c
  7595  0006C2                     	if	0	;There are less than 3 active tblptr bytes
  7596  0006C2                     	endif
  7597  0006C2  0009               	tblrd		*+
  7598  0006C4  CFF5 F075          	movff	tablat,___lldiv@divisor
  7599  0006C8  0009               	tblrd		*+
  7600  0006CA  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7601  0006CE  0009               	tblrd		*+
  7602  0006D0  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7603  0006D4  000A               	tblrd		*-
  7604  0006D6  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7605  0006DA  EC13  F019         	call	___lldiv	;wreg free
  7606  0006DE  C071  F0C1         	movff	?___lldiv,sprintf@tmpval
  7607  0006E2  C072  F0C2         	movff	?___lldiv+1,sprintf@tmpval+1
  7608  0006E6  C073  F0C3         	movff	?___lldiv+2,sprintf@tmpval+2
  7609  0006EA  C074  F0C4         	movff	?___lldiv+3,sprintf@tmpval+3
  7610                           
  7611                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7612  0006EE  C0C1  F079         	movff	sprintf@tmpval,___llmod@dividend
  7613  0006F2  C0C2  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7614  0006F6  C0C3  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7615  0006FA  C0C4  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7616  0006FE  0E0A               	movlw	10
  7617  000700  0100               	movlb	0	; () banked
  7618  000702  6F7D               	movwf	___llmod@divisor& (0+255),b
  7619  000704  0E00               	movlw	0
  7620  000706  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7621  000708  0E00               	movlw	0
  7622  00070A  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7623  00070C  0E00               	movlw	0
  7624  00070E  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7625  000710  EC15  F01A         	call	___llmod	;wreg free
  7626  000714  C079  F0C1         	movff	?___llmod,sprintf@tmpval
  7627  000718  C07A  F0C2         	movff	?___llmod+1,sprintf@tmpval+1
  7628  00071C  C07B  F0C3         	movff	?___llmod+2,sprintf@tmpval+2
  7629  000720  C07C  F0C4         	movff	?___llmod+3,sprintf@tmpval+3
  7630                           
  7631                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7632  000724  0100               	movlb	0	; () banked
  7633  000726  51C1               	movf	sprintf@tmpval& (0+255),w,b
  7634  000728  0F30               	addlw	48
  7635  00072A  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7636  00072E  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7637  000732                     L3:
  7638  000732  6EDF               	movwf	indf2,c
  7639  000734  D7B1               	goto	l5398
  7640  000736                     l5408:
  7641                           
  7642                           ; BSR set to: 0
  7643  000736  0100               	movlb	0	; () banked
  7644  000738  07D0               	decf	sprintf@c& (0+255),f,b
  7645  00073A  0100               	movlb	0	; () banked
  7646  00073C  29D0               	incf	sprintf@c& (0+255),w,b
  7647  00073E  B4D8               	btfsc	status,2,c
  7648  000740  D00E               	goto	l5416
  7649  000742  D7AE               	goto	l5400
  7650  000744                     l5410:
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7654  000744  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7655  000748  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7656  00074C  0E30               	movlw	48
  7657  00074E  6EDF               	movwf	indf2,c
  7658                           
  7659                           ; BSR set to: 0
  7660  000750  0100               	movlb	0	; () banked
  7661  000752  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7662  000754  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;doprnt.c: 1209: exp--;
  7666  000756  0100               	movlb	0	; () banked
  7667  000758  07C9               	decf	sprintf@exp& (0+255),f,b
  7668  00075A  A0D8               	btfss	status,0,c
  7669  00075C  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  7670  00075E                     l5416:
  7671                           
  7672                           ; BSR set to: 0
  7673  00075E  0100               	movlb	0	; () banked
  7674  000760  BFCA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7675  000762  D007               	goto	l5418
  7676  000764  0100               	movlb	0	; () banked
  7677  000766  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  7678  000768  E1ED               	bnz	l5410
  7679  00076A  0100               	movlb	0	; () banked
  7680  00076C  05C9               	decf	sprintf@exp& (0+255),w,b
  7681  00076E  B0D8               	btfsc	status,0,c
  7682  000770  D7E9               	goto	l5410
  7683  000772                     l5418:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;doprnt.c: 1210: }
  7687                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7688  000772  0100               	movlb	0	; () banked
  7689  000774  BFCF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7690  000776  D00C               	goto	l567
  7691  000778  0100               	movlb	0	; () banked
  7692  00077A  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  7693  00077C  E105               	bnz	u5800
  7694  00077E  0E09               	movlw	9
  7695  000780  0100               	movlb	0	; () banked
  7696  000782  5DCE               	subwf	sprintf@prec& (0+255),w,b
  7697  000784  A0D8               	btfss	status,0,c
  7698  000786  D004               	goto	l567
  7699  000788                     u5800:
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7703  000788  0E08               	movlw	8
  7704  00078A  0100               	movlb	0	; () banked
  7705  00078C  6FD0               	movwf	sprintf@c& (0+255),b
  7706  00078E  D002               	goto	l5422
  7707  000790                     l567:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;doprnt.c: 1213: else
  7711                           ;doprnt.c: 1214: c = prec;
  7712  000790  C0CE  F0D0         	movff	sprintf@prec,sprintf@c
  7713  000794                     l5422:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;doprnt.c: 1215: prec -= c;
  7717  000794  0100               	movlb	0	; () banked
  7718  000796  51D0               	movf	sprintf@c& (0+255),w,b
  7719  000798  0100               	movlb	0	; () banked
  7720  00079A  5FCE               	subwf	sprintf@prec& (0+255),f,b
  7721  00079C  0E00               	movlw	0
  7722  00079E  0100               	movlb	0	; () banked
  7723  0007A0  BFD0               	btfsc	sprintf@c& (0+255),7,b
  7724  0007A2  0EFF               	movlw	255
  7725  0007A4  0100               	movlb	0	; () banked
  7726  0007A6  5BCF               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;doprnt.c: 1219: if(c)
  7730  0007A8  0100               	movlb	0	; () banked
  7731  0007AA  51D0               	movf	sprintf@c& (0+255),w,b
  7732  0007AC  0100               	movlb	0	; () banked
  7733  0007AE  B4D8               	btfsc	status,2,c
  7734  0007B0  D009               	goto	l5430
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7738  0007B2  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7739  0007B6  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7740  0007BA  0E2E               	movlw	46
  7741  0007BC  6EDF               	movwf	indf2,c
  7742                           
  7743                           ; BSR set to: 0
  7744  0007BE  0100               	movlb	0	; () banked
  7745  0007C0  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7746  0007C2  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7747  0007C4                     l5430:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7751  0007C4  0100               	movlb	0	; () banked
  7752  0007C6  51D0               	movf	sprintf@c& (0+255),w,b
  7753  0007C8  ECE5  F009         	call	_scale
  7754  0007CC  C088  F0B8         	movff	?_scale,_sprintf$2792
  7755  0007D0  C089  F0B9         	movff	?_scale+1,_sprintf$2792+1
  7756  0007D4  C08A  F0BA         	movff	?_scale+2,_sprintf$2792+2
  7757                           
  7758                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7759  0007D8  C0CB  F07C         	movff	sprintf@fval,___ftmul@f2
  7760  0007DC  C0CC  F07D         	movff	sprintf@fval+1,___ftmul@f2+1
  7761  0007E0  C0CD  F07E         	movff	sprintf@fval+2,___ftmul@f2+2
  7762  0007E4  C0B8  F079         	movff	_sprintf$2792,___ftmul@f1
  7763  0007E8  C0B9  F07A         	movff	_sprintf$2792+1,___ftmul@f1+1
  7764  0007EC  C0BA  F07B         	movff	_sprintf$2792+2,___ftmul@f1+2
  7765  0007F0  ECE4  F013         	call	___ftmul	;wreg free
  7766  0007F4  C079  F08F         	movff	?___ftmul,___fttol@f1
  7767  0007F8  C07A  F090         	movff	?___ftmul+1,___fttol@f1+1
  7768  0007FC  C07B  F091         	movff	?___ftmul+2,___fttol@f1+2
  7769  000800  EC41  F015         	call	___fttol	;wreg free
  7770  000804  C08F  F0C5         	movff	?___fttol,sprintf@val
  7771  000808  C090  F0C6         	movff	?___fttol+1,sprintf@val+1
  7772  00080C  C091  F0C7         	movff	?___fttol+2,sprintf@val+2
  7773  000810  C092  F0C8         	movff	?___fttol+3,sprintf@val+3
  7774                           
  7775                           ;doprnt.c: 1228: while(c--) {
  7776  000814  D074               	goto	l5444
  7777  000816                     l5434:
  7778                           
  7779                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7780  000816  C0C5  F071         	movff	sprintf@val,___lldiv@dividend
  7781  00081A  C0C6  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7782  00081E  C0C7  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7783  000822  C0C8  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7784  000826  0100               	movlb	0	; () banked
  7785  000828  51D0               	movf	sprintf@c& (0+255),w,b
  7786  00082A  0D04               	mullw	4
  7787  00082C  0EF5               	movlw	low _dpowers
  7788  00082E  24F3               	addwf	prodl,w,c
  7789  000830  6EF6               	movwf	tblptrl,c
  7790  000832  0E7E               	movlw	high _dpowers
  7791  000834  20F4               	addwfc	prodh,w,c
  7792  000836  6EF7               	movwf	tblptrh,c
  7793  000838                     	if	0	;There are less than 3 active tblptr bytes
  7794  000838                     	endif
  7795  000838  0009               	tblrd		*+
  7796  00083A  CFF5 F075          	movff	tablat,___lldiv@divisor
  7797  00083E  0009               	tblrd		*+
  7798  000840  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7799  000844  0009               	tblrd		*+
  7800  000846  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7801  00084A  000A               	tblrd		*-
  7802  00084C  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7803  000850  EC13  F019         	call	___lldiv	;wreg free
  7804  000854  C071  F0C1         	movff	?___lldiv,sprintf@tmpval
  7805  000858  C072  F0C2         	movff	?___lldiv+1,sprintf@tmpval+1
  7806  00085C  C073  F0C3         	movff	?___lldiv+2,sprintf@tmpval+2
  7807  000860  C074  F0C4         	movff	?___lldiv+3,sprintf@tmpval+3
  7808                           
  7809                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7810  000864  C0C1  F079         	movff	sprintf@tmpval,___llmod@dividend
  7811  000868  C0C2  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7812  00086C  C0C3  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7813  000870  C0C4  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7814  000874  0E0A               	movlw	10
  7815  000876  0100               	movlb	0	; () banked
  7816  000878  6F7D               	movwf	___llmod@divisor& (0+255),b
  7817  00087A  0E00               	movlw	0
  7818  00087C  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7819  00087E  0E00               	movlw	0
  7820  000880  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7821  000882  0E00               	movlw	0
  7822  000884  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7823  000886  EC15  F01A         	call	___llmod	;wreg free
  7824  00088A  C079  F0C1         	movff	?___llmod,sprintf@tmpval
  7825  00088E  C07A  F0C2         	movff	?___llmod+1,sprintf@tmpval+1
  7826  000892  C07B  F0C3         	movff	?___llmod+2,sprintf@tmpval+2
  7827  000896  C07C  F0C4         	movff	?___llmod+3,sprintf@tmpval+3
  7828                           
  7829                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7830  00089A  0100               	movlb	0	; () banked
  7831  00089C  51C1               	movf	sprintf@tmpval& (0+255),w,b
  7832  00089E  0F30               	addlw	48
  7833  0008A0  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7834  0008A4  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7835  0008A8  6EDF               	movwf	indf2,c
  7836                           
  7837                           ; BSR set to: 0
  7838  0008AA  0100               	movlb	0	; () banked
  7839  0008AC  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7840  0008AE  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;doprnt.c: 1232: val %= dpowers[c];
  7844  0008B0  C0C5  F079         	movff	sprintf@val,___llmod@dividend
  7845  0008B4  C0C6  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7846  0008B8  C0C7  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7847  0008BC  C0C8  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7848  0008C0  0100               	movlb	0	; () banked
  7849  0008C2  51D0               	movf	sprintf@c& (0+255),w,b
  7850  0008C4  0D04               	mullw	4
  7851  0008C6  0EF5               	movlw	low _dpowers
  7852  0008C8  24F3               	addwf	prodl,w,c
  7853  0008CA  6EF6               	movwf	tblptrl,c
  7854  0008CC  0E7E               	movlw	high _dpowers
  7855  0008CE  20F4               	addwfc	prodh,w,c
  7856  0008D0  6EF7               	movwf	tblptrh,c
  7857  0008D2                     	if	0	;There are less than 3 active tblptr bytes
  7858  0008D2                     	endif
  7859  0008D2  0009               	tblrd		*+
  7860  0008D4  CFF5 F07D          	movff	tablat,___llmod@divisor
  7861  0008D8  0009               	tblrd		*+
  7862  0008DA  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7863  0008DE  0009               	tblrd		*+
  7864  0008E0  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7865  0008E4  000A               	tblrd		*-
  7866  0008E6  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7867  0008EA  EC15  F01A         	call	___llmod	;wreg free
  7868  0008EE  C079  F0C5         	movff	?___llmod,sprintf@val
  7869  0008F2  C07A  F0C6         	movff	?___llmod+1,sprintf@val+1
  7870  0008F6  C07B  F0C7         	movff	?___llmod+2,sprintf@val+2
  7871  0008FA  C07C  F0C8         	movff	?___llmod+3,sprintf@val+3
  7872  0008FE                     l5444:
  7873  0008FE  0100               	movlb	0	; () banked
  7874  000900  07D0               	decf	sprintf@c& (0+255),f,b
  7875  000902  0100               	movlb	0	; () banked
  7876  000904  29D0               	incf	sprintf@c& (0+255),w,b
  7877  000906  B4D8               	btfsc	status,2,c
  7878  000908  D00E               	goto	l5452
  7879  00090A  D785               	goto	l5434
  7880  00090C                     l5446:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7884  00090C  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  7885  000910  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  7886  000914  0E30               	movlw	48
  7887  000916  6EDF               	movwf	indf2,c
  7888                           
  7889                           ; BSR set to: 0
  7890  000918  0100               	movlb	0	; () banked
  7891  00091A  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  7892  00091C  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;doprnt.c: 1237: prec--;
  7896  00091E  0100               	movlb	0	; () banked
  7897  000920  07CE               	decf	sprintf@prec& (0+255),f,b
  7898  000922  A0D8               	btfss	status,0,c
  7899  000924  07CF               	decf	(sprintf@prec+1)& (0+255),f,b
  7900  000926                     l5452:
  7901                           
  7902                           ; BSR set to: 0
  7903  000926  0100               	movlb	0	; () banked
  7904  000928  51CE               	movf	sprintf@prec& (0+255),w,b
  7905  00092A  0100               	movlb	0	; () banked
  7906  00092C  11CF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7907  00092E  B4D8               	btfsc	status,2,c
  7908  000930  D169               	goto	l5534
  7909  000932  D7EC               	goto	l5446
  7910  000934                     l5454:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;doprnt.c: 1246: }
  7914                           ;doprnt.c: 1253: {
  7915                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7916  000934  C0BB  FFD9         	movff	sprintf@ap,fsr2l
  7917  000938  C0BC  FFDA         	movff	sprintf@ap+1,fsr2h
  7918  00093C  CFDE F0C5          	movff	postinc2,sprintf@val
  7919  000940  CFDD F0C6          	movff	postdec2,sprintf@val+1
  7920  000944  0100               	movlb	0	; () banked
  7921  000946  0E00               	movlw	0
  7922  000948  BFC6               	btfsc	(sprintf@val+1)& (0+255),7,b
  7923  00094A  0EFF               	movlw	-1
  7924  00094C  6FC7               	movwf	(sprintf@val+2)& (0+255),b
  7925  00094E  6FC8               	movwf	(sprintf@val+3)& (0+255),b
  7926                           
  7927                           ; BSR set to: 0
  7928  000950  0E02               	movlw	2
  7929  000952  0100               	movlb	0	; () banked
  7930  000954  27BB               	addwf	sprintf@ap& (0+255),f,b
  7931  000956  0E00               	movlw	0
  7932  000958  23BC               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;doprnt.c: 1261: if((long)val < 0) {
  7936  00095A  0100               	movlb	0	; () banked
  7937  00095C  AFC8               	btfss	(sprintf@val+3)& (0+255),7,b
  7938  00095E  D00C               	goto	l5464
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;doprnt.c: 1262: flag |= 0x03;
  7942  000960  0E03               	movlw	3
  7943  000962  0100               	movlb	0	; () banked
  7944  000964  13BD               	iorwf	sprintf@flag& (0+255),f,b
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;doprnt.c: 1263: val = -val;
  7948  000966  0100               	movlb	0	; () banked
  7949  000968  1FC8               	comf	(sprintf@val+3)& (0+255),f,b
  7950  00096A  1FC7               	comf	(sprintf@val+2)& (0+255),f,b
  7951  00096C  1FC6               	comf	(sprintf@val+1)& (0+255),f,b
  7952  00096E  6DC5               	negf	sprintf@val& (0+255),b
  7953  000970  0E00               	movlw	0
  7954  000972  23C6               	addwfc	(sprintf@val+1)& (0+255),f,b
  7955  000974  23C7               	addwfc	(sprintf@val+2)& (0+255),f,b
  7956  000976  23C8               	addwfc	(sprintf@val+3)& (0+255),f,b
  7957  000978                     l5464:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;doprnt.c: 1264: }
  7961                           ;doprnt.c: 1266: }
  7962                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7963  000978  0100               	movlb	0	; () banked
  7964  00097A  51CE               	movf	sprintf@prec& (0+255),w,b
  7965  00097C  0100               	movlb	0	; () banked
  7966  00097E  11CF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7967  000980  A4D8               	btfss	status,2,c
  7968  000982  D00D               	goto	l5470
  7969                           
  7970                           ; BSR set to: 0
  7971  000984  0100               	movlb	0	; () banked
  7972  000986  51C5               	movf	sprintf@val& (0+255),w,b
  7973  000988  0100               	movlb	0	; () banked
  7974  00098A  11C6               	iorwf	(sprintf@val+1)& (0+255),w,b
  7975  00098C  0100               	movlb	0	; () banked
  7976  00098E  11C7               	iorwf	(sprintf@val+2)& (0+255),w,b
  7977  000990  0100               	movlb	0	; () banked
  7978  000992  11C8               	iorwf	(sprintf@val+3)& (0+255),w,b
  7979  000994  A4D8               	btfss	status,2,c
  7980  000996  D003               	goto	l5470
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;doprnt.c: 1291: prec++;
  7984  000998  0100               	movlb	0	; () banked
  7985  00099A  4BCE               	infsnz	sprintf@prec& (0+255),f,b
  7986  00099C  2BCF               	incf	(sprintf@prec+1)& (0+255),f,b
  7987  00099E                     l5470:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7991  00099E  0E01               	movlw	1
  7992  0009A0  0100               	movlb	0	; () banked
  7993  0009A2  6FD0               	movwf	sprintf@c& (0+255),b
  7994  0009A4                     l5472:
  7995                           
  7996                           ; BSR set to: 0
  7997  0009A4  0E0A               	movlw	10
  7998  0009A6  0100               	movlb	0	; () banked
  7999  0009A8  19D0               	xorwf	sprintf@c& (0+255),w,b
  8000  0009AA  B4D8               	btfsc	status,2,c
  8001  0009AC  D01E               	goto	l5484
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;doprnt.c: 1306: if(val < dpowers[c])
  8005                           
  8006                           ; BSR set to: 0
  8007                           
  8008                           ; BSR set to: 0
  8009  0009AE  0100               	movlb	0	; () banked
  8010  0009B0  51D0               	movf	sprintf@c& (0+255),w,b
  8011  0009B2  0D04               	mullw	4
  8012  0009B4  0EF5               	movlw	low _dpowers
  8013  0009B6  24F3               	addwf	prodl,w,c
  8014  0009B8  6EF6               	movwf	tblptrl,c
  8015  0009BA  0E7E               	movlw	high _dpowers
  8016  0009BC  20F4               	addwfc	prodh,w,c
  8017  0009BE  6EF7               	movwf	tblptrh,c
  8018  0009C0                     	if	0	;There are less than 3 active tblptr bytes
  8019  0009C0                     	endif
  8020  0009C0  0009               	tblrd		*+
  8021  0009C2  50F5               	movf	tablat,w,c
  8022  0009C4  0100               	movlb	0	; () banked
  8023  0009C6  5DC5               	subwf	sprintf@val& (0+255),w,b
  8024  0009C8  0009               	tblrd		*+
  8025  0009CA  50F5               	movf	tablat,w,c
  8026  0009CC  0100               	movlb	0	; () banked
  8027  0009CE  59C6               	subwfb	(sprintf@val+1)& (0+255),w,b
  8028  0009D0  0009               	tblrd		*+
  8029  0009D2  50F5               	movf	tablat,w,c
  8030  0009D4  0100               	movlb	0	; () banked
  8031  0009D6  59C7               	subwfb	(sprintf@val+2)& (0+255),w,b
  8032  0009D8  0009               	tblrd		*+
  8033  0009DA  50F5               	movf	tablat,w,c
  8034  0009DC  0100               	movlb	0	; () banked
  8035  0009DE  59C8               	subwfb	(sprintf@val+3)& (0+255),w,b
  8036  0009E0  A0D8               	btfss	status,0,c
  8037  0009E2  D003               	goto	l5484
  8038                           
  8039                           ; BSR set to: 0
  8040                           
  8041                           ; BSR set to: 0
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;doprnt.c: 1307: break;
  8045  0009E4  0100               	movlb	0	; () banked
  8046  0009E6  2BD0               	incf	sprintf@c& (0+255),f,b
  8047  0009E8  D7DD               	goto	l5472
  8048  0009EA                     l5484:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;doprnt.c: 1339: if(c < prec)
  8052  0009EA  0E80               	movlw	128
  8053  0009EC  0100               	movlb	0	; () banked
  8054  0009EE  BFD0               	btfsc	sprintf@c& (0+255),7,b
  8055  0009F0  0E7F               	movlw	127
  8056  0009F2  0100               	movlb	0	; () banked
  8057  0009F4  6FB2               	movwf	??_sprintf& (0+255),b
  8058  0009F6  0100               	movlb	0	; () banked
  8059  0009F8  51CE               	movf	sprintf@prec& (0+255),w,b
  8060  0009FA  0100               	movlb	0	; () banked
  8061  0009FC  5DD0               	subwf	sprintf@c& (0+255),w,b
  8062  0009FE  0100               	movlb	0	; () banked
  8063  000A00  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  8064  000A02  0A80               	xorlw	128
  8065  000A04  0100               	movlb	0	; () banked
  8066  000A06  59B2               	subwfb	??_sprintf& (0+255),w,b
  8067  000A08  B0D8               	btfsc	status,0,c
  8068  000A0A  D003               	goto	l5488
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;doprnt.c: 1340: c = prec;
  8072  000A0C  C0CE  F0D0         	movff	sprintf@prec,sprintf@c
  8073  000A10  D018               	goto	l5492
  8074  000A12                     l5488:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;doprnt.c: 1341: else if(prec < c)
  8078  000A12  0100               	movlb	0	; () banked
  8079  000A14  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  8080  000A16  0A80               	xorlw	128
  8081  000A18  0100               	movlb	0	; () banked
  8082  000A1A  6FB2               	movwf	??_sprintf& (0+255),b
  8083  000A1C  0100               	movlb	0	; () banked
  8084  000A1E  51D0               	movf	sprintf@c& (0+255),w,b
  8085  000A20  0100               	movlb	0	; () banked
  8086  000A22  5DCE               	subwf	sprintf@prec& (0+255),w,b
  8087  000A24  0E80               	movlw	128
  8088  000A26  0100               	movlb	0	; () banked
  8089  000A28  BFD0               	btfsc	sprintf@c& (0+255),7,b
  8090  000A2A  0E7F               	movlw	127
  8091  000A2C  0100               	movlb	0	; () banked
  8092  000A2E  59B2               	subwfb	??_sprintf& (0+255),w,b
  8093  000A30  B0D8               	btfsc	status,0,c
  8094  000A32  D007               	goto	l5492
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;doprnt.c: 1342: prec = c;
  8098  000A34  0100               	movlb	0	; () banked
  8099  000A36  51D0               	movf	sprintf@c& (0+255),w,b
  8100  000A38  0100               	movlb	0	; () banked
  8101  000A3A  6FCE               	movwf	sprintf@prec& (0+255),b
  8102  000A3C  6BCF               	clrf	(sprintf@prec+1)& (0+255),b
  8103  000A3E  BFCE               	btfsc	sprintf@prec& (0+255),7,b
  8104  000A40  07CF               	decf	(sprintf@prec+1)& (0+255),f,b
  8105  000A42                     l5492:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8109  000A42  0100               	movlb	0	; () banked
  8110  000A44  51BF               	movf	sprintf@width& (0+255),w,b
  8111  000A46  0100               	movlb	0	; () banked
  8112  000A48  11C0               	iorwf	(sprintf@width+1)& (0+255),w,b
  8113  000A4A  B4D8               	btfsc	status,2,c
  8114  000A4C  D014               	goto	l5498
  8115                           
  8116                           ; BSR set to: 0
  8117  000A4E  0E03               	movlw	3
  8118  000A50  0100               	movlb	0	; () banked
  8119  000A52  15BD               	andwf	sprintf@flag& (0+255),w,b
  8120  000A54  0100               	movlb	0	; () banked
  8121  000A56  6FB2               	movwf	??_sprintf& (0+255),b
  8122  000A58  0E00               	movlw	0
  8123  000A5A  0100               	movlb	0	; () banked
  8124  000A5C  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  8125  000A5E  0100               	movlb	0	; () banked
  8126  000A60  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  8127  000A62  0100               	movlb	0	; () banked
  8128  000A64  51B2               	movf	??_sprintf& (0+255),w,b
  8129  000A66  0100               	movlb	0	; () banked
  8130  000A68  11B3               	iorwf	(??_sprintf+1)& (0+255),w,b
  8131  000A6A  B4D8               	btfsc	status,2,c
  8132  000A6C  D004               	goto	l5498
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;doprnt.c: 1346: width--;
  8136  000A6E  0100               	movlb	0	; () banked
  8137  000A70  07BF               	decf	sprintf@width& (0+255),f,b
  8138  000A72  A0D8               	btfss	status,0,c
  8139  000A74  07C0               	decf	(sprintf@width+1)& (0+255),f,b
  8140  000A76                     l5498:
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8144  000A76  0100               	movlb	0	; () banked
  8145  000A78  ADBE               	btfss	(sprintf@flag+1)& (0+255),6,b
  8146  000A7A  D01E               	goto	l5506
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;doprnt.c: 1349: if(width > prec)
  8150  000A7C  0100               	movlb	0	; () banked
  8151  000A7E  51BF               	movf	sprintf@width& (0+255),w,b
  8152  000A80  0100               	movlb	0	; () banked
  8153  000A82  5DCE               	subwf	sprintf@prec& (0+255),w,b
  8154  000A84  0100               	movlb	0	; () banked
  8155  000A86  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  8156  000A88  0A80               	xorlw	128
  8157  000A8A  0100               	movlb	0	; () banked
  8158  000A8C  6FB2               	movwf	??_sprintf& (0+255),b
  8159  000A8E  0100               	movlb	0	; () banked
  8160  000A90  51C0               	movf	(sprintf@width+1)& (0+255),w,b
  8161  000A92  0A80               	xorlw	128
  8162  000A94  0100               	movlb	0	; () banked
  8163  000A96  59B2               	subwfb	??_sprintf& (0+255),w,b
  8164  000A98  B0D8               	btfsc	status,0,c
  8165  000A9A  D009               	goto	l5504
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;doprnt.c: 1350: width -= prec;
  8169  000A9C  0100               	movlb	0	; () banked
  8170  000A9E  51CE               	movf	sprintf@prec& (0+255),w,b
  8171  000AA0  0100               	movlb	0	; () banked
  8172  000AA2  5FBF               	subwf	sprintf@width& (0+255),f,b
  8173  000AA4  0100               	movlb	0	; () banked
  8174  000AA6  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  8175  000AA8  0100               	movlb	0	; () banked
  8176  000AAA  5BC0               	subwfb	(sprintf@width+1)& (0+255),f,b
  8177  000AAC  D005               	goto	l5506
  8178  000AAE                     l5504:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;doprnt.c: 1351: else
  8182                           ;doprnt.c: 1352: width = 0;
  8183  000AAE  0E00               	movlw	0
  8184  000AB0  0100               	movlb	0	; () banked
  8185  000AB2  6FC0               	movwf	(sprintf@width+1)& (0+255),b
  8186  000AB4  0E00               	movlw	0
  8187  000AB6  6FBF               	movwf	sprintf@width& (0+255),b
  8188  000AB8                     l5506:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;doprnt.c: 1353: }
  8192                           ;doprnt.c: 1381: if(width > c)
  8193  000AB8  0E80               	movlw	128
  8194  000ABA  0100               	movlb	0	; () banked
  8195  000ABC  BFD0               	btfsc	sprintf@c& (0+255),7,b
  8196  000ABE  0E7F               	movlw	127
  8197  000AC0  0100               	movlb	0	; () banked
  8198  000AC2  6FB2               	movwf	??_sprintf& (0+255),b
  8199  000AC4  0100               	movlb	0	; () banked
  8200  000AC6  51BF               	movf	sprintf@width& (0+255),w,b
  8201  000AC8  0100               	movlb	0	; () banked
  8202  000ACA  5DD0               	subwf	sprintf@c& (0+255),w,b
  8203  000ACC  0100               	movlb	0	; () banked
  8204  000ACE  51C0               	movf	(sprintf@width+1)& (0+255),w,b
  8205  000AD0  0A80               	xorlw	128
  8206  000AD2  0100               	movlb	0	; () banked
  8207  000AD4  59B2               	subwfb	??_sprintf& (0+255),w,b
  8208  000AD6  B0D8               	btfsc	status,0,c
  8209  000AD8  D00B               	goto	l5510
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;doprnt.c: 1382: width -= c;
  8213  000ADA  0100               	movlb	0	; () banked
  8214  000ADC  51D0               	movf	sprintf@c& (0+255),w,b
  8215  000ADE  0100               	movlb	0	; () banked
  8216  000AE0  5FBF               	subwf	sprintf@width& (0+255),f,b
  8217  000AE2  0E00               	movlw	0
  8218  000AE4  0100               	movlb	0	; () banked
  8219  000AE6  BFD0               	btfsc	sprintf@c& (0+255),7,b
  8220  000AE8  0EFF               	movlw	255
  8221  000AEA  0100               	movlb	0	; () banked
  8222  000AEC  5BC0               	subwfb	(sprintf@width+1)& (0+255),f,b
  8223  000AEE  D005               	goto	l5512
  8224  000AF0                     l5510:
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;doprnt.c: 1383: else
  8228                           ;doprnt.c: 1384: width = 0;
  8229  000AF0  0E00               	movlw	0
  8230  000AF2  0100               	movlb	0	; () banked
  8231  000AF4  6FC0               	movwf	(sprintf@width+1)& (0+255),b
  8232  000AF6  0E00               	movlw	0
  8233  000AF8  6FBF               	movwf	sprintf@width& (0+255),b
  8234  000AFA                     l5512:
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;doprnt.c: 1422: {
  8238                           ;doprnt.c: 1424: if(width
  8239                           ;doprnt.c: 1428: )
  8240  000AFA  0100               	movlb	0	; () banked
  8241  000AFC  51BF               	movf	sprintf@width& (0+255),w,b
  8242  000AFE  0100               	movlb	0	; () banked
  8243  000B00  11C0               	iorwf	(sprintf@width+1)& (0+255),w,b
  8244  000B02  B4D8               	btfsc	status,2,c
  8245  000B04  D013               	goto	l5520
  8246  000B06                     l5514:
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8250  000B06  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  8251  000B0A  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  8252  000B0E  0E20               	movlw	32
  8253  000B10  6EDF               	movwf	indf2,c
  8254                           
  8255                           ; BSR set to: 0
  8256  000B12  0100               	movlb	0	; () banked
  8257  000B14  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  8258  000B16  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;doprnt.c: 1431: while(--width);
  8262  000B18  0100               	movlb	0	; () banked
  8263  000B1A  07BF               	decf	sprintf@width& (0+255),f,b
  8264  000B1C  A0D8               	btfss	status,0,c
  8265  000B1E  07C0               	decf	(sprintf@width+1)& (0+255),f,b
  8266  000B20  0100               	movlb	0	; () banked
  8267  000B22  51BF               	movf	sprintf@width& (0+255),w,b
  8268  000B24  0100               	movlb	0	; () banked
  8269  000B26  11C0               	iorwf	(sprintf@width+1)& (0+255),w,b
  8270  000B28  A4D8               	btfss	status,2,c
  8271  000B2A  D7ED               	goto	l5514
  8272  000B2C                     l5520:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;doprnt.c: 1438: if(flag & 0x03)
  8276  000B2C  0E03               	movlw	3
  8277  000B2E  0100               	movlb	0	; () banked
  8278  000B30  15BD               	andwf	sprintf@flag& (0+255),w,b
  8279  000B32  0100               	movlb	0	; () banked
  8280  000B34  6FB2               	movwf	??_sprintf& (0+255),b
  8281  000B36  0E00               	movlw	0
  8282  000B38  0100               	movlb	0	; () banked
  8283  000B3A  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  8284  000B3C  0100               	movlb	0	; () banked
  8285  000B3E  6FB3               	movwf	(??_sprintf+1)& (0+255),b
  8286  000B40  0100               	movlb	0	; () banked
  8287  000B42  51B2               	movf	??_sprintf& (0+255),w,b
  8288  000B44  0100               	movlb	0	; () banked
  8289  000B46  11B3               	iorwf	(??_sprintf+1)& (0+255),w,b
  8290  000B48  B4D8               	btfsc	status,2,c
  8291  000B4A  D051               	goto	l5532
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8295  000B4C  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  8296  000B50  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  8297  000B54  0E2D               	movlw	45
  8298  000B56  6EDF               	movwf	indf2,c
  8299  000B58  D047               	goto	l5530
  8300  000B5A                     l5526:
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;doprnt.c: 1478: {
  8304                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8305  000B5A  C0CE  F0B2         	movff	sprintf@prec,??_sprintf
  8306  000B5E  C0CF  F0B3         	movff	sprintf@prec+1,??_sprintf+1
  8307  000B62  0100               	movlb	0	; () banked
  8308  000B64  90D8               	bcf	status,0,c
  8309  000B66  37B2               	rlcf	??_sprintf& (0+255),f,b
  8310  000B68  37B3               	rlcf	(??_sprintf+1)& (0+255),f,b
  8311  000B6A  0100               	movlb	0	; () banked
  8312  000B6C  90D8               	bcf	status,0,c
  8313  000B6E  37B2               	rlcf	??_sprintf& (0+255),f,b
  8314  000B70  37B3               	rlcf	(??_sprintf+1)& (0+255),f,b
  8315  000B72  0EF5               	movlw	low _dpowers
  8316  000B74  0100               	movlb	0	; () banked
  8317  000B76  25B2               	addwf	??_sprintf& (0+255),w,b
  8318  000B78  6EF6               	movwf	tblptrl,c
  8319  000B7A  0E7E               	movlw	high _dpowers
  8320  000B7C  21B3               	addwfc	(??_sprintf+1)& (0+255),w,b
  8321  000B7E  6EF7               	movwf	tblptrh,c
  8322  000B80                     	if	0	;There are less than 3 active tblptr bytes
  8323  000B80                     	endif
  8324  000B80  0009               	tblrd		*+
  8325  000B82  CFF5 F075          	movff	tablat,___lldiv@divisor
  8326  000B86  0009               	tblrd		*+
  8327  000B88  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8328  000B8C  0009               	tblrd		*+
  8329  000B8E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8330  000B92  000A               	tblrd		*-
  8331  000B94  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8332  000B98  C0C5  F071         	movff	sprintf@val,___lldiv@dividend
  8333  000B9C  C0C6  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8334  000BA0  C0C7  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8335  000BA4  C0C8  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8336  000BA8  EC13  F019         	call	___lldiv	;wreg free
  8337  000BAC  C071  F079         	movff	?___lldiv,___llmod@dividend
  8338  000BB0  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8339  000BB4  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8340  000BB8  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8341  000BBC  0E0A               	movlw	10
  8342  000BBE  0100               	movlb	0	; () banked
  8343  000BC0  6F7D               	movwf	___llmod@divisor& (0+255),b
  8344  000BC2  0E00               	movlw	0
  8345  000BC4  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8346  000BC6  0E00               	movlw	0
  8347  000BC8  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8348  000BCA  0E00               	movlw	0
  8349  000BCC  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8350  000BCE  EC15  F01A         	call	___llmod	;wreg free
  8351  000BD2  0100               	movlb	0	; () banked
  8352  000BD4  5179               	movf	?___llmod& (0+255),w,b
  8353  000BD6  0F30               	addlw	48
  8354  000BD8  0100               	movlb	0	; () banked
  8355  000BDA  6FD0               	movwf	sprintf@c& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;doprnt.c: 1523: }
  8359                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8360  000BDC  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  8361  000BE0  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  8362  000BE4  C0D0  FFDF         	movff	sprintf@c,indf2
  8363  000BE8                     l5530:
  8364                           
  8365                           ; BSR set to: 0
  8366  000BE8  0100               	movlb	0	; () banked
  8367  000BEA  4BA4               	infsnz	sprintf@sp& (0+255),f,b
  8368  000BEC  2BA5               	incf	(sprintf@sp+1)& (0+255),f,b
  8369  000BEE                     l5532:
  8370                           
  8371                           ; BSR set to: 0
  8372  000BEE  0100               	movlb	0	; () banked
  8373  000BF0  07CE               	decf	sprintf@prec& (0+255),f,b
  8374  000BF2  A0D8               	btfss	status,0,c
  8375  000BF4  07CF               	decf	(sprintf@prec+1)& (0+255),f,b
  8376  000BF6  0100               	movlb	0	; () banked
  8377  000BF8  29CE               	incf	sprintf@prec& (0+255),w,b
  8378  000BFA  E1AF               	bnz	l5526
  8379  000BFC  0100               	movlb	0	; () banked
  8380  000BFE  29CF               	incf	(sprintf@prec+1)& (0+255),w,b
  8381  000C00  A4D8               	btfss	status,2,c
  8382  000C02  D7AB               	goto	l5526
  8383  000C04                     l5534:
  8384                           
  8385                           ; BSR set to: 0
  8386  000C04  C0A6  FFF6         	movff	sprintf@f,tblptrl
  8387  000C08  C0A7  FFF7         	movff	sprintf@f+1,tblptrh
  8388  000C0C  0100               	movlb	0	; () banked
  8389  000C0E  4BA6               	infsnz	sprintf@f& (0+255),f,b
  8390  000C10  2BA7               	incf	(sprintf@f+1)& (0+255),f,b
  8391  000C12                     	if	0	;tblptru may be non-zero
  8392  000C12                     	endif
  8393  000C12                     	if	0	;tblptru may be non-zero
  8394  000C12                     	endif
  8395  000C12  0008               	tblrd		*
  8396  000C14  CFF5 F0D0          	movff	tablat,sprintf@c
  8397  000C18  0100               	movlb	0	; () banked
  8398  000C1A  51D0               	movf	sprintf@c& (0+255),w,b
  8399  000C1C  A4D8               	btfss	status,2,c
  8400  000C1E  EF5D  F000         	goto	l5248
  8401  000C22                     l5536:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;doprnt.c: 1538: *sp = 0;
  8405  000C22  C0A4  FFD9         	movff	sprintf@sp,fsr2l
  8406  000C26  C0A5  FFDA         	movff	sprintf@sp+1,fsr2h
  8407  000C2A  0E00               	movlw	0
  8408  000C2C  6EDF               	movwf	indf2,c
  8409  000C2E  0012               	return	
  8410  000C30                     __end_of_sprintf:
  8411                           	opt stack 0
  8412                           tblptru	equ	0xFF8
  8413                           tblptrh	equ	0xFF7
  8414                           tblptrl	equ	0xFF6
  8415                           tablat	equ	0xFF5
  8416                           prodh	equ	0xFF4
  8417                           prodl	equ	0xFF3
  8418                           intcon	equ	0xFF2
  8419                           indf0	equ	0xFEF
  8420                           postinc0	equ	0xFEE
  8421                           fsr0h	equ	0xFEA
  8422                           fsr0l	equ	0xFE9
  8423                           wreg	equ	0xFE8
  8424                           indf1	equ	0xFE7
  8425                           postdec1	equ	0xFE5
  8426                           fsr1h	equ	0xFE2
  8427                           fsr1l	equ	0xFE1
  8428                           indf2	equ	0xFDF
  8429                           postinc2	equ	0xFDE
  8430                           postdec2	equ	0xFDD
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8
  8434                           
  8435 ;; *************** function _scale *****************
  8436 ;; Defined at:
  8437 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  scl             1    wreg     char 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  scl             1   46[BANK0 ] char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  3   40[BANK0 ] char 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8451 ;;      Params:         0       3       0       0       0       0       0
  8452 ;;      Locals:         0       4       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0
  8454 ;;      Totals:         0       7       0       0       0       0       0
  8455 ;;Total ram usage:        7 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    4
  8458 ;; This function calls:
  8459 ;;		___awdiv
  8460 ;;		___awmod
  8461 ;;		___ftmul
  8462 ;;		___wmul
  8463 ;; This function is called by:
  8464 ;;		_sprintf
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text32
  8469  0013CA                     __ptext32:
  8470                           	opt stack 0
  8471  0013CA                     _scale:
  8472                           	opt stack 23
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;incstack = 0
  8476                           ;scale@scl stored from wreg
  8477  0013CA  0100               	movlb	0	; () banked
  8478  0013CC  6F8E               	movwf	scale@scl& (0+255),b
  8479                           
  8480                           ;doprnt.c: 428: if(scl < 0) {
  8481  0013CE  0100               	movlb	0	; () banked
  8482  0013D0  AF8E               	btfss	scale@scl& (0+255),7,b
  8483  0013D2  D124               	goto	l5026
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;doprnt.c: 429: scl = -scl;
  8487  0013D4  0100               	movlb	0	; () banked
  8488  0013D6  6D8E               	negf	scale@scl& (0+255),b
  8489                           
  8490                           ;doprnt.c: 430: if(scl>=110)
  8491  0013D8  0100               	movlb	0	; () banked
  8492  0013DA  518E               	movf	scale@scl& (0+255),w,b
  8493  0013DC  0A80               	xorlw	128
  8494  0013DE  0F12               	addlw	-238
  8495  0013E0  A0D8               	btfss	status,0,c
  8496  0013E2  D0A8               	goto	l5016
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8500  0013E4  0E00               	movlw	0
  8501  0013E6  0100               	movlb	0	; () banked
  8502  0013E8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8503  0013EA  0E03               	movlw	3
  8504  0013EC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8505  0013EE  0E00               	movlw	0
  8506  0013F0  0100               	movlb	0	; () banked
  8507  0013F2  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8508  0013F4  0E0A               	movlw	10
  8509  0013F6  6F73               	movwf	___awdiv@divisor& (0+255),b
  8510  0013F8  0E00               	movlw	0
  8511  0013FA  6E1F               	movwf	___awmod@divisor+1,c
  8512  0013FC  0E64               	movlw	100
  8513  0013FE  6E1E               	movwf	___awmod@divisor,c
  8514  001400  0100               	movlb	0	; () banked
  8515  001402  518E               	movf	scale@scl& (0+255),w,b
  8516  001404  6E1C               	movwf	___awmod@dividend,c
  8517  001406  6A1D               	clrf	___awmod@dividend+1,c
  8518  001408  BE1C               	btfsc	___awmod@dividend,7,c
  8519  00140A  061D               	decf	___awmod@dividend+1,f,c
  8520  00140C  ECEE  F01A         	call	___awmod	;wreg free
  8521  001410  C01C  F071         	movff	?___awmod,___awdiv@dividend
  8522  001414  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
  8523  001418  ECC2  F019         	call	___awdiv	;wreg free
  8524  00141C  0E09               	movlw	9
  8525  00141E  0100               	movlb	0	; () banked
  8526  001420  2571               	addwf	?___awdiv& (0+255),w,b
  8527  001422  0100               	movlb	0	; () banked
  8528  001424  6F75               	movwf	___wmul@multiplier& (0+255),b
  8529  001426  0E00               	movlw	0
  8530  001428  0100               	movlb	0	; () banked
  8531  00142A  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8532  00142C  0100               	movlb	0	; () banked
  8533  00142E  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8534  001430  ECFB  F01C         	call	___wmul	;wreg free
  8535  001434  0E44               	movlw	low __npowers_
  8536  001436  0100               	movlb	0	; () banked
  8537  001438  2575               	addwf	?___wmul& (0+255),w,b
  8538  00143A  6EF6               	movwf	tblptrl,c
  8539  00143C  0E7F               	movlw	high __npowers_
  8540  00143E  0100               	movlb	0	; () banked
  8541  001440  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8542  001442  6EF7               	movwf	tblptrh,c
  8543  001444                     	if	0	;There are less than 3 active tblptr bytes
  8544  001444                     	endif
  8545  001444  0009               	tblrd		*+
  8546  001446  CFF5 F07C          	movff	tablat,___ftmul@f2
  8547  00144A  0009               	tblrd		*+
  8548  00144C  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  8549  001450  000A               	tblrd		*-
  8550  001452  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  8551  001456  0E00               	movlw	0
  8552  001458  0100               	movlb	0	; () banked
  8553  00145A  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8554  00145C  0E64               	movlw	100
  8555  00145E  6F73               	movwf	___awdiv@divisor& (0+255),b
  8556  001460  0100               	movlb	0	; () banked
  8557  001462  518E               	movf	scale@scl& (0+255),w,b
  8558  001464  0100               	movlb	0	; () banked
  8559  001466  6F71               	movwf	___awdiv@dividend& (0+255),b
  8560  001468  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  8561  00146A  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  8562  00146C  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8563  00146E  ECC2  F019         	call	___awdiv	;wreg free
  8564  001472  0E12               	movlw	18
  8565  001474  0100               	movlb	0	; () banked
  8566  001476  2571               	addwf	?___awdiv& (0+255),w,b
  8567  001478  0100               	movlb	0	; () banked
  8568  00147A  6F75               	movwf	___wmul@multiplier& (0+255),b
  8569  00147C  0E00               	movlw	0
  8570  00147E  0100               	movlb	0	; () banked
  8571  001480  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8572  001482  0100               	movlb	0	; () banked
  8573  001484  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8574  001486  0E00               	movlw	0
  8575  001488  0100               	movlb	0	; () banked
  8576  00148A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8577  00148C  0E03               	movlw	3
  8578  00148E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8579  001490  ECFB  F01C         	call	___wmul	;wreg free
  8580  001494  0E44               	movlw	low __npowers_
  8581  001496  0100               	movlb	0	; () banked
  8582  001498  2575               	addwf	?___wmul& (0+255),w,b
  8583  00149A  6EF6               	movwf	tblptrl,c
  8584  00149C  0E7F               	movlw	high __npowers_
  8585  00149E  0100               	movlb	0	; () banked
  8586  0014A0  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8587  0014A2  6EF7               	movwf	tblptrh,c
  8588  0014A4                     	if	0	;There are less than 3 active tblptr bytes
  8589  0014A4                     	endif
  8590  0014A4  0009               	tblrd		*+
  8591  0014A6  CFF5 F079          	movff	tablat,___ftmul@f1
  8592  0014AA  0009               	tblrd		*+
  8593  0014AC  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  8594  0014B0  000A               	tblrd		*-
  8595  0014B2  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  8596  0014B6  ECE4  F013         	call	___ftmul	;wreg free
  8597  0014BA  C079  F08B         	movff	?___ftmul,_scale$2791
  8598  0014BE  C07A  F08C         	movff	?___ftmul+1,_scale$2791+1
  8599  0014C2  C07B  F08D         	movff	?___ftmul+2,_scale$2791+2
  8600                           
  8601                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8602  0014C6  C08B  F079         	movff	_scale$2791,___ftmul@f1
  8603  0014CA  C08C  F07A         	movff	_scale$2791+1,___ftmul@f1+1
  8604  0014CE  C08D  F07B         	movff	_scale$2791+2,___ftmul@f1+2
  8605  0014D2  0E00               	movlw	0
  8606  0014D4  0100               	movlb	0	; () banked
  8607  0014D6  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8608  0014D8  0E03               	movlw	3
  8609  0014DA  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8610  0014DC  0E00               	movlw	0
  8611  0014DE  6E1F               	movwf	___awmod@divisor+1,c
  8612  0014E0  0E0A               	movlw	10
  8613  0014E2  6E1E               	movwf	___awmod@divisor,c
  8614  0014E4  0100               	movlb	0	; () banked
  8615  0014E6  518E               	movf	scale@scl& (0+255),w,b
  8616  0014E8  6E1C               	movwf	___awmod@dividend,c
  8617  0014EA  6A1D               	clrf	___awmod@dividend+1,c
  8618  0014EC  BE1C               	btfsc	___awmod@dividend,7,c
  8619  0014EE  061D               	decf	___awmod@dividend+1,f,c
  8620  0014F0  ECEE  F01A         	call	___awmod	;wreg free
  8621  0014F4  C01C  F075         	movff	?___awmod,___wmul@multiplier
  8622  0014F8  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  8623  0014FC  ECFB  F01C         	call	___wmul	;wreg free
  8624  001500  0E44               	movlw	low __npowers_
  8625  001502  0100               	movlb	0	; () banked
  8626  001504  2575               	addwf	?___wmul& (0+255),w,b
  8627  001506  6EF6               	movwf	tblptrl,c
  8628  001508  0E7F               	movlw	high __npowers_
  8629  00150A  0100               	movlb	0	; () banked
  8630  00150C  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8631  00150E  6EF7               	movwf	tblptrh,c
  8632  001510                     	if	0	;There are less than 3 active tblptr bytes
  8633  001510                     	endif
  8634  001510  0009               	tblrd		*+
  8635  001512  CFF5 F07C          	movff	tablat,___ftmul@f2
  8636  001516  0009               	tblrd		*+
  8637  001518  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  8638  00151C  000A               	tblrd		*-
  8639  00151E  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  8640  001522  ECE4  F013         	call	___ftmul	;wreg free
  8641  001526  C079  F088         	movff	?___ftmul,?_scale
  8642  00152A  C07A  F089         	movff	?___ftmul+1,?_scale+1
  8643  00152E  C07B  F08A         	movff	?___ftmul+2,?_scale+2
  8644  001532  0012               	return	
  8645  001534                     l5016:
  8646                           
  8647                           ;doprnt.c: 432: else if(scl > 10)
  8648  001534  0100               	movlb	0	; () banked
  8649  001536  518E               	movf	scale@scl& (0+255),w,b
  8650  001538  0A80               	xorlw	128
  8651  00153A  0F75               	addlw	-139
  8652  00153C  A0D8               	btfss	status,0,c
  8653  00153E  D05B               	goto	l5022
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8657  001540  0E00               	movlw	0
  8658  001542  0100               	movlb	0	; () banked
  8659  001544  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8660  001546  0E0A               	movlw	10
  8661  001548  6F73               	movwf	___awdiv@divisor& (0+255),b
  8662  00154A  0100               	movlb	0	; () banked
  8663  00154C  518E               	movf	scale@scl& (0+255),w,b
  8664  00154E  0100               	movlb	0	; () banked
  8665  001550  6F71               	movwf	___awdiv@dividend& (0+255),b
  8666  001552  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  8667  001554  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  8668  001556  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8669  001558  ECC2  F019         	call	___awdiv	;wreg free
  8670  00155C  0E09               	movlw	9
  8671  00155E  0100               	movlb	0	; () banked
  8672  001560  2571               	addwf	?___awdiv& (0+255),w,b
  8673  001562  0100               	movlb	0	; () banked
  8674  001564  6F75               	movwf	___wmul@multiplier& (0+255),b
  8675  001566  0E00               	movlw	0
  8676  001568  0100               	movlb	0	; () banked
  8677  00156A  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8678  00156C  0100               	movlb	0	; () banked
  8679  00156E  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8680  001570  0E00               	movlw	0
  8681  001572  0100               	movlb	0	; () banked
  8682  001574  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8683  001576  0E03               	movlw	3
  8684  001578  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8685  00157A  ECFB  F01C         	call	___wmul	;wreg free
  8686  00157E  0E44               	movlw	low __npowers_
  8687  001580  0100               	movlb	0	; () banked
  8688  001582  2575               	addwf	?___wmul& (0+255),w,b
  8689  001584  6EF6               	movwf	tblptrl,c
  8690  001586  0E7F               	movlw	high __npowers_
  8691  001588  0100               	movlb	0	; () banked
  8692  00158A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8693  00158C  6EF7               	movwf	tblptrh,c
  8694  00158E                     	if	0	;There are less than 3 active tblptr bytes
  8695  00158E                     	endif
  8696  00158E  0009               	tblrd		*+
  8697  001590  CFF5 F079          	movff	tablat,___ftmul@f1
  8698  001594  0009               	tblrd		*+
  8699  001596  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  8700  00159A  000A               	tblrd		*-
  8701  00159C  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  8702  0015A0  0E00               	movlw	0
  8703  0015A2  0100               	movlb	0	; () banked
  8704  0015A4  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8705  0015A6  0E03               	movlw	3
  8706  0015A8  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8707  0015AA  0E00               	movlw	0
  8708  0015AC  6E1F               	movwf	___awmod@divisor+1,c
  8709  0015AE  0E0A               	movlw	10
  8710  0015B0  6E1E               	movwf	___awmod@divisor,c
  8711  0015B2  0100               	movlb	0	; () banked
  8712  0015B4  518E               	movf	scale@scl& (0+255),w,b
  8713  0015B6  6E1C               	movwf	___awmod@dividend,c
  8714  0015B8  6A1D               	clrf	___awmod@dividend+1,c
  8715  0015BA  BE1C               	btfsc	___awmod@dividend,7,c
  8716  0015BC  061D               	decf	___awmod@dividend+1,f,c
  8717  0015BE  ECEE  F01A         	call	___awmod	;wreg free
  8718  0015C2  C01C  F075         	movff	?___awmod,___wmul@multiplier
  8719  0015C6  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  8720  0015CA  ECFB  F01C         	call	___wmul	;wreg free
  8721  0015CE  0E44               	movlw	low __npowers_
  8722  0015D0  0100               	movlb	0	; () banked
  8723  0015D2  2575               	addwf	?___wmul& (0+255),w,b
  8724  0015D4  6EF6               	movwf	tblptrl,c
  8725  0015D6  0E7F               	movlw	high __npowers_
  8726  0015D8  0100               	movlb	0	; () banked
  8727  0015DA  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8728  0015DC  6EF7               	movwf	tblptrh,c
  8729  0015DE                     	if	0	;There are less than 3 active tblptr bytes
  8730  0015DE                     	endif
  8731  0015DE  0009               	tblrd		*+
  8732  0015E0  CFF5 F07C          	movff	tablat,___ftmul@f2
  8733  0015E4  0009               	tblrd		*+
  8734  0015E6  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  8735  0015EA  000A               	tblrd		*-
  8736  0015EC  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  8737  0015F0  ECE4  F013         	call	___ftmul	;wreg free
  8738  0015F4  D798               	goto	L4
  8739  0015F6                     l5022:
  8740                           
  8741                           ;doprnt.c: 434: return _npowers_[scl];
  8742  0015F6  0100               	movlb	0	; () banked
  8743  0015F8  518E               	movf	scale@scl& (0+255),w,b
  8744  0015FA  0D03               	mullw	3
  8745  0015FC  0E44               	movlw	low __npowers_
  8746  0015FE  24F3               	addwf	prodl,w,c
  8747  001600  6EF6               	movwf	tblptrl,c
  8748  001602  0E7F               	movlw	high __npowers_
  8749  001604  20F4               	addwfc	prodh,w,c
  8750  001606  6EF7               	movwf	tblptrh,c
  8751  001608                     	if	0	;There are less than 3 active tblptr bytes
  8752  001608                     	endif
  8753  001608  0009               	tblrd		*+
  8754  00160A  CFF5 F088          	movff	tablat,?_scale
  8755  00160E  0009               	tblrd		*+
  8756  001610  CFF5 F089          	movff	tablat,?_scale+1
  8757  001614  000A               	tblrd		*-
  8758  001616  CFF5 F08A          	movff	tablat,?_scale+2
  8759                           
  8760                           ; BSR set to: 0
  8761  00161A  0012               	return	
  8762  00161C                     l5026:
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;doprnt.c: 435: }
  8766                           ;doprnt.c: 436: if(scl>=110)
  8767  00161C  0100               	movlb	0	; () banked
  8768  00161E  518E               	movf	scale@scl& (0+255),w,b
  8769  001620  0A80               	xorlw	128
  8770  001622  0F12               	addlw	-238
  8771  001624  A0D8               	btfss	status,0,c
  8772  001626  D0A8               	goto	l5034
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8776  001628  0E00               	movlw	0
  8777  00162A  0100               	movlb	0	; () banked
  8778  00162C  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8779  00162E  0E03               	movlw	3
  8780  001630  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8781  001632  0E00               	movlw	0
  8782  001634  0100               	movlb	0	; () banked
  8783  001636  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8784  001638  0E0A               	movlw	10
  8785  00163A  6F73               	movwf	___awdiv@divisor& (0+255),b
  8786  00163C  0E00               	movlw	0
  8787  00163E  6E1F               	movwf	___awmod@divisor+1,c
  8788  001640  0E64               	movlw	100
  8789  001642  6E1E               	movwf	___awmod@divisor,c
  8790  001644  0100               	movlb	0	; () banked
  8791  001646  518E               	movf	scale@scl& (0+255),w,b
  8792  001648  6E1C               	movwf	___awmod@dividend,c
  8793  00164A  6A1D               	clrf	___awmod@dividend+1,c
  8794  00164C  BE1C               	btfsc	___awmod@dividend,7,c
  8795  00164E  061D               	decf	___awmod@dividend+1,f,c
  8796  001650  ECEE  F01A         	call	___awmod	;wreg free
  8797  001654  C01C  F071         	movff	?___awmod,___awdiv@dividend
  8798  001658  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
  8799  00165C  ECC2  F019         	call	___awdiv	;wreg free
  8800  001660  0E09               	movlw	9
  8801  001662  0100               	movlb	0	; () banked
  8802  001664  2571               	addwf	?___awdiv& (0+255),w,b
  8803  001666  0100               	movlb	0	; () banked
  8804  001668  6F75               	movwf	___wmul@multiplier& (0+255),b
  8805  00166A  0E00               	movlw	0
  8806  00166C  0100               	movlb	0	; () banked
  8807  00166E  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8808  001670  0100               	movlb	0	; () banked
  8809  001672  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8810  001674  ECFB  F01C         	call	___wmul	;wreg free
  8811  001678  0E1D               	movlw	low __powers_
  8812  00167A  0100               	movlb	0	; () banked
  8813  00167C  2575               	addwf	?___wmul& (0+255),w,b
  8814  00167E  6EF6               	movwf	tblptrl,c
  8815  001680  0E7F               	movlw	high __powers_
  8816  001682  0100               	movlb	0	; () banked
  8817  001684  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8818  001686  6EF7               	movwf	tblptrh,c
  8819  001688                     	if	0	;There are less than 3 active tblptr bytes
  8820  001688                     	endif
  8821  001688  0009               	tblrd		*+
  8822  00168A  CFF5 F07C          	movff	tablat,___ftmul@f2
  8823  00168E  0009               	tblrd		*+
  8824  001690  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  8825  001694  000A               	tblrd		*-
  8826  001696  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  8827  00169A  0E00               	movlw	0
  8828  00169C  0100               	movlb	0	; () banked
  8829  00169E  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8830  0016A0  0E64               	movlw	100
  8831  0016A2  6F73               	movwf	___awdiv@divisor& (0+255),b
  8832  0016A4  0100               	movlb	0	; () banked
  8833  0016A6  518E               	movf	scale@scl& (0+255),w,b
  8834  0016A8  0100               	movlb	0	; () banked
  8835  0016AA  6F71               	movwf	___awdiv@dividend& (0+255),b
  8836  0016AC  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  8837  0016AE  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  8838  0016B0  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8839  0016B2  ECC2  F019         	call	___awdiv	;wreg free
  8840  0016B6  0E12               	movlw	18
  8841  0016B8  0100               	movlb	0	; () banked
  8842  0016BA  2571               	addwf	?___awdiv& (0+255),w,b
  8843  0016BC  0100               	movlb	0	; () banked
  8844  0016BE  6F75               	movwf	___wmul@multiplier& (0+255),b
  8845  0016C0  0E00               	movlw	0
  8846  0016C2  0100               	movlb	0	; () banked
  8847  0016C4  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8848  0016C6  0100               	movlb	0	; () banked
  8849  0016C8  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8850  0016CA  0E00               	movlw	0
  8851  0016CC  0100               	movlb	0	; () banked
  8852  0016CE  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8853  0016D0  0E03               	movlw	3
  8854  0016D2  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8855  0016D4  ECFB  F01C         	call	___wmul	;wreg free
  8856  0016D8  0E1D               	movlw	low __powers_
  8857  0016DA  0100               	movlb	0	; () banked
  8858  0016DC  2575               	addwf	?___wmul& (0+255),w,b
  8859  0016DE  6EF6               	movwf	tblptrl,c
  8860  0016E0  0E7F               	movlw	high __powers_
  8861  0016E2  0100               	movlb	0	; () banked
  8862  0016E4  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8863  0016E6  6EF7               	movwf	tblptrh,c
  8864  0016E8                     	if	0	;There are less than 3 active tblptr bytes
  8865  0016E8                     	endif
  8866  0016E8  0009               	tblrd		*+
  8867  0016EA  CFF5 F079          	movff	tablat,___ftmul@f1
  8868  0016EE  0009               	tblrd		*+
  8869  0016F0  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  8870  0016F4  000A               	tblrd		*-
  8871  0016F6  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  8872  0016FA  ECE4  F013         	call	___ftmul	;wreg free
  8873  0016FE  C079  F08B         	movff	?___ftmul,_scale$2791
  8874  001702  C07A  F08C         	movff	?___ftmul+1,_scale$2791+1
  8875  001706  C07B  F08D         	movff	?___ftmul+2,_scale$2791+2
  8876                           
  8877                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8878  00170A  C08B  F079         	movff	_scale$2791,___ftmul@f1
  8879  00170E  C08C  F07A         	movff	_scale$2791+1,___ftmul@f1+1
  8880  001712  C08D  F07B         	movff	_scale$2791+2,___ftmul@f1+2
  8881  001716  0E00               	movlw	0
  8882  001718  0100               	movlb	0	; () banked
  8883  00171A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8884  00171C  0E03               	movlw	3
  8885  00171E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8886  001720  0E00               	movlw	0
  8887  001722  6E1F               	movwf	___awmod@divisor+1,c
  8888  001724  0E0A               	movlw	10
  8889  001726  6E1E               	movwf	___awmod@divisor,c
  8890  001728  0100               	movlb	0	; () banked
  8891  00172A  518E               	movf	scale@scl& (0+255),w,b
  8892  00172C  6E1C               	movwf	___awmod@dividend,c
  8893  00172E  6A1D               	clrf	___awmod@dividend+1,c
  8894  001730  BE1C               	btfsc	___awmod@dividend,7,c
  8895  001732  061D               	decf	___awmod@dividend+1,f,c
  8896  001734  ECEE  F01A         	call	___awmod	;wreg free
  8897  001738  C01C  F075         	movff	?___awmod,___wmul@multiplier
  8898  00173C  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  8899  001740  ECFB  F01C         	call	___wmul	;wreg free
  8900  001744  0E1D               	movlw	low __powers_
  8901  001746  0100               	movlb	0	; () banked
  8902  001748  2575               	addwf	?___wmul& (0+255),w,b
  8903  00174A  6EF6               	movwf	tblptrl,c
  8904  00174C  0E7F               	movlw	high __powers_
  8905  00174E  0100               	movlb	0	; () banked
  8906  001750  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8907  001752  6EF7               	movwf	tblptrh,c
  8908  001754                     	if	0	;There are less than 3 active tblptr bytes
  8909  001754                     	endif
  8910  001754  0009               	tblrd		*+
  8911  001756  CFF5 F07C          	movff	tablat,___ftmul@f2
  8912  00175A  0009               	tblrd		*+
  8913  00175C  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  8914  001760  000A               	tblrd		*-
  8915  001762  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  8916  001766  ECE4  F013         	call	___ftmul	;wreg free
  8917  00176A  C079  F088         	movff	?___ftmul,?_scale
  8918  00176E  C07A  F089         	movff	?___ftmul+1,?_scale+1
  8919  001772  C07B  F08A         	movff	?___ftmul+2,?_scale+2
  8920  001776  0012               	return	
  8921  001778                     l5034:
  8922                           
  8923                           ;doprnt.c: 438: else if(scl > 10)
  8924  001778  0100               	movlb	0	; () banked
  8925  00177A  518E               	movf	scale@scl& (0+255),w,b
  8926  00177C  0A80               	xorlw	128
  8927  00177E  0F75               	addlw	-139
  8928  001780  A0D8               	btfss	status,0,c
  8929  001782  D05B               	goto	l5040
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8933  001784  0E00               	movlw	0
  8934  001786  0100               	movlb	0	; () banked
  8935  001788  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  8936  00178A  0E0A               	movlw	10
  8937  00178C  6F73               	movwf	___awdiv@divisor& (0+255),b
  8938  00178E  0100               	movlb	0	; () banked
  8939  001790  518E               	movf	scale@scl& (0+255),w,b
  8940  001792  0100               	movlb	0	; () banked
  8941  001794  6F71               	movwf	___awdiv@dividend& (0+255),b
  8942  001796  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  8943  001798  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  8944  00179A  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8945  00179C  ECC2  F019         	call	___awdiv	;wreg free
  8946  0017A0  0E09               	movlw	9
  8947  0017A2  0100               	movlb	0	; () banked
  8948  0017A4  2571               	addwf	?___awdiv& (0+255),w,b
  8949  0017A6  0100               	movlb	0	; () banked
  8950  0017A8  6F75               	movwf	___wmul@multiplier& (0+255),b
  8951  0017AA  0E00               	movlw	0
  8952  0017AC  0100               	movlb	0	; () banked
  8953  0017AE  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  8954  0017B0  0100               	movlb	0	; () banked
  8955  0017B2  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  8956  0017B4  0E00               	movlw	0
  8957  0017B6  0100               	movlb	0	; () banked
  8958  0017B8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8959  0017BA  0E03               	movlw	3
  8960  0017BC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8961  0017BE  ECFB  F01C         	call	___wmul	;wreg free
  8962  0017C2  0E1D               	movlw	low __powers_
  8963  0017C4  0100               	movlb	0	; () banked
  8964  0017C6  2575               	addwf	?___wmul& (0+255),w,b
  8965  0017C8  6EF6               	movwf	tblptrl,c
  8966  0017CA  0E7F               	movlw	high __powers_
  8967  0017CC  0100               	movlb	0	; () banked
  8968  0017CE  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  8969  0017D0  6EF7               	movwf	tblptrh,c
  8970  0017D2                     	if	0	;There are less than 3 active tblptr bytes
  8971  0017D2                     	endif
  8972  0017D2  0009               	tblrd		*+
  8973  0017D4  CFF5 F079          	movff	tablat,___ftmul@f1
  8974  0017D8  0009               	tblrd		*+
  8975  0017DA  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  8976  0017DE  000A               	tblrd		*-
  8977  0017E0  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  8978  0017E4  0E00               	movlw	0
  8979  0017E6  0100               	movlb	0	; () banked
  8980  0017E8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8981  0017EA  0E03               	movlw	3
  8982  0017EC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  8983  0017EE  0E00               	movlw	0
  8984  0017F0  6E1F               	movwf	___awmod@divisor+1,c
  8985  0017F2  0E0A               	movlw	10
  8986  0017F4  6E1E               	movwf	___awmod@divisor,c
  8987  0017F6  0100               	movlb	0	; () banked
  8988  0017F8  518E               	movf	scale@scl& (0+255),w,b
  8989  0017FA  6E1C               	movwf	___awmod@dividend,c
  8990  0017FC  6A1D               	clrf	___awmod@dividend+1,c
  8991  0017FE  BE1C               	btfsc	___awmod@dividend,7,c
  8992  001800  061D               	decf	___awmod@dividend+1,f,c
  8993  001802  ECEE  F01A         	call	___awmod	;wreg free
  8994  001806  C01C  F075         	movff	?___awmod,___wmul@multiplier
  8995  00180A  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  8996  00180E  ECFB  F01C         	call	___wmul	;wreg free
  8997  001812  0E1D               	movlw	low __powers_
  8998  001814  0100               	movlb	0	; () banked
  8999  001816  2575               	addwf	?___wmul& (0+255),w,b
  9000  001818  6EF6               	movwf	tblptrl,c
  9001  00181A  0E7F               	movlw	high __powers_
  9002  00181C  0100               	movlb	0	; () banked
  9003  00181E  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9004  001820  6EF7               	movwf	tblptrh,c
  9005  001822                     	if	0	;There are less than 3 active tblptr bytes
  9006  001822                     	endif
  9007  001822  0009               	tblrd		*+
  9008  001824  CFF5 F07C          	movff	tablat,___ftmul@f2
  9009  001828  0009               	tblrd		*+
  9010  00182A  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9011  00182E  000A               	tblrd		*-
  9012  001830  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9013  001834  ECE4  F013         	call	___ftmul	;wreg free
  9014  001838  D798               	goto	L5
  9015  00183A                     l5040:
  9016                           
  9017                           ;doprnt.c: 440: return _powers_[scl];
  9018  00183A  0100               	movlb	0	; () banked
  9019  00183C  518E               	movf	scale@scl& (0+255),w,b
  9020  00183E  0D03               	mullw	3
  9021  001840  0E1D               	movlw	low __powers_
  9022  001842  24F3               	addwf	prodl,w,c
  9023  001844  6EF6               	movwf	tblptrl,c
  9024  001846  0E7F               	movlw	high __powers_
  9025  001848  20F4               	addwfc	prodh,w,c
  9026  00184A  6EF7               	movwf	tblptrh,c
  9027  00184C                     	if	0	;There are less than 3 active tblptr bytes
  9028  00184C                     	endif
  9029  00184C  0009               	tblrd		*+
  9030  00184E  CFF5 F088          	movff	tablat,?_scale
  9031  001852  0009               	tblrd		*+
  9032  001854  CFF5 F089          	movff	tablat,?_scale+1
  9033  001858  000A               	tblrd		*-
  9034  00185A  CFF5 F08A          	movff	tablat,?_scale+2
  9035  00185E  0012               	return	
  9036  001860                     __end_of_scale:
  9037                           	opt stack 0
  9038                           tblptru	equ	0xFF8
  9039                           tblptrh	equ	0xFF7
  9040                           tblptrl	equ	0xFF6
  9041                           tablat	equ	0xFF5
  9042                           prodh	equ	0xFF4
  9043                           prodl	equ	0xFF3
  9044                           intcon	equ	0xFF2
  9045                           indf0	equ	0xFEF
  9046                           postinc0	equ	0xFEE
  9047                           fsr0h	equ	0xFEA
  9048                           fsr0l	equ	0xFE9
  9049                           wreg	equ	0xFE8
  9050                           indf1	equ	0xFE7
  9051                           postdec1	equ	0xFE5
  9052                           fsr1h	equ	0xFE2
  9053                           fsr1l	equ	0xFE1
  9054                           indf2	equ	0xFDF
  9055                           postinc2	equ	0xFDE
  9056                           postdec2	equ	0xFDD
  9057                           fsr2h	equ	0xFDA
  9058                           fsr2l	equ	0xFD9
  9059                           status	equ	0xFD8
  9060                           
  9061 ;; *************** function _isdigit *****************
  9062 ;; Defined at:
  9063 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  c               1    wreg     unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  c               1   29[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9077 ;;      Params:         0       0       0       0       0       0       0
  9078 ;;      Locals:         2       0       0       0       0       0       0
  9079 ;;      Temps:          1       0       0       0       0       0       0
  9080 ;;      Totals:         3       0       0       0       0       0       0
  9081 ;;Total ram usage:        3 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    2
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_sprintf
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text33
  9092  003B4E                     __ptext33:
  9093                           	opt stack 0
  9094  003B4E                     _isdigit:
  9095                           	opt stack 25
  9096                           
  9097                           ;incstack = 0
  9098                           ;isdigit@c stored from wreg
  9099  003B4E  6E1E               	movwf	isdigit@c,c
  9100  003B50  0E00               	movlw	0
  9101  003B52  6E1D               	movwf	_isdigit$2419,c
  9102  003B54  0E3A               	movlw	58
  9103  003B56  601E               	cpfslt	isdigit@c,c
  9104  003B58  D005               	goto	l3508
  9105  003B5A  0E2F               	movlw	47
  9106  003B5C  641E               	cpfsgt	isdigit@c,c
  9107  003B5E  D002               	goto	l3508
  9108  003B60  0E01               	movlw	1
  9109  003B62  6E1D               	movwf	_isdigit$2419,c
  9110  003B64                     l3508:
  9111  003B64  C01D  F01C         	movff	_isdigit$2419,??_isdigit
  9112  003B68  301C               	rrcf	??_isdigit,w,c
  9113  003B6A  0012               	return	
  9114  003B6C                     __end_of_isdigit:
  9115                           	opt stack 0
  9116                           tblptru	equ	0xFF8
  9117                           tblptrh	equ	0xFF7
  9118                           tblptrl	equ	0xFF6
  9119                           tablat	equ	0xFF5
  9120                           prodh	equ	0xFF4
  9121                           prodl	equ	0xFF3
  9122                           intcon	equ	0xFF2
  9123                           indf0	equ	0xFEF
  9124                           postinc0	equ	0xFEE
  9125                           fsr0h	equ	0xFEA
  9126                           fsr0l	equ	0xFE9
  9127                           wreg	equ	0xFE8
  9128                           indf1	equ	0xFE7
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           fsr2h	equ	0xFDA
  9136                           fsr2l	equ	0xFD9
  9137                           status	equ	0xFD8
  9138                           
  9139 ;; *************** function _fround *****************
  9140 ;; Defined at:
  9141 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  prec            1    wreg     unsigned char 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  prec            1   49[BANK0 ] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  3   40[BANK0 ] unsigned char 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9155 ;;      Params:         0       3       0       0       0       0       0
  9156 ;;      Locals:         0       7       0       0       0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0
  9158 ;;      Totals:         0      10       0       0       0       0       0
  9159 ;;Total ram usage:       10 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    4
  9162 ;; This function calls:
  9163 ;;		___awdiv
  9164 ;;		___awmod
  9165 ;;		___ftmul
  9166 ;;		___wmul
  9167 ;; This function is called by:
  9168 ;;		_sprintf
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text34
  9173  001FAA                     __ptext34:
  9174                           	opt stack 0
  9175  001FAA                     _fround:
  9176                           	opt stack 23
  9177                           
  9178                           ;incstack = 0
  9179                           ;fround@prec stored from wreg
  9180  001FAA  0100               	movlb	0	; () banked
  9181  001FAC  6F91               	movwf	fround@prec& (0+255),b
  9182                           
  9183                           ;doprnt.c: 413: if(prec>=110)
  9184  001FAE  0E6D               	movlw	109
  9185  001FB0  0100               	movlb	0	; () banked
  9186  001FB2  6591               	cpfsgt	fround@prec& (0+255),b
  9187  001FB4  D0B6               	goto	l4994
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9191  001FB6  0E00               	movlw	0
  9192  001FB8  0100               	movlb	0	; () banked
  9193  001FBA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9194  001FBC  0E03               	movlw	3
  9195  001FBE  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9196  001FC0  0E00               	movlw	0
  9197  001FC2  0100               	movlb	0	; () banked
  9198  001FC4  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9199  001FC6  0E0A               	movlw	10
  9200  001FC8  6F73               	movwf	___awdiv@divisor& (0+255),b
  9201  001FCA  0E00               	movlw	0
  9202  001FCC  6E1F               	movwf	___awmod@divisor+1,c
  9203  001FCE  0E64               	movlw	100
  9204  001FD0  6E1E               	movwf	___awmod@divisor,c
  9205  001FD2  C091  F01C         	movff	fround@prec,___awmod@dividend
  9206  001FD6  6A1D               	clrf	___awmod@dividend+1,c
  9207  001FD8  ECEE  F01A         	call	___awmod	;wreg free
  9208  001FDC  C01C  F071         	movff	?___awmod,___awdiv@dividend
  9209  001FE0  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9210  001FE4  ECC2  F019         	call	___awdiv	;wreg free
  9211  001FE8  0E09               	movlw	9
  9212  001FEA  0100               	movlb	0	; () banked
  9213  001FEC  2571               	addwf	?___awdiv& (0+255),w,b
  9214  001FEE  0100               	movlb	0	; () banked
  9215  001FF0  6F75               	movwf	___wmul@multiplier& (0+255),b
  9216  001FF2  0E00               	movlw	0
  9217  001FF4  0100               	movlb	0	; () banked
  9218  001FF6  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9219  001FF8  0100               	movlb	0	; () banked
  9220  001FFA  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9221  001FFC  ECFB  F01C         	call	___wmul	;wreg free
  9222  002000  0E44               	movlw	low __npowers_
  9223  002002  0100               	movlb	0	; () banked
  9224  002004  2575               	addwf	?___wmul& (0+255),w,b
  9225  002006  6EF6               	movwf	tblptrl,c
  9226  002008  0E7F               	movlw	high __npowers_
  9227  00200A  0100               	movlb	0	; () banked
  9228  00200C  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9229  00200E  6EF7               	movwf	tblptrh,c
  9230  002010                     	if	0	;There are less than 3 active tblptr bytes
  9231  002010                     	endif
  9232  002010  0009               	tblrd		*+
  9233  002012  CFF5 F07C          	movff	tablat,___ftmul@f2
  9234  002016  0009               	tblrd		*+
  9235  002018  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9236  00201C  000A               	tblrd		*-
  9237  00201E  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9238  002022  0E00               	movlw	0
  9239  002024  0100               	movlb	0	; () banked
  9240  002026  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9241  002028  0E64               	movlw	100
  9242  00202A  6F73               	movwf	___awdiv@divisor& (0+255),b
  9243  00202C  C091  F071         	movff	fround@prec,___awdiv@dividend
  9244  002030  0100               	movlb	0	; () banked
  9245  002032  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9246  002034  ECC2  F019         	call	___awdiv	;wreg free
  9247  002038  0E12               	movlw	18
  9248  00203A  0100               	movlb	0	; () banked
  9249  00203C  2571               	addwf	?___awdiv& (0+255),w,b
  9250  00203E  0100               	movlb	0	; () banked
  9251  002040  6F75               	movwf	___wmul@multiplier& (0+255),b
  9252  002042  0E00               	movlw	0
  9253  002044  0100               	movlb	0	; () banked
  9254  002046  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9255  002048  0100               	movlb	0	; () banked
  9256  00204A  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9257  00204C  0E00               	movlw	0
  9258  00204E  0100               	movlb	0	; () banked
  9259  002050  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9260  002052  0E03               	movlw	3
  9261  002054  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9262  002056  ECFB  F01C         	call	___wmul	;wreg free
  9263  00205A  0E44               	movlw	low __npowers_
  9264  00205C  0100               	movlb	0	; () banked
  9265  00205E  2575               	addwf	?___wmul& (0+255),w,b
  9266  002060  6EF6               	movwf	tblptrl,c
  9267  002062  0E7F               	movlw	high __npowers_
  9268  002064  0100               	movlb	0	; () banked
  9269  002066  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9270  002068  6EF7               	movwf	tblptrh,c
  9271  00206A                     	if	0	;There are less than 3 active tblptr bytes
  9272  00206A                     	endif
  9273  00206A  0009               	tblrd		*+
  9274  00206C  CFF5 F079          	movff	tablat,___ftmul@f1
  9275  002070  0009               	tblrd		*+
  9276  002072  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9277  002076  000A               	tblrd		*-
  9278  002078  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9279  00207C  ECE4  F013         	call	___ftmul	;wreg free
  9280  002080  C079  F08E         	movff	?___ftmul,_fround$2789
  9281  002084  C07A  F08F         	movff	?___ftmul+1,_fround$2789+1
  9282  002088  C07B  F090         	movff	?___ftmul+2,_fround$2789+2
  9283                           
  9284                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9285  00208C  0E00               	movlw	0
  9286  00208E  0100               	movlb	0	; () banked
  9287  002090  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9288  002092  0E03               	movlw	3
  9289  002094  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9290  002096  0E00               	movlw	0
  9291  002098  6E1F               	movwf	___awmod@divisor+1,c
  9292  00209A  0E0A               	movlw	10
  9293  00209C  6E1E               	movwf	___awmod@divisor,c
  9294  00209E  C091  F01C         	movff	fround@prec,___awmod@dividend
  9295  0020A2  6A1D               	clrf	___awmod@dividend+1,c
  9296  0020A4  ECEE  F01A         	call	___awmod	;wreg free
  9297  0020A8  C01C  F075         	movff	?___awmod,___wmul@multiplier
  9298  0020AC  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  9299  0020B0  ECFB  F01C         	call	___wmul	;wreg free
  9300  0020B4  0E44               	movlw	low __npowers_
  9301  0020B6  0100               	movlb	0	; () banked
  9302  0020B8  2575               	addwf	?___wmul& (0+255),w,b
  9303  0020BA  6EF6               	movwf	tblptrl,c
  9304  0020BC  0E7F               	movlw	high __npowers_
  9305  0020BE  0100               	movlb	0	; () banked
  9306  0020C0  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9307  0020C2  6EF7               	movwf	tblptrh,c
  9308  0020C4                     	if	0	;There are less than 3 active tblptr bytes
  9309  0020C4                     	endif
  9310  0020C4  0009               	tblrd		*+
  9311  0020C6  CFF5 F07C          	movff	tablat,___ftmul@f2
  9312  0020CA  0009               	tblrd		*+
  9313  0020CC  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9314  0020D0  000A               	tblrd		*-
  9315  0020D2  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9316  0020D6  C08E  F079         	movff	_fround$2789,___ftmul@f1
  9317  0020DA  C08F  F07A         	movff	_fround$2789+1,___ftmul@f1+1
  9318  0020DE  C090  F07B         	movff	_fround$2789+2,___ftmul@f1+2
  9319  0020E2  ECE4  F013         	call	___ftmul	;wreg free
  9320  0020E6  C079  F08B         	movff	?___ftmul,_fround$2790
  9321  0020EA  C07A  F08C         	movff	?___ftmul+1,_fround$2790+1
  9322  0020EE  C07B  F08D         	movff	?___ftmul+2,_fround$2790+2
  9323                           
  9324                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9325  0020F2  C08B  F079         	movff	_fround$2790,___ftmul@f1
  9326  0020F6  C08C  F07A         	movff	_fround$2790+1,___ftmul@f1+1
  9327  0020FA  C08D  F07B         	movff	_fround$2790+2,___ftmul@f1+2
  9328  0020FE  0E00               	movlw	0
  9329  002100  0100               	movlb	0	; () banked
  9330  002102  6F7C               	movwf	___ftmul@f2& (0+255),b
  9331  002104  0E00               	movlw	0
  9332  002106  0100               	movlb	0	; () banked
  9333  002108  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  9334  00210A  0E3F               	movlw	63
  9335  00210C  0100               	movlb	0	; () banked
  9336  00210E  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  9337  002110  ECE4  F013         	call	___ftmul	;wreg free
  9338  002114  C079  F088         	movff	?___ftmul,?_fround
  9339  002118  C07A  F089         	movff	?___ftmul+1,?_fround+1
  9340  00211C  C07B  F08A         	movff	?___ftmul+2,?_fround+2
  9341  002120  0012               	return	
  9342  002122                     l4994:
  9343                           
  9344                           ;doprnt.c: 415: else if(prec > 10)
  9345  002122  0E0A               	movlw	10
  9346  002124  0100               	movlb	0	; () banked
  9347  002126  6591               	cpfsgt	fround@prec& (0+255),b
  9348  002128  D06C               	goto	l5002
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9352  00212A  0E00               	movlw	0
  9353  00212C  0100               	movlb	0	; () banked
  9354  00212E  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9355  002130  0E03               	movlw	3
  9356  002132  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9357  002134  0E00               	movlw	0
  9358  002136  6E1F               	movwf	___awmod@divisor+1,c
  9359  002138  0E0A               	movlw	10
  9360  00213A  6E1E               	movwf	___awmod@divisor,c
  9361  00213C  C091  F01C         	movff	fround@prec,___awmod@dividend
  9362  002140  6A1D               	clrf	___awmod@dividend+1,c
  9363  002142  ECEE  F01A         	call	___awmod	;wreg free
  9364  002146  C01C  F075         	movff	?___awmod,___wmul@multiplier
  9365  00214A  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  9366  00214E  ECFB  F01C         	call	___wmul	;wreg free
  9367  002152  0E44               	movlw	low __npowers_
  9368  002154  0100               	movlb	0	; () banked
  9369  002156  2575               	addwf	?___wmul& (0+255),w,b
  9370  002158  6EF6               	movwf	tblptrl,c
  9371  00215A  0E7F               	movlw	high __npowers_
  9372  00215C  0100               	movlb	0	; () banked
  9373  00215E  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9374  002160  6EF7               	movwf	tblptrh,c
  9375  002162                     	if	0	;There are less than 3 active tblptr bytes
  9376  002162                     	endif
  9377  002162  0009               	tblrd		*+
  9378  002164  CFF5 F07C          	movff	tablat,___ftmul@f2
  9379  002168  0009               	tblrd		*+
  9380  00216A  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9381  00216E  000A               	tblrd		*-
  9382  002170  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9383  002174  0E00               	movlw	0
  9384  002176  0100               	movlb	0	; () banked
  9385  002178  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9386  00217A  0E0A               	movlw	10
  9387  00217C  6F73               	movwf	___awdiv@divisor& (0+255),b
  9388  00217E  C091  F071         	movff	fround@prec,___awdiv@dividend
  9389  002182  0100               	movlb	0	; () banked
  9390  002184  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9391  002186  ECC2  F019         	call	___awdiv	;wreg free
  9392  00218A  0E09               	movlw	9
  9393  00218C  0100               	movlb	0	; () banked
  9394  00218E  2571               	addwf	?___awdiv& (0+255),w,b
  9395  002190  0100               	movlb	0	; () banked
  9396  002192  6F75               	movwf	___wmul@multiplier& (0+255),b
  9397  002194  0E00               	movlw	0
  9398  002196  0100               	movlb	0	; () banked
  9399  002198  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9400  00219A  0100               	movlb	0	; () banked
  9401  00219C  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9402  00219E  0E00               	movlw	0
  9403  0021A0  0100               	movlb	0	; () banked
  9404  0021A2  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9405  0021A4  0E03               	movlw	3
  9406  0021A6  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9407  0021A8  ECFB  F01C         	call	___wmul	;wreg free
  9408  0021AC  0E44               	movlw	low __npowers_
  9409  0021AE  0100               	movlb	0	; () banked
  9410  0021B0  2575               	addwf	?___wmul& (0+255),w,b
  9411  0021B2  6EF6               	movwf	tblptrl,c
  9412  0021B4  0E7F               	movlw	high __npowers_
  9413  0021B6  0100               	movlb	0	; () banked
  9414  0021B8  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9415  0021BA  6EF7               	movwf	tblptrh,c
  9416  0021BC                     	if	0	;There are less than 3 active tblptr bytes
  9417  0021BC                     	endif
  9418  0021BC  0009               	tblrd		*+
  9419  0021BE  CFF5 F079          	movff	tablat,___ftmul@f1
  9420  0021C2  0009               	tblrd		*+
  9421  0021C4  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9422  0021C8  000A               	tblrd		*-
  9423  0021CA  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9424  0021CE  ECE4  F013         	call	___ftmul	;wreg free
  9425  0021D2  C079  F08E         	movff	?___ftmul,_fround$2789
  9426  0021D6  C07A  F08F         	movff	?___ftmul+1,_fround$2789+1
  9427  0021DA  C07B  F090         	movff	?___ftmul+2,_fround$2789+2
  9428                           
  9429                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9430  0021DE  C08E  F079         	movff	_fround$2789,___ftmul@f1
  9431  0021E2  C08F  F07A         	movff	_fround$2789+1,___ftmul@f1+1
  9432  0021E6  C090  F07B         	movff	_fround$2789+2,___ftmul@f1+2
  9433  0021EA  0E00               	movlw	0
  9434  0021EC  0100               	movlb	0	; () banked
  9435  0021EE  6F7C               	movwf	___ftmul@f2& (0+255),b
  9436  0021F0  0E00               	movlw	0
  9437  0021F2  0100               	movlb	0	; () banked
  9438  0021F4  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  9439  0021F6  0E3F               	movlw	63
  9440  0021F8  0100               	movlb	0	; () banked
  9441  0021FA  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  9442  0021FC  ECE4  F013         	call	___ftmul	;wreg free
  9443  002200  D789               	goto	L6
  9444  002202                     l5002:
  9445                           
  9446                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9447  002202  0100               	movlb	0	; () banked
  9448  002204  5191               	movf	fround@prec& (0+255),w,b
  9449  002206  0D03               	mullw	3
  9450  002208  0E44               	movlw	low __npowers_
  9451  00220A  24F3               	addwf	prodl,w,c
  9452  00220C  6EF6               	movwf	tblptrl,c
  9453  00220E  0E7F               	movlw	high __npowers_
  9454  002210  20F4               	addwfc	prodh,w,c
  9455  002212  6EF7               	movwf	tblptrh,c
  9456  002214                     	if	0	;There are less than 3 active tblptr bytes
  9457  002214                     	endif
  9458  002214  0009               	tblrd		*+
  9459  002216  CFF5 F079          	movff	tablat,___ftmul@f1
  9460  00221A  0009               	tblrd		*+
  9461  00221C  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9462  002220  000A               	tblrd		*-
  9463  002222  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9464  002226  0E00               	movlw	0
  9465  002228  0100               	movlb	0	; () banked
  9466  00222A  6F7C               	movwf	___ftmul@f2& (0+255),b
  9467  00222C  0E00               	movlw	0
  9468  00222E  0100               	movlb	0	; () banked
  9469  002230  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  9470  002232  0E3F               	movlw	63
  9471  002234  0100               	movlb	0	; () banked
  9472  002236  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  9473  002238  ECE4  F013         	call	___ftmul	;wreg free
  9474  00223C  C079  F088         	movff	?___ftmul,?_fround
  9475  002240  C07A  F089         	movff	?___ftmul+1,?_fround+1
  9476  002244  C07B  F08A         	movff	?___ftmul+2,?_fround+2
  9477  002248  0012               	return	
  9478  00224A                     __end_of_fround:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           intcon	equ	0xFF2
  9487                           indf0	equ	0xFEF
  9488                           postinc0	equ	0xFEE
  9489                           fsr0h	equ	0xFEA
  9490                           fsr0l	equ	0xFE9
  9491                           wreg	equ	0xFE8
  9492                           indf1	equ	0xFE7
  9493                           postdec1	equ	0xFE5
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           indf2	equ	0xFDF
  9497                           postinc2	equ	0xFDE
  9498                           postdec2	equ	0xFDD
  9499                           fsr2h	equ	0xFDA
  9500                           fsr2l	equ	0xFD9
  9501                           status	equ	0xFD8
  9502                           
  9503 ;; *************** function ___wmul *****************
  9504 ;; Defined at:
  9505 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  multiplier      2   21[BANK0 ] unsigned int 
  9508 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  product         2   37[COMRAM] unsigned int 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  2   21[BANK0 ] unsigned int 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, status,0, prodl, prodh
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9520 ;;      Params:         0       4       0       0       0       0       0
  9521 ;;      Locals:         2       0       0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0
  9523 ;;      Totals:         2       4       0       0       0       0       0
  9524 ;;Total ram usage:        6 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    2
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_fround
  9531 ;;		_scale
  9532 ;;		_sprintf
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text35
  9537  0039F6                     __ptext35:
  9538                           	opt stack 0
  9539  0039F6                     ___wmul:
  9540                           	opt stack 24
  9541                           
  9542                           ;incstack = 0
  9543  0039F6  0100               	movlb	0	; () banked
  9544  0039F8  5175               	movf	___wmul@multiplier& (0+255),w,b
  9545  0039FA  0100               	movlb	0	; () banked
  9546  0039FC  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9547  0039FE  CFF3 F026          	movff	prodl,___wmul@product
  9548  003A02  CFF4 F027          	movff	prodh,___wmul@product+1
  9549  003A06  0100               	movlb	0	; () banked
  9550  003A08  5175               	movf	___wmul@multiplier& (0+255),w,b
  9551  003A0A  0100               	movlb	0	; () banked
  9552  003A0C  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9553  003A0E  50F3               	movf	prodl,w,c
  9554  003A10  2627               	addwf	___wmul@product+1,f,c
  9555  003A12  0100               	movlb	0	; () banked
  9556  003A14  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9557  003A16  0100               	movlb	0	; () banked
  9558  003A18  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9559  003A1A  50F3               	movf	prodl,w,c
  9560  003A1C  2627               	addwf	___wmul@product+1,f,c
  9561                           
  9562                           ; BSR set to: 0
  9563  003A1E  C026  F075         	movff	___wmul@product,?___wmul
  9564  003A22  C027  F076         	movff	___wmul@product+1,?___wmul+1
  9565  003A26  0012               	return	
  9566  003A28                     __end_of___wmul:
  9567                           	opt stack 0
  9568                           tblptru	equ	0xFF8
  9569                           tblptrh	equ	0xFF7
  9570                           tblptrl	equ	0xFF6
  9571                           tablat	equ	0xFF5
  9572                           prodh	equ	0xFF4
  9573                           prodl	equ	0xFF3
  9574                           intcon	equ	0xFF2
  9575                           indf0	equ	0xFEF
  9576                           postinc0	equ	0xFEE
  9577                           fsr0h	equ	0xFEA
  9578                           fsr0l	equ	0xFE9
  9579                           wreg	equ	0xFE8
  9580                           indf1	equ	0xFE7
  9581                           postdec1	equ	0xFE5
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           fsr2h	equ	0xFDA
  9588                           fsr2l	equ	0xFD9
  9589                           status	equ	0xFD8
  9590                           
  9591 ;; *************** function ___ftmul *****************
  9592 ;; Defined at:
  9593 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  f1              3   25[BANK0 ] float 
  9596 ;;  f2              3   28[BANK0 ] float 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  f3_as_produc    3   35[BANK0 ] unsigned um
  9599 ;;  sign            1   39[BANK0 ] unsigned char 
  9600 ;;  cntr            1   38[BANK0 ] unsigned char 
  9601 ;;  exp             1   34[BANK0 ] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  3   25[BANK0 ] float 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9611 ;;      Params:         0       6       0       0       0       0       0
  9612 ;;      Locals:         0       6       0       0       0       0       0
  9613 ;;      Temps:          0       3       0       0       0       0       0
  9614 ;;      Totals:         0      15       0       0       0       0       0
  9615 ;;Total ram usage:       15 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    3
  9618 ;; This function calls:
  9619 ;;		___ftpack
  9620 ;; This function is called by:
  9621 ;;		_util_getBatteryVoltage
  9622 ;;		_util_getSolarCurrent
  9623 ;;		_util_getBatteryCurrent
  9624 ;;		_util_getTemperature
  9625 ;;		_fround
  9626 ;;		_scale
  9627 ;;		_sprintf
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text36
  9632  0027C8                     __ptext36:
  9633                           	opt stack 0
  9634  0027C8                     ___ftmul:
  9635                           	opt stack 25
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;incstack = 0
  9639  0027C8  C07B  F07F         	movff	___ftmul@f1+2,??___ftmul
  9640  0027CC  0100               	movlb	0	; () banked
  9641  0027CE  6B80               	clrf	(??___ftmul+1)& (0+255),b
  9642  0027D0  6B81               	clrf	(??___ftmul+2)& (0+255),b
  9643  0027D2  0100               	movlb	0	; () banked
  9644  0027D4  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9645  0027D6  0100               	movlb	0	; () banked
  9646  0027D8  377F               	rlcf	??___ftmul& (0+255),f,b
  9647  0027DA  E301               	bnc	u5021
  9648  0027DC  8180               	bsf	(??___ftmul+1)& (0+255),0,b
  9649  0027DE                     u5021:
  9650  0027DE  0100               	movlb	0	; () banked
  9651  0027E0  517F               	movf	??___ftmul& (0+255),w,b
  9652  0027E2  0100               	movlb	0	; () banked
  9653  0027E4  6F82               	movwf	___ftmul@exp& (0+255),b
  9654  0027E6  0100               	movlb	0	; () banked
  9655  0027E8  5182               	movf	___ftmul@exp& (0+255),w,b
  9656  0027EA  A4D8               	btfss	status,2,c
  9657  0027EC  D00A               	goto	l4860
  9658                           
  9659                           ; BSR set to: 0
  9660  0027EE  0E00               	movlw	0
  9661  0027F0  0100               	movlb	0	; () banked
  9662  0027F2  6F79               	movwf	?___ftmul& (0+255),b
  9663  0027F4  0E00               	movlw	0
  9664  0027F6  0100               	movlb	0	; () banked
  9665  0027F8  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  9666  0027FA  0E00               	movlw	0
  9667  0027FC  0100               	movlb	0	; () banked
  9668  0027FE  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  9669                           
  9670                           ; BSR set to: 0
  9671  002800  0012               	return	
  9672  002802                     l4860:
  9673                           
  9674                           ; BSR set to: 0
  9675  002802  C07E  F07F         	movff	___ftmul@f2+2,??___ftmul
  9676  002806  0100               	movlb	0	; () banked
  9677  002808  6B80               	clrf	(??___ftmul+1)& (0+255),b
  9678  00280A  6B81               	clrf	(??___ftmul+2)& (0+255),b
  9679  00280C  0100               	movlb	0	; () banked
  9680  00280E  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9681  002810  0100               	movlb	0	; () banked
  9682  002812  377F               	rlcf	??___ftmul& (0+255),f,b
  9683  002814  E301               	bnc	u5041
  9684  002816  8180               	bsf	(??___ftmul+1)& (0+255),0,b
  9685  002818                     u5041:
  9686  002818  0100               	movlb	0	; () banked
  9687  00281A  517F               	movf	??___ftmul& (0+255),w,b
  9688  00281C  0100               	movlb	0	; () banked
  9689  00281E  6F87               	movwf	___ftmul@sign& (0+255),b
  9690  002820  0100               	movlb	0	; () banked
  9691  002822  5187               	movf	___ftmul@sign& (0+255),w,b
  9692  002824  A4D8               	btfss	status,2,c
  9693  002826  D00A               	goto	l4866
  9694                           
  9695                           ; BSR set to: 0
  9696  002828  0E00               	movlw	0
  9697  00282A  0100               	movlb	0	; () banked
  9698  00282C  6F79               	movwf	?___ftmul& (0+255),b
  9699  00282E  0E00               	movlw	0
  9700  002830  0100               	movlb	0	; () banked
  9701  002832  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  9702  002834  0E00               	movlw	0
  9703  002836  0100               	movlb	0	; () banked
  9704  002838  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  9705                           
  9706                           ; BSR set to: 0
  9707  00283A  0012               	return	
  9708  00283C                     l4866:
  9709                           
  9710                           ; BSR set to: 0
  9711  00283C  0100               	movlb	0	; () banked
  9712  00283E  5187               	movf	___ftmul@sign& (0+255),w,b
  9713  002840  0F7B               	addlw	123
  9714  002842  0100               	movlb	0	; () banked
  9715  002844  2782               	addwf	___ftmul@exp& (0+255),f,b
  9716                           
  9717                           ; BSR set to: 0
  9718  002846  C07B  F087         	movff	___ftmul@f1+2,___ftmul@sign
  9719  00284A  0100               	movlb	0	; () banked
  9720  00284C  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9721  00284E  0100               	movlb	0	; () banked
  9722  002850  1B87               	xorwf	___ftmul@sign& (0+255),f,b
  9723  002852  0E80               	movlw	128
  9724  002854  0100               	movlb	0	; () banked
  9725  002856  1787               	andwf	___ftmul@sign& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  002858  0100               	movlb	0	; () banked
  9729  00285A  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9730                           
  9731                           ; BSR set to: 0
  9732  00285C  0100               	movlb	0	; () banked
  9733  00285E  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9734                           
  9735                           ; BSR set to: 0
  9736  002860  0EFF               	movlw	255
  9737  002862  0100               	movlb	0	; () banked
  9738  002864  177C               	andwf	___ftmul@f2& (0+255),f,b
  9739  002866  0EFF               	movlw	255
  9740  002868  0100               	movlb	0	; () banked
  9741  00286A  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9742  00286C  0E00               	movlw	0
  9743  00286E  0100               	movlb	0	; () banked
  9744  002870  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9745                           
  9746                           ; BSR set to: 0
  9747  002872  0E00               	movlw	0
  9748  002874  0100               	movlb	0	; () banked
  9749  002876  6F83               	movwf	___ftmul@f3_as_product& (0+255),b
  9750  002878  0E00               	movlw	0
  9751  00287A  0100               	movlb	0	; () banked
  9752  00287C  6F84               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9753  00287E  0E00               	movlw	0
  9754  002880  0100               	movlb	0	; () banked
  9755  002882  6F85               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9756                           
  9757                           ; BSR set to: 0
  9758  002884  0E07               	movlw	7
  9759  002886  0100               	movlb	0	; () banked
  9760  002888  6F86               	movwf	___ftmul@cntr& (0+255),b
  9761  00288A                     l4880:
  9762                           
  9763                           ; BSR set to: 0
  9764  00288A  0100               	movlb	0	; () banked
  9765  00288C  A179               	btfss	___ftmul@f1& (0+255),0,b
  9766  00288E  D00C               	goto	l4884
  9767                           
  9768                           ; BSR set to: 0
  9769  002890  0100               	movlb	0	; () banked
  9770  002892  517C               	movf	___ftmul@f2& (0+255),w,b
  9771  002894  0100               	movlb	0	; () banked
  9772  002896  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9773  002898  0100               	movlb	0	; () banked
  9774  00289A  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  9775  00289C  0100               	movlb	0	; () banked
  9776  00289E  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9777  0028A0  0100               	movlb	0	; () banked
  9778  0028A2  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9779  0028A4  0100               	movlb	0	; () banked
  9780  0028A6  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9781  0028A8                     l4884:
  9782                           
  9783                           ; BSR set to: 0
  9784  0028A8  0100               	movlb	0	; () banked
  9785  0028AA  90D8               	bcf	status,0,c
  9786  0028AC  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9787  0028AE  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9788  0028B0  3379               	rrcf	___ftmul@f1& (0+255),f,b
  9789  0028B2  0100               	movlb	0	; () banked
  9790  0028B4  90D8               	bcf	status,0,c
  9791  0028B6  377C               	rlcf	___ftmul@f2& (0+255),f,b
  9792  0028B8  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9793  0028BA  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  0028BC  0100               	movlb	0	; () banked
  9797  0028BE  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
  9798  0028C0  D7E4               	goto	l4880
  9799                           
  9800                           ; BSR set to: 0
  9801                           
  9802                           ; BSR set to: 0
  9803  0028C2  0E09               	movlw	9
  9804  0028C4  0100               	movlb	0	; () banked
  9805  0028C6  6F86               	movwf	___ftmul@cntr& (0+255),b
  9806  0028C8                     l4890:
  9807                           
  9808                           ; BSR set to: 0
  9809  0028C8  0100               	movlb	0	; () banked
  9810  0028CA  A179               	btfss	___ftmul@f1& (0+255),0,b
  9811  0028CC  D00C               	goto	l4894
  9812                           
  9813                           ; BSR set to: 0
  9814  0028CE  0100               	movlb	0	; () banked
  9815  0028D0  517C               	movf	___ftmul@f2& (0+255),w,b
  9816  0028D2  0100               	movlb	0	; () banked
  9817  0028D4  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9818  0028D6  0100               	movlb	0	; () banked
  9819  0028D8  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  9820  0028DA  0100               	movlb	0	; () banked
  9821  0028DC  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9822  0028DE  0100               	movlb	0	; () banked
  9823  0028E0  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9824  0028E2  0100               	movlb	0	; () banked
  9825  0028E4  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9826  0028E6                     l4894:
  9827                           
  9828                           ; BSR set to: 0
  9829  0028E6  0100               	movlb	0	; () banked
  9830  0028E8  90D8               	bcf	status,0,c
  9831  0028EA  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9832  0028EC  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9833  0028EE  3379               	rrcf	___ftmul@f1& (0+255),f,b
  9834  0028F0  0100               	movlb	0	; () banked
  9835  0028F2  90D8               	bcf	status,0,c
  9836  0028F4  3385               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9837  0028F6  3384               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9838  0028F8  3383               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9839                           
  9840                           ; BSR set to: 0
  9841  0028FA  0100               	movlb	0	; () banked
  9842  0028FC  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
  9843  0028FE  D7E4               	goto	l4890
  9844                           
  9845                           ; BSR set to: 0
  9846                           
  9847                           ; BSR set to: 0
  9848  002900  C083  F01C         	movff	___ftmul@f3_as_product,___ftpack@arg
  9849  002904  C084  F01D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9850  002908  C085  F01E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9851  00290C  C082  F01F         	movff	___ftmul@exp,___ftpack@exp
  9852  002910  C087  F020         	movff	___ftmul@sign,___ftpack@sign
  9853  002914  EC6B  F019         	call	___ftpack	;wreg free
  9854  002918  C01C  F079         	movff	?___ftpack,?___ftmul
  9855  00291C  C01D  F07A         	movff	?___ftpack+1,?___ftmul+1
  9856  002920  C01E  F07B         	movff	?___ftpack+2,?___ftmul+2
  9857  002924  0012               	return	
  9858  002926                     __end_of___ftmul:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           indf0	equ	0xFEF
  9868                           postinc0	equ	0xFEE
  9869                           fsr0h	equ	0xFEA
  9870                           fsr0l	equ	0xFE9
  9871                           wreg	equ	0xFE8
  9872                           indf1	equ	0xFE7
  9873                           postdec1	equ	0xFE5
  9874                           fsr1h	equ	0xFE2
  9875                           fsr1l	equ	0xFE1
  9876                           indf2	equ	0xFDF
  9877                           postinc2	equ	0xFDE
  9878                           postdec2	equ	0xFDD
  9879                           fsr2h	equ	0xFDA
  9880                           fsr2l	equ	0xFD9
  9881                           status	equ	0xFD8
  9882                           
  9883 ;; *************** function ___awmod *****************
  9884 ;; Defined at:
  9885 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;  dividend        2   27[COMRAM] int 
  9888 ;;  divisor         2   29[COMRAM] int 
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  sign            1   32[COMRAM] unsigned char 
  9891 ;;  counter         1   31[COMRAM] unsigned char 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  2   27[COMRAM] int 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9901 ;;      Params:         4       0       0       0       0       0       0
  9902 ;;      Locals:         2       0       0       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0       0       0
  9904 ;;      Totals:         6       0       0       0       0       0       0
  9905 ;;Total ram usage:        6 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:    2
  9908 ;; This function calls:
  9909 ;;		Nothing
  9910 ;; This function is called by:
  9911 ;;		_fround
  9912 ;;		_scale
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text37
  9917  0035DC                     __ptext37:
  9918                           	opt stack 0
  9919  0035DC                     ___awmod:
  9920                           	opt stack 24
  9921                           
  9922                           ;incstack = 0
  9923  0035DC  0E00               	movlw	0
  9924  0035DE  6E21               	movwf	___awmod@sign,c
  9925  0035E0  AE1D               	btfss	___awmod@dividend+1,7,c
  9926  0035E2  D006               	goto	l3342
  9927  0035E4  6C1C               	negf	___awmod@dividend,c
  9928  0035E6  1E1D               	comf	___awmod@dividend+1,f,c
  9929  0035E8  B0D8               	btfsc	status,0,c
  9930  0035EA  2A1D               	incf	___awmod@dividend+1,f,c
  9931  0035EC  0E01               	movlw	1
  9932  0035EE  6E21               	movwf	___awmod@sign,c
  9933  0035F0                     l3342:
  9934  0035F0  AE1F               	btfss	___awmod@divisor+1,7,c
  9935  0035F2  D004               	goto	l3346
  9936  0035F4  6C1E               	negf	___awmod@divisor,c
  9937  0035F6  1E1F               	comf	___awmod@divisor+1,f,c
  9938  0035F8  B0D8               	btfsc	status,0,c
  9939  0035FA  2A1F               	incf	___awmod@divisor+1,f,c
  9940  0035FC                     l3346:
  9941  0035FC  501E               	movf	___awmod@divisor,w,c
  9942  0035FE  101F               	iorwf	___awmod@divisor+1,w,c
  9943  003600  B4D8               	btfsc	status,2,c
  9944  003602  D018               	goto	l3362
  9945  003604  0E01               	movlw	1
  9946  003606  6E20               	movwf	___awmod@counter,c
  9947  003608  D004               	goto	l3352
  9948  00360A                     l3350:
  9949  00360A  90D8               	bcf	status,0,c
  9950  00360C  361E               	rlcf	___awmod@divisor,f,c
  9951  00360E  361F               	rlcf	___awmod@divisor+1,f,c
  9952  003610  2A20               	incf	___awmod@counter,f,c
  9953  003612                     l3352:
  9954  003612  AE1F               	btfss	___awmod@divisor+1,7,c
  9955  003614  D7FA               	goto	l3350
  9956  003616                     l3354:
  9957  003616  501E               	movf	___awmod@divisor,w,c
  9958  003618  5C1C               	subwf	___awmod@dividend,w,c
  9959  00361A  501F               	movf	___awmod@divisor+1,w,c
  9960  00361C  581D               	subwfb	___awmod@dividend+1,w,c
  9961  00361E  A0D8               	btfss	status,0,c
  9962  003620  D004               	goto	l3358
  9963  003622  501E               	movf	___awmod@divisor,w,c
  9964  003624  5E1C               	subwf	___awmod@dividend,f,c
  9965  003626  501F               	movf	___awmod@divisor+1,w,c
  9966  003628  5A1D               	subwfb	___awmod@dividend+1,f,c
  9967  00362A                     l3358:
  9968  00362A  90D8               	bcf	status,0,c
  9969  00362C  321F               	rrcf	___awmod@divisor+1,f,c
  9970  00362E  321E               	rrcf	___awmod@divisor,f,c
  9971  003630  2E20               	decfsz	___awmod@counter,f,c
  9972  003632  D7F1               	goto	l3354
  9973  003634                     l3362:
  9974  003634  5021               	movf	___awmod@sign,w,c
  9975  003636  B4D8               	btfsc	status,2,c
  9976  003638  D004               	goto	l3366
  9977  00363A  6C1C               	negf	___awmod@dividend,c
  9978  00363C  1E1D               	comf	___awmod@dividend+1,f,c
  9979  00363E  B0D8               	btfsc	status,0,c
  9980  003640  2A1D               	incf	___awmod@dividend+1,f,c
  9981  003642                     l3366:
  9982  003642  C01C  F01C         	movff	___awmod@dividend,?___awmod
  9983  003646  C01D  F01D         	movff	___awmod@dividend+1,?___awmod+1
  9984  00364A  0012               	return	
  9985  00364C                     __end_of___awmod:
  9986                           	opt stack 0
  9987                           tblptru	equ	0xFF8
  9988                           tblptrh	equ	0xFF7
  9989                           tblptrl	equ	0xFF6
  9990                           tablat	equ	0xFF5
  9991                           prodh	equ	0xFF4
  9992                           prodl	equ	0xFF3
  9993                           intcon	equ	0xFF2
  9994                           indf0	equ	0xFEF
  9995                           postinc0	equ	0xFEE
  9996                           fsr0h	equ	0xFEA
  9997                           fsr0l	equ	0xFE9
  9998                           wreg	equ	0xFE8
  9999                           indf1	equ	0xFE7
 10000                           postdec1	equ	0xFE5
 10001                           fsr1h	equ	0xFE2
 10002                           fsr1l	equ	0xFE1
 10003                           indf2	equ	0xFDF
 10004                           postinc2	equ	0xFDE
 10005                           postdec2	equ	0xFDD
 10006                           fsr2h	equ	0xFDA
 10007                           fsr2l	equ	0xFD9
 10008                           status	equ	0xFD8
 10009                           
 10010 ;; *************** function ___awdiv *****************
 10011 ;; Defined at:
 10012 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  dividend        2   17[BANK0 ] int 
 10015 ;;  divisor         2   19[BANK0 ] int 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  quotient        2   35[COMRAM] int 
 10018 ;;  sign            1   34[COMRAM] unsigned char 
 10019 ;;  counter         1   33[COMRAM] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  2   17[BANK0 ] int 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10029 ;;      Params:         0       4       0       0       0       0       0
 10030 ;;      Locals:         4       0       0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0
 10032 ;;      Totals:         4       4       0       0       0       0       0
 10033 ;;Total ram usage:        8 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    2
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_fround
 10040 ;;		_scale
 10041 ;;		_sprintf
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text38
 10046  003384                     __ptext38:
 10047                           	opt stack 0
 10048  003384                     ___awdiv:
 10049                           	opt stack 24
 10050                           
 10051                           ;incstack = 0
 10052  003384  0E00               	movlw	0
 10053  003386  6E23               	movwf	___awdiv@sign,c
 10054  003388  0100               	movlb	0	; () banked
 10055  00338A  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10056  00338C  D007               	goto	l4910
 10057                           
 10058                           ; BSR set to: 0
 10059  00338E  0100               	movlb	0	; () banked
 10060  003390  6D73               	negf	___awdiv@divisor& (0+255),b
 10061  003392  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10062  003394  B0D8               	btfsc	status,0,c
 10063  003396  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066  003398  0E01               	movlw	1
 10067  00339A  6E23               	movwf	___awdiv@sign,c
 10068  00339C                     l4910:
 10069                           
 10070                           ; BSR set to: 0
 10071  00339C  0100               	movlb	0	; () banked
 10072  00339E  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10073  0033A0  D007               	goto	l4916
 10074                           
 10075                           ; BSR set to: 0
 10076  0033A2  0100               	movlb	0	; () banked
 10077  0033A4  6D71               	negf	___awdiv@dividend& (0+255),b
 10078  0033A6  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10079  0033A8  B0D8               	btfsc	status,0,c
 10080  0033AA  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10081                           
 10082                           ; BSR set to: 0
 10083  0033AC  0E01               	movlw	1
 10084  0033AE  1A23               	xorwf	___awdiv@sign,f,c
 10085  0033B0                     l4916:
 10086                           
 10087                           ; BSR set to: 0
 10088  0033B0  0E00               	movlw	0
 10089  0033B2  6E25               	movwf	___awdiv@quotient+1,c
 10090  0033B4  0E00               	movlw	0
 10091  0033B6  6E24               	movwf	___awdiv@quotient,c
 10092                           
 10093                           ; BSR set to: 0
 10094  0033B8  0100               	movlb	0	; () banked
 10095  0033BA  5173               	movf	___awdiv@divisor& (0+255),w,b
 10096  0033BC  0100               	movlb	0	; () banked
 10097  0033BE  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10098  0033C0  B4D8               	btfsc	status,2,c
 10099  0033C2  D027               	goto	l4938
 10100                           
 10101                           ; BSR set to: 0
 10102  0033C4  0E01               	movlw	1
 10103  0033C6  6E22               	movwf	___awdiv@counter,c
 10104  0033C8  D005               	goto	l4924
 10105  0033CA                     l4922:
 10106                           
 10107                           ; BSR set to: 0
 10108  0033CA  0100               	movlb	0	; () banked
 10109  0033CC  90D8               	bcf	status,0,c
 10110  0033CE  3773               	rlcf	___awdiv@divisor& (0+255),f,b
 10111  0033D0  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10112  0033D2  2A22               	incf	___awdiv@counter,f,c
 10113  0033D4                     l4924:
 10114                           
 10115                           ; BSR set to: 0
 10116  0033D4  0100               	movlb	0	; () banked
 10117  0033D6  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10118  0033D8  D7F8               	goto	l4922
 10119  0033DA                     l4926:
 10120                           
 10121                           ; BSR set to: 0
 10122  0033DA  90D8               	bcf	status,0,c
 10123  0033DC  3624               	rlcf	___awdiv@quotient,f,c
 10124  0033DE  3625               	rlcf	___awdiv@quotient+1,f,c
 10125                           
 10126                           ; BSR set to: 0
 10127  0033E0  0100               	movlb	0	; () banked
 10128  0033E2  5173               	movf	___awdiv@divisor& (0+255),w,b
 10129  0033E4  0100               	movlb	0	; () banked
 10130  0033E6  5D71               	subwf	___awdiv@dividend& (0+255),w,b
 10131  0033E8  0100               	movlb	0	; () banked
 10132  0033EA  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10133  0033EC  0100               	movlb	0	; () banked
 10134  0033EE  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10135  0033F0  A0D8               	btfss	status,0,c
 10136  0033F2  D009               	goto	l4934
 10137                           
 10138                           ; BSR set to: 0
 10139  0033F4  0100               	movlb	0	; () banked
 10140  0033F6  5173               	movf	___awdiv@divisor& (0+255),w,b
 10141  0033F8  0100               	movlb	0	; () banked
 10142  0033FA  5F71               	subwf	___awdiv@dividend& (0+255),f,b
 10143  0033FC  0100               	movlb	0	; () banked
 10144  0033FE  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10145  003400  0100               	movlb	0	; () banked
 10146  003402  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10147                           
 10148                           ; BSR set to: 0
 10149  003404  8024               	bsf	___awdiv@quotient,0,c
 10150  003406                     l4934:
 10151                           
 10152                           ; BSR set to: 0
 10153  003406  0100               	movlb	0	; () banked
 10154  003408  90D8               	bcf	status,0,c
 10155  00340A  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10156  00340C  3373               	rrcf	___awdiv@divisor& (0+255),f,b
 10157                           
 10158                           ; BSR set to: 0
 10159  00340E  2E22               	decfsz	___awdiv@counter,f,c
 10160  003410  D7E4               	goto	l4926
 10161  003412                     l4938:
 10162                           
 10163                           ; BSR set to: 0
 10164  003412  5023               	movf	___awdiv@sign,w,c
 10165  003414  B4D8               	btfsc	status,2,c
 10166  003416  D004               	goto	l4942
 10167                           
 10168                           ; BSR set to: 0
 10169  003418  6C24               	negf	___awdiv@quotient,c
 10170  00341A  1E25               	comf	___awdiv@quotient+1,f,c
 10171  00341C  B0D8               	btfsc	status,0,c
 10172  00341E  2A25               	incf	___awdiv@quotient+1,f,c
 10173  003420                     l4942:
 10174                           
 10175                           ; BSR set to: 0
 10176  003420  C024  F071         	movff	___awdiv@quotient,?___awdiv
 10177  003424  C025  F072         	movff	___awdiv@quotient+1,?___awdiv+1
 10178  003428  0012               	return	
 10179  00342A                     __end_of___awdiv:
 10180                           	opt stack 0
 10181                           tblptru	equ	0xFF8
 10182                           tblptrh	equ	0xFF7
 10183                           tblptrl	equ	0xFF6
 10184                           tablat	equ	0xFF5
 10185                           prodh	equ	0xFF4
 10186                           prodl	equ	0xFF3
 10187                           intcon	equ	0xFF2
 10188                           indf0	equ	0xFEF
 10189                           postinc0	equ	0xFEE
 10190                           fsr0h	equ	0xFEA
 10191                           fsr0l	equ	0xFE9
 10192                           wreg	equ	0xFE8
 10193                           indf1	equ	0xFE7
 10194                           postdec1	equ	0xFE5
 10195                           fsr1h	equ	0xFE2
 10196                           fsr1l	equ	0xFE1
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           postdec2	equ	0xFDD
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function __tdiv_to_l_ *****************
 10205 ;; Defined at:
 10206 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  f1              3   27[COMRAM] float 
 10209 ;;  f2              3   30[COMRAM] float 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  quot            4   17[BANK0 ] unsigned long 
 10212 ;;  exp1            1   22[BANK0 ] unsigned char 
 10213 ;;  cntr            1   21[BANK0 ] unsigned char 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  4   27[COMRAM] unsigned long 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10223 ;;      Params:         6       0       0       0       0       0       0
 10224 ;;      Locals:         0       6       0       0       0       0       0
 10225 ;;      Temps:          3       0       0       0       0       0       0
 10226 ;;      Totals:         9       6       0       0       0       0       0
 10227 ;;Total ram usage:       15 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    2
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_sprintf
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text39
 10238  002926                     __ptext39:
 10239                           	opt stack 0
 10240  002926                     __tdiv_to_l_:
 10241                           	opt stack 25
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;incstack = 0
 10245  002926  C01E  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10246  00292A  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10247  00292C  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10248  00292E  341D               	rlcf	__tdiv_to_l_@f1+1,w,c
 10249  002930  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10250  002932  E301               	bnc	u5251
 10251  002934  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10252  002936                     u5251:
 10253  002936  5022               	movf	??__tdiv_to_l_,w,c
 10254  002938  0100               	movlb	0	; () banked
 10255  00293A  6F76               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10256  00293C  0100               	movlb	0	; () banked
 10257  00293E  5176               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10258  002940  A4D8               	btfss	status,2,c
 10259  002942  D009               	goto	l5050
 10260                           
 10261                           ; BSR set to: 0
 10262  002944  0E00               	movlw	0
 10263  002946  6E1C               	movwf	?__tdiv_to_l_,c
 10264  002948  0E00               	movlw	0
 10265  00294A  6E1D               	movwf	?__tdiv_to_l_+1,c
 10266  00294C  0E00               	movlw	0
 10267  00294E  6E1E               	movwf	?__tdiv_to_l_+2,c
 10268  002950  0E00               	movlw	0
 10269  002952  6E1F               	movwf	?__tdiv_to_l_+3,c
 10270                           
 10271                           ; BSR set to: 0
 10272  002954  0012               	return	
 10273  002956                     l5050:
 10274                           
 10275                           ; BSR set to: 0
 10276  002956  C021  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10277  00295A  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10278  00295C  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10279  00295E  3420               	rlcf	__tdiv_to_l_@f2+1,w,c
 10280  002960  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10281  002962  E301               	bnc	u5271
 10282  002964  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10283  002966                     u5271:
 10284  002966  5022               	movf	??__tdiv_to_l_,w,c
 10285  002968  0100               	movlb	0	; () banked
 10286  00296A  6F75               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10287  00296C  0100               	movlb	0	; () banked
 10288  00296E  5175               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10289  002970  A4D8               	btfss	status,2,c
 10290  002972  D009               	goto	l5056
 10291                           
 10292                           ; BSR set to: 0
 10293  002974  0E00               	movlw	0
 10294  002976  6E1C               	movwf	?__tdiv_to_l_,c
 10295  002978  0E00               	movlw	0
 10296  00297A  6E1D               	movwf	?__tdiv_to_l_+1,c
 10297  00297C  0E00               	movlw	0
 10298  00297E  6E1E               	movwf	?__tdiv_to_l_+2,c
 10299  002980  0E00               	movlw	0
 10300  002982  6E1F               	movwf	?__tdiv_to_l_+3,c
 10301                           
 10302                           ; BSR set to: 0
 10303  002984  0012               	return	
 10304  002986                     l5056:
 10305                           
 10306                           ; BSR set to: 0
 10307  002986  8E1D               	bsf	__tdiv_to_l_@f1+1,7,c
 10308                           
 10309                           ; BSR set to: 0
 10310  002988  0EFF               	movlw	255
 10311  00298A  161C               	andwf	__tdiv_to_l_@f1,f,c
 10312  00298C  0EFF               	movlw	255
 10313  00298E  161D               	andwf	__tdiv_to_l_@f1+1,f,c
 10314  002990  0E00               	movlw	0
 10315  002992  161E               	andwf	__tdiv_to_l_@f1+2,f,c
 10316  002994  8E20               	bsf	__tdiv_to_l_@f2+1,7,c
 10317                           
 10318                           ; BSR set to: 0
 10319  002996  0EFF               	movlw	255
 10320  002998  161F               	andwf	__tdiv_to_l_@f2,f,c
 10321  00299A  0EFF               	movlw	255
 10322  00299C  1620               	andwf	__tdiv_to_l_@f2+1,f,c
 10323  00299E  0E00               	movlw	0
 10324  0029A0  1621               	andwf	__tdiv_to_l_@f2+2,f,c
 10325                           
 10326                           ; BSR set to: 0
 10327  0029A2  0E00               	movlw	0
 10328  0029A4  0100               	movlb	0	; () banked
 10329  0029A6  6F71               	movwf	__tdiv_to_l_@quot& (0+255),b
 10330  0029A8  0E00               	movlw	0
 10331  0029AA  6F72               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10332  0029AC  0E00               	movlw	0
 10333  0029AE  6F73               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10334  0029B0  0E00               	movlw	0
 10335  0029B2  6F74               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10336                           
 10337                           ; BSR set to: 0
 10338  0029B4  0E7F               	movlw	127
 10339  0029B6  0100               	movlb	0	; () banked
 10340  0029B8  5F76               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10341                           
 10342                           ; BSR set to: 0
 10343  0029BA  0100               	movlb	0	; () banked
 10344  0029BC  5175               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10345  0029BE  0F98               	addlw	152
 10346  0029C0  0100               	movlb	0	; () banked
 10347  0029C2  5F76               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10348                           
 10349                           ; BSR set to: 0
 10350  0029C4  0E18               	movlw	24
 10351  0029C6  0100               	movlb	0	; () banked
 10352  0029C8  6F75               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10353  0029CA                     l905:
 10354                           
 10355                           ; BSR set to: 0
 10356  0029CA  0100               	movlb	0	; () banked
 10357  0029CC  90D8               	bcf	status,0,c
 10358  0029CE  3771               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10359  0029D0  3772               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10360  0029D2  3773               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10361  0029D4  3774               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10362                           
 10363                           ; BSR set to: 0
 10364  0029D6  501F               	movf	__tdiv_to_l_@f2,w,c
 10365  0029D8  5C1C               	subwf	__tdiv_to_l_@f1,w,c
 10366  0029DA  5020               	movf	__tdiv_to_l_@f2+1,w,c
 10367  0029DC  581D               	subwfb	__tdiv_to_l_@f1+1,w,c
 10368  0029DE  5021               	movf	__tdiv_to_l_@f2+2,w,c
 10369  0029E0  581E               	subwfb	__tdiv_to_l_@f1+2,w,c
 10370  0029E2  A0D8               	btfss	status,0,c
 10371  0029E4  D008               	goto	l906
 10372                           
 10373                           ; BSR set to: 0
 10374  0029E6  501F               	movf	__tdiv_to_l_@f2,w,c
 10375  0029E8  5E1C               	subwf	__tdiv_to_l_@f1,f,c
 10376  0029EA  5020               	movf	__tdiv_to_l_@f2+1,w,c
 10377  0029EC  5A1D               	subwfb	__tdiv_to_l_@f1+1,f,c
 10378  0029EE  5021               	movf	__tdiv_to_l_@f2+2,w,c
 10379  0029F0  5A1E               	subwfb	__tdiv_to_l_@f1+2,f,c
 10380                           
 10381                           ; BSR set to: 0
 10382  0029F2  0100               	movlb	0	; () banked
 10383  0029F4  8171               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10384  0029F6                     l906:
 10385                           
 10386                           ; BSR set to: 0
 10387  0029F6  90D8               	bcf	status,0,c
 10388  0029F8  361C               	rlcf	__tdiv_to_l_@f1,f,c
 10389  0029FA  361D               	rlcf	__tdiv_to_l_@f1+1,f,c
 10390  0029FC  361E               	rlcf	__tdiv_to_l_@f1+2,f,c
 10391                           
 10392                           ; BSR set to: 0
 10393  0029FE  0100               	movlb	0	; () banked
 10394  002A00  2F75               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10395  002A02  D7E3               	goto	l905
 10396                           
 10397                           ; BSR set to: 0
 10398                           
 10399                           ; BSR set to: 0
 10400  002A04  0100               	movlb	0	; () banked
 10401  002A06  AF76               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10402  002A08  D019               	goto	l5090
 10403                           
 10404                           ; BSR set to: 0
 10405  002A0A  0100               	movlb	0	; () banked
 10406  002A0C  5176               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10407  002A0E  0A80               	xorlw	128
 10408  002A10  0F97               	addlw	151
 10409  002A12  B0D8               	btfsc	status,0,c
 10410  002A14  D009               	goto	l5086
 10411                           
 10412                           ; BSR set to: 0
 10413  002A16  0E00               	movlw	0
 10414  002A18  6E1C               	movwf	?__tdiv_to_l_,c
 10415  002A1A  0E00               	movlw	0
 10416  002A1C  6E1D               	movwf	?__tdiv_to_l_+1,c
 10417  002A1E  0E00               	movlw	0
 10418  002A20  6E1E               	movwf	?__tdiv_to_l_+2,c
 10419  002A22  0E00               	movlw	0
 10420  002A24  6E1F               	movwf	?__tdiv_to_l_+3,c
 10421                           
 10422                           ; BSR set to: 0
 10423  002A26  0012               	return	
 10424  002A28                     l5086:
 10425                           
 10426                           ; BSR set to: 0
 10427  002A28  0100               	movlb	0	; () banked
 10428  002A2A  90D8               	bcf	status,0,c
 10429  002A2C  3374               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10430  002A2E  3373               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10431  002A30  3372               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10432  002A32  3371               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10433                           
 10434                           ; BSR set to: 0
 10435  002A34  0100               	movlb	0	; () banked
 10436  002A36  3F76               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10437  002A38  D7F7               	goto	l5086
 10438                           
 10439                           ; BSR set to: 0
 10440  002A3A  D01A               	goto	l912
 10441  002A3C                     l5090:
 10442                           
 10443                           ; BSR set to: 0
 10444  002A3C  0E17               	movlw	23
 10445  002A3E  0100               	movlb	0	; () banked
 10446  002A40  6576               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10447  002A42  D011               	goto	l5098
 10448                           
 10449                           ; BSR set to: 0
 10450  002A44  0E00               	movlw	0
 10451  002A46  6E1C               	movwf	?__tdiv_to_l_,c
 10452  002A48  0E00               	movlw	0
 10453  002A4A  6E1D               	movwf	?__tdiv_to_l_+1,c
 10454  002A4C  0E00               	movlw	0
 10455  002A4E  6E1E               	movwf	?__tdiv_to_l_+2,c
 10456  002A50  0E00               	movlw	0
 10457  002A52  6E1F               	movwf	?__tdiv_to_l_+3,c
 10458                           
 10459                           ; BSR set to: 0
 10460  002A54  0012               	return	
 10461  002A56                     l5096:
 10462                           
 10463                           ; BSR set to: 0
 10464  002A56  0100               	movlb	0	; () banked
 10465  002A58  90D8               	bcf	status,0,c
 10466  002A5A  3771               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10467  002A5C  3772               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10468  002A5E  3773               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10469  002A60  3774               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10470  002A62  0100               	movlb	0	; () banked
 10471  002A64  0776               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10472  002A66                     l5098:
 10473                           
 10474                           ; BSR set to: 0
 10475  002A66  0100               	movlb	0	; () banked
 10476  002A68  5176               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10477  002A6A  0100               	movlb	0	; () banked
 10478  002A6C  A4D8               	btfss	status,2,c
 10479  002A6E  D7F3               	goto	l5096
 10480  002A70                     l912:
 10481                           
 10482                           ; BSR set to: 0
 10483  002A70  C071  F01C         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10484  002A74  C072  F01D         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10485  002A78  C073  F01E         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10486  002A7C  C074  F01F         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10487                           
 10488                           ; BSR set to: 0
 10489  002A80  0012               	return		;funcret
 10490  002A82                     __end_of__tdiv_to_l_:
 10491                           	opt stack 0
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           indf0	equ	0xFEF
 10500                           postinc0	equ	0xFEE
 10501                           fsr0h	equ	0xFEA
 10502                           fsr0l	equ	0xFE9
 10503                           wreg	equ	0xFE8
 10504                           indf1	equ	0xFE7
 10505                           postdec1	equ	0xFE5
 10506                           fsr1h	equ	0xFE2
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function __div_to_l_ *****************
 10516 ;; Defined at:
 10517 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  f1              3   27[COMRAM] unsigned long 
 10520 ;;  f2              3   30[COMRAM] unsigned long 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  quot            4   33[COMRAM] unsigned long 
 10523 ;;  exp1            1   38[COMRAM] unsigned char 
 10524 ;;  cntr            1   37[COMRAM] unsigned char 
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  4   27[COMRAM] unsigned long 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2, status,0
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10534 ;;      Params:         6       0       0       0       0       0       0
 10535 ;;      Locals:         6       0       0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0
 10537 ;;      Totals:        12       0       0       0       0       0       0
 10538 ;;Total ram usage:       12 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; Hardware stack levels required when called:    2
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_sprintf
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text40
 10549  002D06                     __ptext40:
 10550                           	opt stack 0
 10551  002D06                     __div_to_l_:
 10552                           	opt stack 25
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;incstack = 0
 10556  002D06  341E               	rlcf	__div_to_l_@f1+2,w,c
 10557  002D08  341F               	rlcf	__div_to_l_@f1+3,w,c
 10558  002D0A  6E27               	movwf	__div_to_l_@exp1,c
 10559  002D0C  5027               	movf	__div_to_l_@exp1,w,c
 10560  002D0E  A4D8               	btfss	status,2,c
 10561  002D10  D009               	goto	l5106
 10562  002D12  0E00               	movlw	0
 10563  002D14  6E1C               	movwf	?__div_to_l_,c
 10564  002D16  0E00               	movlw	0
 10565  002D18  6E1D               	movwf	?__div_to_l_+1,c
 10566  002D1A  0E00               	movlw	0
 10567  002D1C  6E1E               	movwf	?__div_to_l_+2,c
 10568  002D1E  0E00               	movlw	0
 10569  002D20  6E1F               	movwf	?__div_to_l_+3,c
 10570  002D22  0012               	return	
 10571  002D24                     l5106:
 10572  002D24  3421               	rlcf	__div_to_l_@f2+2,w,c
 10573  002D26  3422               	rlcf	__div_to_l_@f2+3,w,c
 10574  002D28  6E26               	movwf	__div_to_l_@cntr,c
 10575  002D2A  5026               	movf	__div_to_l_@cntr,w,c
 10576  002D2C  A4D8               	btfss	status,2,c
 10577  002D2E  D009               	goto	l5112
 10578  002D30  0E00               	movlw	0
 10579  002D32  6E1C               	movwf	?__div_to_l_,c
 10580  002D34  0E00               	movlw	0
 10581  002D36  6E1D               	movwf	?__div_to_l_+1,c
 10582  002D38  0E00               	movlw	0
 10583  002D3A  6E1E               	movwf	?__div_to_l_+2,c
 10584  002D3C  0E00               	movlw	0
 10585  002D3E  6E1F               	movwf	?__div_to_l_+3,c
 10586  002D40  0012               	return	
 10587  002D42                     l5112:
 10588  002D42  8E1E               	bsf	__div_to_l_@f1+2,7,c
 10589  002D44  0EFF               	movlw	255
 10590  002D46  161C               	andwf	__div_to_l_@f1,f,c
 10591  002D48  0EFF               	movlw	255
 10592  002D4A  161D               	andwf	__div_to_l_@f1+1,f,c
 10593  002D4C  0EFF               	movlw	255
 10594  002D4E  161E               	andwf	__div_to_l_@f1+2,f,c
 10595  002D50  0E00               	movlw	0
 10596  002D52  161F               	andwf	__div_to_l_@f1+3,f,c
 10597  002D54  8E21               	bsf	__div_to_l_@f2+2,7,c
 10598  002D56  0EFF               	movlw	255
 10599  002D58  161F               	andwf	__div_to_l_@f2,f,c
 10600  002D5A  0EFF               	movlw	255
 10601  002D5C  1620               	andwf	__div_to_l_@f2+1,f,c
 10602  002D5E  0EFF               	movlw	255
 10603  002D60  1621               	andwf	__div_to_l_@f2+2,f,c
 10604  002D62  0E00               	movlw	0
 10605  002D64  1622               	andwf	__div_to_l_@f2+3,f,c
 10606  002D66  0E00               	movlw	0
 10607  002D68  6E22               	movwf	__div_to_l_@quot,c
 10608  002D6A  0E00               	movlw	0
 10609  002D6C  6E23               	movwf	__div_to_l_@quot+1,c
 10610  002D6E  0E00               	movlw	0
 10611  002D70  6E24               	movwf	__div_to_l_@quot+2,c
 10612  002D72  0E00               	movlw	0
 10613  002D74  6E25               	movwf	__div_to_l_@quot+3,c
 10614  002D76  0E7F               	movlw	127
 10615  002D78  5E27               	subwf	__div_to_l_@exp1,f,c
 10616  002D7A  5026               	movf	__div_to_l_@cntr,w,c
 10617  002D7C  0FA0               	addlw	160
 10618  002D7E  5E27               	subwf	__div_to_l_@exp1,f,c
 10619  002D80  0E20               	movlw	32
 10620  002D82  6E26               	movwf	__div_to_l_@cntr,c
 10621  002D84                     l5126:
 10622  002D84  90D8               	bcf	status,0,c
 10623  002D86  3622               	rlcf	__div_to_l_@quot,f,c
 10624  002D88  3623               	rlcf	__div_to_l_@quot+1,f,c
 10625  002D8A  3624               	rlcf	__div_to_l_@quot+2,f,c
 10626  002D8C  3625               	rlcf	__div_to_l_@quot+3,f,c
 10627  002D8E  501F               	movf	__div_to_l_@f2,w,c
 10628  002D90  5C1C               	subwf	__div_to_l_@f1,w,c
 10629  002D92  5020               	movf	__div_to_l_@f2+1,w,c
 10630  002D94  581D               	subwfb	__div_to_l_@f1+1,w,c
 10631  002D96  5021               	movf	__div_to_l_@f2+2,w,c
 10632  002D98  581E               	subwfb	__div_to_l_@f1+2,w,c
 10633  002D9A  5022               	movf	__div_to_l_@f2+3,w,c
 10634  002D9C  581F               	subwfb	__div_to_l_@f1+3,w,c
 10635  002D9E  A0D8               	btfss	status,0,c
 10636  002DA0  D009               	goto	l5134
 10637  002DA2  501F               	movf	__div_to_l_@f2,w,c
 10638  002DA4  5E1C               	subwf	__div_to_l_@f1,f,c
 10639  002DA6  5020               	movf	__div_to_l_@f2+1,w,c
 10640  002DA8  5A1D               	subwfb	__div_to_l_@f1+1,f,c
 10641  002DAA  5021               	movf	__div_to_l_@f2+2,w,c
 10642  002DAC  5A1E               	subwfb	__div_to_l_@f1+2,f,c
 10643  002DAE  5022               	movf	__div_to_l_@f2+3,w,c
 10644  002DB0  5A1F               	subwfb	__div_to_l_@f1+3,f,c
 10645  002DB2  8022               	bsf	__div_to_l_@quot,0,c
 10646  002DB4                     l5134:
 10647  002DB4  90D8               	bcf	status,0,c
 10648  002DB6  361C               	rlcf	__div_to_l_@f1,f,c
 10649  002DB8  361D               	rlcf	__div_to_l_@f1+1,f,c
 10650  002DBA  361E               	rlcf	__div_to_l_@f1+2,f,c
 10651  002DBC  361F               	rlcf	__div_to_l_@f1+3,f,c
 10652  002DBE  2E26               	decfsz	__div_to_l_@cntr,f,c
 10653  002DC0  D7E1               	goto	l5126
 10654  002DC2  AE27               	btfss	__div_to_l_@exp1,7,c
 10655  002DC4  D016               	goto	l5150
 10656  002DC6  5027               	movf	__div_to_l_@exp1,w,c
 10657  002DC8  0A80               	xorlw	128
 10658  002DCA  0F9F               	addlw	159
 10659  002DCC  B0D8               	btfsc	status,0,c
 10660  002DCE  D009               	goto	l5146
 10661  002DD0  0E00               	movlw	0
 10662  002DD2  6E1C               	movwf	?__div_to_l_,c
 10663  002DD4  0E00               	movlw	0
 10664  002DD6  6E1D               	movwf	?__div_to_l_+1,c
 10665  002DD8  0E00               	movlw	0
 10666  002DDA  6E1E               	movwf	?__div_to_l_+2,c
 10667  002DDC  0E00               	movlw	0
 10668  002DDE  6E1F               	movwf	?__div_to_l_+3,c
 10669  002DE0  0012               	return	
 10670  002DE2                     l5146:
 10671  002DE2  90D8               	bcf	status,0,c
 10672  002DE4  3225               	rrcf	__div_to_l_@quot+3,f,c
 10673  002DE6  3224               	rrcf	__div_to_l_@quot+2,f,c
 10674  002DE8  3223               	rrcf	__div_to_l_@quot+1,f,c
 10675  002DEA  3222               	rrcf	__div_to_l_@quot,f,c
 10676  002DEC  3E27               	incfsz	__div_to_l_@exp1,f,c
 10677  002DEE  D7F9               	goto	l5146
 10678  002DF0  D015               	goto	l808
 10679  002DF2                     l5150:
 10680  002DF2  0E1F               	movlw	31
 10681  002DF4  6427               	cpfsgt	__div_to_l_@exp1,c
 10682  002DF6  D00F               	goto	l5158
 10683  002DF8  0E00               	movlw	0
 10684  002DFA  6E1C               	movwf	?__div_to_l_,c
 10685  002DFC  0E00               	movlw	0
 10686  002DFE  6E1D               	movwf	?__div_to_l_+1,c
 10687  002E00  0E00               	movlw	0
 10688  002E02  6E1E               	movwf	?__div_to_l_+2,c
 10689  002E04  0E00               	movlw	0
 10690  002E06  6E1F               	movwf	?__div_to_l_+3,c
 10691  002E08  0012               	return	
 10692  002E0A                     l5156:
 10693  002E0A  90D8               	bcf	status,0,c
 10694  002E0C  3622               	rlcf	__div_to_l_@quot,f,c
 10695  002E0E  3623               	rlcf	__div_to_l_@quot+1,f,c
 10696  002E10  3624               	rlcf	__div_to_l_@quot+2,f,c
 10697  002E12  3625               	rlcf	__div_to_l_@quot+3,f,c
 10698  002E14  0627               	decf	__div_to_l_@exp1,f,c
 10699  002E16                     l5158:
 10700  002E16  5027               	movf	__div_to_l_@exp1,w,c
 10701  002E18  A4D8               	btfss	status,2,c
 10702  002E1A  D7F7               	goto	l5156
 10703  002E1C                     l808:
 10704  002E1C  C022  F01C         	movff	__div_to_l_@quot,?__div_to_l_
 10705  002E20  C023  F01D         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10706  002E24  C024  F01E         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10707  002E28  C025  F01F         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10708  002E2C  0012               	return		;funcret
 10709  002E2E                     __end_of__div_to_l_:
 10710                           	opt stack 0
 10711                           tblptru	equ	0xFF8
 10712                           tblptrh	equ	0xFF7
 10713                           tblptrl	equ	0xFF6
 10714                           tablat	equ	0xFF5
 10715                           prodh	equ	0xFF4
 10716                           prodl	equ	0xFF3
 10717                           intcon	equ	0xFF2
 10718                           indf0	equ	0xFEF
 10719                           postinc0	equ	0xFEE
 10720                           fsr0h	equ	0xFEA
 10721                           fsr0l	equ	0xFE9
 10722                           wreg	equ	0xFE8
 10723                           indf1	equ	0xFE7
 10724                           postdec1	equ	0xFE5
 10725                           fsr1h	equ	0xFE2
 10726                           fsr1l	equ	0xFE1
 10727                           indf2	equ	0xFDF
 10728                           postinc2	equ	0xFDE
 10729                           postdec2	equ	0xFDD
 10730                           fsr2h	equ	0xFDA
 10731                           fsr2l	equ	0xFD9
 10732                           status	equ	0xFD8
 10733                           
 10734 ;; *************** function ___lltoft *****************
 10735 ;; Defined at:
 10736 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  c               4   17[BANK0 ] unsigned long 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  exp             1   21[BANK0 ] unsigned char 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  3   17[BANK0 ] float 
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, status,0, cstack
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10750 ;;      Params:         0       4       0       0       0       0       0
 10751 ;;      Locals:         0       1       0       0       0       0       0
 10752 ;;      Temps:          4       0       0       0       0       0       0
 10753 ;;      Totals:         4       5       0       0       0       0       0
 10754 ;;Total ram usage:        9 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; Hardware stack levels required when called:    3
 10757 ;; This function calls:
 10758 ;;		___ftpack
 10759 ;; This function is called by:
 10760 ;;		_sprintf
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           	psect	text41
 10765  00364C                     __ptext41:
 10766                           	opt stack 0
 10767  00364C                     ___lltoft:
 10768                           	opt stack 24
 10769                           
 10770                           ;incstack = 0
 10771  00364C  0E8E               	movlw	142
 10772  00364E  0100               	movlb	0	; () banked
 10773  003650  6F75               	movwf	___lltoft@exp& (0+255),b
 10774  003652  D008               	goto	l5190
 10775  003654                     l5188:
 10776                           
 10777                           ; BSR set to: 0
 10778  003654  0100               	movlb	0	; () banked
 10779  003656  90D8               	bcf	status,0,c
 10780  003658  3374               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10781  00365A  3373               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10782  00365C  3372               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10783  00365E  3371               	rrcf	___lltoft@c& (0+255),f,b
 10784  003660  0100               	movlb	0	; () banked
 10785  003662  2B75               	incf	___lltoft@exp& (0+255),f,b
 10786  003664                     l5190:
 10787                           
 10788                           ; BSR set to: 0
 10789  003664  0E00               	movlw	0
 10790  003666  0100               	movlb	0	; () banked
 10791  003668  1571               	andwf	___lltoft@c& (0+255),w,b
 10792  00366A  6E24               	movwf	??___lltoft& (0+255),c
 10793  00366C  0E00               	movlw	0
 10794  00366E  0100               	movlb	0	; () banked
 10795  003670  1572               	andwf	(___lltoft@c+1)& (0+255),w,b
 10796  003672  6E25               	movwf	(??___lltoft+1)& (0+255),c
 10797  003674  0E00               	movlw	0
 10798  003676  0100               	movlb	0	; () banked
 10799  003678  1573               	andwf	(___lltoft@c+2)& (0+255),w,b
 10800  00367A  6E26               	movwf	(??___lltoft+2)& (0+255),c
 10801  00367C  0EFF               	movlw	255
 10802  00367E  0100               	movlb	0	; () banked
 10803  003680  1574               	andwf	(___lltoft@c+3)& (0+255),w,b
 10804  003682  6E27               	movwf	(??___lltoft+3)& (0+255),c
 10805  003684  5024               	movf	??___lltoft,w,c
 10806  003686  1025               	iorwf	??___lltoft+1,w,c
 10807  003688  1026               	iorwf	??___lltoft+2,w,c
 10808  00368A  1027               	iorwf	??___lltoft+3,w,c
 10809  00368C  A4D8               	btfss	status,2,c
 10810  00368E  D7E2               	goto	l5188
 10811                           
 10812                           ; BSR set to: 0
 10813                           
 10814                           ; BSR set to: 0
 10815  003690  C071  F01C         	movff	___lltoft@c,___ftpack@arg
 10816  003694  C072  F01D         	movff	___lltoft@c+1,___ftpack@arg+1
 10817  003698  C073  F01E         	movff	___lltoft@c+2,___ftpack@arg+2
 10818  00369C  C075  F01F         	movff	___lltoft@exp,___ftpack@exp
 10819  0036A0  0E00               	movlw	0
 10820  0036A2  6E20               	movwf	___ftpack@sign,c
 10821  0036A4  EC6B  F019         	call	___ftpack	;wreg free
 10822  0036A8  C01C  F071         	movff	?___ftpack,?___lltoft
 10823  0036AC  C01D  F072         	movff	?___ftpack+1,?___lltoft+1
 10824  0036B0  C01E  F073         	movff	?___ftpack+2,?___lltoft+2
 10825  0036B4  0012               	return	
 10826  0036B6                     __end_of___lltoft:
 10827                           	opt stack 0
 10828                           tblptru	equ	0xFF8
 10829                           tblptrh	equ	0xFF7
 10830                           tblptrl	equ	0xFF6
 10831                           tablat	equ	0xFF5
 10832                           prodh	equ	0xFF4
 10833                           prodl	equ	0xFF3
 10834                           intcon	equ	0xFF2
 10835                           indf0	equ	0xFEF
 10836                           postinc0	equ	0xFEE
 10837                           fsr0h	equ	0xFEA
 10838                           fsr0l	equ	0xFE9
 10839                           wreg	equ	0xFE8
 10840                           indf1	equ	0xFE7
 10841                           postdec1	equ	0xFE5
 10842                           fsr1h	equ	0xFE2
 10843                           fsr1l	equ	0xFE1
 10844                           indf2	equ	0xFDF
 10845                           postinc2	equ	0xFDE
 10846                           postdec2	equ	0xFDD
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function ___llmod *****************
 10852 ;; Defined at:
 10853 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  dividend        4   25[BANK0 ] unsigned long 
 10856 ;;  divisor         4   29[BANK0 ] unsigned long 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  counter         1   32[COMRAM] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  4   25[BANK0 ] unsigned long 
 10861 ;; Registers used:
 10862 ;;		wreg, status,2, status,0
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10868 ;;      Params:         0       8       0       0       0       0       0
 10869 ;;      Locals:         1       0       0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0       0
 10871 ;;      Totals:         1       8       0       0       0       0       0
 10872 ;;Total ram usage:        9 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    2
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_sprintf
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text42
 10883  00342A                     __ptext42:
 10884                           	opt stack 0
 10885  00342A                     ___llmod:
 10886                           	opt stack 25
 10887                           
 10888                           ;incstack = 0
 10889  00342A  0100               	movlb	0	; () banked
 10890  00342C  517D               	movf	___llmod@divisor& (0+255),w,b
 10891  00342E  0100               	movlb	0	; () banked
 10892  003430  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10893  003432  0100               	movlb	0	; () banked
 10894  003434  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10895  003436  0100               	movlb	0	; () banked
 10896  003438  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10897  00343A  B4D8               	btfsc	status,2,c
 10898  00343C  D037               	goto	l997
 10899                           
 10900                           ; BSR set to: 0
 10901  00343E  0E01               	movlw	1
 10902  003440  6E21               	movwf	___llmod@counter,c
 10903  003442  D007               	goto	l3732
 10904  003444                     l3730:
 10905                           
 10906                           ; BSR set to: 0
 10907  003444  0100               	movlb	0	; () banked
 10908  003446  90D8               	bcf	status,0,c
 10909  003448  377D               	rlcf	___llmod@divisor& (0+255),f,b
 10910  00344A  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10911  00344C  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10912  00344E  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10913  003450  2A21               	incf	___llmod@counter,f,c
 10914  003452                     l3732:
 10915                           
 10916                           ; BSR set to: 0
 10917  003452  0100               	movlb	0	; () banked
 10918  003454  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10919  003456  D7F6               	goto	l3730
 10920  003458                     l3734:
 10921                           
 10922                           ; BSR set to: 0
 10923  003458  0100               	movlb	0	; () banked
 10924  00345A  517D               	movf	___llmod@divisor& (0+255),w,b
 10925  00345C  0100               	movlb	0	; () banked
 10926  00345E  5D79               	subwf	___llmod@dividend& (0+255),w,b
 10927  003460  0100               	movlb	0	; () banked
 10928  003462  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 10929  003464  0100               	movlb	0	; () banked
 10930  003466  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10931  003468  0100               	movlb	0	; () banked
 10932  00346A  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 10933  00346C  0100               	movlb	0	; () banked
 10934  00346E  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10935  003470  0100               	movlb	0	; () banked
 10936  003472  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 10937  003474  0100               	movlb	0	; () banked
 10938  003476  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10939  003478  A0D8               	btfss	status,0,c
 10940  00347A  D010               	goto	l3738
 10941                           
 10942                           ; BSR set to: 0
 10943  00347C  0100               	movlb	0	; () banked
 10944  00347E  517D               	movf	___llmod@divisor& (0+255),w,b
 10945  003480  0100               	movlb	0	; () banked
 10946  003482  5F79               	subwf	___llmod@dividend& (0+255),f,b
 10947  003484  0100               	movlb	0	; () banked
 10948  003486  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 10949  003488  0100               	movlb	0	; () banked
 10950  00348A  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10951  00348C  0100               	movlb	0	; () banked
 10952  00348E  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 10953  003490  0100               	movlb	0	; () banked
 10954  003492  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10955  003494  0100               	movlb	0	; () banked
 10956  003496  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 10957  003498  0100               	movlb	0	; () banked
 10958  00349A  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10959  00349C                     l3738:
 10960                           
 10961                           ; BSR set to: 0
 10962  00349C  0100               	movlb	0	; () banked
 10963  00349E  90D8               	bcf	status,0,c
 10964  0034A0  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10965  0034A2  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10966  0034A4  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10967  0034A6  337D               	rrcf	___llmod@divisor& (0+255),f,b
 10968                           
 10969                           ; BSR set to: 0
 10970  0034A8  2E21               	decfsz	___llmod@counter,f,c
 10971  0034AA  D7D6               	goto	l3734
 10972  0034AC                     l997:
 10973                           
 10974                           ; BSR set to: 0
 10975  0034AC  C079  F079         	movff	___llmod@dividend,?___llmod
 10976  0034B0  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 10977  0034B4  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 10978  0034B8  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 10979                           
 10980                           ; BSR set to: 0
 10981  0034BC  0012               	return		;funcret
 10982  0034BE                     __end_of___llmod:
 10983                           	opt stack 0
 10984                           tblptru	equ	0xFF8
 10985                           tblptrh	equ	0xFF7
 10986                           tblptrl	equ	0xFF6
 10987                           tablat	equ	0xFF5
 10988                           prodh	equ	0xFF4
 10989                           prodl	equ	0xFF3
 10990                           intcon	equ	0xFF2
 10991                           indf0	equ	0xFEF
 10992                           postinc0	equ	0xFEE
 10993                           fsr0h	equ	0xFEA
 10994                           fsr0l	equ	0xFE9
 10995                           wreg	equ	0xFE8
 10996                           indf1	equ	0xFE7
 10997                           postdec1	equ	0xFE5
 10998                           fsr1h	equ	0xFE2
 10999                           fsr1l	equ	0xFE1
 11000                           indf2	equ	0xFDF
 11001                           postinc2	equ	0xFDE
 11002                           postdec2	equ	0xFDD
 11003                           fsr2h	equ	0xFDA
 11004                           fsr2l	equ	0xFD9
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function ___lldiv *****************
 11008 ;; Defined at:
 11009 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  dividend        4   17[BANK0 ] unsigned long 
 11012 ;;  divisor         4   21[BANK0 ] unsigned long 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  quotient        4   27[COMRAM] unsigned long 
 11015 ;;  counter         1   31[COMRAM] unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  4   17[BANK0 ] unsigned long 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11025 ;;      Params:         0       8       0       0       0       0       0
 11026 ;;      Locals:         5       0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0
 11028 ;;      Totals:         5       8       0       0       0       0       0
 11029 ;;Total ram usage:       13 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    2
 11032 ;; This function calls:
 11033 ;;		Nothing
 11034 ;; This function is called by:
 11035 ;;		_sprintf
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text43
 11040  003226                     __ptext43:
 11041                           	opt stack 0
 11042  003226                     ___lldiv:
 11043                           	opt stack 25
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;incstack = 0
 11047  003226  0E00               	movlw	0
 11048  003228  6E1C               	movwf	___lldiv@quotient,c
 11049  00322A  0E00               	movlw	0
 11050  00322C  6E1D               	movwf	___lldiv@quotient+1,c
 11051  00322E  0E00               	movlw	0
 11052  003230  6E1E               	movwf	___lldiv@quotient+2,c
 11053  003232  0E00               	movlw	0
 11054  003234  6E1F               	movwf	___lldiv@quotient+3,c
 11055  003236  0100               	movlb	0	; () banked
 11056  003238  5175               	movf	___lldiv@divisor& (0+255),w,b
 11057  00323A  0100               	movlb	0	; () banked
 11058  00323C  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11059  00323E  0100               	movlb	0	; () banked
 11060  003240  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11061  003242  0100               	movlb	0	; () banked
 11062  003244  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11063  003246  B4D8               	btfsc	status,2,c
 11064  003248  D03D               	goto	l987
 11065                           
 11066                           ; BSR set to: 0
 11067  00324A  0E01               	movlw	1
 11068  00324C  6E20               	movwf	___lldiv@counter,c
 11069  00324E  D007               	goto	l3712
 11070  003250                     l3710:
 11071                           
 11072                           ; BSR set to: 0
 11073  003250  0100               	movlb	0	; () banked
 11074  003252  90D8               	bcf	status,0,c
 11075  003254  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11076  003256  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11077  003258  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11078  00325A  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11079  00325C  2A20               	incf	___lldiv@counter,f,c
 11080  00325E                     l3712:
 11081                           
 11082                           ; BSR set to: 0
 11083  00325E  0100               	movlb	0	; () banked
 11084  003260  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11085  003262  D7F6               	goto	l3710
 11086  003264                     l3714:
 11087                           
 11088                           ; BSR set to: 0
 11089  003264  90D8               	bcf	status,0,c
 11090  003266  361C               	rlcf	___lldiv@quotient,f,c
 11091  003268  361D               	rlcf	___lldiv@quotient+1,f,c
 11092  00326A  361E               	rlcf	___lldiv@quotient+2,f,c
 11093  00326C  361F               	rlcf	___lldiv@quotient+3,f,c
 11094                           
 11095                           ; BSR set to: 0
 11096  00326E  0100               	movlb	0	; () banked
 11097  003270  5175               	movf	___lldiv@divisor& (0+255),w,b
 11098  003272  0100               	movlb	0	; () banked
 11099  003274  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11100  003276  0100               	movlb	0	; () banked
 11101  003278  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11102  00327A  0100               	movlb	0	; () banked
 11103  00327C  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11104  00327E  0100               	movlb	0	; () banked
 11105  003280  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11106  003282  0100               	movlb	0	; () banked
 11107  003284  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11108  003286  0100               	movlb	0	; () banked
 11109  003288  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11110  00328A  0100               	movlb	0	; () banked
 11111  00328C  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11112  00328E  A0D8               	btfss	status,0,c
 11113  003290  D011               	goto	l3722
 11114                           
 11115                           ; BSR set to: 0
 11116  003292  0100               	movlb	0	; () banked
 11117  003294  5175               	movf	___lldiv@divisor& (0+255),w,b
 11118  003296  0100               	movlb	0	; () banked
 11119  003298  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11120  00329A  0100               	movlb	0	; () banked
 11121  00329C  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11122  00329E  0100               	movlb	0	; () banked
 11123  0032A0  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11124  0032A2  0100               	movlb	0	; () banked
 11125  0032A4  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11126  0032A6  0100               	movlb	0	; () banked
 11127  0032A8  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11128  0032AA  0100               	movlb	0	; () banked
 11129  0032AC  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11130  0032AE  0100               	movlb	0	; () banked
 11131  0032B0  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 0
 11134  0032B2  801C               	bsf	___lldiv@quotient,0,c
 11135  0032B4                     l3722:
 11136                           
 11137                           ; BSR set to: 0
 11138  0032B4  0100               	movlb	0	; () banked
 11139  0032B6  90D8               	bcf	status,0,c
 11140  0032B8  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11141  0032BA  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11142  0032BC  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11143  0032BE  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11144                           
 11145                           ; BSR set to: 0
 11146  0032C0  2E20               	decfsz	___lldiv@counter,f,c
 11147  0032C2  D7D0               	goto	l3714
 11148  0032C4                     l987:
 11149                           
 11150                           ; BSR set to: 0
 11151  0032C4  C01C  F071         	movff	___lldiv@quotient,?___lldiv
 11152  0032C8  C01D  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11153  0032CC  C01E  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11154  0032D0  C01F  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11155                           
 11156                           ; BSR set to: 0
 11157  0032D4  0012               	return		;funcret
 11158  0032D6                     __end_of___lldiv:
 11159                           	opt stack 0
 11160                           tblptru	equ	0xFF8
 11161                           tblptrh	equ	0xFF7
 11162                           tblptrl	equ	0xFF6
 11163                           tablat	equ	0xFF5
 11164                           prodh	equ	0xFF4
 11165                           prodl	equ	0xFF3
 11166                           intcon	equ	0xFF2
 11167                           indf0	equ	0xFEF
 11168                           postinc0	equ	0xFEE
 11169                           fsr0h	equ	0xFEA
 11170                           fsr0l	equ	0xFE9
 11171                           wreg	equ	0xFE8
 11172                           indf1	equ	0xFE7
 11173                           postdec1	equ	0xFE5
 11174                           fsr1h	equ	0xFE2
 11175                           fsr1l	equ	0xFE1
 11176                           indf2	equ	0xFDF
 11177                           postinc2	equ	0xFDE
 11178                           postdec2	equ	0xFDD
 11179                           fsr2h	equ	0xFDA
 11180                           fsr2l	equ	0xFD9
 11181                           status	equ	0xFD8
 11182                           
 11183 ;; *************** function ___fttol *****************
 11184 ;; Defined at:
 11185 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  f1              3   47[BANK0 ] float 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;  lval            4   57[BANK0 ] unsigned long 
 11190 ;;  exp1            1   61[BANK0 ] unsigned char 
 11191 ;;  sign1           1   56[BANK0 ] unsigned char 
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  4   47[BANK0 ] long 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11201 ;;      Params:         0       4       0       0       0       0       0
 11202 ;;      Locals:         0       6       0       0       0       0       0
 11203 ;;      Temps:          0       5       0       0       0       0       0
 11204 ;;      Totals:         0      15       0       0       0       0       0
 11205 ;;Total ram usage:       15 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    2
 11208 ;; This function calls:
 11209 ;;		Nothing
 11210 ;; This function is called by:
 11211 ;;		_util_getSolarCurrent
 11212 ;;		_util_getBatteryCurrent
 11213 ;;		_sprintf
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text44
 11218  002A82                     __ptext44:
 11219                           	opt stack 0
 11220  002A82                     ___fttol:
 11221                           	opt stack 26
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;incstack = 0
 11225  002A82  C091  F093         	movff	___fttol@f1+2,??___fttol
 11226  002A86  0100               	movlb	0	; () banked
 11227  002A88  6B94               	clrf	(??___fttol+1)& (0+255),b
 11228  002A8A  6B95               	clrf	(??___fttol+2)& (0+255),b
 11229  002A8C  0100               	movlb	0	; () banked
 11230  002A8E  3590               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11231  002A90  0100               	movlb	0	; () banked
 11232  002A92  3793               	rlcf	??___fttol& (0+255),f,b
 11233  002A94  E301               	bnc	u3221
 11234  002A96  8194               	bsf	(??___fttol+1)& (0+255),0,b
 11235  002A98                     u3221:
 11236  002A98  0100               	movlb	0	; () banked
 11237  002A9A  5193               	movf	??___fttol& (0+255),w,b
 11238  002A9C  0100               	movlb	0	; () banked
 11239  002A9E  6F9D               	movwf	___fttol@exp1& (0+255),b
 11240  002AA0  0100               	movlb	0	; () banked
 11241  002AA2  519D               	movf	___fttol@exp1& (0+255),w,b
 11242  002AA4  A4D8               	btfss	status,2,c
 11243  002AA6  D00A               	goto	l3664
 11244                           
 11245                           ; BSR set to: 0
 11246  002AA8  0E00               	movlw	0
 11247  002AAA  0100               	movlb	0	; () banked
 11248  002AAC  6F8F               	movwf	?___fttol& (0+255),b
 11249  002AAE  0E00               	movlw	0
 11250  002AB0  6F90               	movwf	(?___fttol+1)& (0+255),b
 11251  002AB2  0E00               	movlw	0
 11252  002AB4  6F91               	movwf	(?___fttol+2)& (0+255),b
 11253  002AB6  0E00               	movlw	0
 11254  002AB8  6F92               	movwf	(?___fttol+3)& (0+255),b
 11255                           
 11256                           ; BSR set to: 0
 11257  002ABA  0012               	return	
 11258  002ABC                     l3664:
 11259                           
 11260                           ; BSR set to: 0
 11261  002ABC  0E17               	movlw	23
 11262  002ABE  0100               	movlb	0	; () banked
 11263  002AC0  6F93               	movwf	??___fttol& (0+255),b
 11264  002AC2  C08F  F094         	movff	___fttol@f1,??___fttol+1
 11265  002AC6  C090  F095         	movff	___fttol@f1+1,??___fttol+2
 11266  002ACA  C091  F096         	movff	___fttol@f1+2,??___fttol+3
 11267  002ACE  0100               	movlb	0	; () banked
 11268  002AD0  2993               	incf	??___fttol& (0+255),w,b
 11269  002AD2  0100               	movlb	0	; () banked
 11270  002AD4  6F97               	movwf	(??___fttol+4)& (0+255),b
 11271  002AD6  D005               	goto	u3240
 11272  002AD8                     u3245:
 11273  002AD8  0100               	movlb	0	; () banked
 11274  002ADA  90D8               	bcf	status,0,c
 11275  002ADC  3396               	rrcf	(??___fttol+3)& (0+255),f,b
 11276  002ADE  3395               	rrcf	(??___fttol+2)& (0+255),f,b
 11277  002AE0  3394               	rrcf	(??___fttol+1)& (0+255),f,b
 11278  002AE2                     u3240:
 11279  002AE2  0100               	movlb	0	; () banked
 11280  002AE4  2F97               	decfsz	(??___fttol+4)& (0+255),f,b
 11281  002AE6  D7F8               	goto	u3245
 11282  002AE8  0100               	movlb	0	; () banked
 11283  002AEA  5194               	movf	(??___fttol+1)& (0+255),w,b
 11284  002AEC  0100               	movlb	0	; () banked
 11285  002AEE  6F98               	movwf	___fttol@sign1& (0+255),b
 11286                           
 11287                           ; BSR set to: 0
 11288  002AF0  0100               	movlb	0	; () banked
 11289  002AF2  8F90               	bsf	(___fttol@f1+1)& (0+255),7,b
 11290                           
 11291                           ; BSR set to: 0
 11292  002AF4  0EFF               	movlw	255
 11293  002AF6  0100               	movlb	0	; () banked
 11294  002AF8  178F               	andwf	___fttol@f1& (0+255),f,b
 11295  002AFA  0EFF               	movlw	255
 11296  002AFC  0100               	movlb	0	; () banked
 11297  002AFE  1790               	andwf	(___fttol@f1+1)& (0+255),f,b
 11298  002B00  0E00               	movlw	0
 11299  002B02  0100               	movlb	0	; () banked
 11300  002B04  1791               	andwf	(___fttol@f1+2)& (0+255),f,b
 11301                           
 11302                           ; BSR set to: 0
 11303  002B06  0100               	movlb	0	; () banked
 11304  002B08  518F               	movf	___fttol@f1& (0+255),w,b
 11305  002B0A  0100               	movlb	0	; () banked
 11306  002B0C  6F99               	movwf	___fttol@lval& (0+255),b
 11307  002B0E  0100               	movlb	0	; () banked
 11308  002B10  5190               	movf	(___fttol@f1+1)& (0+255),w,b
 11309  002B12  0100               	movlb	0	; () banked
 11310  002B14  6F9A               	movwf	(___fttol@lval+1)& (0+255),b
 11311  002B16  0100               	movlb	0	; () banked
 11312  002B18  5191               	movf	(___fttol@f1+2)& (0+255),w,b
 11313  002B1A  0100               	movlb	0	; () banked
 11314  002B1C  6F9B               	movwf	(___fttol@lval+2)& (0+255),b
 11315  002B1E  0100               	movlb	0	; () banked
 11316  002B20  6B9C               	clrf	(___fttol@lval+3)& (0+255),b
 11317                           
 11318                           ; BSR set to: 0
 11319  002B22  0E8E               	movlw	142
 11320  002B24  0100               	movlb	0	; () banked
 11321  002B26  5F9D               	subwf	___fttol@exp1& (0+255),f,b
 11322                           
 11323                           ; BSR set to: 0
 11324  002B28  0100               	movlb	0	; () banked
 11325  002B2A  AF9D               	btfss	___fttol@exp1& (0+255),7,b
 11326  002B2C  D01A               	goto	l3686
 11327                           
 11328                           ; BSR set to: 0
 11329  002B2E  0100               	movlb	0	; () banked
 11330  002B30  519D               	movf	___fttol@exp1& (0+255),w,b
 11331  002B32  0A80               	xorlw	128
 11332  002B34  0F8F               	addlw	143
 11333  002B36  B0D8               	btfsc	status,0,c
 11334  002B38  D00A               	goto	l3682
 11335                           
 11336                           ; BSR set to: 0
 11337  002B3A  0E00               	movlw	0
 11338  002B3C  0100               	movlb	0	; () banked
 11339  002B3E  6F8F               	movwf	?___fttol& (0+255),b
 11340  002B40  0E00               	movlw	0
 11341  002B42  6F90               	movwf	(?___fttol+1)& (0+255),b
 11342  002B44  0E00               	movlw	0
 11343  002B46  6F91               	movwf	(?___fttol+2)& (0+255),b
 11344  002B48  0E00               	movlw	0
 11345  002B4A  6F92               	movwf	(?___fttol+3)& (0+255),b
 11346                           
 11347                           ; BSR set to: 0
 11348  002B4C  0012               	return	
 11349  002B4E                     l3682:
 11350                           
 11351                           ; BSR set to: 0
 11352  002B4E  0100               	movlb	0	; () banked
 11353  002B50  90D8               	bcf	status,0,c
 11354  002B52  339C               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11355  002B54  339B               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11356  002B56  339A               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11357  002B58  3399               	rrcf	___fttol@lval& (0+255),f,b
 11358                           
 11359                           ; BSR set to: 0
 11360  002B5A  0100               	movlb	0	; () banked
 11361  002B5C  3F9D               	incfsz	___fttol@exp1& (0+255),f,b
 11362  002B5E  D7F7               	goto	l3682
 11363                           
 11364                           ; BSR set to: 0
 11365  002B60  D01B               	goto	l3696
 11366  002B62                     l3686:
 11367                           
 11368                           ; BSR set to: 0
 11369  002B62  0E17               	movlw	23
 11370  002B64  0100               	movlb	0	; () banked
 11371  002B66  659D               	cpfsgt	___fttol@exp1& (0+255),b
 11372  002B68  D012               	goto	l3694
 11373                           
 11374                           ; BSR set to: 0
 11375  002B6A  0E00               	movlw	0
 11376  002B6C  0100               	movlb	0	; () banked
 11377  002B6E  6F8F               	movwf	?___fttol& (0+255),b
 11378  002B70  0E00               	movlw	0
 11379  002B72  6F90               	movwf	(?___fttol+1)& (0+255),b
 11380  002B74  0E00               	movlw	0
 11381  002B76  6F91               	movwf	(?___fttol+2)& (0+255),b
 11382  002B78  0E00               	movlw	0
 11383  002B7A  6F92               	movwf	(?___fttol+3)& (0+255),b
 11384                           
 11385                           ; BSR set to: 0
 11386  002B7C  0012               	return	
 11387  002B7E                     l3692:
 11388                           
 11389                           ; BSR set to: 0
 11390  002B7E  0100               	movlb	0	; () banked
 11391  002B80  90D8               	bcf	status,0,c
 11392  002B82  3799               	rlcf	___fttol@lval& (0+255),f,b
 11393  002B84  379A               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11394  002B86  379B               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11395  002B88  379C               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11396  002B8A  0100               	movlb	0	; () banked
 11397  002B8C  079D               	decf	___fttol@exp1& (0+255),f,b
 11398  002B8E                     l3694:
 11399                           
 11400                           ; BSR set to: 0
 11401  002B8E  0100               	movlb	0	; () banked
 11402  002B90  519D               	movf	___fttol@exp1& (0+255),w,b
 11403  002B92  0100               	movlb	0	; () banked
 11404  002B94  A4D8               	btfss	status,2,c
 11405  002B96  D7F3               	goto	l3692
 11406  002B98                     l3696:
 11407                           
 11408                           ; BSR set to: 0
 11409  002B98  0100               	movlb	0	; () banked
 11410  002B9A  5198               	movf	___fttol@sign1& (0+255),w,b
 11411  002B9C  0100               	movlb	0	; () banked
 11412  002B9E  B4D8               	btfsc	status,2,c
 11413  002BA0  D009               	goto	l3700
 11414                           
 11415                           ; BSR set to: 0
 11416  002BA2  0100               	movlb	0	; () banked
 11417  002BA4  1F9C               	comf	(___fttol@lval+3)& (0+255),f,b
 11418  002BA6  1F9B               	comf	(___fttol@lval+2)& (0+255),f,b
 11419  002BA8  1F9A               	comf	(___fttol@lval+1)& (0+255),f,b
 11420  002BAA  6D99               	negf	___fttol@lval& (0+255),b
 11421  002BAC  0E00               	movlw	0
 11422  002BAE  239A               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11423  002BB0  239B               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11424  002BB2  239C               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11425  002BB4                     l3700:
 11426                           
 11427                           ; BSR set to: 0
 11428  002BB4  C099  F08F         	movff	___fttol@lval,?___fttol
 11429  002BB8  C09A  F090         	movff	___fttol@lval+1,?___fttol+1
 11430  002BBC  C09B  F091         	movff	___fttol@lval+2,?___fttol+2
 11431  002BC0  C09C  F092         	movff	___fttol@lval+3,?___fttol+3
 11432  002BC4  0012               	return	
 11433  002BC6                     __end_of___fttol:
 11434                           	opt stack 0
 11435                           tblptru	equ	0xFF8
 11436                           tblptrh	equ	0xFF7
 11437                           tblptrl	equ	0xFF6
 11438                           tablat	equ	0xFF5
 11439                           prodh	equ	0xFF4
 11440                           prodl	equ	0xFF3
 11441                           intcon	equ	0xFF2
 11442                           indf0	equ	0xFEF
 11443                           postinc0	equ	0xFEE
 11444                           fsr0h	equ	0xFEA
 11445                           fsr0l	equ	0xFE9
 11446                           wreg	equ	0xFE8
 11447                           indf1	equ	0xFE7
 11448                           postdec1	equ	0xFE5
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function ___ftsub *****************
 11459 ;; Defined at:
 11460 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  f1              3   62[BANK0 ] float 
 11463 ;;  f2              3   65[BANK0 ] float 
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  3   62[BANK0 ] float 
 11468 ;; Registers used:
 11469 ;;		wreg, status,2, status,0, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11475 ;;      Params:         0       6       0       0       0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0
 11478 ;;      Totals:         0       6       0       0       0       0       0
 11479 ;;Total ram usage:        6 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:    4
 11482 ;; This function calls:
 11483 ;;		___ftadd
 11484 ;; This function is called by:
 11485 ;;		_sprintf
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text45
 11490  003808                     __ptext45:
 11491                           	opt stack 0
 11492  003808                     ___ftsub:
 11493                           	opt stack 23
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;incstack = 0
 11497  003808  0100               	movlb	0	; () banked
 11498  00380A  51A1               	movf	___ftsub@f2& (0+255),w,b
 11499  00380C  0100               	movlb	0	; () banked
 11500  00380E  11A2               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11501  003810  0100               	movlb	0	; () banked
 11502  003812  11A3               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11503  003814  B4D8               	btfsc	status,2,c
 11504  003816  D009               	goto	l5164
 11505                           
 11506                           ; BSR set to: 0
 11507  003818  0E00               	movlw	0
 11508  00381A  0100               	movlb	0	; () banked
 11509  00381C  1BA1               	xorwf	___ftsub@f2& (0+255),f,b
 11510  00381E  0E00               	movlw	0
 11511  003820  0100               	movlb	0	; () banked
 11512  003822  1BA2               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11513  003824  0E80               	movlw	128
 11514  003826  0100               	movlb	0	; () banked
 11515  003828  1BA3               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11516  00382A                     l5164:
 11517                           
 11518                           ; BSR set to: 0
 11519  00382A  C09E  F092         	movff	___ftsub@f1,___ftadd@f1
 11520  00382E  C09F  F093         	movff	___ftsub@f1+1,___ftadd@f1+1
 11521  003832  C0A0  F094         	movff	___ftsub@f1+2,___ftadd@f1+2
 11522  003836  C0A1  F095         	movff	___ftsub@f2,___ftadd@f2
 11523  00383A  C0A2  F096         	movff	___ftsub@f2+1,___ftadd@f2+1
 11524  00383E  C0A3  F097         	movff	___ftsub@f2+2,___ftadd@f2+2
 11525  003842  EC25  F011         	call	___ftadd	;wreg free
 11526  003846  C092  F09E         	movff	?___ftadd,?___ftsub
 11527  00384A  C093  F09F         	movff	?___ftadd+1,?___ftsub+1
 11528  00384E  C094  F0A0         	movff	?___ftadd+2,?___ftsub+2
 11529  003852  0012               	return	
 11530  003854                     __end_of___ftsub:
 11531                           	opt stack 0
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           intcon	equ	0xFF2
 11539                           indf0	equ	0xFEF
 11540                           postinc0	equ	0xFEE
 11541                           fsr0h	equ	0xFEA
 11542                           fsr0l	equ	0xFE9
 11543                           wreg	equ	0xFE8
 11544                           indf1	equ	0xFE7
 11545                           postdec1	equ	0xFE5
 11546                           fsr1h	equ	0xFE2
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           fsr2h	equ	0xFDA
 11552                           fsr2l	equ	0xFD9
 11553                           status	equ	0xFD8
 11554                           
 11555 ;; *************** function ___ftadd *****************
 11556 ;; Defined at:
 11557 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  f1              3   50[BANK0 ] float 
 11560 ;;  f2              3   53[BANK0 ] float 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  exp1            1   61[BANK0 ] unsigned char 
 11563 ;;  exp2            1   60[BANK0 ] unsigned char 
 11564 ;;  sign            1   59[BANK0 ] unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  3   50[BANK0 ] float 
 11567 ;; Registers used:
 11568 ;;		wreg, status,2, status,0, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11574 ;;      Params:         0       6       0       0       0       0       0
 11575 ;;      Locals:         0       3       0       0       0       0       0
 11576 ;;      Temps:          0       3       0       0       0       0       0
 11577 ;;      Totals:         0      12       0       0       0       0       0
 11578 ;;Total ram usage:       12 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    3
 11581 ;; This function calls:
 11582 ;;		___ftpack
 11583 ;; This function is called by:
 11584 ;;		_util_getTemperature
 11585 ;;		_sprintf
 11586 ;;		___ftsub
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text46
 11591  00224A                     __ptext46:
 11592                           	opt stack 0
 11593  00224A                     ___ftadd:
 11594                           	opt stack 25
 11595                           
 11596                           ;incstack = 0
 11597  00224A  C094  F098         	movff	___ftadd@f1+2,??___ftadd
 11598  00224E  0100               	movlb	0	; () banked
 11599  002250  6B99               	clrf	(??___ftadd+1)& (0+255),b
 11600  002252  6B9A               	clrf	(??___ftadd+2)& (0+255),b
 11601  002254  0100               	movlb	0	; () banked
 11602  002256  3593               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11603  002258  0100               	movlb	0	; () banked
 11604  00225A  3798               	rlcf	??___ftadd& (0+255),f,b
 11605  00225C  E301               	bnc	u4811
 11606  00225E  8199               	bsf	(??___ftadd+1)& (0+255),0,b
 11607  002260                     u4811:
 11608  002260  0100               	movlb	0	; () banked
 11609  002262  5198               	movf	??___ftadd& (0+255),w,b
 11610  002264  0100               	movlb	0	; () banked
 11611  002266  6F9D               	movwf	___ftadd@exp1& (0+255),b
 11612  002268  C097  F098         	movff	___ftadd@f2+2,??___ftadd
 11613  00226C  0100               	movlb	0	; () banked
 11614  00226E  6B99               	clrf	(??___ftadd+1)& (0+255),b
 11615  002270  6B9A               	clrf	(??___ftadd+2)& (0+255),b
 11616  002272  0100               	movlb	0	; () banked
 11617  002274  3596               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11618  002276  0100               	movlb	0	; () banked
 11619  002278  3798               	rlcf	??___ftadd& (0+255),f,b
 11620  00227A  E301               	bnc	u4821
 11621  00227C  8199               	bsf	(??___ftadd+1)& (0+255),0,b
 11622  00227E                     u4821:
 11623  00227E  0100               	movlb	0	; () banked
 11624  002280  5198               	movf	??___ftadd& (0+255),w,b
 11625  002282  0100               	movlb	0	; () banked
 11626  002284  6F9C               	movwf	___ftadd@exp2& (0+255),b
 11627                           
 11628                           ; BSR set to: 0
 11629  002286  0100               	movlb	0	; () banked
 11630  002288  519D               	movf	___ftadd@exp1& (0+255),w,b
 11631  00228A  0100               	movlb	0	; () banked
 11632  00228C  B4D8               	btfsc	status,2,c
 11633  00228E  D011               	goto	l863
 11634                           
 11635                           ; BSR set to: 0
 11636  002290  0100               	movlb	0	; () banked
 11637  002292  519C               	movf	___ftadd@exp2& (0+255),w,b
 11638  002294  0100               	movlb	0	; () banked
 11639  002296  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
 11640  002298  B0D8               	btfsc	status,0,c
 11641  00229A  D012               	goto	l4792
 11642                           
 11643                           ; BSR set to: 0
 11644  00229C  0100               	movlb	0	; () banked
 11645  00229E  519D               	movf	___ftadd@exp1& (0+255),w,b
 11646  0022A0  0800               	sublw	0
 11647  0022A2  0100               	movlb	0	; () banked
 11648  0022A4  259C               	addwf	___ftadd@exp2& (0+255),w,b
 11649  0022A6  0100               	movlb	0	; () banked
 11650  0022A8  6F98               	movwf	??___ftadd& (0+255),b
 11651  0022AA  0E18               	movlw	24
 11652  0022AC  0100               	movlb	0	; () banked
 11653  0022AE  6598               	cpfsgt	??___ftadd& (0+255),b
 11654  0022B0  D007               	goto	l4792
 11655  0022B2                     l863:
 11656                           
 11657                           ; BSR set to: 0
 11658  0022B2  C095  F092         	movff	___ftadd@f2,?___ftadd
 11659  0022B6  C096  F093         	movff	___ftadd@f2+1,?___ftadd+1
 11660  0022BA  C097  F094         	movff	___ftadd@f2+2,?___ftadd+2
 11661  0022BE  0012               	return	
 11662  0022C0                     l4792:
 11663                           
 11664                           ; BSR set to: 0
 11665  0022C0  0100               	movlb	0	; () banked
 11666  0022C2  519C               	movf	___ftadd@exp2& (0+255),w,b
 11667  0022C4  0100               	movlb	0	; () banked
 11668  0022C6  B4D8               	btfsc	status,2,c
 11669  0022C8  D011               	goto	l867
 11670                           
 11671                           ; BSR set to: 0
 11672  0022CA  0100               	movlb	0	; () banked
 11673  0022CC  519D               	movf	___ftadd@exp1& (0+255),w,b
 11674  0022CE  0100               	movlb	0	; () banked
 11675  0022D0  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
 11676  0022D2  B0D8               	btfsc	status,0,c
 11677  0022D4  D012               	goto	l4798
 11678                           
 11679                           ; BSR set to: 0
 11680  0022D6  0100               	movlb	0	; () banked
 11681  0022D8  519C               	movf	___ftadd@exp2& (0+255),w,b
 11682  0022DA  0800               	sublw	0
 11683  0022DC  0100               	movlb	0	; () banked
 11684  0022DE  259D               	addwf	___ftadd@exp1& (0+255),w,b
 11685  0022E0  0100               	movlb	0	; () banked
 11686  0022E2  6F98               	movwf	??___ftadd& (0+255),b
 11687  0022E4  0E18               	movlw	24
 11688  0022E6  0100               	movlb	0	; () banked
 11689  0022E8  6598               	cpfsgt	??___ftadd& (0+255),b
 11690  0022EA  D007               	goto	l4798
 11691  0022EC                     l867:
 11692                           
 11693                           ; BSR set to: 0
 11694  0022EC  C092  F092         	movff	___ftadd@f1,?___ftadd
 11695  0022F0  C093  F093         	movff	___ftadd@f1+1,?___ftadd+1
 11696  0022F4  C094  F094         	movff	___ftadd@f1+2,?___ftadd+2
 11697  0022F8  0012               	return	
 11698  0022FA                     l4798:
 11699                           
 11700                           ; BSR set to: 0
 11701  0022FA  0E06               	movlw	6
 11702  0022FC  0100               	movlb	0	; () banked
 11703  0022FE  6F9B               	movwf	___ftadd@sign& (0+255),b
 11704                           
 11705                           ; BSR set to: 0
 11706  002300  0100               	movlb	0	; () banked
 11707  002302  AF94               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11708  002304  D002               	goto	l4804
 11709                           
 11710                           ; BSR set to: 0
 11711  002306  0100               	movlb	0	; () banked
 11712  002308  8F9B               	bsf	___ftadd@sign& (0+255),7,b
 11713  00230A                     l4804:
 11714                           
 11715                           ; BSR set to: 0
 11716  00230A  0100               	movlb	0	; () banked
 11717  00230C  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11718  00230E  D002               	goto	l869
 11719                           
 11720                           ; BSR set to: 0
 11721  002310  0100               	movlb	0	; () banked
 11722  002312  8D9B               	bsf	___ftadd@sign& (0+255),6,b
 11723  002314                     l869:
 11724                           
 11725                           ; BSR set to: 0
 11726  002314  0100               	movlb	0	; () banked
 11727  002316  8F93               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11728                           
 11729                           ; BSR set to: 0
 11730  002318  0EFF               	movlw	255
 11731  00231A  0100               	movlb	0	; () banked
 11732  00231C  1792               	andwf	___ftadd@f1& (0+255),f,b
 11733  00231E  0EFF               	movlw	255
 11734  002320  0100               	movlb	0	; () banked
 11735  002322  1793               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11736  002324  0E00               	movlw	0
 11737  002326  0100               	movlb	0	; () banked
 11738  002328  1794               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11739  00232A  0100               	movlb	0	; () banked
 11740  00232C  8F96               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11741                           
 11742                           ; BSR set to: 0
 11743  00232E  0EFF               	movlw	255
 11744  002330  0100               	movlb	0	; () banked
 11745  002332  1795               	andwf	___ftadd@f2& (0+255),f,b
 11746  002334  0EFF               	movlw	255
 11747  002336  0100               	movlb	0	; () banked
 11748  002338  1796               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11749  00233A  0E00               	movlw	0
 11750  00233C  0100               	movlb	0	; () banked
 11751  00233E  1797               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11752                           
 11753                           ; BSR set to: 0
 11754  002340  0100               	movlb	0	; () banked
 11755  002342  519C               	movf	___ftadd@exp2& (0+255),w,b
 11756  002344  0100               	movlb	0	; () banked
 11757  002346  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
 11758  002348  B0D8               	btfsc	status,0,c
 11759  00234A  D025               	goto	l4824
 11760  00234C                     l4814:
 11761                           
 11762                           ; BSR set to: 0
 11763  00234C  0100               	movlb	0	; () banked
 11764  00234E  90D8               	bcf	status,0,c
 11765  002350  3795               	rlcf	___ftadd@f2& (0+255),f,b
 11766  002352  3796               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11767  002354  3797               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11768  002356  0100               	movlb	0	; () banked
 11769  002358  079C               	decf	___ftadd@exp2& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  00235A  0100               	movlb	0	; () banked
 11773  00235C  519D               	movf	___ftadd@exp1& (0+255),w,b
 11774  00235E  0100               	movlb	0	; () banked
 11775  002360  199C               	xorwf	___ftadd@exp2& (0+255),w,b
 11776  002362  B4D8               	btfsc	status,2,c
 11777  002364  D011               	goto	l4822
 11778                           
 11779                           ; BSR set to: 0
 11780  002366  0100               	movlb	0	; () banked
 11781  002368  079B               	decf	___ftadd@sign& (0+255),f,b
 11782  00236A  C09B  F098         	movff	___ftadd@sign,??___ftadd
 11783  00236E  0E07               	movlw	7
 11784  002370  0100               	movlb	0	; () banked
 11785  002372  1798               	andwf	??___ftadd& (0+255),f,b
 11786  002374  B4D8               	btfsc	status,2,c
 11787  002376  D008               	goto	l4822
 11788  002378  D7E9               	goto	l4814
 11789  00237A                     l4820:
 11790                           
 11791                           ; BSR set to: 0
 11792  00237A  0100               	movlb	0	; () banked
 11793  00237C  90D8               	bcf	status,0,c
 11794  00237E  3394               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11795  002380  3393               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11796  002382  3392               	rrcf	___ftadd@f1& (0+255),f,b
 11797  002384  0100               	movlb	0	; () banked
 11798  002386  2B9D               	incf	___ftadd@exp1& (0+255),f,b
 11799  002388                     l4822:
 11800                           
 11801                           ; BSR set to: 0
 11802  002388  0100               	movlb	0	; () banked
 11803  00238A  519C               	movf	___ftadd@exp2& (0+255),w,b
 11804  00238C  0100               	movlb	0	; () banked
 11805  00238E  199D               	xorwf	___ftadd@exp1& (0+255),w,b
 11806  002390  B4D8               	btfsc	status,2,c
 11807  002392  D02B               	goto	l878
 11808  002394  D7F2               	goto	l4820
 11809  002396                     l4824:
 11810                           
 11811                           ; BSR set to: 0
 11812  002396  0100               	movlb	0	; () banked
 11813  002398  519D               	movf	___ftadd@exp1& (0+255),w,b
 11814  00239A  0100               	movlb	0	; () banked
 11815  00239C  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
 11816  00239E  B0D8               	btfsc	status,0,c
 11817  0023A0  D024               	goto	l878
 11818  0023A2                     l4826:
 11819                           
 11820                           ; BSR set to: 0
 11821  0023A2  0100               	movlb	0	; () banked
 11822  0023A4  90D8               	bcf	status,0,c
 11823  0023A6  3792               	rlcf	___ftadd@f1& (0+255),f,b
 11824  0023A8  3793               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11825  0023AA  3794               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11826  0023AC  0100               	movlb	0	; () banked
 11827  0023AE  079D               	decf	___ftadd@exp1& (0+255),f,b
 11828                           
 11829                           ; BSR set to: 0
 11830  0023B0  0100               	movlb	0	; () banked
 11831  0023B2  519D               	movf	___ftadd@exp1& (0+255),w,b
 11832  0023B4  0100               	movlb	0	; () banked
 11833  0023B6  199C               	xorwf	___ftadd@exp2& (0+255),w,b
 11834  0023B8  B4D8               	btfsc	status,2,c
 11835  0023BA  D011               	goto	l4834
 11836                           
 11837                           ; BSR set to: 0
 11838  0023BC  0100               	movlb	0	; () banked
 11839  0023BE  079B               	decf	___ftadd@sign& (0+255),f,b
 11840  0023C0  C09B  F098         	movff	___ftadd@sign,??___ftadd
 11841  0023C4  0E07               	movlw	7
 11842  0023C6  0100               	movlb	0	; () banked
 11843  0023C8  1798               	andwf	??___ftadd& (0+255),f,b
 11844  0023CA  B4D8               	btfsc	status,2,c
 11845  0023CC  D008               	goto	l4834
 11846  0023CE  D7E9               	goto	l4826
 11847  0023D0                     l4832:
 11848                           
 11849                           ; BSR set to: 0
 11850  0023D0  0100               	movlb	0	; () banked
 11851  0023D2  90D8               	bcf	status,0,c
 11852  0023D4  3397               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11853  0023D6  3396               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11854  0023D8  3395               	rrcf	___ftadd@f2& (0+255),f,b
 11855  0023DA  0100               	movlb	0	; () banked
 11856  0023DC  2B9C               	incf	___ftadd@exp2& (0+255),f,b
 11857  0023DE                     l4834:
 11858                           
 11859                           ; BSR set to: 0
 11860  0023DE  0100               	movlb	0	; () banked
 11861  0023E0  519C               	movf	___ftadd@exp2& (0+255),w,b
 11862  0023E2  0100               	movlb	0	; () banked
 11863  0023E4  199D               	xorwf	___ftadd@exp1& (0+255),w,b
 11864  0023E6  A4D8               	btfss	status,2,c
 11865  0023E8  D7F3               	goto	l4832
 11866  0023EA                     l878:
 11867                           
 11868                           ; BSR set to: 0
 11869  0023EA  0100               	movlb	0	; () banked
 11870  0023EC  AF9B               	btfss	___ftadd@sign& (0+255),7,b
 11871  0023EE  D012               	goto	l887
 11872                           
 11873                           ; BSR set to: 0
 11874  0023F0  0EFF               	movlw	255
 11875  0023F2  0100               	movlb	0	; () banked
 11876  0023F4  1B92               	xorwf	___ftadd@f1& (0+255),f,b
 11877  0023F6  0EFF               	movlw	255
 11878  0023F8  0100               	movlb	0	; () banked
 11879  0023FA  1B93               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11880  0023FC  0EFF               	movlw	255
 11881  0023FE  0100               	movlb	0	; () banked
 11882  002400  1B94               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11883  002402  0E01               	movlw	1
 11884  002404  0100               	movlb	0	; () banked
 11885  002406  2792               	addwf	___ftadd@f1& (0+255),f,b
 11886  002408  0E00               	movlw	0
 11887  00240A  0100               	movlb	0	; () banked
 11888  00240C  2393               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11889  00240E  0E00               	movlw	0
 11890  002410  0100               	movlb	0	; () banked
 11891  002412  2394               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11892  002414                     l887:
 11893                           
 11894                           ; BSR set to: 0
 11895  002414  0100               	movlb	0	; () banked
 11896  002416  AD9B               	btfss	___ftadd@sign& (0+255),6,b
 11897  002418  D012               	goto	l4840
 11898                           
 11899                           ; BSR set to: 0
 11900  00241A  0EFF               	movlw	255
 11901  00241C  0100               	movlb	0	; () banked
 11902  00241E  1B95               	xorwf	___ftadd@f2& (0+255),f,b
 11903  002420  0EFF               	movlw	255
 11904  002422  0100               	movlb	0	; () banked
 11905  002424  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11906  002426  0EFF               	movlw	255
 11907  002428  0100               	movlb	0	; () banked
 11908  00242A  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11909  00242C  0E01               	movlw	1
 11910  00242E  0100               	movlb	0	; () banked
 11911  002430  2795               	addwf	___ftadd@f2& (0+255),f,b
 11912  002432  0E00               	movlw	0
 11913  002434  0100               	movlb	0	; () banked
 11914  002436  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11915  002438  0E00               	movlw	0
 11916  00243A  0100               	movlb	0	; () banked
 11917  00243C  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11918  00243E                     l4840:
 11919                           
 11920                           ; BSR set to: 0
 11921  00243E  0E00               	movlw	0
 11922  002440  0100               	movlb	0	; () banked
 11923  002442  6F9B               	movwf	___ftadd@sign& (0+255),b
 11924                           
 11925                           ; BSR set to: 0
 11926  002444  0100               	movlb	0	; () banked
 11927  002446  5192               	movf	___ftadd@f1& (0+255),w,b
 11928  002448  0100               	movlb	0	; () banked
 11929  00244A  2795               	addwf	___ftadd@f2& (0+255),f,b
 11930  00244C  0100               	movlb	0	; () banked
 11931  00244E  5193               	movf	(___ftadd@f1+1)& (0+255),w,b
 11932  002450  0100               	movlb	0	; () banked
 11933  002452  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11934  002454  0100               	movlb	0	; () banked
 11935  002456  5194               	movf	(___ftadd@f1+2)& (0+255),w,b
 11936  002458  0100               	movlb	0	; () banked
 11937  00245A  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11938                           
 11939                           ; BSR set to: 0
 11940  00245C  0100               	movlb	0	; () banked
 11941  00245E  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11942  002460  D015               	goto	l4850
 11943                           
 11944                           ; BSR set to: 0
 11945  002462  0EFF               	movlw	255
 11946  002464  0100               	movlb	0	; () banked
 11947  002466  1B95               	xorwf	___ftadd@f2& (0+255),f,b
 11948  002468  0EFF               	movlw	255
 11949  00246A  0100               	movlb	0	; () banked
 11950  00246C  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11951  00246E  0EFF               	movlw	255
 11952  002470  0100               	movlb	0	; () banked
 11953  002472  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11954  002474  0E01               	movlw	1
 11955  002476  0100               	movlb	0	; () banked
 11956  002478  2795               	addwf	___ftadd@f2& (0+255),f,b
 11957  00247A  0E00               	movlw	0
 11958  00247C  0100               	movlb	0	; () banked
 11959  00247E  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11960  002480  0E00               	movlw	0
 11961  002482  0100               	movlb	0	; () banked
 11962  002484  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11963                           
 11964                           ; BSR set to: 0
 11965  002486  0E01               	movlw	1
 11966  002488  0100               	movlb	0	; () banked
 11967  00248A  6F9B               	movwf	___ftadd@sign& (0+255),b
 11968  00248C                     l4850:
 11969                           
 11970                           ; BSR set to: 0
 11971  00248C  C095  F01C         	movff	___ftadd@f2,___ftpack@arg
 11972  002490  C096  F01D         	movff	___ftadd@f2+1,___ftpack@arg+1
 11973  002494  C097  F01E         	movff	___ftadd@f2+2,___ftpack@arg+2
 11974  002498  C09D  F01F         	movff	___ftadd@exp1,___ftpack@exp
 11975  00249C  C09B  F020         	movff	___ftadd@sign,___ftpack@sign
 11976  0024A0  EC6B  F019         	call	___ftpack	;wreg free
 11977  0024A4  C01C  F092         	movff	?___ftpack,?___ftadd
 11978  0024A8  C01D  F093         	movff	?___ftpack+1,?___ftadd+1
 11979  0024AC  C01E  F094         	movff	?___ftpack+2,?___ftadd+2
 11980  0024B0  0012               	return	
 11981  0024B2                     __end_of___ftadd:
 11982                           	opt stack 0
 11983                           tblptru	equ	0xFF8
 11984                           tblptrh	equ	0xFF7
 11985                           tblptrl	equ	0xFF6
 11986                           tablat	equ	0xFF5
 11987                           prodh	equ	0xFF4
 11988                           prodl	equ	0xFF3
 11989                           intcon	equ	0xFF2
 11990                           indf0	equ	0xFEF
 11991                           postinc0	equ	0xFEE
 11992                           fsr0h	equ	0xFEA
 11993                           fsr0l	equ	0xFE9
 11994                           wreg	equ	0xFE8
 11995                           indf1	equ	0xFE7
 11996                           postdec1	equ	0xFE5
 11997                           fsr1h	equ	0xFE2
 11998                           fsr1l	equ	0xFE1
 11999                           indf2	equ	0xFDF
 12000                           postinc2	equ	0xFDE
 12001                           postdec2	equ	0xFDD
 12002                           fsr2h	equ	0xFDA
 12003                           fsr2l	equ	0xFD9
 12004                           status	equ	0xFD8
 12005                           
 12006 ;; *************** function ___ftpack *****************
 12007 ;; Defined at:
 12008 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  arg             3   27[COMRAM] unsigned um
 12011 ;;  exp             1   30[COMRAM] unsigned char 
 12012 ;;  sign            1   31[COMRAM] unsigned char 
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;		None
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  3   27[COMRAM] float 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12024 ;;      Params:         5       0       0       0       0       0       0
 12025 ;;      Locals:         0       0       0       0       0       0       0
 12026 ;;      Temps:          3       0       0       0       0       0       0
 12027 ;;      Totals:         8       0       0       0       0       0       0
 12028 ;;Total ram usage:        8 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    2
 12031 ;; This function calls:
 12032 ;;		Nothing
 12033 ;; This function is called by:
 12034 ;;		___awtoft
 12035 ;;		___ftadd
 12036 ;;		___ftdiv
 12037 ;;		___ftmul
 12038 ;;		___lltoft
 12039 ;;		___lwtoft
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text47
 12044  0032D6                     __ptext47:
 12045                           	opt stack 0
 12046  0032D6                     ___ftpack:
 12047                           	opt stack 25
 12048                           
 12049                           ;incstack = 0
 12050  0032D6  501F               	movf	___ftpack@exp,w,c
 12051  0032D8  B4D8               	btfsc	status,2,c
 12052  0032DA  D005               	goto	l4714
 12053  0032DC  501C               	movf	___ftpack@arg,w,c
 12054  0032DE  101D               	iorwf	___ftpack@arg+1,w,c
 12055  0032E0  101E               	iorwf	___ftpack@arg+2,w,c
 12056  0032E2  A4D8               	btfss	status,2,c
 12057  0032E4  D00C               	goto	l4720
 12058  0032E6                     l4714:
 12059  0032E6  0E00               	movlw	0
 12060  0032E8  6E1C               	movwf	?___ftpack,c
 12061  0032EA  0E00               	movlw	0
 12062  0032EC  6E1D               	movwf	?___ftpack+1,c
 12063  0032EE  0E00               	movlw	0
 12064  0032F0  6E1E               	movwf	?___ftpack+2,c
 12065  0032F2  0012               	return	
 12066  0032F4                     l4718:
 12067  0032F4  2A1F               	incf	___ftpack@exp,f,c
 12068  0032F6  90D8               	bcf	status,0,c
 12069  0032F8  321E               	rrcf	___ftpack@arg+2,f,c
 12070  0032FA  321D               	rrcf	___ftpack@arg+1,f,c
 12071  0032FC  321C               	rrcf	___ftpack@arg,f,c
 12072  0032FE                     l4720:
 12073  0032FE  0E00               	movlw	0
 12074  003300  141C               	andwf	___ftpack@arg,w,c
 12075  003302  6E21               	movwf	??___ftpack& (0+255),c
 12076  003304  0E00               	movlw	0
 12077  003306  141D               	andwf	___ftpack@arg+1,w,c
 12078  003308  6E22               	movwf	(??___ftpack+1)& (0+255),c
 12079  00330A  0EFE               	movlw	254
 12080  00330C  141E               	andwf	___ftpack@arg+2,w,c
 12081  00330E  6E23               	movwf	(??___ftpack+2)& (0+255),c
 12082  003310  5021               	movf	??___ftpack,w,c
 12083  003312  1022               	iorwf	??___ftpack+1,w,c
 12084  003314  1023               	iorwf	??___ftpack+2,w,c
 12085  003316  B4D8               	btfsc	status,2,c
 12086  003318  D00C               	goto	l4726
 12087  00331A  D7EC               	goto	l4718
 12088  00331C                     l4722:
 12089  00331C  2A1F               	incf	___ftpack@exp,f,c
 12090  00331E  0E01               	movlw	1
 12091  003320  261C               	addwf	___ftpack@arg,f,c
 12092  003322  0E00               	movlw	0
 12093  003324  221D               	addwfc	___ftpack@arg+1,f,c
 12094  003326  0E00               	movlw	0
 12095  003328  221E               	addwfc	___ftpack@arg+2,f,c
 12096  00332A  90D8               	bcf	status,0,c
 12097  00332C  321E               	rrcf	___ftpack@arg+2,f,c
 12098  00332E  321D               	rrcf	___ftpack@arg+1,f,c
 12099  003330  321C               	rrcf	___ftpack@arg,f,c
 12100  003332                     l4726:
 12101  003332  0E00               	movlw	0
 12102  003334  141C               	andwf	___ftpack@arg,w,c
 12103  003336  6E21               	movwf	??___ftpack& (0+255),c
 12104  003338  0E00               	movlw	0
 12105  00333A  141D               	andwf	___ftpack@arg+1,w,c
 12106  00333C  6E22               	movwf	(??___ftpack+1)& (0+255),c
 12107  00333E  0EFF               	movlw	255
 12108  003340  141E               	andwf	___ftpack@arg+2,w,c
 12109  003342  6E23               	movwf	(??___ftpack+2)& (0+255),c
 12110  003344  5021               	movf	??___ftpack,w,c
 12111  003346  1022               	iorwf	??___ftpack+1,w,c
 12112  003348  1023               	iorwf	??___ftpack+2,w,c
 12113  00334A  B4D8               	btfsc	status,2,c
 12114  00334C  D006               	goto	l4730
 12115  00334E  D7E6               	goto	l4722
 12116  003350                     l4728:
 12117  003350  061F               	decf	___ftpack@exp,f,c
 12118  003352  90D8               	bcf	status,0,c
 12119  003354  361C               	rlcf	___ftpack@arg,f,c
 12120  003356  361D               	rlcf	___ftpack@arg+1,f,c
 12121  003358  361E               	rlcf	___ftpack@arg+2,f,c
 12122  00335A                     l4730:
 12123  00335A  BE1D               	btfsc	___ftpack@arg+1,7,c
 12124  00335C  D003               	goto	l840
 12125  00335E  0E02               	movlw	2
 12126  003360  601F               	cpfslt	___ftpack@exp,c
 12127  003362  D7F6               	goto	l4728
 12128  003364                     l840:
 12129  003364  A01F               	btfss	___ftpack@exp,0,c
 12130  003366  9E1D               	bcf	___ftpack@arg+1,7,c
 12131  003368  90D8               	bcf	status,0,c
 12132  00336A  321F               	rrcf	___ftpack@exp,f,c
 12133  00336C  501F               	movf	___ftpack@exp,w,c
 12134  00336E  121E               	iorwf	___ftpack@arg+2,f,c
 12135  003370  5020               	movf	___ftpack@sign,w,c
 12136  003372  A4D8               	btfss	status,2,c
 12137  003374  8E1E               	bsf	___ftpack@arg+2,7,c
 12138  003376  C01C  F01C         	movff	___ftpack@arg,?___ftpack
 12139  00337A  C01D  F01D         	movff	___ftpack@arg+1,?___ftpack+1
 12140  00337E  C01E  F01E         	movff	___ftpack@arg+2,?___ftpack+2
 12141  003382  0012               	return	
 12142  003384                     __end_of___ftpack:
 12143                           	opt stack 0
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           intcon	equ	0xFF2
 12151                           indf0	equ	0xFEF
 12152                           postinc0	equ	0xFEE
 12153                           fsr0h	equ	0xFEA
 12154                           fsr0l	equ	0xFE9
 12155                           wreg	equ	0xFE8
 12156                           indf1	equ	0xFE7
 12157                           postdec1	equ	0xFE5
 12158                           fsr1h	equ	0xFE2
 12159                           fsr1l	equ	0xFE1
 12160                           indf2	equ	0xFDF
 12161                           postinc2	equ	0xFDE
 12162                           postdec2	equ	0xFDD
 12163                           fsr2h	equ	0xFDA
 12164                           fsr2l	equ	0xFD9
 12165                           status	equ	0xFD8
 12166                           
 12167 ;; *************** function ___ftneg *****************
 12168 ;; Defined at:
 12169 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;  f1              3   27[COMRAM] float 
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;		None
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  3   27[COMRAM] float 
 12176 ;; Registers used:
 12177 ;;		wreg, status,2, status,0
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12183 ;;      Params:         3       0       0       0       0       0       0
 12184 ;;      Locals:         0       0       0       0       0       0       0
 12185 ;;      Temps:          0       0       0       0       0       0       0
 12186 ;;      Totals:         3       0       0       0       0       0       0
 12187 ;;Total ram usage:        3 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; Hardware stack levels required when called:    2
 12190 ;; This function calls:
 12191 ;;		Nothing
 12192 ;; This function is called by:
 12193 ;;		_sprintf
 12194 ;; This function uses a non-reentrant model
 12195 ;;
 12196                           
 12197                           	psect	text48
 12198  003B2A                     __ptext48:
 12199                           	opt stack 0
 12200  003B2A                     ___ftneg:
 12201                           	opt stack 25
 12202                           
 12203                           ;incstack = 0
 12204  003B2A  501C               	movf	___ftneg@f1,w,c
 12205  003B2C  101D               	iorwf	___ftneg@f1+1,w,c
 12206  003B2E  101E               	iorwf	___ftneg@f1+2,w,c
 12207  003B30  B4D8               	btfsc	status,2,c
 12208  003B32  D006               	goto	l937
 12209  003B34  0E00               	movlw	0
 12210  003B36  1A1C               	xorwf	___ftneg@f1,f,c
 12211  003B38  0E00               	movlw	0
 12212  003B3A  1A1D               	xorwf	___ftneg@f1+1,f,c
 12213  003B3C  0E80               	movlw	128
 12214  003B3E  1A1E               	xorwf	___ftneg@f1+2,f,c
 12215  003B40                     l937:
 12216  003B40  C01C  F01C         	movff	___ftneg@f1,?___ftneg
 12217  003B44  C01D  F01D         	movff	___ftneg@f1+1,?___ftneg+1
 12218  003B48  C01E  F01E         	movff	___ftneg@f1+2,?___ftneg+2
 12219  003B4C  0012               	return		;funcret
 12220  003B4E                     __end_of___ftneg:
 12221                           	opt stack 0
 12222                           tblptru	equ	0xFF8
 12223                           tblptrh	equ	0xFF7
 12224                           tblptrl	equ	0xFF6
 12225                           tablat	equ	0xFF5
 12226                           prodh	equ	0xFF4
 12227                           prodl	equ	0xFF3
 12228                           intcon	equ	0xFF2
 12229                           indf0	equ	0xFEF
 12230                           postinc0	equ	0xFEE
 12231                           fsr0h	equ	0xFEA
 12232                           fsr0l	equ	0xFE9
 12233                           wreg	equ	0xFE8
 12234                           indf1	equ	0xFE7
 12235                           postdec1	equ	0xFE5
 12236                           fsr1h	equ	0xFE2
 12237                           fsr1l	equ	0xFE1
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           postdec2	equ	0xFDD
 12241                           fsr2h	equ	0xFDA
 12242                           fsr2l	equ	0xFD9
 12243                           status	equ	0xFD8
 12244                           
 12245 ;; *************** function ___ftge *****************
 12246 ;; Defined at:
 12247 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  ff1             3   27[COMRAM] float 
 12250 ;;  ff2             3   30[COMRAM] float 
 12251 ;; Auto vars:     Size  Location     Type
 12252 ;;		None
 12253 ;; Return value:  Size  Location     Type
 12254 ;;		None               void
 12255 ;; Registers used:
 12256 ;;		wreg, status,2, status,0
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12262 ;;      Params:         6       0       0       0       0       0       0
 12263 ;;      Locals:         0       0       0       0       0       0       0
 12264 ;;      Temps:          3       0       0       0       0       0       0
 12265 ;;      Totals:         9       0       0       0       0       0       0
 12266 ;;Total ram usage:        9 bytes
 12267 ;; Hardware stack levels used:    1
 12268 ;; Hardware stack levels required when called:    2
 12269 ;; This function calls:
 12270 ;;		Nothing
 12271 ;; This function is called by:
 12272 ;;		_sprintf
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text49
 12277  0034BE                     __ptext49:
 12278                           	opt stack 0
 12279  0034BE                     ___ftge:
 12280                           	opt stack 25
 12281                           
 12282                           ;incstack = 0
 12283  0034BE  AE1E               	btfss	___ftge@ff1+2,7,c
 12284  0034C0  D016               	goto	l5172
 12285  0034C2  C01C  F022         	movff	___ftge@ff1,??___ftge
 12286  0034C6  C01D  F023         	movff	___ftge@ff1+1,??___ftge+1
 12287  0034CA  C01E  F024         	movff	___ftge@ff1+2,??___ftge+2
 12288  0034CE  1E22               	comf	??___ftge,f,c
 12289  0034D0  1E23               	comf	??___ftge+1,f,c
 12290  0034D2  1E24               	comf	??___ftge+2,f,c
 12291  0034D4  2A22               	incf	??___ftge,f,c
 12292  0034D6  0E00               	movlw	0
 12293  0034D8  2223               	addwfc	??___ftge+1,f,c
 12294  0034DA  2224               	addwfc	??___ftge+2,f,c
 12295  0034DC  0E00               	movlw	0
 12296  0034DE  2422               	addwf	??___ftge,w,c
 12297  0034E0  6E1C               	movwf	___ftge@ff1,c
 12298  0034E2  0E00               	movlw	0
 12299  0034E4  2023               	addwfc	??___ftge+1,w,c
 12300  0034E6  6E1D               	movwf	___ftge@ff1+1,c
 12301  0034E8  0E80               	movlw	128
 12302  0034EA  2024               	addwfc	??___ftge+2,w,c
 12303  0034EC  6E1E               	movwf	___ftge@ff1+2,c
 12304  0034EE                     l5172:
 12305  0034EE  AE21               	btfss	___ftge@ff2+2,7,c
 12306  0034F0  D016               	goto	l5176
 12307  0034F2  C01F  F022         	movff	___ftge@ff2,??___ftge
 12308  0034F6  C020  F023         	movff	___ftge@ff2+1,??___ftge+1
 12309  0034FA  C021  F024         	movff	___ftge@ff2+2,??___ftge+2
 12310  0034FE  1E22               	comf	??___ftge,f,c
 12311  003500  1E23               	comf	??___ftge+1,f,c
 12312  003502  1E24               	comf	??___ftge+2,f,c
 12313  003504  2A22               	incf	??___ftge,f,c
 12314  003506  0E00               	movlw	0
 12315  003508  2223               	addwfc	??___ftge+1,f,c
 12316  00350A  2224               	addwfc	??___ftge+2,f,c
 12317  00350C  0E00               	movlw	0
 12318  00350E  2422               	addwf	??___ftge,w,c
 12319  003510  6E1F               	movwf	___ftge@ff2,c
 12320  003512  0E00               	movlw	0
 12321  003514  2023               	addwfc	??___ftge+1,w,c
 12322  003516  6E20               	movwf	___ftge@ff2+1,c
 12323  003518  0E80               	movlw	128
 12324  00351A  2024               	addwfc	??___ftge+2,w,c
 12325  00351C  6E21               	movwf	___ftge@ff2+2,c
 12326  00351E                     l5176:
 12327  00351E  0E00               	movlw	0
 12328  003520  1A1C               	xorwf	___ftge@ff1,f,c
 12329  003522  0E00               	movlw	0
 12330  003524  1A1D               	xorwf	___ftge@ff1+1,f,c
 12331  003526  0E80               	movlw	128
 12332  003528  1A1E               	xorwf	___ftge@ff1+2,f,c
 12333  00352A  0E00               	movlw	0
 12334  00352C  1A1F               	xorwf	___ftge@ff2,f,c
 12335  00352E  0E00               	movlw	0
 12336  003530  1A20               	xorwf	___ftge@ff2+1,f,c
 12337  003532  0E80               	movlw	128
 12338  003534  1A21               	xorwf	___ftge@ff2+2,f,c
 12339  003536  501F               	movf	___ftge@ff2,w,c
 12340  003538  5C1C               	subwf	___ftge@ff1,w,c
 12341  00353A  5020               	movf	___ftge@ff2+1,w,c
 12342  00353C  581D               	subwfb	___ftge@ff1+1,w,c
 12343  00353E  5021               	movf	___ftge@ff2+2,w,c
 12344  003540  581E               	subwfb	___ftge@ff1+2,w,c
 12345  003542  B0D8               	btfsc	status,0,c
 12346  003544  D002               	goto	l5182
 12347  003546  90D8               	bcf	status,0,c
 12348  003548  0012               	return	
 12349  00354A                     l5182:
 12350  00354A  80D8               	bsf	status,0,c
 12351  00354C  0012               	return	
 12352  00354E                     __end_of___ftge:
 12353                           	opt stack 0
 12354                           tblptru	equ	0xFF8
 12355                           tblptrh	equ	0xFF7
 12356                           tblptrl	equ	0xFF6
 12357                           tablat	equ	0xFF5
 12358                           prodh	equ	0xFF4
 12359                           prodl	equ	0xFF3
 12360                           intcon	equ	0xFF2
 12361                           indf0	equ	0xFEF
 12362                           postinc0	equ	0xFEE
 12363                           fsr0h	equ	0xFEA
 12364                           fsr0l	equ	0xFE9
 12365                           wreg	equ	0xFE8
 12366                           indf1	equ	0xFE7
 12367                           postdec1	equ	0xFE5
 12368                           fsr1h	equ	0xFE2
 12369                           fsr1l	equ	0xFE1
 12370                           indf2	equ	0xFDF
 12371                           postinc2	equ	0xFDE
 12372                           postdec2	equ	0xFDD
 12373                           fsr2h	equ	0xFDA
 12374                           fsr2l	equ	0xFD9
 12375                           status	equ	0xFD8
 12376                           
 12377 ;; *************** function _memset *****************
 12378 ;; Defined at:
 12379 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  p1              2   27[COMRAM] PTR void 
 12382 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12383 ;;  c               2   29[COMRAM] int 
 12384 ;;  n               2   31[COMRAM] unsigned int 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  p               2   33[COMRAM] PTR unsigned char 
 12387 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  2   27[COMRAM] PTR void 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12397 ;;      Params:         6       0       0       0       0       0       0
 12398 ;;      Locals:         2       0       0       0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0
 12400 ;;      Totals:         8       0       0       0       0       0       0
 12401 ;;Total ram usage:        8 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; Hardware stack levels required when called:    2
 12404 ;; This function calls:
 12405 ;;		Nothing
 12406 ;; This function is called by:
 12407 ;;		_util_beacon_transmission
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text50
 12412  003AB4                     __ptext50:
 12413                           	opt stack 0
 12414  003AB4                     _memset:
 12415                           	opt stack 26
 12416                           
 12417                           ;incstack = 0
 12418  003AB4  C01C  F022         	movff	memset@p1,memset@p
 12419  003AB8  C01D  F023         	movff	memset@p1+1,memset@p+1
 12420  003ABC  D008               	goto	l5244
 12421  003ABE                     l5240:
 12422  003ABE  C022  FFD9         	movff	memset@p,fsr2l
 12423  003AC2  C023  FFDA         	movff	memset@p+1,fsr2h
 12424  003AC6  C01E  FFDF         	movff	memset@c,indf2
 12425  003ACA  4A22               	infsnz	memset@p,f,c
 12426  003ACC  2A23               	incf	memset@p+1,f,c
 12427  003ACE                     l5244:
 12428  003ACE  0620               	decf	memset@n,f,c
 12429  003AD0  A0D8               	btfss	status,0,c
 12430  003AD2  0621               	decf	memset@n+1,f,c
 12431  003AD4  2820               	incf	memset@n,w,c
 12432  003AD6  E1F3               	bnz	l5240
 12433  003AD8  2821               	incf	memset@n+1,w,c
 12434  003ADA  B4D8               	btfsc	status,2,c
 12435  003ADC  0012               	return	
 12436  003ADE  D7EF               	goto	l5240
 12437  003AE0                     __end_of_memset:
 12438                           	opt stack 0
 12439                           tblptru	equ	0xFF8
 12440                           tblptrh	equ	0xFF7
 12441                           tblptrl	equ	0xFF6
 12442                           tablat	equ	0xFF5
 12443                           prodh	equ	0xFF4
 12444                           prodl	equ	0xFF3
 12445                           intcon	equ	0xFF2
 12446                           indf0	equ	0xFEF
 12447                           postinc0	equ	0xFEE
 12448                           fsr0h	equ	0xFEA
 12449                           fsr0l	equ	0xFE9
 12450                           wreg	equ	0xFE8
 12451                           indf1	equ	0xFE7
 12452                           postdec1	equ	0xFE5
 12453                           fsr1h	equ	0xFE2
 12454                           fsr1l	equ	0xFE1
 12455                           indf2	equ	0xFDF
 12456                           postinc2	equ	0xFDE
 12457                           postdec2	equ	0xFDD
 12458                           fsr2h	equ	0xFDA
 12459                           fsr2l	equ	0xFD9
 12460                           status	equ	0xFD8
 12461                           
 12462 ;; *************** function _init_initialize *****************
 12463 ;; Defined at:
 12464 ;;		line 18 in file "easat2_init_initialize.c"
 12465 ;; Parameters:    Size  Location     Type
 12466 ;;		None
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;		None
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  1    wreg      void 
 12471 ;; Registers used:
 12472 ;;		wreg, status,2, status,0, cstack
 12473 ;; Tracked objects:
 12474 ;;		On entry : 0/0
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12478 ;;      Params:         0       0       0       0       0       0       0
 12479 ;;      Locals:         0       0       0       0       0       0       0
 12480 ;;      Temps:          0       0       0       0       0       0       0
 12481 ;;      Totals:         0       0       0       0       0       0       0
 12482 ;;Total ram usage:        0 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    3
 12485 ;; This function calls:
 12486 ;;		_init_io_initialize
 12487 ;;		_init_timer1_initialize
 12488 ;;		_init_timer2_initialize
 12489 ;;		_init_watchdogs_initialize
 12490 ;;		_util_pwm_initialize
 12491 ;; This function is called by:
 12492 ;;		_main
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text51
 12497  003BD8                     __ptext51:
 12498                           	opt stack 0
 12499  003BD8                     _init_initialize:
 12500                           	opt stack 27
 12501                           
 12502                           ;easat2_init_initialize.c: 21: init_watchdogs_initialize();
 12503                           
 12504                           ;incstack = 0
 12505  003BD8  ECB6  F01D         	call	_init_watchdogs_initialize	;wreg free
 12506                           
 12507                           ;easat2_init_initialize.c: 24: init_io_initialize();
 12508  003BDC  ECB5  F018         	call	_init_io_initialize	;wreg free
 12509                           
 12510                           ;easat2_init_initialize.c: 27: init_timer1_initialize();
 12511  003BE0  EC70  F01D         	call	_init_timer1_initialize	;wreg free
 12512                           
 12513                           ;easat2_init_initialize.c: 28: init_timer2_initialize();
 12514  003BE4  ECDF  F01D         	call	_init_timer2_initialize	;wreg free
 12515                           
 12516                           ;easat2_init_initialize.c: 31: util_pwm_initialize();
 12517  003BE8  ECC8  F01C         	call	_util_pwm_initialize	;wreg free
 12518  003BEC  0012               	return		;funcret
 12519  003BEE                     __end_of_init_initialize:
 12520                           	opt stack 0
 12521                           tblptru	equ	0xFF8
 12522                           tblptrh	equ	0xFF7
 12523                           tblptrl	equ	0xFF6
 12524                           tablat	equ	0xFF5
 12525                           prodh	equ	0xFF4
 12526                           prodl	equ	0xFF3
 12527                           intcon	equ	0xFF2
 12528                           indf0	equ	0xFEF
 12529                           postinc0	equ	0xFEE
 12530                           fsr0h	equ	0xFEA
 12531                           fsr0l	equ	0xFE9
 12532                           wreg	equ	0xFE8
 12533                           indf1	equ	0xFE7
 12534                           postdec1	equ	0xFE5
 12535                           fsr1h	equ	0xFE2
 12536                           fsr1l	equ	0xFE1
 12537                           indf2	equ	0xFDF
 12538                           postinc2	equ	0xFDE
 12539                           postdec2	equ	0xFDD
 12540                           fsr2h	equ	0xFDA
 12541                           fsr2l	equ	0xFD9
 12542                           status	equ	0xFD8
 12543                           
 12544 ;; *************** function _util_pwm_initialize *****************
 12545 ;; Defined at:
 12546 ;;		line 24 in file "easat2_util_pwm.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;		None
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12560 ;;      Params:         0       0       0       0       0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0
 12563 ;;      Totals:         0       0       0       0       0       0       0
 12564 ;;Total ram usage:        0 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:    2
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_init_initialize
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           	psect	text52
 12575  003990                     __ptext52:
 12576                           	opt stack 0
 12577  003990                     _util_pwm_initialize:
 12578                           	opt stack 27
 12579                           
 12580                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 12581                           
 12582                           ;incstack = 0
 12583  003990  8495               	bsf	3989,2,c	;volatile
 12584                           
 12585                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 12586  003992  8695               	bsf	3989,3,c	;volatile
 12587                           
 12588                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 12589  003994  0EE7               	movlw	-25
 12590  003996  010F               	movlb	15	; () banked
 12591  003998  1749               	andwf	73,f,b	;volatile
 12592                           
 12593                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 12594  00399A  0E7C               	movlw	124
 12595  00399C  6EBB               	movwf	4027,c	;volatile
 12596                           
 12597                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 12598  00399E  0E3F               	movlw	-193
 12599  0039A0  1666               	andwf	3942,f,c	;volatile
 12600                           
 12601                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 12602  0039A2  5066               	movf	3942,w,c	;volatile
 12603  0039A4  0BF0               	andlw	-16
 12604  0039A6  090C               	iorlw	12
 12605  0039A8  6E66               	movwf	3942,c	;volatile
 12606                           
 12607                           ; BSR set to: 15
 12608                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 12609  0039AA  9063               	bcf	3939,0,c	;volatile
 12610                           
 12611                           ; BSR set to: 15
 12612                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 12613  0039AC  8263               	bsf	3939,1,c	;volatile
 12614                           
 12615                           ; BSR set to: 15
 12616                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 12617  0039AE  8463               	bsf	3939,2,c	;volatile
 12618                           
 12619                           ; BSR set to: 15
 12620                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 12621  0039B0  9663               	bcf	3939,3,c	;volatile
 12622                           
 12623                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 12624  0039B2  0E3E               	movlw	62
 12625  0039B4  6E67               	movwf	3943,c	;volatile
 12626                           
 12627                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 12628  0039B6  5066               	movf	3942,w,c	;volatile
 12629  0039B8  0BCF               	andlw	-49
 12630  0039BA  0920               	iorlw	32
 12631  0039BC  6E66               	movwf	3942,c	;volatile
 12632                           
 12633                           ; BSR set to: 15
 12634                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 12635  0039BE  94BA               	bcf	4026,2,c	;volatile
 12636                           
 12637                           ; BSR set to: 15
 12638                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 12639  0039C0  929E               	bcf	3998,1,c	;volatile
 12640                           
 12641                           ; BSR set to: 15
 12642  0039C2  0012               	return		;funcret
 12643  0039C4                     __end_of_util_pwm_initialize:
 12644                           	opt stack 0
 12645                           tblptru	equ	0xFF8
 12646                           tblptrh	equ	0xFF7
 12647                           tblptrl	equ	0xFF6
 12648                           tablat	equ	0xFF5
 12649                           prodh	equ	0xFF4
 12650                           prodl	equ	0xFF3
 12651                           intcon	equ	0xFF2
 12652                           indf0	equ	0xFEF
 12653                           postinc0	equ	0xFEE
 12654                           fsr0h	equ	0xFEA
 12655                           fsr0l	equ	0xFE9
 12656                           wreg	equ	0xFE8
 12657                           indf1	equ	0xFE7
 12658                           postdec1	equ	0xFE5
 12659                           fsr1h	equ	0xFE2
 12660                           fsr1l	equ	0xFE1
 12661                           indf2	equ	0xFDF
 12662                           postinc2	equ	0xFDE
 12663                           postdec2	equ	0xFDD
 12664                           fsr2h	equ	0xFDA
 12665                           fsr2l	equ	0xFD9
 12666                           status	equ	0xFD8
 12667                           
 12668 ;; *************** function _init_watchdogs_initialize *****************
 12669 ;; Defined at:
 12670 ;;		line 36 in file "easat2_init_initialize.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2, status,0
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12684 ;;      Params:         0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0
 12686 ;;      Temps:          1       0       0       0       0       0       0
 12687 ;;      Totals:         1       0       0       0       0       0       0
 12688 ;;Total ram usage:        1 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    2
 12691 ;; This function calls:
 12692 ;;		Nothing
 12693 ;; This function is called by:
 12694 ;;		_init_initialize
 12695 ;;		_main_loop
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text53
 12700  003B6C                     __ptext53:
 12701                           	opt stack 0
 12702  003B6C                     _init_watchdogs_initialize:
 12703                           	opt stack 27
 12704                           
 12705                           ;easat2_init_initialize.c: 39: (PORTDbits.RD5) = !(PORTDbits.RD5);
 12706                           
 12707                           ; BSR set to: 15
 12708                           ;incstack = 0
 12709  003B6C  BA83               	btfsc	3971,5,c	;volatile
 12710  003B6E  D003               	goto	u4060
 12711  003B70  6A1C               	clrf	??_init_watchdogs_initialize& (0+255),c
 12712  003B72  2A1C               	incf	??_init_watchdogs_initialize& (0+255),f,c
 12713  003B74  D001               	goto	u4078
 12714  003B76                     u4060:
 12715  003B76  6A1C               	clrf	??_init_watchdogs_initialize& (0+255),c
 12716  003B78                     u4078:
 12717  003B78  3A1C               	swapf	??_init_watchdogs_initialize,f,c
 12718  003B7A  461C               	rlncf	??_init_watchdogs_initialize,f,c
 12719  003B7C  5083               	movf	3971,w,c	;volatile
 12720  003B7E  181C               	xorwf	??_init_watchdogs_initialize,w,c
 12721  003B80  0BDF               	andlw	-33
 12722  003B82  181C               	xorwf	??_init_watchdogs_initialize,w,c
 12723  003B84  6E83               	movwf	3971,c	;volatile
 12724  003B86  0004               	clrwdt		;# 
 12725  003B88  0012               	return		;funcret
 12726  003B8A                     __end_of_init_watchdogs_initialize:
 12727                           	opt stack 0
 12728                           tblptru	equ	0xFF8
 12729                           tblptrh	equ	0xFF7
 12730                           tblptrl	equ	0xFF6
 12731                           tablat	equ	0xFF5
 12732                           prodh	equ	0xFF4
 12733                           prodl	equ	0xFF3
 12734                           intcon	equ	0xFF2
 12735                           indf0	equ	0xFEF
 12736                           postinc0	equ	0xFEE
 12737                           fsr0h	equ	0xFEA
 12738                           fsr0l	equ	0xFE9
 12739                           wreg	equ	0xFE8
 12740                           indf1	equ	0xFE7
 12741                           postdec1	equ	0xFE5
 12742                           fsr1h	equ	0xFE2
 12743                           fsr1l	equ	0xFE1
 12744                           indf2	equ	0xFDF
 12745                           postinc2	equ	0xFDE
 12746                           postdec2	equ	0xFDD
 12747                           fsr2h	equ	0xFDA
 12748                           fsr2l	equ	0xFD9
 12749                           status	equ	0xFD8
 12750                           
 12751 ;; *************** function _init_timer2_initialize *****************
 12752 ;; Defined at:
 12753 ;;		line 70 in file "easat2_init_timer.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;		None
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;		None
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1    wreg      void 
 12760 ;; Registers used:
 12761 ;;		wreg, status,2
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12767 ;;      Params:         0       0       0       0       0       0       0
 12768 ;;      Locals:         0       0       0       0       0       0       0
 12769 ;;      Temps:          0       0       0       0       0       0       0
 12770 ;;      Totals:         0       0       0       0       0       0       0
 12771 ;;Total ram usage:        0 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; Hardware stack levels required when called:    2
 12774 ;; This function calls:
 12775 ;;		Nothing
 12776 ;; This function is called by:
 12777 ;;		_init_initialize
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           	psect	text54
 12782  003BBE                     __ptext54:
 12783                           	opt stack 0
 12784  003BBE                     _init_timer2_initialize:
 12785                           	opt stack 27
 12786                           
 12787                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 12788                           
 12789                           ;incstack = 0
 12790  003BBE  94BA               	bcf	4026,2,c	;volatile
 12791                           
 12792                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 12793  003BC0  80BA               	bsf	4026,0,c	;volatile
 12794                           
 12795                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 12796  003BC2  92BA               	bcf	4026,1,c	;volatile
 12797                           
 12798                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 12799  003BC4  96BA               	bcf	4026,3,c	;volatile
 12800  003BC6  98BA               	bcf	4026,4,c	;volatile
 12801  003BC8  9ABA               	bcf	4026,5,c	;volatile
 12802  003BCA  9CBA               	bcf	4026,6,c	;volatile
 12803                           
 12804                           ;easat2_init_timer.c: 93: TMR2 = 0;
 12805  003BCC  0E00               	movlw	0
 12806  003BCE  6EBC               	movwf	4028,c	;volatile
 12807                           
 12808                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 12809  003BD0  829D               	bsf	3997,1,c	;volatile
 12810                           
 12811                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 12812  003BD2  929F               	bcf	3999,1,c	;volatile
 12813                           
 12814                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 12815  003BD4  929E               	bcf	3998,1,c	;volatile
 12816  003BD6  0012               	return		;funcret
 12817  003BD8                     __end_of_init_timer2_initialize:
 12818                           	opt stack 0
 12819                           tblptru	equ	0xFF8
 12820                           tblptrh	equ	0xFF7
 12821                           tblptrl	equ	0xFF6
 12822                           tablat	equ	0xFF5
 12823                           prodh	equ	0xFF4
 12824                           prodl	equ	0xFF3
 12825                           intcon	equ	0xFF2
 12826                           indf0	equ	0xFEF
 12827                           postinc0	equ	0xFEE
 12828                           fsr0h	equ	0xFEA
 12829                           fsr0l	equ	0xFE9
 12830                           wreg	equ	0xFE8
 12831                           indf1	equ	0xFE7
 12832                           postdec1	equ	0xFE5
 12833                           fsr1h	equ	0xFE2
 12834                           fsr1l	equ	0xFE1
 12835                           indf2	equ	0xFDF
 12836                           postinc2	equ	0xFDE
 12837                           postdec2	equ	0xFDD
 12838                           fsr2h	equ	0xFDA
 12839                           fsr2l	equ	0xFD9
 12840                           status	equ	0xFD8
 12841                           
 12842 ;; *************** function _init_timer1_initialize *****************
 12843 ;; Defined at:
 12844 ;;		line 17 in file "easat2_init_timer.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		wreg, status,2
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12858 ;;      Params:         0       0       0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0
 12861 ;;      Totals:         0       0       0       0       0       0       0
 12862 ;;Total ram usage:        0 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:    2
 12865 ;; This function calls:
 12866 ;;		Nothing
 12867 ;; This function is called by:
 12868 ;;		_init_initialize
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           	psect	text55
 12873  003AE0                     __ptext55:
 12874                           	opt stack 0
 12875  003AE0                     _init_timer1_initialize:
 12876                           	opt stack 27
 12877                           
 12878                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 12879                           
 12880                           ;incstack = 0
 12881  003AE0  8ED0               	bsf	4048,7,c	;volatile
 12882                           
 12883                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 12884  003AE2  90CD               	bcf	4045,0,c	;volatile
 12885                           
 12886                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 12887  003AE4  9CCD               	bcf	4045,6,c	;volatile
 12888                           
 12889                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 12890  003AE6  9ECD               	bcf	4045,7,c	;volatile
 12891                           
 12892                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 12893  003AE8  9ACD               	bcf	4045,5,c	;volatile
 12894                           
 12895                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 12896  003AEA  98CD               	bcf	4045,4,c	;volatile
 12897                           
 12898                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 12899  003AEC  96CD               	bcf	4045,3,c	;volatile
 12900                           
 12901                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 12902  003AEE  82CD               	bsf	4045,1,c	;volatile
 12903                           
 12904                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 12905  003AF0  0EEC               	movlw	236
 12906  003AF2  6ECF               	movwf	4047,c	;volatile
 12907                           
 12908                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 12909  003AF4  0E77               	movlw	119
 12910  003AF6  6ECE               	movwf	4046,c	;volatile
 12911                           
 12912                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 12913  003AF8  809D               	bsf	3997,0,c	;volatile
 12914                           
 12915                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 12916  003AFA  809F               	bsf	3999,0,c	;volatile
 12917                           
 12918                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 12919  003AFC  909E               	bcf	3998,0,c	;volatile
 12920                           
 12921                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 12922  003AFE  80CD               	bsf	4045,0,c	;volatile
 12923                           
 12924                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 12925  003B00  9CF2               	bcf	intcon,6,c	;volatile
 12926                           
 12927                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 12928  003B02  8EF2               	bsf	intcon,7,c	;volatile
 12929  003B04  0012               	return		;funcret
 12930  003B06                     __end_of_init_timer1_initialize:
 12931                           	opt stack 0
 12932                           tblptru	equ	0xFF8
 12933                           tblptrh	equ	0xFF7
 12934                           tblptrl	equ	0xFF6
 12935                           tablat	equ	0xFF5
 12936                           prodh	equ	0xFF4
 12937                           prodl	equ	0xFF3
 12938                           intcon	equ	0xFF2
 12939                           indf0	equ	0xFEF
 12940                           postinc0	equ	0xFEE
 12941                           fsr0h	equ	0xFEA
 12942                           fsr0l	equ	0xFE9
 12943                           wreg	equ	0xFE8
 12944                           indf1	equ	0xFE7
 12945                           postdec1	equ	0xFE5
 12946                           fsr1h	equ	0xFE2
 12947                           fsr1l	equ	0xFE1
 12948                           indf2	equ	0xFDF
 12949                           postinc2	equ	0xFDE
 12950                           postdec2	equ	0xFDD
 12951                           fsr2h	equ	0xFDA
 12952                           fsr2l	equ	0xFD9
 12953                           status	equ	0xFD8
 12954                           
 12955 ;; *************** function _init_io_initialize *****************
 12956 ;; Defined at:
 12957 ;;		line 49 in file "easat2_init_initialize.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;		None
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;                  1    wreg      void 
 12964 ;; Registers used:
 12965 ;;		wreg, status,2
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12971 ;;      Params:         0       0       0       0       0       0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0
 12973 ;;      Temps:          0       0       0       0       0       0       0
 12974 ;;      Totals:         0       0       0       0       0       0       0
 12975 ;;Total ram usage:        0 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; Hardware stack levels required when called:    2
 12978 ;; This function calls:
 12979 ;;		Nothing
 12980 ;; This function is called by:
 12981 ;;		_init_initialize
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985                           	psect	text56
 12986  00316A                     __ptext56:
 12987                           	opt stack 0
 12988  00316A                     _init_io_initialize:
 12989                           	opt stack 27
 12990                           
 12991                           ;easat2_init_initialize.c: 58: VREFCON0bits.FVREN = 1;
 12992                           
 12993                           ;incstack = 0
 12994  00316A  010F               	movlb	15	; () banked
 12995  00316C  8F42               	bsf	66,7,b	;volatile
 12996                           
 12997                           ;easat2_init_initialize.c: 59: VREFCON0bits.FVRS0 = 0;
 12998  00316E  010F               	movlb	15	; () banked
 12999  003170  9942               	bcf	66,4,b	;volatile
 13000                           
 13001                           ;easat2_init_initialize.c: 60: VREFCON0bits.FVRS1 = 1;
 13002  003172  010F               	movlb	15	; () banked
 13003  003174  8B42               	bsf	66,5,b	;volatile
 13004                           
 13005                           ;easat2_init_initialize.c: 62: VREFCON0bits.FVRST = 1;
 13006  003176  010F               	movlb	15	; () banked
 13007  003178  8D42               	bsf	66,6,b	;volatile
 13008                           
 13009                           ; BSR set to: 15
 13010                           ;easat2_init_initialize.c: 67: ADCON1 = 0x08;
 13011  00317A  0E08               	movlw	8
 13012  00317C  6EC1               	movwf	4033,c	;volatile
 13013                           
 13014                           ;easat2_init_initialize.c: 68: ADCON2 = 0xAF;
 13015  00317E  0EAF               	movlw	175
 13016  003180  6EC0               	movwf	4032,c	;volatile
 13017                           
 13018                           ; BSR set to: 15
 13019                           ;easat2_init_initialize.c: 72: TRISAbits.TRISA0 = 1;
 13020  003182  8092               	bsf	3986,0,c	;volatile
 13021                           
 13022                           ; BSR set to: 15
 13023                           ;easat2_init_initialize.c: 73: TRISAbits.TRISA1 = 1;
 13024  003184  8292               	bsf	3986,1,c	;volatile
 13025                           
 13026                           ; BSR set to: 15
 13027                           ;easat2_init_initialize.c: 74: TRISAbits.TRISA2 = 0;
 13028  003186  9492               	bcf	3986,2,c	;volatile
 13029                           
 13030                           ; BSR set to: 15
 13031                           ;easat2_init_initialize.c: 75: TRISAbits.TRISA3 = 1;
 13032  003188  8692               	bsf	3986,3,c	;volatile
 13033                           
 13034                           ; BSR set to: 15
 13035                           ;easat2_init_initialize.c: 76: TRISAbits.TRISA4 = 1;
 13036  00318A  8892               	bsf	3986,4,c	;volatile
 13037                           
 13038                           ; BSR set to: 15
 13039                           ;easat2_init_initialize.c: 77: TRISAbits.TRISA5 = 1;
 13040  00318C  8A92               	bsf	3986,5,c	;volatile
 13041                           
 13042                           ; BSR set to: 15
 13043                           ;easat2_init_initialize.c: 84: ANSELAbits.ANSA0 = 1;
 13044  00318E  010F               	movlb	15	; () banked
 13045  003190  8138               	bsf	56,0,b	;volatile
 13046                           
 13047                           ; BSR set to: 15
 13048                           ;easat2_init_initialize.c: 85: ANSELAbits.ANSA1 = 1;
 13049  003192  010F               	movlb	15	; () banked
 13050  003194  8338               	bsf	56,1,b	;volatile
 13051                           
 13052                           ; BSR set to: 15
 13053                           ;easat2_init_initialize.c: 86: ANSELAbits.ANSA2 = 1;
 13054  003196  010F               	movlb	15	; () banked
 13055  003198  8538               	bsf	56,2,b	;volatile
 13056                           
 13057                           ; BSR set to: 15
 13058                           ;easat2_init_initialize.c: 87: ANSELAbits.ANSA3 = 0;
 13059  00319A  010F               	movlb	15	; () banked
 13060  00319C  9738               	bcf	56,3,b	;volatile
 13061                           
 13062                           ; BSR set to: 15
 13063                           ;easat2_init_initialize.c: 89: ANSELAbits.ANSA5 = 1;
 13064  00319E  010F               	movlb	15	; () banked
 13065  0031A0  8B38               	bsf	56,5,b	;volatile
 13066                           
 13067                           ; BSR set to: 15
 13068                           ;easat2_init_initialize.c: 93: LATAbits.LATA0 = 0;
 13069  0031A2  9089               	bcf	3977,0,c	;volatile
 13070                           
 13071                           ; BSR set to: 15
 13072                           ;easat2_init_initialize.c: 94: LATAbits.LATA1 = 0;
 13073  0031A4  9289               	bcf	3977,1,c	;volatile
 13074                           
 13075                           ; BSR set to: 15
 13076                           ;easat2_init_initialize.c: 95: LATAbits.LATA2 = 0;
 13077  0031A6  9489               	bcf	3977,2,c	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;easat2_init_initialize.c: 96: LATAbits.LATA3 = 0;
 13081  0031A8  9689               	bcf	3977,3,c	;volatile
 13082                           
 13083                           ; BSR set to: 15
 13084                           ;easat2_init_initialize.c: 97: LATAbits.LATA4 = 0;
 13085  0031AA  9889               	bcf	3977,4,c	;volatile
 13086                           
 13087                           ; BSR set to: 15
 13088                           ;easat2_init_initialize.c: 98: LATAbits.LATA5 = 0;
 13089  0031AC  9A89               	bcf	3977,5,c	;volatile
 13090                           
 13091                           ;easat2_init_initialize.c: 106: WPUB = 0b00000000;
 13092  0031AE  0E00               	movlw	0
 13093  0031B0  6E61               	movwf	3937,c	;volatile
 13094                           
 13095                           ; BSR set to: 15
 13096                           ;easat2_init_initialize.c: 107: RBPU = 0b11111111;
 13097  0031B2  8EF1               	bsf	intcon2,7,c	;volatile
 13098                           
 13099                           ; BSR set to: 15
 13100                           ;easat2_init_initialize.c: 111: TRISBbits.TRISB0 = 1;
 13101  0031B4  8093               	bsf	3987,0,c	;volatile
 13102                           
 13103                           ; BSR set to: 15
 13104                           ;easat2_init_initialize.c: 112: TRISBbits.TRISB1 = 0;
 13105  0031B6  9293               	bcf	3987,1,c	;volatile
 13106                           
 13107                           ; BSR set to: 15
 13108                           ;easat2_init_initialize.c: 113: TRISBbits.TRISB2 = 0;
 13109  0031B8  9493               	bcf	3987,2,c	;volatile
 13110                           
 13111                           ; BSR set to: 15
 13112                           ;easat2_init_initialize.c: 114: TRISBbits.TRISB3 = 0;
 13113  0031BA  9693               	bcf	3987,3,c	;volatile
 13114                           
 13115                           ; BSR set to: 15
 13116                           ;easat2_init_initialize.c: 115: TRISBbits.TRISB4 = 0;
 13117  0031BC  9893               	bcf	3987,4,c	;volatile
 13118                           
 13119                           ; BSR set to: 15
 13120                           ;easat2_init_initialize.c: 116: TRISBbits.TRISB5 = 0;
 13121  0031BE  9A93               	bcf	3987,5,c	;volatile
 13122                           
 13123                           ; BSR set to: 15
 13124                           ;easat2_init_initialize.c: 117: TRISBbits.TRISB6 = 0;
 13125  0031C0  9C93               	bcf	3987,6,c	;volatile
 13126                           
 13127                           ; BSR set to: 15
 13128                           ;easat2_init_initialize.c: 118: TRISBbits.TRISB7 = 0;
 13129  0031C2  9E93               	bcf	3987,7,c	;volatile
 13130                           
 13131                           ; BSR set to: 15
 13132                           ;easat2_init_initialize.c: 122: ANSELBbits.ANSB0 = 1;
 13133  0031C4  010F               	movlb	15	; () banked
 13134  0031C6  8139               	bsf	57,0,b	;volatile
 13135                           
 13136                           ; BSR set to: 15
 13137                           ;easat2_init_initialize.c: 123: ANSELBbits.ANSB1 = 0;
 13138  0031C8  010F               	movlb	15	; () banked
 13139  0031CA  9339               	bcf	57,1,b	;volatile
 13140                           
 13141                           ; BSR set to: 15
 13142                           ;easat2_init_initialize.c: 124: ANSELBbits.ANSB2 = 0;
 13143  0031CC  010F               	movlb	15	; () banked
 13144  0031CE  9539               	bcf	57,2,b	;volatile
 13145                           
 13146                           ; BSR set to: 15
 13147                           ;easat2_init_initialize.c: 125: ANSELBbits.ANSB3 = 0;
 13148  0031D0  010F               	movlb	15	; () banked
 13149  0031D2  9739               	bcf	57,3,b	;volatile
 13150                           
 13151                           ; BSR set to: 15
 13152                           ;easat2_init_initialize.c: 127: ANSELBbits.ANSB5 = 0;
 13153  0031D4  010F               	movlb	15	; () banked
 13154  0031D6  9B39               	bcf	57,5,b	;volatile
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;easat2_init_initialize.c: 131: LATBbits.LATB0 = 0;
 13158  0031D8  908A               	bcf	3978,0,c	;volatile
 13159                           
 13160                           ; BSR set to: 15
 13161                           ;easat2_init_initialize.c: 132: LATBbits.LATB1 = 0;
 13162  0031DA  928A               	bcf	3978,1,c	;volatile
 13163                           
 13164                           ; BSR set to: 15
 13165                           ;easat2_init_initialize.c: 133: LATBbits.LATB2 = 0;
 13166  0031DC  948A               	bcf	3978,2,c	;volatile
 13167                           
 13168                           ; BSR set to: 15
 13169                           ;easat2_init_initialize.c: 134: LATBbits.LATB3 = 0;
 13170  0031DE  968A               	bcf	3978,3,c	;volatile
 13171                           
 13172                           ; BSR set to: 15
 13173                           ;easat2_init_initialize.c: 135: LATBbits.LATB4 = 0;
 13174  0031E0  988A               	bcf	3978,4,c	;volatile
 13175                           
 13176                           ; BSR set to: 15
 13177                           ;easat2_init_initialize.c: 136: LATBbits.LATB5 = 0;
 13178  0031E2  9A8A               	bcf	3978,5,c	;volatile
 13179                           
 13180                           ; BSR set to: 15
 13181                           ;easat2_init_initialize.c: 140: TRISDbits.TRISD0 = 0;
 13182  0031E4  9095               	bcf	3989,0,c	;volatile
 13183                           
 13184                           ; BSR set to: 15
 13185                           ;easat2_init_initialize.c: 141: TRISDbits.TRISD1 = 0;
 13186  0031E6  9295               	bcf	3989,1,c	;volatile
 13187                           
 13188                           ; BSR set to: 15
 13189                           ;easat2_init_initialize.c: 142: TRISDbits.TRISD2 = 0;
 13190  0031E8  9495               	bcf	3989,2,c	;volatile
 13191                           
 13192                           ; BSR set to: 15
 13193                           ;easat2_init_initialize.c: 143: TRISDbits.TRISD3 = 0;
 13194  0031EA  9695               	bcf	3989,3,c	;volatile
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;easat2_init_initialize.c: 144: TRISDbits.TRISD4 = 0;
 13198  0031EC  9895               	bcf	3989,4,c	;volatile
 13199                           
 13200                           ; BSR set to: 15
 13201                           ;easat2_init_initialize.c: 145: TRISDbits.TRISD5 = 0;
 13202  0031EE  9A95               	bcf	3989,5,c	;volatile
 13203                           
 13204                           ; BSR set to: 15
 13205                           ;easat2_init_initialize.c: 146: TRISDbits.TRISD6 = 0;
 13206  0031F0  9C95               	bcf	3989,6,c	;volatile
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;easat2_init_initialize.c: 147: TRISDbits.TRISD7 = 0;
 13210  0031F2  9E95               	bcf	3989,7,c	;volatile
 13211                           
 13212                           ; BSR set to: 15
 13213                           ;easat2_init_initialize.c: 151: ANSELDbits.ANSD0 = 0;
 13214  0031F4  010F               	movlb	15	; () banked
 13215  0031F6  913B               	bcf	59,0,b	;volatile
 13216                           
 13217                           ; BSR set to: 15
 13218                           ;easat2_init_initialize.c: 152: ANSELDbits.ANSD1 = 0;
 13219  0031F8  010F               	movlb	15	; () banked
 13220  0031FA  933B               	bcf	59,1,b	;volatile
 13221                           
 13222                           ; BSR set to: 15
 13223                           ;easat2_init_initialize.c: 153: ANSELDbits.ANSD2 = 0;
 13224  0031FC  010F               	movlb	15	; () banked
 13225  0031FE  953B               	bcf	59,2,b	;volatile
 13226                           
 13227                           ; BSR set to: 15
 13228                           ;easat2_init_initialize.c: 154: ANSELDbits.ANSD3 = 0;
 13229  003200  010F               	movlb	15	; () banked
 13230  003202  973B               	bcf	59,3,b	;volatile
 13231                           
 13232                           ; BSR set to: 15
 13233                           ;easat2_init_initialize.c: 155: ANSELDbits.ANSD4 = 0;
 13234  003204  010F               	movlb	15	; () banked
 13235  003206  993B               	bcf	59,4,b	;volatile
 13236                           
 13237                           ; BSR set to: 15
 13238                           ;easat2_init_initialize.c: 156: ANSELDbits.ANSD5 = 0;
 13239  003208  010F               	movlb	15	; () banked
 13240  00320A  9B3B               	bcf	59,5,b	;volatile
 13241                           
 13242                           ; BSR set to: 15
 13243                           ;easat2_init_initialize.c: 157: ANSELDbits.ANSD6 = 0;
 13244  00320C  010F               	movlb	15	; () banked
 13245  00320E  9D3B               	bcf	59,6,b	;volatile
 13246                           
 13247                           ; BSR set to: 15
 13248                           ;easat2_init_initialize.c: 158: ANSELDbits.ANSD7 = 0;
 13249  003210  010F               	movlb	15	; () banked
 13250  003212  9F3B               	bcf	59,7,b	;volatile
 13251                           
 13252                           ; BSR set to: 15
 13253                           ;easat2_init_initialize.c: 162: LATDbits.LATD0 = 0;
 13254  003214  908C               	bcf	3980,0,c	;volatile
 13255                           
 13256                           ; BSR set to: 15
 13257                           ;easat2_init_initialize.c: 163: LATDbits.LATD1 = 0;
 13258  003216  928C               	bcf	3980,1,c	;volatile
 13259                           
 13260                           ; BSR set to: 15
 13261                           ;easat2_init_initialize.c: 164: LATDbits.LATD2 = 0;
 13262  003218  948C               	bcf	3980,2,c	;volatile
 13263                           
 13264                           ; BSR set to: 15
 13265                           ;easat2_init_initialize.c: 165: LATDbits.LATD3 = 0;
 13266  00321A  968C               	bcf	3980,3,c	;volatile
 13267                           
 13268                           ; BSR set to: 15
 13269                           ;easat2_init_initialize.c: 166: LATDbits.LATD4 = 0;
 13270  00321C  988C               	bcf	3980,4,c	;volatile
 13271                           
 13272                           ; BSR set to: 15
 13273                           ;easat2_init_initialize.c: 167: LATDbits.LATD5 = 0;
 13274  00321E  9A8C               	bcf	3980,5,c	;volatile
 13275                           
 13276                           ; BSR set to: 15
 13277                           ;easat2_init_initialize.c: 168: LATDbits.LATD6 = 0;
 13278  003220  9C8C               	bcf	3980,6,c	;volatile
 13279                           
 13280                           ; BSR set to: 15
 13281                           ;easat2_init_initialize.c: 169: LATDbits.LATD7 = 0;
 13282  003222  9E8C               	bcf	3980,7,c	;volatile
 13283                           
 13284                           ; BSR set to: 15
 13285  003224  0012               	return		;funcret
 13286  003226                     __end_of_init_io_initialize:
 13287                           	opt stack 0
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           indf0	equ	0xFEF
 13297                           postinc0	equ	0xFEE
 13298                           fsr0h	equ	0xFEA
 13299                           fsr0l	equ	0xFE9
 13300                           wreg	equ	0xFE8
 13301                           indf1	equ	0xFE7
 13302                           postdec1	equ	0xFE5
 13303                           fsr1h	equ	0xFE2
 13304                           fsr1l	equ	0xFE1
 13305                           indf2	equ	0xFDF
 13306                           postinc2	equ	0xFDE
 13307                           postdec2	equ	0xFDD
 13308                           fsr2h	equ	0xFDA
 13309                           fsr2l	equ	0xFD9
 13310                           status	equ	0xFD8
 13311                           
 13312 ;; *************** function _low_priority_int *****************
 13313 ;; Defined at:
 13314 ;;		line 270 in file "easat2_func_interrupts.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		None
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13328 ;;      Params:         0       0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0
 13330 ;;      Temps:          0      17       0       0       0       0       0
 13331 ;;      Totals:         0      17       0       0       0       0       0
 13332 ;;Total ram usage:       17 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:    1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		Interrupt level 1
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	intcodelo
 13343  000018                     __pintcodelo:
 13344                           	opt stack 0
 13345  000018                     _low_priority_int:
 13346                           	opt stack 23
 13347                           
 13348                           ; BSR set to: 15
 13349                           ;incstack = 0
 13350  000018  8044               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13351  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13352  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13353  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13354  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13355  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13356  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13357  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13358  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13359  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13360  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13361  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13362  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13363  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13364  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13365  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13366  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13367  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13368  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13369  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13370  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13371  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13372  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13373  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13374  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13375  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13376  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13377  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13378  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13379  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13380  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13381  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13382  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13383  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13384  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13385  0000A2  9044               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13386  0000A4  0010               	retfie	
 13387  0000A6                     __end_of_low_priority_int:
 13388                           	opt stack 0
 13389                           pclatu	equ	0xFFB
 13390                           pclath	equ	0xFFA
 13391                           tblptru	equ	0xFF8
 13392                           tblptrh	equ	0xFF7
 13393                           tblptrl	equ	0xFF6
 13394                           tablat	equ	0xFF5
 13395                           prodh	equ	0xFF4
 13396                           prodl	equ	0xFF3
 13397                           intcon	equ	0xFF2
 13398                           intcon2	equ	0xFF1
 13399                           indf0	equ	0xFEF
 13400                           postinc0	equ	0xFEE
 13401                           fsr0h	equ	0xFEA
 13402                           fsr0l	equ	0xFE9
 13403                           wreg	equ	0xFE8
 13404                           indf1	equ	0xFE7
 13405                           postdec1	equ	0xFE5
 13406                           fsr1h	equ	0xFE2
 13407                           fsr1l	equ	0xFE1
 13408                           bsr	equ	0xFE0
 13409                           indf2	equ	0xFDF
 13410                           postinc2	equ	0xFDE
 13411                           postdec2	equ	0xFDD
 13412                           fsr2h	equ	0xFDA
 13413                           fsr2l	equ	0xFD9
 13414                           status	equ	0xFD8
 13415                           
 13416 ;; *************** function _high_priority_int *****************
 13417 ;; Defined at:
 13418 ;;		line 19 in file "easat2_func_interrupts.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  received_bit    2   25[COMRAM] unsigned int 
 13423 ;;  sample          2   23[COMRAM] unsigned int 
 13424 ;;  current_sign    2   21[COMRAM] unsigned int 
 13425 ;;  oldest_sampl    2   19[COMRAM] unsigned int 
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  1    wreg      void 
 13428 ;; Registers used:
 13429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13435 ;;      Params:         0       0       0       0       0       0       0
 13436 ;;      Locals:         8       0       0       0       0       0       0
 13437 ;;      Temps:         19       0       0       0       0       0       0
 13438 ;;      Totals:        27       0       0       0       0       0       0
 13439 ;;Total ram usage:       27 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		Interrupt level 2
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	intcode
 13449  000008                     __pintcode:
 13450                           	opt stack 0
 13451  000008                     _high_priority_int:
 13452                           	opt stack 23
 13453                           
 13454                           ;incstack = 0
 13455  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13456  00000A  EF28  F00E         	goto	int_func
 13457                           pclatu	equ	0xFFB
 13458                           pclath	equ	0xFFA
 13459                           tblptru	equ	0xFF8
 13460                           tblptrh	equ	0xFF7
 13461                           tblptrl	equ	0xFF6
 13462                           tablat	equ	0xFF5
 13463                           prodh	equ	0xFF4
 13464                           prodl	equ	0xFF3
 13465                           intcon	equ	0xFF2
 13466                           intcon2	equ	0xFF1
 13467                           indf0	equ	0xFEF
 13468                           postinc0	equ	0xFEE
 13469                           fsr0h	equ	0xFEA
 13470                           fsr0l	equ	0xFE9
 13471                           wreg	equ	0xFE8
 13472                           indf1	equ	0xFE7
 13473                           postdec1	equ	0xFE5
 13474                           fsr1h	equ	0xFE2
 13475                           fsr1l	equ	0xFE1
 13476                           bsr	equ	0xFE0
 13477                           indf2	equ	0xFDF
 13478                           postinc2	equ	0xFDE
 13479                           postdec2	equ	0xFDD
 13480                           fsr2h	equ	0xFDA
 13481                           fsr2l	equ	0xFD9
 13482                           status	equ	0xFD8
 13483                           
 13484                           	psect	intcode_body
 13485  001C50                     __pintcode_body:
 13486                           	opt stack 23
 13487  001C50                     int_func:
 13488                           	opt stack 23
 13489  001C50  CFFA F006          	movff	pclath,??_high_priority_int+5
 13490  001C54  CFFB F007          	movff	pclatu,??_high_priority_int+6
 13491  001C58  CFE9 F008          	movff	fsr0l,??_high_priority_int+7
 13492  001C5C  CFEA F009          	movff	fsr0h,??_high_priority_int+8
 13493  001C60  CFE1 F00A          	movff	fsr1l,??_high_priority_int+9
 13494  001C64  CFE2 F00B          	movff	fsr1h,??_high_priority_int+10
 13495  001C68  CFD9 F00C          	movff	fsr2l,??_high_priority_int+11
 13496  001C6C  CFDA F00D          	movff	fsr2h,??_high_priority_int+12
 13497  001C70  CFF3 F00E          	movff	prodl,??_high_priority_int+13
 13498  001C74  CFF4 F00F          	movff	prodh,??_high_priority_int+14
 13499  001C78  CFF6 F010          	movff	tblptrl,??_high_priority_int+15
 13500  001C7C  CFF7 F011          	movff	tblptrh,??_high_priority_int+16
 13501  001C80  CFF8 F012          	movff	tblptru,??_high_priority_int+17
 13502  001C84  CFF5 F013          	movff	tablat,??_high_priority_int+18
 13503                           
 13504                           ;easat2_func_interrupts.c: 21: static int tmr1_interrupt_number = 0;
 13505                           ;easat2_func_interrupts.c: 23: static unsigned int samples[128];
 13506                           ;easat2_func_interrupts.c: 24: static unsigned int sample_position = 0;
 13507                           ;easat2_func_interrupts.c: 25: static unsigned short long noise_avg_value = 32000;
 13508                           ;easat2_func_interrupts.c: 26: static unsigned int activation_threshold = 32000;
 13509                           ;easat2_func_interrupts.c: 27: static unsigned int times_threshold_exceeded = 0;
 13510                           ;easat2_func_interrupts.c: 28: static unsigned int cycles_transmitter_active = 0;
 13511  001C88  0E00               	movlw	0
 13512  001C8A  6E19               	movwf	high_priority_int@sample+1,c
 13513  001C8C  0E00               	movlw	0
 13514  001C8E  6E18               	movwf	high_priority_int@sample,c
 13515  001C90  0E00               	movlw	0
 13516  001C92  6E15               	movwf	high_priority_int@oldest_sample+1,c
 13517  001C94  0E00               	movlw	0
 13518  001C96  6E14               	movwf	high_priority_int@oldest_sample,c
 13519                           
 13520                           ;easat2_func_interrupts.c: 37: static unsigned int previous_signal_level = 0;
 13521                           ;easat2_func_interrupts.c: 38: unsigned int current_signal_level = 0;
 13522  001C98  0E00               	movlw	0
 13523  001C9A  6E17               	movwf	high_priority_int@current_signal_level+1,c
 13524  001C9C  0E00               	movlw	0
 13525  001C9E  6E16               	movwf	high_priority_int@current_signal_level,c
 13526                           
 13527                           ;easat2_func_interrupts.c: 40: unsigned int received_bit = 0;
 13528  001CA0  0E00               	movlw	0
 13529  001CA2  6E1B               	movwf	high_priority_int@received_bit+1,c
 13530  001CA4  0E00               	movlw	0
 13531  001CA6  6E1A               	movwf	high_priority_int@received_bit,c
 13532                           
 13533                           ;easat2_func_interrupts.c: 41: static unsigned int previous_received_bit = 0;
 13534                           ;easat2_func_interrupts.c: 43: static unsigned int num_received_bits = 0;
 13535                           ;easat2_func_interrupts.c: 46: if (PIR1bits.TMR2IF) {
 13536  001CA8  A29E               	btfss	3998,1,c	;volatile
 13537  001CAA  D002               	goto	i2l449
 13538                           
 13539                           ;easat2_func_interrupts.c: 50: PIR1bits.TMR2IF = 0;
 13540  001CAC  929E               	bcf	3998,1,c	;volatile
 13541                           
 13542                           ;easat2_func_interrupts.c: 52: } else {
 13543  001CAE  D15F               	goto	i2l476
 13544  001CB0                     i2l449:
 13545                           
 13546                           ;easat2_func_interrupts.c: 56: if (PIR1bits.TMR1IF) {
 13547  001CB0  A09E               	btfss	3998,0,c	;volatile
 13548  001CB2  D15D               	goto	i2l476
 13549                           
 13550                           ;easat2_func_interrupts.c: 60: TMR1H = 0xEC;
 13551  001CB4  0EEC               	movlw	236
 13552  001CB6  6ECF               	movwf	4047,c	;volatile
 13553                           
 13554                           ;easat2_func_interrupts.c: 61: TMR1L = 0x77 ; 60535;
 13555  001CB8  0E77               	movlw	119
 13556  001CBA  6ECE               	movwf	4046,c	;volatile
 13557                           
 13558                           ;easat2_func_interrupts.c: 65: (PORTDbits.RD5) = !(PORTDbits.RD5);
 13559  001CBC  BA83               	btfsc	3971,5,c	;volatile
 13560  001CBE  D003               	goto	i2u437_40
 13561  001CC0  6A01               	clrf	??_high_priority_int& (0+255),c
 13562  001CC2  2A01               	incf	??_high_priority_int& (0+255),f,c
 13563  001CC4  D001               	goto	i2u438_48
 13564  001CC6                     i2u437_40:
 13565  001CC6  6A01               	clrf	??_high_priority_int& (0+255),c
 13566  001CC8                     i2u438_48:
 13567  001CC8  3A01               	swapf	??_high_priority_int,f,c
 13568  001CCA  4601               	rlncf	??_high_priority_int,f,c
 13569  001CCC  5083               	movf	3971,w,c	;volatile
 13570  001CCE  1801               	xorwf	??_high_priority_int,w,c
 13571  001CD0  0BDF               	andlw	-33
 13572  001CD2  1801               	xorwf	??_high_priority_int,w,c
 13573  001CD4  6E83               	movwf	3971,c	;volatile
 13574                           
 13575                           ;easat2_func_interrupts.c: 69: tmr1_interrupt_number++;
 13576  001CD6  4A38               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 13577  001CD8  2A39               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 13578                           
 13579                           ;easat2_func_interrupts.c: 73: if (tmr1_interrupt_number == 50) {
 13580  001CDA  0E32               	movlw	50
 13581  001CDC  1838               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 13582  001CDE  1039               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 13583  001CE0  A4D8               	btfss	status,2,c
 13584  001CE2  D011               	goto	i2l4584
 13585                           
 13586                           ;easat2_func_interrupts.c: 76: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13587  001CE4  B883               	btfsc	3971,4,c	;volatile
 13588  001CE6  D003               	goto	i2u440_40
 13589  001CE8  6A01               	clrf	??_high_priority_int& (0+255),c
 13590  001CEA  2A01               	incf	??_high_priority_int& (0+255),f,c
 13591  001CEC  D001               	goto	i2u441_48
 13592  001CEE                     i2u440_40:
 13593  001CEE  6A01               	clrf	??_high_priority_int& (0+255),c
 13594  001CF0                     i2u441_48:
 13595  001CF0  3A01               	swapf	??_high_priority_int,f,c
 13596  001CF2  5083               	movf	3971,w,c	;volatile
 13597  001CF4  1801               	xorwf	??_high_priority_int,w,c
 13598  001CF6  0BEF               	andlw	-17
 13599  001CF8  1801               	xorwf	??_high_priority_int,w,c
 13600  001CFA  6E83               	movwf	3971,c	;volatile
 13601  001CFC  0004               	clrwdt		;# 
 13602                           
 13603                           ;easat2_func_interrupts.c: 85: tmr1_interrupt_number = 0;
 13604  001CFE  0E00               	movlw	0
 13605  001D00  6E39               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 13606  001D02  0E00               	movlw	0
 13607  001D04  6E38               	movwf	high_priority_int@tmr1_interrupt_number,c
 13608  001D06                     i2l4584:
 13609                           
 13610                           ;easat2_func_interrupts.c: 87: }
 13611                           ;easat2_func_interrupts.c: 91: if (valid_samples < 128) valid_samples++;
 13612  001D06  502F               	movf	high_priority_int@valid_samples+1,w,c
 13613  001D08  E106               	bnz	i2l4588
 13614  001D0A  0E80               	movlw	128
 13615  001D0C  5C2E               	subwf	high_priority_int@valid_samples,w,c
 13616  001D0E  B0D8               	btfsc	status,0,c
 13617  001D10  D002               	goto	i2l4588
 13618  001D12  4A2E               	infsnz	high_priority_int@valid_samples,f,c
 13619  001D14  2A2F               	incf	high_priority_int@valid_samples+1,f,c
 13620  001D16                     i2l4588:
 13621                           
 13622                           ;easat2_func_interrupts.c: 104: ADCON0bits.CHS = 4;
 13623  001D16  94C2               	bcf	4034,2,c	;volatile
 13624  001D18  96C2               	bcf	4034,3,c	;volatile
 13625  001D1A  88C2               	bsf	4034,4,c	;volatile
 13626  001D1C  9AC2               	bcf	4034,5,c	;volatile
 13627  001D1E  9CC2               	bcf	4034,6,c	;volatile
 13628                           
 13629                           ;easat2_func_interrupts.c: 105: ADCON0bits.ADON = 1;
 13630  001D20  80C2               	bsf	4034,0,c	;volatile
 13631                           
 13632                           ;easat2_func_interrupts.c: 106: PIR1bits.ADIF = 0;
 13633  001D22  9C9E               	bcf	3998,6,c	;volatile
 13634                           
 13635                           ;easat2_func_interrupts.c: 108: ADCON0bits.GO = 1;
 13636  001D24  82C2               	bsf	4034,1,c	;volatile
 13637  001D26                     i2l454:
 13638  001D26  AC9E               	btfss	3998,6,c	;volatile
 13639  001D28  D7FE               	goto	i2l454
 13640                           
 13641                           ;easat2_func_interrupts.c: 111: sample = ADRES;
 13642  001D2A  CFC3 F018          	movff	4035,high_priority_int@sample	;volatile
 13643  001D2E  CFC4 F019          	movff	4036,high_priority_int@sample+1	;volatile
 13644                           
 13645                           ;easat2_func_interrupts.c: 113: PIR1bits.ADIF = 0;
 13646  001D32  9C9E               	bcf	3998,6,c	;volatile
 13647                           
 13648                           ;easat2_func_interrupts.c: 114: ADCON0bits.ADON = 0;
 13649  001D34  90C2               	bcf	4034,0,c	;volatile
 13650                           
 13651                           ;easat2_func_interrupts.c: 116: if (is_transmitter_active) cycles_transmitter_active++;
 13652  001D36  503E               	movf	high_priority_int@is_transmitter_active,w,c
 13653  001D38  B4D8               	btfsc	status,2,c
 13654  001D3A  D002               	goto	i2l4600
 13655  001D3C  4A32               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13656  001D3E  2A33               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13657  001D40                     i2l4600:
 13658                           
 13659                           ;easat2_func_interrupts.c: 121: if (sample > 128 && sample > activation_threshold) {
 13660  001D40  5019               	movf	high_priority_int@sample+1,w,c
 13661  001D42  E104               	bnz	i2u445_40
 13662  001D44  0E81               	movlw	129
 13663  001D46  5C18               	subwf	high_priority_int@sample,w,c
 13664  001D48  A0D8               	btfss	status,0,c
 13665  001D4A  D01D               	goto	i2l4614
 13666  001D4C                     i2u445_40:
 13667  001D4C  5018               	movf	high_priority_int@sample,w,c
 13668  001D4E  5C42               	subwf	high_priority_int@activation_threshold,w,c
 13669  001D50  5019               	movf	high_priority_int@sample+1,w,c
 13670  001D52  5843               	subwfb	high_priority_int@activation_threshold+1,w,c
 13671  001D54  B0D8               	btfsc	status,0,c
 13672  001D56  D017               	goto	i2l4614
 13673                           
 13674                           ;easat2_func_interrupts.c: 124: current_signal_level = 1;
 13675  001D58  0E00               	movlw	0
 13676  001D5A  6E17               	movwf	high_priority_int@current_signal_level+1,c
 13677  001D5C  0E01               	movlw	1
 13678  001D5E  6E16               	movwf	high_priority_int@current_signal_level,c
 13679                           
 13680                           ;easat2_func_interrupts.c: 127: times_threshold_exceeded++;
 13681  001D60  4A34               	infsnz	high_priority_int@times_threshold_exceeded,f,c
 13682  001D62  2A35               	incf	high_priority_int@times_threshold_exceeded+1,f,c
 13683                           
 13684                           ;easat2_func_interrupts.c: 129: if (times_threshold_exceeded == 200) {
 13685  001D64  0EC8               	movlw	200
 13686  001D66  1834               	xorwf	high_priority_int@times_threshold_exceeded,w,c
 13687  001D68  1035               	iorwf	high_priority_int@times_threshold_exceeded+1,w,c
 13688  001D6A  A4D8               	btfss	status,2,c
 13689  001D6C  D08D               	goto	i2l4648
 13690                           
 13691                           ;easat2_func_interrupts.c: 132: (PORTBbits.RB1) = 1;
 13692  001D6E  8281               	bsf	3969,1,c	;volatile
 13693                           
 13694                           ;easat2_func_interrupts.c: 134: is_transmitter_active = 1;
 13695  001D70  0E01               	movlw	1
 13696  001D72  6E3E               	movwf	high_priority_int@is_transmitter_active,c
 13697                           
 13698                           ;easat2_func_interrupts.c: 135: cycles_transmitter_active = 0;
 13699  001D74  0E00               	movlw	0
 13700  001D76  6E33               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13701  001D78  0E00               	movlw	0
 13702  001D7A  6E32               	movwf	high_priority_int@cycles_transmitter_active,c
 13703                           
 13704                           ;easat2_func_interrupts.c: 137: times_threshold_exceeded = 0;
 13705  001D7C  0E00               	movlw	0
 13706  001D7E  6E35               	movwf	high_priority_int@times_threshold_exceeded+1,c
 13707  001D80  0E00               	movlw	0
 13708  001D82  6E34               	movwf	high_priority_int@times_threshold_exceeded,c
 13709                           
 13710                           ;easat2_func_interrupts.c: 139: }
 13711                           ;easat2_func_interrupts.c: 141: } else {
 13712  001D84  D081               	goto	i2l4648
 13713  001D86                     i2l4614:
 13714                           
 13715                           ;easat2_func_interrupts.c: 144: current_signal_level = 0;
 13716  001D86  0E00               	movlw	0
 13717  001D88  6E17               	movwf	high_priority_int@current_signal_level+1,c
 13718  001D8A  0E00               	movlw	0
 13719  001D8C  6E16               	movwf	high_priority_int@current_signal_level,c
 13720                           
 13721                           ;easat2_func_interrupts.c: 147: times_threshold_exceeded = 0;
 13722  001D8E  0E00               	movlw	0
 13723  001D90  6E35               	movwf	high_priority_int@times_threshold_exceeded+1,c
 13724  001D92  0E00               	movlw	0
 13725  001D94  6E34               	movwf	high_priority_int@times_threshold_exceeded,c
 13726                           
 13727                           ;easat2_func_interrupts.c: 149: if (cycles_transmitter_active == 12000) {
 13728  001D96  0EE0               	movlw	224
 13729  001D98  1832               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13730  001D9A  E107               	bnz	i2l4622
 13731  001D9C  0E2E               	movlw	46
 13732  001D9E  1833               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13733  001DA0  A4D8               	btfss	status,2,c
 13734  001DA2  D003               	goto	i2l4622
 13735                           
 13736                           ;easat2_func_interrupts.c: 151: (PORTBbits.RB1) = 0;
 13737  001DA4  9281               	bcf	3969,1,c	;volatile
 13738                           
 13739                           ;easat2_func_interrupts.c: 152: is_transmitter_active = 0;
 13740  001DA6  0E00               	movlw	0
 13741  001DA8  6E3E               	movwf	high_priority_int@is_transmitter_active,c
 13742  001DAA                     i2l4622:
 13743                           
 13744                           ;easat2_func_interrupts.c: 153: }
 13745                           ;easat2_func_interrupts.c: 155: if (valid_samples == 128) oldest_sample = samples[sample
      +                          _position];
 13746  001DAA  0E80               	movlw	128
 13747  001DAC  182E               	xorwf	high_priority_int@valid_samples,w,c
 13748  001DAE  102F               	iorwf	high_priority_int@valid_samples+1,w,c
 13749  001DB0  A4D8               	btfss	status,2,c
 13750  001DB2  D00E               	goto	i2l4626
 13751  001DB4  90D8               	bcf	status,0,c
 13752  001DB6  3436               	rlcf	high_priority_int@sample_position,w,c
 13753  001DB8  6ED9               	movwf	fsr2l,c
 13754  001DBA  3437               	rlcf	high_priority_int@sample_position+1,w,c
 13755  001DBC  6EDA               	movwf	fsr2h,c
 13756  001DBE  0E00               	movlw	low high_priority_int@samples
 13757  001DC0  26D9               	addwf	fsr2l,f,c
 13758  001DC2  0E02               	movlw	high high_priority_int@samples
 13759  001DC4  22DA               	addwfc	fsr2h,f,c
 13760  001DC6  CFDE F014          	movff	postinc2,high_priority_int@oldest_sample
 13761  001DCA  CFDD F015          	movff	postdec2,high_priority_int@oldest_sample+1
 13762  001DCE  D004               	goto	i2l4628
 13763  001DD0                     i2l4626:
 13764                           
 13765                           ;easat2_func_interrupts.c: 156: else oldest_sample = 0;
 13766  001DD0  0E00               	movlw	0
 13767  001DD2  6E15               	movwf	high_priority_int@oldest_sample+1,c
 13768  001DD4  0E00               	movlw	0
 13769  001DD6  6E14               	movwf	high_priority_int@oldest_sample,c
 13770  001DD8                     i2l4628:
 13771                           
 13772                           ;easat2_func_interrupts.c: 158: samples[sample_position] = sample;
 13773  001DD8  90D8               	bcf	status,0,c
 13774  001DDA  3436               	rlcf	high_priority_int@sample_position,w,c
 13775  001DDC  6ED9               	movwf	fsr2l,c
 13776  001DDE  3437               	rlcf	high_priority_int@sample_position+1,w,c
 13777  001DE0  6EDA               	movwf	fsr2h,c
 13778  001DE2  0E00               	movlw	low high_priority_int@samples
 13779  001DE4  26D9               	addwf	fsr2l,f,c
 13780  001DE6  0E02               	movlw	high high_priority_int@samples
 13781  001DE8  22DA               	addwfc	fsr2h,f,c
 13782  001DEA  C018  FFDE         	movff	high_priority_int@sample,postinc2
 13783  001DEE  C019  FFDD         	movff	high_priority_int@sample+1,postdec2
 13784                           
 13785                           ;easat2_func_interrupts.c: 161: if (valid_samples < 128) valid_samples++;
 13786  001DF2  502F               	movf	high_priority_int@valid_samples+1,w,c
 13787  001DF4  E106               	bnz	i2l464
 13788  001DF6  0E80               	movlw	128
 13789  001DF8  5C2E               	subwf	high_priority_int@valid_samples,w,c
 13790  001DFA  B0D8               	btfsc	status,0,c
 13791  001DFC  D002               	goto	i2l464
 13792  001DFE  4A2E               	infsnz	high_priority_int@valid_samples,f,c
 13793  001E00  2A2F               	incf	high_priority_int@valid_samples+1,f,c
 13794  001E02                     i2l464:
 13795                           
 13796                           ;easat2_func_interrupts.c: 164: sample_position++;
 13797  001E02  4A36               	infsnz	high_priority_int@sample_position,f,c
 13798  001E04  2A37               	incf	high_priority_int@sample_position+1,f,c
 13799                           
 13800                           ;easat2_func_interrupts.c: 167: if (sample_position == 128) sample_position = 0;
 13801  001E06  0E80               	movlw	128
 13802  001E08  1836               	xorwf	high_priority_int@sample_position,w,c
 13803  001E0A  1037               	iorwf	high_priority_int@sample_position+1,w,c
 13804  001E0C  A4D8               	btfss	status,2,c
 13805  001E0E  D004               	goto	i2l4638
 13806  001E10  0E00               	movlw	0
 13807  001E12  6E37               	movwf	high_priority_int@sample_position+1,c
 13808  001E14  0E00               	movlw	0
 13809  001E16  6E36               	movwf	high_priority_int@sample_position,c
 13810  001E18                     i2l4638:
 13811                           
 13812                           ;easat2_func_interrupts.c: 170: total_add = total_add + sample - oldest_sample;
 13813  001E18  C014  F001         	movff	high_priority_int@oldest_sample,??_high_priority_int
 13814  001E1C  C015  F002         	movff	high_priority_int@oldest_sample+1,??_high_priority_int+1
 13815  001E20  1E01               	comf	??_high_priority_int,f,c
 13816  001E22  1E02               	comf	??_high_priority_int+1,f,c
 13817  001E24  4A01               	infsnz	??_high_priority_int,f,c
 13818  001E26  2A02               	incf	??_high_priority_int+1,f,c
 13819  001E28  5030               	movf	high_priority_int@total_add,w,c
 13820  001E2A  2601               	addwf	??_high_priority_int,f,c
 13821  001E2C  5031               	movf	high_priority_int@total_add+1,w,c
 13822  001E2E  2202               	addwfc	??_high_priority_int+1,f,c
 13823  001E30  5018               	movf	high_priority_int@sample,w,c
 13824  001E32  2401               	addwf	??_high_priority_int,w,c
 13825  001E34  6E30               	movwf	high_priority_int@total_add,c
 13826  001E36  5019               	movf	high_priority_int@sample+1,w,c
 13827  001E38  2002               	addwfc	??_high_priority_int+1,w,c
 13828  001E3A  6E31               	movwf	high_priority_int@total_add+1,c
 13829                           
 13830                           ;easat2_func_interrupts.c: 173: if (valid_samples == 128) {
 13831  001E3C  0E80               	movlw	128
 13832  001E3E  182E               	xorwf	high_priority_int@valid_samples,w,c
 13833  001E40  102F               	iorwf	high_priority_int@valid_samples+1,w,c
 13834  001E42  A4D8               	btfss	status,2,c
 13835  001E44  D021               	goto	i2l4648
 13836                           
 13837                           ;easat2_func_interrupts.c: 176: noise_avg_value = total_add;
 13838  001E46  C030  F03F         	movff	high_priority_int@total_add,high_priority_int@noise_avg_value
 13839  001E4A  C031  F040         	movff	high_priority_int@total_add+1,high_priority_int@noise_avg_value+1
 13840  001E4E  6A41               	clrf	high_priority_int@noise_avg_value+2,c
 13841                           
 13842                           ;easat2_func_interrupts.c: 178: noise_avg_value = noise_avg_value >> 7;
 13843  001E50  0E07               	movlw	7
 13844  001E52  6E01               	movwf	??_high_priority_int& (0+255),c
 13845  001E54  C03F  F002         	movff	high_priority_int@noise_avg_value,??_high_priority_int+1
 13846  001E58  C040  F003         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+2
 13847  001E5C  C041  F004         	movff	high_priority_int@noise_avg_value+2,??_high_priority_int+3
 13848  001E60  2801               	incf	??_high_priority_int,w,c
 13849  001E62  6E05               	movwf	(??_high_priority_int+4)& (0+255),c
 13850  001E64  D004               	goto	i2u453_40
 13851  001E66                     i2u453_45:
 13852  001E66  90D8               	bcf	status,0,c
 13853  001E68  3204               	rrcf	??_high_priority_int+3,f,c
 13854  001E6A  3203               	rrcf	??_high_priority_int+2,f,c
 13855  001E6C  3202               	rrcf	??_high_priority_int+1,f,c
 13856  001E6E                     i2u453_40:
 13857  001E6E  2E05               	decfsz	(??_high_priority_int+4)& (0+255),f,c
 13858  001E70  D7FA               	goto	i2u453_45
 13859  001E72  C002  F03F         	movff	??_high_priority_int+1,high_priority_int@noise_avg_value
 13860  001E76  C003  F040         	movff	??_high_priority_int+2,high_priority_int@noise_avg_value+1
 13861  001E7A  C004  F041         	movff	??_high_priority_int+3,high_priority_int@noise_avg_value+2
 13862                           
 13863                           ;easat2_func_interrupts.c: 181: activation_threshold = noise_avg_value << 1;
 13864  001E7E  90D8               	bcf	status,0,c
 13865  001E80  343F               	rlcf	high_priority_int@noise_avg_value,w,c
 13866  001E82  6E42               	movwf	high_priority_int@activation_threshold,c
 13867  001E84  3440               	rlcf	high_priority_int@noise_avg_value+1,w,c
 13868  001E86  6E43               	movwf	high_priority_int@activation_threshold+1,c
 13869  001E88                     i2l4648:
 13870                           
 13871                           ;easat2_func_interrupts.c: 183: }
 13872                           ;easat2_func_interrupts.c: 185: }
 13873                           ;easat2_func_interrupts.c: 193: if (previous_signal_level == 0 && current_signal_level =
      +                          = 1) {
 13874  001E88  502C               	movf	high_priority_int@previous_signal_level,w,c
 13875  001E8A  102D               	iorwf	high_priority_int@previous_signal_level+1,w,c
 13876  001E8C  A4D8               	btfss	status,2,c
 13877  001E8E  D009               	goto	i2l4658
 13878  001E90  0416               	decf	high_priority_int@current_signal_level,w,c
 13879  001E92  1017               	iorwf	high_priority_int@current_signal_level+1,w,c
 13880  001E94  A4D8               	btfss	status,2,c
 13881  001E96  D005               	goto	i2l4658
 13882                           
 13883                           ;easat2_func_interrupts.c: 196: received_bit = 1;
 13884  001E98  0E00               	movlw	0
 13885  001E9A  6E1B               	movwf	high_priority_int@received_bit+1,c
 13886  001E9C  0E01               	movlw	1
 13887  001E9E  6E1A               	movwf	high_priority_int@received_bit,c
 13888  001EA0  D00C               	goto	i2l4664
 13889  001EA2                     i2l4658:
 13890                           
 13891                           ;easat2_func_interrupts.c: 203: if (previous_signal_level == 1 && current_signal_level =
      +                          = 0) {
 13892  001EA2  042C               	decf	high_priority_int@previous_signal_level,w,c
 13893  001EA4  102D               	iorwf	high_priority_int@previous_signal_level+1,w,c
 13894  001EA6  A4D8               	btfss	status,2,c
 13895  001EA8  D011               	goto	i2l4668
 13896  001EAA  5016               	movf	high_priority_int@current_signal_level,w,c
 13897  001EAC  1017               	iorwf	high_priority_int@current_signal_level+1,w,c
 13898  001EAE  A4D8               	btfss	status,2,c
 13899  001EB0  D00D               	goto	i2l4668
 13900                           
 13901                           ;easat2_func_interrupts.c: 206: received_bit = 0;
 13902  001EB2  0E00               	movlw	0
 13903  001EB4  6E1B               	movwf	high_priority_int@received_bit+1,c
 13904  001EB6  0E00               	movlw	0
 13905  001EB8  D7F2               	goto	L7
 13906  001EBA                     i2l4664:
 13907                           
 13908                           ;easat2_func_interrupts.c: 209: if (num_received_bits < 32) num_received_bits++;
 13909  001EBA  5029               	movf	high_priority_int@num_received_bits+1,w,c
 13910  001EBC  E10F               	bnz	i2l4670
 13911  001EBE  0E20               	movlw	32
 13912  001EC0  5C28               	subwf	high_priority_int@num_received_bits,w,c
 13913  001EC2  B0D8               	btfsc	status,0,c
 13914  001EC4  D00B               	goto	i2l4670
 13915  001EC6  4A28               	infsnz	high_priority_int@num_received_bits,f,c
 13916  001EC8  2A29               	incf	high_priority_int@num_received_bits+1,f,c
 13917                           
 13918                           ;easat2_func_interrupts.c: 211: } else {
 13919  001ECA  D008               	goto	i2l4670
 13920  001ECC                     i2l4668:
 13921                           
 13922                           ;easat2_func_interrupts.c: 214: received_bit = 2;
 13923  001ECC  0E00               	movlw	0
 13924  001ECE  6E1B               	movwf	high_priority_int@received_bit+1,c
 13925  001ED0  0E02               	movlw	2
 13926  001ED2  6E1A               	movwf	high_priority_int@received_bit,c
 13927                           
 13928                           ;easat2_func_interrupts.c: 217: num_received_bits = 0;
 13929  001ED4  0E00               	movlw	0
 13930  001ED6  6E29               	movwf	high_priority_int@num_received_bits+1,c
 13931  001ED8  0E00               	movlw	0
 13932  001EDA  6E28               	movwf	high_priority_int@num_received_bits,c
 13933  001EDC                     i2l4670:
 13934                           
 13935                           ;easat2_func_interrupts.c: 218: }
 13936                           ;easat2_func_interrupts.c: 219: }
 13937                           ;easat2_func_interrupts.c: 225: if (received_bit != 2 && num_received_bits <= 32
 13938                           ;easat2_func_interrupts.c: 226: && !global_command_pending_check) {
 13939  001EDC  0E02               	movlw	2
 13940  001EDE  181A               	xorwf	high_priority_int@received_bit,w,c
 13941  001EE0  101B               	iorwf	high_priority_int@received_bit+1,w,c
 13942  001EE2  B4D8               	btfsc	status,2,c
 13943  001EE4  D016               	goto	i2l473
 13944  001EE6  5029               	movf	high_priority_int@num_received_bits+1,w,c
 13945  001EE8  E114               	bnz	i2l473
 13946  001EEA  0E21               	movlw	33
 13947  001EEC  5C28               	subwf	high_priority_int@num_received_bits,w,c
 13948  001EEE  B0D8               	btfsc	status,0,c
 13949  001EF0  D010               	goto	i2l473
 13950  001EF2  503A               	movf	_global_command_pending_check,w,c
 13951  001EF4  103B               	iorwf	_global_command_pending_check+1,w,c
 13952  001EF6  A4D8               	btfss	status,2,c
 13953  001EF8  D00C               	goto	i2l473
 13954                           
 13955                           ;easat2_func_interrupts.c: 229: global_command_buffer = global_command_buffer & 0xfffffe
      +                          ;
 13956  001EFA  0EFE               	movlw	254
 13957  001EFC  143C               	andwf	_global_command_buffer,w,c
 13958  001EFE  6E3C               	movwf	_global_command_buffer,c
 13959  001F00  0EFF               	movlw	255
 13960  001F02  143D               	andwf	_global_command_buffer+1,w,c
 13961  001F04  6E3D               	movwf	_global_command_buffer+1,c
 13962                           
 13963                           ;easat2_func_interrupts.c: 230: global_command_buffer = global_command_buffer | received
      +                          _bit;
 13964  001F06  501A               	movf	high_priority_int@received_bit,w,c
 13965  001F08  103C               	iorwf	_global_command_buffer,w,c
 13966  001F0A  6E3C               	movwf	_global_command_buffer,c
 13967  001F0C  501B               	movf	high_priority_int@received_bit+1,w,c
 13968  001F0E  103D               	iorwf	_global_command_buffer+1,w,c
 13969  001F10  6E3D               	movwf	_global_command_buffer+1,c
 13970  001F12                     i2l473:
 13971                           
 13972                           ;easat2_func_interrupts.c: 232: }
 13973                           ;easat2_func_interrupts.c: 235: if (received_bit == 2 && previous_received_bit != 2 && !
      +                          global_command_pending_check
 13974                           ;easat2_func_interrupts.c: 236: && num_received_bits == 32) {
 13975  001F12  0E02               	movlw	2
 13976  001F14  181A               	xorwf	high_priority_int@received_bit,w,c
 13977  001F16  101B               	iorwf	high_priority_int@received_bit+1,w,c
 13978  001F18  A4D8               	btfss	status,2,c
 13979  001F1A  D012               	goto	i2l4686
 13980  001F1C  0E02               	movlw	2
 13981  001F1E  182A               	xorwf	high_priority_int@previous_received_bit,w,c
 13982  001F20  102B               	iorwf	high_priority_int@previous_received_bit+1,w,c
 13983  001F22  B4D8               	btfsc	status,2,c
 13984  001F24  D00D               	goto	i2l4686
 13985  001F26  503A               	movf	_global_command_pending_check,w,c
 13986  001F28  103B               	iorwf	_global_command_pending_check+1,w,c
 13987  001F2A  A4D8               	btfss	status,2,c
 13988  001F2C  D009               	goto	i2l4686
 13989  001F2E  0E20               	movlw	32
 13990  001F30  1828               	xorwf	high_priority_int@num_received_bits,w,c
 13991  001F32  1029               	iorwf	high_priority_int@num_received_bits+1,w,c
 13992  001F34  A4D8               	btfss	status,2,c
 13993  001F36  D004               	goto	i2l4686
 13994                           
 13995                           ;easat2_func_interrupts.c: 241: global_command_pending_check = 1;
 13996  001F38  0E00               	movlw	0
 13997  001F3A  6E3B               	movwf	_global_command_pending_check+1,c
 13998  001F3C  0E01               	movlw	1
 13999  001F3E  6E3A               	movwf	_global_command_pending_check,c
 14000  001F40                     i2l4686:
 14001                           
 14002                           ;easat2_func_interrupts.c: 243: }
 14003                           ;easat2_func_interrupts.c: 245: if (received_bit == 2 && previous_received_bit == 2 && !
      +                          global_command_pending_check) {
 14004  001F40  0E02               	movlw	2
 14005  001F42  181A               	xorwf	high_priority_int@received_bit,w,c
 14006  001F44  101B               	iorwf	high_priority_int@received_bit+1,w,c
 14007  001F46  A4D8               	btfss	status,2,c
 14008  001F48  D011               	goto	i2l4694
 14009  001F4A  0E02               	movlw	2
 14010  001F4C  182A               	xorwf	high_priority_int@previous_received_bit,w,c
 14011  001F4E  102B               	iorwf	high_priority_int@previous_received_bit+1,w,c
 14012  001F50  A4D8               	btfss	status,2,c
 14013  001F52  D00C               	goto	i2l4694
 14014  001F54  503A               	movf	_global_command_pending_check,w,c
 14015  001F56  103B               	iorwf	_global_command_pending_check+1,w,c
 14016  001F58  A4D8               	btfss	status,2,c
 14017  001F5A  D008               	goto	i2l4694
 14018                           
 14019                           ;easat2_func_interrupts.c: 249: global_command_buffer = 0;
 14020  001F5C  0E00               	movlw	0
 14021  001F5E  6E3D               	movwf	_global_command_buffer+1,c
 14022  001F60  0E00               	movlw	0
 14023  001F62  6E3C               	movwf	_global_command_buffer,c
 14024                           
 14025                           ;easat2_func_interrupts.c: 250: num_received_bits = 0;
 14026  001F64  0E00               	movlw	0
 14027  001F66  6E29               	movwf	high_priority_int@num_received_bits+1,c
 14028  001F68  0E00               	movlw	0
 14029  001F6A  6E28               	movwf	high_priority_int@num_received_bits,c
 14030  001F6C                     i2l4694:
 14031                           
 14032                           ;easat2_func_interrupts.c: 252: }
 14033                           ;easat2_func_interrupts.c: 260: PIR1bits.TMR1IF = 0;
 14034  001F6C  909E               	bcf	3998,0,c	;volatile
 14035  001F6E                     i2l476:
 14036  001F6E  C013  FFF5         	movff	??_high_priority_int+18,tablat
 14037  001F72  C012  FFF8         	movff	??_high_priority_int+17,tblptru
 14038  001F76  C011  FFF7         	movff	??_high_priority_int+16,tblptrh
 14039  001F7A  C010  FFF6         	movff	??_high_priority_int+15,tblptrl
 14040  001F7E  C00F  FFF4         	movff	??_high_priority_int+14,prodh
 14041  001F82  C00E  FFF3         	movff	??_high_priority_int+13,prodl
 14042  001F86  C00D  FFDA         	movff	??_high_priority_int+12,fsr2h
 14043  001F8A  C00C  FFD9         	movff	??_high_priority_int+11,fsr2l
 14044  001F8E  C00B  FFE2         	movff	??_high_priority_int+10,fsr1h
 14045  001F92  C00A  FFE1         	movff	??_high_priority_int+9,fsr1l
 14046  001F96  C009  FFEA         	movff	??_high_priority_int+8,fsr0h
 14047  001F9A  C008  FFE9         	movff	??_high_priority_int+7,fsr0l
 14048  001F9E  C007  FFFB         	movff	??_high_priority_int+6,pclatu
 14049  001FA2  C006  FFFA         	movff	??_high_priority_int+5,pclath
 14050  001FA6  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14051  001FA8  0011               	retfie		f
 14052  001FAA                     __end_of_high_priority_int:
 14053                           	opt stack 0
 14054                           pclatu	equ	0xFFB
 14055                           pclath	equ	0xFFA
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           intcon	equ	0xFF2
 14063                           intcon2	equ	0xFF1
 14064                           indf0	equ	0xFEF
 14065                           postinc0	equ	0xFEE
 14066                           fsr0h	equ	0xFEA
 14067                           fsr0l	equ	0xFE9
 14068                           wreg	equ	0xFE8
 14069                           indf1	equ	0xFE7
 14070                           postdec1	equ	0xFE5
 14071                           fsr1h	equ	0xFE2
 14072                           fsr1l	equ	0xFE1
 14073                           bsr	equ	0xFE0
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           fsr2h	equ	0xFDA
 14078                           fsr2l	equ	0xFD9
 14079                           status	equ	0xFD8
 14080                           pclatu	equ	0xFFB
 14081                           pclath	equ	0xFFA
 14082                           tblptru	equ	0xFF8
 14083                           tblptrh	equ	0xFF7
 14084                           tblptrl	equ	0xFF6
 14085                           tablat	equ	0xFF5
 14086                           prodh	equ	0xFF4
 14087                           prodl	equ	0xFF3
 14088                           intcon	equ	0xFF2
 14089                           intcon2	equ	0xFF1
 14090                           indf0	equ	0xFEF
 14091                           postinc0	equ	0xFEE
 14092                           fsr0h	equ	0xFEA
 14093                           fsr0l	equ	0xFE9
 14094                           wreg	equ	0xFE8
 14095                           indf1	equ	0xFE7
 14096                           postdec1	equ	0xFE5
 14097                           fsr1h	equ	0xFE2
 14098                           fsr1l	equ	0xFE1
 14099                           bsr	equ	0xFE0
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           fsr2h	equ	0xFDA
 14104                           fsr2l	equ	0xFD9
 14105                           status	equ	0xFD8
 14106                           
 14107                           	psect	rparam
 14108  0000                     pclatu	equ	0xFFB
 14109                           pclath	equ	0xFFA
 14110                           tblptru	equ	0xFF8
 14111                           tblptrh	equ	0xFF7
 14112                           tblptrl	equ	0xFF6
 14113                           tablat	equ	0xFF5
 14114                           prodh	equ	0xFF4
 14115                           prodl	equ	0xFF3
 14116                           intcon	equ	0xFF2
 14117                           intcon2	equ	0xFF1
 14118                           indf0	equ	0xFEF
 14119                           postinc0	equ	0xFEE
 14120                           fsr0h	equ	0xFEA
 14121                           fsr0l	equ	0xFE9
 14122                           wreg	equ	0xFE8
 14123                           indf1	equ	0xFE7
 14124                           postdec1	equ	0xFE5
 14125                           fsr1h	equ	0xFE2
 14126                           fsr1l	equ	0xFE1
 14127                           bsr	equ	0xFE0
 14128                           indf2	equ	0xFDF
 14129                           postinc2	equ	0xFDE
 14130                           postdec2	equ	0xFDD
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135                           	psect	temp
 14136  000044                     btemp:
 14137                           	opt stack 0
 14138  000044                     	ds	1
 14139  0000                     int$flags	set	btemp
 14140                           pclatu	equ	0xFFB
 14141                           pclath	equ	0xFFA
 14142                           tblptru	equ	0xFF8
 14143                           tblptrh	equ	0xFF7
 14144                           tblptrl	equ	0xFF6
 14145                           tablat	equ	0xFF5
 14146                           prodh	equ	0xFF4
 14147                           prodl	equ	0xFF3
 14148                           intcon	equ	0xFF2
 14149                           intcon2	equ	0xFF1
 14150                           indf0	equ	0xFEF
 14151                           postinc0	equ	0xFEE
 14152                           fsr0h	equ	0xFEA
 14153                           fsr0l	equ	0xFE9
 14154                           wreg	equ	0xFE8
 14155                           indf1	equ	0xFE7
 14156                           postdec1	equ	0xFE5
 14157                           fsr1h	equ	0xFE2
 14158                           fsr1l	equ	0xFE1
 14159                           bsr	equ	0xFE0
 14160                           indf2	equ	0xFDF
 14161                           postinc2	equ	0xFDE
 14162                           postdec2	equ	0xFDD
 14163                           fsr2h	equ	0xFDA
 14164                           fsr2l	equ	0xFD9
 14165                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         279
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      67
    BANK0           160    133     133
    BANK1           256    206     206
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_hours
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftdiv
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _sprintf->___lltoft
    _sprintf->___wmul
    _sprintf->__div_to_l_
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    ___ftadd->___ftdiv
    _init_initialize->_init_watchdogs_initialize

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    ___ftdiv->___awtoft
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  132070
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  132070
                                            123 BANK0     10    10      0
          _init_watchdogs_initialize
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             38 COMRAM     1     1      0
                                             23 BANK0      4     2      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             37 COMRAM     1     1      0
                                             19 BANK0      4     2      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25403
                                             62 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             32 COMRAM     5     5      0
                                             17 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1362
                                             29 COMRAM     5     3      2
                                             17 BANK0     16    16      0
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     534
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      24
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     232
                                             17 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      24
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             36 COMRAM     3     3      0
                                             20 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             35 COMRAM     1     1      0
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             62 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             40 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             62 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   72233
                                            113 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6252
                                             37 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5161
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             27 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   63813
                                             68 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14478
                                             40 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             27 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14199
                                             40 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             37 COMRAM     2     2      0
                                             21 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             25 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1448
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             33 COMRAM     4     4      0
                                             17 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             27 COMRAM     9     3      6
                                             17 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             27 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             35 COMRAM     4     4      0
                                             17 BANK0      5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     671
                                             32 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     546
                                             27 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             47 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             62 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             50 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             27 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     109
                                             27 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             27 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             27 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
          _init_watchdogs_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_watchdogs_initialize                            1     1      0       0
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_priority_int                                   27    27      0     254
                                              0 COMRAM    27    27      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _init_watchdogs_initialize
     _util_pwm_initialize
   _main_loop
     _init_watchdogs_initialize
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     85      85       4       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      43       1       71.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     296       9        0.0%
DATA                 0      0     296      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 14 13:50:31 2017

                               ??_init_initialize 001D                       util_onewire_read_byte@value 0091  
                            util_getTemperature@i 01CC                                                l77 35CC  
                                    ___awdiv@sign 0023                                                bsr 000FE0  
                             ___wmul@multiplicand 0077                  __end_of_util_beacon_transmission 2F18  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 009D                                      ___ftadd@exp2 009C  
                                    ___ftadd@sign 009B                                               l123 30E0  
                                             l135 3016                                               l129 2F4C  
                                             l148 0D70                                               l186 3A44  
                                             l367 3A9E                                               l567 0790  
                                             l840 3364                                               l808 2E1C  
                                             l912 2A70                                               l905 29CA  
                                             l906 29F6                                               l863 22B2  
                                             l937 3B40                                               l867 22EC  
                                             l869 2314                                               l878 23EA  
                                             l887 2414                           ??_util_onewire_read_bit 001E  
                                             l898 2CD0                                               l987 32C4  
                                             l997 34AC                                      __CFG_CPB$OFF 000000  
                                             _PR2 000FBB                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13CA                                      ___awmod@sign 0021  
                  ??_util_transmit_morse_sequence 0022                               _util_pwm_initialize 3990  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                         ?_init_timer1_initialize 0001                                      __CFG_LVP$OFF 000000  
      util_transmit_morse_sequence@morse_sequence 0071                                      ___ftdiv@cntr 007A  
                                    ___ftdiv@sign 007F                                              l5002 2202  
                                            l3350 360A                                              l3342 35F0  
                                            l5022 15F6                                              l4150 38A0  
                                            l5112 2D42                                              l3352 3612  
                                            l5040 183A                                              l5016 1534  
                                            l4152 38A4                                              l5106 2D24  
                                            l5050 2956                                              l3354 3616  
                                            l3362 3634                                              l3346 35FC  
                                            l5034 1778                                              l5026 161C  
                                            l4154 38B4                                              l5202 3936  
                                            l3700 2BB4                                              l3508 3B64  
                                            l4156 38BC                                              l3710 3250  
                                            l5150 2DF2                                              l5134 2DB4  
                                            l5126 2D84                                              l3366 3642  
                                            l3358 362A                                              l5240 3ABE  
                                            l3712 325E                                              l5056 2986  
                                            l5400 06A0                                              l3722 32B4  
                                            l3714 3264                                              l3730 3444  
                                            l5146 2DE2                                              l5090 2A3C  
                                            l5410 0744                                              l5330 03CA  
                                            l5322 0362                                              l5306 02B0  
                                            l5244 3ACE                                              l5172 34EE  
                                            l5164 382A                                              l3732 3452  
                                            l5156 2E0A                                              l5340 044C  
                                            l5260 010C                                              l5182 354A  
                                            l3734 3458                                              l5190 3664  
                                            l5158 2E16                                              l5086 2A28  
                                            l5510 0AF0                                              l5430 07C4  
                                            l5422 0794                                              l5350 04BC  
                                            l5334 03F0                                              l5254 00DA  
                                            l5176 351E                                              l4720 32FE  
                                            l3664 2ABC                                              l5096 2A56  
                                            l5520 0B2C                                              l5512 0AFA  
                                            l5504 0AAE                                              l5416 075E  
                                            l5408 0736                                              l5360 051A  
                                            l5336 0406                                              l5280 0206  
                                            l5248 00BA                                              l5600 1A6E  
                                            l4730 335A                                              l4722 331C  
                                            l4714 32E6                                              l3682 2B4E  
                                            l3738 349C                                              l5098 2A66  
                                            l5530 0BE8                                              l5514 0B06  
                                            l5506 0AB8                                              l5434 0816  
                                            l5418 0772                                              l5346 0496  
                                            l5338 0436                                              l5290 0250  
                                            l5274 01AA                                              l3850 3A62  
                                            l4706 3A92                                              l5610 1AC8  
                                            l5602 1A80                                              l4820 237A  
                                            l4804 230A                                              l3692 2B7E  
                                            l5188 3654                                              l5532 0BEE  
                                            l5452 0926                                              l5444 08FE  
                                            l5364 0580                                              l5284 0216  
                                            l5268 0182                                              l3852 3A6A  
                                            l5620 1B22                                              l5612 1ADA  
                                            l5604 1A92                                              l4726 3332  
                                            l4718 32F4                                              l4822 2388  
                                            l4814 234C                                              l3694 2B8E  
                                            l3686 2B62                                              l4910 339C  
                                            l5526 0B5A                                              l5470 099E  
                                            l5446 090C                                              l5390 0650  
                                            l5382 061C                                              l5366 0586  
                                            l5454 0934                                              l5278 01F0  
                                            l5534 0C04                                              l4750 3776  
                                            l5622 1B34                                              l5614 1AEC  
                                            l5606 1AA4                                              l5550 18AC  
                                            l5630 1C4A                                              l5542 1864  
                                            l5198 3922                                              l4728 3350  
                                            l4840 243E                                              l4832 23D0  
                                            l4824 2396                                              l3696 2B98  
                                            l5472 09A4                                              l5464 0978  
                                            l5392 0658                                              l5296 026A  
                                            l5536 0C22                                              l5288 021C  
                                            l5624 1B46                                              l5616 1AFE  
                                            l5608 1AB6                                              l5560 1906  
                                            l5552 18BE                                              l5544 1876  
                                            l5800 0E42                                              l4850 248C  
                                            l4834 23DE                                              l4826 23A2  
                                            l4922 33CA                                              l5394 066C  
                                            l5386 063E                                              l5378 05CC  
                                            l5618 1B10                                              l5570 1960  
                                            l5562 1918                                              l5554 18D0  
                                            l5546 1888                                              l4924 33D4  
                                            l4916 33B0                                              l4860 2802  
                                            l5492 0A42                                              l5484 09EA  
                                            l4748 3772                                              l5580 19BA  
                                            l5572 1972                                              l5564 192A  
                                            l5556 18E2                                              l5548 189A  
                                            l5628 1B4C                                              l5644 2C2E  
                                            l5812 0EC4                                              l5804 0E58  
                                            l4942 3420                                              l4934 3406  
                                            l4926 33DA                                              l5398 0698  
                                            l5590 1A14                                              l5582 19CC  
                                            l5574 1984                                              l5566 193C  
                                            l5558 18F4                                              l5638 2BFA  
                                            l4950 3728                                              l5822 0EEC  
                                            l4792 22C0                                              l4880 288A  
                                            l5488 0A12                                              l5592 1A26  
                                            l5584 19DE                                              l5576 1996  
                                            l5568 194E                                              l5912 2EFA  
                                            l5664 2C8E                                              l4960 374A  
                                            l5816 0ECC                                              l5760 0CF8  
                                            l5920 38F8                                              l4938 3412  
                                            l4890 28C8                                              l4866 283C  
                                            l5498 0A76                                              l5594 1A38  
                                            l5586 19F0                                              l5578 19A8  
                                            l4954 3738                                              l4962 374E  
                                            l5818 0ED6                                              l5930 35BE  
                                            l5922 354E                                              l4884 28A8  
                                            l4972 36CC                                              l5596 1A4A  
                                            l5588 1A02                                              l5908 2EDE  
                                            l4948 3720                                              l5852 0FBA  
                                            l5860 0FEA                                              l5844 0F8A  
                                            l5772 0D34                                              l5916 38E4  
                                            l4798 22FA                                              l4894 28E6  
                                            l4974 36F4                                              l4966 36C0  
                                            l5598 1A5C                                              l5686 396C  
                                            l5774 0D4A                                              l4968 36C6  
                                            l5864 0FFE                                              l5776 0D4E  
                                            l5768 0D20                                              l4994 2122  
                                            l4978 36FC                                              l5858 0FDE  
                                            l5794 0E22                                              l5868 101A  
                                            l5788 0D92                                              l5798 0E38  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3221 2A98  
                                            u3240 2AE2                                              u4060 3B76  
                                            u3245 2AD8                                              u5021 27DE  
                                            u5041 2818                                              u3435 2528  
                                            u2900 39DE                                              u3380 387E  
                                            u6021 2BD8                                              u3445 253E  
                                            u4078 3B78                                              u3455 2554  
                                            u6041 2C0C                                              u5251 2936  
                                            u2908 39E0                                              u3388 3880  
                                            u5271 2966                                              u5505 2720  
                                            u5610 02F6                                              u4811 2260  
                                            u4821 227E                                              u5615 02EA  
                                            u6407 39E8                                              u5800 0788  
                                            u6184 0E88                                              u6417 3A94  
                                            u6185 0E80                                              u5475 26BA  
                                            u6357 3A3E                                              u5485 26DC  
                                            u4790 3796                                              u6367 3A48  
                                            u5495 26FE                                              u6377 3862  
                                            u6387 386C                                              u4797 378C  
                                            u6397 3888                          ??_util_onewire_read_byte 0073  
                                            _RBPU 007F8F                                              _TMR2 000FBC  
                                            _WPUB 000F61                                      __CFG_WRTC$ON 000000  
                                    __CFG_WRTD$ON 000000                                              _main 3C18  
                                    ___ftpack@arg 001C                                      ___ftpack@exp 001F  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 0044  
                                   __CFG_BORV$190 000000             high_priority_int@current_signal_level 0016  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
                            ?_util_pwm_initialize 0001   __end_of_util_transmit_space_between_dots_dashes 3C18  
__size_of_util_transmit_space_between_dots_dashes 000E         ??_util_transmit_space_between_dots_dashes 0021  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3C0A  
                                    _sprintf$2792 00B8                           ?_init_timer2_initialize 0001  
                                    ___ftmul@cntr 0086                                      ___param_bank 000000  
                                    ___ftmul@sign 0087                                      ___fttol@exp1 009D  
                                    ___fttol@lval 0099                                _util_transmit_dash 3BA4  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
                                 __end_of___awdiv 342A                                             _ADRES 000FC3  
                                 __end_of___ftadd 24B2                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 364C  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 2D06                                   __end_of___ftneg 3B4E  
                                 __end_of___lldiv 32D6                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2926                                   ___awdiv@divisor 0073  
                                 __end_of___llmod 34BE                                   __end_of___ftsub 3854  
                                 __end_of___fttol 2BC6                       __size_of_util_onewire_reset 0042  
                                   __CFG_WDTEN$ON 000000                                             i2l454 1D26  
                                           i2l464 1E02                                             i2l473 1F12  
                                           i2l449 1CB0                                             i2l476 1F6E  
                                 ___awdiv@counter 0022                    __end_of_init_timer1_initialize 3B06  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0060  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0075                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 2FE2                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 0024  
                                 __end_of_dpowers 7F1D                                             _scale 13CA  
                                 __end_of_isdigit 3B6C                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0020                          ??_util_onewire_write_bit 001E  
                       util_waits_delay_secs@secs 0071                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3AB4  
                                 __end_of_sprintf 0C30                              ??_util_transmit_dash 0021  
                           ??_util_pwm_initialize 001C                    __end_of_init_timer2_initialize 3BD8  
                         util_waits_delay_hours@i 0079                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 37BA                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3C24                      __end_of_util_transmit_letter 1C50  
                      ?_init_watchdogs_initialize 0001                                            ??_main 0028  
                                   ___fttol@sign1 0098                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 015C                        util_onewire_read_bit@value 001F  
                       util_getSolarCurrent@value 00A0                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0088                                            _CCPR2L 000F67  
                                ___awdiv@dividend 0071                                  __end_of___awtoft 3990  
                                __end_of___ftpack 3384                    high_priority_int@valid_samples 002E  
                                __end_of___lltoft 36B6                                            i2l4600 1D40  
                                          i2l4622 1DAA                                            i2l4614 1D86  
                                          i2l4626 1DD0                                            i2l4628 1DD8  
                                          i2l4670 1EDC                                            i2l4638 1E18  
                                          i2l4664 1EBA                                            i2l4648 1E88  
                                          i2l4584 1D06                                            i2l4658 1EA2  
                                          i2l4668 1ECC                                            i2l4588 1D16  
                                          i2l4694 1F6C                                            i2l4686 1F40  
                                __end_of___lwtoft 3B2A                   __size_of_util_onewire_read_byte 0194  
                     __size_of_init_io_initialize 00BC                 __size_of_util_beacon_transmission 00EA  
                          __size_of_util_pwm_stop 0008                         ?_util_beacon_transmission 00D1  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F44  
                                    _CCPTMRS0bits 000F49                          ?_util_onewire_write_byte 001E  
                                          ___ftge 34BE                        util_onewire_read_byte@bit0 0081  
                      util_onewire_read_byte@bit1 0083                        util_onewire_read_byte@bit2 0085  
                      util_onewire_read_byte@bit3 0087                        util_onewire_read_byte@bit4 0089  
                      util_onewire_read_byte@bit5 008B                        util_onewire_read_byte@bit6 008D  
                      util_onewire_read_byte@bit7 008F                           ??_util_waits_delay_mins 0026  
                         ??_util_waits_delay_secs 0021                                            ___wmul 39F6  
                                       ??___awdiv 0022                                         ??___ftadd 0098  
                                  __CFG_STVREN$ON 000000                                         ??___awmod 0020  
                                       ??___ftdiv 0025                                         ??___ftneg 001F  
                                       ??___lldiv 001C                                         ??___ftmul 007F  
                                       ??___llmod 0021                                         ??___ftsub 0028  
                                       ??___fttol 0093                       util_onewire_write_byte@bit0 0071  
                     util_onewire_write_byte@bit1 0073                       util_onewire_write_byte@bit2 0075  
                     util_onewire_write_byte@bit3 0077                       util_onewire_write_byte@bit4 0079  
                     util_onewire_write_byte@bit5 007B                       util_onewire_write_byte@bit6 007D  
                     util_onewire_write_byte@bit7 007F                                            _memset 3AB4  
                                          _fround 1FAA                                            clear_0 37E2  
                                          clear_1 37F4                                  ___awdiv@quotient 0024  
                                 ___awmod@divisor 001E                                   ___awmod@counter 0020  
                     util_waits_delay_hours@hours 0077                                            _strcat 3896  
                                          _strcpy 3A58                                            _strlen 3768  
                           ___ftmul@f3_as_product 0083                                      __pdataCOMRAM 003F  
                                       ??_isdigit 001C                                      __mediumconst 7EF4  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                                         ??_sprintf 00B2  
                                 __CFG_HFOFST$OFF 000000                          ??_util_getBatteryCurrent 0028  
                 __size_of_util_onewire_write_bit 0030                                   _init_initialize 3BD8  
                                      __accesstop 0060                           __end_of__initialization 37FA  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 0092  
                                      ___ftadd@f2 0095                                        ___ftge@ff1 001C  
                                      ___ftge@ff2 001F                                     ___rparam_used 000001  
                                      ___ftdiv@f1 0074                                        ___ftdiv@f2 0077  
                                      ___ftdiv@f3 007B                          ??_util_getBatteryVoltage 0028  
                                      ___ftneg@f1 001C                                        ___awtoft@c 0071  
                                      ___ftmul@f1 0079                                        ___ftmul@f2 007C  
                                      ___ftsub@f1 009E                                        ___ftsub@f2 00A1  
                                      ___fttol@f1 008F                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 2F18                                        ___lltoft@c 0071  
                        main_loop@battery_current 00E0                                     __end_of_scale 1860  
                          _util_onewire_read_byte 24B2                                     _util_pwm_stop 3C24  
                                      ___lwtoft@c 0071                                        __div_to_l_ 2D06  
                        main_loop@battery_voltage 00E2                    __size_of_util_onewire_read_bit 0032  
                   __end_of_util_onewire_read_bit 39F6                                   __div_to_l_@exp1 0027  
                                 __div_to_l_@cntr 0026                                           ??_scale 0028  
                                 __div_to_l_@quot 0022                                      sprintf@width 00BF  
       __end_of_util_transmit_space_between_words 3BFC        __size_of_util_transmit_space_between_words 000E  
             ??_util_transmit_space_between_words 0021                ?_util_transmit_space_between_words 0001  
               _util_transmit_space_between_words 3BEE            high_priority_int@tmr1_interrupt_number 0038  
                                      __pbssBANK2 0200                                __size_of_main_loop 008E  
       high_priority_int@times_threshold_exceeded 0034                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1860                                     __div_to_l_@f1 001C  
                                   __div_to_l_@f2 001F                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 009E                                           ?___ftge 001C  
                    util_onewire_write_bit@bit_in 001C                                           ?___wmul 0075  
                high_priority_int@sample_position 0036                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 3A28                                    ?_util_pwm_stop 0001  
                                         ?_memset 001C                                           ?_fround 0088  
                                       ?___awtoft 0071                                         ?___ftpack 001C  
                               _high_priority_int 0008                                         ?___lltoft 0071  
                                         ?_strcat 001C                                           ?_strcpy 001C  
                                         ?_strlen 001C                                         ?___lwtoft 0071  
                              ?_high_priority_int 0001                           __end_of_init_initialize 3BEE  
                         __size_of_util_pwm_start 0008                               ??_high_priority_int 0001  
                    __size_of_util_getTemperature 079A                             ?_util_transmit_letter 0001  
                 __size_of_util_getBatteryCurrent 00CA                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 001F                      util_waits_delay_mins@minutes 0073  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F6B  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00BE  
                                      _scale$2791 008B              __end_of_util_transmit_morse_sequence 3716  
           __size_of_util_transmit_morse_sequence 0060                      _util_transmit_morse_sequence 36B6  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 3C0A      __size_of_util_transmit_space_between_letters 000E  
           ??_util_transmit_space_between_letters 0021              ?_util_transmit_space_between_letters 0001  
             _util_transmit_space_between_letters 3BFC                                   __size_of___ftge 0090  
                                         ___awdiv 3384                                           ___ftadd 224A  
                                         ___awmod 35DC                                           ___ftdiv 2BC6  
                                         ___ftneg 3B2A                                           ___lldiv 3226  
                                 __size_of___wmul 0032                                           ___ftmul 27C8  
                        ??_util_waits_delay_hours 0027                                           ___llmod 342A  
                                         ___ftsub 3808                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2A82                         __end_of_high_priority_int 1FAA  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 3896  
                               __end_of_main_loop 35DC                                           __pcinit 37BA  
                     ??_init_watchdogs_initialize 001C                                        ??___awtoft 0024  
                                      ??___ftpack 0021                                   __size_of_memset 002C  
                                 __size_of_fround 02A0                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0024  
                                         __ptext0 3C18                                           __ptext1 354E  
                                         __ptext2 38D8                                           __ptext3 3916  
                                         __ptext4 0C30                                           __ptext5 3716  
                                         __ptext6 2646                                           __ptext7 3A28  
                                         __ptext8 3854                                           __ptext9 24B2  
                                      ??___lwtoft 0024                                   __size_of_strcat 0042  
                                 __size_of_strcpy 0030                                   __size_of_strlen 0052  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 001C  
                                         _dpowers 7EF5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 3B4E  
                                ___awmod@dividend 001C                      util_onewire_write_byte@value 001E  
                            main_loop@temperature 00DB                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0024                                    __pintcode_body 1C50  
                            end_of_initialization 37FA                       __end_of_util_pwm_initialize 39C4  
                                         memset@c 001E                                           memset@n 0020  
                                         memset@p 0022                                     __Lmediumconst 7EF4  
                                         int_func 1C50                     high_priority_int@received_bit 001A  
                     __size_of_util_transmit_dash 001A                                   ___lldiv@divisor 0075  
                          ??_util_getSolarCurrent 0028                                   ___lldiv@counter 0020  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 002C                                   ??_util_pwm_stop 001C  
                                         postinc0 000FEE                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00D4                    __size_of_util_waits_delay_mins 003E  
                                  __tdiv_to_l_@f1 001C                                    __tdiv_to_l_@f2 001F  
                  __size_of_util_waits_delay_secs 0052                     __end_of_util_waits_delay_mins 3954  
                          _util_getBatteryCurrent 2FE2                     __end_of_util_waits_delay_secs 3768  
                                         strlen@s 001C                                     ??__tdiv_to_l_ 0022  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _PORTDbits 000F83                           high_priority_int@sample 0018  
          high_priority_int@previous_received_bit 002A                            _util_getBatteryVoltage 30AC  
                __size_of_util_onewire_write_byte 0182                          _util_getTemperature$2785 01A7  
                        _util_getTemperature$2786 01AA                          _util_getTemperature$2787 01AD  
                        _util_getTemperature$2788 01B0                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ?_init_initialize 0001                        __end_of_init_io_initialize 3226  
                          ??_util_transmit_letter 0026                         _init_watchdogs_initialize 3B6C  
                                     ___ftdiv@exp 007E                                       _CCP2CONbits 000F66  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 0128  
                                     ___ftmul@exp 0082                           ?_util_onewire_read_byte 0071  
                               _util_transmit_dot 3B8A                        __size_of_high_priority_int 1FA2  
                        ??_init_timer1_initialize 001C                                    __end_of___ftge 354E  
                 __size_of_util_waits_delay_hours 003E                  high_priority_int@noise_avg_value 003F  
                                  __end_of___wmul 3A28                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 3C34                                    __end_of_memset 3AE0  
                                  __end_of_fround 224A                                    __end_of_strcat 38D8  
                                  __end_of_strcpy 3A88                                    __end_of_strlen 37BA  
                             start_initialization 37BA                               ??_util_transmit_dot 0021  
                          util_waits_delay_mins@i 0075                            util_waits_delay_secs@i 0022  
                          util_waits_delay_secs@j 0024                                    _util_pwm_start 3C2C  
                             __end_of__tdiv_to_l_ 2A82                          _util_beacon_transmission 2E2E  
                        ??_init_timer2_initialize 001C               util_beacon_transmission@temperature 00D8  
                                _low_priority_int 0018                                   ___llmod@divisor 007D  
                                 ___llmod@counter 0021                    __end_of_util_onewire_read_byte 2646  
                       __end_of_util_transmit_dot 3BA4                           ?_util_onewire_write_bit 001C  
           high_priority_int@activation_threshold 0042                                          ??___ftge 0022  
                                        ??___wmul 0026                               _util_getTemperature 0C30  
                                        ??_memset 0022                                          ??_fround 0028  
                                   sprintf@tmpval 00C1                                          ??_strcat 0020  
                                        ??_strcpy 0020                                          ??_strlen 001E  
                                      fround@prec 0091                            __end_of_util_pwm_start 3C34  
                               __size_of___awtoft 003C                                 __size_of___ftpack 00AE  
                               __size_of___lltoft 006A                                       __pbssCOMRAM 0028  
                               __size_of___lwtoft 0024                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 0100            high_priority_int@previous_signal_level 002C  
                                    _isdigit$2419 001D                             _util_onewire_read_bit 39C4  
                            ?_util_getTemperature 009E                            _util_waits_delay_hours 38D8  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00BD  
                                     sprintf@fval 00CB             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00CE                    __end_of_util_onewire_write_bit 3A58  
                                       __pintcode 0008                                     __pmediumconst 7EF4  
                                        ?___awdiv 0071                                          ?___ftadd 0092  
                                        ?___awmod 001C                                          ?___ftdiv 0074  
                                        ?___ftneg 001C                                          ?___lldiv 0071  
                                        ?___ftmul 0079                                          ?___llmod 0079  
                                        ?___ftsub 009E                                         __npowers_ 7F44  
                                        ?___fttol 008F                   __size_of_init_timer1_initialize 0026  
                           _global_command_buffer 003C                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 2926  
                                    ??__div_to_l_ 0022                           _util_onewire_write_byte 2646  
                                 ?_util_pwm_start 0001                                          ?_isdigit 0001  
                                       _main_loop 354E                        high_priority_int@total_add 0030  
      high_priority_int@cycles_transmitter_active 0032                               _util_waits_delay_ms 3A88  
                           ??_util_getTemperature 00A1                                _util_onewire_reset 3854  
                                        ?_sprintf 00A4                                    __size_of_scale 0496  
                 __size_of_init_timer2_initialize 001A                       util_getBatteryVoltage@value 008B  
                                  ___wmul@product 0026                                          _LATAbits 000F89  
                                        _LATBbits 000F8A                                          _LATDbits 000F8C  
                             ?_util_onewire_reset 001C                      _global_command_pending_check 003A  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 001A                                          i2u440_40 1CEE  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 2E2E  
                                        i2u441_48 1CF0                                          i2u453_40 1E6E  
                                        i2u445_40 1D4C                                          i2u437_40 1CC6  
                                        i2u453_45 1E66                                          i2u438_48 1CC8  
              __size_of_init_watchdogs_initialize 001E                           ?_util_getBatteryCurrent 009E  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 001C           util_beacon_transmission@battery_current 00D6  
                         ?_util_getBatteryVoltage 0088                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0075                              ??_util_onewire_reset 001E  
                      util_transmit_letter@letter 0026                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00D1                            ?_util_onewire_read_bit 001C  
                     util_getBatteryCurrent@value 00A0                                         copy_data0 37CE  
                          _init_timer1_initialize 3AE0                             util_waits_delay_ms@ms 001C  
                      __end_of_util_transmit_dash 3BBE            high_priority_int@is_transmitter_active 003E  
                  __end_of_util_getBatteryCurrent 30AC                                          __Hrparam 0000  
                    __size_of_util_pwm_initialize 0034                                _init_io_initialize 316A  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 001E  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
               __end_of_init_watchdogs_initialize 3B8A                    __end_of_util_getBatteryVoltage 316A  
                          _init_timer2_initialize 3BBE                                  __size_of___awdiv 00A6  
                                __size_of___ftadd 0268                                  __size_of___awmod 0070  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0024  
                           __end_of_util_pwm_stop 3C2C                                  __size_of___lldiv 00B0  
                                __size_of___ftmul 015E                         ??_util_onewire_write_byte 0020  
                                __size_of___llmod 0094                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                               ?_init_io_initialize 0001  
                                        ___awtoft 3954                                          ___ftpack 32D6  
              high_priority_int@num_received_bits 0028                                       _fround$2790 008B  
                                     _fround$2789 008E                          __end_of_low_priority_int 00A6  
                                        ___lltoft 364C                        ??_util_beacon_transmission 0028  
                           _util_waits_delay_mins 3916                             _util_waits_delay_secs 3716  
                                      _ANSELAbits 000F38                                          ___lwtoft 3B06  
                                      _ANSELBbits 000F39                                        _ANSELDbits 000F3B  
                                      sprintf@exp 00C9                                        sprintf@val 00C5  
                                      strcat@from 001E                                  __size_of_isdigit 001E  
                                        __ptext10 39C4                                          __ptext11 2BC6  
                                        __ptext20 3BFC                                          __ptext12 3954  
                                        __ptext21 36B6                                          __ptext13 2F18  
                                        __ptext30 3896                                          __ptext22 3C0A  
                                        __ptext14 30AC                                          __ptext31 00AA  
                                        __ptext23 3B8A                                          __ptext15 2FE2  
                                        __ptext40 2D06                                          __ptext32 13CA  
                                        __ptext24 3BA4                                          __ptext16 3B06  
                                        __ptext41 364C                                          __ptext33 3B4E  
                                        __ptext25 3A88                                          __ptext17 2E2E  
                                        __ptext50 3AB4                                          __ptext42 342A  
                                        __ptext34 1FAA                                          __ptext26 3C24  
                                        __ptext18 1860                                          __ptext51 3BD8  
                                        __ptext43 3226                                          __ptext35 39F6  
                                        __ptext27 3C2C                                          __ptext19 3BEE  
                                        __ptext52 3990                                          __ptext44 2A82  
                                        __ptext36 27C8                                          __ptext28 3768  
                                        __ptext53 3B6C                                          __ptext45 3808  
                                        __ptext37 35DC                                          __ptext29 3A58  
                                        __ptext54 3BBE                                          __ptext46 224A  
                                        __ptext38 3384                                          __ptext55 3AE0  
                                        __ptext47 32D6                                          __ptext39 2926  
                                        __ptext56 316A                                          __ptext48 3B2A  
                                        __ptext49 34BE                                          __powers_ 7F1D  
                                __size_of_sprintf 0B86                              ??_init_io_initialize 001C  
                                      strcpy@from 001E                     __size_of_util_transmit_letter 03F0  
                util_getSolarCurrent@solarCurrent 00A3                          __size_of_init_initialize 0016  
                                   __size_of_main 000C                        util_onewire_reset@presence 001F  
                                    _PSTR2CONbits 000F63                                          int$flags 0044  
                   ?_util_transmit_morse_sequence 0071                     util_getBatteryVoltage@voltage 008E  
                                     ??_main_loop 0028                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0077                                          isdigit@c 001E  
                                        memset@p1 001C                            main_loop@solar_current 00DE  
                                        scale@scl 008E                   __end_of_util_onewire_write_byte 27C8  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00BB                                  __tdiv_to_l_@exp1 0076  
                                       sprintf@sp 00A4                                  __tdiv_to_l_@cntr 0075  
                                __tdiv_to_l_@quot 0071                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 0071                                  ??_util_pwm_start 001C  
                          ?_util_waits_delay_mins 0073                            ?_util_waits_delay_secs 0071  
                                    ?__tdiv_to_l_ 001C                                          sprintf@c 00D0  
                                        sprintf@f 00A6                                          strcat@cp 0020  
                                        strcat@to 001C                    __end_of_util_waits_delay_hours 3916  
                                ___lldiv@quotient 001C                                          strcpy@cp 0020  
                                        strlen@cp 0020                                          strcpy@to 001C  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
            util_getBatteryCurrent@batteryCurrent 00A3                    high_priority_int@oldest_sample 0014  
