

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 07 11:56:20 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 1.41
    79                           ; Generated 25/01/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F45K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  003E36                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for high_priority_int@noise_avg_value
   118  003E36  00                 	db	0
   119  003E37  7D                 	db	125
   120  003E38  00                 	db	0
   121                           
   122                           ;initializer for high_priority_int@activation_thresold
   123  003E39  7D00               	dw	32000
   124                           
   125                           	psect	mediumconst
   126  007EF4                     __pmediumconst:
   127                           	opt stack 0
   128  007EF4  00                 	db	0
   129  007EF5                     _dpowers:
   130                           	opt stack 0
   131  007EF5  0001               	dw	1
   132  007EF7  0000               	dw	0
   133  007EF9  000A               	dw	10
   134  007EFB  0000               	dw	0
   135  007EFD  0064               	dw	100
   136  007EFF  0000               	dw	0
   137  007F01  03E8               	dw	1000
   138  007F03  0000               	dw	0
   139  007F05  2710               	dw	10000
   140  007F07  0000               	dw	0
   141  007F09  86A0               	dw	34464
   142  007F0B  0001               	dw	1
   143  007F0D  4240               	dw	16960
   144  007F0F  000F               	dw	15
   145  007F11  9680               	dw	38528
   146  007F13  0098               	dw	152
   147  007F15  E100               	dw	57600
   148  007F17  05F5               	dw	1525
   149  007F19  CA00               	dw	51712
   150  007F1B  3B9A               	dw	15258
   151  007F1D                     __end_of_dpowers:
   152                           	opt stack 0
   153  007F1D                     __powers_:
   154                           	opt stack 0
   155  007F1D  00                 	db	0
   156  007F1E  80                 	db	128
   157  007F1F  3F                 	db	63
   158  007F20  00                 	db	0
   159  007F21  20                 	db	32
   160  007F22  41                 	db	65
   161  007F23  00                 	db	0
   162  007F24  C8                 	db	200
   163  007F25  42                 	db	66
   164  007F26  00                 	db	0
   165  007F27  7A                 	db	122
   166  007F28  44                 	db	68
   167  007F29  40                 	db	64
   168  007F2A  1C                 	db	28
   169  007F2B  46                 	db	70
   170  007F2C  50                 	db	80
   171  007F2D  C3                 	db	195
   172  007F2E  47                 	db	71
   173  007F2F  24                 	db	36
   174  007F30  74                 	db	116
   175  007F31  49                 	db	73
   176  007F32  97                 	db	151
   177  007F33  18                 	db	24
   178  007F34  4B                 	db	75
   179  007F35  BC                 	db	188
   180  007F36  BE                 	db	190
   181  007F37  4C                 	db	76
   182  007F38  6B                 	db	107
   183  007F39  6E                 	db	110
   184  007F3A  4E                 	db	78
   185  007F3B  03                 	db	3
   186  007F3C  15                 	db	21
   187  007F3D  50                 	db	80
   188  007F3E  79                 	db	121
   189  007F3F  AD                 	db	173
   190  007F40  60                 	db	96
   191  007F41  F3                 	db	243
   192  007F42  49                 	db	73
   193  007F43  71                 	db	113
   194  007F44                     __end_of__powers_:
   195                           	opt stack 0
   196  007F44                     __npowers_:
   197                           	opt stack 0
   198  007F44  00                 	db	0
   199  007F45  80                 	db	128
   200  007F46  3F                 	db	63
   201  007F47  CD                 	db	205
   202  007F48  CC                 	db	204
   203  007F49  3D                 	db	61
   204  007F4A  D7                 	db	215
   205  007F4B  23                 	db	35
   206  007F4C  3C                 	db	60
   207  007F4D  12                 	db	18
   208  007F4E  83                 	db	131
   209  007F4F  3A                 	db	58
   210  007F50  B7                 	db	183
   211  007F51  D1                 	db	209
   212  007F52  38                 	db	56
   213  007F53  C6                 	db	198
   214  007F54  27                 	db	39
   215  007F55  37                 	db	55
   216  007F56  38                 	db	56
   217  007F57  86                 	db	134
   218  007F58  35                 	db	53
   219  007F59  C0                 	db	192
   220  007F5A  D6                 	db	214
   221  007F5B  33                 	db	51
   222  007F5C  CC                 	db	204
   223  007F5D  2B                 	db	43
   224  007F5E  32                 	db	50
   225  007F5F  70                 	db	112
   226  007F60  89                 	db	137
   227  007F61  30                 	db	48
   228  007F62  E7                 	db	231
   229  007F63  DB                 	db	219
   230  007F64  2E                 	db	46
   231  007F65  E5                 	db	229
   232  007F66  3C                 	db	60
   233  007F67  1E                 	db	30
   234  007F68  42                 	db	66
   235  007F69  A2                 	db	162
   236  007F6A  0D                 	db	13
   237  007F6B                     __end_of__npowers_:
   238                           	opt stack 0
   239  0000                     _CCPTMRS0bits	set	3913
   240  0000                     _ANSELDbits	set	3899
   241  0000                     _ANSELBbits	set	3897
   242  0000                     _ANSELAbits	set	3896
   243  0000                     _VREFCON0bits	set	3906
   244  0000                     _ADRES	set	4035
   245  0000                     _PORTBbits	set	3969
   246  0000                     _TMR2	set	4028
   247  0000                     _IPR1bits	set	3999
   248  0000                     _PIE1bits	set	3997
   249  0000                     _TMR1L	set	4046
   250  0000                     _TMR1H	set	4047
   251  0000                     _T1CONbits	set	4045
   252  0000                     _RCONbits	set	4048
   253  0000                     _T2CONbits	set	4026
   254  0000                     _CCPR2L	set	3943
   255  0000                     _PSTR2CONbits	set	3939
   256  0000                     _CCP2CONbits	set	3942
   257  0000                     _PR2	set	4027
   258  0000                     _PORTAbits	set	3968
   259  0000                     _INTCONbits	set	4082
   260  0000                     _PIR1bits	set	3998
   261  0000                     _ADCON0bits	set	4034
   262  0000                     _LATDbits	set	3980
   263  0000                     _TRISDbits	set	3989
   264  0000                     _LATBbits	set	3978
   265  0000                     _TRISBbits	set	3987
   266  0000                     _WPUB	set	3937
   267  0000                     _LATAbits	set	3977
   268  0000                     _TRISAbits	set	3986
   269  0000                     _ADCON2	set	4032
   270  0000                     _ADCON1	set	4033
   271  0000                     _PORTDbits	set	3971
   272  0000                     _RBPU	set	32655
   273  007F6B                     STR_2:
   274  007F6B  20                 	db	32
   275  007F6C  25                 	db	37
   276  007F6D  2E                 	db	46
   277  007F6E  31                 	db	49	;'1'
   278  007F6F  66                 	db	102	;'f'
   279  007F70  20                 	db	32
   280  007F71  25                 	db	37
   281  007F72  2E                 	db	46
   282  007F73  31                 	db	49	;'1'
   283  007F74  66                 	db	102	;'f'
   284  007F75  20                 	db	32
   285  007F76  25                 	db	37
   286  007F77  33                 	db	51	;'3'
   287  007F78  2E                 	db	46
   288  007F79  30                 	db	48	;'0'
   289  007F7A  64                 	db	100	;'d'
   290  007F7B  20                 	db	32
   291  007F7C  25                 	db	37
   292  007F7D  33                 	db	51	;'3'
   293  007F7E  2E                 	db	46
   294  007F7F  30                 	db	48	;'0'
   295  007F80  64                 	db	100	;'d'
   296  007F81  00                 	db	0
   297  007F82                     STR_39:
   298  007F82  2D                 	db	45
   299  007F83  2D                 	db	45
   300  007F84  2E                 	db	46
   301  007F85  2E                 	db	46
   302  007F86  2D                 	db	45
   303  007F87  2D                 	db	45
   304  007F88  00                 	db	0
   305  007F89                     STR_42:
   306  007F89  2E                 	db	46
   307  007F8A  2D                 	db	45
   308  007F8B  2E                 	db	46
   309  007F8C  2D                 	db	45
   310  007F8D  2E                 	db	46
   311  007F8E  2D                 	db	45
   312  007F8F  00                 	db	0
   313  007F90                     STR_43:
   314  007F90  2D                 	db	45
   315  007F91  2E                 	db	46
   316  007F92  2E                 	db	46
   317  007F93  2E                 	db	46
   318  007F94  2E                 	db	46
   319  007F95  2D                 	db	45
   320  007F96  00                 	db	0
   321  007F97                     STR_40:
   322  007F97  2E                 	db	46
   323  007F98  2E                 	db	46
   324  007F99  2D                 	db	45
   325  007F9A  2D                 	db	45
   326  007F9B  2E                 	db	46
   327  007F9C  2E                 	db	46
   328  007F9D  00                 	db	0
   329  007F9E                     STR_1:
   330  007F9E  45                 	db	69	;'E'
   331  007F9F  41                 	db	65	;'A'
   332  007FA0  53                 	db	83	;'S'
   333  007FA1  41                 	db	65	;'A'
   334  007FA2  54                 	db	84	;'T'
   335  007FA3  32                 	db	50	;'2'
   336  007FA4  00                 	db	0
   337  007FA5                     STR_29:
   338  007FA5  2D                 	db	45
   339  007FA6  2D                 	db	45
   340  007FA7  2D                 	db	45
   341  007FA8  2D                 	db	45
   342  007FA9  2D                 	db	45
   343  007FAA  00                 	db	0
   344  007FAB                     STR_30:
   345  007FAB  2E                 	db	46
   346  007FAC  2D                 	db	45
   347  007FAD  2D                 	db	45
   348  007FAE  2D                 	db	45
   349  007FAF  2D                 	db	45
   350  007FB0  00                 	db	0
   351  007FB1                     STR_31:
   352  007FB1  2E                 	db	46
   353  007FB2  2E                 	db	46
   354  007FB3  2D                 	db	45
   355  007FB4  2D                 	db	45
   356  007FB5  2D                 	db	45
   357  007FB6  00                 	db	0
   358  007FB7                     STR_32:
   359  007FB7  2E                 	db	46
   360  007FB8  2E                 	db	46
   361  007FB9  2E                 	db	46
   362  007FBA  2D                 	db	45
   363  007FBB  2D                 	db	45
   364  007FBC  00                 	db	0
   365  007FBD                     STR_38:
   366  007FBD  2D                 	db	45
   367  007FBE  2D                 	db	45
   368  007FBF  2D                 	db	45
   369  007FC0  2D                 	db	45
   370  007FC1  2E                 	db	46
   371  007FC2  00                 	db	0
   372  007FC3                     STR_41:
   373  007FC3  2D                 	db	45
   374  007FC4  2E                 	db	46
   375  007FC5  2E                 	db	46
   376  007FC6  2D                 	db	45
   377  007FC7  2E                 	db	46
   378  007FC8  00                 	db	0
   379  007FC9                     STR_37:
   380  007FC9  2D                 	db	45
   381  007FCA  2D                 	db	45
   382  007FCB  2D                 	db	45
   383  007FCC  2E                 	db	46
   384  007FCD  2E                 	db	46
   385  007FCE  00                 	db	0
   386  007FCF                     STR_36:
   387  007FCF  2D                 	db	45
   388  007FD0  2D                 	db	45
   389  007FD1  2E                 	db	46
   390  007FD2  2E                 	db	46
   391  007FD3  2E                 	db	46
   392  007FD4  00                 	db	0
   393  007FD5                     STR_35:
   394  007FD5  2D                 	db	45
   395  007FD6  2E                 	db	46
   396  007FD7  2E                 	db	46
   397  007FD8  2E                 	db	46
   398  007FD9  2E                 	db	46
   399  007FDA  00                 	db	0
   400  007FDB                     STR_34:
   401  007FDB  2E                 	db	46
   402  007FDC  2E                 	db	46
   403  007FDD  2E                 	db	46
   404  007FDE  2E                 	db	46
   405  007FDF  2E                 	db	46
   406  007FE0  00                 	db	0
   407  007FE1                     STR_27:
   408  007FE1  2D                 	db	45
   409  007FE2  2E                 	db	46
   410  007FE3  2D                 	db	45
   411  007FE4  2D                 	db	45
   412  007FE5  00                 	db	0
   413  007FE6                     STR_19:
   414  007FE6  2D                 	db	45
   415  007FE7  2D                 	db	45
   416  007FE8  2E                 	db	46
   417  007FE9  2D                 	db	45
   418  007FEA  00                 	db	0
   419  007FEB                     STR_26:
   420  007FEB  2D                 	db	45
   421  007FEC  2E                 	db	46
   422  007FED  2E                 	db	46
   423  007FEE  2D                 	db	45
   424  007FEF  00                 	db	0
   425  007FF0                     STR_18:
   426  007FF0  2E                 	db	46
   427  007FF1  2D                 	db	45
   428  007FF2  2D                 	db	45
   429  007FF3  2E                 	db	46
   430  007FF4  00                 	db	0
   431  007FF5                     STR_5:
   432  007FF5  2D                 	db	45
   433  007FF6  2E                 	db	46
   434  007FF7  2D                 	db	45
   435  007FF8  2E                 	db	46
   436  007FF9  00                 	db	0
   437  007FFA                     STR_14:
   438  007FFA  2E                 	db	46
   439  007FFB  2D                 	db	45
   440  007FFC  2E                 	db	46
   441  007FFD  2E                 	db	46
   442  007FFE  00                 	db	0
   443  0000                     
   444                           ; #config settings
   445  007FFF  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           	psect	cinit
   448  00393E                     __pcinit:
   449                           	opt stack 0
   450  00393E                     start_initialization:
   451                           	opt stack 0
   452  00393E                     __initialization:
   453                           	opt stack 0
   454                           
   455                           ; Initialize objects allocated to COMRAM (5 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457  00393E  0E36               	movlw	low __pidataCOMRAM
   458  003940  6EF6               	movwf	tblptrl,c
   459  003942  0E3E               	movlw	high __pidataCOMRAM
   460  003944  6EF7               	movwf	tblptrh,c
   461  003946  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462  003948  6EF8               	movwf	tblptru,c
   463  00394A  EE00  F034         	lfsr	0,__pdataCOMRAM
   464  00394E  EE10 F005          	lfsr	1,5
   465  003952                     copy_data0:
   466  003952  0009               	tblrd		*+
   467  003954  CFF5 FFEE          	movff	tablat,postinc0
   468  003958  50E5               	movf	postdec1,w,c
   469  00395A  50E1               	movf	fsr1l,w,c
   470  00395C  E1FA               	bnz	copy_data0
   471                           
   472                           ; Clear objects allocated to BANK2 (256 bytes)
   473  00395E  EE02  F000         	lfsr	0,__pbssBANK2
   474  003962  EE11 F000          	lfsr	1,256
   475  003966                     clear_0:
   476  003966  6AEE               	clrf	postinc0,c
   477  003968  50E5               	movf	postdec1,w,c
   478  00396A  50E1               	movf	fsr1l,w,c
   479  00396C  E1FC               	bnz	clear_0
   480  00396E  50E2               	movf	fsr1h,w,c
   481  003970  E1FA               	bnz	clear_0
   482                           
   483                           ; Clear objects allocated to COMRAM (13 bytes)
   484  003972  EE00  F027         	lfsr	0,__pbssCOMRAM
   485  003976  0E0D               	movlw	13
   486  003978                     clear_1:
   487  003978  6AEE               	clrf	postinc0,c
   488  00397A  06E8               	decf	wreg,f,c
   489  00397C  E1FD               	bnz	clear_1
   490  00397E                     end_of_initialization:
   491                           	opt stack 0
   492  00397E                     __end_of__initialization:
   493                           	opt stack 0
   494  00397E  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   495  003980  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   496  003982  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  003984  6EF8               	movwf	tblptru,c
   498  003986  0100               	movlb	0
   499  003988  EF0D  F01F         	goto	_main	;jump to C main() function
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	bssCOMRAM
   511  000027                     __pbssCOMRAM:
   512                           	opt stack 0
   513  000027                     high_priority_int@valid_samples:
   514                           	opt stack 0
   515  000027                     	ds	2
   516  000029                     high_priority_int@total_add:
   517                           	opt stack 0
   518  000029                     	ds	2
   519  00002B                     high_priority_int@cycles_transmitter_active:
   520                           	opt stack 0
   521  00002B                     	ds	2
   522  00002D                     high_priority_int@times_thresold_exceeded:
   523                           	opt stack 0
   524  00002D                     	ds	2
   525  00002F                     high_priority_int@sample_position:
   526                           	opt stack 0
   527  00002F                     	ds	2
   528  000031                     high_priority_int@tmr1_interrupt_number:
   529                           	opt stack 0
   530  000031                     	ds	2
   531  000033                     high_priority_int@is_transmitter_active:
   532                           	opt stack 0
   533  000033                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1h	equ	0xFE2
   542                           fsr1l	equ	0xFE1
   543                           
   544                           	psect	dataCOMRAM
   545  000034                     __pdataCOMRAM:
   546                           	opt stack 0
   547  000034                     high_priority_int@noise_avg_value:
   548                           	opt stack 0
   549  000034                     	ds	3
   550  000037                     high_priority_int@activation_thresold:
   551                           	opt stack 0
   552  000037                     	ds	2
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1h	equ	0xFE2
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	bssBANK2
   564  000200                     __pbssBANK2:
   565                           	opt stack 0
   566  000200                     high_priority_int@samples:
   567                           	opt stack 0
   568  000200                     	ds	256
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postdec1	equ	0xFE5
   576                           fsr1h	equ	0xFE2
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	cstackBANK1
   580  000100                     __pcstackBANK1:
   581                           	opt stack 0
   582  000100                     util_beacon_transmission@BEACON_MESSAGE:
   583                           	opt stack 0
   584  000100                     util_getTemperature@bit_mem:
   585                           	opt stack 0
   586                           
   587                           ; 144 bytes @ 0x0
   588  000100                     	ds	128
   589  000180                     util_beacon_transmission@BEACON_BUFFER:
   590                           	opt stack 0
   591                           
   592                           ; 64 bytes @ 0x80
   593  000180                     	ds	16
   594  000190                     util_getTemperature@byte_mem:
   595                           	opt stack 0
   596                           
   597                           ; 18 bytes @ 0x90
   598  000190                     	ds	18
   599  0001A2                     util_getTemperature@num_bit:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0xA2
   603  0001A2                     	ds	2
   604  0001A4                     util_getTemperature@sign:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0xA4
   608  0001A4                     	ds	3
   609  0001A7                     _util_getTemperature$2777:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0xA7
   613  0001A7                     	ds	3
   614  0001AA                     _util_getTemperature$2778:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0xAA
   618  0001AA                     	ds	3
   619  0001AD                     _util_getTemperature$2779:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0xAD
   623  0001AD                     	ds	3
   624  0001B0                     _util_getTemperature$2780:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0xB0
   628  0001B0                     	ds	3
   629  0001B3                     util_getTemperature@shift_reg_bit0:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0xB3
   633  0001B3                     	ds	2
   634  0001B5                     util_getTemperature@shift_reg_bit1:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0xB5
   638  0001B5                     	ds	2
   639  0001B7                     util_getTemperature@shift_reg_bit2:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0xB7
   643  0001B7                     	ds	2
   644  0001B9                     util_getTemperature@shift_reg_bit3:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xB9
   648  0001B9                     	ds	2
   649  0001BB                     util_getTemperature@shift_reg_bit4:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xBB
   653  0001BB                     	ds	2
   654  0001BD                     util_getTemperature@shift_reg_bit5:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0xBD
   658  0001BD                     	ds	2
   659  0001BF                     util_getTemperature@shift_reg_bit6:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xBF
   663  0001BF                     	ds	1
   664  0001C0                     util_beacon_transmission@i:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xC0
   668  0001C0                     	ds	1
   669  0001C1                     util_getTemperature@shift_reg_bit7:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xC1
   673  0001C1                     	ds	2
   674  0001C3                     util_getTemperature@shift_reg_bit_temp:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xC3
   678  0001C3                     	ds	2
   679  0001C5                     util_getTemperature@num_byte:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0xC5
   683  0001C5                     	ds	2
   684  0001C7                     util_getTemperature@bit_in_byte:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xC7
   688  0001C7                     	ds	2
   689  0001C9                     util_getTemperature@temperature:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0xC9
   693  0001C9                     	ds	3
   694  0001CC                     util_getTemperature@i:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xCC
   698  0001CC                     	ds	2
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1h	equ	0xFE2
   707                           fsr1l	equ	0xFE1
   708                           
   709                           	psect	cstackBANK0
   710  000060                     __pcstackBANK0:
   711                           	opt stack 0
   712  000060                     ??_init_watchdogs_initialize:
   713  000060                     ??_isdigit:
   714  000060                     ?_util_onewire_reset:
   715                           	opt stack 0
   716  000060                     ?_util_onewire_read_bit:
   717                           	opt stack 0
   718  000060                     ?_strlen:
   719                           	opt stack 0
   720  000060                     ?___awmod:
   721                           	opt stack 0
   722  000060                     ?___ftpack:
   723                           	opt stack 0
   724  000060                     ?___ftneg:
   725                           	opt stack 0
   726  000060                     ?__tdiv_to_l_:
   727                           	opt stack 0
   728  000060                     ?__div_to_l_:
   729                           	opt stack 0
   730  000060                     ?___lldiv:
   731                           	opt stack 0
   732  000060                     util_onewire_write_bit@bit_in:
   733                           	opt stack 0
   734  000060                     util_waits_delay_ms@ms:
   735                           	opt stack 0
   736  000060                     ___awmod@dividend:
   737                           	opt stack 0
   738  000060                     memset@p1:
   739                           	opt stack 0
   740  000060                     strcat@to:
   741                           	opt stack 0
   742  000060                     strcpy@to:
   743                           	opt stack 0
   744  000060                     strlen@s:
   745                           	opt stack 0
   746  000060                     __div_to_l_@f1:
   747                           	opt stack 0
   748  000060                     ___ftpack@arg:
   749                           	opt stack 0
   750  000060                     __tdiv_to_l_@f1:
   751                           	opt stack 0
   752  000060                     ___ftge@ff1:
   753                           	opt stack 0
   754  000060                     ___ftneg@f1:
   755                           	opt stack 0
   756  000060                     ___lldiv@dividend:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x0
   760  000060                     	ds	1
   761  000061                     _isdigit$2411:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x1
   765  000061                     	ds	1
   766  000062                     ??_util_onewire_reset:
   767  000062                     ??_util_onewire_read_bit:
   768  000062                     ??_strlen:
   769  000062                     ??_util_waits_delay_ms:
   770  000062                     isdigit@c:
   771                           	opt stack 0
   772  000062                     util_onewire_write_byte@value:
   773                           	opt stack 0
   774  000062                     ___awmod@divisor:
   775                           	opt stack 0
   776  000062                     memset@c:
   777                           	opt stack 0
   778  000062                     strcat@from:
   779                           	opt stack 0
   780  000062                     strcpy@from:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x2
   784  000062                     	ds	1
   785  000063                     ___ftpack@exp:
   786                           	opt stack 0
   787  000063                     util_onewire_reset@presence:
   788                           	opt stack 0
   789  000063                     util_onewire_read_bit@value:
   790                           	opt stack 0
   791  000063                     util_waits_delay_ms@i:
   792                           	opt stack 0
   793  000063                     __div_to_l_@f2:
   794                           	opt stack 0
   795  000063                     __tdiv_to_l_@f2:
   796                           	opt stack 0
   797  000063                     ___ftge@ff2:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x3
   801  000063                     	ds	1
   802  000064                     ??_util_onewire_write_byte:
   803  000064                     ___awmod@counter:
   804                           	opt stack 0
   805  000064                     ___ftpack@sign:
   806                           	opt stack 0
   807  000064                     memset@n:
   808                           	opt stack 0
   809  000064                     strcat@cp:
   810                           	opt stack 0
   811  000064                     strcpy@cp:
   812                           	opt stack 0
   813  000064                     strlen@cp:
   814                           	opt stack 0
   815  000064                     ___lldiv@divisor:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x4
   819  000064                     	ds	1
   820  000065                     ??___ftpack:
   821  000065                     ?_util_onewire_read_byte:
   822                           	opt stack 0
   823  000065                     ___awmod@sign:
   824                           	opt stack 0
   825  000065                     util_waits_delay_secs@secs:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x5
   829  000065                     	ds	1
   830  000066                     ??__tdiv_to_l_:
   831  000066                     ??___ftge:
   832  000066                     ?___awdiv:
   833                           	opt stack 0
   834  000066                     util_transmit_morse_sequence@morse_sequence:
   835                           	opt stack 0
   836  000066                     ___awdiv@dividend:
   837                           	opt stack 0
   838  000066                     memset@p:
   839                           	opt stack 0
   840  000066                     __div_to_l_@quot:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x6
   844  000066                     	ds	1
   845  000067                     ??_util_waits_delay_secs:
   846  000067                     ??_util_onewire_read_byte:
   847  000067                     util_onewire_write_byte@bit0:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x7
   851  000067                     	ds	1
   852  000068                     ??_util_transmit_morse_sequence:
   853  000068                     ?___awtoft:
   854                           	opt stack 0
   855  000068                     ?___lltoft:
   856                           	opt stack 0
   857  000068                     ?___lwtoft:
   858                           	opt stack 0
   859  000068                     util_waits_delay_secs@i:
   860                           	opt stack 0
   861  000068                     ___awdiv@divisor:
   862                           	opt stack 0
   863  000068                     ___awtoft@c:
   864                           	opt stack 0
   865  000068                     ___lwtoft@c:
   866                           	opt stack 0
   867  000068                     ___lldiv@quotient:
   868                           	opt stack 0
   869  000068                     ___lltoft@c:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x8
   873  000068                     	ds	1
   874  000069                     util_onewire_write_byte@bit1:
   875                           	opt stack 0
   876  000069                     __tdiv_to_l_@quot:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x9
   880  000069                     	ds	1
   881  00006A                     ___awdiv@counter:
   882                           	opt stack 0
   883  00006A                     __div_to_l_@cntr:
   884                           	opt stack 0
   885  00006A                     util_transmit_morse_sequence@i:
   886                           	opt stack 0
   887  00006A                     util_waits_delay_secs@j:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0xA
   891  00006A                     	ds	1
   892  00006B                     ___awdiv@sign:
   893                           	opt stack 0
   894  00006B                     ___awtoft@sign:
   895                           	opt stack 0
   896  00006B                     __div_to_l_@exp1:
   897                           	opt stack 0
   898  00006B                     util_onewire_write_byte@bit2:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0xB
   902  00006B                     	ds	1
   903  00006C                     ??___lltoft:
   904  00006C                     ?___ftdiv:
   905                           	opt stack 0
   906  00006C                     util_transmit_letter@letter:
   907                           	opt stack 0
   908  00006C                     ___lldiv@counter:
   909                           	opt stack 0
   910  00006C                     util_waits_delay_mins@minutes:
   911                           	opt stack 0
   912  00006C                     ___awdiv@quotient:
   913                           	opt stack 0
   914  00006C                     ___ftdiv@f1:
   915                           	opt stack 0
   916                           
   917                           ; 3 bytes @ 0xC
   918  00006C                     	ds	1
   919  00006D                     ?___llmod:
   920                           	opt stack 0
   921  00006D                     __tdiv_to_l_@cntr:
   922                           	opt stack 0
   923  00006D                     util_onewire_write_byte@bit3:
   924                           	opt stack 0
   925  00006D                     ___llmod@dividend:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0xD
   929  00006D                     	ds	1
   930  00006E                     ??_util_waits_delay_mins:
   931  00006E                     ?___wmul:
   932                           	opt stack 0
   933  00006E                     __tdiv_to_l_@exp1:
   934                           	opt stack 0
   935  00006E                     ___wmul@multiplier:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0xE
   939  00006E                     	ds	1
   940  00006F                     util_onewire_write_byte@bit4:
   941                           	opt stack 0
   942  00006F                     util_waits_delay_mins@i:
   943                           	opt stack 0
   944  00006F                     ___ftdiv@f2:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0xF
   948  00006F                     	ds	1
   949  000070                     ___lltoft@exp:
   950                           	opt stack 0
   951  000070                     ___wmul@multiplicand:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x10
   955  000070                     	ds	1
   956  000071                     util_onewire_write_byte@bit5:
   957                           	opt stack 0
   958  000071                     util_waits_delay_hours@hours:
   959                           	opt stack 0
   960  000071                     ___llmod@divisor:
   961                           	opt stack 0
   962                           
   963                           ; 4 bytes @ 0x11
   964  000071                     	ds	1
   965  000072                     ??___ftdiv:
   966  000072                     ___wmul@product:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x12
   970  000072                     	ds	1
   971  000073                     ??_util_waits_delay_hours:
   972  000073                     util_onewire_write_byte@bit6:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x13
   976  000073                     	ds	1
   977  000074                     ?___ftmul:
   978                           	opt stack 0
   979  000074                     util_waits_delay_hours@i:
   980                           	opt stack 0
   981  000074                     ___ftmul@f1:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x14
   985  000074                     	ds	1
   986  000075                     ___ftdiv@cntr:
   987                           	opt stack 0
   988  000075                     ___llmod@counter:
   989                           	opt stack 0
   990  000075                     util_onewire_write_byte@bit7:
   991                           	opt stack 0
   992  000075                     util_onewire_read_byte@bit0:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x15
   996  000075                     	ds	1
   997  000076                     ___ftdiv@f3:
   998                           	opt stack 0
   999                           
  1000                           ; 3 bytes @ 0x16
  1001  000076                     	ds	1
  1002  000077                     util_onewire_read_byte@bit1:
  1003                           	opt stack 0
  1004  000077                     ___ftmul@f2:
  1005                           	opt stack 0
  1006                           
  1007                           ; 3 bytes @ 0x17
  1008  000077                     	ds	2
  1009  000079                     ___ftdiv@exp:
  1010                           	opt stack 0
  1011  000079                     util_onewire_read_byte@bit2:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x19
  1015  000079                     	ds	1
  1016  00007A                     ??___ftmul:
  1017  00007A                     ___ftdiv@sign:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x1A
  1021  00007A                     	ds	1
  1022  00007B                     util_onewire_read_byte@bit3:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x1B
  1026  00007B                     	ds	2
  1027  00007D                     ___ftmul@exp:
  1028                           	opt stack 0
  1029  00007D                     util_onewire_read_byte@bit4:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x1D
  1033  00007D                     	ds	1
  1034  00007E                     ___ftmul@f3_as_product:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x1E
  1038  00007E                     	ds	1
  1039  00007F                     util_onewire_read_byte@bit5:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043  00007F                     	ds	2
  1044  000081                     ___ftmul@cntr:
  1045                           	opt stack 0
  1046  000081                     util_onewire_read_byte@bit6:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x21
  1050  000081                     	ds	1
  1051  000082                     ___ftmul@sign:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x22
  1055  000082                     	ds	1
  1056  000083                     ?_util_getBatteryVoltage:
  1057                           	opt stack 0
  1058  000083                     ?_fround:
  1059                           	opt stack 0
  1060  000083                     ?_scale:
  1061                           	opt stack 0
  1062  000083                     util_onewire_read_byte@bit7:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x23
  1066  000083                     	ds	2
  1067  000085                     util_onewire_read_byte@value:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x25
  1071  000085                     	ds	1
  1072  000086                     util_getBatteryVoltage@value:
  1073                           	opt stack 0
  1074  000086                     _fround$2782:
  1075                           	opt stack 0
  1076  000086                     _scale$2783:
  1077                           	opt stack 0
  1078                           
  1079                           ; 3 bytes @ 0x26
  1080  000086                     	ds	3
  1081  000089                     scale@scl:
  1082                           	opt stack 0
  1083  000089                     util_getBatteryVoltage@voltage:
  1084                           	opt stack 0
  1085  000089                     _fround$2781:
  1086                           	opt stack 0
  1087                           
  1088                           ; 3 bytes @ 0x29
  1089  000089                     	ds	1
  1090  00008A                     ?___fttol:
  1091                           	opt stack 0
  1092  00008A                     ___fttol@f1:
  1093                           	opt stack 0
  1094                           
  1095                           ; 3 bytes @ 0x2A
  1096  00008A                     	ds	2
  1097  00008C                     fround@prec:
  1098                           	opt stack 0
  1099                           
  1100                           ; 1 bytes @ 0x2C
  1101  00008C                     	ds	1
  1102  00008D                     ?___ftadd:
  1103                           	opt stack 0
  1104  00008D                     ___ftadd@f1:
  1105                           	opt stack 0
  1106                           
  1107                           ; 3 bytes @ 0x2D
  1108  00008D                     	ds	1
  1109  00008E                     ??___fttol:
  1110                           
  1111                           ; 1 bytes @ 0x2E
  1112  00008E                     	ds	2
  1113  000090                     ___ftadd@f2:
  1114                           	opt stack 0
  1115                           
  1116                           ; 3 bytes @ 0x30
  1117  000090                     	ds	3
  1118  000093                     ??___ftadd:
  1119  000093                     ___fttol@sign1:
  1120                           	opt stack 0
  1121                           
  1122                           ; 1 bytes @ 0x33
  1123  000093                     	ds	1
  1124  000094                     ___fttol@lval:
  1125                           	opt stack 0
  1126                           
  1127                           ; 4 bytes @ 0x34
  1128  000094                     	ds	2
  1129  000096                     ___ftadd@sign:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x36
  1133  000096                     	ds	1
  1134  000097                     ___ftadd@exp2:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x37
  1138  000097                     	ds	1
  1139  000098                     ___ftadd@exp1:
  1140                           	opt stack 0
  1141  000098                     ___fttol@exp1:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x38
  1145  000098                     	ds	1
  1146  000099                     ?_util_getSolarCurrent:
  1147                           	opt stack 0
  1148  000099                     ?_util_getBatteryCurrent:
  1149                           	opt stack 0
  1150  000099                     ?_util_getTemperature:
  1151                           	opt stack 0
  1152  000099                     ?___ftsub:
  1153                           	opt stack 0
  1154  000099                     ___ftsub@f1:
  1155                           	opt stack 0
  1156                           
  1157                           ; 3 bytes @ 0x39
  1158  000099                     	ds	2
  1159  00009B                     util_getSolarCurrent@value:
  1160                           	opt stack 0
  1161  00009B                     util_getBatteryCurrent@value:
  1162                           	opt stack 0
  1163                           
  1164                           ; 3 bytes @ 0x3B
  1165  00009B                     	ds	1
  1166  00009C                     ??_util_getTemperature:
  1167  00009C                     ___ftsub@f2:
  1168                           	opt stack 0
  1169                           
  1170                           ; 3 bytes @ 0x3C
  1171  00009C                     	ds	2
  1172  00009E                     util_getSolarCurrent@solarCurrent:
  1173                           	opt stack 0
  1174  00009E                     util_getBatteryCurrent@batteryCurrent:
  1175                           	opt stack 0
  1176                           
  1177                           ; 3 bytes @ 0x3E
  1178  00009E                     	ds	1
  1179  00009F                     ?_sprintf:
  1180                           	opt stack 0
  1181  00009F                     sprintf@sp:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x3F
  1185  00009F                     	ds	2
  1186  0000A1                     sprintf@f:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x41
  1190  0000A1                     	ds	12
  1191  0000AD                     ??_sprintf:
  1192                           
  1193                           ; 1 bytes @ 0x4D
  1194  0000AD                     	ds	6
  1195  0000B3                     _sprintf$2784:
  1196                           	opt stack 0
  1197                           
  1198                           ; 3 bytes @ 0x53
  1199  0000B3                     	ds	3
  1200  0000B6                     sprintf@ap:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x56
  1204  0000B6                     	ds	2
  1205  0000B8                     sprintf@flag:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x58
  1209  0000B8                     	ds	2
  1210  0000BA                     sprintf@width:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x5A
  1214  0000BA                     	ds	2
  1215  0000BC                     sprintf@tmpval:
  1216                           	opt stack 0
  1217                           
  1218                           ; 4 bytes @ 0x5C
  1219  0000BC                     	ds	4
  1220  0000C0                     sprintf@val:
  1221                           	opt stack 0
  1222                           
  1223                           ; 4 bytes @ 0x60
  1224  0000C0                     	ds	4
  1225  0000C4                     sprintf@exp:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x64
  1229  0000C4                     	ds	2
  1230  0000C6                     sprintf@fval:
  1231                           	opt stack 0
  1232                           
  1233                           ; 3 bytes @ 0x66
  1234  0000C6                     	ds	3
  1235  0000C9                     sprintf@prec:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x69
  1239  0000C9                     	ds	2
  1240  0000CB                     sprintf@c:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x6B
  1244  0000CB                     	ds	1
  1245  0000CC                     util_beacon_transmission@battery_voltage:
  1246                           	opt stack 0
  1247                           
  1248                           ; 3 bytes @ 0x6C
  1249  0000CC                     	ds	3
  1250  0000CF                     util_beacon_transmission@solar_current:
  1251                           	opt stack 0
  1252                           
  1253                           ; 2 bytes @ 0x6F
  1254  0000CF                     	ds	2
  1255  0000D1                     util_beacon_transmission@battery_current:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x71
  1259  0000D1                     	ds	2
  1260  0000D3                     util_beacon_transmission@temperature:
  1261                           	opt stack 0
  1262                           
  1263                           ; 3 bytes @ 0x73
  1264  0000D3                     	ds	3
  1265  0000D6                     main_loop@temperature:
  1266                           	opt stack 0
  1267                           
  1268                           ; 3 bytes @ 0x76
  1269  0000D6                     	ds	3
  1270  0000D9                     main_loop@solar_current:
  1271                           	opt stack 0
  1272                           
  1273                           ; 2 bytes @ 0x79
  1274  0000D9                     	ds	2
  1275  0000DB                     main_loop@battery_current:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x7B
  1279  0000DB                     	ds	2
  1280  0000DD                     main_loop@battery_voltage:
  1281                           	opt stack 0
  1282                           
  1283                           ; 3 bytes @ 0x7D
  1284  0000DD                     	ds	3
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1h	equ	0xFE2
  1293                           fsr1l	equ	0xFE1
  1294                           
  1295                           	psect	cstackCOMRAM
  1296  000001                     __pcstackCOMRAM:
  1297                           	opt stack 0
  1298  000001                     ??_high_priority_int:
  1299  000001                     
  1300                           ; 1 bytes @ 0x0
  1301  000001                     	ds	19
  1302  000014                     high_priority_int@sample:
  1303                           	opt stack 0
  1304                           
  1305                           ; 2 bytes @ 0x13
  1306  000014                     	ds	2
  1307  000016                     ??_low_priority_int:
  1308                           
  1309                           ; 1 bytes @ 0x15
  1310  000016                     	ds	17
  1311  000027                     tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           postdec1	equ	0xFE5
  1318                           fsr1h	equ	0xFE2
  1319                           fsr1l	equ	0xFE1
  1320                           
  1321                           ; 1 bytes @ 0x26
  1322 ;;
  1323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1324 ;;
  1325 ;; *************** function _main *****************
  1326 ;; Defined at:
  1327 ;;		line 19 in file "easat2_main_mcu.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1341 ;;      Params:         0       0       0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels required when called:    8
  1347 ;; This function calls:
  1348 ;;		_init_initialize
  1349 ;;		_main_loop
  1350 ;; This function is called by:
  1351 ;;		Startup code after reset
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text0
  1356  003E1A                     __ptext0:
  1357                           	opt stack 0
  1358  003E1A                     _main:
  1359                           	opt stack 23
  1360                           
  1361                           ;easat2_main_mcu.c: 22: init_initialize();
  1362                           
  1363                           ;incstack = 0
  1364  003E1A  ECEA  F01E         	call	_init_initialize	;wreg free
  1365                           
  1366                           ;easat2_main_mcu.c: 25: main_loop();
  1367  003E1E  EC7A  F01B         	call	_main_loop	;wreg free
  1368  003E22  EF53  F000         	goto	start
  1369  003E26                     __end_of_main:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           
  1381 ;; *************** function _main_loop *****************
  1382 ;; Defined at:
  1383 ;;		line 31 in file "easat2_main_mcu.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  battery_volt    3  125[BANK0 ] float 
  1388 ;;  temperature     3  118[BANK0 ] float 
  1389 ;;  battery_curr    2  123[BANK0 ] int 
  1390 ;;  solar_curren    2  121[BANK0 ] int 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1400 ;;      Params:         0       0       0       0       0       0       0
  1401 ;;      Locals:         0      10       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0
  1403 ;;      Totals:         0      10       0       0       0       0       0
  1404 ;;Total ram usage:       10 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    7
  1407 ;; This function calls:
  1408 ;;		_init_watchdogs_initialize
  1409 ;;		_util_beacon_transmission
  1410 ;;		_util_getBatteryCurrent
  1411 ;;		_util_getBatteryVoltage
  1412 ;;		_util_getSolarCurrent
  1413 ;;		_util_getTemperature
  1414 ;;		_util_waits_delay_hours
  1415 ;;		_util_waits_delay_mins
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text1
  1422  0036F4                     __ptext1:
  1423                           	opt stack 0
  1424  0036F4                     _main_loop:
  1425                           	opt stack 23
  1426  0036F4                     
  1427                           ;easat2_main_mcu.c: 41: init_watchdogs_initialize();
  1428  0036F4  EC9B  F01E         	call	_init_watchdogs_initialize	;wreg free
  1429                           
  1430                           ;easat2_main_mcu.c: 46: battery_voltage = util_getBatteryVoltage();
  1431  0036F8  EC62  F019         	call	_util_getBatteryVoltage	;wreg free
  1432  0036FC  C083  F0DD         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1433  003700  C084  F0DE         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1434  003704  C085  F0DF         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1435                           
  1436                           ;easat2_main_mcu.c: 49: solar_current = util_getSolarCurrent();
  1437  003708  EC34  F018         	call	_util_getSolarCurrent	;wreg free
  1438  00370C  C099  F0D9         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1439  003710  C09A  F0DA         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1440                           
  1441                           ;easat2_main_mcu.c: 52: battery_current = util_getBatteryCurrent();
  1442  003714  EC99  F018         	call	_util_getBatteryCurrent	;wreg free
  1443  003718  C099  F0DB         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1444  00371C  C09A  F0DC         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1445                           
  1446                           ;easat2_main_mcu.c: 55: temperature = util_getTemperature();
  1447  003720  EC24  F006         	call	_util_getTemperature	;wreg free
  1448  003724  C099  F0D6         	movff	?_util_getTemperature,main_loop@temperature
  1449  003728  C09A  F0D7         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1450  00372C  C09B  F0D8         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1451                           
  1452                           ;easat2_main_mcu.c: 59: if (battery_voltage >= 0) {
  1453  003730  0100               	movlb	0	; () banked
  1454  003732  BFDF               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1455  003734  D017               	goto	l6006
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;easat2_main_mcu.c: 60: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1459  003736  C0DD  F0CC         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1460  00373A  C0DE  F0CD         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1461  00373E  C0DF  F0CE         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1462  003742  C0D9  F0CF         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1463  003746  C0DA  F0D0         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1464  00374A  C0DB  F0D1         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1465  00374E  C0DC  F0D2         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1466  003752  C0D6  F0D3         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1467  003756  C0D7  F0D4         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1468  00375A  C0D8  F0D5         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1469  00375E  EC25  F017         	call	_util_beacon_transmission	;wreg free
  1470                           
  1471                           ;easat2_main_mcu.c: 61: } else {
  1472  003762  D007               	goto	l77
  1473  003764                     l6006:
  1474                           
  1475                           ;easat2_main_mcu.c: 63: util_waits_delay_hours(2);
  1476  003764  0E00               	movlw	0
  1477  003766  0100               	movlb	0	; () banked
  1478  003768  6F72               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1479  00376A  0E02               	movlw	2
  1480  00376C  6F71               	movwf	util_waits_delay_hours@hours& (0+255),b
  1481  00376E  EC58  F01D         	call	_util_waits_delay_hours	;wreg free
  1482  003772                     l77:
  1483                           
  1484                           ;easat2_main_mcu.c: 64: }
  1485                           ;easat2_main_mcu.c: 67: util_waits_delay_mins(3);
  1486  003772  0E00               	movlw	0
  1487  003774  0100               	movlb	0	; () banked
  1488  003776  6F6D               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1489  003778  0E03               	movlw	3
  1490  00377A  6F6C               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1491  00377C  EC79  F01D         	call	_util_waits_delay_mins	;wreg free
  1492                           
  1493                           ;easat2_main_mcu.c: 70: } while (1);
  1494  003780  D7B9               	goto	l5998
  1495  003782                     __end_of_main_loop:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec1	equ	0xFE5
  1504                           fsr1h	equ	0xFE2
  1505                           fsr1l	equ	0xFE1
  1506                           
  1507 ;; *************** function _util_waits_delay_hours *****************
  1508 ;; Defined at:
  1509 ;;		line 17 in file "easat2_util_waits.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  hours           2   17[BANK0 ] int 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  i               2   20[BANK0 ] int 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         0       2       0       0       0       0       0
  1524 ;;      Locals:         0       2       0       0       0       0       0
  1525 ;;      Temps:          0       1       0       0       0       0       0
  1526 ;;      Totals:         0       5       0       0       0       0       0
  1527 ;;Total ram usage:        5 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    5
  1530 ;; This function calls:
  1531 ;;		_util_waits_delay_mins
  1532 ;; This function is called by:
  1533 ;;		_main_loop
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text2
  1538  003AB0                     __ptext2:
  1539                           	opt stack 0
  1540  003AB0                     _util_waits_delay_hours:
  1541                           	opt stack 24
  1542                           
  1543                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1544                           
  1545                           ;incstack = 0
  1546  003AB0  0E00               	movlw	0
  1547  003AB2  0100               	movlb	0	; () banked
  1548  003AB4  6F75               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1549  003AB6  0E00               	movlw	0
  1550  003AB8  6F74               	movwf	util_waits_delay_hours@i& (0+255),b
  1551  003ABA  D00A               	goto	l5986
  1552  003ABC                     l5982:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1556  003ABC  0E00               	movlw	0
  1557  003ABE  0100               	movlb	0	; () banked
  1558  003AC0  6F6D               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1559  003AC2  0E3C               	movlw	60
  1560  003AC4  6F6C               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1561  003AC6  EC79  F01D         	call	_util_waits_delay_mins	;wreg free
  1562  003ACA  0100               	movlb	0	; () banked
  1563  003ACC  4B74               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1564  003ACE  2B75               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1565  003AD0                     l5986:
  1566                           
  1567                           ; BSR set to: 0
  1568  003AD0  0100               	movlb	0	; () banked
  1569  003AD2  5171               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1570  003AD4  0100               	movlb	0	; () banked
  1571  003AD6  5D74               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1572  003AD8  0100               	movlb	0	; () banked
  1573  003ADA  5175               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1574  003ADC  0A80               	xorlw	128
  1575  003ADE  0100               	movlb	0	; () banked
  1576  003AE0  6F73               	movwf	??_util_waits_delay_hours& (0+255),b
  1577  003AE2  0100               	movlb	0	; () banked
  1578  003AE4  5172               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1579  003AE6  0A80               	xorlw	128
  1580  003AE8  0100               	movlb	0	; () banked
  1581  003AEA  5973               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1582  003AEC  B0D8               	btfsc	status,0,c
  1583  003AEE  0012               	return	
  1584  003AF0  D7E5               	goto	l5982
  1585  003AF2                     __end_of_util_waits_delay_hours:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _util_waits_delay_mins *****************
  1599 ;; Defined at:
  1600 ;;		line 24 in file "easat2_util_waits.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  minutes         2   12[BANK0 ] int 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  i               2   15[BANK0 ] int 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1614 ;;      Params:         0       2       0       0       0       0       0
  1615 ;;      Locals:         0       2       0       0       0       0       0
  1616 ;;      Temps:          0       1       0       0       0       0       0
  1617 ;;      Totals:         0       5       0       0       0       0       0
  1618 ;;Total ram usage:        5 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    4
  1621 ;; This function calls:
  1622 ;;		_util_waits_delay_secs
  1623 ;; This function is called by:
  1624 ;;		_main_loop
  1625 ;;		_util_waits_delay_hours
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text3
  1630  003AF2                     __ptext3:
  1631                           	opt stack 0
  1632  003AF2                     _util_waits_delay_mins:
  1633                           	opt stack 25
  1634                           
  1635                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;incstack = 0
  1639  003AF2  0E00               	movlw	0
  1640  003AF4  0100               	movlb	0	; () banked
  1641  003AF6  6F70               	movwf	(util_waits_delay_mins@i+1)& (0+255),b
  1642  003AF8  0E00               	movlw	0
  1643  003AFA  6F6F               	movwf	util_waits_delay_mins@i& (0+255),b
  1644  003AFC  D00A               	goto	l5204
  1645  003AFE                     l5200:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1649  003AFE  0E00               	movlw	0
  1650  003B00  0100               	movlb	0	; () banked
  1651  003B02  6F66               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1652  003B04  0E3C               	movlw	60
  1653  003B06  6F65               	movwf	util_waits_delay_secs@secs& (0+255),b
  1654  003B08  EC39  F01C         	call	_util_waits_delay_secs	;wreg free
  1655  003B0C  0100               	movlb	0	; () banked
  1656  003B0E  4B6F               	infsnz	util_waits_delay_mins@i& (0+255),f,b
  1657  003B10  2B70               	incf	(util_waits_delay_mins@i+1)& (0+255),f,b
  1658  003B12                     l5204:
  1659                           
  1660                           ; BSR set to: 0
  1661  003B12  0100               	movlb	0	; () banked
  1662  003B14  516C               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1663  003B16  0100               	movlb	0	; () banked
  1664  003B18  5D6F               	subwf	util_waits_delay_mins@i& (0+255),w,b
  1665  003B1A  0100               	movlb	0	; () banked
  1666  003B1C  5170               	movf	(util_waits_delay_mins@i+1)& (0+255),w,b
  1667  003B1E  0A80               	xorlw	128
  1668  003B20  0100               	movlb	0	; () banked
  1669  003B22  6F6E               	movwf	??_util_waits_delay_mins& (0+255),b
  1670  003B24  0100               	movlb	0	; () banked
  1671  003B26  516D               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1672  003B28  0A80               	xorlw	128
  1673  003B2A  0100               	movlb	0	; () banked
  1674  003B2C  596E               	subwfb	??_util_waits_delay_mins& (0+255),w,b
  1675  003B2E  B0D8               	btfsc	status,0,c
  1676  003B30  0012               	return	
  1677  003B32  D7E5               	goto	l5200
  1678  003B34                     __end_of_util_waits_delay_mins:
  1679                           	opt stack 0
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _util_getTemperature *****************
  1692 ;; Defined at:
  1693 ;;		line 118 in file "easat2_util_inputs.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  bit_mem       144    0[BANK1 ] int [72]
  1698 ;;  byte_mem       18  144[BANK1 ] int [9]
  1699 ;;  temperature     3  201[BANK1 ] float 
  1700 ;;  sign            3  164[BANK1 ] float 
  1701 ;;  i               2  204[BANK1 ] int 
  1702 ;;  bit_in_byte     2  199[BANK1 ] int 
  1703 ;;  num_byte        2  197[BANK1 ] int 
  1704 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1705 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1706 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1707 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1708 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1709 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1710 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1711 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1712 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1713 ;;  num_bit         2  162[BANK1 ] int 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  3   57[BANK0 ] float 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         0       3       0       0       0       0       0
  1724 ;;      Locals:         0       0     206       0       0       0       0
  1725 ;;      Temps:          0       3       0       0       0       0       0
  1726 ;;      Totals:         0       6     206       0       0       0       0
  1727 ;;Total ram usage:      212 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    4
  1730 ;; This function calls:
  1731 ;;		___awtoft
  1732 ;;		___ftadd
  1733 ;;		___ftdiv
  1734 ;;		___ftmul
  1735 ;;		_util_onewire_read_byte
  1736 ;;		_util_onewire_reset
  1737 ;;		_util_onewire_write_byte
  1738 ;;		_util_waits_delay_secs
  1739 ;; This function is called by:
  1740 ;;		_main_loop
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text4
  1745  000C48                     __ptext4:
  1746                           	opt stack 0
  1747  000C48                     _util_getTemperature:
  1748                           	opt stack 25
  1749                           
  1750                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1751                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1752                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;incstack = 0
  1756  000C48  0E00               	movlw	0
  1757  000C4A  0101               	movlb	1	; () banked
  1758  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1759  000C4E  0E00               	movlw	0
  1760  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1761                           
  1762                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1763  000C52  0E00               	movlw	0
  1764  000C54  0101               	movlb	1	; () banked
  1765  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1766  000C58  0E00               	movlw	0
  1767  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1768                           
  1769                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1770  000C5C  0E00               	movlw	0
  1771  000C5E  0101               	movlb	1	; () banked
  1772  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1773  000C62  0E00               	movlw	0
  1774  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1775                           
  1776                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1777  000C66  0E00               	movlw	0
  1778  000C68  0101               	movlb	1	; () banked
  1779  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1780  000C6C  0E00               	movlw	0
  1781  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1782                           
  1783                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1784  000C70  0E00               	movlw	0
  1785  000C72  0101               	movlb	1	; () banked
  1786  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1787  000C76  0E00               	movlw	0
  1788  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1789                           
  1790                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1791  000C7A  0E00               	movlw	0
  1792  000C7C  0101               	movlb	1	; () banked
  1793  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1794  000C80  0E00               	movlw	0
  1795  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1796                           
  1797                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1798  000C84  0E00               	movlw	0
  1799  000C86  0101               	movlb	1	; () banked
  1800  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1801  000C8A  0E00               	movlw	0
  1802  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1803                           
  1804                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1805  000C8E  0E00               	movlw	0
  1806  000C90  0101               	movlb	1	; () banked
  1807  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1808  000C94  0E00               	movlw	0
  1809  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1810                           
  1811                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1812  000C98  0E00               	movlw	0
  1813  000C9A  0101               	movlb	1	; () banked
  1814  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1815  000C9E  0E00               	movlw	0
  1816  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1817                           
  1818                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1819  000CA2  0E00               	movlw	0
  1820  000CA4  0101               	movlb	1	; () banked
  1821  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1822  000CA8  0E00               	movlw	0
  1823  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1824  000CAC  0E00               	movlw	0
  1825  000CAE  0101               	movlb	1	; () banked
  1826  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1827  000CB2  0E00               	movlw	0
  1828  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1829  000CB6  0E00               	movlw	0
  1830  000CB8  0101               	movlb	1	; () banked
  1831  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1832  000CBC  0E00               	movlw	0
  1833  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1834                           
  1835                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1836  000CC0  0E00               	movlw	0
  1837  000CC2  0101               	movlb	1	; () banked
  1838  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1839  000CC6  0E00               	movlw	0
  1840  000CC8  0101               	movlb	1	; () banked
  1841  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1842  000CCC  0E00               	movlw	0
  1843  000CCE  0101               	movlb	1	; () banked
  1844  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1845                           
  1846                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1847  000CD2  0E00               	movlw	0
  1848  000CD4  0101               	movlb	1	; () banked
  1849  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1850  000CD8  0E80               	movlw	128
  1851  000CDA  0101               	movlb	1	; () banked
  1852  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1853  000CDE  0E3F               	movlw	63
  1854  000CE0  0101               	movlb	1	; () banked
  1855  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1856                           
  1857                           ;easat2_util_inputs.c: 137: int i = 0;
  1858  000CE4  0E00               	movlw	0
  1859  000CE6  0101               	movlb	1	; () banked
  1860  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1861  000CEA  0E00               	movlw	0
  1862  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1863                           
  1864                           ; BSR set to: 1
  1865                           ;easat2_util_inputs.c: 143: INTCONbits.GIE = 0;
  1866  000CEE  9EF2               	bcf	intcon,7,c	;volatile
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;easat2_util_inputs.c: 151: if (util_onewire_reset()) return -99.1;
  1870  000CF0  ECC6  F01C         	call	_util_onewire_reset	;wreg free
  1871  000CF4  0100               	movlb	0	; () banked
  1872  000CF6  5160               	movf	?_util_onewire_reset& (0+255),w,b
  1873  000CF8  0100               	movlb	0	; () banked
  1874  000CFA  1161               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1875  000CFC  B4D8               	btfsc	status,2,c
  1876  000CFE  D00A               	goto	l5826
  1877                           
  1878                           ; BSR set to: 0
  1879  000D00  0E33               	movlw	51
  1880  000D02  0100               	movlb	0	; () banked
  1881  000D04  6F99               	movwf	?_util_getTemperature& (0+255),b
  1882  000D06  0EC6               	movlw	198
  1883  000D08  0100               	movlb	0	; () banked
  1884  000D0A  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  1885  000D0C  0EC2               	movlw	194
  1886  000D0E  0100               	movlb	0	; () banked
  1887  000D10  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  1888                           
  1889                           ; BSR set to: 0
  1890  000D12  0012               	return	
  1891  000D14                     l5826:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;easat2_util_inputs.c: 154: util_onewire_write_byte(0xCC);
  1895  000D14  0E00               	movlw	0
  1896  000D16  0100               	movlb	0	; () banked
  1897  000D18  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1898  000D1A  0ECC               	movlw	204
  1899  000D1C  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  1900  000D1E  ECF3  F011         	call	_util_onewire_write_byte	;wreg free
  1901                           
  1902                           ;easat2_util_inputs.c: 157: util_onewire_write_byte(0x44);
  1903  000D22  0E00               	movlw	0
  1904  000D24  0100               	movlb	0	; () banked
  1905  000D26  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1906  000D28  0E44               	movlw	68
  1907  000D2A  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  1908  000D2C  ECF3  F011         	call	_util_onewire_write_byte	;wreg free
  1909                           
  1910                           ;easat2_util_inputs.c: 162: TRISAbits.TRISA3 = 1;
  1911  000D30  8692               	bsf	3986,3,c	;volatile
  1912                           
  1913                           ;easat2_util_inputs.c: 164: INTCONbits.GIE = 1;
  1914  000D32  8EF2               	bsf	intcon,7,c	;volatile
  1915                           
  1916                           ;easat2_util_inputs.c: 168: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1917  000D34  0E00               	movlw	0
  1918  000D36  0101               	movlb	1	; () banked
  1919  000D38  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1920  000D3A  0E00               	movlw	0
  1921  000D3C  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1922  000D3E  D00A               	goto	l5838
  1923  000D40                     l5834:
  1924                           
  1925                           ; BSR set to: 1
  1926                           ;easat2_util_inputs.c: 169: util_waits_delay_secs(1);
  1927  000D40  0E00               	movlw	0
  1928  000D42  0100               	movlb	0	; () banked
  1929  000D44  6F66               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1930  000D46  0E01               	movlw	1
  1931  000D48  6F65               	movwf	util_waits_delay_secs@secs& (0+255),b
  1932  000D4A  EC39  F01C         	call	_util_waits_delay_secs	;wreg free
  1933  000D4E  0101               	movlb	1	; () banked
  1934  000D50  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1935  000D52  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1936  000D54                     l5838:
  1937                           
  1938                           ; BSR set to: 1
  1939  000D54  0101               	movlb	1	; () banked
  1940  000D56  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1941  000D58  D008               	goto	l5840
  1942  000D5A  0101               	movlb	1	; () banked
  1943  000D5C  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1944  000D5E  E107               	bnz	l5842
  1945  000D60  0E05               	movlw	5
  1946  000D62  0101               	movlb	1	; () banked
  1947  000D64  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1948  000D66  B0D8               	btfsc	status,0,c
  1949  000D68  D002               	goto	l5842
  1950  000D6A                     l5840:
  1951                           
  1952                           ; BSR set to: 1
  1953  000D6A  A680               	btfss	3968,3,c	;volatile
  1954  000D6C  D7E9               	goto	l5834
  1955  000D6E                     l5842:
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;easat2_util_inputs.c: 171: if (i == 5) return -99.2;
  1959  000D6E  0E05               	movlw	5
  1960  000D70  0101               	movlb	1	; () banked
  1961  000D72  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1962  000D74  0101               	movlb	1	; () banked
  1963  000D76  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1964  000D78  A4D8               	btfss	status,2,c
  1965  000D7A  D00A               	goto	l148
  1966                           
  1967                           ; BSR set to: 1
  1968  000D7C  0E66               	movlw	102
  1969  000D7E  0100               	movlb	0	; () banked
  1970  000D80  6F99               	movwf	?_util_getTemperature& (0+255),b
  1971  000D82  0EC6               	movlw	198
  1972  000D84  0100               	movlb	0	; () banked
  1973  000D86  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  1974  000D88  0EC2               	movlw	194
  1975  000D8A  0100               	movlb	0	; () banked
  1976  000D8C  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979  000D8E  0012               	return	
  1980  000D90                     l148:
  1981                           
  1982                           ; BSR set to: 1
  1983                           ;easat2_util_inputs.c: 175: INTCONbits.GIE = 0;
  1984  000D90  9EF2               	bcf	intcon,7,c	;volatile
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;easat2_util_inputs.c: 181: if (util_onewire_reset()) return -99.3;
  1988  000D92  ECC6  F01C         	call	_util_onewire_reset	;wreg free
  1989  000D96  0100               	movlb	0	; () banked
  1990  000D98  5160               	movf	?_util_onewire_reset& (0+255),w,b
  1991  000D9A  0100               	movlb	0	; () banked
  1992  000D9C  1161               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1993  000D9E  B4D8               	btfsc	status,2,c
  1994  000DA0  D00A               	goto	l5854
  1995                           
  1996                           ; BSR set to: 0
  1997  000DA2  0E9A               	movlw	154
  1998  000DA4  0100               	movlb	0	; () banked
  1999  000DA6  6F99               	movwf	?_util_getTemperature& (0+255),b
  2000  000DA8  0EC6               	movlw	198
  2001  000DAA  0100               	movlb	0	; () banked
  2002  000DAC  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  2003  000DAE  0EC2               	movlw	194
  2004  000DB0  0100               	movlb	0	; () banked
  2005  000DB2  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  2006                           
  2007                           ; BSR set to: 0
  2008  000DB4  0012               	return	
  2009  000DB6                     l5854:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;easat2_util_inputs.c: 184: util_onewire_write_byte(0xCC);
  2013  000DB6  0E00               	movlw	0
  2014  000DB8  0100               	movlb	0	; () banked
  2015  000DBA  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2016  000DBC  0ECC               	movlw	204
  2017  000DBE  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  2018  000DC0  ECF3  F011         	call	_util_onewire_write_byte	;wreg free
  2019                           
  2020                           ;easat2_util_inputs.c: 187: util_onewire_write_byte(0xBE);
  2021  000DC4  0E00               	movlw	0
  2022  000DC6  0100               	movlb	0	; () banked
  2023  000DC8  6F63               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2024  000DCA  0EBE               	movlw	190
  2025  000DCC  6F62               	movwf	util_onewire_write_byte@value& (0+255),b
  2026  000DCE  ECF3  F011         	call	_util_onewire_write_byte	;wreg free
  2027                           
  2028                           ;easat2_util_inputs.c: 198: byte_mem[0] = util_onewire_read_byte();
  2029  000DD2  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2030  000DD6  C065  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2031  000DDA  C066  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2032                           
  2033                           ;easat2_util_inputs.c: 200: byte_mem[1] = util_onewire_read_byte();
  2034  000DDE  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2035  000DE2  C065  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2036  000DE6  C066  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2037                           
  2038                           ;easat2_util_inputs.c: 202: byte_mem[2] = util_onewire_read_byte();
  2039  000DEA  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2040  000DEE  C065  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2041  000DF2  C066  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2042                           
  2043                           ;easat2_util_inputs.c: 204: byte_mem[3] = util_onewire_read_byte();
  2044  000DF6  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2045  000DFA  C065  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2046  000DFE  C066  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2047                           
  2048                           ;easat2_util_inputs.c: 206: byte_mem[4] = util_onewire_read_byte();
  2049  000E02  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2050  000E06  C065  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2051  000E0A  C066  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2052                           
  2053                           ;easat2_util_inputs.c: 208: byte_mem[5] = util_onewire_read_byte();
  2054  000E0E  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2055  000E12  C065  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2056  000E16  C066  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2057                           
  2058                           ;easat2_util_inputs.c: 210: byte_mem[6] = util_onewire_read_byte();
  2059  000E1A  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2060  000E1E  C065  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2061  000E22  C066  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2062                           
  2063                           ;easat2_util_inputs.c: 212: byte_mem[7] = util_onewire_read_byte();
  2064  000E26  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2065  000E2A  C065  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2066  000E2E  C066  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2067                           
  2068                           ;easat2_util_inputs.c: 214: byte_mem[8] = util_onewire_read_byte();
  2069  000E32  ECA0  F013         	call	_util_onewire_read_byte	;wreg free
  2070  000E36  C065  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2071  000E3A  C066  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2072                           
  2073                           ;easat2_util_inputs.c: 218: INTCONbits.GIE = 1;
  2074  000E3E  8EF2               	bsf	intcon,7,c	;volatile
  2075                           
  2076                           ;easat2_util_inputs.c: 224: for (num_byte = 0; num_byte < 9; num_byte++) {
  2077  000E40  0E00               	movlw	0
  2078  000E42  0101               	movlb	1	; () banked
  2079  000E44  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2080  000E46  0E00               	movlw	0
  2081  000E48  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2082  000E4A                     l5860:
  2083                           
  2084                           ; BSR set to: 1
  2085  000E4A  0101               	movlb	1	; () banked
  2086  000E4C  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2087  000E4E  D008               	goto	l5864
  2088  000E50  0101               	movlb	1	; () banked
  2089  000E52  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2090  000E54  E14F               	bnz	l5882
  2091  000E56  0E09               	movlw	9
  2092  000E58  0101               	movlb	1	; () banked
  2093  000E5A  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2094  000E5C  B0D8               	btfsc	status,0,c
  2095  000E5E  D04A               	goto	l5882
  2096  000E60                     l5864:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;easat2_util_inputs.c: 225: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2100  000E60  0E00               	movlw	0
  2101  000E62  0101               	movlb	1	; () banked
  2102  000E64  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2103  000E66  0E00               	movlw	0
  2104  000E68  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2105  000E6A                     l5866:
  2106                           
  2107                           ; BSR set to: 1
  2108  000E6A  0101               	movlb	1	; () banked
  2109  000E6C  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2110  000E6E  D008               	goto	l5870
  2111  000E70  0101               	movlb	1	; () banked
  2112  000E72  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2113  000E74  E13B               	bnz	l5878
  2114  000E76  0E08               	movlw	8
  2115  000E78  0101               	movlb	1	; () banked
  2116  000E7A  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2117  000E7C  B0D8               	btfsc	status,0,c
  2118  000E7E  D036               	goto	l5878
  2119  000E80                     l5870:
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;easat2_util_inputs.c: 226: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2123  000E80  C1C7  F09C         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2124  000E84  90D8               	bcf	status,0,c
  2125  000E86  0101               	movlb	1	; () banked
  2126  000E88  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2127  000E8A  6ED9               	movwf	fsr2l,c
  2128  000E8C  0101               	movlb	1	; () banked
  2129  000E8E  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2130  000E90  6EDA               	movwf	fsr2h,c
  2131  000E92  0E90               	movlw	low util_getTemperature@byte_mem
  2132  000E94  26D9               	addwf	fsr2l,f,c
  2133  000E96  0E01               	movlw	high util_getTemperature@byte_mem
  2134  000E98  22DA               	addwfc	fsr2h,f,c
  2135  000E9A  CFDE F09D          	movff	postinc2,??_util_getTemperature+1
  2136  000E9E  CFDD F09E          	movff	postdec2,??_util_getTemperature+2
  2137  000EA2  0100               	movlb	0	; () banked
  2138  000EA4  2B9C               	incf	??_util_getTemperature& (0+255),f,b
  2139  000EA6  D004               	goto	u6144
  2140  000EA8                     u6145:
  2141  000EA8  0100               	movlb	0	; () banked
  2142  000EAA  359E               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2143  000EAC  339E               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2144  000EAE  339D               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2145  000EB0                     u6144:
  2146  000EB0  0100               	movlb	0	; () banked
  2147  000EB2  2F9C               	decfsz	??_util_getTemperature& (0+255),f,b
  2148  000EB4  D7F9               	goto	u6145
  2149  000EB6  0E01               	movlw	1
  2150  000EB8  0100               	movlb	0	; () banked
  2151  000EBA  179D               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2152  000EBC  0E00               	movlw	0
  2153  000EBE  179E               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2154  000EC0  90D8               	bcf	status,0,c
  2155  000EC2  0101               	movlb	1	; () banked
  2156  000EC4  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2157  000EC6  6ED9               	movwf	fsr2l,c
  2158  000EC8  0101               	movlb	1	; () banked
  2159  000ECA  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2160  000ECC  6EDA               	movwf	fsr2h,c
  2161  000ECE  0E00               	movlw	low util_getTemperature@bit_mem
  2162  000ED0  26D9               	addwf	fsr2l,f,c
  2163  000ED2  0E01               	movlw	high util_getTemperature@bit_mem
  2164  000ED4  22DA               	addwfc	fsr2h,f,c
  2165  000ED6  C09D  FFDE         	movff	??_util_getTemperature+1,postinc2
  2166  000EDA  C09E  FFDD         	movff	??_util_getTemperature+2,postdec2
  2167                           
  2168                           ; BSR set to: 1
  2169  000EDE  0101               	movlb	1	; () banked
  2170  000EE0  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2171  000EE2  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2172                           
  2173                           ; BSR set to: 1
  2174  000EE4  0101               	movlb	1	; () banked
  2175  000EE6  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2176  000EE8  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2177  000EEA  D7BF               	goto	l5866
  2178  000EEC                     l5878:
  2179                           
  2180                           ; BSR set to: 1
  2181  000EEC  0101               	movlb	1	; () banked
  2182  000EEE  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2183  000EF0  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2184  000EF2  D7AB               	goto	l5860
  2185  000EF4                     l5882:
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;easat2_util_inputs.c: 227: }
  2189                           ;easat2_util_inputs.c: 231: for (i = 0; i < (9*8); i++) {
  2190  000EF4  0E00               	movlw	0
  2191  000EF6  0101               	movlb	1	; () banked
  2192  000EF8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2193  000EFA  0E00               	movlw	0
  2194  000EFC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2195  000EFE                     l5884:
  2196                           
  2197                           ; BSR set to: 1
  2198  000EFE  0101               	movlb	1	; () banked
  2199  000F00  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2200  000F02  D008               	goto	l5888
  2201  000F04  0101               	movlb	1	; () banked
  2202  000F06  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2203  000F08  E154               	bnz	l5910
  2204  000F0A  0E48               	movlw	72
  2205  000F0C  0101               	movlb	1	; () banked
  2206  000F0E  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2207  000F10  B0D8               	btfsc	status,0,c
  2208  000F12  D04F               	goto	l5910
  2209  000F14                     l5888:
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;easat2_util_inputs.c: 236: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2213  000F14  90D8               	bcf	status,0,c
  2214  000F16  0101               	movlb	1	; () banked
  2215  000F18  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2216  000F1A  6ED9               	movwf	fsr2l,c
  2217  000F1C  0101               	movlb	1	; () banked
  2218  000F1E  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2219  000F20  6EDA               	movwf	fsr2h,c
  2220  000F22  0E00               	movlw	low util_getTemperature@bit_mem
  2221  000F24  26D9               	addwf	fsr2l,f,c
  2222  000F26  0E01               	movlw	high util_getTemperature@bit_mem
  2223  000F28  22DA               	addwfc	fsr2h,f,c
  2224  000F2A  CFDE F09C          	movff	postinc2,??_util_getTemperature
  2225  000F2E  CFDD F09D          	movff	postdec2,??_util_getTemperature+1
  2226  000F32  0101               	movlb	1	; () banked
  2227  000F34  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2228  000F36  0100               	movlb	0	; () banked
  2229  000F38  199C               	xorwf	??_util_getTemperature& (0+255),w,b
  2230  000F3A  0101               	movlb	1	; () banked
  2231  000F3C  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2232  000F3E  0101               	movlb	1	; () banked
  2233  000F40  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2234  000F42  0100               	movlb	0	; () banked
  2235  000F44  199D               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2236  000F46  0101               	movlb	1	; () banked
  2237  000F48  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;easat2_util_inputs.c: 238: shift_reg_bit0 = shift_reg_bit1;
  2241  000F4A  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2242  000F4E  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;easat2_util_inputs.c: 239: shift_reg_bit1 = shift_reg_bit2;
  2246  000F52  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2247  000F56  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2248                           
  2249                           ; BSR set to: 1
  2250                           ;easat2_util_inputs.c: 240: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2251  000F5A  0101               	movlb	1	; () banked
  2252  000F5C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2253  000F5E  0101               	movlb	1	; () banked
  2254  000F60  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2255  000F62  0101               	movlb	1	; () banked
  2256  000F64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2257  000F66  0101               	movlb	1	; () banked
  2258  000F68  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2259  000F6A  0101               	movlb	1	; () banked
  2260  000F6C  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2261  000F6E  0101               	movlb	1	; () banked
  2262  000F70  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;easat2_util_inputs.c: 241: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2266  000F72  0101               	movlb	1	; () banked
  2267  000F74  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2268  000F76  0101               	movlb	1	; () banked
  2269  000F78  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2270  000F7A  0101               	movlb	1	; () banked
  2271  000F7C  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2272  000F7E  0101               	movlb	1	; () banked
  2273  000F80  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2274  000F82  0101               	movlb	1	; () banked
  2275  000F84  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2276  000F86  0101               	movlb	1	; () banked
  2277  000F88  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;easat2_util_inputs.c: 242: shift_reg_bit4 = shift_reg_bit5;
  2281  000F8A  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2282  000F8E  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;easat2_util_inputs.c: 243: shift_reg_bit5 = shift_reg_bit6;
  2286  000F92  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2287  000F96  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2288                           
  2289                           ; BSR set to: 1
  2290                           ;easat2_util_inputs.c: 244: shift_reg_bit6 = shift_reg_bit7;
  2291  000F9A  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2292  000F9E  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;easat2_util_inputs.c: 245: shift_reg_bit7 = shift_reg_bit_temp;
  2296  000FA2  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2297  000FA6  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2298                           
  2299                           ; BSR set to: 1
  2300  000FAA  0101               	movlb	1	; () banked
  2301  000FAC  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2302  000FAE  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2303  000FB0  D7A6               	goto	l5884
  2304  000FB2                     l5910:
  2305                           
  2306                           ; BSR set to: 1
  2307                           ;easat2_util_inputs.c: 247: }
  2308                           ;easat2_util_inputs.c: 251: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2309                           ;easat2_util_inputs.c: 252: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2310                           ;easat2_util_inputs.c: 253: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2311  000FB2  0101               	movlb	1	; () banked
  2312  000FB4  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2313  000FB6  0101               	movlb	1	; () banked
  2314  000FB8  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2315  000FBA  A4D8               	btfss	status,2,c
  2316  000FBC  D02A               	goto	l5926
  2317                           
  2318                           ; BSR set to: 1
  2319  000FBE  0101               	movlb	1	; () banked
  2320  000FC0  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2321  000FC2  0101               	movlb	1	; () banked
  2322  000FC4  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2323  000FC6  A4D8               	btfss	status,2,c
  2324  000FC8  D024               	goto	l5926
  2325                           
  2326                           ; BSR set to: 1
  2327  000FCA  0101               	movlb	1	; () banked
  2328  000FCC  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2329  000FCE  0101               	movlb	1	; () banked
  2330  000FD0  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2331  000FD2  B4D8               	btfsc	status,2,c
  2332  000FD4  D006               	goto	l5918
  2333                           
  2334                           ; BSR set to: 1
  2335  000FD6  0101               	movlb	1	; () banked
  2336  000FD8  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2337  000FDA  0101               	movlb	1	; () banked
  2338  000FDC  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2339  000FDE  A4D8               	btfss	status,2,c
  2340  000FE0  D018               	goto	l5926
  2341  000FE2                     l5918:
  2342                           
  2343                           ; BSR set to: 1
  2344  000FE2  0101               	movlb	1	; () banked
  2345  000FE4  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2346  000FE6  0101               	movlb	1	; () banked
  2347  000FE8  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2348  000FEA  A4D8               	btfss	status,2,c
  2349  000FEC  D012               	goto	l5926
  2350                           
  2351                           ; BSR set to: 1
  2352  000FEE  0101               	movlb	1	; () banked
  2353  000FF0  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2354  000FF2  0101               	movlb	1	; () banked
  2355  000FF4  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2356  000FF6  B4D8               	btfsc	status,2,c
  2357  000FF8  D006               	goto	l5924
  2358                           
  2359                           ; BSR set to: 1
  2360  000FFA  0101               	movlb	1	; () banked
  2361  000FFC  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2362  000FFE  0101               	movlb	1	; () banked
  2363  001000  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2364  001002  A4D8               	btfss	status,2,c
  2365  001004  D006               	goto	l5926
  2366  001006                     l5924:
  2367                           
  2368                           ; BSR set to: 1
  2369  001006  0101               	movlb	1	; () banked
  2370  001008  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2371  00100A  0101               	movlb	1	; () banked
  2372  00100C  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2373  00100E  B4D8               	btfsc	status,2,c
  2374  001010  D00A               	goto	l5930
  2375  001012                     l5926:
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;easat2_util_inputs.c: 254: return -99.7;
  2379  001012  0E66               	movlw	102
  2380  001014  0100               	movlb	0	; () banked
  2381  001016  6F99               	movwf	?_util_getTemperature& (0+255),b
  2382  001018  0EC7               	movlw	199
  2383  00101A  0100               	movlb	0	; () banked
  2384  00101C  6F9A               	movwf	(?_util_getTemperature+1)& (0+255),b
  2385  00101E  0EC2               	movlw	194
  2386  001020  0100               	movlb	0	; () banked
  2387  001022  6F9B               	movwf	(?_util_getTemperature+2)& (0+255),b
  2388                           
  2389                           ; BSR set to: 0
  2390  001024  0012               	return	
  2391  001026                     l5930:
  2392                           
  2393                           ;easat2_util_inputs.c: 258: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2394  001026  0101               	movlb	1	; () banked
  2395  001028  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2396  00102A  0101               	movlb	1	; () banked
  2397  00102C  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2398  00102E  A4D8               	btfss	status,2,c
  2399  001030  D008               	goto	l5934
  2400                           
  2401                           ; BSR set to: 1
  2402  001032  0E00               	movlw	0
  2403  001034  0101               	movlb	1	; () banked
  2404  001036  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2405  001038  0E80               	movlw	128
  2406  00103A  0101               	movlb	1	; () banked
  2407  00103C  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2408  00103E  0E3F               	movlw	63
  2409  001040  D007               	goto	L1
  2410  001042                     l5934:
  2411                           
  2412                           ; BSR set to: 1
  2413  001042  0E00               	movlw	0
  2414  001044  0101               	movlb	1	; () banked
  2415  001046  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2416  001048  0E80               	movlw	128
  2417  00104A  0101               	movlb	1	; () banked
  2418  00104C  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2419  00104E  0EBF               	movlw	191
  2420  001050                     L1:
  2421  001050  0101               	movlb	1	; () banked
  2422  001052  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2423                           
  2424                           ; BSR set to: 1
  2425                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2426                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2427                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2428                           
  2429                           ; BSR set to: 1
  2430  001054  0E00               	movlw	0
  2431  001056  0100               	movlb	0	; () banked
  2432  001058  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2433  00105A  0E00               	movlw	0
  2434  00105C  0100               	movlb	0	; () banked
  2435  00105E  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2436  001060  0E41               	movlw	65
  2437  001062  0100               	movlb	0	; () banked
  2438  001064  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2439  001066  C102  F068         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2440  00106A  C103  F069         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2441  00106E  EC36  F01D         	call	___awtoft	;wreg free
  2442  001072  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2443  001076  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2444  00107A  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2445  00107E  ECDD  F015         	call	___ftdiv	;wreg free
  2446  001082  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2447  001086  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2448  00108A  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2449  00108E  0E00               	movlw	0
  2450  001090  0100               	movlb	0	; () banked
  2451  001092  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2452  001094  0E80               	movlw	128
  2453  001096  0100               	movlb	0	; () banked
  2454  001098  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2455  00109A  0E41               	movlw	65
  2456  00109C  0100               	movlb	0	; () banked
  2457  00109E  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2458  0010A0  C100  F068         	movff	util_getTemperature@bit_mem,___awtoft@c
  2459  0010A4  C101  F069         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2460  0010A8  EC36  F01D         	call	___awtoft	;wreg free
  2461  0010AC  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2462  0010B0  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2463  0010B4  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2464  0010B8  ECDD  F015         	call	___ftdiv	;wreg free
  2465  0010BC  C06C  F08D         	movff	?___ftdiv,___ftadd@f1
  2466  0010C0  C06D  F08E         	movff	?___ftdiv+1,___ftadd@f1+1
  2467  0010C4  C06E  F08F         	movff	?___ftdiv+2,___ftadd@f1+2
  2468  0010C8  ECA0  F00F         	call	___ftadd	;wreg free
  2469  0010CC  C08D  F1A7         	movff	?___ftadd,_util_getTemperature$2777
  2470  0010D0  C08E  F1A8         	movff	?___ftadd+1,_util_getTemperature$2777+1
  2471  0010D4  C08F  F1A9         	movff	?___ftadd+2,_util_getTemperature$2777+2
  2472                           
  2473                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2474                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2475                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2476  0010D8  0E00               	movlw	0
  2477  0010DA  0100               	movlb	0	; () banked
  2478  0010DC  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2479  0010DE  0E80               	movlw	128
  2480  0010E0  0100               	movlb	0	; () banked
  2481  0010E2  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2482  0010E4  0E40               	movlw	64
  2483  0010E6  0100               	movlb	0	; () banked
  2484  0010E8  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2485  0010EA  C104  F068         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2486  0010EE  C105  F069         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2487  0010F2  EC36  F01D         	call	___awtoft	;wreg free
  2488  0010F6  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2489  0010FA  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2490  0010FE  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2491  001102  ECDD  F015         	call	___ftdiv	;wreg free
  2492  001106  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2493  00110A  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2494  00110E  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2495  001112  C1A7  F08D         	movff	_util_getTemperature$2777,___ftadd@f1
  2496  001116  C1A8  F08E         	movff	_util_getTemperature$2777+1,___ftadd@f1+1
  2497  00111A  C1A9  F08F         	movff	_util_getTemperature$2777+2,___ftadd@f1+2
  2498  00111E  ECA0  F00F         	call	___ftadd	;wreg free
  2499  001122  C08D  F1AA         	movff	?___ftadd,_util_getTemperature$2778
  2500  001126  C08E  F1AB         	movff	?___ftadd+1,_util_getTemperature$2778+1
  2501  00112A  C08F  F1AC         	movff	?___ftadd+2,_util_getTemperature$2778+2
  2502                           
  2503                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2504                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2505                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2506  00112E  0E00               	movlw	0
  2507  001130  0100               	movlb	0	; () banked
  2508  001132  6F6F               	movwf	___ftdiv@f2& (0+255),b
  2509  001134  0E00               	movlw	0
  2510  001136  0100               	movlb	0	; () banked
  2511  001138  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  2512  00113A  0E40               	movlw	64
  2513  00113C  0100               	movlb	0	; () banked
  2514  00113E  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  2515  001140  C106  F068         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2516  001144  C107  F069         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2517  001148  EC36  F01D         	call	___awtoft	;wreg free
  2518  00114C  C068  F06C         	movff	?___awtoft,___ftdiv@f1
  2519  001150  C069  F06D         	movff	?___awtoft+1,___ftdiv@f1+1
  2520  001154  C06A  F06E         	movff	?___awtoft+2,___ftdiv@f1+2
  2521  001158  ECDD  F015         	call	___ftdiv	;wreg free
  2522  00115C  C06C  F090         	movff	?___ftdiv,___ftadd@f2
  2523  001160  C06D  F091         	movff	?___ftdiv+1,___ftadd@f2+1
  2524  001164  C06E  F092         	movff	?___ftdiv+2,___ftadd@f2+2
  2525  001168  C1AA  F08D         	movff	_util_getTemperature$2778,___ftadd@f1
  2526  00116C  C1AB  F08E         	movff	_util_getTemperature$2778+1,___ftadd@f1+1
  2527  001170  C1AC  F08F         	movff	_util_getTemperature$2778+2,___ftadd@f1+2
  2528  001174  ECA0  F00F         	call	___ftadd	;wreg free
  2529  001178  C08D  F1AD         	movff	?___ftadd,_util_getTemperature$2779
  2530  00117C  C08E  F1AE         	movff	?___ftadd+1,_util_getTemperature$2779+1
  2531  001180  C08F  F1AF         	movff	?___ftadd+2,_util_getTemperature$2779+2
  2532                           
  2533                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2534                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2535                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2536  001184  C108  F068         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2537  001188  C109  F069         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2538  00118C  EC36  F01D         	call	___awtoft	;wreg free
  2539  001190  C068  F090         	movff	?___awtoft,___ftadd@f2
  2540  001194  C069  F091         	movff	?___awtoft+1,___ftadd@f2+1
  2541  001198  C06A  F092         	movff	?___awtoft+2,___ftadd@f2+2
  2542  00119C  C1AD  F08D         	movff	_util_getTemperature$2779,___ftadd@f1
  2543  0011A0  C1AE  F08E         	movff	_util_getTemperature$2779+1,___ftadd@f1+1
  2544  0011A4  C1AF  F08F         	movff	_util_getTemperature$2779+2,___ftadd@f1+2
  2545  0011A8  ECA0  F00F         	call	___ftadd	;wreg free
  2546  0011AC  C08D  F1B0         	movff	?___ftadd,_util_getTemperature$2780
  2547  0011B0  C08E  F1B1         	movff	?___ftadd+1,_util_getTemperature$2780+1
  2548  0011B4  C08F  F1B2         	movff	?___ftadd+2,_util_getTemperature$2780+2
  2549                           
  2550                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2551                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2552                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2553  0011B8  C1B0  F08D         	movff	_util_getTemperature$2780,___ftadd@f1
  2554  0011BC  C1B1  F08E         	movff	_util_getTemperature$2780+1,___ftadd@f1+1
  2555  0011C0  C1B2  F08F         	movff	_util_getTemperature$2780+2,___ftadd@f1+2
  2556  0011C4  0E00               	movlw	0
  2557  0011C6  0100               	movlb	0	; () banked
  2558  0011C8  6F77               	movwf	___ftmul@f2& (0+255),b
  2559  0011CA  0E00               	movlw	0
  2560  0011CC  0100               	movlb	0	; () banked
  2561  0011CE  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2562  0011D0  0E40               	movlw	64
  2563  0011D2  0100               	movlb	0	; () banked
  2564  0011D4  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2565  0011D6  C10A  F068         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2566  0011DA  C10B  F069         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2567  0011DE  EC36  F01D         	call	___awtoft	;wreg free
  2568  0011E2  C068  F074         	movff	?___awtoft,___ftmul@f1
  2569  0011E6  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2570  0011EA  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2571  0011EE  EC2E  F015         	call	___ftmul	;wreg free
  2572  0011F2  C074  F090         	movff	?___ftmul,___ftadd@f2
  2573  0011F6  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2574  0011FA  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2575  0011FE  ECA0  F00F         	call	___ftadd	;wreg free
  2576  001202  C08D  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2577  001206  C08E  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2578  00120A  C08F  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2579                           
  2580                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2581                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2582                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2583                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2584  00120E  0E00               	movlw	0
  2585  001210  0100               	movlb	0	; () banked
  2586  001212  6F77               	movwf	___ftmul@f2& (0+255),b
  2587  001214  0E00               	movlw	0
  2588  001216  0100               	movlb	0	; () banked
  2589  001218  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2590  00121A  0E41               	movlw	65
  2591  00121C  0100               	movlb	0	; () banked
  2592  00121E  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2593  001220  C10E  F068         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2594  001224  C10F  F069         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2595  001228  EC36  F01D         	call	___awtoft	;wreg free
  2596  00122C  C068  F074         	movff	?___awtoft,___ftmul@f1
  2597  001230  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2598  001234  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2599  001238  EC2E  F015         	call	___ftmul	;wreg free
  2600  00123C  C074  F090         	movff	?___ftmul,___ftadd@f2
  2601  001240  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2602  001244  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2603  001248  0E00               	movlw	0
  2604  00124A  0100               	movlb	0	; () banked
  2605  00124C  6F77               	movwf	___ftmul@f2& (0+255),b
  2606  00124E  0E80               	movlw	128
  2607  001250  0100               	movlb	0	; () banked
  2608  001252  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2609  001254  0E40               	movlw	64
  2610  001256  0100               	movlb	0	; () banked
  2611  001258  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2612  00125A  C10C  F068         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2613  00125E  C10D  F069         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2614  001262  EC36  F01D         	call	___awtoft	;wreg free
  2615  001266  C068  F074         	movff	?___awtoft,___ftmul@f1
  2616  00126A  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2617  00126E  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2618  001272  EC2E  F015         	call	___ftmul	;wreg free
  2619  001276  C074  F08D         	movff	?___ftmul,___ftadd@f1
  2620  00127A  C075  F08E         	movff	?___ftmul+1,___ftadd@f1+1
  2621  00127E  C076  F08F         	movff	?___ftmul+2,___ftadd@f1+2
  2622  001282  ECA0  F00F         	call	___ftadd	;wreg free
  2623  001286  C08D  F1A7         	movff	?___ftadd,_util_getTemperature$2777
  2624  00128A  C08E  F1A8         	movff	?___ftadd+1,_util_getTemperature$2777+1
  2625  00128E  C08F  F1A9         	movff	?___ftadd+2,_util_getTemperature$2777+2
  2626                           
  2627                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2628                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2629                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2630                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2631  001292  0E00               	movlw	0
  2632  001294  0100               	movlb	0	; () banked
  2633  001296  6F77               	movwf	___ftmul@f2& (0+255),b
  2634  001298  0E80               	movlw	128
  2635  00129A  0100               	movlb	0	; () banked
  2636  00129C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2637  00129E  0E41               	movlw	65
  2638  0012A0  0100               	movlb	0	; () banked
  2639  0012A2  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2640  0012A4  C110  F068         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2641  0012A8  C111  F069         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2642  0012AC  EC36  F01D         	call	___awtoft	;wreg free
  2643  0012B0  C068  F074         	movff	?___awtoft,___ftmul@f1
  2644  0012B4  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2645  0012B8  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2646  0012BC  EC2E  F015         	call	___ftmul	;wreg free
  2647  0012C0  C074  F090         	movff	?___ftmul,___ftadd@f2
  2648  0012C4  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2649  0012C8  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2650  0012CC  C1A7  F08D         	movff	_util_getTemperature$2777,___ftadd@f1
  2651  0012D0  C1A8  F08E         	movff	_util_getTemperature$2777+1,___ftadd@f1+1
  2652  0012D4  C1A9  F08F         	movff	_util_getTemperature$2777+2,___ftadd@f1+2
  2653  0012D8  ECA0  F00F         	call	___ftadd	;wreg free
  2654  0012DC  C08D  F1AA         	movff	?___ftadd,_util_getTemperature$2778
  2655  0012E0  C08E  F1AB         	movff	?___ftadd+1,_util_getTemperature$2778+1
  2656  0012E4  C08F  F1AC         	movff	?___ftadd+2,_util_getTemperature$2778+2
  2657                           
  2658                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2659                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2660                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2661                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2662  0012E8  0E00               	movlw	0
  2663  0012EA  0100               	movlb	0	; () banked
  2664  0012EC  6F77               	movwf	___ftmul@f2& (0+255),b
  2665  0012EE  0E00               	movlw	0
  2666  0012F0  0100               	movlb	0	; () banked
  2667  0012F2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2668  0012F4  0E42               	movlw	66
  2669  0012F6  0100               	movlb	0	; () banked
  2670  0012F8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2671  0012FA  C112  F068         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2672  0012FE  C113  F069         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2673  001302  EC36  F01D         	call	___awtoft	;wreg free
  2674  001306  C068  F074         	movff	?___awtoft,___ftmul@f1
  2675  00130A  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2676  00130E  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2677  001312  EC2E  F015         	call	___ftmul	;wreg free
  2678  001316  C074  F090         	movff	?___ftmul,___ftadd@f2
  2679  00131A  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2680  00131E  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2681  001322  C1AA  F08D         	movff	_util_getTemperature$2778,___ftadd@f1
  2682  001326  C1AB  F08E         	movff	_util_getTemperature$2778+1,___ftadd@f1+1
  2683  00132A  C1AC  F08F         	movff	_util_getTemperature$2778+2,___ftadd@f1+2
  2684  00132E  ECA0  F00F         	call	___ftadd	;wreg free
  2685  001332  C08D  F1AD         	movff	?___ftadd,_util_getTemperature$2779
  2686  001336  C08E  F1AE         	movff	?___ftadd+1,_util_getTemperature$2779+1
  2687  00133A  C08F  F1AF         	movff	?___ftadd+2,_util_getTemperature$2779+2
  2688                           
  2689                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2690                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2691                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2692                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2693  00133E  0E00               	movlw	0
  2694  001340  0100               	movlb	0	; () banked
  2695  001342  6F77               	movwf	___ftmul@f2& (0+255),b
  2696  001344  0E80               	movlw	128
  2697  001346  0100               	movlb	0	; () banked
  2698  001348  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  2699  00134A  0E42               	movlw	66
  2700  00134C  0100               	movlb	0	; () banked
  2701  00134E  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  2702  001350  C114  F068         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2703  001354  C115  F069         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2704  001358  EC36  F01D         	call	___awtoft	;wreg free
  2705  00135C  C068  F074         	movff	?___awtoft,___ftmul@f1
  2706  001360  C069  F075         	movff	?___awtoft+1,___ftmul@f1+1
  2707  001364  C06A  F076         	movff	?___awtoft+2,___ftmul@f1+2
  2708  001368  EC2E  F015         	call	___ftmul	;wreg free
  2709  00136C  C074  F090         	movff	?___ftmul,___ftadd@f2
  2710  001370  C075  F091         	movff	?___ftmul+1,___ftadd@f2+1
  2711  001374  C076  F092         	movff	?___ftmul+2,___ftadd@f2+2
  2712  001378  C1AD  F08D         	movff	_util_getTemperature$2779,___ftadd@f1
  2713  00137C  C1AE  F08E         	movff	_util_getTemperature$2779+1,___ftadd@f1+1
  2714  001380  C1AF  F08F         	movff	_util_getTemperature$2779+2,___ftadd@f1+2
  2715  001384  ECA0  F00F         	call	___ftadd	;wreg free
  2716  001388  C08D  F1B0         	movff	?___ftadd,_util_getTemperature$2780
  2717  00138C  C08E  F1B1         	movff	?___ftadd+1,_util_getTemperature$2780+1
  2718  001390  C08F  F1B2         	movff	?___ftadd+2,_util_getTemperature$2780+2
  2719                           
  2720                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2721                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2722                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2723                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2724  001394  C1B0  F08D         	movff	_util_getTemperature$2780,___ftadd@f1
  2725  001398  C1B1  F08E         	movff	_util_getTemperature$2780+1,___ftadd@f1+1
  2726  00139C  C1B2  F08F         	movff	_util_getTemperature$2780+2,___ftadd@f1+2
  2727  0013A0  C1C9  F090         	movff	util_getTemperature@temperature,___ftadd@f2
  2728  0013A4  C1CA  F091         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2729  0013A8  C1CB  F092         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2730  0013AC  ECA0  F00F         	call	___ftadd	;wreg free
  2731  0013B0  C08D  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2732  0013B4  C08E  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2733  0013B8  C08F  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2734                           
  2735                           ;easat2_util_inputs.c: 268: temperature = temperature * sign;
  2736  0013BC  C1C9  F074         	movff	util_getTemperature@temperature,___ftmul@f1
  2737  0013C0  C1CA  F075         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2738  0013C4  C1CB  F076         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2739  0013C8  C1A4  F077         	movff	util_getTemperature@sign,___ftmul@f2
  2740  0013CC  C1A5  F078         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2741  0013D0  C1A6  F079         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2742  0013D4  EC2E  F015         	call	___ftmul	;wreg free
  2743  0013D8  C074  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2744  0013DC  C075  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2745  0013E0  C076  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2746                           
  2747                           ;easat2_util_inputs.c: 270: return temperature;
  2748  0013E4  C1C9  F099         	movff	util_getTemperature@temperature,?_util_getTemperature
  2749  0013E8  C1CA  F09A         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2750  0013EC  C1CB  F09B         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2751  0013F0  0012               	return	
  2752  0013F2                     __end_of_util_getTemperature:
  2753                           	opt stack 0
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           postinc2	equ	0xFDE
  2765                           postdec2	equ	0xFDD
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _util_waits_delay_secs *****************
  2771 ;; Defined at:
  2772 ;;		line 31 in file "easat2_util_waits.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  secs            2    5[BANK0 ] int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  j               2   10[BANK0 ] int 
  2777 ;;  i               2    8[BANK0 ] int 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2787 ;;      Params:         0       2       0       0       0       0       0
  2788 ;;      Locals:         0       4       0       0       0       0       0
  2789 ;;      Temps:          0       1       0       0       0       0       0
  2790 ;;      Totals:         0       7       0       0       0       0       0
  2791 ;;Total ram usage:        7 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    3
  2794 ;; This function calls:
  2795 ;;		_util_waits_delay_ms
  2796 ;; This function is called by:
  2797 ;;		_util_getTemperature
  2798 ;;		_util_waits_delay_mins
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text5
  2803  003872                     __ptext5:
  2804                           	opt stack 0
  2805  003872                     _util_waits_delay_secs:
  2806                           	opt stack 25
  2807                           
  2808                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2809                           
  2810                           ;incstack = 0
  2811  003872  0E00               	movlw	0
  2812  003874  0100               	movlb	0	; () banked
  2813  003876  6F69               	movwf	(util_waits_delay_secs@i+1)& (0+255),b
  2814  003878  0E00               	movlw	0
  2815  00387A  6F68               	movwf	util_waits_delay_secs@i& (0+255),b
  2816  00387C  D01E               	goto	l4878
  2817  00387E                     l4864:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2821  00387E  0E00               	movlw	0
  2822  003880  0100               	movlb	0	; () banked
  2823  003882  6F6B               	movwf	(util_waits_delay_secs@j+1)& (0+255),b
  2824  003884  0E00               	movlw	0
  2825  003886  6F6A               	movwf	util_waits_delay_secs@j& (0+255),b
  2826  003888                     l4866:
  2827                           
  2828                           ; BSR set to: 0
  2829  003888  0100               	movlb	0	; () banked
  2830  00388A  BF6B               	btfsc	(util_waits_delay_secs@j+1)& (0+255),7,b
  2831  00388C  D008               	goto	l4870
  2832  00388E  0100               	movlb	0	; () banked
  2833  003890  516B               	movf	(util_waits_delay_secs@j+1)& (0+255),w,b
  2834  003892  E110               	bnz	l4876
  2835  003894  0E0A               	movlw	10
  2836  003896  0100               	movlb	0	; () banked
  2837  003898  5D6A               	subwf	util_waits_delay_secs@j& (0+255),w,b
  2838  00389A  B0D8               	btfsc	status,0,c
  2839  00389C  D00B               	goto	l4876
  2840  00389E                     l4870:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2844  00389E  0E00               	movlw	0
  2845  0038A0  0100               	movlb	0	; () banked
  2846  0038A2  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2847  0038A4  0E64               	movlw	100
  2848  0038A6  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  2849  0038A8  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  2850  0038AC  0100               	movlb	0	; () banked
  2851  0038AE  4B6A               	infsnz	util_waits_delay_secs@j& (0+255),f,b
  2852  0038B0  2B6B               	incf	(util_waits_delay_secs@j+1)& (0+255),f,b
  2853  0038B2  D7EA               	goto	l4866
  2854  0038B4                     l4876:
  2855                           
  2856                           ; BSR set to: 0
  2857  0038B4  0100               	movlb	0	; () banked
  2858  0038B6  4B68               	infsnz	util_waits_delay_secs@i& (0+255),f,b
  2859  0038B8  2B69               	incf	(util_waits_delay_secs@i+1)& (0+255),f,b
  2860  0038BA                     l4878:
  2861                           
  2862                           ; BSR set to: 0
  2863  0038BA  0100               	movlb	0	; () banked
  2864  0038BC  5165               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2865  0038BE  0100               	movlb	0	; () banked
  2866  0038C0  5D68               	subwf	util_waits_delay_secs@i& (0+255),w,b
  2867  0038C2  0100               	movlb	0	; () banked
  2868  0038C4  5169               	movf	(util_waits_delay_secs@i+1)& (0+255),w,b
  2869  0038C6  0A80               	xorlw	128
  2870  0038C8  0100               	movlb	0	; () banked
  2871  0038CA  6F67               	movwf	??_util_waits_delay_secs& (0+255),b
  2872  0038CC  0100               	movlb	0	; () banked
  2873  0038CE  5166               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2874  0038D0  0A80               	xorlw	128
  2875  0038D2  0100               	movlb	0	; () banked
  2876  0038D4  5967               	subwfb	??_util_waits_delay_secs& (0+255),w,b
  2877  0038D6  B0D8               	btfsc	status,0,c
  2878  0038D8  0012               	return	
  2879  0038DA  D7D1               	goto	l4864
  2880  0038DC                     __end_of_util_waits_delay_secs:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           intcon	equ	0xFF2
  2887                           postinc0	equ	0xFEE
  2888                           wreg	equ	0xFE8
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _util_onewire_write_byte *****************
  2899 ;; Defined at:
  2900 ;;		line 62 in file "easat2_util_onewire.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  value           2    2[BANK0 ] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  bit7            2   21[BANK0 ] int 
  2905 ;;  bit6            2   19[BANK0 ] int 
  2906 ;;  bit5            2   17[BANK0 ] int 
  2907 ;;  bit4            2   15[BANK0 ] int 
  2908 ;;  bit3            2   13[BANK0 ] int 
  2909 ;;  bit2            2   11[BANK0 ] int 
  2910 ;;  bit1            2    9[BANK0 ] int 
  2911 ;;  bit0            2    7[BANK0 ] int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       2       0       0       0       0       0
  2922 ;;      Locals:         0      16       0       0       0       0       0
  2923 ;;      Temps:          0       3       0       0       0       0       0
  2924 ;;      Totals:         0      21       0       0       0       0       0
  2925 ;;Total ram usage:       21 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    3
  2928 ;; This function calls:
  2929 ;;		_util_onewire_write_bit
  2930 ;; This function is called by:
  2931 ;;		_util_getTemperature
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text6
  2936  0023E6                     __ptext6:
  2937                           	opt stack 0
  2938  0023E6                     _util_onewire_write_byte:
  2939                           	opt stack 25
  2940                           
  2941                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2942                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;incstack = 0
  2946  0023E6  0E01               	movlw	1
  2947  0023E8  0100               	movlb	0	; () banked
  2948  0023EA  1562               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2949  0023EC  0100               	movlb	0	; () banked
  2950  0023EE  6F67               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2951  0023F0  0100               	movlb	0	; () banked
  2952  0023F2  6B68               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2953                           
  2954                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2955  0023F4  0100               	movlb	0	; () banked
  2956  0023F6  3563               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2957  0023F8  3163               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2958  0023FA  0100               	movlb	0	; () banked
  2959  0023FC  6F65               	movwf	(??_util_onewire_write_byte+1)& (0+255),b
  2960  0023FE  0100               	movlb	0	; () banked
  2961  002400  3162               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2962  002402  0100               	movlb	0	; () banked
  2963  002404  6F64               	movwf	??_util_onewire_write_byte& (0+255),b
  2964  002406  0E01               	movlw	1
  2965  002408  0100               	movlb	0	; () banked
  2966  00240A  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  2967  00240C  0100               	movlb	0	; () banked
  2968  00240E  6F69               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2969  002410  0100               	movlb	0	; () banked
  2970  002412  6B6A               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2971                           
  2972                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2973  002414  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2974  002418  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2975  00241C  0100               	movlb	0	; () banked
  2976  00241E  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2977  002420  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2978  002422  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2979  002424  0100               	movlb	0	; () banked
  2980  002426  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2981  002428  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2982  00242A  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2983  00242C  0E01               	movlw	1
  2984  00242E  0100               	movlb	0	; () banked
  2985  002430  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  2986  002432  0100               	movlb	0	; () banked
  2987  002434  6F6B               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2988  002436  0100               	movlb	0	; () banked
  2989  002438  6B6C               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2990                           
  2991                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2992  00243A  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2993  00243E  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2994  002442  0100               	movlb	0	; () banked
  2995  002444  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  2996  002446  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  2997  002448  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  2998  00244A  0100               	movlb	0	; () banked
  2999  00244C  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3000  00244E  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3001  002450  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3002  002452  0100               	movlb	0	; () banked
  3003  002454  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3004  002456  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3005  002458  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3006  00245A  0E01               	movlw	1
  3007  00245C  0100               	movlb	0	; () banked
  3008  00245E  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3009  002460  0100               	movlb	0	; () banked
  3010  002462  6F6D               	movwf	util_onewire_write_byte@bit3& (0+255),b
  3011  002464  0100               	movlb	0	; () banked
  3012  002466  6B6E               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  3013                           
  3014                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  3015  002468  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3016  00246C  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3017  002470  0E04               	movlw	4
  3018  002472  0100               	movlb	0	; () banked
  3019  002474  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3020  002476                     u5355:
  3021  002476  0100               	movlb	0	; () banked
  3022  002478  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3023  00247A  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3024  00247C  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3025  00247E  0100               	movlb	0	; () banked
  3026  002480  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3027  002482  D7F9               	goto	u5355
  3028  002484  0E01               	movlw	1
  3029  002486  0100               	movlb	0	; () banked
  3030  002488  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3031  00248A  0100               	movlb	0	; () banked
  3032  00248C  6F6F               	movwf	util_onewire_write_byte@bit4& (0+255),b
  3033  00248E  0100               	movlb	0	; () banked
  3034  002490  6B70               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  3035                           
  3036                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  3037  002492  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3038  002496  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3039  00249A  0E05               	movlw	5
  3040  00249C  0100               	movlb	0	; () banked
  3041  00249E  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3042  0024A0                     u5365:
  3043  0024A0  0100               	movlb	0	; () banked
  3044  0024A2  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3045  0024A4  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3046  0024A6  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3047  0024A8  0100               	movlb	0	; () banked
  3048  0024AA  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3049  0024AC  D7F9               	goto	u5365
  3050  0024AE  0E01               	movlw	1
  3051  0024B0  0100               	movlb	0	; () banked
  3052  0024B2  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3053  0024B4  0100               	movlb	0	; () banked
  3054  0024B6  6F71               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3055  0024B8  0100               	movlb	0	; () banked
  3056  0024BA  6B72               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3057                           
  3058                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3059  0024BC  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3060  0024C0  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3061  0024C4  0E06               	movlw	6
  3062  0024C6  0100               	movlb	0	; () banked
  3063  0024C8  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3064  0024CA                     u5375:
  3065  0024CA  0100               	movlb	0	; () banked
  3066  0024CC  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3067  0024CE  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3068  0024D0  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3069  0024D2  0100               	movlb	0	; () banked
  3070  0024D4  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3071  0024D6  D7F9               	goto	u5375
  3072  0024D8  0E01               	movlw	1
  3073  0024DA  0100               	movlb	0	; () banked
  3074  0024DC  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3075  0024DE  0100               	movlb	0	; () banked
  3076  0024E0  6F73               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3077  0024E2  0100               	movlb	0	; () banked
  3078  0024E4  6B74               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3079                           
  3080                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3081  0024E6  C062  F064         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3082  0024EA  C063  F065         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3083  0024EE  0E07               	movlw	7
  3084  0024F0  0100               	movlb	0	; () banked
  3085  0024F2  6F66               	movwf	(??_util_onewire_write_byte+2)& (0+255),b
  3086  0024F4                     u5385:
  3087  0024F4  0100               	movlb	0	; () banked
  3088  0024F6  3565               	rlcf	(??_util_onewire_write_byte+1)& (0+255),w,b
  3089  0024F8  3365               	rrcf	(??_util_onewire_write_byte+1)& (0+255),f,b
  3090  0024FA  3364               	rrcf	??_util_onewire_write_byte& (0+255),f,b
  3091  0024FC  0100               	movlb	0	; () banked
  3092  0024FE  2F66               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,b
  3093  002500  D7F9               	goto	u5385
  3094  002502  0E01               	movlw	1
  3095  002504  0100               	movlb	0	; () banked
  3096  002506  1564               	andwf	??_util_onewire_write_byte& (0+255),w,b
  3097  002508  0100               	movlb	0	; () banked
  3098  00250A  6F75               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3099  00250C  0100               	movlb	0	; () banked
  3100  00250E  6B76               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3104  002510  C067  F060         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3105  002514  C068  F061         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3106  002518  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3107                           
  3108                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3109  00251C  D000               	nop2		;2 cycle nop
  3110  00251E  D000               	nop2		;2 cycle nop
  3111  002520  F000               	nop	
  3112                           
  3113                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3114  002522  C069  F060         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3115  002526  C06A  F061         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3116  00252A  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3117                           
  3118                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3119  00252E  D000               	nop2		;2 cycle nop
  3120  002530  D000               	nop2		;2 cycle nop
  3121  002532  F000               	nop	
  3122                           
  3123                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3124  002534  C06B  F060         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3125  002538  C06C  F061         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3126  00253C  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3127                           
  3128                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3129  002540  D000               	nop2		;2 cycle nop
  3130  002542  D000               	nop2		;2 cycle nop
  3131  002544  F000               	nop	
  3132                           
  3133                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3134  002546  C06D  F060         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3135  00254A  C06E  F061         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3136  00254E  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3137                           
  3138                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3139  002552  D000               	nop2		;2 cycle nop
  3140  002554  D000               	nop2		;2 cycle nop
  3141  002556  F000               	nop	
  3142                           
  3143                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3144  002558  C06F  F060         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3145  00255C  C070  F061         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3146  002560  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3147                           
  3148                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3149  002564  D000               	nop2		;2 cycle nop
  3150  002566  D000               	nop2		;2 cycle nop
  3151  002568  F000               	nop	
  3152                           
  3153                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3154  00256A  C071  F060         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3155  00256E  C072  F061         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3156  002572  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3157                           
  3158                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3159  002576  D000               	nop2		;2 cycle nop
  3160  002578  D000               	nop2		;2 cycle nop
  3161  00257A  F000               	nop	
  3162                           
  3163                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3164  00257C  C073  F060         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3165  002580  C074  F061         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3166  002584  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3167                           
  3168                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3169  002588  D000               	nop2		;2 cycle nop
  3170  00258A  D000               	nop2		;2 cycle nop
  3171  00258C  F000               	nop	
  3172                           
  3173                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3174  00258E  C075  F060         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3175  002592  C076  F061         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3176  002596  ECF1  F01D         	call	_util_onewire_write_bit	;wreg free
  3177                           
  3178                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3179  00259A  D000               	nop2		;2 cycle nop
  3180  00259C  D000               	nop2		;2 cycle nop
  3181  00259E  F000               	nop	
  3182  0025A0  0012               	return		;funcret
  3183  0025A2                     __end_of_util_onewire_write_byte:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           wreg	equ	0xFE8
  3192                           postdec1	equ	0xFE5
  3193                           fsr1h	equ	0xFE2
  3194                           fsr1l	equ	0xFE1
  3195                           postinc2	equ	0xFDE
  3196                           postdec2	equ	0xFDD
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _util_onewire_write_bit *****************
  3202 ;; Defined at:
  3203 ;;		line 121 in file "easat2_util_onewire.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  bit_in          2    0[BANK0 ] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3217 ;;      Params:         0       2       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0
  3220 ;;      Totals:         0       2       0       0       0       0       0
  3221 ;;Total ram usage:        2 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    2
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_util_onewire_write_byte
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text7
  3232  003BE2                     __ptext7:
  3233                           	opt stack 0
  3234  003BE2                     _util_onewire_write_bit:
  3235                           	opt stack 25
  3236                           
  3237                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3238                           
  3239                           ;incstack = 0
  3240  003BE2  9692               	bcf	3986,3,c	;volatile
  3241                           
  3242                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3243  003BE4  0100               	movlb	0	; () banked
  3244  003BE6  5160               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3245  003BE8  0100               	movlb	0	; () banked
  3246  003BEA  1161               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3247  003BEC  B4D8               	btfsc	status,2,c
  3248  003BEE  D009               	goto	l186
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3252  003BF0  9680               	bcf	3968,3,c	;volatile
  3253                           
  3254                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3255  003BF2  D000               	nop2		;2 cycle nop
  3256  003BF4  D000               	nop2		;2 cycle nop
  3257  003BF6  F000               	nop	
  3258                           
  3259                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3260  003BF8  8680               	bsf	3968,3,c	;volatile
  3261                           
  3262                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3263  003BFA  0E09               	movlw	9
  3264  003BFC                     u6317:
  3265  003BFC  2EE8               	decfsz	wreg,f,c
  3266  003BFE  D7FE               	bra	u6317
  3267                           
  3268                           ;easat2_util_onewire.c: 141: } else {
  3269  003C00  0012               	return	
  3270  003C02                     l186:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3274  003C02  9680               	bcf	3968,3,c	;volatile
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3278  003C04  0E0B               	movlw	11
  3279  003C06                     u6327:
  3280  003C06  2EE8               	decfsz	wreg,f,c
  3281  003C08  D7FE               	bra	u6327
  3282  003C0A  D000               	nop2	
  3283                           
  3284                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3285  003C0C  8680               	bsf	3968,3,c	;volatile
  3286                           
  3287                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3288  003C0E  D000               	nop2		;2 cycle nop
  3289  003C10  D000               	nop2		;2 cycle nop
  3290  003C12  F000               	nop	
  3291  003C14  0012               	return	
  3292  003C16                     __end_of_util_onewire_write_bit:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           intcon	equ	0xFF2
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _util_onewire_reset *****************
  3311 ;; Defined at:
  3312 ;;		line 18 in file "easat2_util_onewire.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  presence        2    3[BANK0 ] int 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2    0[BANK0 ] int 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3326 ;;      Params:         0       2       0       0       0       0       0
  3327 ;;      Locals:         0       2       0       0       0       0       0
  3328 ;;      Temps:          0       1       0       0       0       0       0
  3329 ;;      Totals:         0       5       0       0       0       0       0
  3330 ;;Total ram usage:        5 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_util_getTemperature
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text8
  3341  00398C                     __ptext8:
  3342                           	opt stack 0
  3343  00398C                     _util_onewire_reset:
  3344                           	opt stack 26
  3345                           
  3346                           ;easat2_util_onewire.c: 20: int presence = 1;
  3347                           
  3348                           ;incstack = 0
  3349  00398C  0E00               	movlw	0
  3350  00398E  0100               	movlb	0	; () banked
  3351  003990  6F64               	movwf	(util_onewire_reset@presence+1)& (0+255),b
  3352  003992  0E01               	movlw	1
  3353  003994  6F63               	movwf	util_onewire_reset@presence& (0+255),b
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3357  003996  9692               	bcf	3986,3,c	;volatile
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3361  003998  9680               	bcf	3968,3,c	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3365  00399A  0E5D               	movlw	93
  3366  00399C                     u6337:
  3367  00399C  2EE8               	decfsz	wreg,f,c
  3368  00399E  D7FE               	bra	u6337
  3369  0039A0  F000               	nop	
  3370                           
  3371                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3372  0039A2  8680               	bsf	3968,3,c	;volatile
  3373                           
  3374                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3375  0039A4  0E0B               	movlw	11
  3376  0039A6                     u6347:
  3377  0039A6  2EE8               	decfsz	wreg,f,c
  3378  0039A8  D7FE               	bra	u6347
  3379  0039AA  D000               	nop2	
  3380                           
  3381                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3382  0039AC  8692               	bsf	3986,3,c	;volatile
  3383                           
  3384                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3385  0039AE  A680               	btfss	3968,3,c	;volatile
  3386  0039B0  D004               	goto	u5340
  3387  0039B2  0100               	movlb	0	; () banked
  3388  0039B4  6B62               	clrf	??_util_onewire_reset& (0+255),b
  3389  0039B6  2B62               	incf	??_util_onewire_reset& (0+255),f,b
  3390  0039B8  D002               	goto	u5348
  3391  0039BA                     u5340:
  3392  0039BA  0100               	movlb	0	; () banked
  3393  0039BC  6B62               	clrf	??_util_onewire_reset& (0+255),b
  3394  0039BE                     u5348:
  3395  0039BE  0100               	movlb	0	; () banked
  3396  0039C0  5162               	movf	??_util_onewire_reset& (0+255),w,b
  3397  0039C2  0100               	movlb	0	; () banked
  3398  0039C4  6F63               	movwf	util_onewire_reset@presence& (0+255),b
  3399  0039C6  6B64               	clrf	(util_onewire_reset@presence+1)& (0+255),b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3403  0039C8  0E46               	movlw	70
  3404  0039CA                     u6357:
  3405  0039CA  2EE8               	decfsz	wreg,f,c
  3406  0039CC  D7FE               	bra	u6357
  3407                           
  3408                           ;easat2_util_onewire.c: 56: return presence;
  3409  0039CE  C063  F060         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3410  0039D2  C064  F061         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3411  0039D6  0012               	return	
  3412  0039D8                     __end_of_util_onewire_reset:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1h	equ	0xFE2
  3423                           fsr1l	equ	0xFE1
  3424                           postinc2	equ	0xFDE
  3425                           postdec2	equ	0xFDD
  3426                           fsr2h	equ	0xFDA
  3427                           fsr2l	equ	0xFD9
  3428                           status	equ	0xFD8
  3429                           
  3430 ;; *************** function _util_onewire_read_byte *****************
  3431 ;; Defined at:
  3432 ;;		line 96 in file "easat2_util_onewire.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  value           2   37[BANK0 ] int 
  3437 ;;  bit7            2   35[BANK0 ] int 
  3438 ;;  bit6            2   33[BANK0 ] int 
  3439 ;;  bit5            2   31[BANK0 ] int 
  3440 ;;  bit4            2   29[BANK0 ] int 
  3441 ;;  bit3            2   27[BANK0 ] int 
  3442 ;;  bit2            2   25[BANK0 ] int 
  3443 ;;  bit1            2   23[BANK0 ] int 
  3444 ;;  bit0            2   21[BANK0 ] int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2    5[BANK0 ] int 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       2       0       0       0       0       0
  3455 ;;      Locals:         0      18       0       0       0       0       0
  3456 ;;      Temps:          0      14       0       0       0       0       0
  3457 ;;      Totals:         0      34       0       0       0       0       0
  3458 ;;Total ram usage:       34 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    3
  3461 ;; This function calls:
  3462 ;;		_util_onewire_read_bit
  3463 ;; This function is called by:
  3464 ;;		_util_getTemperature
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text9
  3469  002740                     __ptext9:
  3470                           	opt stack 0
  3471  002740                     _util_onewire_read_byte:
  3472                           	opt stack 25
  3473                           
  3474                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3475                           ;easat2_util_onewire.c: 99: int value = 0;
  3476                           
  3477                           ;incstack = 0
  3478  002740  0E00               	movlw	0
  3479  002742  0100               	movlb	0	; () banked
  3480  002744  6F86               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3481  002746  0E00               	movlw	0
  3482  002748  6F85               	movwf	util_onewire_read_byte@value& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3486  00274A  8692               	bsf	3986,3,c	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3490  00274C  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3491  002750  C060  F075         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3492  002754  C061  F076         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3493                           
  3494                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3495  002758  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3496  00275C  C060  F077         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3497  002760  C061  F078         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3498                           
  3499                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3500  002764  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3501  002768  C060  F079         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3502  00276C  C061  F07A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3503                           
  3504                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3505  002770  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3506  002774  C060  F07B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3507  002778  C061  F07C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3508                           
  3509                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3510  00277C  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3511  002780  C060  F07D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3512  002784  C061  F07E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3513                           
  3514                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3515  002788  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3516  00278C  C060  F07F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3517  002790  C061  F080         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3518                           
  3519                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3520  002794  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3521  002798  C060  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3522  00279C  C061  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3523                           
  3524                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3525  0027A0  EC9A  F01D         	call	_util_onewire_read_bit	;wreg free
  3526  0027A4  C060  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3527  0027A8  C061  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3528                           
  3529                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3530                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3531  0027AC  C083  F067         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3532  0027B0  C084  F068         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3533  0027B4  0E07               	movlw	7
  3534  0027B6                     u5395:
  3535  0027B6  90D8               	bcf	status,0,c
  3536  0027B8  0100               	movlb	0	; () banked
  3537  0027BA  3767               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3538  0027BC  3768               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3539  0027BE  2EE8               	decfsz	wreg,f,c
  3540  0027C0  D7FA               	goto	u5395
  3541  0027C2  C081  F069         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3542  0027C6  C082  F06A         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3543  0027CA  0E06               	movlw	6
  3544  0027CC                     u5405:
  3545  0027CC  90D8               	bcf	status,0,c
  3546  0027CE  0100               	movlb	0	; () banked
  3547  0027D0  3769               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3548  0027D2  376A               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3549  0027D4  2EE8               	decfsz	wreg,f,c
  3550  0027D6  D7FA               	goto	u5405
  3551  0027D8  C07F  F06B         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3552  0027DC  C080  F06C         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3553  0027E0  0E05               	movlw	5
  3554  0027E2                     u5415:
  3555  0027E2  90D8               	bcf	status,0,c
  3556  0027E4  0100               	movlb	0	; () banked
  3557  0027E6  376B               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3558  0027E8  376C               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3559  0027EA  2EE8               	decfsz	wreg,f,c
  3560  0027EC  D7FA               	goto	u5415
  3561  0027EE  C07D  F06D         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3562  0027F2  C07E  F06E         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3563  0027F6  0100               	movlb	0	; () banked
  3564  0027F8  3B6D               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3565  0027FA  3B6E               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3566  0027FC  0EF0               	movlw	240
  3567  0027FE  176E               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3568  002800  516D               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3569  002802  0B0F               	andlw	15
  3570  002804  136E               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3571  002806  0EF0               	movlw	240
  3572  002808  176D               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3573  00280A  C07B  F06F         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3574  00280E  C07C  F070         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3575  002812  0100               	movlb	0	; () banked
  3576  002814  90D8               	bcf	status,0,c
  3577  002816  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3578  002818  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3579  00281A  0100               	movlb	0	; () banked
  3580  00281C  90D8               	bcf	status,0,c
  3581  00281E  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3582  002820  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3583  002822  0100               	movlb	0	; () banked
  3584  002824  90D8               	bcf	status,0,c
  3585  002826  376F               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3586  002828  3770               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3587  00282A  C079  F071         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3588  00282E  C07A  F072         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3589  002832  0100               	movlb	0	; () banked
  3590  002834  90D8               	bcf	status,0,c
  3591  002836  3771               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3592  002838  3772               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3593  00283A  0100               	movlb	0	; () banked
  3594  00283C  90D8               	bcf	status,0,c
  3595  00283E  3771               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3596  002840  3772               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3597  002842  C077  F073         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3598  002846  C078  F074         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3599  00284A  90D8               	bcf	status,0,c
  3600  00284C  0100               	movlb	0	; () banked
  3601  00284E  3773               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3602  002850  3774               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3603  002852  0100               	movlb	0	; () banked
  3604  002854  5171               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3605  002856  0100               	movlb	0	; () banked
  3606  002858  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3607  00285A  0100               	movlb	0	; () banked
  3608  00285C  5172               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3609  00285E  0100               	movlb	0	; () banked
  3610  002860  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3611  002862  0100               	movlb	0	; () banked
  3612  002864  516F               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3613  002866  0100               	movlb	0	; () banked
  3614  002868  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3615  00286A  0100               	movlb	0	; () banked
  3616  00286C  5170               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3617  00286E  0100               	movlb	0	; () banked
  3618  002870  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3619  002872  0100               	movlb	0	; () banked
  3620  002874  516D               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3621  002876  0100               	movlb	0	; () banked
  3622  002878  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3623  00287A  0100               	movlb	0	; () banked
  3624  00287C  516E               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3625  00287E  0100               	movlb	0	; () banked
  3626  002880  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3627  002882  0100               	movlb	0	; () banked
  3628  002884  516B               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3629  002886  0100               	movlb	0	; () banked
  3630  002888  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3631  00288A  0100               	movlb	0	; () banked
  3632  00288C  516C               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3633  00288E  0100               	movlb	0	; () banked
  3634  002890  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3635  002892  0100               	movlb	0	; () banked
  3636  002894  5169               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3637  002896  0100               	movlb	0	; () banked
  3638  002898  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3639  00289A  0100               	movlb	0	; () banked
  3640  00289C  516A               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3641  00289E  0100               	movlb	0	; () banked
  3642  0028A0  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3643  0028A2  0100               	movlb	0	; () banked
  3644  0028A4  5167               	movf	??_util_onewire_read_byte& (0+255),w,b
  3645  0028A6  0100               	movlb	0	; () banked
  3646  0028A8  2773               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3647  0028AA  0100               	movlb	0	; () banked
  3648  0028AC  5168               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3649  0028AE  0100               	movlb	0	; () banked
  3650  0028B0  2374               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3651  0028B2  0100               	movlb	0	; () banked
  3652  0028B4  5175               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3653  0028B6  0100               	movlb	0	; () banked
  3654  0028B8  2573               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3655  0028BA  0100               	movlb	0	; () banked
  3656  0028BC  6F85               	movwf	util_onewire_read_byte@value& (0+255),b
  3657  0028BE  0100               	movlb	0	; () banked
  3658  0028C0  5176               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3659  0028C2  0100               	movlb	0	; () banked
  3660  0028C4  2174               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3661  0028C6  0100               	movlb	0	; () banked
  3662  0028C8  6F86               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;easat2_util_onewire.c: 116: return value;
  3666  0028CA  C085  F065         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3667  0028CE  C086  F066         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3668  0028D2  0012               	return	
  3669  0028D4                     __end_of_util_onewire_read_byte:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1h	equ	0xFE2
  3680                           fsr1l	equ	0xFE1
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _util_onewire_read_bit *****************
  3688 ;; Defined at:
  3689 ;;		line 162 in file "easat2_util_onewire.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  value           2    3[BANK0 ] int 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  2    0[BANK0 ] int 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3703 ;;      Params:         0       2       0       0       0       0       0
  3704 ;;      Locals:         0       2       0       0       0       0       0
  3705 ;;      Temps:          0       1       0       0       0       0       0
  3706 ;;      Totals:         0       5       0       0       0       0       0
  3707 ;;Total ram usage:        5 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    2
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_util_onewire_read_byte
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text10
  3718  003B34                     __ptext10:
  3719                           	opt stack 0
  3720  003B34                     _util_onewire_read_bit:
  3721                           	opt stack 25
  3722                           
  3723                           ;easat2_util_onewire.c: 164: int value = 0;
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;incstack = 0
  3727  003B34  0E00               	movlw	0
  3728  003B36  0100               	movlb	0	; () banked
  3729  003B38  6F64               	movwf	(util_onewire_read_bit@value+1)& (0+255),b
  3730  003B3A  0E00               	movlw	0
  3731  003B3C  6F63               	movwf	util_onewire_read_bit@value& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3735  003B3E  9692               	bcf	3986,3,c	;volatile
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3739  003B40  9680               	bcf	3968,3,c	;volatile
  3740                           
  3741                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3745  003B42  8680               	bsf	3968,3,c	;volatile
  3746                           
  3747                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3748  003B44  D000               	nop2		;2 cycle nop
  3749                           
  3750                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3751  003B46  A680               	btfss	3968,3,c	;volatile
  3752  003B48  D004               	goto	u4940
  3753  003B4A  0100               	movlb	0	; () banked
  3754  003B4C  6B62               	clrf	??_util_onewire_read_bit& (0+255),b
  3755  003B4E  2B62               	incf	??_util_onewire_read_bit& (0+255),f,b
  3756  003B50  D002               	goto	u4948
  3757  003B52                     u4940:
  3758  003B52  0100               	movlb	0	; () banked
  3759  003B54  6B62               	clrf	??_util_onewire_read_bit& (0+255),b
  3760  003B56                     u4948:
  3761  003B56  0100               	movlb	0	; () banked
  3762  003B58  5162               	movf	??_util_onewire_read_bit& (0+255),w,b
  3763  003B5A  0100               	movlb	0	; () banked
  3764  003B5C  6F63               	movwf	util_onewire_read_bit@value& (0+255),b
  3765  003B5E  6B64               	clrf	(util_onewire_read_bit@value+1)& (0+255),b
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3769  003B60  0E0A               	movlw	10
  3770  003B62                     u6367:
  3771  003B62  2EE8               	decfsz	wreg,f,c
  3772  003B64  D7FE               	bra	u6367
  3773                           
  3774                           ;easat2_util_onewire.c: 187: return value;
  3775  003B66  C063  F060         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3776  003B6A  C064  F061         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3777  003B6E  0012               	return	
  3778  003B70                     __end_of_util_onewire_read_bit:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           intcon	equ	0xFF2
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           postdec1	equ	0xFE5
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           postinc2	equ	0xFDE
  3791                           postdec2	equ	0xFDD
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function ___ftdiv *****************
  3797 ;; Defined at:
  3798 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  f1              3   12[BANK0 ] float 
  3801 ;;  f2              3   15[BANK0 ] float 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  f3              3   22[BANK0 ] float 
  3804 ;;  sign            1   26[BANK0 ] unsigned char 
  3805 ;;  exp             1   25[BANK0 ] unsigned char 
  3806 ;;  cntr            1   21[BANK0 ] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  3   12[BANK0 ] float 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3816 ;;      Params:         0       6       0       0       0       0       0
  3817 ;;      Locals:         0       6       0       0       0       0       0
  3818 ;;      Temps:          0       3       0       0       0       0       0
  3819 ;;      Totals:         0      15       0       0       0       0       0
  3820 ;;Total ram usage:       15 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		___ftpack
  3825 ;; This function is called by:
  3826 ;;		_util_getTemperature
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text11
  3831  002BBA                     __ptext11:
  3832                           	opt stack 0
  3833  002BBA                     ___ftdiv:
  3834                           	opt stack 25
  3835                           
  3836                           ;incstack = 0
  3837  002BBA  C06E  F072         	movff	___ftdiv@f1+2,??___ftdiv
  3838  002BBE  0100               	movlb	0	; () banked
  3839  002BC0  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  3840  002BC2  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  3841  002BC4  0100               	movlb	0	; () banked
  3842  002BC6  356D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3843  002BC8  0100               	movlb	0	; () banked
  3844  002BCA  3772               	rlcf	??___ftdiv& (0+255),f,b
  3845  002BCC  E301               	bnc	u5961
  3846  002BCE  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  3847  002BD0                     u5961:
  3848  002BD0  0100               	movlb	0	; () banked
  3849  002BD2  5172               	movf	??___ftdiv& (0+255),w,b
  3850  002BD4  0100               	movlb	0	; () banked
  3851  002BD6  6F79               	movwf	___ftdiv@exp& (0+255),b
  3852  002BD8  0100               	movlb	0	; () banked
  3853  002BDA  5179               	movf	___ftdiv@exp& (0+255),w,b
  3854  002BDC  A4D8               	btfss	status,2,c
  3855  002BDE  D00A               	goto	l5702
  3856                           
  3857                           ; BSR set to: 0
  3858  002BE0  0E00               	movlw	0
  3859  002BE2  0100               	movlb	0	; () banked
  3860  002BE4  6F6C               	movwf	?___ftdiv& (0+255),b
  3861  002BE6  0E00               	movlw	0
  3862  002BE8  0100               	movlb	0	; () banked
  3863  002BEA  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  3864  002BEC  0E00               	movlw	0
  3865  002BEE  0100               	movlb	0	; () banked
  3866  002BF0  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869  002BF2  0012               	return	
  3870  002BF4                     l5702:
  3871                           
  3872                           ; BSR set to: 0
  3873  002BF4  C071  F072         	movff	___ftdiv@f2+2,??___ftdiv
  3874  002BF8  0100               	movlb	0	; () banked
  3875  002BFA  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  3876  002BFC  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  3877  002BFE  0100               	movlb	0	; () banked
  3878  002C00  3570               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3879  002C02  0100               	movlb	0	; () banked
  3880  002C04  3772               	rlcf	??___ftdiv& (0+255),f,b
  3881  002C06  E301               	bnc	u5981
  3882  002C08  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  3883  002C0A                     u5981:
  3884  002C0A  0100               	movlb	0	; () banked
  3885  002C0C  5172               	movf	??___ftdiv& (0+255),w,b
  3886  002C0E  0100               	movlb	0	; () banked
  3887  002C10  6F7A               	movwf	___ftdiv@sign& (0+255),b
  3888  002C12  0100               	movlb	0	; () banked
  3889  002C14  517A               	movf	___ftdiv@sign& (0+255),w,b
  3890  002C16  A4D8               	btfss	status,2,c
  3891  002C18  D00A               	goto	l5708
  3892                           
  3893                           ; BSR set to: 0
  3894  002C1A  0E00               	movlw	0
  3895  002C1C  0100               	movlb	0	; () banked
  3896  002C1E  6F6C               	movwf	?___ftdiv& (0+255),b
  3897  002C20  0E00               	movlw	0
  3898  002C22  0100               	movlb	0	; () banked
  3899  002C24  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  3900  002C26  0E00               	movlw	0
  3901  002C28  0100               	movlb	0	; () banked
  3902  002C2A  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905  002C2C  0012               	return	
  3906  002C2E                     l5708:
  3907                           
  3908                           ; BSR set to: 0
  3909  002C2E  0E00               	movlw	0
  3910  002C30  0100               	movlb	0	; () banked
  3911  002C32  6F76               	movwf	___ftdiv@f3& (0+255),b
  3912  002C34  0E00               	movlw	0
  3913  002C36  0100               	movlb	0	; () banked
  3914  002C38  6F77               	movwf	(___ftdiv@f3+1)& (0+255),b
  3915  002C3A  0E00               	movlw	0
  3916  002C3C  0100               	movlb	0	; () banked
  3917  002C3E  6F78               	movwf	(___ftdiv@f3+2)& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920  002C40  0100               	movlb	0	; () banked
  3921  002C42  517A               	movf	___ftdiv@sign& (0+255),w,b
  3922  002C44  0F89               	addlw	137
  3923  002C46  0100               	movlb	0	; () banked
  3924  002C48  5F79               	subwf	___ftdiv@exp& (0+255),f,b
  3925                           
  3926                           ; BSR set to: 0
  3927  002C4A  C06E  F07A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3928                           
  3929                           ; BSR set to: 0
  3930  002C4E  0100               	movlb	0	; () banked
  3931  002C50  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3932  002C52  0100               	movlb	0	; () banked
  3933  002C54  1B7A               	xorwf	___ftdiv@sign& (0+255),f,b
  3934                           
  3935                           ; BSR set to: 0
  3936  002C56  0E80               	movlw	128
  3937  002C58  0100               	movlb	0	; () banked
  3938  002C5A  177A               	andwf	___ftdiv@sign& (0+255),f,b
  3939                           
  3940                           ; BSR set to: 0
  3941  002C5C  0100               	movlb	0	; () banked
  3942  002C5E  8F6D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3943                           
  3944                           ; BSR set to: 0
  3945  002C60  0EFF               	movlw	255
  3946  002C62  0100               	movlb	0	; () banked
  3947  002C64  176C               	andwf	___ftdiv@f1& (0+255),f,b
  3948  002C66  0EFF               	movlw	255
  3949  002C68  0100               	movlb	0	; () banked
  3950  002C6A  176D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3951  002C6C  0E00               	movlw	0
  3952  002C6E  0100               	movlb	0	; () banked
  3953  002C70  176E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3954                           
  3955                           ; BSR set to: 0
  3956  002C72  0100               	movlb	0	; () banked
  3957  002C74  8F70               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3958                           
  3959                           ; BSR set to: 0
  3960  002C76  0EFF               	movlw	255
  3961  002C78  0100               	movlb	0	; () banked
  3962  002C7A  176F               	andwf	___ftdiv@f2& (0+255),f,b
  3963  002C7C  0EFF               	movlw	255
  3964  002C7E  0100               	movlb	0	; () banked
  3965  002C80  1770               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3966  002C82  0E00               	movlw	0
  3967  002C84  0100               	movlb	0	; () banked
  3968  002C86  1771               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3969                           
  3970                           ; BSR set to: 0
  3971  002C88  0E18               	movlw	24
  3972  002C8A  0100               	movlb	0	; () banked
  3973  002C8C  6F75               	movwf	___ftdiv@cntr& (0+255),b
  3974  002C8E                     l5728:
  3975                           
  3976                           ; BSR set to: 0
  3977  002C8E  0100               	movlb	0	; () banked
  3978  002C90  90D8               	bcf	status,0,c
  3979  002C92  3776               	rlcf	___ftdiv@f3& (0+255),f,b
  3980  002C94  3777               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3981  002C96  3778               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3982                           
  3983                           ; BSR set to: 0
  3984  002C98  0100               	movlb	0	; () banked
  3985  002C9A  516F               	movf	___ftdiv@f2& (0+255),w,b
  3986  002C9C  0100               	movlb	0	; () banked
  3987  002C9E  5D6C               	subwf	___ftdiv@f1& (0+255),w,b
  3988  002CA0  0100               	movlb	0	; () banked
  3989  002CA2  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3990  002CA4  0100               	movlb	0	; () banked
  3991  002CA6  596D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3992  002CA8  0100               	movlb	0	; () banked
  3993  002CAA  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3994  002CAC  0100               	movlb	0	; () banked
  3995  002CAE  596E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3996  002CB0  A0D8               	btfss	status,0,c
  3997  002CB2  D00E               	goto	l878
  3998                           
  3999                           ; BSR set to: 0
  4000  002CB4  0100               	movlb	0	; () banked
  4001  002CB6  516F               	movf	___ftdiv@f2& (0+255),w,b
  4002  002CB8  0100               	movlb	0	; () banked
  4003  002CBA  5F6C               	subwf	___ftdiv@f1& (0+255),f,b
  4004  002CBC  0100               	movlb	0	; () banked
  4005  002CBE  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4006  002CC0  0100               	movlb	0	; () banked
  4007  002CC2  5B6D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4008  002CC4  0100               	movlb	0	; () banked
  4009  002CC6  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4010  002CC8  0100               	movlb	0	; () banked
  4011  002CCA  5B6E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4012                           
  4013                           ; BSR set to: 0
  4014  002CCC  0100               	movlb	0	; () banked
  4015  002CCE  8176               	bsf	___ftdiv@f3& (0+255),0,b
  4016  002CD0                     l878:
  4017                           
  4018                           ; BSR set to: 0
  4019  002CD0  0100               	movlb	0	; () banked
  4020  002CD2  90D8               	bcf	status,0,c
  4021  002CD4  376C               	rlcf	___ftdiv@f1& (0+255),f,b
  4022  002CD6  376D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4023  002CD8  376E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4024                           
  4025                           ; BSR set to: 0
  4026  002CDA  0100               	movlb	0	; () banked
  4027  002CDC  2F75               	decfsz	___ftdiv@cntr& (0+255),f,b
  4028  002CDE  D7D7               	goto	l5728
  4029                           
  4030                           ; BSR set to: 0
  4031                           
  4032                           ; BSR set to: 0
  4033  002CE0  C076  F060         	movff	___ftdiv@f3,___ftpack@arg
  4034  002CE4  C077  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4035  002CE8  C078  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4036  002CEC  C079  F063         	movff	___ftdiv@exp,___ftpack@exp
  4037  002CF0  C07A  F064         	movff	___ftdiv@sign,___ftpack@sign
  4038  002CF4  ECAE  F017         	call	___ftpack	;wreg free
  4039  002CF8  C060  F06C         	movff	?___ftpack,?___ftdiv
  4040  002CFC  C061  F06D         	movff	?___ftpack+1,?___ftdiv+1
  4041  002D00  C062  F06E         	movff	?___ftpack+2,?___ftdiv+2
  4042  002D04  0012               	return	
  4043  002D06                     __end_of___ftdiv:
  4044                           	opt stack 0
  4045                           tblptru	equ	0xFF8
  4046                           tblptrh	equ	0xFF7
  4047                           tblptrl	equ	0xFF6
  4048                           tablat	equ	0xFF5
  4049                           intcon	equ	0xFF2
  4050                           postinc0	equ	0xFEE
  4051                           wreg	equ	0xFE8
  4052                           postdec1	equ	0xFE5
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           postinc2	equ	0xFDE
  4056                           postdec2	equ	0xFDD
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function ___awtoft *****************
  4062 ;; Defined at:
  4063 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  c               2    8[BANK0 ] int 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  sign            1   11[BANK0 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  3    8[BANK0 ] float 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4077 ;;      Params:         0       3       0       0       0       0       0
  4078 ;;      Locals:         0       1       0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0
  4080 ;;      Totals:         0       4       0       0       0       0       0
  4081 ;;Total ram usage:        4 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    3
  4084 ;; This function calls:
  4085 ;;		___ftpack
  4086 ;; This function is called by:
  4087 ;;		_util_getTemperature
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text12
  4092  003A6C                     __ptext12:
  4093                           	opt stack 0
  4094  003A6C                     ___awtoft:
  4095                           	opt stack 25
  4096                           
  4097                           ;incstack = 0
  4098  003A6C  0E00               	movlw	0
  4099  003A6E  0100               	movlb	0	; () banked
  4100  003A70  6F6B               	movwf	___awtoft@sign& (0+255),b
  4101                           
  4102                           ; BSR set to: 0
  4103  003A72  0100               	movlb	0	; () banked
  4104  003A74  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  4105  003A76  D008               	goto	l5750
  4106                           
  4107                           ; BSR set to: 0
  4108  003A78  0100               	movlb	0	; () banked
  4109  003A7A  6D68               	negf	___awtoft@c& (0+255),b
  4110  003A7C  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  4111  003A7E  B0D8               	btfsc	status,0,c
  4112  003A80  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  4113                           
  4114                           ; BSR set to: 0
  4115  003A82  0E01               	movlw	1
  4116  003A84  0100               	movlb	0	; () banked
  4117  003A86  6F6B               	movwf	___awtoft@sign& (0+255),b
  4118  003A88                     l5750:
  4119                           
  4120                           ; BSR set to: 0
  4121  003A88  C068  F060         	movff	___awtoft@c,___ftpack@arg
  4122  003A8C  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  4123  003A90  0100               	movlb	0	; () banked
  4124  003A92  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4125  003A94  0E8E               	movlw	142
  4126  003A96  0100               	movlb	0	; () banked
  4127  003A98  6F63               	movwf	___ftpack@exp& (0+255),b
  4128  003A9A  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  4129  003A9E  ECAE  F017         	call	___ftpack	;wreg free
  4130  003AA2  C060  F068         	movff	?___ftpack,?___awtoft
  4131  003AA6  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  4132  003AAA  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  4133  003AAE  0012               	return	
  4134  003AB0                     __end_of___awtoft:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           intcon	equ	0xFF2
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           postdec1	equ	0xFE5
  4144                           fsr1h	equ	0xFE2
  4145                           fsr1l	equ	0xFE1
  4146                           postinc2	equ	0xFDE
  4147                           postdec2	equ	0xFDD
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _util_getSolarCurrent *****************
  4153 ;; Defined at:
  4154 ;;		line 52 in file "easat2_util_inputs.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  solarCurrent    3   62[BANK0 ] float 
  4159 ;;  value           3   59[BANK0 ] float 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2   57[BANK0 ] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4169 ;;      Params:         0       2       0       0       0       0       0
  4170 ;;      Locals:         0       6       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0
  4172 ;;      Totals:         0       8       0       0       0       0       0
  4173 ;;Total ram usage:        8 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    4
  4176 ;; This function calls:
  4177 ;;		___ftmul
  4178 ;;		___fttol
  4179 ;;		___lwtoft
  4180 ;; This function is called by:
  4181 ;;		_main_loop
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text13
  4186  003068                     __ptext13:
  4187                           	opt stack 0
  4188  003068                     _util_getSolarCurrent:
  4189                           	opt stack 25
  4190                           
  4191                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4192                           
  4193                           ;incstack = 0
  4194  003068  0E00               	movlw	0
  4195  00306A  0100               	movlb	0	; () banked
  4196  00306C  6F9B               	movwf	util_getSolarCurrent@value& (0+255),b
  4197  00306E  0E00               	movlw	0
  4198  003070  0100               	movlb	0	; () banked
  4199  003072  6F9C               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4200  003074  0E00               	movlw	0
  4201  003076  0100               	movlb	0	; () banked
  4202  003078  6F9D               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4203  00307A  0E00               	movlw	0
  4204  00307C  0100               	movlb	0	; () banked
  4205  00307E  6F9E               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4206  003080  0E00               	movlw	0
  4207  003082  0100               	movlb	0	; () banked
  4208  003084  6F9F               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4209  003086  0E00               	movlw	0
  4210  003088  0100               	movlb	0	; () banked
  4211  00308A  6FA0               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4215  00308C  84C2               	bsf	4034,2,c	;volatile
  4216  00308E  96C2               	bcf	4034,3,c	;volatile
  4217  003090  98C2               	bcf	4034,4,c	;volatile
  4218  003092  9AC2               	bcf	4034,5,c	;volatile
  4219  003094  9CC2               	bcf	4034,6,c	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4223  003096  80C2               	bsf	4034,0,c	;volatile
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4227  003098  9C9E               	bcf	3998,6,c	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4231  00309A  82C2               	bsf	4034,1,c	;volatile
  4232  00309C                     l129:
  4233  00309C  AC9E               	btfss	3998,6,c	;volatile
  4234  00309E  D7FE               	goto	l129
  4235                           
  4236                           ;easat2_util_inputs.c: 63: value = ADRES;
  4237  0030A0  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4238  0030A4  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4239  0030A8  EC71  F01E         	call	___lwtoft	;wreg free
  4240  0030AC  C068  F09B         	movff	?___lwtoft,util_getSolarCurrent@value
  4241  0030B0  C069  F09C         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4242  0030B4  C06A  F09D         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4243                           
  4244                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4245  0030B8  9C9E               	bcf	3998,6,c	;volatile
  4246                           
  4247                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4248  0030BA  90C2               	bcf	4034,0,c	;volatile
  4249                           
  4250                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4251  0030BC  C09B  F074         	movff	util_getSolarCurrent@value,___ftmul@f1
  4252  0030C0  C09C  F075         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4253  0030C4  C09D  F076         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4254  0030C8  0E33               	movlw	51
  4255  0030CA  0100               	movlb	0	; () banked
  4256  0030CC  6F77               	movwf	___ftmul@f2& (0+255),b
  4257  0030CE  0E03               	movlw	3
  4258  0030D0  0100               	movlb	0	; () banked
  4259  0030D2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4260  0030D4  0E3B               	movlw	59
  4261  0030D6  0100               	movlb	0	; () banked
  4262  0030D8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4263  0030DA  EC2E  F015         	call	___ftmul	;wreg free
  4264  0030DE  C074  F09E         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4265  0030E2  C075  F09F         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4266  0030E6  C076  F0A0         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4267                           
  4268                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4269  0030EA  C09E  F074         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4270  0030EE  C09F  F075         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4271  0030F2  C0A0  F076         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4272  0030F6  0E00               	movlw	0
  4273  0030F8  0100               	movlb	0	; () banked
  4274  0030FA  6F77               	movwf	___ftmul@f2& (0+255),b
  4275  0030FC  0E80               	movlw	128
  4276  0030FE  0100               	movlb	0	; () banked
  4277  003100  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4278  003102  0E3F               	movlw	63
  4279  003104  0100               	movlb	0	; () banked
  4280  003106  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4281  003108  EC2E  F015         	call	___ftmul	;wreg free
  4282  00310C  C074  F09E         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4283  003110  C075  F09F         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4284  003114  C076  F0A0         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4285                           
  4286                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4287  003118  C09E  F08A         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4288  00311C  C09F  F08B         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4289  003120  C0A0  F08C         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4290  003124  EC83  F016         	call	___fttol	;wreg free
  4291  003128  C08A  F099         	movff	?___fttol,?_util_getSolarCurrent
  4292  00312C  C08B  F09A         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4293  003130  0012               	return	
  4294  003132                     __end_of_util_getSolarCurrent:
  4295                           	opt stack 0
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           intcon	equ	0xFF2
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           postdec1	equ	0xFE5
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           postinc2	equ	0xFDE
  4307                           postdec2	equ	0xFDD
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8
  4311                           
  4312 ;; *************** function _util_getBatteryVoltage *****************
  4313 ;; Defined at:
  4314 ;;		line 19 in file "easat2_util_inputs.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  voltage         3   41[BANK0 ] float 
  4319 ;;  value           3   38[BANK0 ] float 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  3   35[BANK0 ] float 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4329 ;;      Params:         0       3       0       0       0       0       0
  4330 ;;      Locals:         0       6       0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0
  4332 ;;      Totals:         0       9       0       0       0       0       0
  4333 ;;Total ram usage:        9 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    4
  4336 ;; This function calls:
  4337 ;;		___ftmul
  4338 ;;		___lwtoft
  4339 ;; This function is called by:
  4340 ;;		_main_loop
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text14
  4345  0032C4                     __ptext14:
  4346                           	opt stack 0
  4347  0032C4                     _util_getBatteryVoltage:
  4348                           	opt stack 25
  4349                           
  4350                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4351                           
  4352                           ;incstack = 0
  4353  0032C4  0E00               	movlw	0
  4354  0032C6  0100               	movlb	0	; () banked
  4355  0032C8  6F86               	movwf	util_getBatteryVoltage@value& (0+255),b
  4356  0032CA  0E00               	movlw	0
  4357  0032CC  0100               	movlb	0	; () banked
  4358  0032CE  6F87               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4359  0032D0  0E00               	movlw	0
  4360  0032D2  0100               	movlb	0	; () banked
  4361  0032D4  6F88               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4362  0032D6  0E00               	movlw	0
  4363  0032D8  0100               	movlb	0	; () banked
  4364  0032DA  6F89               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4365  0032DC  0E00               	movlw	0
  4366  0032DE  0100               	movlb	0	; () banked
  4367  0032E0  6F8A               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4368  0032E2  0E00               	movlw	0
  4369  0032E4  0100               	movlb	0	; () banked
  4370  0032E6  6F8B               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4374  0032E8  94C2               	bcf	4034,2,c	;volatile
  4375  0032EA  96C2               	bcf	4034,3,c	;volatile
  4376  0032EC  98C2               	bcf	4034,4,c	;volatile
  4377  0032EE  9AC2               	bcf	4034,5,c	;volatile
  4378  0032F0  9CC2               	bcf	4034,6,c	;volatile
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4382  0032F2  80C2               	bsf	4034,0,c	;volatile
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4386  0032F4  9C9E               	bcf	3998,6,c	;volatile
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4390  0032F6  82C2               	bsf	4034,1,c	;volatile
  4391  0032F8                     l123:
  4392  0032F8  AC9E               	btfss	3998,6,c	;volatile
  4393  0032FA  D7FE               	goto	l123
  4394                           
  4395                           ;easat2_util_inputs.c: 30: value = ADRES;
  4396  0032FC  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4397  003300  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4398  003304  EC71  F01E         	call	___lwtoft	;wreg free
  4399  003308  C068  F086         	movff	?___lwtoft,util_getBatteryVoltage@value
  4400  00330C  C069  F087         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4401  003310  C06A  F088         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4402                           
  4403                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4404  003314  9C9E               	bcf	3998,6,c	;volatile
  4405                           
  4406                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4407  003316  90C2               	bcf	4034,0,c	;volatile
  4408                           
  4409                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4410  003318  C086  F074         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4411  00331C  C087  F075         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4412  003320  C088  F076         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4413  003324  0E33               	movlw	51
  4414  003326  0100               	movlb	0	; () banked
  4415  003328  6F77               	movwf	___ftmul@f2& (0+255),b
  4416  00332A  0E03               	movlw	3
  4417  00332C  0100               	movlb	0	; () banked
  4418  00332E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4419  003330  0E3B               	movlw	59
  4420  003332  0100               	movlb	0	; () banked
  4421  003334  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4422  003336  EC2E  F015         	call	___ftmul	;wreg free
  4423  00333A  C074  F089         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4424  00333E  C075  F08A         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4425  003342  C076  F08B         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4426                           
  4427                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4428  003346  C089  F074         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4429  00334A  C08A  F075         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4430  00334E  C08B  F076         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4431  003352  0E66               	movlw	102
  4432  003354  0100               	movlb	0	; () banked
  4433  003356  6F77               	movwf	___ftmul@f2& (0+255),b
  4434  003358  0EB6               	movlw	182
  4435  00335A  0100               	movlb	0	; () banked
  4436  00335C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4437  00335E  0E40               	movlw	64
  4438  003360  0100               	movlb	0	; () banked
  4439  003362  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4440  003364  EC2E  F015         	call	___ftmul	;wreg free
  4441  003368  C074  F089         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4442  00336C  C075  F08A         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4443  003370  C076  F08B         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4444                           
  4445                           ;easat2_util_inputs.c: 46: return voltage;
  4446  003374  C089  F083         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4447  003378  C08A  F084         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4448  00337C  C08B  F085         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4449  003380  0012               	return	
  4450  003382                     __end_of_util_getBatteryVoltage:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           intcon	equ	0xFF2
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           postdec1	equ	0xFE5
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           postinc2	equ	0xFDE
  4463                           postdec2	equ	0xFDD
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _util_getBatteryCurrent *****************
  4469 ;; Defined at:
  4470 ;;		line 85 in file "easat2_util_inputs.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  batteryCurre    3   62[BANK0 ] float 
  4475 ;;  value           3   59[BANK0 ] float 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2   57[BANK0 ] int 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4485 ;;      Params:         0       2       0       0       0       0       0
  4486 ;;      Locals:         0       6       0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0
  4488 ;;      Totals:         0       8       0       0       0       0       0
  4489 ;;Total ram usage:        8 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		___ftmul
  4494 ;;		___fttol
  4495 ;;		___lwtoft
  4496 ;; This function is called by:
  4497 ;;		_main_loop
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text15
  4502  003132                     __ptext15:
  4503                           	opt stack 0
  4504  003132                     _util_getBatteryCurrent:
  4505                           	opt stack 25
  4506                           
  4507                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4508                           
  4509                           ;incstack = 0
  4510  003132  0E00               	movlw	0
  4511  003134  0100               	movlb	0	; () banked
  4512  003136  6F9B               	movwf	util_getBatteryCurrent@value& (0+255),b
  4513  003138  0E00               	movlw	0
  4514  00313A  0100               	movlb	0	; () banked
  4515  00313C  6F9C               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4516  00313E  0E00               	movlw	0
  4517  003140  0100               	movlb	0	; () banked
  4518  003142  6F9D               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4519  003144  0E00               	movlw	0
  4520  003146  0100               	movlb	0	; () banked
  4521  003148  6F9E               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4522  00314A  0E00               	movlw	0
  4523  00314C  0100               	movlb	0	; () banked
  4524  00314E  6F9F               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4525  003150  0E00               	movlw	0
  4526  003152  0100               	movlb	0	; () banked
  4527  003154  6FA0               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4531  003156  94C2               	bcf	4034,2,c	;volatile
  4532  003158  96C2               	bcf	4034,3,c	;volatile
  4533  00315A  88C2               	bsf	4034,4,c	;volatile
  4534  00315C  8AC2               	bsf	4034,5,c	;volatile
  4535  00315E  9CC2               	bcf	4034,6,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4539  003160  80C2               	bsf	4034,0,c	;volatile
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4543  003162  9C9E               	bcf	3998,6,c	;volatile
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4547  003164  82C2               	bsf	4034,1,c	;volatile
  4548  003166                     l135:
  4549  003166  AC9E               	btfss	3998,6,c	;volatile
  4550  003168  D7FE               	goto	l135
  4551                           
  4552                           ;easat2_util_inputs.c: 96: value = ADRES;
  4553  00316A  CFC3 F068          	movff	4035,___lwtoft@c	;volatile
  4554  00316E  CFC4 F069          	movff	4036,___lwtoft@c+1	;volatile
  4555  003172  EC71  F01E         	call	___lwtoft	;wreg free
  4556  003176  C068  F09B         	movff	?___lwtoft,util_getBatteryCurrent@value
  4557  00317A  C069  F09C         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4558  00317E  C06A  F09D         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4559                           
  4560                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4561  003182  9C9E               	bcf	3998,6,c	;volatile
  4562                           
  4563                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4564  003184  90C2               	bcf	4034,0,c	;volatile
  4565                           
  4566                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4567  003186  C09B  F074         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4568  00318A  C09C  F075         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4569  00318E  C09D  F076         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4570  003192  0E33               	movlw	51
  4571  003194  0100               	movlb	0	; () banked
  4572  003196  6F77               	movwf	___ftmul@f2& (0+255),b
  4573  003198  0E03               	movlw	3
  4574  00319A  0100               	movlb	0	; () banked
  4575  00319C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4576  00319E  0E3B               	movlw	59
  4577  0031A0  0100               	movlb	0	; () banked
  4578  0031A2  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4579  0031A4  EC2E  F015         	call	___ftmul	;wreg free
  4580  0031A8  C074  F09E         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4581  0031AC  C075  F09F         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4582  0031B0  C076  F0A0         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4583                           
  4584                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4585  0031B4  C09E  F074         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4586  0031B8  C09F  F075         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4587  0031BC  C0A0  F076         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4588  0031C0  0E00               	movlw	0
  4589  0031C2  0100               	movlb	0	; () banked
  4590  0031C4  6F77               	movwf	___ftmul@f2& (0+255),b
  4591  0031C6  0E80               	movlw	128
  4592  0031C8  0100               	movlb	0	; () banked
  4593  0031CA  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4594  0031CC  0E3F               	movlw	63
  4595  0031CE  0100               	movlb	0	; () banked
  4596  0031D0  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4597  0031D2  EC2E  F015         	call	___ftmul	;wreg free
  4598  0031D6  C074  F09E         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4599  0031DA  C075  F09F         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4600  0031DE  C076  F0A0         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4601                           
  4602                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4603  0031E2  C09E  F08A         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4604  0031E6  C09F  F08B         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4605  0031EA  C0A0  F08C         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4606  0031EE  EC83  F016         	call	___fttol	;wreg free
  4607  0031F2  C08A  F099         	movff	?___fttol,?_util_getBatteryCurrent
  4608  0031F6  C08B  F09A         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4609  0031FA  0012               	return	
  4610  0031FC                     __end_of_util_getBatteryCurrent:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           intcon	equ	0xFF2
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function ___lwtoft *****************
  4629 ;; Defined at:
  4630 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  c               2    8[BANK0 ] unsigned int 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  3    8[BANK0 ] float 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         0       3       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0
  4647 ;;      Totals:         0       3       0       0       0       0       0
  4648 ;;Total ram usage:        3 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		___ftpack
  4653 ;; This function is called by:
  4654 ;;		_util_getBatteryVoltage
  4655 ;;		_util_getSolarCurrent
  4656 ;;		_util_getBatteryCurrent
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text16
  4661  003CE2                     __ptext16:
  4662                           	opt stack 0
  4663  003CE2                     ___lwtoft:
  4664                           	opt stack 25
  4665                           
  4666                           ;incstack = 0
  4667  003CE2  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4668  003CE6  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4669  003CEA  0100               	movlb	0	; () banked
  4670  003CEC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4671  003CEE  0E8E               	movlw	142
  4672  003CF0  0100               	movlb	0	; () banked
  4673  003CF2  6F63               	movwf	___ftpack@exp& (0+255),b
  4674  003CF4  0E00               	movlw	0
  4675  003CF6  0100               	movlb	0	; () banked
  4676  003CF8  6F64               	movwf	___ftpack@sign& (0+255),b
  4677  003CFA  ECAE  F017         	call	___ftpack	;wreg free
  4678  003CFE  C060  F068         	movff	?___ftpack,?___lwtoft
  4679  003D02  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4680  003D06  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4681  003D0A  0012               	return	
  4682  003D0C                     __end_of___lwtoft:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           intcon	equ	0xFF2
  4689                           postinc0	equ	0xFEE
  4690                           wreg	equ	0xFE8
  4691                           postdec1	equ	0xFE5
  4692                           fsr1h	equ	0xFE2
  4693                           fsr1l	equ	0xFE1
  4694                           postinc2	equ	0xFDE
  4695                           postdec2	equ	0xFDD
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _util_beacon_transmission *****************
  4701 ;; Defined at:
  4702 ;;		line 22 in file "easat2_util_transmission.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  battery_volt    3  108[BANK0 ] float 
  4705 ;;  solar_curren    2  111[BANK0 ] int 
  4706 ;;  battery_curr    2  113[BANK0 ] int 
  4707 ;;  temperature     3  115[BANK0 ] float 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  i               2  192[BANK1 ] int 
  4710 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4711 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4721 ;;      Params:         0      10       0       0       0       0       0
  4722 ;;      Locals:         0       0     194       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0
  4724 ;;      Totals:         0      10     194       0       0       0       0
  4725 ;;Total ram usage:      204 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    6
  4728 ;; This function calls:
  4729 ;;		_memset
  4730 ;;		_sprintf
  4731 ;;		_strcat
  4732 ;;		_strcpy
  4733 ;;		_strlen
  4734 ;;		_util_transmit_letter
  4735 ;; This function is called by:
  4736 ;;		_main_loop
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text17
  4741  002E4A                     __ptext17:
  4742                           	opt stack 0
  4743  002E4A                     _util_beacon_transmission:
  4744                           	opt stack 23
  4745                           
  4746                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4747                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4748                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4749                           
  4750                           ;incstack = 0
  4751  002E4A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4752  002E4C  0100               	movlb	0	; () banked
  4753  002E4E  6F60               	movwf	memset@p1& (0+255),b
  4754  002E50  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4755  002E52  0100               	movlb	0	; () banked
  4756  002E54  6F61               	movwf	(memset@p1+1)& (0+255),b
  4757  002E56  0E00               	movlw	0
  4758  002E58  0100               	movlb	0	; () banked
  4759  002E5A  6F63               	movwf	(memset@c+1)& (0+255),b
  4760  002E5C  0E00               	movlw	0
  4761  002E5E  6F62               	movwf	memset@c& (0+255),b
  4762  002E60  0E00               	movlw	0
  4763  002E62  0100               	movlb	0	; () banked
  4764  002E64  6F65               	movwf	(memset@n+1)& (0+255),b
  4765  002E66  0E80               	movlw	128
  4766  002E68  6F64               	movwf	memset@n& (0+255),b
  4767  002E6A  EC25  F01E         	call	_memset	;wreg free
  4768                           
  4769                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4770  002E6E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4771  002E70  0100               	movlb	0	; () banked
  4772  002E72  6F60               	movwf	strcpy@to& (0+255),b
  4773  002E74  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4774  002E76  0100               	movlb	0	; () banked
  4775  002E78  6F61               	movwf	(strcpy@to+1)& (0+255),b
  4776  002E7A  0E9E               	movlw	low STR_1
  4777  002E7C  0100               	movlb	0	; () banked
  4778  002E7E  6F62               	movwf	strcpy@from& (0+255),b
  4779  002E80  0E7F               	movlw	high STR_1
  4780  002E82  0100               	movlb	0	; () banked
  4781  002E84  6F63               	movwf	(strcpy@from+1)& (0+255),b
  4782  002E86  EC0B  F01E         	call	_strcpy	;wreg free
  4783                           
  4784                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4785  002E8A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4786  002E8C  0100               	movlb	0	; () banked
  4787  002E8E  6F60               	movwf	memset@p1& (0+255),b
  4788  002E90  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4789  002E92  0100               	movlb	0	; () banked
  4790  002E94  6F61               	movwf	(memset@p1+1)& (0+255),b
  4791  002E96  0E00               	movlw	0
  4792  002E98  0100               	movlb	0	; () banked
  4793  002E9A  6F63               	movwf	(memset@c+1)& (0+255),b
  4794  002E9C  0E00               	movlw	0
  4795  002E9E  6F62               	movwf	memset@c& (0+255),b
  4796  002EA0  0E00               	movlw	0
  4797  002EA2  0100               	movlb	0	; () banked
  4798  002EA4  6F65               	movwf	(memset@n+1)& (0+255),b
  4799  002EA6  0E40               	movlw	64
  4800  002EA8  6F64               	movwf	memset@n& (0+255),b
  4801  002EAA  EC25  F01E         	call	_memset	;wreg free
  4802                           
  4803                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4804                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4805  002EAE  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4806  002EB0  0100               	movlb	0	; () banked
  4807  002EB2  6F9F               	movwf	sprintf@sp& (0+255),b
  4808  002EB4  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4809  002EB6  0100               	movlb	0	; () banked
  4810  002EB8  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  4811  002EBA  0E6B               	movlw	low STR_2
  4812  002EBC  0100               	movlb	0	; () banked
  4813  002EBE  6FA1               	movwf	sprintf@f& (0+255),b
  4814  002EC0  0E7F               	movlw	high STR_2
  4815  002EC2  0100               	movlb	0	; () banked
  4816  002EC4  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  4817  002EC6  C0D3  F0A3         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4818  002ECA  C0D4  F0A4         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4819  002ECE  C0D5  F0A5         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4820  002ED2  C0CC  F0A6         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4821  002ED6  C0CD  F0A7         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4822  002EDA  C0CE  F0A8         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4823  002EDE  C0CF  F0A9         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4824  002EE2  C0D0  F0AA         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4825  002EE6  C0D1  F0AB         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4826  002EEA  C0D2  F0AC         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4827  002EEE  EC55  F000         	call	_sprintf	;wreg free
  4828                           
  4829                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4830  002EF2  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4831  002EF4  0100               	movlb	0	; () banked
  4832  002EF6  6F60               	movwf	strcat@to& (0+255),b
  4833  002EF8  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4834  002EFA  0100               	movlb	0	; () banked
  4835  002EFC  6F61               	movwf	(strcat@to+1)& (0+255),b
  4836  002EFE  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4837  002F00  0100               	movlb	0	; () banked
  4838  002F02  6F62               	movwf	strcat@from& (0+255),b
  4839  002F04  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4840  002F06  0100               	movlb	0	; () banked
  4841  002F08  6F63               	movwf	(strcat@from+1)& (0+255),b
  4842  002F0A  EC12  F01D         	call	_strcat	;wreg free
  4843                           
  4844                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4845  002F0E  0E00               	movlw	0
  4846  002F10  0101               	movlb	1	; () banked
  4847  002F12  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4848  002F14  0E00               	movlw	0
  4849  002F16  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4850  002F18  D00E               	goto	l5978
  4851  002F1A                     l5974:
  4852                           
  4853                           ; BSR set to: 1
  4854                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4855  002F1A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4856  002F1C  0101               	movlb	1	; () banked
  4857  002F1E  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4858  002F20  6ED9               	movwf	fsr2l,c
  4859  002F22  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4860  002F24  0101               	movlb	1	; () banked
  4861  002F26  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4862  002F28  6EDA               	movwf	fsr2h,c
  4863  002F2A  50DF               	movf	indf2,w,c
  4864  002F2C  EC50  F00C         	call	_util_transmit_letter
  4865  002F30  0101               	movlb	1	; () banked
  4866  002F32  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4867  002F34  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4868  002F36                     l5978:
  4869                           
  4870                           ; BSR set to: 1
  4871  002F36  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4872  002F38  0100               	movlb	0	; () banked
  4873  002F3A  6F60               	movwf	strlen@s& (0+255),b
  4874  002F3C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4875  002F3E  0100               	movlb	0	; () banked
  4876  002F40  6F61               	movwf	(strlen@s+1)& (0+255),b
  4877  002F42  EC6E  F01C         	call	_strlen	;wreg free
  4878  002F46  0100               	movlb	0	; () banked
  4879  002F48  5160               	movf	?_strlen& (0+255),w,b
  4880  002F4A  0101               	movlb	1	; () banked
  4881  002F4C  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4882  002F4E  0100               	movlb	0	; () banked
  4883  002F50  5161               	movf	(?_strlen+1)& (0+255),w,b
  4884  002F52  0101               	movlb	1	; () banked
  4885  002F54  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4886  002F56  B0D8               	btfsc	status,0,c
  4887  002F58  0012               	return	
  4888  002F5A  D7DF               	goto	l5974
  4889  002F5C                     __end_of_util_beacon_transmission:
  4890                           	opt stack 0
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           intcon	equ	0xFF2
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           postdec1	equ	0xFE5
  4899                           fsr1h	equ	0xFE2
  4900                           fsr1l	equ	0xFE1
  4901                           indf2	equ	0xFDF
  4902                           postinc2	equ	0xFDE
  4903                           postdec2	equ	0xFDD
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function _util_transmit_letter *****************
  4909 ;; Defined at:
  4910 ;;		line 53 in file "easat2_util_transmission.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  letter          1    wreg     unsigned char 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  letter          1   12[BANK0 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4924 ;;      Params:         0       0       0       0       0       0       0
  4925 ;;      Locals:         0       1       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0
  4927 ;;      Totals:         0       1       0       0       0       0       0
  4928 ;;Total ram usage:        1 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    5
  4931 ;; This function calls:
  4932 ;;		_util_transmit_morse_sequence
  4933 ;;		_util_transmit_space_between_letters
  4934 ;;		_util_transmit_space_between_words
  4935 ;; This function is called by:
  4936 ;;		_util_beacon_transmission
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text18
  4941  0018A0                     __ptext18:
  4942                           	opt stack 0
  4943  0018A0                     _util_transmit_letter:
  4944                           	opt stack 23
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;incstack = 0
  4948                           ;util_transmit_letter@letter stored from wreg
  4949  0018A0  0100               	movlb	0	; () banked
  4950  0018A2  6F6C               	movwf	util_transmit_letter@letter& (0+255),b
  4951                           
  4952                           ;easat2_util_transmission.c: 55: switch (letter) {
  4953  0018A4  D174               	goto	l5692
  4954  0018A6                     l5606:
  4955                           
  4956                           ;easat2_util_transmission.c: 61: util_transmit_morse_sequence((char*)".-");
  4957  0018A6  0EE8               	movlw	low (STR_19+2)
  4958  0018A8  0100               	movlb	0	; () banked
  4959  0018AA  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4960  0018AC  0E7F               	movlw	high (STR_19+2)
  4961  0018AE  0100               	movlb	0	; () banked
  4962  0018B0  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4963  0018B2  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4964                           
  4965                           ;easat2_util_transmission.c: 62: break;
  4966  0018B6  D1EB               	goto	l5694
  4967  0018B8                     l5608:
  4968                           
  4969                           ;easat2_util_transmission.c: 64: util_transmit_morse_sequence((char*)"-...");
  4970  0018B8  0ED0               	movlw	low (STR_36+1)
  4971  0018BA  0100               	movlb	0	; () banked
  4972  0018BC  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4973  0018BE  0E7F               	movlw	high (STR_36+1)
  4974  0018C0  0100               	movlb	0	; () banked
  4975  0018C2  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4976  0018C4  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4977                           
  4978                           ;easat2_util_transmission.c: 65: break;
  4979  0018C8  D1E2               	goto	l5694
  4980  0018CA                     l5610:
  4981                           
  4982                           ;easat2_util_transmission.c: 67: util_transmit_morse_sequence((char*)"-.-.");
  4983  0018CA  0EF5               	movlw	low STR_5
  4984  0018CC  0100               	movlb	0	; () banked
  4985  0018CE  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4986  0018D0  0E7F               	movlw	high STR_5
  4987  0018D2  0100               	movlb	0	; () banked
  4988  0018D4  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4989  0018D6  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4990                           
  4991                           ;easat2_util_transmission.c: 68: break;
  4992  0018DA  D1D9               	goto	l5694
  4993  0018DC                     l5612:
  4994                           
  4995                           ;easat2_util_transmission.c: 70: util_transmit_morse_sequence((char*)"-..");
  4996  0018DC  0ECB               	movlw	low (STR_37+2)
  4997  0018DE  0100               	movlb	0	; () banked
  4998  0018E0  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4999  0018E2  0E7F               	movlw	high (STR_37+2)
  5000  0018E4  0100               	movlb	0	; () banked
  5001  0018E6  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5002  0018E8  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5003                           
  5004                           ;easat2_util_transmission.c: 71: break;
  5005  0018EC  D1D0               	goto	l5694
  5006  0018EE                     l5614:
  5007                           
  5008                           ;easat2_util_transmission.c: 73: util_transmit_morse_sequence((char*)".");
  5009  0018EE  0EC1               	movlw	low (STR_38+4)
  5010  0018F0  0100               	movlb	0	; () banked
  5011  0018F2  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5012  0018F4  0E7F               	movlw	high (STR_38+4)
  5013  0018F6  0100               	movlb	0	; () banked
  5014  0018F8  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5015  0018FA  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5016                           
  5017                           ;easat2_util_transmission.c: 74: break;
  5018  0018FE  D1C7               	goto	l5694
  5019  001900                     l5616:
  5020                           
  5021                           ;easat2_util_transmission.c: 76: util_transmit_morse_sequence((char*)"..-.");
  5022  001900  0EC4               	movlw	low (STR_41+1)
  5023  001902  0100               	movlb	0	; () banked
  5024  001904  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5025  001906  0E7F               	movlw	high (STR_41+1)
  5026  001908  0100               	movlb	0	; () banked
  5027  00190A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5028  00190C  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5029                           
  5030                           ;easat2_util_transmission.c: 77: break;
  5031  001910  D1BE               	goto	l5694
  5032  001912                     l5618:
  5033                           
  5034                           ;easat2_util_transmission.c: 79: util_transmit_morse_sequence((char*)"--.");
  5035  001912  0EBF               	movlw	low (STR_38+2)
  5036  001914  0100               	movlb	0	; () banked
  5037  001916  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5038  001918  0E7F               	movlw	high (STR_38+2)
  5039  00191A  0100               	movlb	0	; () banked
  5040  00191C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5041  00191E  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5042                           
  5043                           ;easat2_util_transmission.c: 80: break;
  5044  001922  D1B5               	goto	l5694
  5045  001924                     l5620:
  5046                           
  5047                           ;easat2_util_transmission.c: 82: util_transmit_morse_sequence((char*)"....");
  5048  001924  0ED6               	movlw	low (STR_35+1)
  5049  001926  0100               	movlb	0	; () banked
  5050  001928  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5051  00192A  0E7F               	movlw	high (STR_35+1)
  5052  00192C  0100               	movlb	0	; () banked
  5053  00192E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5054  001930  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5055                           
  5056                           ;easat2_util_transmission.c: 83: break;
  5057  001934  D1AC               	goto	l5694
  5058  001936                     l5622:
  5059                           
  5060                           ;easat2_util_transmission.c: 85: util_transmit_morse_sequence((char*)"..");
  5061  001936  0ECC               	movlw	low (STR_37+3)
  5062  001938  0100               	movlb	0	; () banked
  5063  00193A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5064  00193C  0E7F               	movlw	high (STR_37+3)
  5065  00193E  0100               	movlb	0	; () banked
  5066  001940  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5067  001942  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5068                           
  5069                           ;easat2_util_transmission.c: 86: break;
  5070  001946  D1A3               	goto	l5694
  5071  001948                     l5624:
  5072                           
  5073                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".---");
  5074  001948  0EB2               	movlw	low (STR_31+1)
  5075  00194A  0100               	movlb	0	; () banked
  5076  00194C  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5077  00194E  0E7F               	movlw	high (STR_31+1)
  5078  001950  0100               	movlb	0	; () banked
  5079  001952  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5080  001954  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5081                           
  5082                           ;easat2_util_transmission.c: 89: break;
  5083  001958  D19A               	goto	l5694
  5084  00195A                     l5626:
  5085                           
  5086                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-.-");
  5087  00195A  0EE7               	movlw	low (STR_19+1)
  5088  00195C  0100               	movlb	0	; () banked
  5089  00195E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5090  001960  0E7F               	movlw	high (STR_19+1)
  5091  001962  0100               	movlb	0	; () banked
  5092  001964  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5093  001966  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5094                           
  5095                           ;easat2_util_transmission.c: 92: break;
  5096  00196A  D191               	goto	l5694
  5097  00196C                     l5628:
  5098                           
  5099                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)".-..");
  5100  00196C  0EFA               	movlw	low STR_14
  5101  00196E  0100               	movlb	0	; () banked
  5102  001970  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5103  001972  0E7F               	movlw	high STR_14
  5104  001974  0100               	movlb	0	; () banked
  5105  001976  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5106  001978  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5107                           
  5108                           ;easat2_util_transmission.c: 95: break;
  5109  00197C  D188               	goto	l5694
  5110  00197E                     l5630:
  5111                           
  5112                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"--");
  5113  00197E  0EA8               	movlw	low (STR_29+3)
  5114  001980  0100               	movlb	0	; () banked
  5115  001982  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5116  001984  0E7F               	movlw	high (STR_29+3)
  5117  001986  0100               	movlb	0	; () banked
  5118  001988  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5119  00198A  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5120                           
  5121                           ;easat2_util_transmission.c: 98: break;
  5122  00198E  D17F               	goto	l5694
  5123  001990                     l5632:
  5124                           
  5125                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)"-.");
  5126  001990  0EC0               	movlw	low (STR_38+3)
  5127  001992  0100               	movlb	0	; () banked
  5128  001994  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5129  001996  0E7F               	movlw	high (STR_38+3)
  5130  001998  0100               	movlb	0	; () banked
  5131  00199A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5132  00199C  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5133                           
  5134                           ;easat2_util_transmission.c: 101: break;
  5135  0019A0  D176               	goto	l5694
  5136  0019A2                     l5634:
  5137                           
  5138                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"---");
  5139  0019A2  0EA7               	movlw	low (STR_29+2)
  5140  0019A4  0100               	movlb	0	; () banked
  5141  0019A6  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5142  0019A8  0E7F               	movlw	high (STR_29+2)
  5143  0019AA  0100               	movlb	0	; () banked
  5144  0019AC  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5145  0019AE  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5146                           
  5147                           ;easat2_util_transmission.c: 104: break;
  5148  0019B2  D16D               	goto	l5694
  5149  0019B4                     l5636:
  5150                           
  5151                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)".--.");
  5152  0019B4  0EF0               	movlw	low STR_18
  5153  0019B6  0100               	movlb	0	; () banked
  5154  0019B8  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5155  0019BA  0E7F               	movlw	high STR_18
  5156  0019BC  0100               	movlb	0	; () banked
  5157  0019BE  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5158  0019C0  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5159                           
  5160                           ;easat2_util_transmission.c: 107: break;
  5161  0019C4  D164               	goto	l5694
  5162  0019C6                     l5638:
  5163                           
  5164                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"--.-");
  5165  0019C6  0EE6               	movlw	low STR_19
  5166  0019C8  0100               	movlb	0	; () banked
  5167  0019CA  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5168  0019CC  0E7F               	movlw	high STR_19
  5169  0019CE  0100               	movlb	0	; () banked
  5170  0019D0  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5171  0019D2  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5172                           
  5173                           ;easat2_util_transmission.c: 110: break;
  5174  0019D6  D15B               	goto	l5694
  5175  0019D8                     l5640:
  5176                           
  5177                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)".-.");
  5178  0019D8  0EF6               	movlw	low (STR_5+1)
  5179  0019DA  0100               	movlb	0	; () banked
  5180  0019DC  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5181  0019DE  0E7F               	movlw	high (STR_5+1)
  5182  0019E0  0100               	movlb	0	; () banked
  5183  0019E2  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5184  0019E4  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5185                           
  5186                           ;easat2_util_transmission.c: 113: break;
  5187  0019E8  D152               	goto	l5694
  5188  0019EA                     l5642:
  5189                           
  5190                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)"...");
  5191  0019EA  0ED1               	movlw	low (STR_36+2)
  5192  0019EC  0100               	movlb	0	; () banked
  5193  0019EE  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5194  0019F0  0E7F               	movlw	high (STR_36+2)
  5195  0019F2  0100               	movlb	0	; () banked
  5196  0019F4  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5197  0019F6  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5198                           
  5199                           ;easat2_util_transmission.c: 116: break;
  5200  0019FA  D149               	goto	l5694
  5201  0019FC                     l5644:
  5202                           
  5203                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-");
  5204  0019FC  0EA9               	movlw	low (STR_29+4)
  5205  0019FE  0100               	movlb	0	; () banked
  5206  001A00  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5207  001A02  0E7F               	movlw	high (STR_29+4)
  5208  001A04  0100               	movlb	0	; () banked
  5209  001A06  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5210  001A08  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5211                           
  5212                           ;easat2_util_transmission.c: 119: break;
  5213  001A0C  D140               	goto	l5694
  5214  001A0E                     l5646:
  5215                           
  5216                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)"..-");
  5217  001A0E  0EEC               	movlw	low (STR_26+1)
  5218  001A10  0100               	movlb	0	; () banked
  5219  001A12  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5220  001A14  0E7F               	movlw	high (STR_26+1)
  5221  001A16  0100               	movlb	0	; () banked
  5222  001A18  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5223  001A1A  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5224                           
  5225                           ;easat2_util_transmission.c: 122: break;
  5226  001A1E  D137               	goto	l5694
  5227  001A20                     l5648:
  5228                           
  5229                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"...-");
  5230  001A20  0E92               	movlw	low (STR_43+2)
  5231  001A22  0100               	movlb	0	; () banked
  5232  001A24  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5233  001A26  0E7F               	movlw	high (STR_43+2)
  5234  001A28  0100               	movlb	0	; () banked
  5235  001A2A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5236  001A2C  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5237                           
  5238                           ;easat2_util_transmission.c: 125: break;
  5239  001A30  D12E               	goto	l5694
  5240  001A32                     l5650:
  5241                           
  5242                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)".--");
  5243  001A32  0EE2               	movlw	low (STR_27+1)
  5244  001A34  0100               	movlb	0	; () banked
  5245  001A36  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5246  001A38  0E7F               	movlw	high (STR_27+1)
  5247  001A3A  0100               	movlb	0	; () banked
  5248  001A3C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5249  001A3E  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5250                           
  5251                           ;easat2_util_transmission.c: 128: break;
  5252  001A42  D125               	goto	l5694
  5253  001A44                     l5652:
  5254                           
  5255                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"-..-");
  5256  001A44  0EEB               	movlw	low STR_26
  5257  001A46  0100               	movlb	0	; () banked
  5258  001A48  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5259  001A4A  0E7F               	movlw	high STR_26
  5260  001A4C  0100               	movlb	0	; () banked
  5261  001A4E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5262  001A50  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5263                           
  5264                           ;easat2_util_transmission.c: 131: break;
  5265  001A54  D11C               	goto	l5694
  5266  001A56                     l5654:
  5267                           
  5268                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)"-.--");
  5269  001A56  0EE1               	movlw	low STR_27
  5270  001A58  0100               	movlb	0	; () banked
  5271  001A5A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5272  001A5C  0E7F               	movlw	high STR_27
  5273  001A5E  0100               	movlb	0	; () banked
  5274  001A60  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5275  001A62  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5276                           
  5277                           ;easat2_util_transmission.c: 134: break;
  5278  001A66  D113               	goto	l5694
  5279  001A68                     l5656:
  5280                           
  5281                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--..");
  5282  001A68  0ECA               	movlw	low (STR_37+1)
  5283  001A6A  0100               	movlb	0	; () banked
  5284  001A6C  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5285  001A6E  0E7F               	movlw	high (STR_37+1)
  5286  001A70  0100               	movlb	0	; () banked
  5287  001A72  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5288  001A74  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5289                           
  5290                           ;easat2_util_transmission.c: 137: break;
  5291  001A78  D10A               	goto	l5694
  5292  001A7A                     l5658:
  5293                           
  5294                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)"-----");
  5295  001A7A  0EA5               	movlw	low STR_29
  5296  001A7C  0100               	movlb	0	; () banked
  5297  001A7E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5298  001A80  0E7F               	movlw	high STR_29
  5299  001A82  0100               	movlb	0	; () banked
  5300  001A84  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5301  001A86  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5302                           
  5303                           ;easat2_util_transmission.c: 140: break;
  5304  001A8A  D101               	goto	l5694
  5305  001A8C                     l5660:
  5306                           
  5307                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)".----");
  5308  001A8C  0EAB               	movlw	low STR_30
  5309  001A8E  0100               	movlb	0	; () banked
  5310  001A90  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5311  001A92  0E7F               	movlw	high STR_30
  5312  001A94  0100               	movlb	0	; () banked
  5313  001A96  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5314  001A98  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5315                           
  5316                           ;easat2_util_transmission.c: 143: break;
  5317  001A9C  D0F8               	goto	l5694
  5318  001A9E                     l5662:
  5319                           
  5320                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"..---");
  5321  001A9E  0EB1               	movlw	low STR_31
  5322  001AA0  0100               	movlb	0	; () banked
  5323  001AA2  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5324  001AA4  0E7F               	movlw	high STR_31
  5325  001AA6  0100               	movlb	0	; () banked
  5326  001AA8  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5327  001AAA  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5328                           
  5329                           ;easat2_util_transmission.c: 146: break;
  5330  001AAE  D0EF               	goto	l5694
  5331  001AB0                     l5664:
  5332                           
  5333                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"...--");
  5334  001AB0  0EB7               	movlw	low STR_32
  5335  001AB2  0100               	movlb	0	; () banked
  5336  001AB4  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5337  001AB6  0E7F               	movlw	high STR_32
  5338  001AB8  0100               	movlb	0	; () banked
  5339  001ABA  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5340  001ABC  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5341                           
  5342                           ;easat2_util_transmission.c: 149: break;
  5343  001AC0  D0E6               	goto	l5694
  5344  001AC2                     l5666:
  5345                           
  5346                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"....-");
  5347  001AC2  0E91               	movlw	low (STR_43+1)
  5348  001AC4  0100               	movlb	0	; () banked
  5349  001AC6  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5350  001AC8  0E7F               	movlw	high (STR_43+1)
  5351  001ACA  0100               	movlb	0	; () banked
  5352  001ACC  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5353  001ACE  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5354                           
  5355                           ;easat2_util_transmission.c: 152: break;
  5356  001AD2  D0DD               	goto	l5694
  5357  001AD4                     l5668:
  5358                           
  5359                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".....");
  5360  001AD4  0EDB               	movlw	low STR_34
  5361  001AD6  0100               	movlb	0	; () banked
  5362  001AD8  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5363  001ADA  0E7F               	movlw	high STR_34
  5364  001ADC  0100               	movlb	0	; () banked
  5365  001ADE  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5366  001AE0  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5367                           
  5368                           ;easat2_util_transmission.c: 155: break;
  5369  001AE4  D0D4               	goto	l5694
  5370  001AE6                     l5670:
  5371                           
  5372                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-....");
  5373  001AE6  0ED5               	movlw	low STR_35
  5374  001AE8  0100               	movlb	0	; () banked
  5375  001AEA  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5376  001AEC  0E7F               	movlw	high STR_35
  5377  001AEE  0100               	movlb	0	; () banked
  5378  001AF0  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5379  001AF2  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5380                           
  5381                           ;easat2_util_transmission.c: 158: break;
  5382  001AF6  D0CB               	goto	l5694
  5383  001AF8                     l5672:
  5384                           
  5385                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"--...");
  5386  001AF8  0ECF               	movlw	low STR_36
  5387  001AFA  0100               	movlb	0	; () banked
  5388  001AFC  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5389  001AFE  0E7F               	movlw	high STR_36
  5390  001B00  0100               	movlb	0	; () banked
  5391  001B02  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5392  001B04  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5393                           
  5394                           ;easat2_util_transmission.c: 161: break;
  5395  001B08  D0C2               	goto	l5694
  5396  001B0A                     l5674:
  5397                           
  5398                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"---..");
  5399  001B0A  0EC9               	movlw	low STR_37
  5400  001B0C  0100               	movlb	0	; () banked
  5401  001B0E  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5402  001B10  0E7F               	movlw	high STR_37
  5403  001B12  0100               	movlb	0	; () banked
  5404  001B14  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5405  001B16  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5406                           
  5407                           ;easat2_util_transmission.c: 164: break;
  5408  001B1A  D0B9               	goto	l5694
  5409  001B1C                     l5676:
  5410                           
  5411                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"----.");
  5412  001B1C  0EBD               	movlw	low STR_38
  5413  001B1E  0100               	movlb	0	; () banked
  5414  001B20  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5415  001B22  0E7F               	movlw	high STR_38
  5416  001B24  0100               	movlb	0	; () banked
  5417  001B26  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5418  001B28  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5419                           
  5420                           ;easat2_util_transmission.c: 167: break;
  5421  001B2C  D0B0               	goto	l5694
  5422  001B2E                     l5678:
  5423                           
  5424                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)"--..--");
  5425  001B2E  0E82               	movlw	low STR_39
  5426  001B30  0100               	movlb	0	; () banked
  5427  001B32  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5428  001B34  0E7F               	movlw	high STR_39
  5429  001B36  0100               	movlb	0	; () banked
  5430  001B38  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5431  001B3A  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5432                           
  5433                           ;easat2_util_transmission.c: 170: break;
  5434  001B3E  D0A7               	goto	l5694
  5435  001B40                     l5680:
  5436                           
  5437                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..--..");
  5438  001B40  0E97               	movlw	low STR_40
  5439  001B42  0100               	movlb	0	; () banked
  5440  001B44  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5441  001B46  0E7F               	movlw	high STR_40
  5442  001B48  0100               	movlb	0	; () banked
  5443  001B4A  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5444  001B4C  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5445                           
  5446                           ;easat2_util_transmission.c: 173: break;
  5447  001B50  D09E               	goto	l5694
  5448  001B52                     l5682:
  5449                           
  5450                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"-..-.");
  5451  001B52  0EC3               	movlw	low STR_41
  5452  001B54  0100               	movlb	0	; () banked
  5453  001B56  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5454  001B58  0E7F               	movlw	high STR_41
  5455  001B5A  0100               	movlb	0	; () banked
  5456  001B5C  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5457  001B5E  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5458                           
  5459                           ;easat2_util_transmission.c: 176: break;
  5460  001B62  D095               	goto	l5694
  5461  001B64                     l5684:
  5462                           
  5463                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)".-.-.-");
  5464  001B64  0E89               	movlw	low STR_42
  5465  001B66  0100               	movlb	0	; () banked
  5466  001B68  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5467  001B6A  0E7F               	movlw	high STR_42
  5468  001B6C  0100               	movlb	0	; () banked
  5469  001B6E  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5470  001B70  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5471                           
  5472                           ;easat2_util_transmission.c: 179: break;
  5473  001B74  D08C               	goto	l5694
  5474  001B76                     l5686:
  5475                           
  5476                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)"-....-");
  5477  001B76  0E90               	movlw	low STR_43
  5478  001B78  0100               	movlb	0	; () banked
  5479  001B7A  6F66               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5480  001B7C  0E7F               	movlw	high STR_43
  5481  001B7E  0100               	movlb	0	; () banked
  5482  001B80  6F67               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5483  001B82  ECFF  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5484                           
  5485                           ;easat2_util_transmission.c: 182: break;
  5486  001B86  D083               	goto	l5694
  5487  001B88                     l5688:
  5488                           
  5489                           ;easat2_util_transmission.c: 184: util_transmit_space_between_words();
  5490  001B88  ECF5  F01E         	call	_util_transmit_space_between_words	;wreg free
  5491                           
  5492                           ;easat2_util_transmission.c: 189: }
  5493                           
  5494                           ;easat2_util_transmission.c: 187: break;
  5495                           
  5496                           ;easat2_util_transmission.c: 186: default:
  5497                           
  5498                           ;easat2_util_transmission.c: 185: break;
  5499  001B8C  D080               	goto	l5694
  5500  001B8E                     l5692:
  5501  001B8E  0100               	movlb	0	; () banked
  5502  001B90  516C               	movf	util_transmit_letter@letter& (0+255),w,b
  5503                           
  5504                           ; Switch size 1, requested type "space"
  5505                           ; Number of cases is 42, Range of values is 32 to 90
  5506                           ; switch strategies available:
  5507                           ; Name         Instructions Cycles
  5508                           ; simple_byte          127    64 (average)
  5509                           ;	Chosen strategy is simple_byte
  5510  001B92  0A20               	xorlw	32	; case 32
  5511  001B94  B4D8               	btfsc	status,2,c
  5512  001B96  D7F8               	goto	l5688
  5513  001B98  0A0C               	xorlw	12	; case 44
  5514  001B9A  B4D8               	btfsc	status,2,c
  5515  001B9C  D7C8               	goto	l5678
  5516  001B9E  0A01               	xorlw	1	; case 45
  5517  001BA0  B4D8               	btfsc	status,2,c
  5518  001BA2  D7E9               	goto	l5686
  5519  001BA4  0A03               	xorlw	3	; case 46
  5520  001BA6  B4D8               	btfsc	status,2,c
  5521  001BA8  D7DD               	goto	l5684
  5522  001BAA  0A01               	xorlw	1	; case 47
  5523  001BAC  B4D8               	btfsc	status,2,c
  5524  001BAE  D7D1               	goto	l5682
  5525  001BB0  0A1F               	xorlw	31	; case 48
  5526  001BB2  B4D8               	btfsc	status,2,c
  5527  001BB4  D762               	goto	l5658
  5528  001BB6  0A01               	xorlw	1	; case 49
  5529  001BB8  B4D8               	btfsc	status,2,c
  5530  001BBA  D768               	goto	l5660
  5531  001BBC  0A03               	xorlw	3	; case 50
  5532  001BBE  B4D8               	btfsc	status,2,c
  5533  001BC0  D76E               	goto	l5662
  5534  001BC2  0A01               	xorlw	1	; case 51
  5535  001BC4  B4D8               	btfsc	status,2,c
  5536  001BC6  D774               	goto	l5664
  5537  001BC8  0A07               	xorlw	7	; case 52
  5538  001BCA  B4D8               	btfsc	status,2,c
  5539  001BCC  D77A               	goto	l5666
  5540  001BCE  0A01               	xorlw	1	; case 53
  5541  001BD0  B4D8               	btfsc	status,2,c
  5542  001BD2  D780               	goto	l5668
  5543  001BD4  0A03               	xorlw	3	; case 54
  5544  001BD6  B4D8               	btfsc	status,2,c
  5545  001BD8  D786               	goto	l5670
  5546  001BDA  0A01               	xorlw	1	; case 55
  5547  001BDC  B4D8               	btfsc	status,2,c
  5548  001BDE  D78C               	goto	l5672
  5549  001BE0  0A0F               	xorlw	15	; case 56
  5550  001BE2  B4D8               	btfsc	status,2,c
  5551  001BE4  D792               	goto	l5674
  5552  001BE6  0A01               	xorlw	1	; case 57
  5553  001BE8  B4D8               	btfsc	status,2,c
  5554  001BEA  D798               	goto	l5676
  5555  001BEC  0A06               	xorlw	6	; case 63
  5556  001BEE  B4D8               	btfsc	status,2,c
  5557  001BF0  D7A7               	goto	l5680
  5558  001BF2  0A7E               	xorlw	126	; case 65
  5559  001BF4  B4D8               	btfsc	status,2,c
  5560  001BF6  D657               	goto	l5606
  5561  001BF8  0A03               	xorlw	3	; case 66
  5562  001BFA  B4D8               	btfsc	status,2,c
  5563  001BFC  D65D               	goto	l5608
  5564  001BFE  0A01               	xorlw	1	; case 67
  5565  001C00  B4D8               	btfsc	status,2,c
  5566  001C02  D663               	goto	l5610
  5567  001C04  0A07               	xorlw	7	; case 68
  5568  001C06  B4D8               	btfsc	status,2,c
  5569  001C08  D669               	goto	l5612
  5570  001C0A  0A01               	xorlw	1	; case 69
  5571  001C0C  B4D8               	btfsc	status,2,c
  5572  001C0E  D66F               	goto	l5614
  5573  001C10  0A03               	xorlw	3	; case 70
  5574  001C12  B4D8               	btfsc	status,2,c
  5575  001C14  D675               	goto	l5616
  5576  001C16  0A01               	xorlw	1	; case 71
  5577  001C18  B4D8               	btfsc	status,2,c
  5578  001C1A  D67B               	goto	l5618
  5579  001C1C  0A0F               	xorlw	15	; case 72
  5580  001C1E  B4D8               	btfsc	status,2,c
  5581  001C20  D681               	goto	l5620
  5582  001C22  0A01               	xorlw	1	; case 73
  5583  001C24  B4D8               	btfsc	status,2,c
  5584  001C26  D687               	goto	l5622
  5585  001C28  0A03               	xorlw	3	; case 74
  5586  001C2A  B4D8               	btfsc	status,2,c
  5587  001C2C  D68D               	goto	l5624
  5588  001C2E  0A01               	xorlw	1	; case 75
  5589  001C30  B4D8               	btfsc	status,2,c
  5590  001C32  D693               	goto	l5626
  5591  001C34  0A07               	xorlw	7	; case 76
  5592  001C36  B4D8               	btfsc	status,2,c
  5593  001C38  D699               	goto	l5628
  5594  001C3A  0A01               	xorlw	1	; case 77
  5595  001C3C  B4D8               	btfsc	status,2,c
  5596  001C3E  D69F               	goto	l5630
  5597  001C40  0A03               	xorlw	3	; case 78
  5598  001C42  B4D8               	btfsc	status,2,c
  5599  001C44  D6A5               	goto	l5632
  5600  001C46  0A01               	xorlw	1	; case 79
  5601  001C48  B4D8               	btfsc	status,2,c
  5602  001C4A  D6AB               	goto	l5634
  5603  001C4C  0A1F               	xorlw	31	; case 80
  5604  001C4E  B4D8               	btfsc	status,2,c
  5605  001C50  D6B1               	goto	l5636
  5606  001C52  0A01               	xorlw	1	; case 81
  5607  001C54  B4D8               	btfsc	status,2,c
  5608  001C56  D6B7               	goto	l5638
  5609  001C58  0A03               	xorlw	3	; case 82
  5610  001C5A  B4D8               	btfsc	status,2,c
  5611  001C5C  D6BD               	goto	l5640
  5612  001C5E  0A01               	xorlw	1	; case 83
  5613  001C60  B4D8               	btfsc	status,2,c
  5614  001C62  D6C3               	goto	l5642
  5615  001C64  0A07               	xorlw	7	; case 84
  5616  001C66  B4D8               	btfsc	status,2,c
  5617  001C68  D6C9               	goto	l5644
  5618  001C6A  0A01               	xorlw	1	; case 85
  5619  001C6C  B4D8               	btfsc	status,2,c
  5620  001C6E  D6CF               	goto	l5646
  5621  001C70  0A03               	xorlw	3	; case 86
  5622  001C72  B4D8               	btfsc	status,2,c
  5623  001C74  D6D5               	goto	l5648
  5624  001C76  0A01               	xorlw	1	; case 87
  5625  001C78  B4D8               	btfsc	status,2,c
  5626  001C7A  D6DB               	goto	l5650
  5627  001C7C  0A0F               	xorlw	15	; case 88
  5628  001C7E  B4D8               	btfsc	status,2,c
  5629  001C80  D6E1               	goto	l5652
  5630  001C82  0A01               	xorlw	1	; case 89
  5631  001C84  B4D8               	btfsc	status,2,c
  5632  001C86  D6E7               	goto	l5654
  5633  001C88  0A03               	xorlw	3	; case 90
  5634  001C8A  B4D8               	btfsc	status,2,c
  5635  001C8C  D6ED               	goto	l5656
  5636  001C8E                     l5694:
  5637                           
  5638                           ;easat2_util_transmission.c: 192: util_transmit_space_between_letters();
  5639  001C8E  ECFD  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5640  001C92  0012               	return		;funcret
  5641  001C94                     __end_of_util_transmit_letter:
  5642                           	opt stack 0
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           intcon	equ	0xFF2
  5648                           postinc0	equ	0xFEE
  5649                           wreg	equ	0xFE8
  5650                           postdec1	equ	0xFE5
  5651                           fsr1h	equ	0xFE2
  5652                           fsr1l	equ	0xFE1
  5653                           indf2	equ	0xFDF
  5654                           postinc2	equ	0xFDE
  5655                           postdec2	equ	0xFDD
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function _util_transmit_space_between_words *****************
  5661 ;; Defined at:
  5662 ;;		line 287 in file "easat2_util_transmission.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5676 ;;      Params:         0       0       0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    3
  5683 ;; This function calls:
  5684 ;;		_util_waits_delay_ms
  5685 ;; This function is called by:
  5686 ;;		_util_transmit_letter
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text19
  5691  003DEA                     __ptext19:
  5692                           	opt stack 0
  5693  003DEA                     _util_transmit_space_between_words:
  5694                           	opt stack 24
  5695                           
  5696                           ;easat2_util_transmission.c: 288: util_waits_delay_ms(7*(int)(2400/32));
  5697                           
  5698                           ;incstack = 0
  5699  003DEA  0E02               	movlw	2
  5700  003DEC  0100               	movlb	0	; () banked
  5701  003DEE  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5702  003DF0  0E0D               	movlw	13
  5703  003DF2  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5704  003DF4  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  5705  003DF8  0012               	return		;funcret
  5706  003DFA                     __end_of_util_transmit_space_between_words:
  5707                           	opt stack 0
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           intcon	equ	0xFF2
  5713                           postinc0	equ	0xFEE
  5714                           wreg	equ	0xFE8
  5715                           postdec1	equ	0xFE5
  5716                           fsr1h	equ	0xFE2
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           postinc2	equ	0xFDE
  5720                           postdec2	equ	0xFDD
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _util_transmit_space_between_letters *****************
  5726 ;; Defined at:
  5727 ;;		line 280 in file "easat2_util_transmission.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5741 ;;      Params:         0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    3
  5748 ;; This function calls:
  5749 ;;		_util_waits_delay_ms
  5750 ;; This function is called by:
  5751 ;;		_util_transmit_letter
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text20
  5756  003DFA                     __ptext20:
  5757                           	opt stack 0
  5758  003DFA                     _util_transmit_space_between_letters:
  5759                           	opt stack 24
  5760                           
  5761                           ;easat2_util_transmission.c: 281: util_waits_delay_ms(3*(int)(2400/32));
  5762                           
  5763                           ;incstack = 0
  5764  003DFA  0E00               	movlw	0
  5765  003DFC  0100               	movlb	0	; () banked
  5766  003DFE  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5767  003E00  0EE1               	movlw	225
  5768  003E02  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5769  003E04  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  5770  003E08  0012               	return		;funcret
  5771  003E0A                     __end_of_util_transmit_space_between_letters:
  5772                           	opt stack 0
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           intcon	equ	0xFF2
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           postdec1	equ	0xFE5
  5781                           fsr1h	equ	0xFE2
  5782                           fsr1l	equ	0xFE1
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _util_transmit_morse_sequence *****************
  5791 ;; Defined at:
  5792 ;;		line 202 in file "easat2_util_transmission.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  morse_sequen    2    6[BANK0 ] PTR unsigned char 
  5795 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5796 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5797 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5798 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5799 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5800 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5801 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5802 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5803 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5804 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5805 ;;		 -> STR_3(3), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  i               2   10[BANK0 ] int 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5817 ;;      Params:         0       2       0       0       0       0       0
  5818 ;;      Locals:         0       2       0       0       0       0       0
  5819 ;;      Temps:          0       2       0       0       0       0       0
  5820 ;;      Totals:         0       6       0       0       0       0       0
  5821 ;;Total ram usage:        6 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    4
  5824 ;; This function calls:
  5825 ;;		_strlen
  5826 ;;		_util_transmit_dash
  5827 ;;		_util_transmit_dot
  5828 ;;		_util_transmit_space_between_dots_dashes
  5829 ;; This function is called by:
  5830 ;;		_util_transmit_letter
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text21
  5835  0037FE                     __ptext21:
  5836                           	opt stack 0
  5837  0037FE                     _util_transmit_morse_sequence:
  5838                           	opt stack 23
  5839                           
  5840                           ;easat2_util_transmission.c: 206: for (int i = 0; i < strlen(morse_sequence); i++) {
  5841                           
  5842                           ;incstack = 0
  5843  0037FE  0E00               	movlw	0
  5844  003800  0100               	movlb	0	; () banked
  5845  003802  6F6B               	movwf	(util_transmit_morse_sequence@i+1)& (0+255),b
  5846  003804  0E00               	movlw	0
  5847  003806  6F6A               	movwf	util_transmit_morse_sequence@i& (0+255),b
  5848  003808  D023               	goto	l4926
  5849  00380A                     l4914:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;easat2_util_transmission.c: 211: util_transmit_dot();
  5853  00380A  ECC1  F01E         	call	_util_transmit_dot	;wreg free
  5854                           
  5855                           ;easat2_util_transmission.c: 212: break;
  5856  00380E  D01B               	goto	l4922
  5857  003810                     l4916:
  5858                           
  5859                           ;easat2_util_transmission.c: 214: util_transmit_dash();
  5860  003810  ECCF  F01E         	call	_util_transmit_dash	;wreg free
  5861                           
  5862                           ;easat2_util_transmission.c: 218: }
  5863                           
  5864                           ;easat2_util_transmission.c: 217: break;
  5865                           
  5866                           ;easat2_util_transmission.c: 216: default:
  5867                           
  5868                           ;easat2_util_transmission.c: 215: break;
  5869  003814  D018               	goto	l4922
  5870  003816                     l4920:
  5871  003816  0100               	movlb	0	; () banked
  5872  003818  516A               	movf	util_transmit_morse_sequence@i& (0+255),w,b
  5873  00381A  0100               	movlb	0	; () banked
  5874  00381C  2566               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5875  00381E  0100               	movlb	0	; () banked
  5876  003820  6F68               	movwf	??_util_transmit_morse_sequence& (0+255),b
  5877  003822  0100               	movlb	0	; () banked
  5878  003824  516B               	movf	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5879  003826  0100               	movlb	0	; () banked
  5880  003828  2167               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5881  00382A  0100               	movlb	0	; () banked
  5882  00382C  6F69               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),b
  5883  00382E  C068  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5884  003832  C069  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5885  003836                     	if	0	;tblptru may be non-zero
  5886  003836                     	endif
  5887  003836                     	if	0	;tblptru may be non-zero
  5888  003836                     	endif
  5889  003836  0008               	tblrd		*
  5890  003838  50F5               	movf	tablat,w,c
  5891                           
  5892                           ; Switch size 1, requested type "space"
  5893                           ; Number of cases is 2, Range of values is 45 to 46
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte            7     4 (average)
  5897                           ;	Chosen strategy is simple_byte
  5898  00383A  0A2D               	xorlw	45	; case 45
  5899  00383C  B4D8               	btfsc	status,2,c
  5900  00383E  D7E8               	goto	l4916
  5901  003840  0A03               	xorlw	3	; case 46
  5902  003842  B4D8               	btfsc	status,2,c
  5903  003844  D7E2               	goto	l4914
  5904  003846                     l4922:
  5905                           
  5906                           ;easat2_util_transmission.c: 221: util_transmit_space_between_dots_dashes();
  5907  003846  EC05  F01F         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5908  00384A  0100               	movlb	0	; () banked
  5909  00384C  4B6A               	infsnz	util_transmit_morse_sequence@i& (0+255),f,b
  5910  00384E  2B6B               	incf	(util_transmit_morse_sequence@i+1)& (0+255),f,b
  5911  003850                     l4926:
  5912                           
  5913                           ; BSR set to: 0
  5914  003850  C066  F060         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5915  003854  C067  F061         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5916  003858  EC6E  F01C         	call	_strlen	;wreg free
  5917  00385C  0100               	movlb	0	; () banked
  5918  00385E  5160               	movf	?_strlen& (0+255),w,b
  5919  003860  0100               	movlb	0	; () banked
  5920  003862  5D6A               	subwf	util_transmit_morse_sequence@i& (0+255),w,b
  5921  003864  0100               	movlb	0	; () banked
  5922  003866  5161               	movf	(?_strlen+1)& (0+255),w,b
  5923  003868  0100               	movlb	0	; () banked
  5924  00386A  596B               	subwfb	(util_transmit_morse_sequence@i+1)& (0+255),w,b
  5925  00386C  B0D8               	btfsc	status,0,c
  5926  00386E  0012               	return	
  5927  003870  D7D2               	goto	l4920
  5928  003872                     __end_of_util_transmit_morse_sequence:
  5929                           	opt stack 0
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           intcon	equ	0xFF2
  5935                           postinc0	equ	0xFEE
  5936                           wreg	equ	0xFE8
  5937                           postdec1	equ	0xFE5
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5948 ;; Defined at:
  5949 ;;		line 272 in file "easat2_util_transmission.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5963 ;;      Params:         0       0       0       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0
  5966 ;;      Totals:         0       0       0       0       0       0       0
  5967 ;;Total ram usage:        0 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    3
  5970 ;; This function calls:
  5971 ;;		_util_waits_delay_ms
  5972 ;; This function is called by:
  5973 ;;		_util_transmit_morse_sequence
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text22
  5978  003E0A                     __ptext22:
  5979                           	opt stack 0
  5980  003E0A                     _util_transmit_space_between_dots_dashes:
  5981                           	opt stack 23
  5982                           
  5983                           ;easat2_util_transmission.c: 273: util_waits_delay_ms((int)(2400/32));
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;incstack = 0
  5987  003E0A  0E00               	movlw	0
  5988  003E0C  0100               	movlb	0	; () banked
  5989  003E0E  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5990  003E10  0E4B               	movlw	75
  5991  003E12  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  5992  003E14  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  5993  003E18  0012               	return		;funcret
  5994  003E1A                     __end_of_util_transmit_space_between_dots_dashes:
  5995                           	opt stack 0
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           intcon	equ	0xFF2
  6001                           postinc0	equ	0xFEE
  6002                           wreg	equ	0xFE8
  6003                           postdec1	equ	0xFE5
  6004                           fsr1h	equ	0xFE2
  6005                           fsr1l	equ	0xFE1
  6006                           indf2	equ	0xFDF
  6007                           postinc2	equ	0xFDE
  6008                           postdec2	equ	0xFDD
  6009                           fsr2h	equ	0xFDA
  6010                           fsr2l	equ	0xFD9
  6011                           status	equ	0xFD8
  6012                           
  6013 ;; *************** function _util_transmit_dot *****************
  6014 ;; Defined at:
  6015 ;;		line 232 in file "easat2_util_transmission.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6029 ;;      Params:         0       0       0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0
  6032 ;;      Totals:         0       0       0       0       0       0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    3
  6036 ;; This function calls:
  6037 ;;		_util_pwm_start
  6038 ;;		_util_pwm_stop
  6039 ;;		_util_waits_delay_ms
  6040 ;; This function is called by:
  6041 ;;		_util_transmit_morse_sequence
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text23
  6046  003D82                     __ptext23:
  6047                           	opt stack 0
  6048  003D82                     _util_transmit_dot:
  6049                           	opt stack 23
  6050                           
  6051                           ;easat2_util_transmission.c: 236: (PORTDbits.RD1) = 1;
  6052                           
  6053                           ;incstack = 0
  6054  003D82  8283               	bsf	3971,1,c	;volatile
  6055                           
  6056                           ;easat2_util_transmission.c: 239: util_pwm_start();
  6057  003D84  EC17  F01F         	call	_util_pwm_start	;wreg free
  6058                           
  6059                           ;easat2_util_transmission.c: 240: util_waits_delay_ms((int)(2400/32));
  6060  003D88  0E00               	movlw	0
  6061  003D8A  0100               	movlb	0	; () banked
  6062  003D8C  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  6063  003D8E  0E4B               	movlw	75
  6064  003D90  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  6065  003D92  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  6066                           
  6067                           ;easat2_util_transmission.c: 241: util_pwm_stop();
  6068  003D96  EC13  F01F         	call	_util_pwm_stop	;wreg free
  6069                           
  6070                           ;easat2_util_transmission.c: 243: (PORTDbits.RD1) = 0;
  6071  003D9A  9283               	bcf	3971,1,c	;volatile
  6072  003D9C  0012               	return		;funcret
  6073  003D9E                     __end_of_util_transmit_dot:
  6074                           	opt stack 0
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           intcon	equ	0xFF2
  6080                           postinc0	equ	0xFEE
  6081                           wreg	equ	0xFE8
  6082                           postdec1	equ	0xFE5
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function _util_transmit_dash *****************
  6093 ;; Defined at:
  6094 ;;		line 254 in file "easat2_util_transmission.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6108 ;;      Params:         0       0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    3
  6115 ;; This function calls:
  6116 ;;		_util_pwm_start
  6117 ;;		_util_pwm_stop
  6118 ;;		_util_waits_delay_ms
  6119 ;; This function is called by:
  6120 ;;		_util_transmit_morse_sequence
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text24
  6125  003D9E                     __ptext24:
  6126                           	opt stack 0
  6127  003D9E                     _util_transmit_dash:
  6128                           	opt stack 23
  6129                           
  6130                           ;easat2_util_transmission.c: 258: (PORTDbits.RD1) = 1;
  6131                           
  6132                           ;incstack = 0
  6133  003D9E  8283               	bsf	3971,1,c	;volatile
  6134                           
  6135                           ;easat2_util_transmission.c: 261: util_pwm_start();
  6136  003DA0  EC17  F01F         	call	_util_pwm_start	;wreg free
  6137                           
  6138                           ;easat2_util_transmission.c: 262: util_waits_delay_ms(((int)(2400/32)*3));
  6139  003DA4  0E00               	movlw	0
  6140  003DA6  0100               	movlb	0	; () banked
  6141  003DA8  6F61               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  6142  003DAA  0EE1               	movlw	225
  6143  003DAC  6F60               	movwf	util_waits_delay_ms@ms& (0+255),b
  6144  003DAE  ECB8  F01D         	call	_util_waits_delay_ms	;wreg free
  6145                           
  6146                           ;easat2_util_transmission.c: 263: util_pwm_stop();
  6147  003DB2  EC13  F01F         	call	_util_pwm_stop	;wreg free
  6148                           
  6149                           ;easat2_util_transmission.c: 265: (PORTDbits.RD1) = 0;
  6150  003DB6  9283               	bcf	3971,1,c	;volatile
  6151  003DB8  0012               	return		;funcret
  6152  003DBA                     __end_of_util_transmit_dash:
  6153                           	opt stack 0
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           wreg	equ	0xFE8
  6161                           postdec1	equ	0xFE5
  6162                           fsr1h	equ	0xFE2
  6163                           fsr1l	equ	0xFE1
  6164                           indf2	equ	0xFDF
  6165                           postinc2	equ	0xFDE
  6166                           postdec2	equ	0xFDD
  6167                           fsr2h	equ	0xFDA
  6168                           fsr2l	equ	0xFD9
  6169                           status	equ	0xFD8
  6170                           
  6171 ;; *************** function _util_waits_delay_ms *****************
  6172 ;; Defined at:
  6173 ;;		line 40 in file "easat2_util_waits.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  ms              2    0[BANK0 ] int 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  i               2    3[BANK0 ] int 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6187 ;;      Params:         0       2       0       0       0       0       0
  6188 ;;      Locals:         0       2       0       0       0       0       0
  6189 ;;      Temps:          0       1       0       0       0       0       0
  6190 ;;      Totals:         0       5       0       0       0       0       0
  6191 ;;Total ram usage:        5 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    2
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_util_transmit_dot
  6198 ;;		_util_transmit_dash
  6199 ;;		_util_transmit_space_between_dots_dashes
  6200 ;;		_util_transmit_space_between_letters
  6201 ;;		_util_transmit_space_between_words
  6202 ;;		_util_waits_delay_secs
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text25
  6207  003B70                     __ptext25:
  6208                           	opt stack 0
  6209  003B70                     _util_waits_delay_ms:
  6210                           	opt stack 25
  6211                           
  6212                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6213                           
  6214                           ;incstack = 0
  6215  003B70  0E00               	movlw	0
  6216  003B72  0100               	movlb	0	; () banked
  6217  003B74  6F64               	movwf	(util_waits_delay_ms@i+1)& (0+255),b
  6218  003B76  0E00               	movlw	0
  6219  003B78  6F63               	movwf	util_waits_delay_ms@i& (0+255),b
  6220  003B7A  D007               	goto	l367
  6221  003B7C                     l4586:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6225  003B7C  0EA6               	movlw	166
  6226  003B7E                     u6377:
  6227  003B7E  2EE8               	decfsz	wreg,f,c
  6228  003B80  D7FE               	bra	u6377
  6229  003B82  D000               	nop2	
  6230  003B84  0100               	movlb	0	; () banked
  6231  003B86  4B63               	infsnz	util_waits_delay_ms@i& (0+255),f,b
  6232  003B88  2B64               	incf	(util_waits_delay_ms@i+1)& (0+255),f,b
  6233  003B8A                     l367:
  6234                           
  6235                           ; BSR set to: 0
  6236  003B8A  0100               	movlb	0	; () banked
  6237  003B8C  5160               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6238  003B8E  0100               	movlb	0	; () banked
  6239  003B90  5D63               	subwf	util_waits_delay_ms@i& (0+255),w,b
  6240  003B92  0100               	movlb	0	; () banked
  6241  003B94  5164               	movf	(util_waits_delay_ms@i+1)& (0+255),w,b
  6242  003B96  0A80               	xorlw	128
  6243  003B98  0100               	movlb	0	; () banked
  6244  003B9A  6F62               	movwf	??_util_waits_delay_ms& (0+255),b
  6245  003B9C  0100               	movlb	0	; () banked
  6246  003B9E  5161               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6247  003BA0  0A80               	xorlw	128
  6248  003BA2  0100               	movlb	0	; () banked
  6249  003BA4  5962               	subwfb	??_util_waits_delay_ms& (0+255),w,b
  6250  003BA6  B0D8               	btfsc	status,0,c
  6251  003BA8  0012               	return	
  6252  003BAA  D7E8               	goto	l4586
  6253  003BAC                     __end_of_util_waits_delay_ms:
  6254                           	opt stack 0
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           intcon	equ	0xFF2
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postdec1	equ	0xFE5
  6263                           fsr1h	equ	0xFE2
  6264                           fsr1l	equ	0xFE1
  6265                           indf2	equ	0xFDF
  6266                           postinc2	equ	0xFDE
  6267                           postdec2	equ	0xFDD
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _util_pwm_stop *****************
  6273 ;; Defined at:
  6274 ;;		line 95 in file "easat2_util_pwm.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		None
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6288 ;;      Params:         0       0       0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    2
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_util_transmit_dot
  6299 ;;		_util_transmit_dash
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text26
  6304  003E26                     __ptext26:
  6305                           	opt stack 0
  6306  003E26                     _util_pwm_stop:
  6307                           	opt stack 23
  6308                           
  6309                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;incstack = 0
  6313  003E26  8495               	bsf	3989,2,c	;volatile
  6314                           
  6315                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6316  003E28  8695               	bsf	3989,3,c	;volatile
  6317                           
  6318                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6319  003E2A  94BA               	bcf	4026,2,c	;volatile
  6320  003E2C  0012               	return		;funcret
  6321  003E2E                     __end_of_util_pwm_stop:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           intcon	equ	0xFF2
  6328                           postinc0	equ	0xFEE
  6329                           wreg	equ	0xFE8
  6330                           postdec1	equ	0xFE5
  6331                           fsr1h	equ	0xFE2
  6332                           fsr1l	equ	0xFE1
  6333                           indf2	equ	0xFDF
  6334                           postinc2	equ	0xFDE
  6335                           postdec2	equ	0xFDD
  6336                           fsr2h	equ	0xFDA
  6337                           fsr2l	equ	0xFD9
  6338                           status	equ	0xFD8
  6339                           
  6340 ;; *************** function _util_pwm_start *****************
  6341 ;; Defined at:
  6342 ;;		line 78 in file "easat2_util_pwm.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		None
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6356 ;;      Params:         0       0       0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0
  6359 ;;      Totals:         0       0       0       0       0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_util_transmit_dot
  6367 ;;		_util_transmit_dash
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text27
  6372  003E2E                     __ptext27:
  6373                           	opt stack 0
  6374  003E2E                     _util_pwm_start:
  6375                           	opt stack 23
  6376                           
  6377                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6378                           
  6379                           ;incstack = 0
  6380  003E2E  9495               	bcf	3989,2,c	;volatile
  6381                           
  6382                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6383  003E30  9695               	bcf	3989,3,c	;volatile
  6384                           
  6385                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6386  003E32  84BA               	bsf	4026,2,c	;volatile
  6387  003E34  0012               	return		;funcret
  6388  003E36                     __end_of_util_pwm_start:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           intcon	equ	0xFF2
  6395                           postinc0	equ	0xFEE
  6396                           wreg	equ	0xFE8
  6397                           postdec1	equ	0xFE5
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           indf2	equ	0xFDF
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _strlen *****************
  6408 ;; Defined at:
  6409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6412 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6413 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6414 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6415 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6416 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6417 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6418 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6419 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6420 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6421 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6422 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  6425 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6426 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6427 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6428 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6429 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6430 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6431 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6432 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6433 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6434 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6435 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2    0[BANK0 ] unsigned int 
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6445 ;;      Params:         0       2       0       0       0       0       0
  6446 ;;      Locals:         0       2       0       0       0       0       0
  6447 ;;      Temps:          0       2       0       0       0       0       0
  6448 ;;      Totals:         0       6       0       0       0       0       0
  6449 ;;Total ram usage:        6 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    2
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_util_beacon_transmission
  6456 ;;		_util_transmit_morse_sequence
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text28
  6461  0038DC                     __ptext28:
  6462                           	opt stack 0
  6463  0038DC                     _strlen:
  6464                           	opt stack 24
  6465                           
  6466                           ;incstack = 0
  6467  0038DC  C060  F064         	movff	strlen@s,strlen@cp
  6468  0038E0  C061  F065         	movff	strlen@s+1,strlen@cp+1
  6469  0038E4  D003               	goto	l4630
  6470  0038E6                     l4628:
  6471  0038E6  0100               	movlb	0	; () banked
  6472  0038E8  4B64               	infsnz	strlen@cp& (0+255),f,b
  6473  0038EA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
  6474  0038EC                     l4630:
  6475  0038EC  C064  FFF6         	movff	strlen@cp,tblptrl
  6476  0038F0  C065  FFF7         	movff	strlen@cp+1,tblptrh
  6477  0038F4  6AF8               	clrf	tblptru,c
  6478  0038F6  0E05               	movlw	(high __ramtop+-1)
  6479  0038F8  64F7               	cpfsgt	tblptrh,c
  6480  0038FA  D003               	bra	u4497
  6481  0038FC  0008               	tblrd		*
  6482  0038FE  50F5               	movf	tablat,w,c
  6483  003900  D005               	bra	u4490
  6484  003902                     u4497:
  6485  003902  CFF6 FFE9          	movff	tblptrl,fsr0l
  6486  003906  CFF7 FFEA          	movff	tblptrh,fsr0h
  6487  00390A  50EF               	movf	indf0,w,c
  6488  00390C                     u4490:
  6489  00390C  0900               	iorlw	0
  6490  00390E  A4D8               	btfss	status,2,c
  6491  003910  D7EA               	goto	l4628
  6492  003912  C060  F062         	movff	strlen@s,??_strlen
  6493  003916  C061  F063         	movff	strlen@s+1,??_strlen+1
  6494  00391A  0100               	movlb	0	; () banked
  6495  00391C  1F62               	comf	??_strlen& (0+255),f,b
  6496  00391E  1F63               	comf	(??_strlen+1)& (0+255),f,b
  6497  003920  4B62               	infsnz	??_strlen& (0+255),f,b
  6498  003922  2B63               	incf	(??_strlen+1)& (0+255),f,b
  6499  003924  0100               	movlb	0	; () banked
  6500  003926  5164               	movf	strlen@cp& (0+255),w,b
  6501  003928  0100               	movlb	0	; () banked
  6502  00392A  2562               	addwf	??_strlen& (0+255),w,b
  6503  00392C  0100               	movlb	0	; () banked
  6504  00392E  6F60               	movwf	?_strlen& (0+255),b
  6505  003930  0100               	movlb	0	; () banked
  6506  003932  5165               	movf	(strlen@cp+1)& (0+255),w,b
  6507  003934  0100               	movlb	0	; () banked
  6508  003936  2163               	addwfc	(??_strlen+1)& (0+255),w,b
  6509  003938  0100               	movlb	0	; () banked
  6510  00393A  6F61               	movwf	(?_strlen+1)& (0+255),b
  6511  00393C  0012               	return	
  6512  00393E                     __end_of_strlen:
  6513                           	opt stack 0
  6514                           tblptru	equ	0xFF8
  6515                           tblptrh	equ	0xFF7
  6516                           tblptrl	equ	0xFF6
  6517                           tablat	equ	0xFF5
  6518                           intcon	equ	0xFF2
  6519                           indf0	equ	0xFEF
  6520                           postinc0	equ	0xFEE
  6521                           fsr0h	equ	0xFEA
  6522                           fsr0l	equ	0xFE9
  6523                           wreg	equ	0xFE8
  6524                           postdec1	equ	0xFE5
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           postinc2	equ	0xFDE
  6529                           postdec2	equ	0xFDD
  6530                           fsr2h	equ	0xFDA
  6531                           fsr2l	equ	0xFD9
  6532                           status	equ	0xFD8
  6533                           
  6534 ;; *************** function _strcpy *****************
  6535 ;; Defined at:
  6536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6539 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6540 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6541 ;;		 -> STR_1(7), 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6544 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  2    0[BANK0 ] PTR unsigned char 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6554 ;;      Params:         0       4       0       0       0       0       0
  6555 ;;      Locals:         0       2       0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0
  6557 ;;      Totals:         0       6       0       0       0       0       0
  6558 ;;Total ram usage:        6 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    2
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_util_beacon_transmission
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text29
  6569  003C16                     __ptext29:
  6570                           	opt stack 0
  6571  003C16                     _strcpy:
  6572                           	opt stack 26
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;incstack = 0
  6576  003C16  C060  F064         	movff	strcpy@to,strcpy@cp
  6577  003C1A  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6578  003C1E  D006               	goto	l5298
  6579  003C20                     l5296:
  6580  003C20  0100               	movlb	0	; () banked
  6581  003C22  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6582  003C24  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6583  003C26  0100               	movlb	0	; () banked
  6584  003C28  4B62               	infsnz	strcpy@from& (0+255),f,b
  6585  003C2A  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6586  003C2C                     l5298:
  6587  003C2C  C062  FFF6         	movff	strcpy@from,tblptrl
  6588  003C30  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6589  003C34                     	if	0	;tblptru may be non-zero
  6590  003C34                     	endif
  6591  003C34                     	if	0	;tblptru may be non-zero
  6592  003C34                     	endif
  6593  003C34  C064  FFD9         	movff	strcpy@cp,fsr2l
  6594  003C38  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6595  003C3C  0008               	tblrd		*
  6596  003C3E  CFF5 FFDF          	movff	tablat,indf2
  6597  003C42  50DF               	movf	indf2,w,c
  6598  003C44  B4D8               	btfsc	status,2,c
  6599  003C46  0012               	return	
  6600  003C48  D7EB               	goto	l5296
  6601  003C4A                     __end_of_strcpy:
  6602                           	opt stack 0
  6603                           tblptru	equ	0xFF8
  6604                           tblptrh	equ	0xFF7
  6605                           tblptrl	equ	0xFF6
  6606                           tablat	equ	0xFF5
  6607                           intcon	equ	0xFF2
  6608                           indf0	equ	0xFEF
  6609                           postinc0	equ	0xFEE
  6610                           fsr0h	equ	0xFEA
  6611                           fsr0l	equ	0xFE9
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _strcat *****************
  6624 ;; Defined at:
  6625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6628 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6629 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6630 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6633 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  2    0[BANK0 ] PTR unsigned char 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6643 ;;      Params:         0       4       0       0       0       0       0
  6644 ;;      Locals:         0       2       0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0
  6646 ;;      Totals:         0       6       0       0       0       0       0
  6647 ;;Total ram usage:        6 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    2
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_util_beacon_transmission
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text30
  6658  003A24                     __ptext30:
  6659                           	opt stack 0
  6660  003A24                     _strcat:
  6661                           	opt stack 26
  6662                           
  6663                           ;incstack = 0
  6664  003A24  C060  F064         	movff	strcat@to,strcat@cp
  6665  003A28  C061  F065         	movff	strcat@to+1,strcat@cp+1
  6666  003A2C  D003               	goto	l5598
  6667  003A2E                     l5596:
  6668  003A2E  0100               	movlb	0	; () banked
  6669  003A30  4B64               	infsnz	strcat@cp& (0+255),f,b
  6670  003A32  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6671  003A34                     l5598:
  6672  003A34  C064  FFD9         	movff	strcat@cp,fsr2l
  6673  003A38  C065  FFDA         	movff	strcat@cp+1,fsr2h
  6674  003A3C  50DF               	movf	indf2,w,c
  6675  003A3E  B4D8               	btfsc	status,2,c
  6676  003A40  D007               	goto	l5602
  6677  003A42  D7F5               	goto	l5596
  6678  003A44                     l5600:
  6679  003A44  0100               	movlb	0	; () banked
  6680  003A46  4B64               	infsnz	strcat@cp& (0+255),f,b
  6681  003A48  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6682  003A4A  0100               	movlb	0	; () banked
  6683  003A4C  4B62               	infsnz	strcat@from& (0+255),f,b
  6684  003A4E  2B63               	incf	(strcat@from+1)& (0+255),f,b
  6685  003A50                     l5602:
  6686  003A50  C062  FFD9         	movff	strcat@from,fsr2l
  6687  003A54  C063  FFDA         	movff	strcat@from+1,fsr2h
  6688  003A58  C064  FFE1         	movff	strcat@cp,fsr1l
  6689  003A5C  C065  FFE2         	movff	strcat@cp+1,fsr1h
  6690  003A60  CFDF FFE7          	movff	indf2,indf1
  6691  003A64  50E7               	movf	indf1,w,c
  6692  003A66  B4D8               	btfsc	status,2,c
  6693  003A68  0012               	return	
  6694  003A6A  D7EC               	goto	l5600
  6695  003A6C                     __end_of_strcat:
  6696                           	opt stack 0
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           intcon	equ	0xFF2
  6702                           indf0	equ	0xFEF
  6703                           postinc0	equ	0xFEE
  6704                           fsr0h	equ	0xFEA
  6705                           fsr0l	equ	0xFE9
  6706                           wreg	equ	0xFE8
  6707                           indf1	equ	0xFE7
  6708                           postdec1	equ	0xFE5
  6709                           fsr1h	equ	0xFE2
  6710                           fsr1l	equ	0xFE1
  6711                           indf2	equ	0xFDF
  6712                           postinc2	equ	0xFDE
  6713                           postdec2	equ	0xFDD
  6714                           fsr2h	equ	0xFDA
  6715                           fsr2l	equ	0xFD9
  6716                           status	equ	0xFD8
  6717                           
  6718 ;; *************** function _sprintf *****************
  6719 ;; Defined at:
  6720 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  sp              2   63[BANK0 ] PTR unsigned char 
  6723 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6724 ;;  f               2   65[BANK0 ] PTR const unsigned char 
  6725 ;;		 -> STR_2(23), 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  val             4   96[BANK0 ] unsigned long 
  6728 ;;  tmpval          4   92[BANK0 ] struct .
  6729 ;;  fval            3  102[BANK0 ] struct .
  6730 ;;  cp              3    0        PTR const unsigned char 
  6731 ;;  prec            2  105[BANK0 ] int 
  6732 ;;  exp             2  100[BANK0 ] int 
  6733 ;;  width           2   90[BANK0 ] int 
  6734 ;;  flag            2   88[BANK0 ] unsigned short 
  6735 ;;  ap              2   86[BANK0 ] PTR void [1]
  6736 ;;		 -> ?_sprintf(2), 
  6737 ;;  len             2    0        unsigned int 
  6738 ;;  c               1  107[BANK0 ] char 
  6739 ;;  d               1    0        unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  2   63[BANK0 ] int 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6749 ;;      Params:         0      14       0       0       0       0       0
  6750 ;;      Locals:         0      25       0       0       0       0       0
  6751 ;;      Temps:          0       6       0       0       0       0       0
  6752 ;;      Totals:         0      45       0       0       0       0       0
  6753 ;;Total ram usage:       45 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    5
  6756 ;; This function calls:
  6757 ;;		___awdiv
  6758 ;;		___ftadd
  6759 ;;		___ftge
  6760 ;;		___ftmul
  6761 ;;		___ftneg
  6762 ;;		___ftsub
  6763 ;;		___fttol
  6764 ;;		___lldiv
  6765 ;;		___llmod
  6766 ;;		___lltoft
  6767 ;;		___wmul
  6768 ;;		__div_to_l_
  6769 ;;		__tdiv_to_l_
  6770 ;;		_fround
  6771 ;;		_isdigit
  6772 ;;		_scale
  6773 ;; This function is called by:
  6774 ;;		_util_beacon_transmission
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text31
  6779  0000AA                     __ptext31:
  6780                           	opt stack 0
  6781  0000AA                     _sprintf:
  6782                           	opt stack 23
  6783                           
  6784                           ;doprnt.c: 494: va_list ap;
  6785                           ;doprnt.c: 499: signed char c;
  6786                           ;doprnt.c: 501: int width;
  6787                           ;doprnt.c: 504: int prec;
  6788                           ;doprnt.c: 508: unsigned short flag;
  6789                           ;doprnt.c: 515: char d;
  6790                           ;doprnt.c: 516: double fval;
  6791                           ;doprnt.c: 517: int exp;
  6792                           ;doprnt.c: 523: union {
  6793                           ;doprnt.c: 524: unsigned long vd;
  6794                           ;doprnt.c: 525: double integ;
  6795                           ;doprnt.c: 526: } tmpval;
  6796                           ;doprnt.c: 528: unsigned long val;
  6797                           ;doprnt.c: 529: unsigned len;
  6798                           ;doprnt.c: 530: const char * cp;
  6799                           ;doprnt.c: 533: *ap = __va_start();
  6800                           
  6801                           ;incstack = 0
  6802  0000AA  0EA3               	movlw	low (?_sprintf+4)
  6803  0000AC  0100               	movlb	0	; () banked
  6804  0000AE  6FB6               	movwf	sprintf@ap& (0+255),b
  6805  0000B0  0E00               	movlw	high (?_sprintf+4)
  6806  0000B2  0100               	movlb	0	; () banked
  6807  0000B4  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  6808                           
  6809                           ;doprnt.c: 536: while(c = *f++) {
  6810  0000B6  EF0E  F006         	goto	l5588
  6811  0000BA                     l5302:
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;doprnt.c: 538: if(c != '%')
  6815  0000BA  0E25               	movlw	37
  6816  0000BC  0100               	movlb	0	; () banked
  6817  0000BE  19CB               	xorwf	sprintf@c& (0+255),w,b
  6818  0000C0  B4D8               	btfsc	status,2,c
  6819  0000C2  D00B               	goto	l5308
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;doprnt.c: 540: {
  6823                           ;doprnt.c: 541: ((*sp++ = (c)));
  6824  0000C4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6825  0000C8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6826  0000CC  C0CB  FFDF         	movff	sprintf@c,indf2
  6827                           
  6828                           ; BSR set to: 0
  6829  0000D0  0100               	movlb	0	; () banked
  6830  0000D2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6831  0000D4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6832                           
  6833                           ;doprnt.c: 542: continue;
  6834  0000D6  EF0E  F006         	goto	l5588
  6835  0000DA                     l5308:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;doprnt.c: 543: }
  6839                           ;doprnt.c: 546: width = 0;
  6840  0000DA  0E00               	movlw	0
  6841  0000DC  0100               	movlb	0	; () banked
  6842  0000DE  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  6843  0000E0  0E00               	movlw	0
  6844  0000E2  6FBA               	movwf	sprintf@width& (0+255),b
  6845                           
  6846                           ;doprnt.c: 548: flag = 0;
  6847  0000E4  0E00               	movlw	0
  6848  0000E6  0100               	movlb	0	; () banked
  6849  0000E8  6FB9               	movwf	(sprintf@flag+1)& (0+255),b
  6850  0000EA  0E00               	movlw	0
  6851  0000EC  6FB8               	movwf	sprintf@flag& (0+255),b
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6855  0000EE  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6856  0000F2  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6857  0000F6                     	if	0	;tblptru may be non-zero
  6858  0000F6                     	endif
  6859  0000F6                     	if	0	;tblptru may be non-zero
  6860  0000F6                     	endif
  6861  0000F6  0008               	tblrd		*
  6862  0000F8  50F5               	movf	tablat,w,c
  6863  0000FA  EC86  F01E         	call	_isdigit
  6864  0000FE  A0D8               	btfss	status,0,c
  6865  000100  D040               	goto	l5322
  6866                           
  6867                           ;doprnt.c: 598: width = 0;
  6868  000102  0E00               	movlw	0
  6869  000104  0100               	movlb	0	; () banked
  6870  000106  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  6871  000108  0E00               	movlw	0
  6872  00010A  6FBA               	movwf	sprintf@width& (0+255),b
  6873  00010C                     l5314:
  6874                           
  6875                           ;doprnt.c: 600: width *= 10;
  6876  00010C  C0BA  F06E         	movff	sprintf@width,___wmul@multiplier
  6877  000110  C0BB  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  6878  000114  0E00               	movlw	0
  6879  000116  0100               	movlb	0	; () banked
  6880  000118  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6881  00011A  0E0A               	movlw	10
  6882  00011C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6883  00011E  ECD6  F01D         	call	___wmul	;wreg free
  6884  000122  C06E  F0BA         	movff	?___wmul,sprintf@width
  6885  000126  C06F  F0BB         	movff	?___wmul+1,sprintf@width+1
  6886                           
  6887                           ;doprnt.c: 601: width += *f++ - '0';
  6888  00012A  0ED0               	movlw	208
  6889  00012C  0100               	movlb	0	; () banked
  6890  00012E  6FAD               	movwf	??_sprintf& (0+255),b
  6891  000130  0EFF               	movlw	255
  6892  000132  0100               	movlb	0	; () banked
  6893  000134  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  6894  000136  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6895  00013A  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6896  00013E                     	if	0	;tblptru may be non-zero
  6897  00013E                     	endif
  6898  00013E                     	if	0	;tblptru may be non-zero
  6899  00013E                     	endif
  6900  00013E  0008               	tblrd		*
  6901  000140  50F5               	movf	tablat,w,c
  6902  000142  0100               	movlb	0	; () banked
  6903  000144  6FAF               	movwf	(??_sprintf+2)& (0+255),b
  6904  000146  6BB0               	clrf	(??_sprintf+3)& (0+255),b
  6905  000148  0100               	movlb	0	; () banked
  6906  00014A  51AD               	movf	??_sprintf& (0+255),w,b
  6907  00014C  0100               	movlb	0	; () banked
  6908  00014E  27AF               	addwf	(??_sprintf+2)& (0+255),f,b
  6909  000150  0100               	movlb	0	; () banked
  6910  000152  51AE               	movf	(??_sprintf+1)& (0+255),w,b
  6911  000154  0100               	movlb	0	; () banked
  6912  000156  23B0               	addwfc	(??_sprintf+3)& (0+255),f,b
  6913  000158  0100               	movlb	0	; () banked
  6914  00015A  51AF               	movf	(??_sprintf+2)& (0+255),w,b
  6915  00015C  0100               	movlb	0	; () banked
  6916  00015E  27BA               	addwf	sprintf@width& (0+255),f,b
  6917  000160  0100               	movlb	0	; () banked
  6918  000162  51B0               	movf	(??_sprintf+3)& (0+255),w,b
  6919  000164  0100               	movlb	0	; () banked
  6920  000166  23BB               	addwfc	(sprintf@width+1)& (0+255),f,b
  6921                           
  6922                           ; BSR set to: 0
  6923  000168  0100               	movlb	0	; () banked
  6924  00016A  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6925  00016C  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6929  00016E  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6930  000172  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6931  000176                     	if	0	;tblptru may be non-zero
  6932  000176                     	endif
  6933  000176                     	if	0	;tblptru may be non-zero
  6934  000176                     	endif
  6935  000176  0008               	tblrd		*
  6936  000178  50F5               	movf	tablat,w,c
  6937  00017A  EC86  F01E         	call	_isdigit
  6938  00017E  B0D8               	btfsc	status,0,c
  6939  000180  D7C5               	goto	l5314
  6940  000182                     l5322:
  6941                           
  6942                           ;doprnt.c: 608: }
  6943                           ;doprnt.c: 611: if(*f == '.') {
  6944  000182  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6945  000186  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6946  00018A                     	if	0	;tblptru may be non-zero
  6947  00018A                     	endif
  6948  00018A                     	if	0	;tblptru may be non-zero
  6949  00018A                     	endif
  6950  00018A  0008               	tblrd		*
  6951  00018C  50F5               	movf	tablat,w,c
  6952  00018E  0A2E               	xorlw	46
  6953  000190  A4D8               	btfss	status,2,c
  6954  000192  D039               	goto	l5334
  6955                           
  6956                           ;doprnt.c: 612: flag |= 0x4000;
  6957  000194  0100               	movlb	0	; () banked
  6958  000196  8DB9               	bsf	(sprintf@flag+1)& (0+255),6,b
  6959                           
  6960                           ;doprnt.c: 613: f++;
  6961  000198  0100               	movlb	0	; () banked
  6962  00019A  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6963  00019C  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;doprnt.c: 620: {
  6967                           ;doprnt.c: 621: prec = 0;
  6968  00019E  0E00               	movlw	0
  6969  0001A0  0100               	movlb	0	; () banked
  6970  0001A2  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  6971  0001A4  0E00               	movlw	0
  6972  0001A6  6FC9               	movwf	sprintf@prec& (0+255),b
  6973                           
  6974                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6975  0001A8  D023               	goto	l5332
  6976  0001AA                     l5328:
  6977                           
  6978                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6979  0001AA  C0C9  F06E         	movff	sprintf@prec,___wmul@multiplier
  6980  0001AE  C0CA  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  6981  0001B2  0E00               	movlw	0
  6982  0001B4  0100               	movlb	0	; () banked
  6983  0001B6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6984  0001B8  0E0A               	movlw	10
  6985  0001BA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6986  0001BC  ECD6  F01D         	call	___wmul	;wreg free
  6987  0001C0  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6988  0001C4  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6989  0001C8                     	if	0	;tblptru may be non-zero
  6990  0001C8                     	endif
  6991  0001C8                     	if	0	;tblptru may be non-zero
  6992  0001C8                     	endif
  6993  0001C8  0008               	tblrd		*
  6994  0001CA  50F5               	movf	tablat,w,c
  6995  0001CC  0100               	movlb	0	; () banked
  6996  0001CE  276E               	addwf	?___wmul& (0+255),f,b
  6997  0001D0  0E00               	movlw	0
  6998  0001D2  0100               	movlb	0	; () banked
  6999  0001D4  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  7000  0001D6  0ED0               	movlw	208
  7001  0001D8  0100               	movlb	0	; () banked
  7002  0001DA  256E               	addwf	?___wmul& (0+255),w,b
  7003  0001DC  0100               	movlb	0	; () banked
  7004  0001DE  6FC9               	movwf	sprintf@prec& (0+255),b
  7005  0001E0  0EFF               	movlw	255
  7006  0001E2  0100               	movlb	0	; () banked
  7007  0001E4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7008  0001E6  0100               	movlb	0	; () banked
  7009  0001E8  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  7010                           
  7011                           ; BSR set to: 0
  7012  0001EA  0100               	movlb	0	; () banked
  7013  0001EC  4BA1               	infsnz	sprintf@f& (0+255),f,b
  7014  0001EE  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  7015  0001F0                     l5332:
  7016                           
  7017                           ; BSR set to: 0
  7018  0001F0  C0A1  FFF6         	movff	sprintf@f,tblptrl
  7019  0001F4  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  7020  0001F8                     	if	0	;tblptru may be non-zero
  7021  0001F8                     	endif
  7022  0001F8                     	if	0	;tblptru may be non-zero
  7023  0001F8                     	endif
  7024  0001F8  0008               	tblrd		*
  7025  0001FA  50F5               	movf	tablat,w,c
  7026  0001FC  EC86  F01E         	call	_isdigit
  7027  000200  A0D8               	btfss	status,0,c
  7028  000202  D00C               	goto	l5342
  7029  000204  D7D2               	goto	l5328
  7030  000206                     l5334:
  7031                           
  7032                           ;doprnt.c: 626: prec = 0;
  7033  000206  0E00               	movlw	0
  7034  000208  0100               	movlb	0	; () banked
  7035  00020A  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  7036  00020C  0E00               	movlw	0
  7037  00020E  6FC9               	movwf	sprintf@prec& (0+255),b
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;doprnt.c: 628: flag |= 0x1000;
  7041  000210  0100               	movlb	0	; () banked
  7042  000212  89B9               	bsf	(sprintf@flag+1)& (0+255),4,b
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;doprnt.c: 630: }
  7046                           ;doprnt.c: 635: switch(c = *f++) {
  7047  000214  D003               	goto	l5342
  7048  000216                     l5338:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;doprnt.c: 663: flag |= 0x400;
  7052  000216  0100               	movlb	0	; () banked
  7053  000218  85B9               	bsf	(sprintf@flag+1)& (0+255),2,b
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;doprnt.c: 698: case 'i':
  7057                           ;doprnt.c: 699: break;
  7058                           
  7059                           ; BSR set to: 0
  7060                           
  7061                           ;doprnt.c: 697: case 'd':
  7062                           
  7063                           ;doprnt.c: 664: break;
  7064  00021A  D01A               	goto	l5344
  7065  00021C                     l5342:
  7066  00021C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  7067  000220  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  7068  000224  0100               	movlb	0	; () banked
  7069  000226  4BA1               	infsnz	sprintf@f& (0+255),f,b
  7070  000228  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  7071  00022A                     	if	0	;tblptru may be non-zero
  7072  00022A                     	endif
  7073  00022A                     	if	0	;tblptru may be non-zero
  7074  00022A                     	endif
  7075  00022A  0008               	tblrd		*
  7076  00022C  CFF5 F0CB          	movff	tablat,sprintf@c
  7077  000230  0100               	movlb	0	; () banked
  7078  000232  51CB               	movf	sprintf@c& (0+255),w,b
  7079                           
  7080                           ; Switch size 1, requested type "space"
  7081                           ; Number of cases is 4, Range of values is 0 to 105
  7082                           ; switch strategies available:
  7083                           ; Name         Instructions Cycles
  7084                           ; simple_byte           13     7 (average)
  7085                           ;	Chosen strategy is simple_byte
  7086  000234  0A00               	xorlw	0	; case 0
  7087  000236  B4D8               	btfsc	status,2,c
  7088  000238  EF1D  F006         	goto	l5590
  7089  00023C  0A64               	xorlw	100	; case 100
  7090  00023E  B4D8               	btfsc	status,2,c
  7091  000240  D007               	goto	l5344
  7092  000242  0A02               	xorlw	2	; case 102
  7093  000244  B4D8               	btfsc	status,2,c
  7094  000246  D7E7               	goto	l5338
  7095  000248  0A0F               	xorlw	15	; case 105
  7096  00024A  A4D8               	btfss	status,2,c
  7097  00024C  EF0E  F006         	goto	l5588
  7098  000250                     l5344:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;doprnt.c: 825: if(flag & (0x700)) {
  7102  000250  0E07               	movlw	7
  7103  000252  0100               	movlb	0	; () banked
  7104  000254  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7105  000256  B4D8               	btfsc	status,2,c
  7106  000258  D379               	goto	l5508
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;doprnt.c: 827: if(flag & 0x1000)
  7110  00025A  0100               	movlb	0	; () banked
  7111  00025C  A9B9               	btfss	(sprintf@flag+1)& (0+255),4,b
  7112  00025E  D005               	goto	l5350
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;doprnt.c: 829: prec = 6;
  7116  000260  0E00               	movlw	0
  7117  000262  0100               	movlb	0	; () banked
  7118  000264  6FCA               	movwf	(sprintf@prec+1)& (0+255),b
  7119  000266  0E06               	movlw	6
  7120  000268  6FC9               	movwf	sprintf@prec& (0+255),b
  7121  00026A                     l5350:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7125  00026A  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  7126  00026E  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  7127  000272  CFDE F0C6          	movff	postinc2,sprintf@fval
  7128  000276  CFDE F0C7          	movff	postinc2,sprintf@fval+1
  7129  00027A  CFDD F0C8          	movff	postdec2,sprintf@fval+2
  7130                           
  7131                           ; BSR set to: 0
  7132  00027E  0E03               	movlw	3
  7133  000280  0100               	movlb	0	; () banked
  7134  000282  27B6               	addwf	sprintf@ap& (0+255),f,b
  7135  000284  0E00               	movlw	0
  7136  000286  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;doprnt.c: 831: if(fval < 0.0) {
  7140  000288  0100               	movlb	0	; () banked
  7141  00028A  AFC8               	btfss	(sprintf@fval+2)& (0+255),7,b
  7142  00028C  D011               	goto	l5360
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;doprnt.c: 832: fval = -fval;
  7146  00028E  C0C6  F060         	movff	sprintf@fval,___ftneg@f1
  7147  000292  C0C7  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  7148  000296  C0C8  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  7149  00029A  EC59  F01E         	call	___ftneg	;wreg free
  7150  00029E  C060  F0C6         	movff	?___ftneg,sprintf@fval
  7151  0002A2  C061  F0C7         	movff	?___ftneg+1,sprintf@fval+1
  7152  0002A6  C062  F0C8         	movff	?___ftneg+2,sprintf@fval+2
  7153                           
  7154                           ;doprnt.c: 833: flag |= 0x03;
  7155  0002AA  0E03               	movlw	3
  7156  0002AC  0100               	movlb	0	; () banked
  7157  0002AE  13B8               	iorwf	sprintf@flag& (0+255),f,b
  7158  0002B0                     l5360:
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;doprnt.c: 834: }
  7162                           ;doprnt.c: 835: exp = 0;
  7163  0002B0  0E00               	movlw	0
  7164  0002B2  0100               	movlb	0	; () banked
  7165  0002B4  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7166  0002B6  0E00               	movlw	0
  7167  0002B8  6FC4               	movwf	sprintf@exp& (0+255),b
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;doprnt.c: 836: if( fval!=0) {
  7171  0002BA  0100               	movlb	0	; () banked
  7172  0002BC  51C6               	movf	sprintf@fval& (0+255),w,b
  7173  0002BE  0100               	movlb	0	; () banked
  7174  0002C0  11C7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7175  0002C2  0100               	movlb	0	; () banked
  7176  0002C4  11C8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7177  0002C6  B4D8               	btfsc	status,2,c
  7178  0002C8  D09B               	goto	l5388
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7182  0002CA  0E82               	movlw	130
  7183  0002CC  0100               	movlb	0	; () banked
  7184  0002CE  6FAD               	movwf	??_sprintf& (0+255),b
  7185  0002D0  0EFF               	movlw	255
  7186  0002D2  0100               	movlb	0	; () banked
  7187  0002D4  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7188  0002D6  C0C6  F0AF         	movff	sprintf@fval,??_sprintf+2
  7189  0002DA  C0C7  F0B0         	movff	sprintf@fval+1,??_sprintf+3
  7190  0002DE  C0C8  F0B1         	movff	sprintf@fval+2,??_sprintf+4
  7191  0002E2  C0C9  F0B2         	movff	sprintf@fval+3,??_sprintf+5
  7192  0002E6  0E10               	movlw	16
  7193  0002E8  D006               	goto	u5530
  7194  0002EA                     u5535:
  7195  0002EA  0100               	movlb	0	; () banked
  7196  0002EC  90D8               	bcf	status,0,c
  7197  0002EE  33B2               	rrcf	(??_sprintf+5)& (0+255),f,b
  7198  0002F0  33B1               	rrcf	(??_sprintf+4)& (0+255),f,b
  7199  0002F2  33B0               	rrcf	(??_sprintf+3)& (0+255),f,b
  7200  0002F4  33AF               	rrcf	(??_sprintf+2)& (0+255),f,b
  7201  0002F6                     u5530:
  7202  0002F6  2EE8               	decfsz	wreg,f,c
  7203  0002F8  D7F8               	goto	u5535
  7204  0002FA  0100               	movlb	0	; () banked
  7205  0002FC  51AF               	movf	(??_sprintf+2)& (0+255),w,b
  7206  0002FE  0100               	movlb	0	; () banked
  7207  000300  25AD               	addwf	??_sprintf& (0+255),w,b
  7208  000302  0100               	movlb	0	; () banked
  7209  000304  6FC4               	movwf	sprintf@exp& (0+255),b
  7210  000306  0E00               	movlw	0
  7211  000308  0100               	movlb	0	; () banked
  7212  00030A  21AE               	addwfc	(??_sprintf+1)& (0+255),w,b
  7213  00030C  0100               	movlb	0	; () banked
  7214  00030E  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;doprnt.c: 838: exp--;
  7218  000310  0100               	movlb	0	; () banked
  7219  000312  07C4               	decf	sprintf@exp& (0+255),f,b
  7220  000314  A0D8               	btfss	status,0,c
  7221  000316  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;doprnt.c: 839: exp *= 3;
  7225  000318  C0C4  F06E         	movff	sprintf@exp,___wmul@multiplier
  7226  00031C  C0C5  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  7227  000320  0E00               	movlw	0
  7228  000322  0100               	movlb	0	; () banked
  7229  000324  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7230  000326  0E03               	movlw	3
  7231  000328  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7232  00032A  ECD6  F01D         	call	___wmul	;wreg free
  7233  00032E  C06E  F0C4         	movff	?___wmul,sprintf@exp
  7234  000332  C06F  F0C5         	movff	?___wmul+1,sprintf@exp+1
  7235                           
  7236                           ;doprnt.c: 840: exp /= 10;
  7237  000336  C0C4  F066         	movff	sprintf@exp,___awdiv@dividend
  7238  00033A  C0C5  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  7239  00033E  0E00               	movlw	0
  7240  000340  0100               	movlb	0	; () banked
  7241  000342  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7242  000344  0E0A               	movlw	10
  7243  000346  6F68               	movwf	___awdiv@divisor& (0+255),b
  7244  000348  ECC1  F019         	call	___awdiv	;wreg free
  7245  00034C  C066  F0C4         	movff	?___awdiv,sprintf@exp
  7246  000350  C067  F0C5         	movff	?___awdiv+1,sprintf@exp+1
  7247                           
  7248                           ;doprnt.c: 841: if(exp < 0)
  7249  000354  0100               	movlb	0	; () banked
  7250  000356  AFC5               	btfss	(sprintf@exp+1)& (0+255),7,b
  7251  000358  D004               	goto	l5376
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;doprnt.c: 842: exp--;
  7255  00035A  0100               	movlb	0	; () banked
  7256  00035C  07C4               	decf	sprintf@exp& (0+255),f,b
  7257  00035E  A0D8               	btfss	status,0,c
  7258  000360  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7259  000362                     l5376:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7263  000362  0100               	movlb	0	; () banked
  7264  000364  51C4               	movf	sprintf@exp& (0+255),w,b
  7265  000366  0800               	sublw	0
  7266  000368  ECF9  F009         	call	_scale
  7267  00036C  C083  F0BC         	movff	?_scale,sprintf@tmpval
  7268  000370  C084  F0BD         	movff	?_scale+1,sprintf@tmpval+1
  7269  000374  C085  F0BE         	movff	?_scale+2,sprintf@tmpval+2
  7270                           
  7271                           ;doprnt.c: 847: tmpval.integ *= fval;
  7272  000378  C0BC  F074         	movff	sprintf@tmpval,___ftmul@f1
  7273  00037C  C0BD  F075         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7274  000380  C0BE  F076         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7275  000384  C0C6  F077         	movff	sprintf@fval,___ftmul@f2
  7276  000388  C0C7  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  7277  00038C  C0C8  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  7278  000390  EC2E  F015         	call	___ftmul	;wreg free
  7279  000394  C074  F0BC         	movff	?___ftmul,sprintf@tmpval
  7280  000398  C075  F0BD         	movff	?___ftmul+1,sprintf@tmpval+1
  7281  00039C  C076  F0BE         	movff	?___ftmul+2,sprintf@tmpval+2
  7282                           
  7283                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7284  0003A0  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7285  0003A4  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7286  0003A8  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7287  0003AC  0E00               	movlw	0
  7288  0003AE  0100               	movlb	0	; () banked
  7289  0003B0  6F63               	movwf	___ftge@ff2& (0+255),b
  7290  0003B2  0E80               	movlw	128
  7291  0003B4  0100               	movlb	0	; () banked
  7292  0003B6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7293  0003B8  0E3F               	movlw	63
  7294  0003BA  0100               	movlb	0	; () banked
  7295  0003BC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7296  0003BE  ECFE  F018         	call	___ftge	;wreg free
  7297  0003C2  0100               	movlb	0	; () banked
  7298  0003C4  B0D8               	btfsc	status,0,c
  7299  0003C6  D005               	goto	l5384
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;doprnt.c: 849: exp--;
  7303  0003C8  0100               	movlb	0	; () banked
  7304  0003CA  07C4               	decf	sprintf@exp& (0+255),f,b
  7305  0003CC  A0D8               	btfss	status,0,c
  7306  0003CE  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7307  0003D0  D017               	goto	l5388
  7308  0003D2                     l5384:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7312  0003D2  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7313  0003D6  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7314  0003DA  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7315  0003DE  0E00               	movlw	0
  7316  0003E0  0100               	movlb	0	; () banked
  7317  0003E2  6F63               	movwf	___ftge@ff2& (0+255),b
  7318  0003E4  0E20               	movlw	32
  7319  0003E6  0100               	movlb	0	; () banked
  7320  0003E8  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7321  0003EA  0E41               	movlw	65
  7322  0003EC  0100               	movlb	0	; () banked
  7323  0003EE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7324  0003F0  ECFE  F018         	call	___ftge	;wreg free
  7325  0003F4  0100               	movlb	0	; () banked
  7326  0003F6  A0D8               	btfss	status,0,c
  7327  0003F8  D003               	goto	l5388
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;doprnt.c: 851: exp++;
  7331  0003FA  0100               	movlb	0	; () banked
  7332  0003FC  4BC4               	infsnz	sprintf@exp& (0+255),f,b
  7333  0003FE  2BC5               	incf	(sprintf@exp+1)& (0+255),f,b
  7334  000400                     l5388:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;doprnt.c: 852: }
  7338                           ;doprnt.c: 1112: if(prec <= 12)
  7339  000400  0100               	movlb	0	; () banked
  7340  000402  BFCA               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7341  000404  D008               	goto	l5390
  7342  000406  0100               	movlb	0	; () banked
  7343  000408  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7344  00040A  E11D               	bnz	l5392
  7345  00040C  0E0D               	movlw	13
  7346  00040E  0100               	movlb	0	; () banked
  7347  000410  5DC9               	subwf	sprintf@prec& (0+255),w,b
  7348  000412  B0D8               	btfsc	status,0,c
  7349  000414  D018               	goto	l5392
  7350  000416                     l5390:
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;doprnt.c: 1113: fval += fround(prec);
  7354  000416  C0C6  F08D         	movff	sprintf@fval,___ftadd@f1
  7355  00041A  C0C7  F08E         	movff	sprintf@fval+1,___ftadd@f1+1
  7356  00041E  C0C8  F08F         	movff	sprintf@fval+2,___ftadd@f1+2
  7357  000422  0100               	movlb	0	; () banked
  7358  000424  51C9               	movf	sprintf@prec& (0+255),w,b
  7359  000426  EC4A  F00E         	call	_fround
  7360  00042A  C083  F090         	movff	?_fround,___ftadd@f2
  7361  00042E  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  7362  000432  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  7363  000436  ECA0  F00F         	call	___ftadd	;wreg free
  7364  00043A  C08D  F0C6         	movff	?___ftadd,sprintf@fval
  7365  00043E  C08E  F0C7         	movff	?___ftadd+1,sprintf@fval+1
  7366  000442  C08F  F0C8         	movff	?___ftadd+2,sprintf@fval+2
  7367  000446                     l5392:
  7368                           
  7369                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7370  000446  0100               	movlb	0	; () banked
  7371  000448  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7372  00044A  D008               	goto	l5394
  7373  00044C  0100               	movlb	0	; () banked
  7374  00044E  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7375  000450  E12A               	bnz	l5400
  7376  000452  0E0A               	movlw	10
  7377  000454  0100               	movlb	0	; () banked
  7378  000456  5DC4               	subwf	sprintf@exp& (0+255),w,b
  7379  000458  B0D8               	btfsc	status,0,c
  7380  00045A  D025               	goto	l5400
  7381  00045C                     l5394:
  7382                           
  7383                           ; BSR set to: 0
  7384  00045C  0100               	movlb	0	; () banked
  7385  00045E  51C6               	movf	sprintf@fval& (0+255),w,b
  7386  000460  0100               	movlb	0	; () banked
  7387  000462  11C7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7388  000464  0100               	movlb	0	; () banked
  7389  000466  11C8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7390  000468  B4D8               	btfsc	status,2,c
  7391  00046A  D063               	goto	l5414
  7392                           
  7393                           ; BSR set to: 0
  7394  00046C  C0C6  F08A         	movff	sprintf@fval,___fttol@f1
  7395  000470  C0C7  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  7396  000474  C0C8  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  7397  000478  EC83  F016         	call	___fttol	;wreg free
  7398  00047C  0100               	movlb	0	; () banked
  7399  00047E  518A               	movf	?___fttol& (0+255),w,b
  7400  000480  0100               	movlb	0	; () banked
  7401  000482  118B               	iorwf	(?___fttol+1)& (0+255),w,b
  7402  000484  0100               	movlb	0	; () banked
  7403  000486  118C               	iorwf	(?___fttol+2)& (0+255),w,b
  7404  000488  0100               	movlb	0	; () banked
  7405  00048A  118D               	iorwf	(?___fttol+3)& (0+255),w,b
  7406  00048C  A4D8               	btfss	status,2,c
  7407  00048E  D051               	goto	l5414
  7408                           
  7409                           ; BSR set to: 0
  7410  000490  0100               	movlb	0	; () banked
  7411  000492  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7412  000494  D04E               	goto	l5414
  7413  000496  0100               	movlb	0	; () banked
  7414  000498  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7415  00049A  E105               	bnz	l5400
  7416  00049C  0E02               	movlw	2
  7417  00049E  0100               	movlb	0	; () banked
  7418  0004A0  5DC4               	subwf	sprintf@exp& (0+255),w,b
  7419  0004A2  A0D8               	btfss	status,0,c
  7420  0004A4  D046               	goto	l5414
  7421  0004A6                     l5400:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7425  0004A6  C0BC  F060         	movff	sprintf@tmpval,___ftge@ff1
  7426  0004AA  C0BD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7427  0004AE  C0BE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7428  0004B2  0E70               	movlw	112
  7429  0004B4  0100               	movlb	0	; () banked
  7430  0004B6  6F63               	movwf	___ftge@ff2& (0+255),b
  7431  0004B8  0E89               	movlw	137
  7432  0004BA  0100               	movlb	0	; () banked
  7433  0004BC  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7434  0004BE  0E40               	movlw	64
  7435  0004C0  0100               	movlb	0	; () banked
  7436  0004C2  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7437  0004C4  ECFE  F018         	call	___ftge	;wreg free
  7438  0004C8  0100               	movlb	0	; () banked
  7439  0004CA  B0D8               	btfsc	status,0,c
  7440  0004CC  D003               	goto	l5404
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7444  0004CE  0100               	movlb	0	; () banked
  7445  0004D0  0EF7               	movlw	247
  7446  0004D2  D002               	goto	L2
  7447  0004D4                     l5404:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7451  0004D4  0100               	movlb	0	; () banked
  7452  0004D6  0EF8               	movlw	248
  7453  0004D8                     L2:
  7454  0004D8  27C4               	addwf	sprintf@exp& (0+255),f,b
  7455  0004DA  0EFF               	movlw	255
  7456  0004DC  23C5               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;doprnt.c: 1124: }
  7460                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7461                           
  7462                           ; BSR set to: 0
  7463  0004DE  0100               	movlb	0	; () banked
  7464  0004E0  51C4               	movf	sprintf@exp& (0+255),w,b
  7465  0004E2  ECF9  F009         	call	_scale
  7466  0004E6  C083  F0BC         	movff	?_scale,sprintf@tmpval
  7467  0004EA  C084  F0BD         	movff	?_scale+1,sprintf@tmpval+1
  7468  0004EE  C085  F0BE         	movff	?_scale+2,sprintf@tmpval+2
  7469                           
  7470                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7471  0004F2  C0C6  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  7472  0004F6  C0C7  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7473  0004FA  C0C8  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7474  0004FE  C0BC  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7475  000502  C0BD  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7476  000506  C0BE  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7477  00050A  ECD1  F012         	call	__tdiv_to_l_	;wreg free
  7478  00050E  C060  F0C0         	movff	?__tdiv_to_l_,sprintf@val
  7479  000512  C061  F0C1         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7480  000516  C062  F0C2         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7481  00051A  C063  F0C3         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7482                           
  7483                           ;doprnt.c: 1129: fval = 0.0;
  7484  00051E  0E00               	movlw	0
  7485  000520  0100               	movlb	0	; () banked
  7486  000522  6FC6               	movwf	sprintf@fval& (0+255),b
  7487  000524  0E00               	movlw	0
  7488  000526  0100               	movlb	0	; () banked
  7489  000528  6FC7               	movwf	(sprintf@fval+1)& (0+255),b
  7490  00052A  0E00               	movlw	0
  7491  00052C  0100               	movlb	0	; () banked
  7492  00052E  6FC8               	movwf	(sprintf@fval+2)& (0+255),b
  7493                           
  7494                           ;doprnt.c: 1130: } else {
  7495  000530  D033               	goto	l5418
  7496  000532                     l5414:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7500  000532  C0C6  F08A         	movff	sprintf@fval,___fttol@f1
  7501  000536  C0C7  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  7502  00053A  C0C8  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  7503  00053E  EC83  F016         	call	___fttol	;wreg free
  7504  000542  C08A  F0C0         	movff	?___fttol,sprintf@val
  7505  000546  C08B  F0C1         	movff	?___fttol+1,sprintf@val+1
  7506  00054A  C08C  F0C2         	movff	?___fttol+2,sprintf@val+2
  7507  00054E  C08D  F0C3         	movff	?___fttol+3,sprintf@val+3
  7508                           
  7509                           ;doprnt.c: 1132: fval -= (double)val;
  7510  000552  C0C6  F099         	movff	sprintf@fval,___ftsub@f1
  7511  000556  C0C7  F09A         	movff	sprintf@fval+1,___ftsub@f1+1
  7512  00055A  C0C8  F09B         	movff	sprintf@fval+2,___ftsub@f1+2
  7513  00055E  C0C0  F068         	movff	sprintf@val,___lltoft@c
  7514  000562  C0C1  F069         	movff	sprintf@val+1,___lltoft@c+1
  7515  000566  C0C2  F06A         	movff	sprintf@val+2,___lltoft@c+2
  7516  00056A  C0C3  F06B         	movff	sprintf@val+3,___lltoft@c+3
  7517  00056E  ECC1  F01B         	call	___lltoft	;wreg free
  7518  000572  C068  F09C         	movff	?___lltoft,___ftsub@f2
  7519  000576  C069  F09D         	movff	?___lltoft+1,___ftsub@f2+1
  7520  00057A  C06A  F09E         	movff	?___lltoft+2,___ftsub@f2+2
  7521  00057E  ECEC  F01C         	call	___ftsub	;wreg free
  7522  000582  C099  F0C6         	movff	?___ftsub,sprintf@fval
  7523  000586  C09A  F0C7         	movff	?___ftsub+1,sprintf@fval+1
  7524  00058A  C09B  F0C8         	movff	?___ftsub+2,sprintf@fval+2
  7525                           
  7526                           ;doprnt.c: 1133: exp = 0;
  7527  00058E  0E00               	movlw	0
  7528  000590  0100               	movlb	0	; () banked
  7529  000592  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  7530  000594  0E00               	movlw	0
  7531  000596  6FC4               	movwf	sprintf@exp& (0+255),b
  7532  000598                     l5418:
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;doprnt.c: 1134: }
  7536                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7537  000598  0E01               	movlw	1
  7538  00059A  0100               	movlb	0	; () banked
  7539  00059C  6FCB               	movwf	sprintf@c& (0+255),b
  7540  00059E                     l5420:
  7541                           
  7542                           ; BSR set to: 0
  7543  00059E  0E0A               	movlw	10
  7544  0005A0  0100               	movlb	0	; () banked
  7545  0005A2  19CB               	xorwf	sprintf@c& (0+255),w,b
  7546  0005A4  B4D8               	btfsc	status,2,c
  7547  0005A6  D01E               	goto	l5432
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;doprnt.c: 1137: if(val < dpowers[c])
  7551                           
  7552                           ; BSR set to: 0
  7553                           
  7554                           ; BSR set to: 0
  7555  0005A8  0100               	movlb	0	; () banked
  7556  0005AA  51CB               	movf	sprintf@c& (0+255),w,b
  7557  0005AC  0D04               	mullw	4
  7558  0005AE  0EF5               	movlw	low _dpowers
  7559  0005B0  24F3               	addwf	prodl,w,c
  7560  0005B2  6EF6               	movwf	tblptrl,c
  7561  0005B4  0E7E               	movlw	high _dpowers
  7562  0005B6  20F4               	addwfc	prodh,w,c
  7563  0005B8  6EF7               	movwf	tblptrh,c
  7564  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7565  0005BA                     	endif
  7566  0005BA  0009               	tblrd		*+
  7567  0005BC  50F5               	movf	tablat,w,c
  7568  0005BE  0100               	movlb	0	; () banked
  7569  0005C0  5DC0               	subwf	sprintf@val& (0+255),w,b
  7570  0005C2  0009               	tblrd		*+
  7571  0005C4  50F5               	movf	tablat,w,c
  7572  0005C6  0100               	movlb	0	; () banked
  7573  0005C8  59C1               	subwfb	(sprintf@val+1)& (0+255),w,b
  7574  0005CA  0009               	tblrd		*+
  7575  0005CC  50F5               	movf	tablat,w,c
  7576  0005CE  0100               	movlb	0	; () banked
  7577  0005D0  59C2               	subwfb	(sprintf@val+2)& (0+255),w,b
  7578  0005D2  0009               	tblrd		*+
  7579  0005D4  50F5               	movf	tablat,w,c
  7580  0005D6  0100               	movlb	0	; () banked
  7581  0005D8  59C3               	subwfb	(sprintf@val+3)& (0+255),w,b
  7582  0005DA  A0D8               	btfss	status,0,c
  7583  0005DC  D003               	goto	l5432
  7584                           
  7585                           ; BSR set to: 0
  7586                           
  7587                           ; BSR set to: 0
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;doprnt.c: 1138: break;
  7591  0005DE  0100               	movlb	0	; () banked
  7592  0005E0  2BCB               	incf	sprintf@c& (0+255),f,b
  7593  0005E2  D7DD               	goto	l5420
  7594  0005E4                     l5432:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;doprnt.c: 1142: width -= prec + c + exp;
  7598  0005E4  C0CB  F0AD         	movff	sprintf@c,??_sprintf
  7599  0005E8  0100               	movlb	0	; () banked
  7600  0005EA  6BAE               	clrf	(??_sprintf+1)& (0+255),b
  7601  0005EC  BFAD               	btfsc	??_sprintf& (0+255),7,b
  7602  0005EE  07AE               	decf	(??_sprintf+1)& (0+255),f,b
  7603  0005F0  0100               	movlb	0	; () banked
  7604  0005F2  51C9               	movf	sprintf@prec& (0+255),w,b
  7605  0005F4  0100               	movlb	0	; () banked
  7606  0005F6  27AD               	addwf	??_sprintf& (0+255),f,b
  7607  0005F8  0100               	movlb	0	; () banked
  7608  0005FA  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7609  0005FC  0100               	movlb	0	; () banked
  7610  0005FE  23AE               	addwfc	(??_sprintf+1)& (0+255),f,b
  7611  000600  0100               	movlb	0	; () banked
  7612  000602  51C4               	movf	sprintf@exp& (0+255),w,b
  7613  000604  0100               	movlb	0	; () banked
  7614  000606  27AD               	addwf	??_sprintf& (0+255),f,b
  7615  000608  0100               	movlb	0	; () banked
  7616  00060A  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7617  00060C  0100               	movlb	0	; () banked
  7618  00060E  23AE               	addwfc	(??_sprintf+1)& (0+255),f,b
  7619  000610  0100               	movlb	0	; () banked
  7620  000612  51AD               	movf	??_sprintf& (0+255),w,b
  7621  000614  0100               	movlb	0	; () banked
  7622  000616  5FBA               	subwf	sprintf@width& (0+255),f,b
  7623  000618  0100               	movlb	0	; () banked
  7624  00061A  51AE               	movf	(??_sprintf+1)& (0+255),w,b
  7625  00061C  0100               	movlb	0	; () banked
  7626  00061E  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  7627                           
  7628                           ;doprnt.c: 1143: if(
  7629                           ;doprnt.c: 1147: prec)
  7630  000620  0100               	movlb	0	; () banked
  7631  000622  51C9               	movf	sprintf@prec& (0+255),w,b
  7632  000624  0100               	movlb	0	; () banked
  7633  000626  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7634  000628  B4D8               	btfsc	status,2,c
  7635  00062A  D004               	goto	l5436
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;doprnt.c: 1148: width--;
  7639  00062C  0100               	movlb	0	; () banked
  7640  00062E  07BA               	decf	sprintf@width& (0+255),f,b
  7641  000630  A0D8               	btfss	status,0,c
  7642  000632  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  7643  000634                     l5436:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;doprnt.c: 1149: if(flag & 0x03)
  7647  000634  0E03               	movlw	3
  7648  000636  0100               	movlb	0	; () banked
  7649  000638  15B8               	andwf	sprintf@flag& (0+255),w,b
  7650  00063A  0100               	movlb	0	; () banked
  7651  00063C  6FAD               	movwf	??_sprintf& (0+255),b
  7652  00063E  0E00               	movlw	0
  7653  000640  0100               	movlb	0	; () banked
  7654  000642  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7655  000644  0100               	movlb	0	; () banked
  7656  000646  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7657  000648  0100               	movlb	0	; () banked
  7658  00064A  51AD               	movf	??_sprintf& (0+255),w,b
  7659  00064C  0100               	movlb	0	; () banked
  7660  00064E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  7661  000650  B4D8               	btfsc	status,2,c
  7662  000652  D00E               	goto	l5446
  7663  000654  D009               	goto	l5444
  7664  000656                     l5440:
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7668  000656  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7669  00065A  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7670  00065E  0E20               	movlw	32
  7671  000660  6EDF               	movwf	indf2,c
  7672                           
  7673                           ; BSR set to: 0
  7674  000662  0100               	movlb	0	; () banked
  7675  000664  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7676  000666  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7677  000668                     l5444:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;doprnt.c: 1182: width--;
  7681  000668  0100               	movlb	0	; () banked
  7682  00066A  07BA               	decf	sprintf@width& (0+255),f,b
  7683  00066C  A0D8               	btfss	status,0,c
  7684  00066E  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  7685  000670                     l5446:
  7686                           
  7687                           ; BSR set to: 0
  7688  000670  0100               	movlb	0	; () banked
  7689  000672  BFBB               	btfsc	(sprintf@width+1)& (0+255),7,b
  7690  000674  D007               	goto	l5448
  7691  000676  0100               	movlb	0	; () banked
  7692  000678  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  7693  00067A  E1ED               	bnz	l5440
  7694  00067C  0100               	movlb	0	; () banked
  7695  00067E  05BA               	decf	sprintf@width& (0+255),w,b
  7696  000680  B0D8               	btfsc	status,0,c
  7697  000682  D7E9               	goto	l5440
  7698  000684                     l5448:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;doprnt.c: 1183: }
  7702                           ;doprnt.c: 1188: if(flag & 0x03)
  7703  000684  0E03               	movlw	3
  7704  000686  0100               	movlb	0	; () banked
  7705  000688  15B8               	andwf	sprintf@flag& (0+255),w,b
  7706  00068A  0100               	movlb	0	; () banked
  7707  00068C  6FAD               	movwf	??_sprintf& (0+255),b
  7708  00068E  0E00               	movlw	0
  7709  000690  0100               	movlb	0	; () banked
  7710  000692  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  7711  000694  0100               	movlb	0	; () banked
  7712  000696  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  7713  000698  0100               	movlb	0	; () banked
  7714  00069A  51AD               	movf	??_sprintf& (0+255),w,b
  7715  00069C  0100               	movlb	0	; () banked
  7716  00069E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  7717  0006A0  B4D8               	btfsc	status,2,c
  7718  0006A2  D055               	goto	l5462
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7722  0006A4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7723  0006A8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7724  0006AC  0E2D               	movlw	45
  7725  0006AE  D04D               	goto	L3
  7726  0006B0                     l5452:
  7727                           
  7728                           ; BSR set to: 0
  7729  0006B0  0100               	movlb	0	; () banked
  7730  0006B2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7731  0006B4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;doprnt.c: 1195: }
  7735                           ;doprnt.c: 1196: while(c--) {
  7736  0006B6  D04B               	goto	l5462
  7737  0006B8                     l5454:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;doprnt.c: 1200: {
  7741                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7742  0006B8  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  7743  0006BC  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7744  0006C0  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7745  0006C4  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7746  0006C8  0100               	movlb	0	; () banked
  7747  0006CA  51CB               	movf	sprintf@c& (0+255),w,b
  7748  0006CC  0D04               	mullw	4
  7749  0006CE  0EF5               	movlw	low _dpowers
  7750  0006D0  24F3               	addwf	prodl,w,c
  7751  0006D2  6EF6               	movwf	tblptrl,c
  7752  0006D4  0E7E               	movlw	high _dpowers
  7753  0006D6  20F4               	addwfc	prodh,w,c
  7754  0006D8  6EF7               	movwf	tblptrh,c
  7755  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7756  0006DA                     	endif
  7757  0006DA  0009               	tblrd		*+
  7758  0006DC  CFF5 F064          	movff	tablat,___lldiv@divisor
  7759  0006E0  0009               	tblrd		*+
  7760  0006E2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7761  0006E6  0009               	tblrd		*+
  7762  0006E8  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7763  0006EC  000A               	tblrd		*-
  7764  0006EE  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7765  0006F2  EC20  F01A         	call	___lldiv	;wreg free
  7766  0006F6  C060  F0BC         	movff	?___lldiv,sprintf@tmpval
  7767  0006FA  C061  F0BD         	movff	?___lldiv+1,sprintf@tmpval+1
  7768  0006FE  C062  F0BE         	movff	?___lldiv+2,sprintf@tmpval+2
  7769  000702  C063  F0BF         	movff	?___lldiv+3,sprintf@tmpval+3
  7770                           
  7771                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7772  000706  C0BC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7773  00070A  C0BD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7774  00070E  C0BE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7775  000712  C0BF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7776  000716  0E0A               	movlw	10
  7777  000718  0100               	movlb	0	; () banked
  7778  00071A  6F71               	movwf	___llmod@divisor& (0+255),b
  7779  00071C  0E00               	movlw	0
  7780  00071E  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7781  000720  0E00               	movlw	0
  7782  000722  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7783  000724  0E00               	movlw	0
  7784  000726  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7785  000728  EC2D  F01B         	call	___llmod	;wreg free
  7786  00072C  C06D  F0BC         	movff	?___llmod,sprintf@tmpval
  7787  000730  C06E  F0BD         	movff	?___llmod+1,sprintf@tmpval+1
  7788  000734  C06F  F0BE         	movff	?___llmod+2,sprintf@tmpval+2
  7789  000738  C070  F0BF         	movff	?___llmod+3,sprintf@tmpval+3
  7790                           
  7791                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7792  00073C  0100               	movlb	0	; () banked
  7793  00073E  51BC               	movf	sprintf@tmpval& (0+255),w,b
  7794  000740  0F30               	addlw	48
  7795  000742  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7796  000746  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7797  00074A                     L3:
  7798  00074A  6EDF               	movwf	indf2,c
  7799  00074C  D7B1               	goto	l5452
  7800  00074E                     l5462:
  7801                           
  7802                           ; BSR set to: 0
  7803  00074E  0100               	movlb	0	; () banked
  7804  000750  07CB               	decf	sprintf@c& (0+255),f,b
  7805  000752  0100               	movlb	0	; () banked
  7806  000754  29CB               	incf	sprintf@c& (0+255),w,b
  7807  000756  B4D8               	btfsc	status,2,c
  7808  000758  D00E               	goto	l5470
  7809  00075A  D7AE               	goto	l5454
  7810  00075C                     l5464:
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7814  00075C  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7815  000760  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7816  000764  0E30               	movlw	48
  7817  000766  6EDF               	movwf	indf2,c
  7818                           
  7819                           ; BSR set to: 0
  7820  000768  0100               	movlb	0	; () banked
  7821  00076A  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7822  00076C  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 1209: exp--;
  7826  00076E  0100               	movlb	0	; () banked
  7827  000770  07C4               	decf	sprintf@exp& (0+255),f,b
  7828  000772  A0D8               	btfss	status,0,c
  7829  000774  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  7830  000776                     l5470:
  7831                           
  7832                           ; BSR set to: 0
  7833  000776  0100               	movlb	0	; () banked
  7834  000778  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7835  00077A  D007               	goto	l5472
  7836  00077C  0100               	movlb	0	; () banked
  7837  00077E  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  7838  000780  E1ED               	bnz	l5464
  7839  000782  0100               	movlb	0	; () banked
  7840  000784  05C4               	decf	sprintf@exp& (0+255),w,b
  7841  000786  B0D8               	btfsc	status,0,c
  7842  000788  D7E9               	goto	l5464
  7843  00078A                     l5472:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;doprnt.c: 1210: }
  7847                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7848  00078A  0100               	movlb	0	; () banked
  7849  00078C  BFCA               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7850  00078E  D00C               	goto	l547
  7851  000790  0100               	movlb	0	; () banked
  7852  000792  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  7853  000794  E105               	bnz	u5720
  7854  000796  0E09               	movlw	9
  7855  000798  0100               	movlb	0	; () banked
  7856  00079A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  7857  00079C  A0D8               	btfss	status,0,c
  7858  00079E  D004               	goto	l547
  7859  0007A0                     u5720:
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7863  0007A0  0E08               	movlw	8
  7864  0007A2  0100               	movlb	0	; () banked
  7865  0007A4  6FCB               	movwf	sprintf@c& (0+255),b
  7866  0007A6  D002               	goto	l5476
  7867  0007A8                     l547:
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;doprnt.c: 1213: else
  7871                           ;doprnt.c: 1214: c = prec;
  7872  0007A8  C0C9  F0CB         	movff	sprintf@prec,sprintf@c
  7873  0007AC                     l5476:
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;doprnt.c: 1215: prec -= c;
  7877  0007AC  0100               	movlb	0	; () banked
  7878  0007AE  51CB               	movf	sprintf@c& (0+255),w,b
  7879  0007B0  0100               	movlb	0	; () banked
  7880  0007B2  5FC9               	subwf	sprintf@prec& (0+255),f,b
  7881  0007B4  0E00               	movlw	0
  7882  0007B6  0100               	movlb	0	; () banked
  7883  0007B8  BFCB               	btfsc	sprintf@c& (0+255),7,b
  7884  0007BA  0EFF               	movlw	255
  7885  0007BC  0100               	movlb	0	; () banked
  7886  0007BE  5BCA               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;doprnt.c: 1219: if(c)
  7890  0007C0  0100               	movlb	0	; () banked
  7891  0007C2  51CB               	movf	sprintf@c& (0+255),w,b
  7892  0007C4  0100               	movlb	0	; () banked
  7893  0007C6  B4D8               	btfsc	status,2,c
  7894  0007C8  D009               	goto	l5484
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7898  0007CA  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7899  0007CE  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7900  0007D2  0E2E               	movlw	46
  7901  0007D4  6EDF               	movwf	indf2,c
  7902                           
  7903                           ; BSR set to: 0
  7904  0007D6  0100               	movlb	0	; () banked
  7905  0007D8  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  7906  0007DA  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  7907  0007DC                     l5484:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7911  0007DC  0100               	movlb	0	; () banked
  7912  0007DE  51CB               	movf	sprintf@c& (0+255),w,b
  7913  0007E0  ECF9  F009         	call	_scale
  7914  0007E4  C083  F0B3         	movff	?_scale,_sprintf$2784
  7915  0007E8  C084  F0B4         	movff	?_scale+1,_sprintf$2784+1
  7916  0007EC  C085  F0B5         	movff	?_scale+2,_sprintf$2784+2
  7917                           
  7918                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7919  0007F0  C0C6  F077         	movff	sprintf@fval,___ftmul@f2
  7920  0007F4  C0C7  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  7921  0007F8  C0C8  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  7922  0007FC  C0B3  F074         	movff	_sprintf$2784,___ftmul@f1
  7923  000800  C0B4  F075         	movff	_sprintf$2784+1,___ftmul@f1+1
  7924  000804  C0B5  F076         	movff	_sprintf$2784+2,___ftmul@f1+2
  7925  000808  EC2E  F015         	call	___ftmul	;wreg free
  7926  00080C  C074  F08A         	movff	?___ftmul,___fttol@f1
  7927  000810  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  7928  000814  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  7929  000818  EC83  F016         	call	___fttol	;wreg free
  7930  00081C  C08A  F0C0         	movff	?___fttol,sprintf@val
  7931  000820  C08B  F0C1         	movff	?___fttol+1,sprintf@val+1
  7932  000824  C08C  F0C2         	movff	?___fttol+2,sprintf@val+2
  7933  000828  C08D  F0C3         	movff	?___fttol+3,sprintf@val+3
  7934                           
  7935                           ;doprnt.c: 1228: while(c--) {
  7936  00082C  D074               	goto	l5498
  7937  00082E                     l5488:
  7938                           
  7939                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7940  00082E  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  7941  000832  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7942  000836  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7943  00083A  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7944  00083E  0100               	movlb	0	; () banked
  7945  000840  51CB               	movf	sprintf@c& (0+255),w,b
  7946  000842  0D04               	mullw	4
  7947  000844  0EF5               	movlw	low _dpowers
  7948  000846  24F3               	addwf	prodl,w,c
  7949  000848  6EF6               	movwf	tblptrl,c
  7950  00084A  0E7E               	movlw	high _dpowers
  7951  00084C  20F4               	addwfc	prodh,w,c
  7952  00084E  6EF7               	movwf	tblptrh,c
  7953  000850                     	if	0	;There are less than 3 active tblptr bytes
  7954  000850                     	endif
  7955  000850  0009               	tblrd		*+
  7956  000852  CFF5 F064          	movff	tablat,___lldiv@divisor
  7957  000856  0009               	tblrd		*+
  7958  000858  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7959  00085C  0009               	tblrd		*+
  7960  00085E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7961  000862  000A               	tblrd		*-
  7962  000864  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7963  000868  EC20  F01A         	call	___lldiv	;wreg free
  7964  00086C  C060  F0BC         	movff	?___lldiv,sprintf@tmpval
  7965  000870  C061  F0BD         	movff	?___lldiv+1,sprintf@tmpval+1
  7966  000874  C062  F0BE         	movff	?___lldiv+2,sprintf@tmpval+2
  7967  000878  C063  F0BF         	movff	?___lldiv+3,sprintf@tmpval+3
  7968                           
  7969                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7970  00087C  C0BC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7971  000880  C0BD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7972  000884  C0BE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7973  000888  C0BF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7974  00088C  0E0A               	movlw	10
  7975  00088E  0100               	movlb	0	; () banked
  7976  000890  6F71               	movwf	___llmod@divisor& (0+255),b
  7977  000892  0E00               	movlw	0
  7978  000894  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7979  000896  0E00               	movlw	0
  7980  000898  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7981  00089A  0E00               	movlw	0
  7982  00089C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7983  00089E  EC2D  F01B         	call	___llmod	;wreg free
  7984  0008A2  C06D  F0BC         	movff	?___llmod,sprintf@tmpval
  7985  0008A6  C06E  F0BD         	movff	?___llmod+1,sprintf@tmpval+1
  7986  0008AA  C06F  F0BE         	movff	?___llmod+2,sprintf@tmpval+2
  7987  0008AE  C070  F0BF         	movff	?___llmod+3,sprintf@tmpval+3
  7988                           
  7989                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7990  0008B2  0100               	movlb	0	; () banked
  7991  0008B4  51BC               	movf	sprintf@tmpval& (0+255),w,b
  7992  0008B6  0F30               	addlw	48
  7993  0008B8  C09F  FFD9         	movff	sprintf@sp,fsr2l
  7994  0008BC  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  7995  0008C0  6EDF               	movwf	indf2,c
  7996                           
  7997                           ; BSR set to: 0
  7998  0008C2  0100               	movlb	0	; () banked
  7999  0008C4  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8000  0008C6  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;doprnt.c: 1232: val %= dpowers[c];
  8004  0008C8  C0C0  F06D         	movff	sprintf@val,___llmod@dividend
  8005  0008CC  C0C1  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  8006  0008D0  C0C2  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  8007  0008D4  C0C3  F070         	movff	sprintf@val+3,___llmod@dividend+3
  8008  0008D8  0100               	movlb	0	; () banked
  8009  0008DA  51CB               	movf	sprintf@c& (0+255),w,b
  8010  0008DC  0D04               	mullw	4
  8011  0008DE  0EF5               	movlw	low _dpowers
  8012  0008E0  24F3               	addwf	prodl,w,c
  8013  0008E2  6EF6               	movwf	tblptrl,c
  8014  0008E4  0E7E               	movlw	high _dpowers
  8015  0008E6  20F4               	addwfc	prodh,w,c
  8016  0008E8  6EF7               	movwf	tblptrh,c
  8017  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  8018  0008EA                     	endif
  8019  0008EA  0009               	tblrd		*+
  8020  0008EC  CFF5 F071          	movff	tablat,___llmod@divisor
  8021  0008F0  0009               	tblrd		*+
  8022  0008F2  CFF5 F072          	movff	tablat,___llmod@divisor+1
  8023  0008F6  0009               	tblrd		*+
  8024  0008F8  CFF5 F073          	movff	tablat,___llmod@divisor+2
  8025  0008FC  000A               	tblrd		*-
  8026  0008FE  CFF5 F074          	movff	tablat,___llmod@divisor+3
  8027  000902  EC2D  F01B         	call	___llmod	;wreg free
  8028  000906  C06D  F0C0         	movff	?___llmod,sprintf@val
  8029  00090A  C06E  F0C1         	movff	?___llmod+1,sprintf@val+1
  8030  00090E  C06F  F0C2         	movff	?___llmod+2,sprintf@val+2
  8031  000912  C070  F0C3         	movff	?___llmod+3,sprintf@val+3
  8032  000916                     l5498:
  8033  000916  0100               	movlb	0	; () banked
  8034  000918  07CB               	decf	sprintf@c& (0+255),f,b
  8035  00091A  0100               	movlb	0	; () banked
  8036  00091C  29CB               	incf	sprintf@c& (0+255),w,b
  8037  00091E  B4D8               	btfsc	status,2,c
  8038  000920  D00E               	goto	l5506
  8039  000922  D785               	goto	l5488
  8040  000924                     l5500:
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8044  000924  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8045  000928  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8046  00092C  0E30               	movlw	48
  8047  00092E  6EDF               	movwf	indf2,c
  8048                           
  8049                           ; BSR set to: 0
  8050  000930  0100               	movlb	0	; () banked
  8051  000932  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8052  000934  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;doprnt.c: 1237: prec--;
  8056  000936  0100               	movlb	0	; () banked
  8057  000938  07C9               	decf	sprintf@prec& (0+255),f,b
  8058  00093A  A0D8               	btfss	status,0,c
  8059  00093C  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  8060  00093E                     l5506:
  8061                           
  8062                           ; BSR set to: 0
  8063  00093E  0100               	movlb	0	; () banked
  8064  000940  51C9               	movf	sprintf@prec& (0+255),w,b
  8065  000942  0100               	movlb	0	; () banked
  8066  000944  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8067  000946  B4D8               	btfsc	status,2,c
  8068  000948  D169               	goto	l5588
  8069  00094A  D7EC               	goto	l5500
  8070  00094C                     l5508:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;doprnt.c: 1246: }
  8074                           ;doprnt.c: 1253: {
  8075                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8076  00094C  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  8077  000950  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  8078  000954  CFDE F0C0          	movff	postinc2,sprintf@val
  8079  000958  CFDD F0C1          	movff	postdec2,sprintf@val+1
  8080  00095C  0100               	movlb	0	; () banked
  8081  00095E  0E00               	movlw	0
  8082  000960  BFC1               	btfsc	(sprintf@val+1)& (0+255),7,b
  8083  000962  0EFF               	movlw	-1
  8084  000964  6FC2               	movwf	(sprintf@val+2)& (0+255),b
  8085  000966  6FC3               	movwf	(sprintf@val+3)& (0+255),b
  8086                           
  8087                           ; BSR set to: 0
  8088  000968  0E02               	movlw	2
  8089  00096A  0100               	movlb	0	; () banked
  8090  00096C  27B6               	addwf	sprintf@ap& (0+255),f,b
  8091  00096E  0E00               	movlw	0
  8092  000970  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;doprnt.c: 1261: if((long)val < 0) {
  8096  000972  0100               	movlb	0	; () banked
  8097  000974  AFC3               	btfss	(sprintf@val+3)& (0+255),7,b
  8098  000976  D00C               	goto	l5518
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;doprnt.c: 1262: flag |= 0x03;
  8102  000978  0E03               	movlw	3
  8103  00097A  0100               	movlb	0	; () banked
  8104  00097C  13B8               	iorwf	sprintf@flag& (0+255),f,b
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;doprnt.c: 1263: val = -val;
  8108  00097E  0100               	movlb	0	; () banked
  8109  000980  1FC3               	comf	(sprintf@val+3)& (0+255),f,b
  8110  000982  1FC2               	comf	(sprintf@val+2)& (0+255),f,b
  8111  000984  1FC1               	comf	(sprintf@val+1)& (0+255),f,b
  8112  000986  6DC0               	negf	sprintf@val& (0+255),b
  8113  000988  0E00               	movlw	0
  8114  00098A  23C1               	addwfc	(sprintf@val+1)& (0+255),f,b
  8115  00098C  23C2               	addwfc	(sprintf@val+2)& (0+255),f,b
  8116  00098E  23C3               	addwfc	(sprintf@val+3)& (0+255),f,b
  8117  000990                     l5518:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;doprnt.c: 1264: }
  8121                           ;doprnt.c: 1266: }
  8122                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8123  000990  0100               	movlb	0	; () banked
  8124  000992  51C9               	movf	sprintf@prec& (0+255),w,b
  8125  000994  0100               	movlb	0	; () banked
  8126  000996  11CA               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8127  000998  A4D8               	btfss	status,2,c
  8128  00099A  D00D               	goto	l5524
  8129                           
  8130                           ; BSR set to: 0
  8131  00099C  0100               	movlb	0	; () banked
  8132  00099E  51C0               	movf	sprintf@val& (0+255),w,b
  8133  0009A0  0100               	movlb	0	; () banked
  8134  0009A2  11C1               	iorwf	(sprintf@val+1)& (0+255),w,b
  8135  0009A4  0100               	movlb	0	; () banked
  8136  0009A6  11C2               	iorwf	(sprintf@val+2)& (0+255),w,b
  8137  0009A8  0100               	movlb	0	; () banked
  8138  0009AA  11C3               	iorwf	(sprintf@val+3)& (0+255),w,b
  8139  0009AC  A4D8               	btfss	status,2,c
  8140  0009AE  D003               	goto	l5524
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;doprnt.c: 1291: prec++;
  8144  0009B0  0100               	movlb	0	; () banked
  8145  0009B2  4BC9               	infsnz	sprintf@prec& (0+255),f,b
  8146  0009B4  2BCA               	incf	(sprintf@prec+1)& (0+255),f,b
  8147  0009B6                     l5524:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8151  0009B6  0E01               	movlw	1
  8152  0009B8  0100               	movlb	0	; () banked
  8153  0009BA  6FCB               	movwf	sprintf@c& (0+255),b
  8154  0009BC                     l5526:
  8155                           
  8156                           ; BSR set to: 0
  8157  0009BC  0E0A               	movlw	10
  8158  0009BE  0100               	movlb	0	; () banked
  8159  0009C0  19CB               	xorwf	sprintf@c& (0+255),w,b
  8160  0009C2  B4D8               	btfsc	status,2,c
  8161  0009C4  D01E               	goto	l5538
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;doprnt.c: 1306: if(val < dpowers[c])
  8165                           
  8166                           ; BSR set to: 0
  8167                           
  8168                           ; BSR set to: 0
  8169  0009C6  0100               	movlb	0	; () banked
  8170  0009C8  51CB               	movf	sprintf@c& (0+255),w,b
  8171  0009CA  0D04               	mullw	4
  8172  0009CC  0EF5               	movlw	low _dpowers
  8173  0009CE  24F3               	addwf	prodl,w,c
  8174  0009D0  6EF6               	movwf	tblptrl,c
  8175  0009D2  0E7E               	movlw	high _dpowers
  8176  0009D4  20F4               	addwfc	prodh,w,c
  8177  0009D6  6EF7               	movwf	tblptrh,c
  8178  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8179  0009D8                     	endif
  8180  0009D8  0009               	tblrd		*+
  8181  0009DA  50F5               	movf	tablat,w,c
  8182  0009DC  0100               	movlb	0	; () banked
  8183  0009DE  5DC0               	subwf	sprintf@val& (0+255),w,b
  8184  0009E0  0009               	tblrd		*+
  8185  0009E2  50F5               	movf	tablat,w,c
  8186  0009E4  0100               	movlb	0	; () banked
  8187  0009E6  59C1               	subwfb	(sprintf@val+1)& (0+255),w,b
  8188  0009E8  0009               	tblrd		*+
  8189  0009EA  50F5               	movf	tablat,w,c
  8190  0009EC  0100               	movlb	0	; () banked
  8191  0009EE  59C2               	subwfb	(sprintf@val+2)& (0+255),w,b
  8192  0009F0  0009               	tblrd		*+
  8193  0009F2  50F5               	movf	tablat,w,c
  8194  0009F4  0100               	movlb	0	; () banked
  8195  0009F6  59C3               	subwfb	(sprintf@val+3)& (0+255),w,b
  8196  0009F8  A0D8               	btfss	status,0,c
  8197  0009FA  D003               	goto	l5538
  8198                           
  8199                           ; BSR set to: 0
  8200                           
  8201                           ; BSR set to: 0
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;doprnt.c: 1307: break;
  8205  0009FC  0100               	movlb	0	; () banked
  8206  0009FE  2BCB               	incf	sprintf@c& (0+255),f,b
  8207  000A00  D7DD               	goto	l5526
  8208  000A02                     l5538:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;doprnt.c: 1339: if(c < prec)
  8212  000A02  0E80               	movlw	128
  8213  000A04  0100               	movlb	0	; () banked
  8214  000A06  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8215  000A08  0E7F               	movlw	127
  8216  000A0A  0100               	movlb	0	; () banked
  8217  000A0C  6FAD               	movwf	??_sprintf& (0+255),b
  8218  000A0E  0100               	movlb	0	; () banked
  8219  000A10  51C9               	movf	sprintf@prec& (0+255),w,b
  8220  000A12  0100               	movlb	0	; () banked
  8221  000A14  5DCB               	subwf	sprintf@c& (0+255),w,b
  8222  000A16  0100               	movlb	0	; () banked
  8223  000A18  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8224  000A1A  0A80               	xorlw	128
  8225  000A1C  0100               	movlb	0	; () banked
  8226  000A1E  59AD               	subwfb	??_sprintf& (0+255),w,b
  8227  000A20  B0D8               	btfsc	status,0,c
  8228  000A22  D003               	goto	l5542
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;doprnt.c: 1340: c = prec;
  8232  000A24  C0C9  F0CB         	movff	sprintf@prec,sprintf@c
  8233  000A28  D018               	goto	l5546
  8234  000A2A                     l5542:
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;doprnt.c: 1341: else if(prec < c)
  8238  000A2A  0100               	movlb	0	; () banked
  8239  000A2C  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8240  000A2E  0A80               	xorlw	128
  8241  000A30  0100               	movlb	0	; () banked
  8242  000A32  6FAD               	movwf	??_sprintf& (0+255),b
  8243  000A34  0100               	movlb	0	; () banked
  8244  000A36  51CB               	movf	sprintf@c& (0+255),w,b
  8245  000A38  0100               	movlb	0	; () banked
  8246  000A3A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  8247  000A3C  0E80               	movlw	128
  8248  000A3E  0100               	movlb	0	; () banked
  8249  000A40  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8250  000A42  0E7F               	movlw	127
  8251  000A44  0100               	movlb	0	; () banked
  8252  000A46  59AD               	subwfb	??_sprintf& (0+255),w,b
  8253  000A48  B0D8               	btfsc	status,0,c
  8254  000A4A  D007               	goto	l5546
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;doprnt.c: 1342: prec = c;
  8258  000A4C  0100               	movlb	0	; () banked
  8259  000A4E  51CB               	movf	sprintf@c& (0+255),w,b
  8260  000A50  0100               	movlb	0	; () banked
  8261  000A52  6FC9               	movwf	sprintf@prec& (0+255),b
  8262  000A54  6BCA               	clrf	(sprintf@prec+1)& (0+255),b
  8263  000A56  BFC9               	btfsc	sprintf@prec& (0+255),7,b
  8264  000A58  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  8265  000A5A                     l5546:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8269  000A5A  0100               	movlb	0	; () banked
  8270  000A5C  51BA               	movf	sprintf@width& (0+255),w,b
  8271  000A5E  0100               	movlb	0	; () banked
  8272  000A60  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8273  000A62  B4D8               	btfsc	status,2,c
  8274  000A64  D014               	goto	l5552
  8275                           
  8276                           ; BSR set to: 0
  8277  000A66  0E03               	movlw	3
  8278  000A68  0100               	movlb	0	; () banked
  8279  000A6A  15B8               	andwf	sprintf@flag& (0+255),w,b
  8280  000A6C  0100               	movlb	0	; () banked
  8281  000A6E  6FAD               	movwf	??_sprintf& (0+255),b
  8282  000A70  0E00               	movlw	0
  8283  000A72  0100               	movlb	0	; () banked
  8284  000A74  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  8285  000A76  0100               	movlb	0	; () banked
  8286  000A78  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  8287  000A7A  0100               	movlb	0	; () banked
  8288  000A7C  51AD               	movf	??_sprintf& (0+255),w,b
  8289  000A7E  0100               	movlb	0	; () banked
  8290  000A80  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  8291  000A82  B4D8               	btfsc	status,2,c
  8292  000A84  D004               	goto	l5552
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;doprnt.c: 1346: width--;
  8296  000A86  0100               	movlb	0	; () banked
  8297  000A88  07BA               	decf	sprintf@width& (0+255),f,b
  8298  000A8A  A0D8               	btfss	status,0,c
  8299  000A8C  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  8300  000A8E                     l5552:
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8304  000A8E  0100               	movlb	0	; () banked
  8305  000A90  ADB9               	btfss	(sprintf@flag+1)& (0+255),6,b
  8306  000A92  D01E               	goto	l5560
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;doprnt.c: 1349: if(width > prec)
  8310  000A94  0100               	movlb	0	; () banked
  8311  000A96  51BA               	movf	sprintf@width& (0+255),w,b
  8312  000A98  0100               	movlb	0	; () banked
  8313  000A9A  5DC9               	subwf	sprintf@prec& (0+255),w,b
  8314  000A9C  0100               	movlb	0	; () banked
  8315  000A9E  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8316  000AA0  0A80               	xorlw	128
  8317  000AA2  0100               	movlb	0	; () banked
  8318  000AA4  6FAD               	movwf	??_sprintf& (0+255),b
  8319  000AA6  0100               	movlb	0	; () banked
  8320  000AA8  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  8321  000AAA  0A80               	xorlw	128
  8322  000AAC  0100               	movlb	0	; () banked
  8323  000AAE  59AD               	subwfb	??_sprintf& (0+255),w,b
  8324  000AB0  B0D8               	btfsc	status,0,c
  8325  000AB2  D009               	goto	l5558
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;doprnt.c: 1350: width -= prec;
  8329  000AB4  0100               	movlb	0	; () banked
  8330  000AB6  51C9               	movf	sprintf@prec& (0+255),w,b
  8331  000AB8  0100               	movlb	0	; () banked
  8332  000ABA  5FBA               	subwf	sprintf@width& (0+255),f,b
  8333  000ABC  0100               	movlb	0	; () banked
  8334  000ABE  51CA               	movf	(sprintf@prec+1)& (0+255),w,b
  8335  000AC0  0100               	movlb	0	; () banked
  8336  000AC2  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  8337  000AC4  D005               	goto	l5560
  8338  000AC6                     l5558:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;doprnt.c: 1351: else
  8342                           ;doprnt.c: 1352: width = 0;
  8343  000AC6  0E00               	movlw	0
  8344  000AC8  0100               	movlb	0	; () banked
  8345  000ACA  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  8346  000ACC  0E00               	movlw	0
  8347  000ACE  6FBA               	movwf	sprintf@width& (0+255),b
  8348  000AD0                     l5560:
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;doprnt.c: 1353: }
  8352                           ;doprnt.c: 1381: if(width > c)
  8353  000AD0  0E80               	movlw	128
  8354  000AD2  0100               	movlb	0	; () banked
  8355  000AD4  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8356  000AD6  0E7F               	movlw	127
  8357  000AD8  0100               	movlb	0	; () banked
  8358  000ADA  6FAD               	movwf	??_sprintf& (0+255),b
  8359  000ADC  0100               	movlb	0	; () banked
  8360  000ADE  51BA               	movf	sprintf@width& (0+255),w,b
  8361  000AE0  0100               	movlb	0	; () banked
  8362  000AE2  5DCB               	subwf	sprintf@c& (0+255),w,b
  8363  000AE4  0100               	movlb	0	; () banked
  8364  000AE6  51BB               	movf	(sprintf@width+1)& (0+255),w,b
  8365  000AE8  0A80               	xorlw	128
  8366  000AEA  0100               	movlb	0	; () banked
  8367  000AEC  59AD               	subwfb	??_sprintf& (0+255),w,b
  8368  000AEE  B0D8               	btfsc	status,0,c
  8369  000AF0  D00B               	goto	l5564
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;doprnt.c: 1382: width -= c;
  8373  000AF2  0100               	movlb	0	; () banked
  8374  000AF4  51CB               	movf	sprintf@c& (0+255),w,b
  8375  000AF6  0100               	movlb	0	; () banked
  8376  000AF8  5FBA               	subwf	sprintf@width& (0+255),f,b
  8377  000AFA  0E00               	movlw	0
  8378  000AFC  0100               	movlb	0	; () banked
  8379  000AFE  BFCB               	btfsc	sprintf@c& (0+255),7,b
  8380  000B00  0EFF               	movlw	255
  8381  000B02  0100               	movlb	0	; () banked
  8382  000B04  5BBB               	subwfb	(sprintf@width+1)& (0+255),f,b
  8383  000B06  D005               	goto	l5566
  8384  000B08                     l5564:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;doprnt.c: 1383: else
  8388                           ;doprnt.c: 1384: width = 0;
  8389  000B08  0E00               	movlw	0
  8390  000B0A  0100               	movlb	0	; () banked
  8391  000B0C  6FBB               	movwf	(sprintf@width+1)& (0+255),b
  8392  000B0E  0E00               	movlw	0
  8393  000B10  6FBA               	movwf	sprintf@width& (0+255),b
  8394  000B12                     l5566:
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;doprnt.c: 1422: {
  8398                           ;doprnt.c: 1424: if(width
  8399                           ;doprnt.c: 1428: )
  8400  000B12  0100               	movlb	0	; () banked
  8401  000B14  51BA               	movf	sprintf@width& (0+255),w,b
  8402  000B16  0100               	movlb	0	; () banked
  8403  000B18  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8404  000B1A  B4D8               	btfsc	status,2,c
  8405  000B1C  D013               	goto	l5574
  8406  000B1E                     l5568:
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8410  000B1E  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8411  000B22  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8412  000B26  0E20               	movlw	32
  8413  000B28  6EDF               	movwf	indf2,c
  8414                           
  8415                           ; BSR set to: 0
  8416  000B2A  0100               	movlb	0	; () banked
  8417  000B2C  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8418  000B2E  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;doprnt.c: 1431: while(--width);
  8422  000B30  0100               	movlb	0	; () banked
  8423  000B32  07BA               	decf	sprintf@width& (0+255),f,b
  8424  000B34  A0D8               	btfss	status,0,c
  8425  000B36  07BB               	decf	(sprintf@width+1)& (0+255),f,b
  8426  000B38  0100               	movlb	0	; () banked
  8427  000B3A  51BA               	movf	sprintf@width& (0+255),w,b
  8428  000B3C  0100               	movlb	0	; () banked
  8429  000B3E  11BB               	iorwf	(sprintf@width+1)& (0+255),w,b
  8430  000B40  A4D8               	btfss	status,2,c
  8431  000B42  D7ED               	goto	l5568
  8432  000B44                     l5574:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;doprnt.c: 1438: if(flag & 0x03)
  8436  000B44  0E03               	movlw	3
  8437  000B46  0100               	movlb	0	; () banked
  8438  000B48  15B8               	andwf	sprintf@flag& (0+255),w,b
  8439  000B4A  0100               	movlb	0	; () banked
  8440  000B4C  6FAD               	movwf	??_sprintf& (0+255),b
  8441  000B4E  0E00               	movlw	0
  8442  000B50  0100               	movlb	0	; () banked
  8443  000B52  15B9               	andwf	(sprintf@flag+1)& (0+255),w,b
  8444  000B54  0100               	movlb	0	; () banked
  8445  000B56  6FAE               	movwf	(??_sprintf+1)& (0+255),b
  8446  000B58  0100               	movlb	0	; () banked
  8447  000B5A  51AD               	movf	??_sprintf& (0+255),w,b
  8448  000B5C  0100               	movlb	0	; () banked
  8449  000B5E  11AE               	iorwf	(??_sprintf+1)& (0+255),w,b
  8450  000B60  B4D8               	btfsc	status,2,c
  8451  000B62  D051               	goto	l5586
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8455  000B64  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8456  000B68  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8457  000B6C  0E2D               	movlw	45
  8458  000B6E  6EDF               	movwf	indf2,c
  8459  000B70  D047               	goto	l5584
  8460  000B72                     l5580:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;doprnt.c: 1478: {
  8464                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8465  000B72  C0C9  F0AD         	movff	sprintf@prec,??_sprintf
  8466  000B76  C0CA  F0AE         	movff	sprintf@prec+1,??_sprintf+1
  8467  000B7A  0100               	movlb	0	; () banked
  8468  000B7C  90D8               	bcf	status,0,c
  8469  000B7E  37AD               	rlcf	??_sprintf& (0+255),f,b
  8470  000B80  37AE               	rlcf	(??_sprintf+1)& (0+255),f,b
  8471  000B82  0100               	movlb	0	; () banked
  8472  000B84  90D8               	bcf	status,0,c
  8473  000B86  37AD               	rlcf	??_sprintf& (0+255),f,b
  8474  000B88  37AE               	rlcf	(??_sprintf+1)& (0+255),f,b
  8475  000B8A  0EF5               	movlw	low _dpowers
  8476  000B8C  0100               	movlb	0	; () banked
  8477  000B8E  25AD               	addwf	??_sprintf& (0+255),w,b
  8478  000B90  6EF6               	movwf	tblptrl,c
  8479  000B92  0E7E               	movlw	high _dpowers
  8480  000B94  21AE               	addwfc	(??_sprintf+1)& (0+255),w,b
  8481  000B96  6EF7               	movwf	tblptrh,c
  8482  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8483  000B98                     	endif
  8484  000B98  0009               	tblrd		*+
  8485  000B9A  CFF5 F064          	movff	tablat,___lldiv@divisor
  8486  000B9E  0009               	tblrd		*+
  8487  000BA0  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8488  000BA4  0009               	tblrd		*+
  8489  000BA6  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8490  000BAA  000A               	tblrd		*-
  8491  000BAC  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8492  000BB0  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  8493  000BB4  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8494  000BB8  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8495  000BBC  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8496  000BC0  EC20  F01A         	call	___lldiv	;wreg free
  8497  000BC4  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8498  000BC8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8499  000BCC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8500  000BD0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8501  000BD4  0E0A               	movlw	10
  8502  000BD6  0100               	movlb	0	; () banked
  8503  000BD8  6F71               	movwf	___llmod@divisor& (0+255),b
  8504  000BDA  0E00               	movlw	0
  8505  000BDC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8506  000BDE  0E00               	movlw	0
  8507  000BE0  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8508  000BE2  0E00               	movlw	0
  8509  000BE4  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8510  000BE6  EC2D  F01B         	call	___llmod	;wreg free
  8511  000BEA  0100               	movlb	0	; () banked
  8512  000BEC  516D               	movf	?___llmod& (0+255),w,b
  8513  000BEE  0F30               	addlw	48
  8514  000BF0  0100               	movlb	0	; () banked
  8515  000BF2  6FCB               	movwf	sprintf@c& (0+255),b
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;doprnt.c: 1523: }
  8519                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8520  000BF4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8521  000BF8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8522  000BFC  C0CB  FFDF         	movff	sprintf@c,indf2
  8523  000C00                     l5584:
  8524                           
  8525                           ; BSR set to: 0
  8526  000C00  0100               	movlb	0	; () banked
  8527  000C02  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  8528  000C04  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  8529  000C06                     l5586:
  8530                           
  8531                           ; BSR set to: 0
  8532  000C06  0100               	movlb	0	; () banked
  8533  000C08  07C9               	decf	sprintf@prec& (0+255),f,b
  8534  000C0A  A0D8               	btfss	status,0,c
  8535  000C0C  07CA               	decf	(sprintf@prec+1)& (0+255),f,b
  8536  000C0E  0100               	movlb	0	; () banked
  8537  000C10  29C9               	incf	sprintf@prec& (0+255),w,b
  8538  000C12  E1AF               	bnz	l5580
  8539  000C14  0100               	movlb	0	; () banked
  8540  000C16  29CA               	incf	(sprintf@prec+1)& (0+255),w,b
  8541  000C18  A4D8               	btfss	status,2,c
  8542  000C1A  D7AB               	goto	l5580
  8543  000C1C                     l5588:
  8544                           
  8545                           ; BSR set to: 0
  8546  000C1C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  8547  000C20  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  8548  000C24  0100               	movlb	0	; () banked
  8549  000C26  4BA1               	infsnz	sprintf@f& (0+255),f,b
  8550  000C28  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  8551  000C2A                     	if	0	;tblptru may be non-zero
  8552  000C2A                     	endif
  8553  000C2A                     	if	0	;tblptru may be non-zero
  8554  000C2A                     	endif
  8555  000C2A  0008               	tblrd		*
  8556  000C2C  CFF5 F0CB          	movff	tablat,sprintf@c
  8557  000C30  0100               	movlb	0	; () banked
  8558  000C32  51CB               	movf	sprintf@c& (0+255),w,b
  8559  000C34  A4D8               	btfss	status,2,c
  8560  000C36  EF5D  F000         	goto	l5302
  8561  000C3A                     l5590:
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;doprnt.c: 1538: *sp = 0;
  8565  000C3A  C09F  FFD9         	movff	sprintf@sp,fsr2l
  8566  000C3E  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  8567  000C42  0E00               	movlw	0
  8568  000C44  6EDF               	movwf	indf2,c
  8569  000C46  0012               	return	
  8570  000C48                     __end_of_sprintf:
  8571                           	opt stack 0
  8572                           tblptru	equ	0xFF8
  8573                           tblptrh	equ	0xFF7
  8574                           tblptrl	equ	0xFF6
  8575                           tablat	equ	0xFF5
  8576                           prodh	equ	0xFF4
  8577                           prodl	equ	0xFF3
  8578                           intcon	equ	0xFF2
  8579                           indf0	equ	0xFEF
  8580                           postinc0	equ	0xFEE
  8581                           fsr0h	equ	0xFEA
  8582                           fsr0l	equ	0xFE9
  8583                           wreg	equ	0xFE8
  8584                           indf1	equ	0xFE7
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           fsr2h	equ	0xFDA
  8592                           fsr2l	equ	0xFD9
  8593                           status	equ	0xFD8
  8594                           
  8595 ;; *************** function _scale *****************
  8596 ;; Defined at:
  8597 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  scl             1    wreg     char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  scl             1   41[BANK0 ] char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  3   35[BANK0 ] char 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8611 ;;      Params:         0       3       0       0       0       0       0
  8612 ;;      Locals:         0       4       0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0
  8614 ;;      Totals:         0       7       0       0       0       0       0
  8615 ;;Total ram usage:        7 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    4
  8618 ;; This function calls:
  8619 ;;		___awdiv
  8620 ;;		___awmod
  8621 ;;		___ftmul
  8622 ;;		___wmul
  8623 ;; This function is called by:
  8624 ;;		_sprintf
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text32
  8629  0013F2                     __ptext32:
  8630                           	opt stack 0
  8631  0013F2                     _scale:
  8632                           	opt stack 23
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;incstack = 0
  8636                           ;scale@scl stored from wreg
  8637  0013F2  0100               	movlb	0	; () banked
  8638  0013F4  6F89               	movwf	scale@scl& (0+255),b
  8639                           
  8640                           ;doprnt.c: 428: if(scl < 0) {
  8641  0013F6  0100               	movlb	0	; () banked
  8642  0013F8  AF89               	btfss	scale@scl& (0+255),7,b
  8643  0013FA  D12A               	goto	l4974
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;doprnt.c: 429: scl = -scl;
  8647  0013FC  0100               	movlb	0	; () banked
  8648  0013FE  6D89               	negf	scale@scl& (0+255),b
  8649                           
  8650                           ;doprnt.c: 430: if(scl>=110)
  8651  001400  0100               	movlb	0	; () banked
  8652  001402  5189               	movf	scale@scl& (0+255),w,b
  8653  001404  0A80               	xorlw	128
  8654  001406  0F12               	addlw	-238
  8655  001408  A0D8               	btfss	status,0,c
  8656  00140A  D0AC               	goto	l4964
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8660  00140C  0E00               	movlw	0
  8661  00140E  0100               	movlb	0	; () banked
  8662  001410  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8663  001412  0E03               	movlw	3
  8664  001414  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8665  001416  0E00               	movlw	0
  8666  001418  0100               	movlb	0	; () banked
  8667  00141A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8668  00141C  0E0A               	movlw	10
  8669  00141E  6F68               	movwf	___awdiv@divisor& (0+255),b
  8670  001420  0E00               	movlw	0
  8671  001422  0100               	movlb	0	; () banked
  8672  001424  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8673  001426  0E64               	movlw	100
  8674  001428  6F62               	movwf	___awmod@divisor& (0+255),b
  8675  00142A  0100               	movlb	0	; () banked
  8676  00142C  5189               	movf	scale@scl& (0+255),w,b
  8677  00142E  0100               	movlb	0	; () banked
  8678  001430  6F60               	movwf	___awmod@dividend& (0+255),b
  8679  001432  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8680  001434  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8681  001436  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8682  001438  ECDC  F01A         	call	___awmod	;wreg free
  8683  00143C  C060  F066         	movff	?___awmod,___awdiv@dividend
  8684  001440  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8685  001444  ECC1  F019         	call	___awdiv	;wreg free
  8686  001448  0E09               	movlw	9
  8687  00144A  0100               	movlb	0	; () banked
  8688  00144C  2566               	addwf	?___awdiv& (0+255),w,b
  8689  00144E  0100               	movlb	0	; () banked
  8690  001450  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8691  001452  0E00               	movlw	0
  8692  001454  0100               	movlb	0	; () banked
  8693  001456  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8694  001458  0100               	movlb	0	; () banked
  8695  00145A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8696  00145C  ECD6  F01D         	call	___wmul	;wreg free
  8697  001460  0E44               	movlw	low __npowers_
  8698  001462  0100               	movlb	0	; () banked
  8699  001464  256E               	addwf	?___wmul& (0+255),w,b
  8700  001466  6EF6               	movwf	tblptrl,c
  8701  001468  0E7F               	movlw	high __npowers_
  8702  00146A  0100               	movlb	0	; () banked
  8703  00146C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8704  00146E  6EF7               	movwf	tblptrh,c
  8705  001470                     	if	0	;There are less than 3 active tblptr bytes
  8706  001470                     	endif
  8707  001470  0009               	tblrd		*+
  8708  001472  CFF5 F077          	movff	tablat,___ftmul@f2
  8709  001476  0009               	tblrd		*+
  8710  001478  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8711  00147C  000A               	tblrd		*-
  8712  00147E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8713  001482  0E00               	movlw	0
  8714  001484  0100               	movlb	0	; () banked
  8715  001486  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8716  001488  0E64               	movlw	100
  8717  00148A  6F68               	movwf	___awdiv@divisor& (0+255),b
  8718  00148C  0100               	movlb	0	; () banked
  8719  00148E  5189               	movf	scale@scl& (0+255),w,b
  8720  001490  0100               	movlb	0	; () banked
  8721  001492  6F66               	movwf	___awdiv@dividend& (0+255),b
  8722  001494  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8723  001496  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8724  001498  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8725  00149A  ECC1  F019         	call	___awdiv	;wreg free
  8726  00149E  0E12               	movlw	18
  8727  0014A0  0100               	movlb	0	; () banked
  8728  0014A2  2566               	addwf	?___awdiv& (0+255),w,b
  8729  0014A4  0100               	movlb	0	; () banked
  8730  0014A6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8731  0014A8  0E00               	movlw	0
  8732  0014AA  0100               	movlb	0	; () banked
  8733  0014AC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8734  0014AE  0100               	movlb	0	; () banked
  8735  0014B0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8736  0014B2  0E00               	movlw	0
  8737  0014B4  0100               	movlb	0	; () banked
  8738  0014B6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8739  0014B8  0E03               	movlw	3
  8740  0014BA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8741  0014BC  ECD6  F01D         	call	___wmul	;wreg free
  8742  0014C0  0E44               	movlw	low __npowers_
  8743  0014C2  0100               	movlb	0	; () banked
  8744  0014C4  256E               	addwf	?___wmul& (0+255),w,b
  8745  0014C6  6EF6               	movwf	tblptrl,c
  8746  0014C8  0E7F               	movlw	high __npowers_
  8747  0014CA  0100               	movlb	0	; () banked
  8748  0014CC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8749  0014CE  6EF7               	movwf	tblptrh,c
  8750  0014D0                     	if	0	;There are less than 3 active tblptr bytes
  8751  0014D0                     	endif
  8752  0014D0  0009               	tblrd		*+
  8753  0014D2  CFF5 F074          	movff	tablat,___ftmul@f1
  8754  0014D6  0009               	tblrd		*+
  8755  0014D8  CFF5 F075          	movff	tablat,___ftmul@f1+1
  8756  0014DC  000A               	tblrd		*-
  8757  0014DE  CFF5 F076          	movff	tablat,___ftmul@f1+2
  8758  0014E2  EC2E  F015         	call	___ftmul	;wreg free
  8759  0014E6  C074  F086         	movff	?___ftmul,_scale$2783
  8760  0014EA  C075  F087         	movff	?___ftmul+1,_scale$2783+1
  8761  0014EE  C076  F088         	movff	?___ftmul+2,_scale$2783+2
  8762                           
  8763                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8764  0014F2  C086  F074         	movff	_scale$2783,___ftmul@f1
  8765  0014F6  C087  F075         	movff	_scale$2783+1,___ftmul@f1+1
  8766  0014FA  C088  F076         	movff	_scale$2783+2,___ftmul@f1+2
  8767  0014FE  0E00               	movlw	0
  8768  001500  0100               	movlb	0	; () banked
  8769  001502  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8770  001504  0E03               	movlw	3
  8771  001506  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8772  001508  0E00               	movlw	0
  8773  00150A  0100               	movlb	0	; () banked
  8774  00150C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8775  00150E  0E0A               	movlw	10
  8776  001510  6F62               	movwf	___awmod@divisor& (0+255),b
  8777  001512  0100               	movlb	0	; () banked
  8778  001514  5189               	movf	scale@scl& (0+255),w,b
  8779  001516  0100               	movlb	0	; () banked
  8780  001518  6F60               	movwf	___awmod@dividend& (0+255),b
  8781  00151A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8782  00151C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8783  00151E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8784  001520  ECDC  F01A         	call	___awmod	;wreg free
  8785  001524  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8786  001528  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8787  00152C  ECD6  F01D         	call	___wmul	;wreg free
  8788  001530  0E44               	movlw	low __npowers_
  8789  001532  0100               	movlb	0	; () banked
  8790  001534  256E               	addwf	?___wmul& (0+255),w,b
  8791  001536  6EF6               	movwf	tblptrl,c
  8792  001538  0E7F               	movlw	high __npowers_
  8793  00153A  0100               	movlb	0	; () banked
  8794  00153C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8795  00153E  6EF7               	movwf	tblptrh,c
  8796  001540                     	if	0	;There are less than 3 active tblptr bytes
  8797  001540                     	endif
  8798  001540  0009               	tblrd		*+
  8799  001542  CFF5 F077          	movff	tablat,___ftmul@f2
  8800  001546  0009               	tblrd		*+
  8801  001548  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8802  00154C  000A               	tblrd		*-
  8803  00154E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8804  001552  EC2E  F015         	call	___ftmul	;wreg free
  8805  001556  C074  F083         	movff	?___ftmul,?_scale
  8806  00155A  C075  F084         	movff	?___ftmul+1,?_scale+1
  8807  00155E  C076  F085         	movff	?___ftmul+2,?_scale+2
  8808  001562  0012               	return	
  8809  001564                     l4964:
  8810                           
  8811                           ;doprnt.c: 432: else if(scl > 10)
  8812  001564  0100               	movlb	0	; () banked
  8813  001566  5189               	movf	scale@scl& (0+255),w,b
  8814  001568  0A80               	xorlw	128
  8815  00156A  0F75               	addlw	-139
  8816  00156C  A0D8               	btfss	status,0,c
  8817  00156E  D05D               	goto	l4970
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8821  001570  0E00               	movlw	0
  8822  001572  0100               	movlb	0	; () banked
  8823  001574  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8824  001576  0E0A               	movlw	10
  8825  001578  6F68               	movwf	___awdiv@divisor& (0+255),b
  8826  00157A  0100               	movlb	0	; () banked
  8827  00157C  5189               	movf	scale@scl& (0+255),w,b
  8828  00157E  0100               	movlb	0	; () banked
  8829  001580  6F66               	movwf	___awdiv@dividend& (0+255),b
  8830  001582  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8831  001584  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8832  001586  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8833  001588  ECC1  F019         	call	___awdiv	;wreg free
  8834  00158C  0E09               	movlw	9
  8835  00158E  0100               	movlb	0	; () banked
  8836  001590  2566               	addwf	?___awdiv& (0+255),w,b
  8837  001592  0100               	movlb	0	; () banked
  8838  001594  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8839  001596  0E00               	movlw	0
  8840  001598  0100               	movlb	0	; () banked
  8841  00159A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8842  00159C  0100               	movlb	0	; () banked
  8843  00159E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8844  0015A0  0E00               	movlw	0
  8845  0015A2  0100               	movlb	0	; () banked
  8846  0015A4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8847  0015A6  0E03               	movlw	3
  8848  0015A8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8849  0015AA  ECD6  F01D         	call	___wmul	;wreg free
  8850  0015AE  0E44               	movlw	low __npowers_
  8851  0015B0  0100               	movlb	0	; () banked
  8852  0015B2  256E               	addwf	?___wmul& (0+255),w,b
  8853  0015B4  6EF6               	movwf	tblptrl,c
  8854  0015B6  0E7F               	movlw	high __npowers_
  8855  0015B8  0100               	movlb	0	; () banked
  8856  0015BA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8857  0015BC  6EF7               	movwf	tblptrh,c
  8858  0015BE                     	if	0	;There are less than 3 active tblptr bytes
  8859  0015BE                     	endif
  8860  0015BE  0009               	tblrd		*+
  8861  0015C0  CFF5 F074          	movff	tablat,___ftmul@f1
  8862  0015C4  0009               	tblrd		*+
  8863  0015C6  CFF5 F075          	movff	tablat,___ftmul@f1+1
  8864  0015CA  000A               	tblrd		*-
  8865  0015CC  CFF5 F076          	movff	tablat,___ftmul@f1+2
  8866  0015D0  0E00               	movlw	0
  8867  0015D2  0100               	movlb	0	; () banked
  8868  0015D4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8869  0015D6  0E03               	movlw	3
  8870  0015D8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8871  0015DA  0E00               	movlw	0
  8872  0015DC  0100               	movlb	0	; () banked
  8873  0015DE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8874  0015E0  0E0A               	movlw	10
  8875  0015E2  6F62               	movwf	___awmod@divisor& (0+255),b
  8876  0015E4  0100               	movlb	0	; () banked
  8877  0015E6  5189               	movf	scale@scl& (0+255),w,b
  8878  0015E8  0100               	movlb	0	; () banked
  8879  0015EA  6F60               	movwf	___awmod@dividend& (0+255),b
  8880  0015EC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8881  0015EE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8882  0015F0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8883  0015F2  ECDC  F01A         	call	___awmod	;wreg free
  8884  0015F6  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8885  0015FA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8886  0015FE  ECD6  F01D         	call	___wmul	;wreg free
  8887  001602  0E44               	movlw	low __npowers_
  8888  001604  0100               	movlb	0	; () banked
  8889  001606  256E               	addwf	?___wmul& (0+255),w,b
  8890  001608  6EF6               	movwf	tblptrl,c
  8891  00160A  0E7F               	movlw	high __npowers_
  8892  00160C  0100               	movlb	0	; () banked
  8893  00160E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8894  001610  6EF7               	movwf	tblptrh,c
  8895  001612                     	if	0	;There are less than 3 active tblptr bytes
  8896  001612                     	endif
  8897  001612  0009               	tblrd		*+
  8898  001614  CFF5 F077          	movff	tablat,___ftmul@f2
  8899  001618  0009               	tblrd		*+
  8900  00161A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8901  00161E  000A               	tblrd		*-
  8902  001620  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8903  001624  EC2E  F015         	call	___ftmul	;wreg free
  8904  001628  D796               	goto	L4
  8905  00162A                     l4970:
  8906                           
  8907                           ;doprnt.c: 434: return _npowers_[scl];
  8908  00162A  0100               	movlb	0	; () banked
  8909  00162C  5189               	movf	scale@scl& (0+255),w,b
  8910  00162E  0D03               	mullw	3
  8911  001630  0E44               	movlw	low __npowers_
  8912  001632  24F3               	addwf	prodl,w,c
  8913  001634  6EF6               	movwf	tblptrl,c
  8914  001636  0E7F               	movlw	high __npowers_
  8915  001638  20F4               	addwfc	prodh,w,c
  8916  00163A  6EF7               	movwf	tblptrh,c
  8917  00163C                     	if	0	;There are less than 3 active tblptr bytes
  8918  00163C                     	endif
  8919  00163C  0009               	tblrd		*+
  8920  00163E  CFF5 F083          	movff	tablat,?_scale
  8921  001642  0009               	tblrd		*+
  8922  001644  CFF5 F084          	movff	tablat,?_scale+1
  8923  001648  000A               	tblrd		*-
  8924  00164A  CFF5 F085          	movff	tablat,?_scale+2
  8925                           
  8926                           ; BSR set to: 0
  8927  00164E  0012               	return	
  8928  001650                     l4974:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;doprnt.c: 435: }
  8932                           ;doprnt.c: 436: if(scl>=110)
  8933  001650  0100               	movlb	0	; () banked
  8934  001652  5189               	movf	scale@scl& (0+255),w,b
  8935  001654  0A80               	xorlw	128
  8936  001656  0F12               	addlw	-238
  8937  001658  A0D8               	btfss	status,0,c
  8938  00165A  D0AC               	goto	l4982
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8942  00165C  0E00               	movlw	0
  8943  00165E  0100               	movlb	0	; () banked
  8944  001660  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8945  001662  0E03               	movlw	3
  8946  001664  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8947  001666  0E00               	movlw	0
  8948  001668  0100               	movlb	0	; () banked
  8949  00166A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8950  00166C  0E0A               	movlw	10
  8951  00166E  6F68               	movwf	___awdiv@divisor& (0+255),b
  8952  001670  0E00               	movlw	0
  8953  001672  0100               	movlb	0	; () banked
  8954  001674  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8955  001676  0E64               	movlw	100
  8956  001678  6F62               	movwf	___awmod@divisor& (0+255),b
  8957  00167A  0100               	movlb	0	; () banked
  8958  00167C  5189               	movf	scale@scl& (0+255),w,b
  8959  00167E  0100               	movlb	0	; () banked
  8960  001680  6F60               	movwf	___awmod@dividend& (0+255),b
  8961  001682  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8962  001684  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8963  001686  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8964  001688  ECDC  F01A         	call	___awmod	;wreg free
  8965  00168C  C060  F066         	movff	?___awmod,___awdiv@dividend
  8966  001690  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8967  001694  ECC1  F019         	call	___awdiv	;wreg free
  8968  001698  0E09               	movlw	9
  8969  00169A  0100               	movlb	0	; () banked
  8970  00169C  2566               	addwf	?___awdiv& (0+255),w,b
  8971  00169E  0100               	movlb	0	; () banked
  8972  0016A0  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8973  0016A2  0E00               	movlw	0
  8974  0016A4  0100               	movlb	0	; () banked
  8975  0016A6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8976  0016A8  0100               	movlb	0	; () banked
  8977  0016AA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8978  0016AC  ECD6  F01D         	call	___wmul	;wreg free
  8979  0016B0  0E1D               	movlw	low __powers_
  8980  0016B2  0100               	movlb	0	; () banked
  8981  0016B4  256E               	addwf	?___wmul& (0+255),w,b
  8982  0016B6  6EF6               	movwf	tblptrl,c
  8983  0016B8  0E7F               	movlw	high __powers_
  8984  0016BA  0100               	movlb	0	; () banked
  8985  0016BC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8986  0016BE  6EF7               	movwf	tblptrh,c
  8987  0016C0                     	if	0	;There are less than 3 active tblptr bytes
  8988  0016C0                     	endif
  8989  0016C0  0009               	tblrd		*+
  8990  0016C2  CFF5 F077          	movff	tablat,___ftmul@f2
  8991  0016C6  0009               	tblrd		*+
  8992  0016C8  CFF5 F078          	movff	tablat,___ftmul@f2+1
  8993  0016CC  000A               	tblrd		*-
  8994  0016CE  CFF5 F079          	movff	tablat,___ftmul@f2+2
  8995  0016D2  0E00               	movlw	0
  8996  0016D4  0100               	movlb	0	; () banked
  8997  0016D6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8998  0016D8  0E64               	movlw	100
  8999  0016DA  6F68               	movwf	___awdiv@divisor& (0+255),b
  9000  0016DC  0100               	movlb	0	; () banked
  9001  0016DE  5189               	movf	scale@scl& (0+255),w,b
  9002  0016E0  0100               	movlb	0	; () banked
  9003  0016E2  6F66               	movwf	___awdiv@dividend& (0+255),b
  9004  0016E4  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9005  0016E6  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9006  0016E8  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9007  0016EA  ECC1  F019         	call	___awdiv	;wreg free
  9008  0016EE  0E12               	movlw	18
  9009  0016F0  0100               	movlb	0	; () banked
  9010  0016F2  2566               	addwf	?___awdiv& (0+255),w,b
  9011  0016F4  0100               	movlb	0	; () banked
  9012  0016F6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9013  0016F8  0E00               	movlw	0
  9014  0016FA  0100               	movlb	0	; () banked
  9015  0016FC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9016  0016FE  0100               	movlb	0	; () banked
  9017  001700  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9018  001702  0E00               	movlw	0
  9019  001704  0100               	movlb	0	; () banked
  9020  001706  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9021  001708  0E03               	movlw	3
  9022  00170A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9023  00170C  ECD6  F01D         	call	___wmul	;wreg free
  9024  001710  0E1D               	movlw	low __powers_
  9025  001712  0100               	movlb	0	; () banked
  9026  001714  256E               	addwf	?___wmul& (0+255),w,b
  9027  001716  6EF6               	movwf	tblptrl,c
  9028  001718  0E7F               	movlw	high __powers_
  9029  00171A  0100               	movlb	0	; () banked
  9030  00171C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9031  00171E  6EF7               	movwf	tblptrh,c
  9032  001720                     	if	0	;There are less than 3 active tblptr bytes
  9033  001720                     	endif
  9034  001720  0009               	tblrd		*+
  9035  001722  CFF5 F074          	movff	tablat,___ftmul@f1
  9036  001726  0009               	tblrd		*+
  9037  001728  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9038  00172C  000A               	tblrd		*-
  9039  00172E  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9040  001732  EC2E  F015         	call	___ftmul	;wreg free
  9041  001736  C074  F086         	movff	?___ftmul,_scale$2783
  9042  00173A  C075  F087         	movff	?___ftmul+1,_scale$2783+1
  9043  00173E  C076  F088         	movff	?___ftmul+2,_scale$2783+2
  9044                           
  9045                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9046  001742  C086  F074         	movff	_scale$2783,___ftmul@f1
  9047  001746  C087  F075         	movff	_scale$2783+1,___ftmul@f1+1
  9048  00174A  C088  F076         	movff	_scale$2783+2,___ftmul@f1+2
  9049  00174E  0E00               	movlw	0
  9050  001750  0100               	movlb	0	; () banked
  9051  001752  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9052  001754  0E03               	movlw	3
  9053  001756  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9054  001758  0E00               	movlw	0
  9055  00175A  0100               	movlb	0	; () banked
  9056  00175C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9057  00175E  0E0A               	movlw	10
  9058  001760  6F62               	movwf	___awmod@divisor& (0+255),b
  9059  001762  0100               	movlb	0	; () banked
  9060  001764  5189               	movf	scale@scl& (0+255),w,b
  9061  001766  0100               	movlb	0	; () banked
  9062  001768  6F60               	movwf	___awmod@dividend& (0+255),b
  9063  00176A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9064  00176C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9065  00176E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9066  001770  ECDC  F01A         	call	___awmod	;wreg free
  9067  001774  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9068  001778  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9069  00177C  ECD6  F01D         	call	___wmul	;wreg free
  9070  001780  0E1D               	movlw	low __powers_
  9071  001782  0100               	movlb	0	; () banked
  9072  001784  256E               	addwf	?___wmul& (0+255),w,b
  9073  001786  6EF6               	movwf	tblptrl,c
  9074  001788  0E7F               	movlw	high __powers_
  9075  00178A  0100               	movlb	0	; () banked
  9076  00178C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9077  00178E  6EF7               	movwf	tblptrh,c
  9078  001790                     	if	0	;There are less than 3 active tblptr bytes
  9079  001790                     	endif
  9080  001790  0009               	tblrd		*+
  9081  001792  CFF5 F077          	movff	tablat,___ftmul@f2
  9082  001796  0009               	tblrd		*+
  9083  001798  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9084  00179C  000A               	tblrd		*-
  9085  00179E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9086  0017A2  EC2E  F015         	call	___ftmul	;wreg free
  9087  0017A6  C074  F083         	movff	?___ftmul,?_scale
  9088  0017AA  C075  F084         	movff	?___ftmul+1,?_scale+1
  9089  0017AE  C076  F085         	movff	?___ftmul+2,?_scale+2
  9090  0017B2  0012               	return	
  9091  0017B4                     l4982:
  9092                           
  9093                           ;doprnt.c: 438: else if(scl > 10)
  9094  0017B4  0100               	movlb	0	; () banked
  9095  0017B6  5189               	movf	scale@scl& (0+255),w,b
  9096  0017B8  0A80               	xorlw	128
  9097  0017BA  0F75               	addlw	-139
  9098  0017BC  A0D8               	btfss	status,0,c
  9099  0017BE  D05D               	goto	l4988
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9103  0017C0  0E00               	movlw	0
  9104  0017C2  0100               	movlb	0	; () banked
  9105  0017C4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9106  0017C6  0E0A               	movlw	10
  9107  0017C8  6F68               	movwf	___awdiv@divisor& (0+255),b
  9108  0017CA  0100               	movlb	0	; () banked
  9109  0017CC  5189               	movf	scale@scl& (0+255),w,b
  9110  0017CE  0100               	movlb	0	; () banked
  9111  0017D0  6F66               	movwf	___awdiv@dividend& (0+255),b
  9112  0017D2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9113  0017D4  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9114  0017D6  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9115  0017D8  ECC1  F019         	call	___awdiv	;wreg free
  9116  0017DC  0E09               	movlw	9
  9117  0017DE  0100               	movlb	0	; () banked
  9118  0017E0  2566               	addwf	?___awdiv& (0+255),w,b
  9119  0017E2  0100               	movlb	0	; () banked
  9120  0017E4  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9121  0017E6  0E00               	movlw	0
  9122  0017E8  0100               	movlb	0	; () banked
  9123  0017EA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9124  0017EC  0100               	movlb	0	; () banked
  9125  0017EE  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9126  0017F0  0E00               	movlw	0
  9127  0017F2  0100               	movlb	0	; () banked
  9128  0017F4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9129  0017F6  0E03               	movlw	3
  9130  0017F8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9131  0017FA  ECD6  F01D         	call	___wmul	;wreg free
  9132  0017FE  0E1D               	movlw	low __powers_
  9133  001800  0100               	movlb	0	; () banked
  9134  001802  256E               	addwf	?___wmul& (0+255),w,b
  9135  001804  6EF6               	movwf	tblptrl,c
  9136  001806  0E7F               	movlw	high __powers_
  9137  001808  0100               	movlb	0	; () banked
  9138  00180A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9139  00180C  6EF7               	movwf	tblptrh,c
  9140  00180E                     	if	0	;There are less than 3 active tblptr bytes
  9141  00180E                     	endif
  9142  00180E  0009               	tblrd		*+
  9143  001810  CFF5 F074          	movff	tablat,___ftmul@f1
  9144  001814  0009               	tblrd		*+
  9145  001816  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9146  00181A  000A               	tblrd		*-
  9147  00181C  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9148  001820  0E00               	movlw	0
  9149  001822  0100               	movlb	0	; () banked
  9150  001824  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9151  001826  0E03               	movlw	3
  9152  001828  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9153  00182A  0E00               	movlw	0
  9154  00182C  0100               	movlb	0	; () banked
  9155  00182E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9156  001830  0E0A               	movlw	10
  9157  001832  6F62               	movwf	___awmod@divisor& (0+255),b
  9158  001834  0100               	movlb	0	; () banked
  9159  001836  5189               	movf	scale@scl& (0+255),w,b
  9160  001838  0100               	movlb	0	; () banked
  9161  00183A  6F60               	movwf	___awmod@dividend& (0+255),b
  9162  00183C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9163  00183E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9164  001840  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9165  001842  ECDC  F01A         	call	___awmod	;wreg free
  9166  001846  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9167  00184A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9168  00184E  ECD6  F01D         	call	___wmul	;wreg free
  9169  001852  0E1D               	movlw	low __powers_
  9170  001854  0100               	movlb	0	; () banked
  9171  001856  256E               	addwf	?___wmul& (0+255),w,b
  9172  001858  6EF6               	movwf	tblptrl,c
  9173  00185A  0E7F               	movlw	high __powers_
  9174  00185C  0100               	movlb	0	; () banked
  9175  00185E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9176  001860  6EF7               	movwf	tblptrh,c
  9177  001862                     	if	0	;There are less than 3 active tblptr bytes
  9178  001862                     	endif
  9179  001862  0009               	tblrd		*+
  9180  001864  CFF5 F077          	movff	tablat,___ftmul@f2
  9181  001868  0009               	tblrd		*+
  9182  00186A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9183  00186E  000A               	tblrd		*-
  9184  001870  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9185  001874  EC2E  F015         	call	___ftmul	;wreg free
  9186  001878  D796               	goto	L5
  9187  00187A                     l4988:
  9188                           
  9189                           ;doprnt.c: 440: return _powers_[scl];
  9190  00187A  0100               	movlb	0	; () banked
  9191  00187C  5189               	movf	scale@scl& (0+255),w,b
  9192  00187E  0D03               	mullw	3
  9193  001880  0E1D               	movlw	low __powers_
  9194  001882  24F3               	addwf	prodl,w,c
  9195  001884  6EF6               	movwf	tblptrl,c
  9196  001886  0E7F               	movlw	high __powers_
  9197  001888  20F4               	addwfc	prodh,w,c
  9198  00188A  6EF7               	movwf	tblptrh,c
  9199  00188C                     	if	0	;There are less than 3 active tblptr bytes
  9200  00188C                     	endif
  9201  00188C  0009               	tblrd		*+
  9202  00188E  CFF5 F083          	movff	tablat,?_scale
  9203  001892  0009               	tblrd		*+
  9204  001894  CFF5 F084          	movff	tablat,?_scale+1
  9205  001898  000A               	tblrd		*-
  9206  00189A  CFF5 F085          	movff	tablat,?_scale+2
  9207  00189E  0012               	return	
  9208  0018A0                     __end_of_scale:
  9209                           	opt stack 0
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           prodh	equ	0xFF4
  9215                           prodl	equ	0xFF3
  9216                           intcon	equ	0xFF2
  9217                           indf0	equ	0xFEF
  9218                           postinc0	equ	0xFEE
  9219                           fsr0h	equ	0xFEA
  9220                           fsr0l	equ	0xFE9
  9221                           wreg	equ	0xFE8
  9222                           indf1	equ	0xFE7
  9223                           postdec1	equ	0xFE5
  9224                           fsr1h	equ	0xFE2
  9225                           fsr1l	equ	0xFE1
  9226                           indf2	equ	0xFDF
  9227                           postinc2	equ	0xFDE
  9228                           postdec2	equ	0xFDD
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function _isdigit *****************
  9234 ;; Defined at:
  9235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  c               1    wreg     unsigned char 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  c               1    2[BANK0 ] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;		None               void
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9249 ;;      Params:         0       0       0       0       0       0       0
  9250 ;;      Locals:         0       2       0       0       0       0       0
  9251 ;;      Temps:          0       1       0       0       0       0       0
  9252 ;;      Totals:         0       3       0       0       0       0       0
  9253 ;;Total ram usage:        3 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    2
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_sprintf
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text33
  9264  003D0C                     __ptext33:
  9265                           	opt stack 0
  9266  003D0C                     _isdigit:
  9267                           	opt stack 25
  9268                           
  9269                           ;incstack = 0
  9270                           ;isdigit@c stored from wreg
  9271  003D0C  0100               	movlb	0	; () banked
  9272  003D0E  6F62               	movwf	isdigit@c& (0+255),b
  9273  003D10  0E00               	movlw	0
  9274  003D12  0100               	movlb	0	; () banked
  9275  003D14  6F61               	movwf	_isdigit$2411& (0+255),b
  9276                           
  9277                           ; BSR set to: 0
  9278  003D16  0E3A               	movlw	58
  9279  003D18  0100               	movlb	0	; () banked
  9280  003D1A  6162               	cpfslt	isdigit@c& (0+255),b
  9281  003D1C  D007               	goto	l5000
  9282                           
  9283                           ; BSR set to: 0
  9284  003D1E  0E2F               	movlw	47
  9285  003D20  0100               	movlb	0	; () banked
  9286  003D22  6562               	cpfsgt	isdigit@c& (0+255),b
  9287  003D24  D003               	goto	l5000
  9288                           
  9289                           ; BSR set to: 0
  9290  003D26  0E01               	movlw	1
  9291  003D28  0100               	movlb	0	; () banked
  9292  003D2A  6F61               	movwf	_isdigit$2411& (0+255),b
  9293  003D2C                     l5000:
  9294                           
  9295                           ; BSR set to: 0
  9296  003D2C  C061  F060         	movff	_isdigit$2411,??_isdigit
  9297  003D30  0100               	movlb	0	; () banked
  9298  003D32  3160               	rrcf	??_isdigit& (0+255),w,b
  9299  003D34  0012               	return	
  9300  003D36                     __end_of_isdigit:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           indf0	equ	0xFEF
  9310                           postinc0	equ	0xFEE
  9311                           fsr0h	equ	0xFEA
  9312                           fsr0l	equ	0xFE9
  9313                           wreg	equ	0xFE8
  9314                           indf1	equ	0xFE7
  9315                           postdec1	equ	0xFE5
  9316                           fsr1h	equ	0xFE2
  9317                           fsr1l	equ	0xFE1
  9318                           indf2	equ	0xFDF
  9319                           postinc2	equ	0xFDE
  9320                           postdec2	equ	0xFDD
  9321                           fsr2h	equ	0xFDA
  9322                           fsr2l	equ	0xFD9
  9323                           status	equ	0xFD8
  9324                           
  9325 ;; *************** function _fround *****************
  9326 ;; Defined at:
  9327 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  prec            1    wreg     unsigned char 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  prec            1   44[BANK0 ] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  3   35[BANK0 ] unsigned char 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9341 ;;      Params:         0       3       0       0       0       0       0
  9342 ;;      Locals:         0       7       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0
  9344 ;;      Totals:         0      10       0       0       0       0       0
  9345 ;;Total ram usage:       10 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    4
  9348 ;; This function calls:
  9349 ;;		___awdiv
  9350 ;;		___awmod
  9351 ;;		___ftmul
  9352 ;;		___wmul
  9353 ;; This function is called by:
  9354 ;;		_sprintf
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text34
  9359  001C94                     __ptext34:
  9360                           	opt stack 0
  9361  001C94                     _fround:
  9362                           	opt stack 23
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;incstack = 0
  9366                           ;fround@prec stored from wreg
  9367  001C94  0100               	movlb	0	; () banked
  9368  001C96  6F8C               	movwf	fround@prec& (0+255),b
  9369                           
  9370                           ;doprnt.c: 413: if(prec>=110)
  9371  001C98  0E6D               	movlw	109
  9372  001C9A  0100               	movlb	0	; () banked
  9373  001C9C  658C               	cpfsgt	fround@prec& (0+255),b
  9374  001C9E  D0BA               	goto	l4942
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9378  001CA0  0E00               	movlw	0
  9379  001CA2  0100               	movlb	0	; () banked
  9380  001CA4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9381  001CA6  0E03               	movlw	3
  9382  001CA8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9383  001CAA  0E00               	movlw	0
  9384  001CAC  0100               	movlb	0	; () banked
  9385  001CAE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9386  001CB0  0E0A               	movlw	10
  9387  001CB2  6F68               	movwf	___awdiv@divisor& (0+255),b
  9388  001CB4  0E00               	movlw	0
  9389  001CB6  0100               	movlb	0	; () banked
  9390  001CB8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9391  001CBA  0E64               	movlw	100
  9392  001CBC  6F62               	movwf	___awmod@divisor& (0+255),b
  9393  001CBE  C08C  F060         	movff	fround@prec,___awmod@dividend
  9394  001CC2  0100               	movlb	0	; () banked
  9395  001CC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9396  001CC6  ECDC  F01A         	call	___awmod	;wreg free
  9397  001CCA  C060  F066         	movff	?___awmod,___awdiv@dividend
  9398  001CCE  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  9399  001CD2  ECC1  F019         	call	___awdiv	;wreg free
  9400  001CD6  0E09               	movlw	9
  9401  001CD8  0100               	movlb	0	; () banked
  9402  001CDA  2566               	addwf	?___awdiv& (0+255),w,b
  9403  001CDC  0100               	movlb	0	; () banked
  9404  001CDE  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9405  001CE0  0E00               	movlw	0
  9406  001CE2  0100               	movlb	0	; () banked
  9407  001CE4  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9408  001CE6  0100               	movlb	0	; () banked
  9409  001CE8  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9410  001CEA  ECD6  F01D         	call	___wmul	;wreg free
  9411  001CEE  0E44               	movlw	low __npowers_
  9412  001CF0  0100               	movlb	0	; () banked
  9413  001CF2  256E               	addwf	?___wmul& (0+255),w,b
  9414  001CF4  6EF6               	movwf	tblptrl,c
  9415  001CF6  0E7F               	movlw	high __npowers_
  9416  001CF8  0100               	movlb	0	; () banked
  9417  001CFA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9418  001CFC  6EF7               	movwf	tblptrh,c
  9419  001CFE                     	if	0	;There are less than 3 active tblptr bytes
  9420  001CFE                     	endif
  9421  001CFE  0009               	tblrd		*+
  9422  001D00  CFF5 F077          	movff	tablat,___ftmul@f2
  9423  001D04  0009               	tblrd		*+
  9424  001D06  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9425  001D0A  000A               	tblrd		*-
  9426  001D0C  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9427  001D10  0E00               	movlw	0
  9428  001D12  0100               	movlb	0	; () banked
  9429  001D14  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9430  001D16  0E64               	movlw	100
  9431  001D18  6F68               	movwf	___awdiv@divisor& (0+255),b
  9432  001D1A  C08C  F066         	movff	fround@prec,___awdiv@dividend
  9433  001D1E  0100               	movlb	0	; () banked
  9434  001D20  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9435  001D22  ECC1  F019         	call	___awdiv	;wreg free
  9436  001D26  0E12               	movlw	18
  9437  001D28  0100               	movlb	0	; () banked
  9438  001D2A  2566               	addwf	?___awdiv& (0+255),w,b
  9439  001D2C  0100               	movlb	0	; () banked
  9440  001D2E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9441  001D30  0E00               	movlw	0
  9442  001D32  0100               	movlb	0	; () banked
  9443  001D34  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9444  001D36  0100               	movlb	0	; () banked
  9445  001D38  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9446  001D3A  0E00               	movlw	0
  9447  001D3C  0100               	movlb	0	; () banked
  9448  001D3E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9449  001D40  0E03               	movlw	3
  9450  001D42  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9451  001D44  ECD6  F01D         	call	___wmul	;wreg free
  9452  001D48  0E44               	movlw	low __npowers_
  9453  001D4A  0100               	movlb	0	; () banked
  9454  001D4C  256E               	addwf	?___wmul& (0+255),w,b
  9455  001D4E  6EF6               	movwf	tblptrl,c
  9456  001D50  0E7F               	movlw	high __npowers_
  9457  001D52  0100               	movlb	0	; () banked
  9458  001D54  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9459  001D56  6EF7               	movwf	tblptrh,c
  9460  001D58                     	if	0	;There are less than 3 active tblptr bytes
  9461  001D58                     	endif
  9462  001D58  0009               	tblrd		*+
  9463  001D5A  CFF5 F074          	movff	tablat,___ftmul@f1
  9464  001D5E  0009               	tblrd		*+
  9465  001D60  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9466  001D64  000A               	tblrd		*-
  9467  001D66  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9468  001D6A  EC2E  F015         	call	___ftmul	;wreg free
  9469  001D6E  C074  F089         	movff	?___ftmul,_fround$2781
  9470  001D72  C075  F08A         	movff	?___ftmul+1,_fround$2781+1
  9471  001D76  C076  F08B         	movff	?___ftmul+2,_fround$2781+2
  9472                           
  9473                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9474  001D7A  0E00               	movlw	0
  9475  001D7C  0100               	movlb	0	; () banked
  9476  001D7E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9477  001D80  0E03               	movlw	3
  9478  001D82  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9479  001D84  0E00               	movlw	0
  9480  001D86  0100               	movlb	0	; () banked
  9481  001D88  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9482  001D8A  0E0A               	movlw	10
  9483  001D8C  6F62               	movwf	___awmod@divisor& (0+255),b
  9484  001D8E  C08C  F060         	movff	fround@prec,___awmod@dividend
  9485  001D92  0100               	movlb	0	; () banked
  9486  001D94  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9487  001D96  ECDC  F01A         	call	___awmod	;wreg free
  9488  001D9A  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9489  001D9E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9490  001DA2  ECD6  F01D         	call	___wmul	;wreg free
  9491  001DA6  0E44               	movlw	low __npowers_
  9492  001DA8  0100               	movlb	0	; () banked
  9493  001DAA  256E               	addwf	?___wmul& (0+255),w,b
  9494  001DAC  6EF6               	movwf	tblptrl,c
  9495  001DAE  0E7F               	movlw	high __npowers_
  9496  001DB0  0100               	movlb	0	; () banked
  9497  001DB2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9498  001DB4  6EF7               	movwf	tblptrh,c
  9499  001DB6                     	if	0	;There are less than 3 active tblptr bytes
  9500  001DB6                     	endif
  9501  001DB6  0009               	tblrd		*+
  9502  001DB8  CFF5 F077          	movff	tablat,___ftmul@f2
  9503  001DBC  0009               	tblrd		*+
  9504  001DBE  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9505  001DC2  000A               	tblrd		*-
  9506  001DC4  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9507  001DC8  C089  F074         	movff	_fround$2781,___ftmul@f1
  9508  001DCC  C08A  F075         	movff	_fround$2781+1,___ftmul@f1+1
  9509  001DD0  C08B  F076         	movff	_fround$2781+2,___ftmul@f1+2
  9510  001DD4  EC2E  F015         	call	___ftmul	;wreg free
  9511  001DD8  C074  F086         	movff	?___ftmul,_fround$2782
  9512  001DDC  C075  F087         	movff	?___ftmul+1,_fround$2782+1
  9513  001DE0  C076  F088         	movff	?___ftmul+2,_fround$2782+2
  9514                           
  9515                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9516  001DE4  C086  F074         	movff	_fround$2782,___ftmul@f1
  9517  001DE8  C087  F075         	movff	_fround$2782+1,___ftmul@f1+1
  9518  001DEC  C088  F076         	movff	_fround$2782+2,___ftmul@f1+2
  9519  001DF0  0E00               	movlw	0
  9520  001DF2  0100               	movlb	0	; () banked
  9521  001DF4  6F77               	movwf	___ftmul@f2& (0+255),b
  9522  001DF6  0E00               	movlw	0
  9523  001DF8  0100               	movlb	0	; () banked
  9524  001DFA  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9525  001DFC  0E3F               	movlw	63
  9526  001DFE  0100               	movlb	0	; () banked
  9527  001E00  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9528  001E02  EC2E  F015         	call	___ftmul	;wreg free
  9529  001E06  C074  F083         	movff	?___ftmul,?_fround
  9530  001E0A  C075  F084         	movff	?___ftmul+1,?_fround+1
  9531  001E0E  C076  F085         	movff	?___ftmul+2,?_fround+2
  9532  001E12  0012               	return	
  9533  001E14                     l4942:
  9534                           
  9535                           ;doprnt.c: 415: else if(prec > 10)
  9536  001E14  0E0A               	movlw	10
  9537  001E16  0100               	movlb	0	; () banked
  9538  001E18  658C               	cpfsgt	fround@prec& (0+255),b
  9539  001E1A  D06E               	goto	l4950
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9543  001E1C  0E00               	movlw	0
  9544  001E1E  0100               	movlb	0	; () banked
  9545  001E20  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9546  001E22  0E03               	movlw	3
  9547  001E24  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9548  001E26  0E00               	movlw	0
  9549  001E28  0100               	movlb	0	; () banked
  9550  001E2A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9551  001E2C  0E0A               	movlw	10
  9552  001E2E  6F62               	movwf	___awmod@divisor& (0+255),b
  9553  001E30  C08C  F060         	movff	fround@prec,___awmod@dividend
  9554  001E34  0100               	movlb	0	; () banked
  9555  001E36  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9556  001E38  ECDC  F01A         	call	___awmod	;wreg free
  9557  001E3C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9558  001E40  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9559  001E44  ECD6  F01D         	call	___wmul	;wreg free
  9560  001E48  0E44               	movlw	low __npowers_
  9561  001E4A  0100               	movlb	0	; () banked
  9562  001E4C  256E               	addwf	?___wmul& (0+255),w,b
  9563  001E4E  6EF6               	movwf	tblptrl,c
  9564  001E50  0E7F               	movlw	high __npowers_
  9565  001E52  0100               	movlb	0	; () banked
  9566  001E54  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9567  001E56  6EF7               	movwf	tblptrh,c
  9568  001E58                     	if	0	;There are less than 3 active tblptr bytes
  9569  001E58                     	endif
  9570  001E58  0009               	tblrd		*+
  9571  001E5A  CFF5 F077          	movff	tablat,___ftmul@f2
  9572  001E5E  0009               	tblrd		*+
  9573  001E60  CFF5 F078          	movff	tablat,___ftmul@f2+1
  9574  001E64  000A               	tblrd		*-
  9575  001E66  CFF5 F079          	movff	tablat,___ftmul@f2+2
  9576  001E6A  0E00               	movlw	0
  9577  001E6C  0100               	movlb	0	; () banked
  9578  001E6E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9579  001E70  0E0A               	movlw	10
  9580  001E72  6F68               	movwf	___awdiv@divisor& (0+255),b
  9581  001E74  C08C  F066         	movff	fround@prec,___awdiv@dividend
  9582  001E78  0100               	movlb	0	; () banked
  9583  001E7A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9584  001E7C  ECC1  F019         	call	___awdiv	;wreg free
  9585  001E80  0E09               	movlw	9
  9586  001E82  0100               	movlb	0	; () banked
  9587  001E84  2566               	addwf	?___awdiv& (0+255),w,b
  9588  001E86  0100               	movlb	0	; () banked
  9589  001E88  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9590  001E8A  0E00               	movlw	0
  9591  001E8C  0100               	movlb	0	; () banked
  9592  001E8E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9593  001E90  0100               	movlb	0	; () banked
  9594  001E92  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9595  001E94  0E00               	movlw	0
  9596  001E96  0100               	movlb	0	; () banked
  9597  001E98  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9598  001E9A  0E03               	movlw	3
  9599  001E9C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9600  001E9E  ECD6  F01D         	call	___wmul	;wreg free
  9601  001EA2  0E44               	movlw	low __npowers_
  9602  001EA4  0100               	movlb	0	; () banked
  9603  001EA6  256E               	addwf	?___wmul& (0+255),w,b
  9604  001EA8  6EF6               	movwf	tblptrl,c
  9605  001EAA  0E7F               	movlw	high __npowers_
  9606  001EAC  0100               	movlb	0	; () banked
  9607  001EAE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9608  001EB0  6EF7               	movwf	tblptrh,c
  9609  001EB2                     	if	0	;There are less than 3 active tblptr bytes
  9610  001EB2                     	endif
  9611  001EB2  0009               	tblrd		*+
  9612  001EB4  CFF5 F074          	movff	tablat,___ftmul@f1
  9613  001EB8  0009               	tblrd		*+
  9614  001EBA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9615  001EBE  000A               	tblrd		*-
  9616  001EC0  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9617  001EC4  EC2E  F015         	call	___ftmul	;wreg free
  9618  001EC8  C074  F089         	movff	?___ftmul,_fround$2781
  9619  001ECC  C075  F08A         	movff	?___ftmul+1,_fround$2781+1
  9620  001ED0  C076  F08B         	movff	?___ftmul+2,_fround$2781+2
  9621                           
  9622                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9623  001ED4  C089  F074         	movff	_fround$2781,___ftmul@f1
  9624  001ED8  C08A  F075         	movff	_fround$2781+1,___ftmul@f1+1
  9625  001EDC  C08B  F076         	movff	_fround$2781+2,___ftmul@f1+2
  9626  001EE0  0E00               	movlw	0
  9627  001EE2  0100               	movlb	0	; () banked
  9628  001EE4  6F77               	movwf	___ftmul@f2& (0+255),b
  9629  001EE6  0E00               	movlw	0
  9630  001EE8  0100               	movlb	0	; () banked
  9631  001EEA  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9632  001EEC  0E3F               	movlw	63
  9633  001EEE  0100               	movlb	0	; () banked
  9634  001EF0  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9635  001EF2  EC2E  F015         	call	___ftmul	;wreg free
  9636  001EF6  D787               	goto	L6
  9637  001EF8                     l4950:
  9638                           
  9639                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9640  001EF8  0100               	movlb	0	; () banked
  9641  001EFA  518C               	movf	fround@prec& (0+255),w,b
  9642  001EFC  0D03               	mullw	3
  9643  001EFE  0E44               	movlw	low __npowers_
  9644  001F00  24F3               	addwf	prodl,w,c
  9645  001F02  6EF6               	movwf	tblptrl,c
  9646  001F04  0E7F               	movlw	high __npowers_
  9647  001F06  20F4               	addwfc	prodh,w,c
  9648  001F08  6EF7               	movwf	tblptrh,c
  9649  001F0A                     	if	0	;There are less than 3 active tblptr bytes
  9650  001F0A                     	endif
  9651  001F0A  0009               	tblrd		*+
  9652  001F0C  CFF5 F074          	movff	tablat,___ftmul@f1
  9653  001F10  0009               	tblrd		*+
  9654  001F12  CFF5 F075          	movff	tablat,___ftmul@f1+1
  9655  001F16  000A               	tblrd		*-
  9656  001F18  CFF5 F076          	movff	tablat,___ftmul@f1+2
  9657  001F1C  0E00               	movlw	0
  9658  001F1E  0100               	movlb	0	; () banked
  9659  001F20  6F77               	movwf	___ftmul@f2& (0+255),b
  9660  001F22  0E00               	movlw	0
  9661  001F24  0100               	movlb	0	; () banked
  9662  001F26  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  9663  001F28  0E3F               	movlw	63
  9664  001F2A  0100               	movlb	0	; () banked
  9665  001F2C  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  9666  001F2E  EC2E  F015         	call	___ftmul	;wreg free
  9667  001F32  C074  F083         	movff	?___ftmul,?_fround
  9668  001F36  C075  F084         	movff	?___ftmul+1,?_fround+1
  9669  001F3A  C076  F085         	movff	?___ftmul+2,?_fround+2
  9670  001F3E  0012               	return	
  9671  001F40                     __end_of_fround:
  9672                           	opt stack 0
  9673                           tblptru	equ	0xFF8
  9674                           tblptrh	equ	0xFF7
  9675                           tblptrl	equ	0xFF6
  9676                           tablat	equ	0xFF5
  9677                           prodh	equ	0xFF4
  9678                           prodl	equ	0xFF3
  9679                           intcon	equ	0xFF2
  9680                           indf0	equ	0xFEF
  9681                           postinc0	equ	0xFEE
  9682                           fsr0h	equ	0xFEA
  9683                           fsr0l	equ	0xFE9
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           postdec1	equ	0xFE5
  9687                           fsr1h	equ	0xFE2
  9688                           fsr1l	equ	0xFE1
  9689                           indf2	equ	0xFDF
  9690                           postinc2	equ	0xFDE
  9691                           postdec2	equ	0xFDD
  9692                           fsr2h	equ	0xFDA
  9693                           fsr2l	equ	0xFD9
  9694                           status	equ	0xFD8
  9695                           
  9696 ;; *************** function ___wmul *****************
  9697 ;; Defined at:
  9698 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  multiplier      2   14[BANK0 ] unsigned int 
  9701 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  product         2   18[BANK0 ] unsigned int 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  2   14[BANK0 ] unsigned int 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0, prodl, prodh
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9713 ;;      Params:         0       4       0       0       0       0       0
  9714 ;;      Locals:         0       2       0       0       0       0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0
  9716 ;;      Totals:         0       6       0       0       0       0       0
  9717 ;;Total ram usage:        6 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; Hardware stack levels required when called:    2
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_fround
  9724 ;;		_scale
  9725 ;;		_sprintf
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text35
  9730  003BAC                     __ptext35:
  9731                           	opt stack 0
  9732  003BAC                     ___wmul:
  9733                           	opt stack 24
  9734                           
  9735                           ;incstack = 0
  9736  003BAC  0100               	movlb	0	; () banked
  9737  003BAE  516E               	movf	___wmul@multiplier& (0+255),w,b
  9738  003BB0  0100               	movlb	0	; () banked
  9739  003BB2  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9740  003BB4  CFF3 F072          	movff	prodl,___wmul@product
  9741  003BB8  CFF4 F073          	movff	prodh,___wmul@product+1
  9742  003BBC  0100               	movlb	0	; () banked
  9743  003BBE  516E               	movf	___wmul@multiplier& (0+255),w,b
  9744  003BC0  0100               	movlb	0	; () banked
  9745  003BC2  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9746  003BC4  50F3               	movf	prodl,w,c
  9747  003BC6  0100               	movlb	0	; () banked
  9748  003BC8  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9749  003BCA  0100               	movlb	0	; () banked
  9750  003BCC  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9751  003BCE  0100               	movlb	0	; () banked
  9752  003BD0  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9753  003BD2  50F3               	movf	prodl,w,c
  9754  003BD4  0100               	movlb	0	; () banked
  9755  003BD6  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9756                           
  9757                           ; BSR set to: 0
  9758  003BD8  C072  F06E         	movff	___wmul@product,?___wmul
  9759  003BDC  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  9760  003BE0  0012               	return	
  9761  003BE2                     __end_of___wmul:
  9762                           	opt stack 0
  9763                           tblptru	equ	0xFF8
  9764                           tblptrh	equ	0xFF7
  9765                           tblptrl	equ	0xFF6
  9766                           tablat	equ	0xFF5
  9767                           prodh	equ	0xFF4
  9768                           prodl	equ	0xFF3
  9769                           intcon	equ	0xFF2
  9770                           indf0	equ	0xFEF
  9771                           postinc0	equ	0xFEE
  9772                           fsr0h	equ	0xFEA
  9773                           fsr0l	equ	0xFE9
  9774                           wreg	equ	0xFE8
  9775                           indf1	equ	0xFE7
  9776                           postdec1	equ	0xFE5
  9777                           fsr1h	equ	0xFE2
  9778                           fsr1l	equ	0xFE1
  9779                           indf2	equ	0xFDF
  9780                           postinc2	equ	0xFDE
  9781                           postdec2	equ	0xFDD
  9782                           fsr2h	equ	0xFDA
  9783                           fsr2l	equ	0xFD9
  9784                           status	equ	0xFD8
  9785                           
  9786 ;; *************** function ___ftmul *****************
  9787 ;; Defined at:
  9788 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  f1              3   20[BANK0 ] float 
  9791 ;;  f2              3   23[BANK0 ] float 
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  9794 ;;  sign            1   34[BANK0 ] unsigned char 
  9795 ;;  cntr            1   33[BANK0 ] unsigned char 
  9796 ;;  exp             1   29[BANK0 ] unsigned char 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  3   20[BANK0 ] float 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9806 ;;      Params:         0       6       0       0       0       0       0
  9807 ;;      Locals:         0       6       0       0       0       0       0
  9808 ;;      Temps:          0       3       0       0       0       0       0
  9809 ;;      Totals:         0      15       0       0       0       0       0
  9810 ;;Total ram usage:       15 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    3
  9813 ;; This function calls:
  9814 ;;		___ftpack
  9815 ;; This function is called by:
  9816 ;;		_util_getBatteryVoltage
  9817 ;;		_util_getSolarCurrent
  9818 ;;		_util_getBatteryCurrent
  9819 ;;		_util_getTemperature
  9820 ;;		_fround
  9821 ;;		_scale
  9822 ;;		_sprintf
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text36
  9827  002A5C                     __ptext36:
  9828                           	opt stack 0
  9829  002A5C                     ___ftmul:
  9830                           	opt stack 25
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;incstack = 0
  9834  002A5C  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  9835  002A60  0100               	movlb	0	; () banked
  9836  002A62  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  9837  002A64  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  9838  002A66  0100               	movlb	0	; () banked
  9839  002A68  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9840  002A6A  0100               	movlb	0	; () banked
  9841  002A6C  377A               	rlcf	??___ftmul& (0+255),f,b
  9842  002A6E  E301               	bnc	u4721
  9843  002A70  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  9844  002A72                     u4721:
  9845  002A72  0100               	movlb	0	; () banked
  9846  002A74  517A               	movf	??___ftmul& (0+255),w,b
  9847  002A76  0100               	movlb	0	; () banked
  9848  002A78  6F7D               	movwf	___ftmul@exp& (0+255),b
  9849  002A7A  0100               	movlb	0	; () banked
  9850  002A7C  517D               	movf	___ftmul@exp& (0+255),w,b
  9851  002A7E  A4D8               	btfss	status,2,c
  9852  002A80  D00A               	goto	l4740
  9853                           
  9854                           ; BSR set to: 0
  9855  002A82  0E00               	movlw	0
  9856  002A84  0100               	movlb	0	; () banked
  9857  002A86  6F74               	movwf	?___ftmul& (0+255),b
  9858  002A88  0E00               	movlw	0
  9859  002A8A  0100               	movlb	0	; () banked
  9860  002A8C  6F75               	movwf	(?___ftmul+1)& (0+255),b
  9861  002A8E  0E00               	movlw	0
  9862  002A90  0100               	movlb	0	; () banked
  9863  002A92  6F76               	movwf	(?___ftmul+2)& (0+255),b
  9864                           
  9865                           ; BSR set to: 0
  9866  002A94  0012               	return	
  9867  002A96                     l4740:
  9868                           
  9869                           ; BSR set to: 0
  9870  002A96  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  9871  002A9A  0100               	movlb	0	; () banked
  9872  002A9C  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  9873  002A9E  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  9874  002AA0  0100               	movlb	0	; () banked
  9875  002AA2  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9876  002AA4  0100               	movlb	0	; () banked
  9877  002AA6  377A               	rlcf	??___ftmul& (0+255),f,b
  9878  002AA8  E301               	bnc	u4741
  9879  002AAA  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  9880  002AAC                     u4741:
  9881  002AAC  0100               	movlb	0	; () banked
  9882  002AAE  517A               	movf	??___ftmul& (0+255),w,b
  9883  002AB0  0100               	movlb	0	; () banked
  9884  002AB2  6F82               	movwf	___ftmul@sign& (0+255),b
  9885  002AB4  0100               	movlb	0	; () banked
  9886  002AB6  5182               	movf	___ftmul@sign& (0+255),w,b
  9887  002AB8  A4D8               	btfss	status,2,c
  9888  002ABA  D00A               	goto	l4746
  9889                           
  9890                           ; BSR set to: 0
  9891  002ABC  0E00               	movlw	0
  9892  002ABE  0100               	movlb	0	; () banked
  9893  002AC0  6F74               	movwf	?___ftmul& (0+255),b
  9894  002AC2  0E00               	movlw	0
  9895  002AC4  0100               	movlb	0	; () banked
  9896  002AC6  6F75               	movwf	(?___ftmul+1)& (0+255),b
  9897  002AC8  0E00               	movlw	0
  9898  002ACA  0100               	movlb	0	; () banked
  9899  002ACC  6F76               	movwf	(?___ftmul+2)& (0+255),b
  9900                           
  9901                           ; BSR set to: 0
  9902  002ACE  0012               	return	
  9903  002AD0                     l4746:
  9904                           
  9905                           ; BSR set to: 0
  9906  002AD0  0100               	movlb	0	; () banked
  9907  002AD2  5182               	movf	___ftmul@sign& (0+255),w,b
  9908  002AD4  0F7B               	addlw	123
  9909  002AD6  0100               	movlb	0	; () banked
  9910  002AD8  277D               	addwf	___ftmul@exp& (0+255),f,b
  9911                           
  9912                           ; BSR set to: 0
  9913  002ADA  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  9914  002ADE  0100               	movlb	0	; () banked
  9915  002AE0  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  9916  002AE2  0100               	movlb	0	; () banked
  9917  002AE4  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  9918  002AE6  0E80               	movlw	128
  9919  002AE8  0100               	movlb	0	; () banked
  9920  002AEA  1782               	andwf	___ftmul@sign& (0+255),f,b
  9921                           
  9922                           ; BSR set to: 0
  9923  002AEC  0100               	movlb	0	; () banked
  9924  002AEE  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9925                           
  9926                           ; BSR set to: 0
  9927  002AF0  0100               	movlb	0	; () banked
  9928  002AF2  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9929                           
  9930                           ; BSR set to: 0
  9931  002AF4  0EFF               	movlw	255
  9932  002AF6  0100               	movlb	0	; () banked
  9933  002AF8  1777               	andwf	___ftmul@f2& (0+255),f,b
  9934  002AFA  0EFF               	movlw	255
  9935  002AFC  0100               	movlb	0	; () banked
  9936  002AFE  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9937  002B00  0E00               	movlw	0
  9938  002B02  0100               	movlb	0	; () banked
  9939  002B04  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9940                           
  9941                           ; BSR set to: 0
  9942  002B06  0E00               	movlw	0
  9943  002B08  0100               	movlb	0	; () banked
  9944  002B0A  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  9945  002B0C  0E00               	movlw	0
  9946  002B0E  0100               	movlb	0	; () banked
  9947  002B10  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9948  002B12  0E00               	movlw	0
  9949  002B14  0100               	movlb	0	; () banked
  9950  002B16  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9951                           
  9952                           ; BSR set to: 0
  9953  002B18  0E07               	movlw	7
  9954  002B1A  0100               	movlb	0	; () banked
  9955  002B1C  6F81               	movwf	___ftmul@cntr& (0+255),b
  9956  002B1E                     l4760:
  9957                           
  9958                           ; BSR set to: 0
  9959  002B1E  0100               	movlb	0	; () banked
  9960  002B20  A174               	btfss	___ftmul@f1& (0+255),0,b
  9961  002B22  D00C               	goto	l4764
  9962                           
  9963                           ; BSR set to: 0
  9964  002B24  0100               	movlb	0	; () banked
  9965  002B26  5177               	movf	___ftmul@f2& (0+255),w,b
  9966  002B28  0100               	movlb	0	; () banked
  9967  002B2A  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9968  002B2C  0100               	movlb	0	; () banked
  9969  002B2E  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  9970  002B30  0100               	movlb	0	; () banked
  9971  002B32  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9972  002B34  0100               	movlb	0	; () banked
  9973  002B36  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  9974  002B38  0100               	movlb	0	; () banked
  9975  002B3A  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9976  002B3C                     l4764:
  9977                           
  9978                           ; BSR set to: 0
  9979  002B3C  0100               	movlb	0	; () banked
  9980  002B3E  90D8               	bcf	status,0,c
  9981  002B40  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9982  002B42  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9983  002B44  3374               	rrcf	___ftmul@f1& (0+255),f,b
  9984  002B46  0100               	movlb	0	; () banked
  9985  002B48  90D8               	bcf	status,0,c
  9986  002B4A  3777               	rlcf	___ftmul@f2& (0+255),f,b
  9987  002B4C  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9988  002B4E  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9989                           
  9990                           ; BSR set to: 0
  9991  002B50  0100               	movlb	0	; () banked
  9992  002B52  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  9993  002B54  D7E4               	goto	l4760
  9994                           
  9995                           ; BSR set to: 0
  9996                           
  9997                           ; BSR set to: 0
  9998  002B56  0E09               	movlw	9
  9999  002B58  0100               	movlb	0	; () banked
 10000  002B5A  6F81               	movwf	___ftmul@cntr& (0+255),b
 10001  002B5C                     l4770:
 10002                           
 10003                           ; BSR set to: 0
 10004  002B5C  0100               	movlb	0	; () banked
 10005  002B5E  A174               	btfss	___ftmul@f1& (0+255),0,b
 10006  002B60  D00C               	goto	l4774
 10007                           
 10008                           ; BSR set to: 0
 10009  002B62  0100               	movlb	0	; () banked
 10010  002B64  5177               	movf	___ftmul@f2& (0+255),w,b
 10011  002B66  0100               	movlb	0	; () banked
 10012  002B68  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10013  002B6A  0100               	movlb	0	; () banked
 10014  002B6C  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
 10015  002B6E  0100               	movlb	0	; () banked
 10016  002B70  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10017  002B72  0100               	movlb	0	; () banked
 10018  002B74  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
 10019  002B76  0100               	movlb	0	; () banked
 10020  002B78  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10021  002B7A                     l4774:
 10022                           
 10023                           ; BSR set to: 0
 10024  002B7A  0100               	movlb	0	; () banked
 10025  002B7C  90D8               	bcf	status,0,c
 10026  002B7E  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10027  002B80  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10028  002B82  3374               	rrcf	___ftmul@f1& (0+255),f,b
 10029  002B84  0100               	movlb	0	; () banked
 10030  002B86  90D8               	bcf	status,0,c
 10031  002B88  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10032  002B8A  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10033  002B8C  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10034                           
 10035                           ; BSR set to: 0
 10036  002B8E  0100               	movlb	0	; () banked
 10037  002B90  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
 10038  002B92  D7E4               	goto	l4770
 10039                           
 10040                           ; BSR set to: 0
 10041                           
 10042                           ; BSR set to: 0
 10043  002B94  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 10044  002B98  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10045  002B9C  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10046  002BA0  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
 10047  002BA4  C082  F064         	movff	___ftmul@sign,___ftpack@sign
 10048  002BA8  ECAE  F017         	call	___ftpack	;wreg free
 10049  002BAC  C060  F074         	movff	?___ftpack,?___ftmul
 10050  002BB0  C061  F075         	movff	?___ftpack+1,?___ftmul+1
 10051  002BB4  C062  F076         	movff	?___ftpack+2,?___ftmul+2
 10052  002BB8  0012               	return	
 10053  002BBA                     __end_of___ftmul:
 10054                           	opt stack 0
 10055                           tblptru	equ	0xFF8
 10056                           tblptrh	equ	0xFF7
 10057                           tblptrl	equ	0xFF6
 10058                           tablat	equ	0xFF5
 10059                           prodh	equ	0xFF4
 10060                           prodl	equ	0xFF3
 10061                           intcon	equ	0xFF2
 10062                           indf0	equ	0xFEF
 10063                           postinc0	equ	0xFEE
 10064                           fsr0h	equ	0xFEA
 10065                           fsr0l	equ	0xFE9
 10066                           wreg	equ	0xFE8
 10067                           indf1	equ	0xFE7
 10068                           postdec1	equ	0xFE5
 10069                           fsr1h	equ	0xFE2
 10070                           fsr1l	equ	0xFE1
 10071                           indf2	equ	0xFDF
 10072                           postinc2	equ	0xFDE
 10073                           postdec2	equ	0xFDD
 10074                           fsr2h	equ	0xFDA
 10075                           fsr2l	equ	0xFD9
 10076                           status	equ	0xFD8
 10077                           
 10078 ;; *************** function ___awmod *****************
 10079 ;; Defined at:
 10080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  dividend        2    0[BANK0 ] int 
 10083 ;;  divisor         2    2[BANK0 ] int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  sign            1    5[BANK0 ] unsigned char 
 10086 ;;  counter         1    4[BANK0 ] unsigned char 
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  2    0[BANK0 ] int 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10096 ;;      Params:         0       4       0       0       0       0       0
 10097 ;;      Locals:         0       2       0       0       0       0       0
 10098 ;;      Temps:          0       0       0       0       0       0       0
 10099 ;;      Totals:         0       6       0       0       0       0       0
 10100 ;;Total ram usage:        6 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:    2
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		_fround
 10107 ;;		_scale
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text37
 10112  0035B8                     __ptext37:
 10113                           	opt stack 0
 10114  0035B8                     ___awmod:
 10115                           	opt stack 24
 10116                           
 10117                           ;incstack = 0
 10118  0035B8  0E00               	movlw	0
 10119  0035BA  0100               	movlb	0	; () banked
 10120  0035BC  6F65               	movwf	___awmod@sign& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123  0035BE  0100               	movlb	0	; () banked
 10124  0035C0  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10125  0035C2  D008               	goto	l4834
 10126                           
 10127                           ; BSR set to: 0
 10128  0035C4  0100               	movlb	0	; () banked
 10129  0035C6  6D60               	negf	___awmod@dividend& (0+255),b
 10130  0035C8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10131  0035CA  B0D8               	btfsc	status,0,c
 10132  0035CC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10133                           
 10134                           ; BSR set to: 0
 10135  0035CE  0E01               	movlw	1
 10136  0035D0  0100               	movlb	0	; () banked
 10137  0035D2  6F65               	movwf	___awmod@sign& (0+255),b
 10138  0035D4                     l4834:
 10139                           
 10140                           ; BSR set to: 0
 10141  0035D4  0100               	movlb	0	; () banked
 10142  0035D6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10143  0035D8  D005               	goto	l4838
 10144                           
 10145                           ; BSR set to: 0
 10146  0035DA  0100               	movlb	0	; () banked
 10147  0035DC  6D62               	negf	___awmod@divisor& (0+255),b
 10148  0035DE  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10149  0035E0  B0D8               	btfsc	status,0,c
 10150  0035E2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10151  0035E4                     l4838:
 10152                           
 10153                           ; BSR set to: 0
 10154  0035E4  0100               	movlb	0	; () banked
 10155  0035E6  5162               	movf	___awmod@divisor& (0+255),w,b
 10156  0035E8  0100               	movlb	0	; () banked
 10157  0035EA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10158  0035EC  B4D8               	btfsc	status,2,c
 10159  0035EE  D026               	goto	l4854
 10160                           
 10161                           ; BSR set to: 0
 10162  0035F0  0E01               	movlw	1
 10163  0035F2  0100               	movlb	0	; () banked
 10164  0035F4  6F64               	movwf	___awmod@counter& (0+255),b
 10165  0035F6  D006               	goto	l4844
 10166  0035F8                     l4842:
 10167                           
 10168                           ; BSR set to: 0
 10169  0035F8  0100               	movlb	0	; () banked
 10170  0035FA  90D8               	bcf	status,0,c
 10171  0035FC  3762               	rlcf	___awmod@divisor& (0+255),f,b
 10172  0035FE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10173  003600  0100               	movlb	0	; () banked
 10174  003602  2B64               	incf	___awmod@counter& (0+255),f,b
 10175  003604                     l4844:
 10176                           
 10177                           ; BSR set to: 0
 10178  003604  0100               	movlb	0	; () banked
 10179  003606  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10180  003608  D7F7               	goto	l4842
 10181  00360A                     l4846:
 10182                           
 10183                           ; BSR set to: 0
 10184  00360A  0100               	movlb	0	; () banked
 10185  00360C  5162               	movf	___awmod@divisor& (0+255),w,b
 10186  00360E  0100               	movlb	0	; () banked
 10187  003610  5D60               	subwf	___awmod@dividend& (0+255),w,b
 10188  003612  0100               	movlb	0	; () banked
 10189  003614  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10190  003616  0100               	movlb	0	; () banked
 10191  003618  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10192  00361A  A0D8               	btfss	status,0,c
 10193  00361C  D008               	goto	l4850
 10194                           
 10195                           ; BSR set to: 0
 10196  00361E  0100               	movlb	0	; () banked
 10197  003620  5162               	movf	___awmod@divisor& (0+255),w,b
 10198  003622  0100               	movlb	0	; () banked
 10199  003624  5F60               	subwf	___awmod@dividend& (0+255),f,b
 10200  003626  0100               	movlb	0	; () banked
 10201  003628  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10202  00362A  0100               	movlb	0	; () banked
 10203  00362C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10204  00362E                     l4850:
 10205                           
 10206                           ; BSR set to: 0
 10207  00362E  0100               	movlb	0	; () banked
 10208  003630  90D8               	bcf	status,0,c
 10209  003632  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10210  003634  3362               	rrcf	___awmod@divisor& (0+255),f,b
 10211                           
 10212                           ; BSR set to: 0
 10213  003636  0100               	movlb	0	; () banked
 10214  003638  2F64               	decfsz	___awmod@counter& (0+255),f,b
 10215  00363A  D7E7               	goto	l4846
 10216  00363C                     l4854:
 10217                           
 10218                           ; BSR set to: 0
 10219  00363C  0100               	movlb	0	; () banked
 10220  00363E  5165               	movf	___awmod@sign& (0+255),w,b
 10221  003640  0100               	movlb	0	; () banked
 10222  003642  B4D8               	btfsc	status,2,c
 10223  003644  D005               	goto	l4858
 10224                           
 10225                           ; BSR set to: 0
 10226  003646  0100               	movlb	0	; () banked
 10227  003648  6D60               	negf	___awmod@dividend& (0+255),b
 10228  00364A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10229  00364C  B0D8               	btfsc	status,0,c
 10230  00364E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10231  003650                     l4858:
 10232                           
 10233                           ; BSR set to: 0
 10234  003650  C060  F060         	movff	___awmod@dividend,?___awmod
 10235  003654  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 10236  003658  0012               	return	
 10237  00365A                     __end_of___awmod:
 10238                           	opt stack 0
 10239                           tblptru	equ	0xFF8
 10240                           tblptrh	equ	0xFF7
 10241                           tblptrl	equ	0xFF6
 10242                           tablat	equ	0xFF5
 10243                           prodh	equ	0xFF4
 10244                           prodl	equ	0xFF3
 10245                           intcon	equ	0xFF2
 10246                           indf0	equ	0xFEF
 10247                           postinc0	equ	0xFEE
 10248                           fsr0h	equ	0xFEA
 10249                           fsr0l	equ	0xFE9
 10250                           wreg	equ	0xFE8
 10251                           indf1	equ	0xFE7
 10252                           postdec1	equ	0xFE5
 10253                           fsr1h	equ	0xFE2
 10254                           fsr1l	equ	0xFE1
 10255                           indf2	equ	0xFDF
 10256                           postinc2	equ	0xFDE
 10257                           postdec2	equ	0xFDD
 10258                           fsr2h	equ	0xFDA
 10259                           fsr2l	equ	0xFD9
 10260                           status	equ	0xFD8
 10261                           
 10262 ;; *************** function ___awdiv *****************
 10263 ;; Defined at:
 10264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  dividend        2    6[BANK0 ] int 
 10267 ;;  divisor         2    8[BANK0 ] int 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  quotient        2   12[BANK0 ] int 
 10270 ;;  sign            1   11[BANK0 ] unsigned char 
 10271 ;;  counter         1   10[BANK0 ] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  2    6[BANK0 ] int 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2, status,0
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10281 ;;      Params:         0       4       0       0       0       0       0
 10282 ;;      Locals:         0       4       0       0       0       0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0
 10284 ;;      Totals:         0       8       0       0       0       0       0
 10285 ;;Total ram usage:        8 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:    2
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_fround
 10292 ;;		_scale
 10293 ;;		_sprintf
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text38
 10298  003382                     __ptext38:
 10299                           	opt stack 0
 10300  003382                     ___awdiv:
 10301                           	opt stack 24
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;incstack = 0
 10305  003382  0E00               	movlw	0
 10306  003384  0100               	movlb	0	; () banked
 10307  003386  6F6B               	movwf	___awdiv@sign& (0+255),b
 10308                           
 10309                           ; BSR set to: 0
 10310  003388  0100               	movlb	0	; () banked
 10311  00338A  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10312  00338C  D008               	goto	l4790
 10313                           
 10314                           ; BSR set to: 0
 10315  00338E  0100               	movlb	0	; () banked
 10316  003390  6D68               	negf	___awdiv@divisor& (0+255),b
 10317  003392  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10318  003394  B0D8               	btfsc	status,0,c
 10319  003396  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10320                           
 10321                           ; BSR set to: 0
 10322  003398  0E01               	movlw	1
 10323  00339A  0100               	movlb	0	; () banked
 10324  00339C  6F6B               	movwf	___awdiv@sign& (0+255),b
 10325  00339E                     l4790:
 10326                           
 10327                           ; BSR set to: 0
 10328  00339E  0100               	movlb	0	; () banked
 10329  0033A0  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10330  0033A2  D008               	goto	l4796
 10331                           
 10332                           ; BSR set to: 0
 10333  0033A4  0100               	movlb	0	; () banked
 10334  0033A6  6D66               	negf	___awdiv@dividend& (0+255),b
 10335  0033A8  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10336  0033AA  B0D8               	btfsc	status,0,c
 10337  0033AC  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10338                           
 10339                           ; BSR set to: 0
 10340  0033AE  0E01               	movlw	1
 10341  0033B0  0100               	movlb	0	; () banked
 10342  0033B2  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 10343  0033B4                     l4796:
 10344                           
 10345                           ; BSR set to: 0
 10346  0033B4  0E00               	movlw	0
 10347  0033B6  0100               	movlb	0	; () banked
 10348  0033B8  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10349  0033BA  0E00               	movlw	0
 10350  0033BC  6F6C               	movwf	___awdiv@quotient& (0+255),b
 10351                           
 10352                           ; BSR set to: 0
 10353  0033BE  0100               	movlb	0	; () banked
 10354  0033C0  5168               	movf	___awdiv@divisor& (0+255),w,b
 10355  0033C2  0100               	movlb	0	; () banked
 10356  0033C4  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10357  0033C6  B4D8               	btfsc	status,2,c
 10358  0033C8  D02C               	goto	l4818
 10359                           
 10360                           ; BSR set to: 0
 10361  0033CA  0E01               	movlw	1
 10362  0033CC  0100               	movlb	0	; () banked
 10363  0033CE  6F6A               	movwf	___awdiv@counter& (0+255),b
 10364  0033D0  D006               	goto	l4804
 10365  0033D2                     l4802:
 10366                           
 10367                           ; BSR set to: 0
 10368  0033D2  0100               	movlb	0	; () banked
 10369  0033D4  90D8               	bcf	status,0,c
 10370  0033D6  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 10371  0033D8  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10372  0033DA  0100               	movlb	0	; () banked
 10373  0033DC  2B6A               	incf	___awdiv@counter& (0+255),f,b
 10374  0033DE                     l4804:
 10375                           
 10376                           ; BSR set to: 0
 10377  0033DE  0100               	movlb	0	; () banked
 10378  0033E0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10379  0033E2  D7F7               	goto	l4802
 10380  0033E4                     l4806:
 10381                           
 10382                           ; BSR set to: 0
 10383  0033E4  0100               	movlb	0	; () banked
 10384  0033E6  90D8               	bcf	status,0,c
 10385  0033E8  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 10386  0033EA  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10387                           
 10388                           ; BSR set to: 0
 10389  0033EC  0100               	movlb	0	; () banked
 10390  0033EE  5168               	movf	___awdiv@divisor& (0+255),w,b
 10391  0033F0  0100               	movlb	0	; () banked
 10392  0033F2  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 10393  0033F4  0100               	movlb	0	; () banked
 10394  0033F6  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10395  0033F8  0100               	movlb	0	; () banked
 10396  0033FA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10397  0033FC  A0D8               	btfss	status,0,c
 10398  0033FE  D00A               	goto	l4814
 10399                           
 10400                           ; BSR set to: 0
 10401  003400  0100               	movlb	0	; () banked
 10402  003402  5168               	movf	___awdiv@divisor& (0+255),w,b
 10403  003404  0100               	movlb	0	; () banked
 10404  003406  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 10405  003408  0100               	movlb	0	; () banked
 10406  00340A  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10407  00340C  0100               	movlb	0	; () banked
 10408  00340E  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10409                           
 10410                           ; BSR set to: 0
 10411  003410  0100               	movlb	0	; () banked
 10412  003412  816C               	bsf	___awdiv@quotient& (0+255),0,b
 10413  003414                     l4814:
 10414                           
 10415                           ; BSR set to: 0
 10416  003414  0100               	movlb	0	; () banked
 10417  003416  90D8               	bcf	status,0,c
 10418  003418  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10419  00341A  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 10420                           
 10421                           ; BSR set to: 0
 10422  00341C  0100               	movlb	0	; () banked
 10423  00341E  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 10424  003420  D7E1               	goto	l4806
 10425  003422                     l4818:
 10426                           
 10427                           ; BSR set to: 0
 10428  003422  0100               	movlb	0	; () banked
 10429  003424  516B               	movf	___awdiv@sign& (0+255),w,b
 10430  003426  0100               	movlb	0	; () banked
 10431  003428  B4D8               	btfsc	status,2,c
 10432  00342A  D005               	goto	l4822
 10433                           
 10434                           ; BSR set to: 0
 10435  00342C  0100               	movlb	0	; () banked
 10436  00342E  6D6C               	negf	___awdiv@quotient& (0+255),b
 10437  003430  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10438  003432  B0D8               	btfsc	status,0,c
 10439  003434  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10440  003436                     l4822:
 10441                           
 10442                           ; BSR set to: 0
 10443  003436  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 10444  00343A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 10445  00343E  0012               	return	
 10446  003440                     __end_of___awdiv:
 10447                           	opt stack 0
 10448                           tblptru	equ	0xFF8
 10449                           tblptrh	equ	0xFF7
 10450                           tblptrl	equ	0xFF6
 10451                           tablat	equ	0xFF5
 10452                           prodh	equ	0xFF4
 10453                           prodl	equ	0xFF3
 10454                           intcon	equ	0xFF2
 10455                           indf0	equ	0xFEF
 10456                           postinc0	equ	0xFEE
 10457                           fsr0h	equ	0xFEA
 10458                           fsr0l	equ	0xFE9
 10459                           wreg	equ	0xFE8
 10460                           indf1	equ	0xFE7
 10461                           postdec1	equ	0xFE5
 10462                           fsr1h	equ	0xFE2
 10463                           fsr1l	equ	0xFE1
 10464                           indf2	equ	0xFDF
 10465                           postinc2	equ	0xFDE
 10466                           postdec2	equ	0xFDD
 10467                           fsr2h	equ	0xFDA
 10468                           fsr2l	equ	0xFD9
 10469                           status	equ	0xFD8
 10470                           
 10471 ;; *************** function __tdiv_to_l_ *****************
 10472 ;; Defined at:
 10473 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  f1              3    0[BANK0 ] float 
 10476 ;;  f2              3    3[BANK0 ] float 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  quot            4    9[BANK0 ] unsigned long 
 10479 ;;  exp1            1   14[BANK0 ] unsigned char 
 10480 ;;  cntr            1   13[BANK0 ] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  4    0[BANK0 ] unsigned long 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10490 ;;      Params:         0       6       0       0       0       0       0
 10491 ;;      Locals:         0       6       0       0       0       0       0
 10492 ;;      Temps:          0       3       0       0       0       0       0
 10493 ;;      Totals:         0      15       0       0       0       0       0
 10494 ;;Total ram usage:       15 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    2
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_sprintf
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text39
 10505  0025A2                     __ptext39:
 10506                           	opt stack 0
 10507  0025A2                     __tdiv_to_l_:
 10508                           	opt stack 25
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;incstack = 0
 10512  0025A2  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10513  0025A6  0100               	movlb	0	; () banked
 10514  0025A8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10515  0025AA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10516  0025AC  0100               	movlb	0	; () banked
 10517  0025AE  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10518  0025B0  0100               	movlb	0	; () banked
 10519  0025B2  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10520  0025B4  E301               	bnc	u5051
 10521  0025B6  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10522  0025B8                     u5051:
 10523  0025B8  0100               	movlb	0	; () banked
 10524  0025BA  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10525  0025BC  0100               	movlb	0	; () banked
 10526  0025BE  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10527  0025C0  0100               	movlb	0	; () banked
 10528  0025C2  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10529  0025C4  A4D8               	btfss	status,2,c
 10530  0025C6  D00A               	goto	l5010
 10531                           
 10532                           ; BSR set to: 0
 10533  0025C8  0E00               	movlw	0
 10534  0025CA  0100               	movlb	0	; () banked
 10535  0025CC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10536  0025CE  0E00               	movlw	0
 10537  0025D0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10538  0025D2  0E00               	movlw	0
 10539  0025D4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10540  0025D6  0E00               	movlw	0
 10541  0025D8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10542                           
 10543                           ; BSR set to: 0
 10544  0025DA  0012               	return	
 10545  0025DC                     l5010:
 10546                           
 10547                           ; BSR set to: 0
 10548  0025DC  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10549  0025E0  0100               	movlb	0	; () banked
 10550  0025E2  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10551  0025E4  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10552  0025E6  0100               	movlb	0	; () banked
 10553  0025E8  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10554  0025EA  0100               	movlb	0	; () banked
 10555  0025EC  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10556  0025EE  E301               	bnc	u5071
 10557  0025F0  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10558  0025F2                     u5071:
 10559  0025F2  0100               	movlb	0	; () banked
 10560  0025F4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10561  0025F6  0100               	movlb	0	; () banked
 10562  0025F8  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10563  0025FA  0100               	movlb	0	; () banked
 10564  0025FC  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10565  0025FE  A4D8               	btfss	status,2,c
 10566  002600  D00A               	goto	l5016
 10567                           
 10568                           ; BSR set to: 0
 10569  002602  0E00               	movlw	0
 10570  002604  0100               	movlb	0	; () banked
 10571  002606  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10572  002608  0E00               	movlw	0
 10573  00260A  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10574  00260C  0E00               	movlw	0
 10575  00260E  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10576  002610  0E00               	movlw	0
 10577  002612  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10578                           
 10579                           ; BSR set to: 0
 10580  002614  0012               	return	
 10581  002616                     l5016:
 10582                           
 10583                           ; BSR set to: 0
 10584  002616  0100               	movlb	0	; () banked
 10585  002618  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10586                           
 10587                           ; BSR set to: 0
 10588  00261A  0EFF               	movlw	255
 10589  00261C  0100               	movlb	0	; () banked
 10590  00261E  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10591  002620  0EFF               	movlw	255
 10592  002622  0100               	movlb	0	; () banked
 10593  002624  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10594  002626  0E00               	movlw	0
 10595  002628  0100               	movlb	0	; () banked
 10596  00262A  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10597  00262C  0100               	movlb	0	; () banked
 10598  00262E  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10599                           
 10600                           ; BSR set to: 0
 10601  002630  0EFF               	movlw	255
 10602  002632  0100               	movlb	0	; () banked
 10603  002634  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10604  002636  0EFF               	movlw	255
 10605  002638  0100               	movlb	0	; () banked
 10606  00263A  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10607  00263C  0E00               	movlw	0
 10608  00263E  0100               	movlb	0	; () banked
 10609  002640  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10610                           
 10611                           ; BSR set to: 0
 10612  002642  0E00               	movlw	0
 10613  002644  0100               	movlb	0	; () banked
 10614  002646  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 10615  002648  0E00               	movlw	0
 10616  00264A  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10617  00264C  0E00               	movlw	0
 10618  00264E  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10619  002650  0E00               	movlw	0
 10620  002652  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10621                           
 10622                           ; BSR set to: 0
 10623  002654  0E7F               	movlw	127
 10624  002656  0100               	movlb	0	; () banked
 10625  002658  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10626                           
 10627                           ; BSR set to: 0
 10628  00265A  0100               	movlb	0	; () banked
 10629  00265C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10630  00265E  0F98               	addlw	152
 10631  002660  0100               	movlb	0	; () banked
 10632  002662  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10633                           
 10634                           ; BSR set to: 0
 10635  002664  0E18               	movlw	24
 10636  002666  0100               	movlb	0	; () banked
 10637  002668  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10638  00266A                     l885:
 10639                           
 10640                           ; BSR set to: 0
 10641  00266A  0100               	movlb	0	; () banked
 10642  00266C  90D8               	bcf	status,0,c
 10643  00266E  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10644  002670  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10645  002672  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10646  002674  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10647                           
 10648                           ; BSR set to: 0
 10649  002676  0100               	movlb	0	; () banked
 10650  002678  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10651  00267A  0100               	movlb	0	; () banked
 10652  00267C  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10653  00267E  0100               	movlb	0	; () banked
 10654  002680  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10655  002682  0100               	movlb	0	; () banked
 10656  002684  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10657  002686  0100               	movlb	0	; () banked
 10658  002688  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10659  00268A  0100               	movlb	0	; () banked
 10660  00268C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10661  00268E  A0D8               	btfss	status,0,c
 10662  002690  D00E               	goto	l886
 10663                           
 10664                           ; BSR set to: 0
 10665  002692  0100               	movlb	0	; () banked
 10666  002694  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10667  002696  0100               	movlb	0	; () banked
 10668  002698  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10669  00269A  0100               	movlb	0	; () banked
 10670  00269C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10671  00269E  0100               	movlb	0	; () banked
 10672  0026A0  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10673  0026A2  0100               	movlb	0	; () banked
 10674  0026A4  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10675  0026A6  0100               	movlb	0	; () banked
 10676  0026A8  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10677                           
 10678                           ; BSR set to: 0
 10679  0026AA  0100               	movlb	0	; () banked
 10680  0026AC  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10681  0026AE                     l886:
 10682                           
 10683                           ; BSR set to: 0
 10684  0026AE  0100               	movlb	0	; () banked
 10685  0026B0  90D8               	bcf	status,0,c
 10686  0026B2  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10687  0026B4  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10688  0026B6  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10689                           
 10690                           ; BSR set to: 0
 10691  0026B8  0100               	movlb	0	; () banked
 10692  0026BA  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10693  0026BC  D7D6               	goto	l885
 10694                           
 10695                           ; BSR set to: 0
 10696                           
 10697                           ; BSR set to: 0
 10698  0026BE  0100               	movlb	0	; () banked
 10699  0026C0  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10700  0026C2  D01A               	goto	l5050
 10701                           
 10702                           ; BSR set to: 0
 10703  0026C4  0100               	movlb	0	; () banked
 10704  0026C6  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10705  0026C8  0A80               	xorlw	128
 10706  0026CA  0F97               	addlw	151
 10707  0026CC  B0D8               	btfsc	status,0,c
 10708  0026CE  D00A               	goto	l5046
 10709                           
 10710                           ; BSR set to: 0
 10711  0026D0  0E00               	movlw	0
 10712  0026D2  0100               	movlb	0	; () banked
 10713  0026D4  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10714  0026D6  0E00               	movlw	0
 10715  0026D8  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10716  0026DA  0E00               	movlw	0
 10717  0026DC  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10718  0026DE  0E00               	movlw	0
 10719  0026E0  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10720                           
 10721                           ; BSR set to: 0
 10722  0026E2  0012               	return	
 10723  0026E4                     l5046:
 10724                           
 10725                           ; BSR set to: 0
 10726  0026E4  0100               	movlb	0	; () banked
 10727  0026E6  90D8               	bcf	status,0,c
 10728  0026E8  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10729  0026EA  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10730  0026EC  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10731  0026EE  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10732                           
 10733                           ; BSR set to: 0
 10734  0026F0  0100               	movlb	0	; () banked
 10735  0026F2  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10736  0026F4  D7F7               	goto	l5046
 10737                           
 10738                           ; BSR set to: 0
 10739  0026F6  D01B               	goto	l892
 10740  0026F8                     l5050:
 10741                           
 10742                           ; BSR set to: 0
 10743  0026F8  0E17               	movlw	23
 10744  0026FA  0100               	movlb	0	; () banked
 10745  0026FC  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10746  0026FE  D012               	goto	l5058
 10747                           
 10748                           ; BSR set to: 0
 10749  002700  0E00               	movlw	0
 10750  002702  0100               	movlb	0	; () banked
 10751  002704  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10752  002706  0E00               	movlw	0
 10753  002708  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10754  00270A  0E00               	movlw	0
 10755  00270C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10756  00270E  0E00               	movlw	0
 10757  002710  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10758                           
 10759                           ; BSR set to: 0
 10760  002712  0012               	return	
 10761  002714                     l5056:
 10762                           
 10763                           ; BSR set to: 0
 10764  002714  0100               	movlb	0	; () banked
 10765  002716  90D8               	bcf	status,0,c
 10766  002718  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10767  00271A  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10768  00271C  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10769  00271E  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10770  002720  0100               	movlb	0	; () banked
 10771  002722  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10772  002724                     l5058:
 10773                           
 10774                           ; BSR set to: 0
 10775  002724  0100               	movlb	0	; () banked
 10776  002726  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10777  002728  0100               	movlb	0	; () banked
 10778  00272A  A4D8               	btfss	status,2,c
 10779  00272C  D7F3               	goto	l5056
 10780  00272E                     l892:
 10781                           
 10782                           ; BSR set to: 0
 10783  00272E  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10784  002732  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10785  002736  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10786  00273A  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10787                           
 10788                           ; BSR set to: 0
 10789  00273E  0012               	return		;funcret
 10790  002740                     __end_of__tdiv_to_l_:
 10791                           	opt stack 0
 10792                           tblptru	equ	0xFF8
 10793                           tblptrh	equ	0xFF7
 10794                           tblptrl	equ	0xFF6
 10795                           tablat	equ	0xFF5
 10796                           prodh	equ	0xFF4
 10797                           prodl	equ	0xFF3
 10798                           intcon	equ	0xFF2
 10799                           indf0	equ	0xFEF
 10800                           postinc0	equ	0xFEE
 10801                           fsr0h	equ	0xFEA
 10802                           fsr0l	equ	0xFE9
 10803                           wreg	equ	0xFE8
 10804                           indf1	equ	0xFE7
 10805                           postdec1	equ	0xFE5
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           indf2	equ	0xFDF
 10809                           postinc2	equ	0xFDE
 10810                           postdec2	equ	0xFDD
 10811                           fsr2h	equ	0xFDA
 10812                           fsr2l	equ	0xFD9
 10813                           status	equ	0xFD8
 10814                           
 10815 ;; *************** function __div_to_l_ *****************
 10816 ;; Defined at:
 10817 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  f1              3    0[BANK0 ] unsigned long 
 10820 ;;  f2              3    3[BANK0 ] unsigned long 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  quot            4    6[BANK0 ] unsigned long 
 10823 ;;  exp1            1   11[BANK0 ] unsigned char 
 10824 ;;  cntr            1   10[BANK0 ] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  4    0[BANK0 ] unsigned long 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2, status,0
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10834 ;;      Params:         0       6       0       0       0       0       0
 10835 ;;      Locals:         0       6       0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0
 10837 ;;      Totals:         0      12       0       0       0       0       0
 10838 ;;Total ram usage:       12 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    2
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_sprintf
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text40
 10849  0028D4                     __ptext40:
 10850                           	opt stack 0
 10851  0028D4                     __div_to_l_:
 10852                           	opt stack 25
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;incstack = 0
 10856  0028D4  0100               	movlb	0	; () banked
 10857  0028D6  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10858  0028D8  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10859  0028DA  0100               	movlb	0	; () banked
 10860  0028DC  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 10861  0028DE  0100               	movlb	0	; () banked
 10862  0028E0  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10863  0028E2  A4D8               	btfss	status,2,c
 10864  0028E4  D00A               	goto	l5066
 10865                           
 10866                           ; BSR set to: 0
 10867  0028E6  0E00               	movlw	0
 10868  0028E8  0100               	movlb	0	; () banked
 10869  0028EA  6F60               	movwf	?__div_to_l_& (0+255),b
 10870  0028EC  0E00               	movlw	0
 10871  0028EE  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10872  0028F0  0E00               	movlw	0
 10873  0028F2  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10874  0028F4  0E00               	movlw	0
 10875  0028F6  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10876                           
 10877                           ; BSR set to: 0
 10878  0028F8  0012               	return	
 10879  0028FA                     l5066:
 10880                           
 10881                           ; BSR set to: 0
 10882  0028FA  0100               	movlb	0	; () banked
 10883  0028FC  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10884  0028FE  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10885  002900  0100               	movlb	0	; () banked
 10886  002902  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10887  002904  0100               	movlb	0	; () banked
 10888  002906  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10889  002908  A4D8               	btfss	status,2,c
 10890  00290A  D00A               	goto	l5072
 10891                           
 10892                           ; BSR set to: 0
 10893  00290C  0E00               	movlw	0
 10894  00290E  0100               	movlb	0	; () banked
 10895  002910  6F60               	movwf	?__div_to_l_& (0+255),b
 10896  002912  0E00               	movlw	0
 10897  002914  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10898  002916  0E00               	movlw	0
 10899  002918  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10900  00291A  0E00               	movlw	0
 10901  00291C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10902                           
 10903                           ; BSR set to: 0
 10904  00291E  0012               	return	
 10905  002920                     l5072:
 10906                           
 10907                           ; BSR set to: 0
 10908  002920  0100               	movlb	0	; () banked
 10909  002922  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10910                           
 10911                           ; BSR set to: 0
 10912  002924  0EFF               	movlw	255
 10913  002926  0100               	movlb	0	; () banked
 10914  002928  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 10915  00292A  0EFF               	movlw	255
 10916  00292C  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10917  00292E  0EFF               	movlw	255
 10918  002930  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10919  002932  0E00               	movlw	0
 10920  002934  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10921                           
 10922                           ; BSR set to: 0
 10923  002936  0100               	movlb	0	; () banked
 10924  002938  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10925  00293A  0EFF               	movlw	255
 10926  00293C  0100               	movlb	0	; () banked
 10927  00293E  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 10928  002940  0EFF               	movlw	255
 10929  002942  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10930  002944  0EFF               	movlw	255
 10931  002946  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10932  002948  0E00               	movlw	0
 10933  00294A  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10934                           
 10935                           ; BSR set to: 0
 10936  00294C  0E00               	movlw	0
 10937  00294E  0100               	movlb	0	; () banked
 10938  002950  6F66               	movwf	__div_to_l_@quot& (0+255),b
 10939  002952  0E00               	movlw	0
 10940  002954  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10941  002956  0E00               	movlw	0
 10942  002958  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10943  00295A  0E00               	movlw	0
 10944  00295C  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10945                           
 10946                           ; BSR set to: 0
 10947  00295E  0E7F               	movlw	127
 10948  002960  0100               	movlb	0	; () banked
 10949  002962  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10950                           
 10951                           ; BSR set to: 0
 10952  002964  0100               	movlb	0	; () banked
 10953  002966  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10954  002968  0FA0               	addlw	160
 10955  00296A  0100               	movlb	0	; () banked
 10956  00296C  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10957                           
 10958                           ; BSR set to: 0
 10959  00296E  0E20               	movlw	32
 10960  002970  0100               	movlb	0	; () banked
 10961  002972  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10962  002974                     l5086:
 10963                           
 10964                           ; BSR set to: 0
 10965  002974  0100               	movlb	0	; () banked
 10966  002976  90D8               	bcf	status,0,c
 10967  002978  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 10968  00297A  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10969  00297C  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10970  00297E  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10971                           
 10972                           ; BSR set to: 0
 10973  002980  0100               	movlb	0	; () banked
 10974  002982  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10975  002984  0100               	movlb	0	; () banked
 10976  002986  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 10977  002988  0100               	movlb	0	; () banked
 10978  00298A  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10979  00298C  0100               	movlb	0	; () banked
 10980  00298E  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10981  002990  0100               	movlb	0	; () banked
 10982  002992  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10983  002994  0100               	movlb	0	; () banked
 10984  002996  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10985  002998  0100               	movlb	0	; () banked
 10986  00299A  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10987  00299C  0100               	movlb	0	; () banked
 10988  00299E  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10989  0029A0  A0D8               	btfss	status,0,c
 10990  0029A2  D012               	goto	l5094
 10991                           
 10992                           ; BSR set to: 0
 10993  0029A4  0100               	movlb	0	; () banked
 10994  0029A6  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10995  0029A8  0100               	movlb	0	; () banked
 10996  0029AA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 10997  0029AC  0100               	movlb	0	; () banked
 10998  0029AE  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10999  0029B0  0100               	movlb	0	; () banked
 11000  0029B2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11001  0029B4  0100               	movlb	0	; () banked
 11002  0029B6  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11003  0029B8  0100               	movlb	0	; () banked
 11004  0029BA  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11005  0029BC  0100               	movlb	0	; () banked
 11006  0029BE  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11007  0029C0  0100               	movlb	0	; () banked
 11008  0029C2  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11009                           
 11010                           ; BSR set to: 0
 11011  0029C4  0100               	movlb	0	; () banked
 11012  0029C6  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 11013  0029C8                     l5094:
 11014                           
 11015                           ; BSR set to: 0
 11016  0029C8  0100               	movlb	0	; () banked
 11017  0029CA  90D8               	bcf	status,0,c
 11018  0029CC  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 11019  0029CE  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11020  0029D0  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11021  0029D2  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11022                           
 11023                           ; BSR set to: 0
 11024  0029D4  0100               	movlb	0	; () banked
 11025  0029D6  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11026  0029D8  D7CD               	goto	l5086
 11027                           
 11028                           ; BSR set to: 0
 11029                           
 11030                           ; BSR set to: 0
 11031  0029DA  0100               	movlb	0	; () banked
 11032  0029DC  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 11033  0029DE  D01A               	goto	l5110
 11034                           
 11035                           ; BSR set to: 0
 11036  0029E0  0100               	movlb	0	; () banked
 11037  0029E2  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11038  0029E4  0A80               	xorlw	128
 11039  0029E6  0F9F               	addlw	159
 11040  0029E8  B0D8               	btfsc	status,0,c
 11041  0029EA  D00A               	goto	l5106
 11042                           
 11043                           ; BSR set to: 0
 11044  0029EC  0E00               	movlw	0
 11045  0029EE  0100               	movlb	0	; () banked
 11046  0029F0  6F60               	movwf	?__div_to_l_& (0+255),b
 11047  0029F2  0E00               	movlw	0
 11048  0029F4  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11049  0029F6  0E00               	movlw	0
 11050  0029F8  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11051  0029FA  0E00               	movlw	0
 11052  0029FC  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11053                           
 11054                           ; BSR set to: 0
 11055  0029FE  0012               	return	
 11056  002A00                     l5106:
 11057                           
 11058                           ; BSR set to: 0
 11059  002A00  0100               	movlb	0	; () banked
 11060  002A02  90D8               	bcf	status,0,c
 11061  002A04  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11062  002A06  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11063  002A08  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11064  002A0A  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 11065                           
 11066                           ; BSR set to: 0
 11067  002A0C  0100               	movlb	0	; () banked
 11068  002A0E  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11069  002A10  D7F7               	goto	l5106
 11070                           
 11071                           ; BSR set to: 0
 11072  002A12  D01B               	goto	l788
 11073  002A14                     l5110:
 11074                           
 11075                           ; BSR set to: 0
 11076  002A14  0E1F               	movlw	31
 11077  002A16  0100               	movlb	0	; () banked
 11078  002A18  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11079  002A1A  D012               	goto	l5118
 11080                           
 11081                           ; BSR set to: 0
 11082  002A1C  0E00               	movlw	0
 11083  002A1E  0100               	movlb	0	; () banked
 11084  002A20  6F60               	movwf	?__div_to_l_& (0+255),b
 11085  002A22  0E00               	movlw	0
 11086  002A24  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11087  002A26  0E00               	movlw	0
 11088  002A28  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11089  002A2A  0E00               	movlw	0
 11090  002A2C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11091                           
 11092                           ; BSR set to: 0
 11093  002A2E  0012               	return	
 11094  002A30                     l5116:
 11095                           
 11096                           ; BSR set to: 0
 11097  002A30  0100               	movlb	0	; () banked
 11098  002A32  90D8               	bcf	status,0,c
 11099  002A34  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 11100  002A36  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11101  002A38  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11102  002A3A  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11103  002A3C  0100               	movlb	0	; () banked
 11104  002A3E  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 11105  002A40                     l5118:
 11106                           
 11107                           ; BSR set to: 0
 11108  002A40  0100               	movlb	0	; () banked
 11109  002A42  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11110  002A44  0100               	movlb	0	; () banked
 11111  002A46  A4D8               	btfss	status,2,c
 11112  002A48  D7F3               	goto	l5116
 11113  002A4A                     l788:
 11114                           
 11115                           ; BSR set to: 0
 11116  002A4A  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 11117  002A4E  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11118  002A52  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11119  002A56  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11120                           
 11121                           ; BSR set to: 0
 11122  002A5A  0012               	return		;funcret
 11123  002A5C                     __end_of__div_to_l_:
 11124                           	opt stack 0
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           intcon	equ	0xFF2
 11132                           indf0	equ	0xFEF
 11133                           postinc0	equ	0xFEE
 11134                           fsr0h	equ	0xFEA
 11135                           fsr0l	equ	0xFE9
 11136                           wreg	equ	0xFE8
 11137                           indf1	equ	0xFE7
 11138                           postdec1	equ	0xFE5
 11139                           fsr1h	equ	0xFE2
 11140                           fsr1l	equ	0xFE1
 11141                           indf2	equ	0xFDF
 11142                           postinc2	equ	0xFDE
 11143                           postdec2	equ	0xFDD
 11144                           fsr2h	equ	0xFDA
 11145                           fsr2l	equ	0xFD9
 11146                           status	equ	0xFD8
 11147                           
 11148 ;; *************** function ___lltoft *****************
 11149 ;; Defined at:
 11150 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  c               4    8[BANK0 ] unsigned long 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  exp             1   16[BANK0 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  3    8[BANK0 ] float 
 11157 ;; Registers used:
 11158 ;;		wreg, status,2, status,0, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11164 ;;      Params:         0       4       0       0       0       0       0
 11165 ;;      Locals:         0       1       0       0       0       0       0
 11166 ;;      Temps:          0       4       0       0       0       0       0
 11167 ;;      Totals:         0       9       0       0       0       0       0
 11168 ;;Total ram usage:        9 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:    3
 11171 ;; This function calls:
 11172 ;;		___ftpack
 11173 ;; This function is called by:
 11174 ;;		_sprintf
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text41
 11179  003782                     __ptext41:
 11180                           	opt stack 0
 11181  003782                     ___lltoft:
 11182                           	opt stack 24
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;incstack = 0
 11186  003782  0E8E               	movlw	142
 11187  003784  0100               	movlb	0	; () banked
 11188  003786  6F70               	movwf	___lltoft@exp& (0+255),b
 11189  003788  D008               	goto	l5192
 11190  00378A                     l5190:
 11191                           
 11192                           ; BSR set to: 0
 11193  00378A  0100               	movlb	0	; () banked
 11194  00378C  90D8               	bcf	status,0,c
 11195  00378E  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11196  003790  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11197  003792  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11198  003794  3368               	rrcf	___lltoft@c& (0+255),f,b
 11199  003796  0100               	movlb	0	; () banked
 11200  003798  2B70               	incf	___lltoft@exp& (0+255),f,b
 11201  00379A                     l5192:
 11202                           
 11203                           ; BSR set to: 0
 11204  00379A  0E00               	movlw	0
 11205  00379C  0100               	movlb	0	; () banked
 11206  00379E  1568               	andwf	___lltoft@c& (0+255),w,b
 11207  0037A0  0100               	movlb	0	; () banked
 11208  0037A2  6F6C               	movwf	??___lltoft& (0+255),b
 11209  0037A4  0E00               	movlw	0
 11210  0037A6  0100               	movlb	0	; () banked
 11211  0037A8  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 11212  0037AA  0100               	movlb	0	; () banked
 11213  0037AC  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 11214  0037AE  0E00               	movlw	0
 11215  0037B0  0100               	movlb	0	; () banked
 11216  0037B2  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 11217  0037B4  0100               	movlb	0	; () banked
 11218  0037B6  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 11219  0037B8  0EFF               	movlw	255
 11220  0037BA  0100               	movlb	0	; () banked
 11221  0037BC  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 11222  0037BE  0100               	movlb	0	; () banked
 11223  0037C0  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 11224  0037C2  0100               	movlb	0	; () banked
 11225  0037C4  516C               	movf	??___lltoft& (0+255),w,b
 11226  0037C6  0100               	movlb	0	; () banked
 11227  0037C8  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 11228  0037CA  0100               	movlb	0	; () banked
 11229  0037CC  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 11230  0037CE  0100               	movlb	0	; () banked
 11231  0037D0  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 11232  0037D2  A4D8               	btfss	status,2,c
 11233  0037D4  D7DA               	goto	l5190
 11234                           
 11235                           ; BSR set to: 0
 11236                           
 11237                           ; BSR set to: 0
 11238  0037D6  C068  F060         	movff	___lltoft@c,___ftpack@arg
 11239  0037DA  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 11240  0037DE  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 11241  0037E2  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 11242  0037E6  0E00               	movlw	0
 11243  0037E8  0100               	movlb	0	; () banked
 11244  0037EA  6F64               	movwf	___ftpack@sign& (0+255),b
 11245  0037EC  ECAE  F017         	call	___ftpack	;wreg free
 11246  0037F0  C060  F068         	movff	?___ftpack,?___lltoft
 11247  0037F4  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 11248  0037F8  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 11249  0037FC  0012               	return	
 11250  0037FE                     __end_of___lltoft:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           intcon	equ	0xFF2
 11259                           indf0	equ	0xFEF
 11260                           postinc0	equ	0xFEE
 11261                           fsr0h	equ	0xFEA
 11262                           fsr0l	equ	0xFE9
 11263                           wreg	equ	0xFE8
 11264                           indf1	equ	0xFE7
 11265                           postdec1	equ	0xFE5
 11266                           fsr1h	equ	0xFE2
 11267                           fsr1l	equ	0xFE1
 11268                           indf2	equ	0xFDF
 11269                           postinc2	equ	0xFDE
 11270                           postdec2	equ	0xFDD
 11271                           fsr2h	equ	0xFDA
 11272                           fsr2l	equ	0xFD9
 11273                           status	equ	0xFD8
 11274                           
 11275 ;; *************** function ___llmod *****************
 11276 ;; Defined at:
 11277 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  dividend        4   13[BANK0 ] unsigned long 
 11280 ;;  divisor         4   17[BANK0 ] unsigned long 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;  counter         1   21[BANK0 ] unsigned char 
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  4   13[BANK0 ] unsigned long 
 11285 ;; Registers used:
 11286 ;;		wreg, status,2, status,0
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11292 ;;      Params:         0       8       0       0       0       0       0
 11293 ;;      Locals:         0       1       0       0       0       0       0
 11294 ;;      Temps:          0       0       0       0       0       0       0
 11295 ;;      Totals:         0       9       0       0       0       0       0
 11296 ;;Total ram usage:        9 bytes
 11297 ;; Hardware stack levels used:    1
 11298 ;; Hardware stack levels required when called:    2
 11299 ;; This function calls:
 11300 ;;		Nothing
 11301 ;; This function is called by:
 11302 ;;		_sprintf
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text42
 11307  00365A                     __ptext42:
 11308                           	opt stack 0
 11309  00365A                     ___llmod:
 11310                           	opt stack 25
 11311                           
 11312                           ;incstack = 0
 11313  00365A  0100               	movlb	0	; () banked
 11314  00365C  5171               	movf	___llmod@divisor& (0+255),w,b
 11315  00365E  0100               	movlb	0	; () banked
 11316  003660  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11317  003662  0100               	movlb	0	; () banked
 11318  003664  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11319  003666  0100               	movlb	0	; () banked
 11320  003668  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11321  00366A  B4D8               	btfsc	status,2,c
 11322  00366C  D03A               	goto	l977
 11323                           
 11324                           ; BSR set to: 0
 11325  00366E  0E01               	movlw	1
 11326  003670  0100               	movlb	0	; () banked
 11327  003672  6F75               	movwf	___llmod@counter& (0+255),b
 11328  003674  D008               	goto	l5178
 11329  003676                     l5176:
 11330                           
 11331                           ; BSR set to: 0
 11332  003676  0100               	movlb	0	; () banked
 11333  003678  90D8               	bcf	status,0,c
 11334  00367A  3771               	rlcf	___llmod@divisor& (0+255),f,b
 11335  00367C  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11336  00367E  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11337  003680  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11338  003682  0100               	movlb	0	; () banked
 11339  003684  2B75               	incf	___llmod@counter& (0+255),f,b
 11340  003686                     l5178:
 11341                           
 11342                           ; BSR set to: 0
 11343  003686  0100               	movlb	0	; () banked
 11344  003688  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11345  00368A  D7F5               	goto	l5176
 11346  00368C                     l5180:
 11347                           
 11348                           ; BSR set to: 0
 11349  00368C  0100               	movlb	0	; () banked
 11350  00368E  5171               	movf	___llmod@divisor& (0+255),w,b
 11351  003690  0100               	movlb	0	; () banked
 11352  003692  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 11353  003694  0100               	movlb	0	; () banked
 11354  003696  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 11355  003698  0100               	movlb	0	; () banked
 11356  00369A  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11357  00369C  0100               	movlb	0	; () banked
 11358  00369E  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 11359  0036A0  0100               	movlb	0	; () banked
 11360  0036A2  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11361  0036A4  0100               	movlb	0	; () banked
 11362  0036A6  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 11363  0036A8  0100               	movlb	0	; () banked
 11364  0036AA  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11365  0036AC  A0D8               	btfss	status,0,c
 11366  0036AE  D010               	goto	l5184
 11367                           
 11368                           ; BSR set to: 0
 11369  0036B0  0100               	movlb	0	; () banked
 11370  0036B2  5171               	movf	___llmod@divisor& (0+255),w,b
 11371  0036B4  0100               	movlb	0	; () banked
 11372  0036B6  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 11373  0036B8  0100               	movlb	0	; () banked
 11374  0036BA  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 11375  0036BC  0100               	movlb	0	; () banked
 11376  0036BE  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11377  0036C0  0100               	movlb	0	; () banked
 11378  0036C2  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 11379  0036C4  0100               	movlb	0	; () banked
 11380  0036C6  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11381  0036C8  0100               	movlb	0	; () banked
 11382  0036CA  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 11383  0036CC  0100               	movlb	0	; () banked
 11384  0036CE  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11385  0036D0                     l5184:
 11386                           
 11387                           ; BSR set to: 0
 11388  0036D0  0100               	movlb	0	; () banked
 11389  0036D2  90D8               	bcf	status,0,c
 11390  0036D4  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11391  0036D6  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11392  0036D8  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11393  0036DA  3371               	rrcf	___llmod@divisor& (0+255),f,b
 11394                           
 11395                           ; BSR set to: 0
 11396  0036DC  0100               	movlb	0	; () banked
 11397  0036DE  2F75               	decfsz	___llmod@counter& (0+255),f,b
 11398  0036E0  D7D5               	goto	l5180
 11399  0036E2                     l977:
 11400                           
 11401                           ; BSR set to: 0
 11402  0036E2  C06D  F06D         	movff	___llmod@dividend,?___llmod
 11403  0036E6  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 11404  0036EA  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 11405  0036EE  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 11406                           
 11407                           ; BSR set to: 0
 11408  0036F2  0012               	return		;funcret
 11409  0036F4                     __end_of___llmod:
 11410                           	opt stack 0
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           indf0	equ	0xFEF
 11419                           postinc0	equ	0xFEE
 11420                           fsr0h	equ	0xFEA
 11421                           fsr0l	equ	0xFE9
 11422                           wreg	equ	0xFE8
 11423                           indf1	equ	0xFE7
 11424                           postdec1	equ	0xFE5
 11425                           fsr1h	equ	0xFE2
 11426                           fsr1l	equ	0xFE1
 11427                           indf2	equ	0xFDF
 11428                           postinc2	equ	0xFDE
 11429                           postdec2	equ	0xFDD
 11430                           fsr2h	equ	0xFDA
 11431                           fsr2l	equ	0xFD9
 11432                           status	equ	0xFD8
 11433                           
 11434 ;; *************** function ___lldiv *****************
 11435 ;; Defined at:
 11436 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;  dividend        4    0[BANK0 ] unsigned long 
 11439 ;;  divisor         4    4[BANK0 ] unsigned long 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  quotient        4    8[BANK0 ] unsigned long 
 11442 ;;  counter         1   12[BANK0 ] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  4    0[BANK0 ] unsigned long 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11452 ;;      Params:         0       8       0       0       0       0       0
 11453 ;;      Locals:         0       5       0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0
 11455 ;;      Totals:         0      13       0       0       0       0       0
 11456 ;;Total ram usage:       13 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    2
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_sprintf
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text43
 11467  003440                     __ptext43:
 11468                           	opt stack 0
 11469  003440                     ___lldiv:
 11470                           	opt stack 25
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;incstack = 0
 11474  003440  0E00               	movlw	0
 11475  003442  0100               	movlb	0	; () banked
 11476  003444  6F68               	movwf	___lldiv@quotient& (0+255),b
 11477  003446  0E00               	movlw	0
 11478  003448  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 11479  00344A  0E00               	movlw	0
 11480  00344C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11481  00344E  0E00               	movlw	0
 11482  003450  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11483                           
 11484                           ; BSR set to: 0
 11485  003452  0100               	movlb	0	; () banked
 11486  003454  5164               	movf	___lldiv@divisor& (0+255),w,b
 11487  003456  0100               	movlb	0	; () banked
 11488  003458  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11489  00345A  0100               	movlb	0	; () banked
 11490  00345C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11491  00345E  0100               	movlb	0	; () banked
 11492  003460  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11493  003462  B4D8               	btfsc	status,2,c
 11494  003464  D042               	goto	l967
 11495                           
 11496                           ; BSR set to: 0
 11497  003466  0E01               	movlw	1
 11498  003468  0100               	movlb	0	; () banked
 11499  00346A  6F6C               	movwf	___lldiv@counter& (0+255),b
 11500  00346C  D008               	goto	l5158
 11501  00346E                     l5156:
 11502                           
 11503                           ; BSR set to: 0
 11504  00346E  0100               	movlb	0	; () banked
 11505  003470  90D8               	bcf	status,0,c
 11506  003472  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 11507  003474  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11508  003476  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11509  003478  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11510  00347A  0100               	movlb	0	; () banked
 11511  00347C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 11512  00347E                     l5158:
 11513                           
 11514                           ; BSR set to: 0
 11515  00347E  0100               	movlb	0	; () banked
 11516  003480  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11517  003482  D7F5               	goto	l5156
 11518  003484                     l5160:
 11519                           
 11520                           ; BSR set to: 0
 11521  003484  0100               	movlb	0	; () banked
 11522  003486  90D8               	bcf	status,0,c
 11523  003488  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 11524  00348A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11525  00348C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11526  00348E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11527                           
 11528                           ; BSR set to: 0
 11529  003490  0100               	movlb	0	; () banked
 11530  003492  5164               	movf	___lldiv@divisor& (0+255),w,b
 11531  003494  0100               	movlb	0	; () banked
 11532  003496  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 11533  003498  0100               	movlb	0	; () banked
 11534  00349A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11535  00349C  0100               	movlb	0	; () banked
 11536  00349E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11537  0034A0  0100               	movlb	0	; () banked
 11538  0034A2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11539  0034A4  0100               	movlb	0	; () banked
 11540  0034A6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11541  0034A8  0100               	movlb	0	; () banked
 11542  0034AA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11543  0034AC  0100               	movlb	0	; () banked
 11544  0034AE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11545  0034B0  A0D8               	btfss	status,0,c
 11546  0034B2  D012               	goto	l5168
 11547                           
 11548                           ; BSR set to: 0
 11549  0034B4  0100               	movlb	0	; () banked
 11550  0034B6  5164               	movf	___lldiv@divisor& (0+255),w,b
 11551  0034B8  0100               	movlb	0	; () banked
 11552  0034BA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 11553  0034BC  0100               	movlb	0	; () banked
 11554  0034BE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11555  0034C0  0100               	movlb	0	; () banked
 11556  0034C2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11557  0034C4  0100               	movlb	0	; () banked
 11558  0034C6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11559  0034C8  0100               	movlb	0	; () banked
 11560  0034CA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11561  0034CC  0100               	movlb	0	; () banked
 11562  0034CE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11563  0034D0  0100               	movlb	0	; () banked
 11564  0034D2  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11565                           
 11566                           ; BSR set to: 0
 11567  0034D4  0100               	movlb	0	; () banked
 11568  0034D6  8168               	bsf	___lldiv@quotient& (0+255),0,b
 11569  0034D8                     l5168:
 11570                           
 11571                           ; BSR set to: 0
 11572  0034D8  0100               	movlb	0	; () banked
 11573  0034DA  90D8               	bcf	status,0,c
 11574  0034DC  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11575  0034DE  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11576  0034E0  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11577  0034E2  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 11578                           
 11579                           ; BSR set to: 0
 11580  0034E4  0100               	movlb	0	; () banked
 11581  0034E6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 11582  0034E8  D7CD               	goto	l5160
 11583  0034EA                     l967:
 11584                           
 11585                           ; BSR set to: 0
 11586  0034EA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 11587  0034EE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 11588  0034F2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 11589  0034F6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 11590                           
 11591                           ; BSR set to: 0
 11592  0034FA  0012               	return		;funcret
 11593  0034FC                     __end_of___lldiv:
 11594                           	opt stack 0
 11595                           tblptru	equ	0xFF8
 11596                           tblptrh	equ	0xFF7
 11597                           tblptrl	equ	0xFF6
 11598                           tablat	equ	0xFF5
 11599                           prodh	equ	0xFF4
 11600                           prodl	equ	0xFF3
 11601                           intcon	equ	0xFF2
 11602                           indf0	equ	0xFEF
 11603                           postinc0	equ	0xFEE
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           indf1	equ	0xFE7
 11608                           postdec1	equ	0xFE5
 11609                           fsr1h	equ	0xFE2
 11610                           fsr1l	equ	0xFE1
 11611                           indf2	equ	0xFDF
 11612                           postinc2	equ	0xFDE
 11613                           postdec2	equ	0xFDD
 11614                           fsr2h	equ	0xFDA
 11615                           fsr2l	equ	0xFD9
 11616                           status	equ	0xFD8
 11617                           
 11618 ;; *************** function ___fttol *****************
 11619 ;; Defined at:
 11620 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;  f1              3   42[BANK0 ] float 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  lval            4   52[BANK0 ] unsigned long 
 11625 ;;  exp1            1   56[BANK0 ] unsigned char 
 11626 ;;  sign1           1   51[BANK0 ] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  4   42[BANK0 ] long 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11636 ;;      Params:         0       4       0       0       0       0       0
 11637 ;;      Locals:         0       6       0       0       0       0       0
 11638 ;;      Temps:          0       5       0       0       0       0       0
 11639 ;;      Totals:         0      15       0       0       0       0       0
 11640 ;;Total ram usage:       15 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    2
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_util_getSolarCurrent
 11647 ;;		_util_getBatteryCurrent
 11648 ;;		_sprintf
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text44
 11653  002D06                     __ptext44:
 11654                           	opt stack 0
 11655  002D06                     ___fttol:
 11656                           	opt stack 26
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;incstack = 0
 11660  002D06  C08C  F08E         	movff	___fttol@f1+2,??___fttol
 11661  002D0A  0100               	movlb	0	; () banked
 11662  002D0C  6B8F               	clrf	(??___fttol+1)& (0+255),b
 11663  002D0E  6B90               	clrf	(??___fttol+2)& (0+255),b
 11664  002D10  0100               	movlb	0	; () banked
 11665  002D12  358B               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11666  002D14  0100               	movlb	0	; () banked
 11667  002D16  378E               	rlcf	??___fttol& (0+255),f,b
 11668  002D18  E301               	bnc	u3071
 11669  002D1A  818F               	bsf	(??___fttol+1)& (0+255),0,b
 11670  002D1C                     u3071:
 11671  002D1C  0100               	movlb	0	; () banked
 11672  002D1E  518E               	movf	??___fttol& (0+255),w,b
 11673  002D20  0100               	movlb	0	; () banked
 11674  002D22  6F98               	movwf	___fttol@exp1& (0+255),b
 11675  002D24  0100               	movlb	0	; () banked
 11676  002D26  5198               	movf	___fttol@exp1& (0+255),w,b
 11677  002D28  A4D8               	btfss	status,2,c
 11678  002D2A  D00A               	goto	l3594
 11679                           
 11680                           ; BSR set to: 0
 11681  002D2C  0E00               	movlw	0
 11682  002D2E  0100               	movlb	0	; () banked
 11683  002D30  6F8A               	movwf	?___fttol& (0+255),b
 11684  002D32  0E00               	movlw	0
 11685  002D34  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11686  002D36  0E00               	movlw	0
 11687  002D38  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11688  002D3A  0E00               	movlw	0
 11689  002D3C  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692  002D3E  0012               	return	
 11693  002D40                     l3594:
 11694                           
 11695                           ; BSR set to: 0
 11696  002D40  0E17               	movlw	23
 11697  002D42  0100               	movlb	0	; () banked
 11698  002D44  6F8E               	movwf	??___fttol& (0+255),b
 11699  002D46  C08A  F08F         	movff	___fttol@f1,??___fttol+1
 11700  002D4A  C08B  F090         	movff	___fttol@f1+1,??___fttol+2
 11701  002D4E  C08C  F091         	movff	___fttol@f1+2,??___fttol+3
 11702  002D52  0100               	movlb	0	; () banked
 11703  002D54  298E               	incf	??___fttol& (0+255),w,b
 11704  002D56  0100               	movlb	0	; () banked
 11705  002D58  6F92               	movwf	(??___fttol+4)& (0+255),b
 11706  002D5A  D005               	goto	u3090
 11707  002D5C                     u3095:
 11708  002D5C  0100               	movlb	0	; () banked
 11709  002D5E  90D8               	bcf	status,0,c
 11710  002D60  3391               	rrcf	(??___fttol+3)& (0+255),f,b
 11711  002D62  3390               	rrcf	(??___fttol+2)& (0+255),f,b
 11712  002D64  338F               	rrcf	(??___fttol+1)& (0+255),f,b
 11713  002D66                     u3090:
 11714  002D66  0100               	movlb	0	; () banked
 11715  002D68  2F92               	decfsz	(??___fttol+4)& (0+255),f,b
 11716  002D6A  D7F8               	goto	u3095
 11717  002D6C  0100               	movlb	0	; () banked
 11718  002D6E  518F               	movf	(??___fttol+1)& (0+255),w,b
 11719  002D70  0100               	movlb	0	; () banked
 11720  002D72  6F93               	movwf	___fttol@sign1& (0+255),b
 11721                           
 11722                           ; BSR set to: 0
 11723  002D74  0100               	movlb	0	; () banked
 11724  002D76  8F8B               	bsf	(___fttol@f1+1)& (0+255),7,b
 11725                           
 11726                           ; BSR set to: 0
 11727  002D78  0EFF               	movlw	255
 11728  002D7A  0100               	movlb	0	; () banked
 11729  002D7C  178A               	andwf	___fttol@f1& (0+255),f,b
 11730  002D7E  0EFF               	movlw	255
 11731  002D80  0100               	movlb	0	; () banked
 11732  002D82  178B               	andwf	(___fttol@f1+1)& (0+255),f,b
 11733  002D84  0E00               	movlw	0
 11734  002D86  0100               	movlb	0	; () banked
 11735  002D88  178C               	andwf	(___fttol@f1+2)& (0+255),f,b
 11736                           
 11737                           ; BSR set to: 0
 11738  002D8A  0100               	movlb	0	; () banked
 11739  002D8C  518A               	movf	___fttol@f1& (0+255),w,b
 11740  002D8E  0100               	movlb	0	; () banked
 11741  002D90  6F94               	movwf	___fttol@lval& (0+255),b
 11742  002D92  0100               	movlb	0	; () banked
 11743  002D94  518B               	movf	(___fttol@f1+1)& (0+255),w,b
 11744  002D96  0100               	movlb	0	; () banked
 11745  002D98  6F95               	movwf	(___fttol@lval+1)& (0+255),b
 11746  002D9A  0100               	movlb	0	; () banked
 11747  002D9C  518C               	movf	(___fttol@f1+2)& (0+255),w,b
 11748  002D9E  0100               	movlb	0	; () banked
 11749  002DA0  6F96               	movwf	(___fttol@lval+2)& (0+255),b
 11750  002DA2  0100               	movlb	0	; () banked
 11751  002DA4  6B97               	clrf	(___fttol@lval+3)& (0+255),b
 11752                           
 11753                           ; BSR set to: 0
 11754  002DA6  0E8E               	movlw	142
 11755  002DA8  0100               	movlb	0	; () banked
 11756  002DAA  5F98               	subwf	___fttol@exp1& (0+255),f,b
 11757                           
 11758                           ; BSR set to: 0
 11759  002DAC  0100               	movlb	0	; () banked
 11760  002DAE  AF98               	btfss	___fttol@exp1& (0+255),7,b
 11761  002DB0  D01A               	goto	l3616
 11762                           
 11763                           ; BSR set to: 0
 11764  002DB2  0100               	movlb	0	; () banked
 11765  002DB4  5198               	movf	___fttol@exp1& (0+255),w,b
 11766  002DB6  0A80               	xorlw	128
 11767  002DB8  0F8F               	addlw	143
 11768  002DBA  B0D8               	btfsc	status,0,c
 11769  002DBC  D00A               	goto	l3612
 11770                           
 11771                           ; BSR set to: 0
 11772  002DBE  0E00               	movlw	0
 11773  002DC0  0100               	movlb	0	; () banked
 11774  002DC2  6F8A               	movwf	?___fttol& (0+255),b
 11775  002DC4  0E00               	movlw	0
 11776  002DC6  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11777  002DC8  0E00               	movlw	0
 11778  002DCA  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11779  002DCC  0E00               	movlw	0
 11780  002DCE  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11781                           
 11782                           ; BSR set to: 0
 11783  002DD0  0012               	return	
 11784  002DD2                     l3612:
 11785                           
 11786                           ; BSR set to: 0
 11787  002DD2  0100               	movlb	0	; () banked
 11788  002DD4  90D8               	bcf	status,0,c
 11789  002DD6  3397               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11790  002DD8  3396               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11791  002DDA  3395               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11792  002DDC  3394               	rrcf	___fttol@lval& (0+255),f,b
 11793                           
 11794                           ; BSR set to: 0
 11795  002DDE  0100               	movlb	0	; () banked
 11796  002DE0  3F98               	incfsz	___fttol@exp1& (0+255),f,b
 11797  002DE2  D7F7               	goto	l3612
 11798                           
 11799                           ; BSR set to: 0
 11800  002DE4  D01B               	goto	l3626
 11801  002DE6                     l3616:
 11802                           
 11803                           ; BSR set to: 0
 11804  002DE6  0E17               	movlw	23
 11805  002DE8  0100               	movlb	0	; () banked
 11806  002DEA  6598               	cpfsgt	___fttol@exp1& (0+255),b
 11807  002DEC  D012               	goto	l3624
 11808                           
 11809                           ; BSR set to: 0
 11810  002DEE  0E00               	movlw	0
 11811  002DF0  0100               	movlb	0	; () banked
 11812  002DF2  6F8A               	movwf	?___fttol& (0+255),b
 11813  002DF4  0E00               	movlw	0
 11814  002DF6  6F8B               	movwf	(?___fttol+1)& (0+255),b
 11815  002DF8  0E00               	movlw	0
 11816  002DFA  6F8C               	movwf	(?___fttol+2)& (0+255),b
 11817  002DFC  0E00               	movlw	0
 11818  002DFE  6F8D               	movwf	(?___fttol+3)& (0+255),b
 11819                           
 11820                           ; BSR set to: 0
 11821  002E00  0012               	return	
 11822  002E02                     l3622:
 11823                           
 11824                           ; BSR set to: 0
 11825  002E02  0100               	movlb	0	; () banked
 11826  002E04  90D8               	bcf	status,0,c
 11827  002E06  3794               	rlcf	___fttol@lval& (0+255),f,b
 11828  002E08  3795               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11829  002E0A  3796               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11830  002E0C  3797               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11831  002E0E  0100               	movlb	0	; () banked
 11832  002E10  0798               	decf	___fttol@exp1& (0+255),f,b
 11833  002E12                     l3624:
 11834                           
 11835                           ; BSR set to: 0
 11836  002E12  0100               	movlb	0	; () banked
 11837  002E14  5198               	movf	___fttol@exp1& (0+255),w,b
 11838  002E16  0100               	movlb	0	; () banked
 11839  002E18  A4D8               	btfss	status,2,c
 11840  002E1A  D7F3               	goto	l3622
 11841  002E1C                     l3626:
 11842                           
 11843                           ; BSR set to: 0
 11844  002E1C  0100               	movlb	0	; () banked
 11845  002E1E  5193               	movf	___fttol@sign1& (0+255),w,b
 11846  002E20  0100               	movlb	0	; () banked
 11847  002E22  B4D8               	btfsc	status,2,c
 11848  002E24  D009               	goto	l3630
 11849                           
 11850                           ; BSR set to: 0
 11851  002E26  0100               	movlb	0	; () banked
 11852  002E28  1F97               	comf	(___fttol@lval+3)& (0+255),f,b
 11853  002E2A  1F96               	comf	(___fttol@lval+2)& (0+255),f,b
 11854  002E2C  1F95               	comf	(___fttol@lval+1)& (0+255),f,b
 11855  002E2E  6D94               	negf	___fttol@lval& (0+255),b
 11856  002E30  0E00               	movlw	0
 11857  002E32  2395               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11858  002E34  2396               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11859  002E36  2397               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11860  002E38                     l3630:
 11861                           
 11862                           ; BSR set to: 0
 11863  002E38  C094  F08A         	movff	___fttol@lval,?___fttol
 11864  002E3C  C095  F08B         	movff	___fttol@lval+1,?___fttol+1
 11865  002E40  C096  F08C         	movff	___fttol@lval+2,?___fttol+2
 11866  002E44  C097  F08D         	movff	___fttol@lval+3,?___fttol+3
 11867  002E48  0012               	return	
 11868  002E4A                     __end_of___fttol:
 11869                           	opt stack 0
 11870                           tblptru	equ	0xFF8
 11871                           tblptrh	equ	0xFF7
 11872                           tblptrl	equ	0xFF6
 11873                           tablat	equ	0xFF5
 11874                           prodh	equ	0xFF4
 11875                           prodl	equ	0xFF3
 11876                           intcon	equ	0xFF2
 11877                           indf0	equ	0xFEF
 11878                           postinc0	equ	0xFEE
 11879                           fsr0h	equ	0xFEA
 11880                           fsr0l	equ	0xFE9
 11881                           wreg	equ	0xFE8
 11882                           indf1	equ	0xFE7
 11883                           postdec1	equ	0xFE5
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           indf2	equ	0xFDF
 11887                           postinc2	equ	0xFDE
 11888                           postdec2	equ	0xFDD
 11889                           fsr2h	equ	0xFDA
 11890                           fsr2l	equ	0xFD9
 11891                           status	equ	0xFD8
 11892                           
 11893 ;; *************** function ___ftsub *****************
 11894 ;; Defined at:
 11895 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  f1              3   57[BANK0 ] float 
 11898 ;;  f2              3   60[BANK0 ] float 
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  3   57[BANK0 ] float 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2, status,0, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11910 ;;      Params:         0       6       0       0       0       0       0
 11911 ;;      Locals:         0       0       0       0       0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0
 11913 ;;      Totals:         0       6       0       0       0       0       0
 11914 ;;Total ram usage:        6 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    4
 11917 ;; This function calls:
 11918 ;;		___ftadd
 11919 ;; This function is called by:
 11920 ;;		_sprintf
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text45
 11925  0039D8                     __ptext45:
 11926                           	opt stack 0
 11927  0039D8                     ___ftsub:
 11928                           	opt stack 23
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;incstack = 0
 11932  0039D8  0100               	movlb	0	; () banked
 11933  0039DA  519C               	movf	___ftsub@f2& (0+255),w,b
 11934  0039DC  0100               	movlb	0	; () banked
 11935  0039DE  119D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11936  0039E0  0100               	movlb	0	; () banked
 11937  0039E2  119E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11938  0039E4  B4D8               	btfsc	status,2,c
 11939  0039E6  D009               	goto	l5124
 11940                           
 11941                           ; BSR set to: 0
 11942  0039E8  0E00               	movlw	0
 11943  0039EA  0100               	movlb	0	; () banked
 11944  0039EC  1B9C               	xorwf	___ftsub@f2& (0+255),f,b
 11945  0039EE  0E00               	movlw	0
 11946  0039F0  0100               	movlb	0	; () banked
 11947  0039F2  1B9D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11948  0039F4  0E80               	movlw	128
 11949  0039F6  0100               	movlb	0	; () banked
 11950  0039F8  1B9E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11951  0039FA                     l5124:
 11952                           
 11953                           ; BSR set to: 0
 11954  0039FA  C099  F08D         	movff	___ftsub@f1,___ftadd@f1
 11955  0039FE  C09A  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
 11956  003A02  C09B  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
 11957  003A06  C09C  F090         	movff	___ftsub@f2,___ftadd@f2
 11958  003A0A  C09D  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
 11959  003A0E  C09E  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
 11960  003A12  ECA0  F00F         	call	___ftadd	;wreg free
 11961  003A16  C08D  F099         	movff	?___ftadd,?___ftsub
 11962  003A1A  C08E  F09A         	movff	?___ftadd+1,?___ftsub+1
 11963  003A1E  C08F  F09B         	movff	?___ftadd+2,?___ftsub+2
 11964  003A22  0012               	return	
 11965  003A24                     __end_of___ftsub:
 11966                           	opt stack 0
 11967                           tblptru	equ	0xFF8
 11968                           tblptrh	equ	0xFF7
 11969                           tblptrl	equ	0xFF6
 11970                           tablat	equ	0xFF5
 11971                           prodh	equ	0xFF4
 11972                           prodl	equ	0xFF3
 11973                           intcon	equ	0xFF2
 11974                           indf0	equ	0xFEF
 11975                           postinc0	equ	0xFEE
 11976                           fsr0h	equ	0xFEA
 11977                           fsr0l	equ	0xFE9
 11978                           wreg	equ	0xFE8
 11979                           indf1	equ	0xFE7
 11980                           postdec1	equ	0xFE5
 11981                           fsr1h	equ	0xFE2
 11982                           fsr1l	equ	0xFE1
 11983                           indf2	equ	0xFDF
 11984                           postinc2	equ	0xFDE
 11985                           postdec2	equ	0xFDD
 11986                           fsr2h	equ	0xFDA
 11987                           fsr2l	equ	0xFD9
 11988                           status	equ	0xFD8
 11989                           
 11990 ;; *************** function ___ftadd *****************
 11991 ;; Defined at:
 11992 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  f1              3   45[BANK0 ] float 
 11995 ;;  f2              3   48[BANK0 ] float 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  exp1            1   56[BANK0 ] unsigned char 
 11998 ;;  exp2            1   55[BANK0 ] unsigned char 
 11999 ;;  sign            1   54[BANK0 ] unsigned char 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  3   45[BANK0 ] float 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2, status,0, cstack
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12009 ;;      Params:         0       6       0       0       0       0       0
 12010 ;;      Locals:         0       3       0       0       0       0       0
 12011 ;;      Temps:          0       3       0       0       0       0       0
 12012 ;;      Totals:         0      12       0       0       0       0       0
 12013 ;;Total ram usage:       12 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:    3
 12016 ;; This function calls:
 12017 ;;		___ftpack
 12018 ;; This function is called by:
 12019 ;;		_util_getTemperature
 12020 ;;		_sprintf
 12021 ;;		___ftsub
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text46
 12026  001F40                     __ptext46:
 12027                           	opt stack 0
 12028  001F40                     ___ftadd:
 12029                           	opt stack 25
 12030                           
 12031                           ;incstack = 0
 12032  001F40  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
 12033  001F44  0100               	movlb	0	; () banked
 12034  001F46  6B94               	clrf	(??___ftadd+1)& (0+255),b
 12035  001F48  6B95               	clrf	(??___ftadd+2)& (0+255),b
 12036  001F4A  0100               	movlb	0	; () banked
 12037  001F4C  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 12038  001F4E  0100               	movlb	0	; () banked
 12039  001F50  3793               	rlcf	??___ftadd& (0+255),f,b
 12040  001F52  E301               	bnc	u4511
 12041  001F54  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 12042  001F56                     u4511:
 12043  001F56  0100               	movlb	0	; () banked
 12044  001F58  5193               	movf	??___ftadd& (0+255),w,b
 12045  001F5A  0100               	movlb	0	; () banked
 12046  001F5C  6F98               	movwf	___ftadd@exp1& (0+255),b
 12047  001F5E  C092  F093         	movff	___ftadd@f2+2,??___ftadd
 12048  001F62  0100               	movlb	0	; () banked
 12049  001F64  6B94               	clrf	(??___ftadd+1)& (0+255),b
 12050  001F66  6B95               	clrf	(??___ftadd+2)& (0+255),b
 12051  001F68  0100               	movlb	0	; () banked
 12052  001F6A  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 12053  001F6C  0100               	movlb	0	; () banked
 12054  001F6E  3793               	rlcf	??___ftadd& (0+255),f,b
 12055  001F70  E301               	bnc	u4521
 12056  001F72  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 12057  001F74                     u4521:
 12058  001F74  0100               	movlb	0	; () banked
 12059  001F76  5193               	movf	??___ftadd& (0+255),w,b
 12060  001F78  0100               	movlb	0	; () banked
 12061  001F7A  6F97               	movwf	___ftadd@exp2& (0+255),b
 12062                           
 12063                           ; BSR set to: 0
 12064  001F7C  0100               	movlb	0	; () banked
 12065  001F7E  5198               	movf	___ftadd@exp1& (0+255),w,b
 12066  001F80  0100               	movlb	0	; () banked
 12067  001F82  B4D8               	btfsc	status,2,c
 12068  001F84  D011               	goto	l843
 12069                           
 12070                           ; BSR set to: 0
 12071  001F86  0100               	movlb	0	; () banked
 12072  001F88  5197               	movf	___ftadd@exp2& (0+255),w,b
 12073  001F8A  0100               	movlb	0	; () banked
 12074  001F8C  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 12075  001F8E  B0D8               	btfsc	status,0,c
 12076  001F90  D012               	goto	l4672
 12077                           
 12078                           ; BSR set to: 0
 12079  001F92  0100               	movlb	0	; () banked
 12080  001F94  5198               	movf	___ftadd@exp1& (0+255),w,b
 12081  001F96  0800               	sublw	0
 12082  001F98  0100               	movlb	0	; () banked
 12083  001F9A  2597               	addwf	___ftadd@exp2& (0+255),w,b
 12084  001F9C  0100               	movlb	0	; () banked
 12085  001F9E  6F93               	movwf	??___ftadd& (0+255),b
 12086  001FA0  0E18               	movlw	24
 12087  001FA2  0100               	movlb	0	; () banked
 12088  001FA4  6593               	cpfsgt	??___ftadd& (0+255),b
 12089  001FA6  D007               	goto	l4672
 12090  001FA8                     l843:
 12091                           
 12092                           ; BSR set to: 0
 12093  001FA8  C090  F08D         	movff	___ftadd@f2,?___ftadd
 12094  001FAC  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
 12095  001FB0  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
 12096  001FB4  0012               	return	
 12097  001FB6                     l4672:
 12098                           
 12099                           ; BSR set to: 0
 12100  001FB6  0100               	movlb	0	; () banked
 12101  001FB8  5197               	movf	___ftadd@exp2& (0+255),w,b
 12102  001FBA  0100               	movlb	0	; () banked
 12103  001FBC  B4D8               	btfsc	status,2,c
 12104  001FBE  D011               	goto	l847
 12105                           
 12106                           ; BSR set to: 0
 12107  001FC0  0100               	movlb	0	; () banked
 12108  001FC2  5198               	movf	___ftadd@exp1& (0+255),w,b
 12109  001FC4  0100               	movlb	0	; () banked
 12110  001FC6  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 12111  001FC8  B0D8               	btfsc	status,0,c
 12112  001FCA  D012               	goto	l4678
 12113                           
 12114                           ; BSR set to: 0
 12115  001FCC  0100               	movlb	0	; () banked
 12116  001FCE  5197               	movf	___ftadd@exp2& (0+255),w,b
 12117  001FD0  0800               	sublw	0
 12118  001FD2  0100               	movlb	0	; () banked
 12119  001FD4  2598               	addwf	___ftadd@exp1& (0+255),w,b
 12120  001FD6  0100               	movlb	0	; () banked
 12121  001FD8  6F93               	movwf	??___ftadd& (0+255),b
 12122  001FDA  0E18               	movlw	24
 12123  001FDC  0100               	movlb	0	; () banked
 12124  001FDE  6593               	cpfsgt	??___ftadd& (0+255),b
 12125  001FE0  D007               	goto	l4678
 12126  001FE2                     l847:
 12127                           
 12128                           ; BSR set to: 0
 12129  001FE2  C08D  F08D         	movff	___ftadd@f1,?___ftadd
 12130  001FE6  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
 12131  001FEA  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
 12132  001FEE  0012               	return	
 12133  001FF0                     l4678:
 12134                           
 12135                           ; BSR set to: 0
 12136  001FF0  0E06               	movlw	6
 12137  001FF2  0100               	movlb	0	; () banked
 12138  001FF4  6F96               	movwf	___ftadd@sign& (0+255),b
 12139                           
 12140                           ; BSR set to: 0
 12141  001FF6  0100               	movlb	0	; () banked
 12142  001FF8  AF8F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 12143  001FFA  D002               	goto	l4684
 12144                           
 12145                           ; BSR set to: 0
 12146  001FFC  0100               	movlb	0	; () banked
 12147  001FFE  8F96               	bsf	___ftadd@sign& (0+255),7,b
 12148  002000                     l4684:
 12149                           
 12150                           ; BSR set to: 0
 12151  002000  0100               	movlb	0	; () banked
 12152  002002  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12153  002004  D002               	goto	l849
 12154                           
 12155                           ; BSR set to: 0
 12156  002006  0100               	movlb	0	; () banked
 12157  002008  8D96               	bsf	___ftadd@sign& (0+255),6,b
 12158  00200A                     l849:
 12159                           
 12160                           ; BSR set to: 0
 12161  00200A  0100               	movlb	0	; () banked
 12162  00200C  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12163                           
 12164                           ; BSR set to: 0
 12165  00200E  0EFF               	movlw	255
 12166  002010  0100               	movlb	0	; () banked
 12167  002012  178D               	andwf	___ftadd@f1& (0+255),f,b
 12168  002014  0EFF               	movlw	255
 12169  002016  0100               	movlb	0	; () banked
 12170  002018  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12171  00201A  0E00               	movlw	0
 12172  00201C  0100               	movlb	0	; () banked
 12173  00201E  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12174  002020  0100               	movlb	0	; () banked
 12175  002022  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12176                           
 12177                           ; BSR set to: 0
 12178  002024  0EFF               	movlw	255
 12179  002026  0100               	movlb	0	; () banked
 12180  002028  1790               	andwf	___ftadd@f2& (0+255),f,b
 12181  00202A  0EFF               	movlw	255
 12182  00202C  0100               	movlb	0	; () banked
 12183  00202E  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12184  002030  0E00               	movlw	0
 12185  002032  0100               	movlb	0	; () banked
 12186  002034  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12187                           
 12188                           ; BSR set to: 0
 12189  002036  0100               	movlb	0	; () banked
 12190  002038  5197               	movf	___ftadd@exp2& (0+255),w,b
 12191  00203A  0100               	movlb	0	; () banked
 12192  00203C  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 12193  00203E  B0D8               	btfsc	status,0,c
 12194  002040  D025               	goto	l4704
 12195  002042                     l4694:
 12196                           
 12197                           ; BSR set to: 0
 12198  002042  0100               	movlb	0	; () banked
 12199  002044  90D8               	bcf	status,0,c
 12200  002046  3790               	rlcf	___ftadd@f2& (0+255),f,b
 12201  002048  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12202  00204A  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12203  00204C  0100               	movlb	0	; () banked
 12204  00204E  0797               	decf	___ftadd@exp2& (0+255),f,b
 12205                           
 12206                           ; BSR set to: 0
 12207  002050  0100               	movlb	0	; () banked
 12208  002052  5198               	movf	___ftadd@exp1& (0+255),w,b
 12209  002054  0100               	movlb	0	; () banked
 12210  002056  1997               	xorwf	___ftadd@exp2& (0+255),w,b
 12211  002058  B4D8               	btfsc	status,2,c
 12212  00205A  D011               	goto	l4702
 12213                           
 12214                           ; BSR set to: 0
 12215  00205C  0100               	movlb	0	; () banked
 12216  00205E  0796               	decf	___ftadd@sign& (0+255),f,b
 12217  002060  C096  F093         	movff	___ftadd@sign,??___ftadd
 12218  002064  0E07               	movlw	7
 12219  002066  0100               	movlb	0	; () banked
 12220  002068  1793               	andwf	??___ftadd& (0+255),f,b
 12221  00206A  B4D8               	btfsc	status,2,c
 12222  00206C  D008               	goto	l4702
 12223  00206E  D7E9               	goto	l4694
 12224  002070                     l4700:
 12225                           
 12226                           ; BSR set to: 0
 12227  002070  0100               	movlb	0	; () banked
 12228  002072  90D8               	bcf	status,0,c
 12229  002074  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12230  002076  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12231  002078  338D               	rrcf	___ftadd@f1& (0+255),f,b
 12232  00207A  0100               	movlb	0	; () banked
 12233  00207C  2B98               	incf	___ftadd@exp1& (0+255),f,b
 12234  00207E                     l4702:
 12235                           
 12236                           ; BSR set to: 0
 12237  00207E  0100               	movlb	0	; () banked
 12238  002080  5197               	movf	___ftadd@exp2& (0+255),w,b
 12239  002082  0100               	movlb	0	; () banked
 12240  002084  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 12241  002086  B4D8               	btfsc	status,2,c
 12242  002088  D02B               	goto	l858
 12243  00208A  D7F2               	goto	l4700
 12244  00208C                     l4704:
 12245                           
 12246                           ; BSR set to: 0
 12247  00208C  0100               	movlb	0	; () banked
 12248  00208E  5198               	movf	___ftadd@exp1& (0+255),w,b
 12249  002090  0100               	movlb	0	; () banked
 12250  002092  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 12251  002094  B0D8               	btfsc	status,0,c
 12252  002096  D024               	goto	l858
 12253  002098                     l4706:
 12254                           
 12255                           ; BSR set to: 0
 12256  002098  0100               	movlb	0	; () banked
 12257  00209A  90D8               	bcf	status,0,c
 12258  00209C  378D               	rlcf	___ftadd@f1& (0+255),f,b
 12259  00209E  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12260  0020A0  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12261  0020A2  0100               	movlb	0	; () banked
 12262  0020A4  0798               	decf	___ftadd@exp1& (0+255),f,b
 12263                           
 12264                           ; BSR set to: 0
 12265  0020A6  0100               	movlb	0	; () banked
 12266  0020A8  5198               	movf	___ftadd@exp1& (0+255),w,b
 12267  0020AA  0100               	movlb	0	; () banked
 12268  0020AC  1997               	xorwf	___ftadd@exp2& (0+255),w,b
 12269  0020AE  B4D8               	btfsc	status,2,c
 12270  0020B0  D011               	goto	l4714
 12271                           
 12272                           ; BSR set to: 0
 12273  0020B2  0100               	movlb	0	; () banked
 12274  0020B4  0796               	decf	___ftadd@sign& (0+255),f,b
 12275  0020B6  C096  F093         	movff	___ftadd@sign,??___ftadd
 12276  0020BA  0E07               	movlw	7
 12277  0020BC  0100               	movlb	0	; () banked
 12278  0020BE  1793               	andwf	??___ftadd& (0+255),f,b
 12279  0020C0  B4D8               	btfsc	status,2,c
 12280  0020C2  D008               	goto	l4714
 12281  0020C4  D7E9               	goto	l4706
 12282  0020C6                     l4712:
 12283                           
 12284                           ; BSR set to: 0
 12285  0020C6  0100               	movlb	0	; () banked
 12286  0020C8  90D8               	bcf	status,0,c
 12287  0020CA  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12288  0020CC  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12289  0020CE  3390               	rrcf	___ftadd@f2& (0+255),f,b
 12290  0020D0  0100               	movlb	0	; () banked
 12291  0020D2  2B97               	incf	___ftadd@exp2& (0+255),f,b
 12292  0020D4                     l4714:
 12293                           
 12294                           ; BSR set to: 0
 12295  0020D4  0100               	movlb	0	; () banked
 12296  0020D6  5197               	movf	___ftadd@exp2& (0+255),w,b
 12297  0020D8  0100               	movlb	0	; () banked
 12298  0020DA  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 12299  0020DC  A4D8               	btfss	status,2,c
 12300  0020DE  D7F3               	goto	l4712
 12301  0020E0                     l858:
 12302                           
 12303                           ; BSR set to: 0
 12304  0020E0  0100               	movlb	0	; () banked
 12305  0020E2  AF96               	btfss	___ftadd@sign& (0+255),7,b
 12306  0020E4  D012               	goto	l867
 12307                           
 12308                           ; BSR set to: 0
 12309  0020E6  0EFF               	movlw	255
 12310  0020E8  0100               	movlb	0	; () banked
 12311  0020EA  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
 12312  0020EC  0EFF               	movlw	255
 12313  0020EE  0100               	movlb	0	; () banked
 12314  0020F0  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12315  0020F2  0EFF               	movlw	255
 12316  0020F4  0100               	movlb	0	; () banked
 12317  0020F6  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12318  0020F8  0E01               	movlw	1
 12319  0020FA  0100               	movlb	0	; () banked
 12320  0020FC  278D               	addwf	___ftadd@f1& (0+255),f,b
 12321  0020FE  0E00               	movlw	0
 12322  002100  0100               	movlb	0	; () banked
 12323  002102  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12324  002104  0E00               	movlw	0
 12325  002106  0100               	movlb	0	; () banked
 12326  002108  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12327  00210A                     l867:
 12328                           
 12329                           ; BSR set to: 0
 12330  00210A  0100               	movlb	0	; () banked
 12331  00210C  AD96               	btfss	___ftadd@sign& (0+255),6,b
 12332  00210E  D012               	goto	l4720
 12333                           
 12334                           ; BSR set to: 0
 12335  002110  0EFF               	movlw	255
 12336  002112  0100               	movlb	0	; () banked
 12337  002114  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 12338  002116  0EFF               	movlw	255
 12339  002118  0100               	movlb	0	; () banked
 12340  00211A  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12341  00211C  0EFF               	movlw	255
 12342  00211E  0100               	movlb	0	; () banked
 12343  002120  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12344  002122  0E01               	movlw	1
 12345  002124  0100               	movlb	0	; () banked
 12346  002126  2790               	addwf	___ftadd@f2& (0+255),f,b
 12347  002128  0E00               	movlw	0
 12348  00212A  0100               	movlb	0	; () banked
 12349  00212C  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12350  00212E  0E00               	movlw	0
 12351  002130  0100               	movlb	0	; () banked
 12352  002132  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12353  002134                     l4720:
 12354                           
 12355                           ; BSR set to: 0
 12356  002134  0E00               	movlw	0
 12357  002136  0100               	movlb	0	; () banked
 12358  002138  6F96               	movwf	___ftadd@sign& (0+255),b
 12359                           
 12360                           ; BSR set to: 0
 12361  00213A  0100               	movlb	0	; () banked
 12362  00213C  518D               	movf	___ftadd@f1& (0+255),w,b
 12363  00213E  0100               	movlb	0	; () banked
 12364  002140  2790               	addwf	___ftadd@f2& (0+255),f,b
 12365  002142  0100               	movlb	0	; () banked
 12366  002144  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
 12367  002146  0100               	movlb	0	; () banked
 12368  002148  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12369  00214A  0100               	movlb	0	; () banked
 12370  00214C  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
 12371  00214E  0100               	movlb	0	; () banked
 12372  002150  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 0
 12375  002152  0100               	movlb	0	; () banked
 12376  002154  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12377  002156  D015               	goto	l4730
 12378                           
 12379                           ; BSR set to: 0
 12380  002158  0EFF               	movlw	255
 12381  00215A  0100               	movlb	0	; () banked
 12382  00215C  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 12383  00215E  0EFF               	movlw	255
 12384  002160  0100               	movlb	0	; () banked
 12385  002162  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12386  002164  0EFF               	movlw	255
 12387  002166  0100               	movlb	0	; () banked
 12388  002168  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12389  00216A  0E01               	movlw	1
 12390  00216C  0100               	movlb	0	; () banked
 12391  00216E  2790               	addwf	___ftadd@f2& (0+255),f,b
 12392  002170  0E00               	movlw	0
 12393  002172  0100               	movlb	0	; () banked
 12394  002174  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12395  002176  0E00               	movlw	0
 12396  002178  0100               	movlb	0	; () banked
 12397  00217A  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12398                           
 12399                           ; BSR set to: 0
 12400  00217C  0E01               	movlw	1
 12401  00217E  0100               	movlb	0	; () banked
 12402  002180  6F96               	movwf	___ftadd@sign& (0+255),b
 12403  002182                     l4730:
 12404                           
 12405                           ; BSR set to: 0
 12406  002182  C090  F060         	movff	___ftadd@f2,___ftpack@arg
 12407  002186  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 12408  00218A  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 12409  00218E  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
 12410  002192  C096  F064         	movff	___ftadd@sign,___ftpack@sign
 12411  002196  ECAE  F017         	call	___ftpack	;wreg free
 12412  00219A  C060  F08D         	movff	?___ftpack,?___ftadd
 12413  00219E  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
 12414  0021A2  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
 12415  0021A6  0012               	return	
 12416  0021A8                     __end_of___ftadd:
 12417                           	opt stack 0
 12418                           tblptru	equ	0xFF8
 12419                           tblptrh	equ	0xFF7
 12420                           tblptrl	equ	0xFF6
 12421                           tablat	equ	0xFF5
 12422                           prodh	equ	0xFF4
 12423                           prodl	equ	0xFF3
 12424                           intcon	equ	0xFF2
 12425                           indf0	equ	0xFEF
 12426                           postinc0	equ	0xFEE
 12427                           fsr0h	equ	0xFEA
 12428                           fsr0l	equ	0xFE9
 12429                           wreg	equ	0xFE8
 12430                           indf1	equ	0xFE7
 12431                           postdec1	equ	0xFE5
 12432                           fsr1h	equ	0xFE2
 12433                           fsr1l	equ	0xFE1
 12434                           indf2	equ	0xFDF
 12435                           postinc2	equ	0xFDE
 12436                           postdec2	equ	0xFDD
 12437                           fsr2h	equ	0xFDA
 12438                           fsr2l	equ	0xFD9
 12439                           status	equ	0xFD8
 12440                           
 12441 ;; *************** function ___ftpack *****************
 12442 ;; Defined at:
 12443 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  arg             3    0[BANK0 ] unsigned um
 12446 ;;  exp             1    3[BANK0 ] unsigned char 
 12447 ;;  sign            1    4[BANK0 ] unsigned char 
 12448 ;; Auto vars:     Size  Location     Type
 12449 ;;		None
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  3    0[BANK0 ] float 
 12452 ;; Registers used:
 12453 ;;		wreg, status,2, status,0
 12454 ;; Tracked objects:
 12455 ;;		On entry : 0/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12459 ;;      Params:         0       5       0       0       0       0       0
 12460 ;;      Locals:         0       0       0       0       0       0       0
 12461 ;;      Temps:          0       3       0       0       0       0       0
 12462 ;;      Totals:         0       8       0       0       0       0       0
 12463 ;;Total ram usage:        8 bytes
 12464 ;; Hardware stack levels used:    1
 12465 ;; Hardware stack levels required when called:    2
 12466 ;; This function calls:
 12467 ;;		Nothing
 12468 ;; This function is called by:
 12469 ;;		___awtoft
 12470 ;;		___ftadd
 12471 ;;		___ftdiv
 12472 ;;		___ftmul
 12473 ;;		___lltoft
 12474 ;;		___lwtoft
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text47
 12479  002F5C                     __ptext47:
 12480                           	opt stack 0
 12481  002F5C                     ___ftpack:
 12482                           	opt stack 25
 12483                           
 12484                           ;incstack = 0
 12485  002F5C  0100               	movlb	0	; () banked
 12486  002F5E  5163               	movf	___ftpack@exp& (0+255),w,b
 12487  002F60  0100               	movlb	0	; () banked
 12488  002F62  B4D8               	btfsc	status,2,c
 12489  002F64  D008               	goto	l4594
 12490                           
 12491                           ; BSR set to: 0
 12492  002F66  0100               	movlb	0	; () banked
 12493  002F68  5160               	movf	___ftpack@arg& (0+255),w,b
 12494  002F6A  0100               	movlb	0	; () banked
 12495  002F6C  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12496  002F6E  0100               	movlb	0	; () banked
 12497  002F70  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12498  002F72  A4D8               	btfss	status,2,c
 12499  002F74  D011               	goto	l4600
 12500  002F76                     l4594:
 12501                           
 12502                           ; BSR set to: 0
 12503  002F76  0E00               	movlw	0
 12504  002F78  0100               	movlb	0	; () banked
 12505  002F7A  6F60               	movwf	?___ftpack& (0+255),b
 12506  002F7C  0E00               	movlw	0
 12507  002F7E  0100               	movlb	0	; () banked
 12508  002F80  6F61               	movwf	(?___ftpack+1)& (0+255),b
 12509  002F82  0E00               	movlw	0
 12510  002F84  0100               	movlb	0	; () banked
 12511  002F86  6F62               	movwf	(?___ftpack+2)& (0+255),b
 12512                           
 12513                           ; BSR set to: 0
 12514  002F88  0012               	return	
 12515  002F8A                     l4598:
 12516                           
 12517                           ; BSR set to: 0
 12518  002F8A  0100               	movlb	0	; () banked
 12519  002F8C  2B63               	incf	___ftpack@exp& (0+255),f,b
 12520  002F8E  0100               	movlb	0	; () banked
 12521  002F90  90D8               	bcf	status,0,c
 12522  002F92  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12523  002F94  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12524  002F96  3360               	rrcf	___ftpack@arg& (0+255),f,b
 12525  002F98                     l4600:
 12526                           
 12527                           ; BSR set to: 0
 12528  002F98  0E00               	movlw	0
 12529  002F9A  0100               	movlb	0	; () banked
 12530  002F9C  1560               	andwf	___ftpack@arg& (0+255),w,b
 12531  002F9E  0100               	movlb	0	; () banked
 12532  002FA0  6F65               	movwf	??___ftpack& (0+255),b
 12533  002FA2  0E00               	movlw	0
 12534  002FA4  0100               	movlb	0	; () banked
 12535  002FA6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12536  002FA8  0100               	movlb	0	; () banked
 12537  002FAA  6F66               	movwf	(??___ftpack+1)& (0+255),b
 12538  002FAC  0EFE               	movlw	254
 12539  002FAE  0100               	movlb	0	; () banked
 12540  002FB0  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12541  002FB2  0100               	movlb	0	; () banked
 12542  002FB4  6F67               	movwf	(??___ftpack+2)& (0+255),b
 12543  002FB6  0100               	movlb	0	; () banked
 12544  002FB8  5165               	movf	??___ftpack& (0+255),w,b
 12545  002FBA  0100               	movlb	0	; () banked
 12546  002FBC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 12547  002FBE  0100               	movlb	0	; () banked
 12548  002FC0  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 12549  002FC2  B4D8               	btfsc	status,2,c
 12550  002FC4  D011               	goto	l4606
 12551  002FC6  D7E1               	goto	l4598
 12552  002FC8                     l4602:
 12553                           
 12554                           ; BSR set to: 0
 12555  002FC8  0100               	movlb	0	; () banked
 12556  002FCA  2B63               	incf	___ftpack@exp& (0+255),f,b
 12557                           
 12558                           ; BSR set to: 0
 12559  002FCC  0E01               	movlw	1
 12560  002FCE  0100               	movlb	0	; () banked
 12561  002FD0  2760               	addwf	___ftpack@arg& (0+255),f,b
 12562  002FD2  0E00               	movlw	0
 12563  002FD4  0100               	movlb	0	; () banked
 12564  002FD6  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12565  002FD8  0E00               	movlw	0
 12566  002FDA  0100               	movlb	0	; () banked
 12567  002FDC  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12568  002FDE  0100               	movlb	0	; () banked
 12569  002FE0  90D8               	bcf	status,0,c
 12570  002FE2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12571  002FE4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12572  002FE6  3360               	rrcf	___ftpack@arg& (0+255),f,b
 12573  002FE8                     l4606:
 12574                           
 12575                           ; BSR set to: 0
 12576  002FE8  0E00               	movlw	0
 12577  002FEA  0100               	movlb	0	; () banked
 12578  002FEC  1560               	andwf	___ftpack@arg& (0+255),w,b
 12579  002FEE  0100               	movlb	0	; () banked
 12580  002FF0  6F65               	movwf	??___ftpack& (0+255),b
 12581  002FF2  0E00               	movlw	0
 12582  002FF4  0100               	movlb	0	; () banked
 12583  002FF6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12584  002FF8  0100               	movlb	0	; () banked
 12585  002FFA  6F66               	movwf	(??___ftpack+1)& (0+255),b
 12586  002FFC  0EFF               	movlw	255
 12587  002FFE  0100               	movlb	0	; () banked
 12588  003000  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12589  003002  0100               	movlb	0	; () banked
 12590  003004  6F67               	movwf	(??___ftpack+2)& (0+255),b
 12591  003006  0100               	movlb	0	; () banked
 12592  003008  5165               	movf	??___ftpack& (0+255),w,b
 12593  00300A  0100               	movlb	0	; () banked
 12594  00300C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 12595  00300E  0100               	movlb	0	; () banked
 12596  003010  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 12597  003012  B4D8               	btfsc	status,2,c
 12598  003014  D008               	goto	l4610
 12599  003016  D7D8               	goto	l4602
 12600  003018                     l4608:
 12601                           
 12602                           ; BSR set to: 0
 12603  003018  0100               	movlb	0	; () banked
 12604  00301A  0763               	decf	___ftpack@exp& (0+255),f,b
 12605  00301C  0100               	movlb	0	; () banked
 12606  00301E  90D8               	bcf	status,0,c
 12607  003020  3760               	rlcf	___ftpack@arg& (0+255),f,b
 12608  003022  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12609  003024  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12610  003026                     l4610:
 12611                           
 12612                           ; BSR set to: 0
 12613  003026  0100               	movlb	0	; () banked
 12614  003028  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12615  00302A  D004               	goto	l820
 12616                           
 12617                           ; BSR set to: 0
 12618  00302C  0E02               	movlw	2
 12619  00302E  0100               	movlb	0	; () banked
 12620  003030  6163               	cpfslt	___ftpack@exp& (0+255),b
 12621  003032  D7F2               	goto	l4608
 12622  003034                     l820:
 12623                           
 12624                           ; BSR set to: 0
 12625  003034  0100               	movlb	0	; () banked
 12626  003036  B163               	btfsc	___ftpack@exp& (0+255),0,b
 12627  003038  D002               	goto	l4616
 12628                           
 12629                           ; BSR set to: 0
 12630  00303A  0100               	movlb	0	; () banked
 12631  00303C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12632  00303E                     l4616:
 12633                           
 12634                           ; BSR set to: 0
 12635  00303E  0100               	movlb	0	; () banked
 12636  003040  90D8               	bcf	status,0,c
 12637  003042  3363               	rrcf	___ftpack@exp& (0+255),f,b
 12638  003044  0100               	movlb	0	; () banked
 12639  003046  5163               	movf	___ftpack@exp& (0+255),w,b
 12640  003048  0100               	movlb	0	; () banked
 12641  00304A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12642                           
 12643                           ; BSR set to: 0
 12644  00304C  0100               	movlb	0	; () banked
 12645  00304E  5164               	movf	___ftpack@sign& (0+255),w,b
 12646  003050  0100               	movlb	0	; () banked
 12647  003052  B4D8               	btfsc	status,2,c
 12648  003054  D002               	goto	l4622
 12649                           
 12650                           ; BSR set to: 0
 12651  003056  0100               	movlb	0	; () banked
 12652  003058  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12653  00305A                     l4622:
 12654                           
 12655                           ; BSR set to: 0
 12656  00305A  C060  F060         	movff	___ftpack@arg,?___ftpack
 12657  00305E  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 12658  003062  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 12659  003066  0012               	return	
 12660  003068                     __end_of___ftpack:
 12661                           	opt stack 0
 12662                           tblptru	equ	0xFF8
 12663                           tblptrh	equ	0xFF7
 12664                           tblptrl	equ	0xFF6
 12665                           tablat	equ	0xFF5
 12666                           prodh	equ	0xFF4
 12667                           prodl	equ	0xFF3
 12668                           intcon	equ	0xFF2
 12669                           indf0	equ	0xFEF
 12670                           postinc0	equ	0xFEE
 12671                           fsr0h	equ	0xFEA
 12672                           fsr0l	equ	0xFE9
 12673                           wreg	equ	0xFE8
 12674                           indf1	equ	0xFE7
 12675                           postdec1	equ	0xFE5
 12676                           fsr1h	equ	0xFE2
 12677                           fsr1l	equ	0xFE1
 12678                           indf2	equ	0xFDF
 12679                           postinc2	equ	0xFDE
 12680                           postdec2	equ	0xFDD
 12681                           fsr2h	equ	0xFDA
 12682                           fsr2l	equ	0xFD9
 12683                           status	equ	0xFD8
 12684                           
 12685 ;; *************** function ___ftneg *****************
 12686 ;; Defined at:
 12687 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  f1              3    0[BANK0 ] float 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;		None
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  3    0[BANK0 ] float 
 12694 ;; Registers used:
 12695 ;;		wreg, status,2, status,0
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12701 ;;      Params:         0       3       0       0       0       0       0
 12702 ;;      Locals:         0       0       0       0       0       0       0
 12703 ;;      Temps:          0       0       0       0       0       0       0
 12704 ;;      Totals:         0       3       0       0       0       0       0
 12705 ;;Total ram usage:        3 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:    2
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_sprintf
 12712 ;; This function uses a non-reentrant model
 12713 ;;
 12714                           
 12715                           	psect	text48
 12716  003CB2                     __ptext48:
 12717                           	opt stack 0
 12718  003CB2                     ___ftneg:
 12719                           	opt stack 25
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;incstack = 0
 12723  003CB2  0100               	movlb	0	; () banked
 12724  003CB4  5160               	movf	___ftneg@f1& (0+255),w,b
 12725  003CB6  0100               	movlb	0	; () banked
 12726  003CB8  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12727  003CBA  0100               	movlb	0	; () banked
 12728  003CBC  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12729  003CBE  B4D8               	btfsc	status,2,c
 12730  003CC0  D009               	goto	l917
 12731                           
 12732                           ; BSR set to: 0
 12733  003CC2  0E00               	movlw	0
 12734  003CC4  0100               	movlb	0	; () banked
 12735  003CC6  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 12736  003CC8  0E00               	movlw	0
 12737  003CCA  0100               	movlb	0	; () banked
 12738  003CCC  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12739  003CCE  0E80               	movlw	128
 12740  003CD0  0100               	movlb	0	; () banked
 12741  003CD2  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12742  003CD4                     l917:
 12743                           
 12744                           ; BSR set to: 0
 12745  003CD4  C060  F060         	movff	___ftneg@f1,?___ftneg
 12746  003CD8  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 12747  003CDC  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 12748                           
 12749                           ; BSR set to: 0
 12750  003CE0  0012               	return		;funcret
 12751  003CE2                     __end_of___ftneg:
 12752                           	opt stack 0
 12753                           tblptru	equ	0xFF8
 12754                           tblptrh	equ	0xFF7
 12755                           tblptrl	equ	0xFF6
 12756                           tablat	equ	0xFF5
 12757                           prodh	equ	0xFF4
 12758                           prodl	equ	0xFF3
 12759                           intcon	equ	0xFF2
 12760                           indf0	equ	0xFEF
 12761                           postinc0	equ	0xFEE
 12762                           fsr0h	equ	0xFEA
 12763                           fsr0l	equ	0xFE9
 12764                           wreg	equ	0xFE8
 12765                           indf1	equ	0xFE7
 12766                           postdec1	equ	0xFE5
 12767                           fsr1h	equ	0xFE2
 12768                           fsr1l	equ	0xFE1
 12769                           indf2	equ	0xFDF
 12770                           postinc2	equ	0xFDE
 12771                           postdec2	equ	0xFDD
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function ___ftge *****************
 12777 ;; Defined at:
 12778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  ff1             3    0[BANK0 ] float 
 12781 ;;  ff2             3    3[BANK0 ] float 
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;		None               void
 12786 ;; Registers used:
 12787 ;;		wreg, status,2, status,0
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12793 ;;      Params:         0       6       0       0       0       0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0
 12795 ;;      Temps:          0       3       0       0       0       0       0
 12796 ;;      Totals:         0       9       0       0       0       0       0
 12797 ;;Total ram usage:        9 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    2
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_sprintf
 12804 ;; This function uses a non-reentrant model
 12805 ;;
 12806                           
 12807                           	psect	text49
 12808  0031FC                     __ptext49:
 12809                           	opt stack 0
 12810  0031FC                     ___ftge:
 12811                           	opt stack 25
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;incstack = 0
 12815  0031FC  0100               	movlb	0	; () banked
 12816  0031FE  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12817  003200  D01D               	goto	l5132
 12818                           
 12819                           ; BSR set to: 0
 12820  003202  C060  F066         	movff	___ftge@ff1,??___ftge
 12821  003206  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 12822  00320A  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 12823  00320E  0100               	movlb	0	; () banked
 12824  003210  1F66               	comf	??___ftge& (0+255),f,b
 12825  003212  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12826  003214  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12827  003216  2B66               	incf	??___ftge& (0+255),f,b
 12828  003218  0E00               	movlw	0
 12829  00321A  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12830  00321C  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12831  00321E  0E00               	movlw	0
 12832  003220  0100               	movlb	0	; () banked
 12833  003222  2566               	addwf	??___ftge& (0+255),w,b
 12834  003224  0100               	movlb	0	; () banked
 12835  003226  6F60               	movwf	___ftge@ff1& (0+255),b
 12836  003228  0E00               	movlw	0
 12837  00322A  0100               	movlb	0	; () banked
 12838  00322C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12839  00322E  0100               	movlb	0	; () banked
 12840  003230  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12841  003232  0E80               	movlw	128
 12842  003234  0100               	movlb	0	; () banked
 12843  003236  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12844  003238  0100               	movlb	0	; () banked
 12845  00323A  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12846  00323C                     l5132:
 12847                           
 12848                           ; BSR set to: 0
 12849  00323C  0100               	movlb	0	; () banked
 12850  00323E  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12851  003240  D01D               	goto	l5136
 12852                           
 12853                           ; BSR set to: 0
 12854  003242  C063  F066         	movff	___ftge@ff2,??___ftge
 12855  003246  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 12856  00324A  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 12857  00324E  0100               	movlb	0	; () banked
 12858  003250  1F66               	comf	??___ftge& (0+255),f,b
 12859  003252  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12860  003254  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12861  003256  2B66               	incf	??___ftge& (0+255),f,b
 12862  003258  0E00               	movlw	0
 12863  00325A  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12864  00325C  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12865  00325E  0E00               	movlw	0
 12866  003260  0100               	movlb	0	; () banked
 12867  003262  2566               	addwf	??___ftge& (0+255),w,b
 12868  003264  0100               	movlb	0	; () banked
 12869  003266  6F63               	movwf	___ftge@ff2& (0+255),b
 12870  003268  0E00               	movlw	0
 12871  00326A  0100               	movlb	0	; () banked
 12872  00326C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12873  00326E  0100               	movlb	0	; () banked
 12874  003270  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12875  003272  0E80               	movlw	128
 12876  003274  0100               	movlb	0	; () banked
 12877  003276  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12878  003278  0100               	movlb	0	; () banked
 12879  00327A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12880  00327C                     l5136:
 12881                           
 12882                           ; BSR set to: 0
 12883  00327C  0E00               	movlw	0
 12884  00327E  0100               	movlb	0	; () banked
 12885  003280  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 12886  003282  0E00               	movlw	0
 12887  003284  0100               	movlb	0	; () banked
 12888  003286  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12889  003288  0E80               	movlw	128
 12890  00328A  0100               	movlb	0	; () banked
 12891  00328C  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12892                           
 12893                           ; BSR set to: 0
 12894  00328E  0E00               	movlw	0
 12895  003290  0100               	movlb	0	; () banked
 12896  003292  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 12897  003294  0E00               	movlw	0
 12898  003296  0100               	movlb	0	; () banked
 12899  003298  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12900  00329A  0E80               	movlw	128
 12901  00329C  0100               	movlb	0	; () banked
 12902  00329E  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12903  0032A0  0100               	movlb	0	; () banked
 12904  0032A2  5163               	movf	___ftge@ff2& (0+255),w,b
 12905  0032A4  0100               	movlb	0	; () banked
 12906  0032A6  5D60               	subwf	___ftge@ff1& (0+255),w,b
 12907  0032A8  0100               	movlb	0	; () banked
 12908  0032AA  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 12909  0032AC  0100               	movlb	0	; () banked
 12910  0032AE  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12911  0032B0  0100               	movlb	0	; () banked
 12912  0032B2  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 12913  0032B4  0100               	movlb	0	; () banked
 12914  0032B6  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12915  0032B8  B0D8               	btfsc	status,0,c
 12916  0032BA  D002               	goto	l5142
 12917                           
 12918                           ; BSR set to: 0
 12919  0032BC  90D8               	bcf	status,0,c
 12920  0032BE  0012               	return	
 12921  0032C0                     l5142:
 12922                           
 12923                           ; BSR set to: 0
 12924  0032C0  80D8               	bsf	status,0,c
 12925                           
 12926                           ; BSR set to: 0
 12927  0032C2  0012               	return	
 12928  0032C4                     __end_of___ftge:
 12929                           	opt stack 0
 12930                           tblptru	equ	0xFF8
 12931                           tblptrh	equ	0xFF7
 12932                           tblptrl	equ	0xFF6
 12933                           tablat	equ	0xFF5
 12934                           prodh	equ	0xFF4
 12935                           prodl	equ	0xFF3
 12936                           intcon	equ	0xFF2
 12937                           indf0	equ	0xFEF
 12938                           postinc0	equ	0xFEE
 12939                           fsr0h	equ	0xFEA
 12940                           fsr0l	equ	0xFE9
 12941                           wreg	equ	0xFE8
 12942                           indf1	equ	0xFE7
 12943                           postdec1	equ	0xFE5
 12944                           fsr1h	equ	0xFE2
 12945                           fsr1l	equ	0xFE1
 12946                           indf2	equ	0xFDF
 12947                           postinc2	equ	0xFDE
 12948                           postdec2	equ	0xFDD
 12949                           fsr2h	equ	0xFDA
 12950                           fsr2l	equ	0xFD9
 12951                           status	equ	0xFD8
 12952                           
 12953 ;; *************** function _memset *****************
 12954 ;; Defined at:
 12955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;  p1              2    0[BANK0 ] PTR void 
 12958 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12959 ;;  c               2    2[BANK0 ] int 
 12960 ;;  n               2    4[BANK0 ] unsigned int 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12963 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  2    0[BANK0 ] PTR void 
 12966 ;; Registers used:
 12967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12973 ;;      Params:         0       6       0       0       0       0       0
 12974 ;;      Locals:         0       2       0       0       0       0       0
 12975 ;;      Temps:          0       0       0       0       0       0       0
 12976 ;;      Totals:         0       8       0       0       0       0       0
 12977 ;;Total ram usage:        8 bytes
 12978 ;; Hardware stack levels used:    1
 12979 ;; Hardware stack levels required when called:    2
 12980 ;; This function calls:
 12981 ;;		Nothing
 12982 ;; This function is called by:
 12983 ;;		_util_beacon_transmission
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	text50
 12988  003C4A                     __ptext50:
 12989                           	opt stack 0
 12990  003C4A                     _memset:
 12991                           	opt stack 26
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;incstack = 0
 12995  003C4A  C060  F066         	movff	memset@p1,memset@p
 12996  003C4E  C061  F067         	movff	memset@p1+1,memset@p+1
 12997  003C52  D009               	goto	l5292
 12998  003C54                     l5288:
 12999  003C54  C066  FFD9         	movff	memset@p,fsr2l
 13000  003C58  C067  FFDA         	movff	memset@p+1,fsr2h
 13001  003C5C  C062  FFDF         	movff	memset@c,indf2
 13002  003C60  0100               	movlb	0	; () banked
 13003  003C62  4B66               	infsnz	memset@p& (0+255),f,b
 13004  003C64  2B67               	incf	(memset@p+1)& (0+255),f,b
 13005  003C66                     l5292:
 13006  003C66  0100               	movlb	0	; () banked
 13007  003C68  0764               	decf	memset@n& (0+255),f,b
 13008  003C6A  A0D8               	btfss	status,0,c
 13009  003C6C  0765               	decf	(memset@n+1)& (0+255),f,b
 13010  003C6E  0100               	movlb	0	; () banked
 13011  003C70  2964               	incf	memset@n& (0+255),w,b
 13012  003C72  E1F0               	bnz	l5288
 13013  003C74  0100               	movlb	0	; () banked
 13014  003C76  2965               	incf	(memset@n+1)& (0+255),w,b
 13015  003C78  B4D8               	btfsc	status,2,c
 13016  003C7A  0012               	return	
 13017  003C7C  D7EB               	goto	l5288
 13018  003C7E                     __end_of_memset:
 13019                           	opt stack 0
 13020                           tblptru	equ	0xFF8
 13021                           tblptrh	equ	0xFF7
 13022                           tblptrl	equ	0xFF6
 13023                           tablat	equ	0xFF5
 13024                           prodh	equ	0xFF4
 13025                           prodl	equ	0xFF3
 13026                           intcon	equ	0xFF2
 13027                           indf0	equ	0xFEF
 13028                           postinc0	equ	0xFEE
 13029                           fsr0h	equ	0xFEA
 13030                           fsr0l	equ	0xFE9
 13031                           wreg	equ	0xFE8
 13032                           indf1	equ	0xFE7
 13033                           postdec1	equ	0xFE5
 13034                           fsr1h	equ	0xFE2
 13035                           fsr1l	equ	0xFE1
 13036                           indf2	equ	0xFDF
 13037                           postinc2	equ	0xFDE
 13038                           postdec2	equ	0xFDD
 13039                           fsr2h	equ	0xFDA
 13040                           fsr2l	equ	0xFD9
 13041                           status	equ	0xFD8
 13042                           
 13043 ;; *************** function _init_initialize *****************
 13044 ;; Defined at:
 13045 ;;		line 18 in file "easat2_init_initialize.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;		None
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;		None
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      void 
 13052 ;; Registers used:
 13053 ;;		wreg, status,2, status,0, cstack
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13059 ;;      Params:         0       0       0       0       0       0       0
 13060 ;;      Locals:         0       0       0       0       0       0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0
 13062 ;;      Totals:         0       0       0       0       0       0       0
 13063 ;;Total ram usage:        0 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; Hardware stack levels required when called:    3
 13066 ;; This function calls:
 13067 ;;		_init_io_initialize
 13068 ;;		_init_timer1_initialize
 13069 ;;		_init_timer2_initialize
 13070 ;;		_init_watchdogs_initialize
 13071 ;;		_util_pwm_initialize
 13072 ;; This function is called by:
 13073 ;;		_main
 13074 ;; This function uses a non-reentrant model
 13075 ;;
 13076                           
 13077                           	psect	text51
 13078  003DD4                     __ptext51:
 13079                           	opt stack 0
 13080  003DD4                     _init_initialize:
 13081                           	opt stack 27
 13082                           
 13083                           ;easat2_init_initialize.c: 21: init_watchdogs_initialize();
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;incstack = 0
 13087  003DD4  EC9B  F01E         	call	_init_watchdogs_initialize	;wreg free
 13088                           
 13089                           ;easat2_init_initialize.c: 24: init_io_initialize();
 13090  003DD8  EC7E  F01A         	call	_init_io_initialize	;wreg free
 13091                           
 13092                           ;easat2_init_initialize.c: 27: init_timer1_initialize();
 13093  003DDC  ECAE  F01E         	call	_init_timer1_initialize	;wreg free
 13094                           
 13095                           ;easat2_init_initialize.c: 28: init_timer2_initialize();
 13096  003DE0  ECDD  F01E         	call	_init_timer2_initialize	;wreg free
 13097                           
 13098                           ;easat2_init_initialize.c: 31: util_pwm_initialize();
 13099  003DE4  EC3F  F01E         	call	_util_pwm_initialize	;wreg free
 13100  003DE8  0012               	return		;funcret
 13101  003DEA                     __end_of_init_initialize:
 13102                           	opt stack 0
 13103                           tblptru	equ	0xFF8
 13104                           tblptrh	equ	0xFF7
 13105                           tblptrl	equ	0xFF6
 13106                           tablat	equ	0xFF5
 13107                           prodh	equ	0xFF4
 13108                           prodl	equ	0xFF3
 13109                           intcon	equ	0xFF2
 13110                           indf0	equ	0xFEF
 13111                           postinc0	equ	0xFEE
 13112                           fsr0h	equ	0xFEA
 13113                           fsr0l	equ	0xFE9
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           postdec1	equ	0xFE5
 13117                           fsr1h	equ	0xFE2
 13118                           fsr1l	equ	0xFE1
 13119                           indf2	equ	0xFDF
 13120                           postinc2	equ	0xFDE
 13121                           postdec2	equ	0xFDD
 13122                           fsr2h	equ	0xFDA
 13123                           fsr2l	equ	0xFD9
 13124                           status	equ	0xFD8
 13125                           
 13126 ;; *************** function _util_pwm_initialize *****************
 13127 ;; Defined at:
 13128 ;;		line 24 in file "easat2_util_pwm.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;		None
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13142 ;;      Params:         0       0       0       0       0       0       0
 13143 ;;      Locals:         0       0       0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0
 13145 ;;      Totals:         0       0       0       0       0       0       0
 13146 ;;Total ram usage:        0 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:    2
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_init_initialize
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           	psect	text52
 13157  003C7E                     __ptext52:
 13158                           	opt stack 0
 13159  003C7E                     _util_pwm_initialize:
 13160                           	opt stack 27
 13161                           
 13162                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 13163                           
 13164                           ;incstack = 0
 13165  003C7E  8495               	bsf	3989,2,c	;volatile
 13166                           
 13167                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 13168  003C80  8695               	bsf	3989,3,c	;volatile
 13169                           
 13170                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 13171  003C82  0EE7               	movlw	-25
 13172  003C84  010F               	movlb	15	; () banked
 13173  003C86  1749               	andwf	73,f,b	;volatile
 13174                           
 13175                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 13176  003C88  0E7C               	movlw	124
 13177  003C8A  6EBB               	movwf	4027,c	;volatile
 13178                           
 13179                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 13180  003C8C  0E3F               	movlw	-193
 13181  003C8E  1666               	andwf	3942,f,c	;volatile
 13182                           
 13183                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 13184  003C90  5066               	movf	3942,w,c	;volatile
 13185  003C92  0BF0               	andlw	-16
 13186  003C94  090C               	iorlw	12
 13187  003C96  6E66               	movwf	3942,c	;volatile
 13188                           
 13189                           ; BSR set to: 15
 13190                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 13191  003C98  9063               	bcf	3939,0,c	;volatile
 13192                           
 13193                           ; BSR set to: 15
 13194                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 13195  003C9A  8263               	bsf	3939,1,c	;volatile
 13196                           
 13197                           ; BSR set to: 15
 13198                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 13199  003C9C  8463               	bsf	3939,2,c	;volatile
 13200                           
 13201                           ; BSR set to: 15
 13202                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 13203  003C9E  9663               	bcf	3939,3,c	;volatile
 13204                           
 13205                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 13206  003CA0  0E3E               	movlw	62
 13207  003CA2  6E67               	movwf	3943,c	;volatile
 13208                           
 13209                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 13210  003CA4  5066               	movf	3942,w,c	;volatile
 13211  003CA6  0BCF               	andlw	-49
 13212  003CA8  0920               	iorlw	32
 13213  003CAA  6E66               	movwf	3942,c	;volatile
 13214                           
 13215                           ; BSR set to: 15
 13216                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 13217  003CAC  94BA               	bcf	4026,2,c	;volatile
 13218                           
 13219                           ; BSR set to: 15
 13220                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 13221  003CAE  929E               	bcf	3998,1,c	;volatile
 13222                           
 13223                           ; BSR set to: 15
 13224  003CB0  0012               	return		;funcret
 13225  003CB2                     __end_of_util_pwm_initialize:
 13226                           	opt stack 0
 13227                           tblptru	equ	0xFF8
 13228                           tblptrh	equ	0xFF7
 13229                           tblptrl	equ	0xFF6
 13230                           tablat	equ	0xFF5
 13231                           prodh	equ	0xFF4
 13232                           prodl	equ	0xFF3
 13233                           intcon	equ	0xFF2
 13234                           indf0	equ	0xFEF
 13235                           postinc0	equ	0xFEE
 13236                           fsr0h	equ	0xFEA
 13237                           fsr0l	equ	0xFE9
 13238                           wreg	equ	0xFE8
 13239                           indf1	equ	0xFE7
 13240                           postdec1	equ	0xFE5
 13241                           fsr1h	equ	0xFE2
 13242                           fsr1l	equ	0xFE1
 13243                           indf2	equ	0xFDF
 13244                           postinc2	equ	0xFDE
 13245                           postdec2	equ	0xFDD
 13246                           fsr2h	equ	0xFDA
 13247                           fsr2l	equ	0xFD9
 13248                           status	equ	0xFD8
 13249                           
 13250 ;; *************** function _init_watchdogs_initialize *****************
 13251 ;; Defined at:
 13252 ;;		line 36 in file "easat2_init_initialize.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;		None
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      void 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13266 ;;      Params:         0       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0
 13268 ;;      Temps:          0       1       0       0       0       0       0
 13269 ;;      Totals:         0       1       0       0       0       0       0
 13270 ;;Total ram usage:        1 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    2
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_init_initialize
 13277 ;;		_main_loop
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281                           	psect	text53
 13282  003D36                     __ptext53:
 13283                           	opt stack 0
 13284  003D36                     _init_watchdogs_initialize:
 13285                           	opt stack 27
 13286                           
 13287                           ;easat2_init_initialize.c: 39: (PORTDbits.RD5) = !(PORTDbits.RD5);
 13288                           
 13289                           ; BSR set to: 15
 13290                           ;incstack = 0
 13291  003D36  BA83               	btfsc	3971,5,c	;volatile
 13292  003D38  D004               	goto	u6020
 13293  003D3A  0100               	movlb	0	; () banked
 13294  003D3C  6B60               	clrf	??_init_watchdogs_initialize& (0+255),b
 13295  003D3E  2B60               	incf	??_init_watchdogs_initialize& (0+255),f,b
 13296  003D40  D002               	goto	u6038
 13297  003D42                     u6020:
 13298  003D42  0100               	movlb	0	; () banked
 13299  003D44  6B60               	clrf	??_init_watchdogs_initialize& (0+255),b
 13300  003D46                     u6038:
 13301  003D46  0100               	movlb	0	; () banked
 13302  003D48  3B60               	swapf	??_init_watchdogs_initialize& (0+255),f,b
 13303  003D4A  4760               	rlncf	??_init_watchdogs_initialize& (0+255),f,b
 13304  003D4C  5083               	movf	3971,w,c	;volatile
 13305  003D4E  0100               	movlb	0	; () banked
 13306  003D50  1960               	xorwf	??_init_watchdogs_initialize& (0+255),w,b
 13307  003D52  0BDF               	andlw	-33
 13308  003D54  1960               	xorwf	??_init_watchdogs_initialize& (0+255),w,b
 13309  003D56  6E83               	movwf	3971,c	;volatile
 13310  003D58  0004               	clrwdt		;# 
 13311  003D5A  0012               	return		;funcret
 13312  003D5C                     __end_of_init_watchdogs_initialize:
 13313                           	opt stack 0
 13314                           tblptru	equ	0xFF8
 13315                           tblptrh	equ	0xFF7
 13316                           tblptrl	equ	0xFF6
 13317                           tablat	equ	0xFF5
 13318                           prodh	equ	0xFF4
 13319                           prodl	equ	0xFF3
 13320                           intcon	equ	0xFF2
 13321                           indf0	equ	0xFEF
 13322                           postinc0	equ	0xFEE
 13323                           fsr0h	equ	0xFEA
 13324                           fsr0l	equ	0xFE9
 13325                           wreg	equ	0xFE8
 13326                           indf1	equ	0xFE7
 13327                           postdec1	equ	0xFE5
 13328                           fsr1h	equ	0xFE2
 13329                           fsr1l	equ	0xFE1
 13330                           indf2	equ	0xFDF
 13331                           postinc2	equ	0xFDE
 13332                           postdec2	equ	0xFDD
 13333                           fsr2h	equ	0xFDA
 13334                           fsr2l	equ	0xFD9
 13335                           status	equ	0xFD8
 13336                           
 13337 ;; *************** function _init_timer2_initialize *****************
 13338 ;; Defined at:
 13339 ;;		line 70 in file "easat2_init_timer.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;		None
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, status,2
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13353 ;;      Params:         0       0       0       0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0
 13356 ;;      Totals:         0       0       0       0       0       0       0
 13357 ;;Total ram usage:        0 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    2
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_init_initialize
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           	psect	text54
 13368  003DBA                     __ptext54:
 13369                           	opt stack 0
 13370  003DBA                     _init_timer2_initialize:
 13371                           	opt stack 27
 13372                           
 13373                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 13374                           
 13375                           ;incstack = 0
 13376  003DBA  94BA               	bcf	4026,2,c	;volatile
 13377                           
 13378                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 13379  003DBC  80BA               	bsf	4026,0,c	;volatile
 13380                           
 13381                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 13382  003DBE  92BA               	bcf	4026,1,c	;volatile
 13383                           
 13384                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 13385  003DC0  96BA               	bcf	4026,3,c	;volatile
 13386  003DC2  98BA               	bcf	4026,4,c	;volatile
 13387  003DC4  9ABA               	bcf	4026,5,c	;volatile
 13388  003DC6  9CBA               	bcf	4026,6,c	;volatile
 13389                           
 13390                           ;easat2_init_timer.c: 93: TMR2 = 0;
 13391  003DC8  0E00               	movlw	0
 13392  003DCA  6EBC               	movwf	4028,c	;volatile
 13393                           
 13394                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 13395  003DCC  829D               	bsf	3997,1,c	;volatile
 13396                           
 13397                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 13398  003DCE  929F               	bcf	3999,1,c	;volatile
 13399                           
 13400                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 13401  003DD0  929E               	bcf	3998,1,c	;volatile
 13402  003DD2  0012               	return		;funcret
 13403  003DD4                     __end_of_init_timer2_initialize:
 13404                           	opt stack 0
 13405                           tblptru	equ	0xFF8
 13406                           tblptrh	equ	0xFF7
 13407                           tblptrl	equ	0xFF6
 13408                           tablat	equ	0xFF5
 13409                           prodh	equ	0xFF4
 13410                           prodl	equ	0xFF3
 13411                           intcon	equ	0xFF2
 13412                           indf0	equ	0xFEF
 13413                           postinc0	equ	0xFEE
 13414                           fsr0h	equ	0xFEA
 13415                           fsr0l	equ	0xFE9
 13416                           wreg	equ	0xFE8
 13417                           indf1	equ	0xFE7
 13418                           postdec1	equ	0xFE5
 13419                           fsr1h	equ	0xFE2
 13420                           fsr1l	equ	0xFE1
 13421                           indf2	equ	0xFDF
 13422                           postinc2	equ	0xFDE
 13423                           postdec2	equ	0xFDD
 13424                           fsr2h	equ	0xFDA
 13425                           fsr2l	equ	0xFD9
 13426                           status	equ	0xFD8
 13427                           
 13428 ;; *************** function _init_timer1_initialize *****************
 13429 ;; Defined at:
 13430 ;;		line 17 in file "easat2_init_timer.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13444 ;;      Params:         0       0       0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:    2
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_init_initialize
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text55
 13459  003D5C                     __ptext55:
 13460                           	opt stack 0
 13461  003D5C                     _init_timer1_initialize:
 13462                           	opt stack 27
 13463                           
 13464                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 13465                           
 13466                           ;incstack = 0
 13467  003D5C  8ED0               	bsf	4048,7,c	;volatile
 13468                           
 13469                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 13470  003D5E  90CD               	bcf	4045,0,c	;volatile
 13471                           
 13472                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 13473  003D60  9CCD               	bcf	4045,6,c	;volatile
 13474                           
 13475                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 13476  003D62  9ECD               	bcf	4045,7,c	;volatile
 13477                           
 13478                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 13479  003D64  9ACD               	bcf	4045,5,c	;volatile
 13480                           
 13481                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 13482  003D66  98CD               	bcf	4045,4,c	;volatile
 13483                           
 13484                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 13485  003D68  96CD               	bcf	4045,3,c	;volatile
 13486                           
 13487                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 13488  003D6A  82CD               	bsf	4045,1,c	;volatile
 13489                           
 13490                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 13491  003D6C  0EEC               	movlw	236
 13492  003D6E  6ECF               	movwf	4047,c	;volatile
 13493                           
 13494                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 13495  003D70  0E77               	movlw	119
 13496  003D72  6ECE               	movwf	4046,c	;volatile
 13497                           
 13498                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 13499  003D74  809D               	bsf	3997,0,c	;volatile
 13500                           
 13501                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 13502  003D76  809F               	bsf	3999,0,c	;volatile
 13503                           
 13504                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 13505  003D78  909E               	bcf	3998,0,c	;volatile
 13506                           
 13507                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 13508  003D7A  80CD               	bsf	4045,0,c	;volatile
 13509                           
 13510                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 13511  003D7C  9CF2               	bcf	intcon,6,c	;volatile
 13512                           
 13513                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 13514  003D7E  8EF2               	bsf	intcon,7,c	;volatile
 13515  003D80  0012               	return		;funcret
 13516  003D82                     __end_of_init_timer1_initialize:
 13517                           	opt stack 0
 13518                           tblptru	equ	0xFF8
 13519                           tblptrh	equ	0xFF7
 13520                           tblptrl	equ	0xFF6
 13521                           tablat	equ	0xFF5
 13522                           prodh	equ	0xFF4
 13523                           prodl	equ	0xFF3
 13524                           intcon	equ	0xFF2
 13525                           indf0	equ	0xFEF
 13526                           postinc0	equ	0xFEE
 13527                           fsr0h	equ	0xFEA
 13528                           fsr0l	equ	0xFE9
 13529                           wreg	equ	0xFE8
 13530                           indf1	equ	0xFE7
 13531                           postdec1	equ	0xFE5
 13532                           fsr1h	equ	0xFE2
 13533                           fsr1l	equ	0xFE1
 13534                           indf2	equ	0xFDF
 13535                           postinc2	equ	0xFDE
 13536                           postdec2	equ	0xFDD
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function _init_io_initialize *****************
 13542 ;; Defined at:
 13543 ;;		line 49 in file "easat2_init_initialize.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;		None
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;		None
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1    wreg      void 
 13550 ;; Registers used:
 13551 ;;		wreg, status,2
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13557 ;;      Params:         0       0       0       0       0       0       0
 13558 ;;      Locals:         0       0       0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0
 13560 ;;      Totals:         0       0       0       0       0       0       0
 13561 ;;Total ram usage:        0 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    2
 13564 ;; This function calls:
 13565 ;;		Nothing
 13566 ;; This function is called by:
 13567 ;;		_init_initialize
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           	psect	text56
 13572  0034FC                     __ptext56:
 13573                           	opt stack 0
 13574  0034FC                     _init_io_initialize:
 13575                           	opt stack 27
 13576                           
 13577                           ;easat2_init_initialize.c: 58: VREFCON0bits.FVREN = 1;
 13578                           
 13579                           ;incstack = 0
 13580  0034FC  010F               	movlb	15	; () banked
 13581  0034FE  8F42               	bsf	66,7,b	;volatile
 13582                           
 13583                           ;easat2_init_initialize.c: 59: VREFCON0bits.FVRS0 = 0;
 13584  003500  010F               	movlb	15	; () banked
 13585  003502  9942               	bcf	66,4,b	;volatile
 13586                           
 13587                           ;easat2_init_initialize.c: 60: VREFCON0bits.FVRS1 = 1;
 13588  003504  010F               	movlb	15	; () banked
 13589  003506  8B42               	bsf	66,5,b	;volatile
 13590                           
 13591                           ;easat2_init_initialize.c: 62: VREFCON0bits.FVRST = 1;
 13592  003508  010F               	movlb	15	; () banked
 13593  00350A  8D42               	bsf	66,6,b	;volatile
 13594                           
 13595                           ; BSR set to: 15
 13596                           ;easat2_init_initialize.c: 67: ADCON1 = 0x08;
 13597  00350C  0E08               	movlw	8
 13598  00350E  6EC1               	movwf	4033,c	;volatile
 13599                           
 13600                           ;easat2_init_initialize.c: 68: ADCON2 = 0xAF;
 13601  003510  0EAF               	movlw	175
 13602  003512  6EC0               	movwf	4032,c	;volatile
 13603                           
 13604                           ; BSR set to: 15
 13605                           ;easat2_init_initialize.c: 72: TRISAbits.TRISA0 = 1;
 13606  003514  8092               	bsf	3986,0,c	;volatile
 13607                           
 13608                           ; BSR set to: 15
 13609                           ;easat2_init_initialize.c: 73: TRISAbits.TRISA1 = 1;
 13610  003516  8292               	bsf	3986,1,c	;volatile
 13611                           
 13612                           ; BSR set to: 15
 13613                           ;easat2_init_initialize.c: 74: TRISAbits.TRISA2 = 0;
 13614  003518  9492               	bcf	3986,2,c	;volatile
 13615                           
 13616                           ; BSR set to: 15
 13617                           ;easat2_init_initialize.c: 75: TRISAbits.TRISA3 = 1;
 13618  00351A  8692               	bsf	3986,3,c	;volatile
 13619                           
 13620                           ; BSR set to: 15
 13621                           ;easat2_init_initialize.c: 76: TRISAbits.TRISA4 = 1;
 13622  00351C  8892               	bsf	3986,4,c	;volatile
 13623                           
 13624                           ; BSR set to: 15
 13625                           ;easat2_init_initialize.c: 77: TRISAbits.TRISA5 = 1;
 13626  00351E  8A92               	bsf	3986,5,c	;volatile
 13627                           
 13628                           ; BSR set to: 15
 13629                           ;easat2_init_initialize.c: 84: ANSELAbits.ANSA0 = 1;
 13630  003520  010F               	movlb	15	; () banked
 13631  003522  8138               	bsf	56,0,b	;volatile
 13632                           
 13633                           ; BSR set to: 15
 13634                           ;easat2_init_initialize.c: 85: ANSELAbits.ANSA1 = 1;
 13635  003524  010F               	movlb	15	; () banked
 13636  003526  8338               	bsf	56,1,b	;volatile
 13637                           
 13638                           ; BSR set to: 15
 13639                           ;easat2_init_initialize.c: 86: ANSELAbits.ANSA2 = 1;
 13640  003528  010F               	movlb	15	; () banked
 13641  00352A  8538               	bsf	56,2,b	;volatile
 13642                           
 13643                           ; BSR set to: 15
 13644                           ;easat2_init_initialize.c: 87: ANSELAbits.ANSA3 = 0;
 13645  00352C  010F               	movlb	15	; () banked
 13646  00352E  9738               	bcf	56,3,b	;volatile
 13647                           
 13648                           ; BSR set to: 15
 13649                           ;easat2_init_initialize.c: 89: ANSELAbits.ANSA5 = 1;
 13650  003530  010F               	movlb	15	; () banked
 13651  003532  8B38               	bsf	56,5,b	;volatile
 13652                           
 13653                           ; BSR set to: 15
 13654                           ;easat2_init_initialize.c: 93: LATAbits.LATA0 = 0;
 13655  003534  9089               	bcf	3977,0,c	;volatile
 13656                           
 13657                           ; BSR set to: 15
 13658                           ;easat2_init_initialize.c: 94: LATAbits.LATA1 = 0;
 13659  003536  9289               	bcf	3977,1,c	;volatile
 13660                           
 13661                           ; BSR set to: 15
 13662                           ;easat2_init_initialize.c: 95: LATAbits.LATA2 = 0;
 13663  003538  9489               	bcf	3977,2,c	;volatile
 13664                           
 13665                           ; BSR set to: 15
 13666                           ;easat2_init_initialize.c: 96: LATAbits.LATA3 = 0;
 13667  00353A  9689               	bcf	3977,3,c	;volatile
 13668                           
 13669                           ; BSR set to: 15
 13670                           ;easat2_init_initialize.c: 97: LATAbits.LATA4 = 0;
 13671  00353C  9889               	bcf	3977,4,c	;volatile
 13672                           
 13673                           ; BSR set to: 15
 13674                           ;easat2_init_initialize.c: 98: LATAbits.LATA5 = 0;
 13675  00353E  9A89               	bcf	3977,5,c	;volatile
 13676                           
 13677                           ;easat2_init_initialize.c: 106: WPUB = 0b00000000;
 13678  003540  0E00               	movlw	0
 13679  003542  6E61               	movwf	3937,c	;volatile
 13680                           
 13681                           ; BSR set to: 15
 13682                           ;easat2_init_initialize.c: 107: RBPU = 0b11111111;
 13683  003544  8EF1               	bsf	intcon2,7,c	;volatile
 13684                           
 13685                           ; BSR set to: 15
 13686                           ;easat2_init_initialize.c: 111: TRISBbits.TRISB0 = 1;
 13687  003546  8093               	bsf	3987,0,c	;volatile
 13688                           
 13689                           ; BSR set to: 15
 13690                           ;easat2_init_initialize.c: 112: TRISBbits.TRISB1 = 0;
 13691  003548  9293               	bcf	3987,1,c	;volatile
 13692                           
 13693                           ; BSR set to: 15
 13694                           ;easat2_init_initialize.c: 113: TRISBbits.TRISB2 = 0;
 13695  00354A  9493               	bcf	3987,2,c	;volatile
 13696                           
 13697                           ; BSR set to: 15
 13698                           ;easat2_init_initialize.c: 114: TRISBbits.TRISB3 = 0;
 13699  00354C  9693               	bcf	3987,3,c	;volatile
 13700                           
 13701                           ; BSR set to: 15
 13702                           ;easat2_init_initialize.c: 115: TRISBbits.TRISB4 = 0;
 13703  00354E  9893               	bcf	3987,4,c	;volatile
 13704                           
 13705                           ; BSR set to: 15
 13706                           ;easat2_init_initialize.c: 116: TRISBbits.TRISB5 = 0;
 13707  003550  9A93               	bcf	3987,5,c	;volatile
 13708                           
 13709                           ; BSR set to: 15
 13710                           ;easat2_init_initialize.c: 117: TRISBbits.TRISB6 = 0;
 13711  003552  9C93               	bcf	3987,6,c	;volatile
 13712                           
 13713                           ; BSR set to: 15
 13714                           ;easat2_init_initialize.c: 118: TRISBbits.TRISB7 = 0;
 13715  003554  9E93               	bcf	3987,7,c	;volatile
 13716                           
 13717                           ; BSR set to: 15
 13718                           ;easat2_init_initialize.c: 122: ANSELBbits.ANSB0 = 1;
 13719  003556  010F               	movlb	15	; () banked
 13720  003558  8139               	bsf	57,0,b	;volatile
 13721                           
 13722                           ; BSR set to: 15
 13723                           ;easat2_init_initialize.c: 123: ANSELBbits.ANSB1 = 0;
 13724  00355A  010F               	movlb	15	; () banked
 13725  00355C  9339               	bcf	57,1,b	;volatile
 13726                           
 13727                           ; BSR set to: 15
 13728                           ;easat2_init_initialize.c: 124: ANSELBbits.ANSB2 = 0;
 13729  00355E  010F               	movlb	15	; () banked
 13730  003560  9539               	bcf	57,2,b	;volatile
 13731                           
 13732                           ; BSR set to: 15
 13733                           ;easat2_init_initialize.c: 125: ANSELBbits.ANSB3 = 0;
 13734  003562  010F               	movlb	15	; () banked
 13735  003564  9739               	bcf	57,3,b	;volatile
 13736                           
 13737                           ; BSR set to: 15
 13738                           ;easat2_init_initialize.c: 127: ANSELBbits.ANSB5 = 0;
 13739  003566  010F               	movlb	15	; () banked
 13740  003568  9B39               	bcf	57,5,b	;volatile
 13741                           
 13742                           ; BSR set to: 15
 13743                           ;easat2_init_initialize.c: 131: LATBbits.LATB0 = 0;
 13744  00356A  908A               	bcf	3978,0,c	;volatile
 13745                           
 13746                           ; BSR set to: 15
 13747                           ;easat2_init_initialize.c: 132: LATBbits.LATB1 = 0;
 13748  00356C  928A               	bcf	3978,1,c	;volatile
 13749                           
 13750                           ; BSR set to: 15
 13751                           ;easat2_init_initialize.c: 133: LATBbits.LATB2 = 0;
 13752  00356E  948A               	bcf	3978,2,c	;volatile
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;easat2_init_initialize.c: 134: LATBbits.LATB3 = 0;
 13756  003570  968A               	bcf	3978,3,c	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;easat2_init_initialize.c: 135: LATBbits.LATB4 = 0;
 13760  003572  988A               	bcf	3978,4,c	;volatile
 13761                           
 13762                           ; BSR set to: 15
 13763                           ;easat2_init_initialize.c: 136: LATBbits.LATB5 = 0;
 13764  003574  9A8A               	bcf	3978,5,c	;volatile
 13765                           
 13766                           ; BSR set to: 15
 13767                           ;easat2_init_initialize.c: 140: TRISDbits.TRISD0 = 0;
 13768  003576  9095               	bcf	3989,0,c	;volatile
 13769                           
 13770                           ; BSR set to: 15
 13771                           ;easat2_init_initialize.c: 141: TRISDbits.TRISD1 = 0;
 13772  003578  9295               	bcf	3989,1,c	;volatile
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;easat2_init_initialize.c: 142: TRISDbits.TRISD2 = 0;
 13776  00357A  9495               	bcf	3989,2,c	;volatile
 13777                           
 13778                           ; BSR set to: 15
 13779                           ;easat2_init_initialize.c: 143: TRISDbits.TRISD3 = 0;
 13780  00357C  9695               	bcf	3989,3,c	;volatile
 13781                           
 13782                           ; BSR set to: 15
 13783                           ;easat2_init_initialize.c: 144: TRISDbits.TRISD4 = 0;
 13784  00357E  9895               	bcf	3989,4,c	;volatile
 13785                           
 13786                           ; BSR set to: 15
 13787                           ;easat2_init_initialize.c: 145: TRISDbits.TRISD5 = 0;
 13788  003580  9A95               	bcf	3989,5,c	;volatile
 13789                           
 13790                           ; BSR set to: 15
 13791                           ;easat2_init_initialize.c: 146: TRISDbits.TRISD6 = 0;
 13792  003582  9C95               	bcf	3989,6,c	;volatile
 13793                           
 13794                           ; BSR set to: 15
 13795                           ;easat2_init_initialize.c: 147: TRISDbits.TRISD7 = 0;
 13796  003584  9E95               	bcf	3989,7,c	;volatile
 13797                           
 13798                           ; BSR set to: 15
 13799                           ;easat2_init_initialize.c: 151: ANSELDbits.ANSD0 = 0;
 13800  003586  010F               	movlb	15	; () banked
 13801  003588  913B               	bcf	59,0,b	;volatile
 13802                           
 13803                           ; BSR set to: 15
 13804                           ;easat2_init_initialize.c: 152: ANSELDbits.ANSD1 = 0;
 13805  00358A  010F               	movlb	15	; () banked
 13806  00358C  933B               	bcf	59,1,b	;volatile
 13807                           
 13808                           ; BSR set to: 15
 13809                           ;easat2_init_initialize.c: 153: ANSELDbits.ANSD2 = 0;
 13810  00358E  010F               	movlb	15	; () banked
 13811  003590  953B               	bcf	59,2,b	;volatile
 13812                           
 13813                           ; BSR set to: 15
 13814                           ;easat2_init_initialize.c: 154: ANSELDbits.ANSD3 = 0;
 13815  003592  010F               	movlb	15	; () banked
 13816  003594  973B               	bcf	59,3,b	;volatile
 13817                           
 13818                           ; BSR set to: 15
 13819                           ;easat2_init_initialize.c: 155: ANSELDbits.ANSD4 = 0;
 13820  003596  010F               	movlb	15	; () banked
 13821  003598  993B               	bcf	59,4,b	;volatile
 13822                           
 13823                           ; BSR set to: 15
 13824                           ;easat2_init_initialize.c: 156: ANSELDbits.ANSD5 = 0;
 13825  00359A  010F               	movlb	15	; () banked
 13826  00359C  9B3B               	bcf	59,5,b	;volatile
 13827                           
 13828                           ; BSR set to: 15
 13829                           ;easat2_init_initialize.c: 157: ANSELDbits.ANSD6 = 0;
 13830  00359E  010F               	movlb	15	; () banked
 13831  0035A0  9D3B               	bcf	59,6,b	;volatile
 13832                           
 13833                           ; BSR set to: 15
 13834                           ;easat2_init_initialize.c: 158: ANSELDbits.ANSD7 = 0;
 13835  0035A2  010F               	movlb	15	; () banked
 13836  0035A4  9F3B               	bcf	59,7,b	;volatile
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;easat2_init_initialize.c: 162: LATDbits.LATD0 = 0;
 13840  0035A6  908C               	bcf	3980,0,c	;volatile
 13841                           
 13842                           ; BSR set to: 15
 13843                           ;easat2_init_initialize.c: 163: LATDbits.LATD1 = 0;
 13844  0035A8  928C               	bcf	3980,1,c	;volatile
 13845                           
 13846                           ; BSR set to: 15
 13847                           ;easat2_init_initialize.c: 164: LATDbits.LATD2 = 0;
 13848  0035AA  948C               	bcf	3980,2,c	;volatile
 13849                           
 13850                           ; BSR set to: 15
 13851                           ;easat2_init_initialize.c: 165: LATDbits.LATD3 = 0;
 13852  0035AC  968C               	bcf	3980,3,c	;volatile
 13853                           
 13854                           ; BSR set to: 15
 13855                           ;easat2_init_initialize.c: 166: LATDbits.LATD4 = 0;
 13856  0035AE  988C               	bcf	3980,4,c	;volatile
 13857                           
 13858                           ; BSR set to: 15
 13859                           ;easat2_init_initialize.c: 167: LATDbits.LATD5 = 0;
 13860  0035B0  9A8C               	bcf	3980,5,c	;volatile
 13861                           
 13862                           ; BSR set to: 15
 13863                           ;easat2_init_initialize.c: 168: LATDbits.LATD6 = 0;
 13864  0035B2  9C8C               	bcf	3980,6,c	;volatile
 13865                           
 13866                           ; BSR set to: 15
 13867                           ;easat2_init_initialize.c: 169: LATDbits.LATD7 = 0;
 13868  0035B4  9E8C               	bcf	3980,7,c	;volatile
 13869                           
 13870                           ; BSR set to: 15
 13871  0035B6  0012               	return		;funcret
 13872  0035B8                     __end_of_init_io_initialize:
 13873                           	opt stack 0
 13874                           tblptru	equ	0xFF8
 13875                           tblptrh	equ	0xFF7
 13876                           tblptrl	equ	0xFF6
 13877                           tablat	equ	0xFF5
 13878                           prodh	equ	0xFF4
 13879                           prodl	equ	0xFF3
 13880                           intcon	equ	0xFF2
 13881                           intcon2	equ	0xFF1
 13882                           indf0	equ	0xFEF
 13883                           postinc0	equ	0xFEE
 13884                           fsr0h	equ	0xFEA
 13885                           fsr0l	equ	0xFE9
 13886                           wreg	equ	0xFE8
 13887                           indf1	equ	0xFE7
 13888                           postdec1	equ	0xFE5
 13889                           fsr1h	equ	0xFE2
 13890                           fsr1l	equ	0xFE1
 13891                           indf2	equ	0xFDF
 13892                           postinc2	equ	0xFDE
 13893                           postdec2	equ	0xFDD
 13894                           fsr2h	equ	0xFDA
 13895                           fsr2l	equ	0xFD9
 13896                           status	equ	0xFD8
 13897                           
 13898 ;; *************** function _low_priority_int *****************
 13899 ;; Defined at:
 13900 ;;		line 183 in file "easat2_func_interrupts.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;		None
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      void 
 13907 ;; Registers used:
 13908 ;;		None
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13914 ;;      Params:         0       0       0       0       0       0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0
 13916 ;;      Temps:         17       0       0       0       0       0       0
 13917 ;;      Totals:        17       0       0       0       0       0       0
 13918 ;;Total ram usage:       17 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    1
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		Interrupt level 1
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           	psect	intcodelo
 13929  000018                     __pintcodelo:
 13930                           	opt stack 0
 13931  000018                     _low_priority_int:
 13932                           	opt stack 23
 13933                           
 13934                           ; BSR set to: 15
 13935                           ;incstack = 0
 13936  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13937  00001A  CFD8 F016          	movff	status,??_low_priority_int
 13938  00001E  CFE8 F017          	movff	wreg,??_low_priority_int+1
 13939  000022  CFE0 F018          	movff	bsr,??_low_priority_int+2
 13940  000026  CFFA F019          	movff	pclath,??_low_priority_int+3
 13941  00002A  CFFB F01A          	movff	pclatu,??_low_priority_int+4
 13942  00002E  CFE9 F01B          	movff	fsr0l,??_low_priority_int+5
 13943  000032  CFEA F01C          	movff	fsr0h,??_low_priority_int+6
 13944  000036  CFE1 F01D          	movff	fsr1l,??_low_priority_int+7
 13945  00003A  CFE2 F01E          	movff	fsr1h,??_low_priority_int+8
 13946  00003E  CFD9 F01F          	movff	fsr2l,??_low_priority_int+9
 13947  000042  CFDA F020          	movff	fsr2h,??_low_priority_int+10
 13948  000046  CFF3 F021          	movff	prodl,??_low_priority_int+11
 13949  00004A  CFF4 F022          	movff	prodh,??_low_priority_int+12
 13950  00004E  CFF6 F023          	movff	tblptrl,??_low_priority_int+13
 13951  000052  CFF7 F024          	movff	tblptrh,??_low_priority_int+14
 13952  000056  CFF8 F025          	movff	tblptru,??_low_priority_int+15
 13953  00005A  CFF5 F026          	movff	tablat,??_low_priority_int+16
 13954  00005E  C026  FFF5         	movff	??_low_priority_int+16,tablat
 13955  000062  C025  FFF8         	movff	??_low_priority_int+15,tblptru
 13956  000066  C024  FFF7         	movff	??_low_priority_int+14,tblptrh
 13957  00006A  C023  FFF6         	movff	??_low_priority_int+13,tblptrl
 13958  00006E  C022  FFF4         	movff	??_low_priority_int+12,prodh
 13959  000072  C021  FFF3         	movff	??_low_priority_int+11,prodl
 13960  000076  C020  FFDA         	movff	??_low_priority_int+10,fsr2h
 13961  00007A  C01F  FFD9         	movff	??_low_priority_int+9,fsr2l
 13962  00007E  C01E  FFE2         	movff	??_low_priority_int+8,fsr1h
 13963  000082  C01D  FFE1         	movff	??_low_priority_int+7,fsr1l
 13964  000086  C01C  FFEA         	movff	??_low_priority_int+6,fsr0h
 13965  00008A  C01B  FFE9         	movff	??_low_priority_int+5,fsr0l
 13966  00008E  C01A  FFFB         	movff	??_low_priority_int+4,pclatu
 13967  000092  C019  FFFA         	movff	??_low_priority_int+3,pclath
 13968  000096  C018  FFE0         	movff	??_low_priority_int+2,bsr
 13969  00009A  C017  FFE8         	movff	??_low_priority_int+1,wreg
 13970  00009E  C016  FFD8         	movff	??_low_priority_int,status
 13971  0000A2  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13972  0000A4  0010               	retfie	
 13973  0000A6                     __end_of_low_priority_int:
 13974                           	opt stack 0
 13975                           pclatu	equ	0xFFB
 13976                           pclath	equ	0xFFA
 13977                           tblptru	equ	0xFF8
 13978                           tblptrh	equ	0xFF7
 13979                           tblptrl	equ	0xFF6
 13980                           tablat	equ	0xFF5
 13981                           prodh	equ	0xFF4
 13982                           prodl	equ	0xFF3
 13983                           intcon	equ	0xFF2
 13984                           intcon2	equ	0xFF1
 13985                           indf0	equ	0xFEF
 13986                           postinc0	equ	0xFEE
 13987                           fsr0h	equ	0xFEA
 13988                           fsr0l	equ	0xFE9
 13989                           wreg	equ	0xFE8
 13990                           indf1	equ	0xFE7
 13991                           postdec1	equ	0xFE5
 13992                           fsr1h	equ	0xFE2
 13993                           fsr1l	equ	0xFE1
 13994                           bsr	equ	0xFE0
 13995                           indf2	equ	0xFDF
 13996                           postinc2	equ	0xFDE
 13997                           postdec2	equ	0xFDD
 13998                           fsr2h	equ	0xFDA
 13999                           fsr2l	equ	0xFD9
 14000                           status	equ	0xFD8
 14001                           
 14002 ;; *************** function _high_priority_int *****************
 14003 ;; Defined at:
 14004 ;;		line 19 in file "easat2_func_interrupts.c"
 14005 ;; Parameters:    Size  Location     Type
 14006 ;;		None
 14007 ;; Auto vars:     Size  Location     Type
 14008 ;;  sample          2   19[COMRAM] unsigned int 
 14009 ;; Return value:  Size  Location     Type
 14010 ;;                  1    wreg      void 
 14011 ;; Registers used:
 14012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14013 ;; Tracked objects:
 14014 ;;		On entry : 0/0
 14015 ;;		On exit  : 0/0
 14016 ;;		Unchanged: 0/0
 14017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14018 ;;      Params:         0       0       0       0       0       0       0
 14019 ;;      Locals:         2       0       0       0       0       0       0
 14020 ;;      Temps:         19       0       0       0       0       0       0
 14021 ;;      Totals:        21       0       0       0       0       0       0
 14022 ;;Total ram usage:       21 bytes
 14023 ;; Hardware stack levels used:    1
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		Interrupt level 2
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           	psect	intcode
 14032  000008                     __pintcode:
 14033                           	opt stack 0
 14034  000008                     _high_priority_int:
 14035                           	opt stack 23
 14036                           
 14037                           ;incstack = 0
 14038  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14039  00000A  EFD4  F010         	goto	int_func
 14040                           pclatu	equ	0xFFB
 14041                           pclath	equ	0xFFA
 14042                           tblptru	equ	0xFF8
 14043                           tblptrh	equ	0xFF7
 14044                           tblptrl	equ	0xFF6
 14045                           tablat	equ	0xFF5
 14046                           prodh	equ	0xFF4
 14047                           prodl	equ	0xFF3
 14048                           intcon	equ	0xFF2
 14049                           intcon2	equ	0xFF1
 14050                           indf0	equ	0xFEF
 14051                           postinc0	equ	0xFEE
 14052                           fsr0h	equ	0xFEA
 14053                           fsr0l	equ	0xFE9
 14054                           wreg	equ	0xFE8
 14055                           indf1	equ	0xFE7
 14056                           postdec1	equ	0xFE5
 14057                           fsr1h	equ	0xFE2
 14058                           fsr1l	equ	0xFE1
 14059                           bsr	equ	0xFE0
 14060                           indf2	equ	0xFDF
 14061                           postinc2	equ	0xFDE
 14062                           postdec2	equ	0xFDD
 14063                           fsr2h	equ	0xFDA
 14064                           fsr2l	equ	0xFD9
 14065                           status	equ	0xFD8
 14066                           
 14067                           	psect	intcode_body
 14068  0021A8                     __pintcode_body:
 14069                           	opt stack 23
 14070  0021A8                     int_func:
 14071                           	opt stack 23
 14072  0021A8  CFFA F006          	movff	pclath,??_high_priority_int+5
 14073  0021AC  CFFB F007          	movff	pclatu,??_high_priority_int+6
 14074  0021B0  CFE9 F008          	movff	fsr0l,??_high_priority_int+7
 14075  0021B4  CFEA F009          	movff	fsr0h,??_high_priority_int+8
 14076  0021B8  CFE1 F00A          	movff	fsr1l,??_high_priority_int+9
 14077  0021BC  CFE2 F00B          	movff	fsr1h,??_high_priority_int+10
 14078  0021C0  CFD9 F00C          	movff	fsr2l,??_high_priority_int+11
 14079  0021C4  CFDA F00D          	movff	fsr2h,??_high_priority_int+12
 14080  0021C8  CFF3 F00E          	movff	prodl,??_high_priority_int+13
 14081  0021CC  CFF4 F00F          	movff	prodh,??_high_priority_int+14
 14082  0021D0  CFF6 F010          	movff	tblptrl,??_high_priority_int+15
 14083  0021D4  CFF7 F011          	movff	tblptrh,??_high_priority_int+16
 14084  0021D8  CFF8 F012          	movff	tblptru,??_high_priority_int+17
 14085  0021DC  CFF5 F013          	movff	tablat,??_high_priority_int+18
 14086                           
 14087                           ;easat2_func_interrupts.c: 21: static int tmr1_interrupt_number = 0;
 14088                           ;easat2_func_interrupts.c: 23: static unsigned int samples[128];
 14089                           ;easat2_func_interrupts.c: 24: static unsigned int sample_position = 0;
 14090                           ;easat2_func_interrupts.c: 25: static unsigned short long noise_avg_value = 32000;
 14091                           ;easat2_func_interrupts.c: 26: static unsigned int activation_thresold = 32000;
 14092                           ;easat2_func_interrupts.c: 27: static unsigned int times_thresold_exceeded = 0;
 14093                           ;easat2_func_interrupts.c: 28: static unsigned int cycles_transmitter_active = 0;
 14094  0021E0  0E00               	movlw	0
 14095  0021E2  6E15               	movwf	high_priority_int@sample+1,c
 14096  0021E4  0E00               	movlw	0
 14097  0021E6  6E14               	movwf	high_priority_int@sample,c
 14098                           
 14099                           ;easat2_func_interrupts.c: 36: if (PIR1bits.TMR2IF) {
 14100  0021E8  A29E               	btfss	3998,1,c	;volatile
 14101  0021EA  D002               	goto	i2l439
 14102                           
 14103                           ;easat2_func_interrupts.c: 40: PIR1bits.TMR2IF = 0;
 14104  0021EC  929E               	bcf	3998,1,c	;volatile
 14105                           
 14106                           ;easat2_func_interrupts.c: 42: } else {
 14107  0021EE  D0DD               	goto	i2l456
 14108  0021F0                     i2l439:
 14109                           
 14110                           ;easat2_func_interrupts.c: 46: if (PIR1bits.TMR1IF) {
 14111  0021F0  A09E               	btfss	3998,0,c	;volatile
 14112  0021F2  D0DB               	goto	i2l456
 14113                           
 14114                           ;easat2_func_interrupts.c: 50: TMR1H = 0xEC;
 14115  0021F4  0EEC               	movlw	236
 14116  0021F6  6ECF               	movwf	4047,c	;volatile
 14117                           
 14118                           ;easat2_func_interrupts.c: 51: TMR1L = 0x77 ; 60535;
 14119  0021F8  0E77               	movlw	119
 14120  0021FA  6ECE               	movwf	4046,c	;volatile
 14121                           
 14122                           ;easat2_func_interrupts.c: 55: (PORTDbits.RD5) = !(PORTDbits.RD5);
 14123  0021FC  BA83               	btfsc	3971,5,c	;volatile
 14124  0021FE  D003               	goto	i2u422_40
 14125  002200  6A01               	clrf	??_high_priority_int& (0+255),c
 14126  002202  2A01               	incf	??_high_priority_int& (0+255),f,c
 14127  002204  D001               	goto	i2u423_48
 14128  002206                     i2u422_40:
 14129  002206  6A01               	clrf	??_high_priority_int& (0+255),c
 14130  002208                     i2u423_48:
 14131  002208  3A01               	swapf	??_high_priority_int,f,c
 14132  00220A  4601               	rlncf	??_high_priority_int,f,c
 14133  00220C  5083               	movf	3971,w,c	;volatile
 14134  00220E  1801               	xorwf	??_high_priority_int,w,c
 14135  002210  0BDF               	andlw	-33
 14136  002212  1801               	xorwf	??_high_priority_int,w,c
 14137  002214  6E83               	movwf	3971,c	;volatile
 14138                           
 14139                           ;easat2_func_interrupts.c: 59: tmr1_interrupt_number++;
 14140  002216  4A31               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 14141  002218  2A32               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 14142                           
 14143                           ;easat2_func_interrupts.c: 63: if (tmr1_interrupt_number == 50) {
 14144  00221A  0E32               	movlw	50
 14145  00221C  1831               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 14146  00221E  1032               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 14147  002220  A4D8               	btfss	status,2,c
 14148  002222  D011               	goto	i2l4514
 14149                           
 14150                           ;easat2_func_interrupts.c: 66: (PORTDbits.RD4) = !(PORTDbits.RD4);
 14151  002224  B883               	btfsc	3971,4,c	;volatile
 14152  002226  D003               	goto	i2u425_40
 14153  002228  6A01               	clrf	??_high_priority_int& (0+255),c
 14154  00222A  2A01               	incf	??_high_priority_int& (0+255),f,c
 14155  00222C  D001               	goto	i2u426_48
 14156  00222E                     i2u425_40:
 14157  00222E  6A01               	clrf	??_high_priority_int& (0+255),c
 14158  002230                     i2u426_48:
 14159  002230  3A01               	swapf	??_high_priority_int,f,c
 14160  002232  5083               	movf	3971,w,c	;volatile
 14161  002234  1801               	xorwf	??_high_priority_int,w,c
 14162  002236  0BEF               	andlw	-17
 14163  002238  1801               	xorwf	??_high_priority_int,w,c
 14164  00223A  6E83               	movwf	3971,c	;volatile
 14165  00223C  0004               	clrwdt		;# 
 14166                           
 14167                           ;easat2_func_interrupts.c: 75: tmr1_interrupt_number = 0;
 14168  00223E  0E00               	movlw	0
 14169  002240  6E32               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 14170  002242  0E00               	movlw	0
 14171  002244  6E31               	movwf	high_priority_int@tmr1_interrupt_number,c
 14172  002246                     i2l4514:
 14173                           
 14174                           ;easat2_func_interrupts.c: 77: }
 14175                           ;easat2_func_interrupts.c: 81: if (valid_samples < 128) valid_samples++;
 14176  002246  5028               	movf	high_priority_int@valid_samples+1,w,c
 14177  002248  E106               	bnz	i2l4518
 14178  00224A  0E80               	movlw	128
 14179  00224C  5C27               	subwf	high_priority_int@valid_samples,w,c
 14180  00224E  B0D8               	btfsc	status,0,c
 14181  002250  D002               	goto	i2l4518
 14182  002252  4A27               	infsnz	high_priority_int@valid_samples,f,c
 14183  002254  2A28               	incf	high_priority_int@valid_samples+1,f,c
 14184  002256                     i2l4518:
 14185                           
 14186                           ;easat2_func_interrupts.c: 94: ADCON0bits.CHS = 4;
 14187  002256  94C2               	bcf	4034,2,c	;volatile
 14188  002258  96C2               	bcf	4034,3,c	;volatile
 14189  00225A  88C2               	bsf	4034,4,c	;volatile
 14190  00225C  9AC2               	bcf	4034,5,c	;volatile
 14191  00225E  9CC2               	bcf	4034,6,c	;volatile
 14192                           
 14193                           ;easat2_func_interrupts.c: 95: ADCON0bits.ADON = 1;
 14194  002260  80C2               	bsf	4034,0,c	;volatile
 14195                           
 14196                           ;easat2_func_interrupts.c: 96: PIR1bits.ADIF = 0;
 14197  002262  9C9E               	bcf	3998,6,c	;volatile
 14198                           
 14199                           ;easat2_func_interrupts.c: 98: ADCON0bits.GO = 1;
 14200  002264  82C2               	bsf	4034,1,c	;volatile
 14201  002266                     i2l444:
 14202  002266  AC9E               	btfss	3998,6,c	;volatile
 14203  002268  D7FE               	goto	i2l444
 14204                           
 14205                           ;easat2_func_interrupts.c: 101: sample = ADRES;
 14206  00226A  CFC3 F014          	movff	4035,high_priority_int@sample	;volatile
 14207  00226E  CFC4 F015          	movff	4036,high_priority_int@sample+1	;volatile
 14208                           
 14209                           ;easat2_func_interrupts.c: 103: PIR1bits.ADIF = 0;
 14210  002272  9C9E               	bcf	3998,6,c	;volatile
 14211                           
 14212                           ;easat2_func_interrupts.c: 104: ADCON0bits.ADON = 0;
 14213  002274  90C2               	bcf	4034,0,c	;volatile
 14214                           
 14215                           ;easat2_func_interrupts.c: 106: if (is_transmitter_active) cycles_transmitter_active++;
 14216  002276  5033               	movf	high_priority_int@is_transmitter_active,w,c
 14217  002278  B4D8               	btfsc	status,2,c
 14218  00227A  D002               	goto	i2l4530
 14219  00227C  4A2B               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 14220  00227E  2A2C               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 14221  002280                     i2l4530:
 14222                           
 14223                           ;easat2_func_interrupts.c: 111: if (sample > 128 && sample > activation_thresold) {
 14224  002280  5015               	movf	high_priority_int@sample+1,w,c
 14225  002282  E104               	bnz	i2u430_40
 14226  002284  0E81               	movlw	129
 14227  002286  5C14               	subwf	high_priority_int@sample,w,c
 14228  002288  A0D8               	btfss	status,0,c
 14229  00228A  D019               	goto	i2l4542
 14230  00228C                     i2u430_40:
 14231  00228C  5014               	movf	high_priority_int@sample,w,c
 14232  00228E  5C37               	subwf	high_priority_int@activation_thresold,w,c
 14233  002290  5015               	movf	high_priority_int@sample+1,w,c
 14234  002292  5838               	subwfb	high_priority_int@activation_thresold+1,w,c
 14235  002294  B0D8               	btfsc	status,0,c
 14236  002296  D013               	goto	i2l4542
 14237                           
 14238                           ;easat2_func_interrupts.c: 113: times_thresold_exceeded++;
 14239  002298  4A2D               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 14240  00229A  2A2E               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 14241                           
 14242                           ;easat2_func_interrupts.c: 115: if (times_thresold_exceeded == 200) {
 14243  00229C  0EC8               	movlw	200
 14244  00229E  182D               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 14245  0022A0  102E               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 14246  0022A2  A4D8               	btfss	status,2,c
 14247  0022A4  D081               	goto	i2l4574
 14248                           
 14249                           ;easat2_func_interrupts.c: 120: (PORTBbits.RB1) = 1;
 14250  0022A6  8281               	bsf	3969,1,c	;volatile
 14251                           
 14252                           ;easat2_func_interrupts.c: 122: is_transmitter_active = 1;
 14253  0022A8  0E01               	movlw	1
 14254  0022AA  6E33               	movwf	high_priority_int@is_transmitter_active,c
 14255                           
 14256                           ;easat2_func_interrupts.c: 123: cycles_transmitter_active = 0;
 14257  0022AC  0E00               	movlw	0
 14258  0022AE  6E2C               	movwf	high_priority_int@cycles_transmitter_active+1,c
 14259  0022B0  0E00               	movlw	0
 14260  0022B2  6E2B               	movwf	high_priority_int@cycles_transmitter_active,c
 14261                           
 14262                           ;easat2_func_interrupts.c: 125: times_thresold_exceeded = 0;
 14263  0022B4  0E00               	movlw	0
 14264  0022B6  6E2E               	movwf	high_priority_int@times_thresold_exceeded+1,c
 14265  0022B8  0E00               	movlw	0
 14266  0022BA  6E2D               	movwf	high_priority_int@times_thresold_exceeded,c
 14267                           
 14268                           ;easat2_func_interrupts.c: 127: }
 14269                           ;easat2_func_interrupts.c: 130: } else {
 14270  0022BC  D075               	goto	i2l4574
 14271  0022BE                     i2l4542:
 14272                           
 14273                           ;easat2_func_interrupts.c: 132: times_thresold_exceeded = 0;
 14274  0022BE  0E00               	movlw	0
 14275  0022C0  6E2E               	movwf	high_priority_int@times_thresold_exceeded+1,c
 14276  0022C2  0E00               	movlw	0
 14277  0022C4  6E2D               	movwf	high_priority_int@times_thresold_exceeded,c
 14278                           
 14279                           ;easat2_func_interrupts.c: 134: if (cycles_transmitter_active == 12000) {
 14280  0022C6  0EE0               	movlw	224
 14281  0022C8  182B               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 14282  0022CA  E107               	bnz	i2l4550
 14283  0022CC  0E2E               	movlw	46
 14284  0022CE  182C               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 14285  0022D0  A4D8               	btfss	status,2,c
 14286  0022D2  D003               	goto	i2l4550
 14287                           
 14288                           ;easat2_func_interrupts.c: 136: (PORTBbits.RB1) = 0;
 14289  0022D4  9281               	bcf	3969,1,c	;volatile
 14290                           
 14291                           ;easat2_func_interrupts.c: 137: is_transmitter_active = 0;
 14292  0022D6  0E00               	movlw	0
 14293  0022D8  6E33               	movwf	high_priority_int@is_transmitter_active,c
 14294  0022DA                     i2l4550:
 14295                           
 14296                           ;easat2_func_interrupts.c: 138: }
 14297                           ;easat2_func_interrupts.c: 140: samples[sample_position] = sample;
 14298  0022DA  90D8               	bcf	status,0,c
 14299  0022DC  342F               	rlcf	high_priority_int@sample_position,w,c
 14300  0022DE  6ED9               	movwf	fsr2l,c
 14301  0022E0  3430               	rlcf	high_priority_int@sample_position+1,w,c
 14302  0022E2  6EDA               	movwf	fsr2h,c
 14303  0022E4  0E00               	movlw	low high_priority_int@samples
 14304  0022E6  26D9               	addwf	fsr2l,f,c
 14305  0022E8  0E02               	movlw	high high_priority_int@samples
 14306  0022EA  22DA               	addwfc	fsr2h,f,c
 14307  0022EC  C014  FFDE         	movff	high_priority_int@sample,postinc2
 14308  0022F0  C015  FFDD         	movff	high_priority_int@sample+1,postdec2
 14309                           
 14310                           ;easat2_func_interrupts.c: 143: total_add += sample;
 14311  0022F4  5014               	movf	high_priority_int@sample,w,c
 14312  0022F6  2629               	addwf	high_priority_int@total_add,f,c
 14313  0022F8  5015               	movf	high_priority_int@sample+1,w,c
 14314  0022FA  222A               	addwfc	high_priority_int@total_add+1,f,c
 14315                           
 14316                           ;easat2_func_interrupts.c: 145: if (sample_position > 0)
 14317  0022FC  502F               	movf	high_priority_int@sample_position,w,c
 14318  0022FE  1030               	iorwf	high_priority_int@sample_position+1,w,c
 14319  002300  B4D8               	btfsc	status,2,c
 14320  002302  D016               	goto	i2l4558
 14321                           
 14322                           ;easat2_func_interrupts.c: 146: total_add -= samples[sample_position-1];
 14323  002304  0EFE               	movlw	254
 14324  002306  6E01               	movwf	??_high_priority_int& (0+255),c
 14325  002308  0EFF               	movlw	255
 14326  00230A  6E02               	movwf	(??_high_priority_int+1)& (0+255),c
 14327  00230C  C02F  F003         	movff	high_priority_int@sample_position,??_high_priority_int+2
 14328  002310  C030  F004         	movff	high_priority_int@sample_position+1,??_high_priority_int+3
 14329  002314  90D8               	bcf	status,0,c
 14330  002316  3603               	rlcf	??_high_priority_int+2,f,c
 14331  002318  3604               	rlcf	??_high_priority_int+3,f,c
 14332  00231A  5001               	movf	??_high_priority_int,w,c
 14333  00231C  2603               	addwf	??_high_priority_int+2,f,c
 14334  00231E  5002               	movf	??_high_priority_int+1,w,c
 14335  002320  2204               	addwfc	??_high_priority_int+3,f,c
 14336  002322  0E00               	movlw	low high_priority_int@samples
 14337  002324  2403               	addwf	??_high_priority_int+2,w,c
 14338  002326  6ED9               	movwf	fsr2l,c
 14339  002328  0E02               	movlw	high high_priority_int@samples
 14340  00232A  2004               	addwfc	??_high_priority_int+3,w,c
 14341  00232C  6EDA               	movwf	fsr2h,c
 14342  00232E  D002               	goto	L7
 14343  002330                     i2l4558:
 14344                           
 14345                           ;easat2_func_interrupts.c: 147: else
 14346                           ;easat2_func_interrupts.c: 148: total_add -= samples[128-1];
 14347  002330  EE22  F0FE         	lfsr	2,high_priority_int@samples+254
 14348  002334                     L7:
 14349  002334  50DE               	movf	postinc2,w,c
 14350  002336  5E29               	subwf	high_priority_int@total_add,f,c
 14351  002338  50DD               	movf	postdec2,w,c
 14352  00233A  5A2A               	subwfb	high_priority_int@total_add+1,f,c
 14353                           
 14354                           ;easat2_func_interrupts.c: 151: sample_position++;
 14355  00233C  4A2F               	infsnz	high_priority_int@sample_position,f,c
 14356  00233E  2A30               	incf	high_priority_int@sample_position+1,f,c
 14357                           
 14358                           ;easat2_func_interrupts.c: 154: if (sample_position == 128) sample_position = 0;
 14359  002340  0E80               	movlw	128
 14360  002342  182F               	xorwf	high_priority_int@sample_position,w,c
 14361  002344  1030               	iorwf	high_priority_int@sample_position+1,w,c
 14362  002346  A4D8               	btfss	status,2,c
 14363  002348  D004               	goto	i2l4566
 14364  00234A  0E00               	movlw	0
 14365  00234C  6E30               	movwf	high_priority_int@sample_position+1,c
 14366  00234E  0E00               	movlw	0
 14367  002350  6E2F               	movwf	high_priority_int@sample_position,c
 14368  002352                     i2l4566:
 14369                           
 14370                           ;easat2_func_interrupts.c: 157: if (valid_samples == 128) {
 14371  002352  0E80               	movlw	128
 14372  002354  1827               	xorwf	high_priority_int@valid_samples,w,c
 14373  002356  1028               	iorwf	high_priority_int@valid_samples+1,w,c
 14374  002358  A4D8               	btfss	status,2,c
 14375  00235A  D026               	goto	i2l4574
 14376                           
 14377                           ;easat2_func_interrupts.c: 160: noise_avg_value = total_add;
 14378  00235C  C029  F034         	movff	high_priority_int@total_add,high_priority_int@noise_avg_value
 14379  002360  C02A  F035         	movff	high_priority_int@total_add+1,high_priority_int@noise_avg_value+1
 14380  002364  6A36               	clrf	high_priority_int@noise_avg_value+2,c
 14381                           
 14382                           ;easat2_func_interrupts.c: 162: noise_avg_value = noise_avg_value >> 7;
 14383  002366  0E07               	movlw	7
 14384  002368  6E01               	movwf	??_high_priority_int& (0+255),c
 14385  00236A  C034  F002         	movff	high_priority_int@noise_avg_value,??_high_priority_int+1
 14386  00236E  C035  F003         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+2
 14387  002372  C036  F004         	movff	high_priority_int@noise_avg_value+2,??_high_priority_int+3
 14388  002376  2801               	incf	??_high_priority_int,w,c
 14389  002378  6E05               	movwf	(??_high_priority_int+4)& (0+255),c
 14390  00237A  D004               	goto	i2u437_40
 14391  00237C                     i2u437_45:
 14392  00237C  90D8               	bcf	status,0,c
 14393  00237E  3204               	rrcf	??_high_priority_int+3,f,c
 14394  002380  3203               	rrcf	??_high_priority_int+2,f,c
 14395  002382  3202               	rrcf	??_high_priority_int+1,f,c
 14396  002384                     i2u437_40:
 14397  002384  2E05               	decfsz	(??_high_priority_int+4)& (0+255),f,c
 14398  002386  D7FA               	goto	i2u437_45
 14399  002388  C002  F034         	movff	??_high_priority_int+1,high_priority_int@noise_avg_value
 14400  00238C  C003  F035         	movff	??_high_priority_int+2,high_priority_int@noise_avg_value+1
 14401  002390  C004  F036         	movff	??_high_priority_int+3,high_priority_int@noise_avg_value+2
 14402                           
 14403                           ;easat2_func_interrupts.c: 165: activation_thresold = noise_avg_value < 1;
 14404  002394  5034               	movf	high_priority_int@noise_avg_value,w,c
 14405  002396  1035               	iorwf	high_priority_int@noise_avg_value+1,w,c
 14406  002398  1036               	iorwf	high_priority_int@noise_avg_value+2,w,c
 14407  00239A  A4D8               	btfss	status,2,c
 14408  00239C  D002               	goto	i2u438_40
 14409  00239E  0E01               	movlw	1
 14410  0023A0  D001               	goto	i2u439_40
 14411  0023A2                     i2u438_40:
 14412  0023A2  0E00               	movlw	0
 14413  0023A4                     i2u439_40:
 14414  0023A4  6E37               	movwf	high_priority_int@activation_thresold,c
 14415  0023A6  6A38               	clrf	high_priority_int@activation_thresold+1,c
 14416  0023A8                     i2l4574:
 14417                           
 14418                           ;easat2_func_interrupts.c: 167: }
 14419                           ;easat2_func_interrupts.c: 169: }
 14420                           ;easat2_func_interrupts.c: 173: PIR1bits.TMR1IF = 0;
 14421  0023A8  909E               	bcf	3998,0,c	;volatile
 14422  0023AA                     i2l456:
 14423  0023AA  C013  FFF5         	movff	??_high_priority_int+18,tablat
 14424  0023AE  C012  FFF8         	movff	??_high_priority_int+17,tblptru
 14425  0023B2  C011  FFF7         	movff	??_high_priority_int+16,tblptrh
 14426  0023B6  C010  FFF6         	movff	??_high_priority_int+15,tblptrl
 14427  0023BA  C00F  FFF4         	movff	??_high_priority_int+14,prodh
 14428  0023BE  C00E  FFF3         	movff	??_high_priority_int+13,prodl
 14429  0023C2  C00D  FFDA         	movff	??_high_priority_int+12,fsr2h
 14430  0023C6  C00C  FFD9         	movff	??_high_priority_int+11,fsr2l
 14431  0023CA  C00B  FFE2         	movff	??_high_priority_int+10,fsr1h
 14432  0023CE  C00A  FFE1         	movff	??_high_priority_int+9,fsr1l
 14433  0023D2  C009  FFEA         	movff	??_high_priority_int+8,fsr0h
 14434  0023D6  C008  FFE9         	movff	??_high_priority_int+7,fsr0l
 14435  0023DA  C007  FFFB         	movff	??_high_priority_int+6,pclatu
 14436  0023DE  C006  FFFA         	movff	??_high_priority_int+5,pclath
 14437  0023E2  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14438  0023E4  0011               	retfie		f
 14439  0023E6                     __end_of_high_priority_int:
 14440                           	opt stack 0
 14441                           pclatu	equ	0xFFB
 14442                           pclath	equ	0xFFA
 14443                           tblptru	equ	0xFF8
 14444                           tblptrh	equ	0xFF7
 14445                           tblptrl	equ	0xFF6
 14446                           tablat	equ	0xFF5
 14447                           prodh	equ	0xFF4
 14448                           prodl	equ	0xFF3
 14449                           intcon	equ	0xFF2
 14450                           intcon2	equ	0xFF1
 14451                           indf0	equ	0xFEF
 14452                           postinc0	equ	0xFEE
 14453                           fsr0h	equ	0xFEA
 14454                           fsr0l	equ	0xFE9
 14455                           wreg	equ	0xFE8
 14456                           indf1	equ	0xFE7
 14457                           postdec1	equ	0xFE5
 14458                           fsr1h	equ	0xFE2
 14459                           fsr1l	equ	0xFE1
 14460                           bsr	equ	0xFE0
 14461                           indf2	equ	0xFDF
 14462                           postinc2	equ	0xFDE
 14463                           postdec2	equ	0xFDD
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           pclatu	equ	0xFFB
 14468                           pclath	equ	0xFFA
 14469                           tblptru	equ	0xFF8
 14470                           tblptrh	equ	0xFF7
 14471                           tblptrl	equ	0xFF6
 14472                           tablat	equ	0xFF5
 14473                           prodh	equ	0xFF4
 14474                           prodl	equ	0xFF3
 14475                           intcon	equ	0xFF2
 14476                           intcon2	equ	0xFF1
 14477                           indf0	equ	0xFEF
 14478                           postinc0	equ	0xFEE
 14479                           fsr0h	equ	0xFEA
 14480                           fsr0l	equ	0xFE9
 14481                           wreg	equ	0xFE8
 14482                           indf1	equ	0xFE7
 14483                           postdec1	equ	0xFE5
 14484                           fsr1h	equ	0xFE2
 14485                           fsr1l	equ	0xFE1
 14486                           bsr	equ	0xFE0
 14487                           indf2	equ	0xFDF
 14488                           postinc2	equ	0xFDE
 14489                           postdec2	equ	0xFDD
 14490                           fsr2h	equ	0xFDA
 14491                           fsr2l	equ	0xFD9
 14492                           status	equ	0xFD8
 14493                           
 14494                           	psect	rparam
 14495  0000                     pclatu	equ	0xFFB
 14496                           pclath	equ	0xFFA
 14497                           tblptru	equ	0xFF8
 14498                           tblptrh	equ	0xFF7
 14499                           tblptrl	equ	0xFF6
 14500                           tablat	equ	0xFF5
 14501                           prodh	equ	0xFF4
 14502                           prodl	equ	0xFF3
 14503                           intcon	equ	0xFF2
 14504                           intcon2	equ	0xFF1
 14505                           indf0	equ	0xFEF
 14506                           postinc0	equ	0xFEE
 14507                           fsr0h	equ	0xFEA
 14508                           fsr0l	equ	0xFE9
 14509                           wreg	equ	0xFE8
 14510                           indf1	equ	0xFE7
 14511                           postdec1	equ	0xFE5
 14512                           fsr1h	equ	0xFE2
 14513                           fsr1l	equ	0xFE1
 14514                           bsr	equ	0xFE0
 14515                           indf2	equ	0xFDF
 14516                           postinc2	equ	0xFDE
 14517                           postdec2	equ	0xFDD
 14518                           fsr2h	equ	0xFDA
 14519                           fsr2l	equ	0xFD9
 14520                           status	equ	0xFD8
 14521                           
 14522                           	psect	temp
 14523  000039                     btemp:
 14524                           	opt stack 0
 14525  000039                     	ds	1
 14526  0000                     int$flags	set	btemp
 14527                           pclatu	equ	0xFFB
 14528                           pclath	equ	0xFFA
 14529                           tblptru	equ	0xFF8
 14530                           tblptrh	equ	0xFF7
 14531                           tblptrl	equ	0xFF6
 14532                           tablat	equ	0xFF5
 14533                           prodh	equ	0xFF4
 14534                           prodl	equ	0xFF3
 14535                           intcon	equ	0xFF2
 14536                           intcon2	equ	0xFF1
 14537                           indf0	equ	0xFEF
 14538                           postinc0	equ	0xFEE
 14539                           fsr0h	equ	0xFEA
 14540                           fsr0l	equ	0xFE9
 14541                           wreg	equ	0xFE8
 14542                           indf1	equ	0xFE7
 14543                           postdec1	equ	0xFE5
 14544                           fsr1h	equ	0xFE2
 14545                           fsr1l	equ	0xFE1
 14546                           bsr	equ	0xFE0
 14547                           indf2	equ	0xFDF
 14548                           postinc2	equ	0xFDE
 14549                           postdec2	equ	0xFDD
 14550                           fsr2h	equ	0xFDA
 14551                           fsr2l	equ	0xFD9
 14552                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      56
    BANK0           160    128     128
    BANK1           256    206     206
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_initialize->_init_watchdogs_initialize

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  133581
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  133581
                                            118 BANK0     10    10      0
          _init_watchdogs_initialize
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             17 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             12 BANK0      5     3      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             57 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                              5 BANK0      7     5      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                              2 BANK0     21    19      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                              5 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             57 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             35 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             57 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   73504
                                            108 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6252
                                             12 BANK0      1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5161
                                              6 BANK0      6     4      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             63 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             45 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
          _init_watchdogs_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_watchdogs_initialize                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_priority_int                                    17    17      0       0
                                             21 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_priority_int                                   21    21      0      90
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _init_watchdogs_initialize
     _util_pwm_initialize
   _main_loop
     _init_watchdogs_initialize
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     80      80       4       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      38       1       59.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     286       9        0.0%
DATA                 0      0     286      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 07 11:56:20 2017

                               ??_init_initialize 0027                       util_onewire_read_byte@value 0085  
            high_priority_int@activation_thresold 0037                              util_getTemperature@i 01CC  
                                              l77 3772                                      ___awdiv@sign 006B  
                                              bsr 000FE0                               ___wmul@multiplicand 0070  
                __end_of_util_beacon_transmission 2F5C                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 0098  
                                    ___ftadd@exp2 0097                                      ___ftadd@sign 0096  
                                             l123 32F8                                               l135 3166  
                                             l129 309C                                               l148 0D90  
                                             l186 3C02                                               l367 3B8A  
                                             l547 07A8                                               l820 3034  
                                             l843 1FA8                                               l917 3CD4  
                                             l847 1FE2                                               l849 200A  
                                             l858 20E0                                               l867 210A  
                                             l788 2A4A                                               l892 272E  
                                             l885 266A                                               l886 26AE  
                                             l878 2CD0                                               l967 34EA  
                         ??_util_onewire_read_bit 0062                                               l977 36E2  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FBB  
                                    __CFG_CPD$OFF 000000                       __end_of_util_getTemperature 13F2  
                                    ___awmod@sign 0065                    ??_util_transmit_morse_sequence 0068  
                             _util_pwm_initialize 3C7E                                               wreg 000FE8  
                                    __CFG_FOSC$XT 000000                           ?_init_timer1_initialize 0001  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0066  
                                    ___ftdiv@cntr 0075                                      ___ftdiv@sign 007A  
                                            l5000 3D2C                                              l5010 25DC  
                                            l5110 2A14                                              l5016 2616  
                                            l5200 3AFE                                              l5106 2A00  
                                            l5050 26F8                                              l5132 323C  
                                            l5124 39FA                                              l3612 2DD2  
                                            l5116 2A30                                              l5204 3B12  
                                            l5142 32C0                                              l3630 2E38  
                                            l3622 2E02                                              l5118 2A40  
                                            l5046 26E4                                              l5302 00BA  
                                            l6006 3764                                              l5136 327C  
                                            l4600 2F98                                              l3624 2E12  
                                            l3616 2DE6                                              l5160 3484  
                                            l5072 2920                                              l5056 2714  
                                            l5400 04A6                                              l4610 3026  
                                            l4602 2FC8                                              l3626 2E1C  
                                            l5066 28FA                                              l5058 2724  
                                            l5314 010C                                              l5322 0182  
                                            l4700 2070                                              l5156 346E  
                                            l5180 368C                                              l5500 0924  
                                            l5420 059E                                              l5404 04D4  
                                            l5332 01F0                                              l5308 00DA  
                                            l4622 305A                                              l4606 2FE8  
                                            l4702 207E                                              l5158 347E  
                                            l5190 378A                                              l5094 29C8  
                                            l5086 2974                                              l5414 0532  
                                            l5350 026A                                              l5342 021C  
                                            l5334 0206                                              l4630 38EC  
                                            l4616 303E                                              l4608 3018  
                                            l4720 2134                                              l4712 20C6  
                                            l4704 208C                                              l5168 34D8  
                                            l5184 36D0                                              l5176 3676  
                                            l5192 379A                                              l5440 0656  
                                            l5432 05E4                                              l5360 02B0  
                                            l5344 0250                                              l5328 01AA  
                                            l5600 3A44                                              l4730 2182  
                                            l4714 20D4                                              l4706 2098  
                                            l3594 2D40                                              l5178 3686  
                                            l4802 33D2                                              l5506 093E  
                                            l5418 0598                                              l5338 0216  
                                            l5602 3A50                                              l5610 18CA  
                                            l5292 3C66                                              l4804 33DE  
                                            l4740 2A96                                              l5524 09B6  
                                            l5452 06B0                                              l5444 0668  
                                            l5436 0634                                              l5508 094C  
                                            l4628 38E6                                              l5620 1924  
                                            l5612 18DC                                              l4822 3436  
                                            l4814 3414                                              l4806 33E4  
                                            l5542 0A2A                                              l5526 09BC  
                                            l5518 0990                                              l5470 0776  
                                            l5454 06B8                                              l5462 074E  
                                            l5446 0670                                              l5390 0416  
                                            l5630 197E                                              l5622 1936  
                                            l5614 18EE                                              l5606 18A6  
                                            l5702 2BF4                                              l5288 3C54  
                                            l4672 1FB6                                              l4760 2B1E  
                                            l5560 0AD0                                              l5552 0A8E  
                                            l5472 078A                                              l5464 075C  
                                            l5448 0684                                              l5392 0446  
                                            l5384 03D2                                              l5376 0362  
                                            l5296 3C20                                              l4920 3816  
                                            l5640 19D8                                              l5632 1990  
                                            l5624 1948                                              l5616 1900  
                                            l5608 18B8                                              l4594 2F76  
                                            l4818 3422                                              l4850 362E  
                                            l4842 35F8                                              l4834 35D4  
                                            l4770 2B5C                                              l4746 2AD0  
                                            l5546 0A5A                                              l5538 0A02  
                                            l5394 045C                                              l5298 3C2C  
                                            l4586 3B7C                                              l4922 3846  
                                            l4914 380A                                              l5650 1A32  
                                            l5642 19EA                                              l5634 19A2  
                                            l5626 195A                                              l5618 1912  
                                            l4684 2000                                              l4844 3604  
                                            l4764 2B3C                                              l5580 0B72  
                                            l5564 0B08                                              l5484 07DC  
                                            l5476 07AC                                              l5388 0400  
                                            l4916 3810                                              l5660 1A8C  
                                            l5652 1A44                                              l5644 19FC  
                                            l5636 19B4                                              l5628 196C  
                                            l5708 2C2E                                              l4598 2F8A  
                                            l4694 2042                                              l4678 1FF0  
                                            l4790 339E                                              l4846 360A  
                                            l4854 363C                                              l4838 35E4  
                                            l4774 2B7A                                              l4950 1EF8  
                                            l4942 1E14                                              l5574 0B44  
                                            l5566 0B12                                              l5558 0AC6  
                                            l5590 0C3A                                              l4926 3850  
                                            l5670 1AE6                                              l5662 1A9E  
                                            l5654 1A56                                              l5646 1A0E  
                                            l5638 19C6                                              l5750 3A88  
                                            l4870 389E                                              l5910 0FB2  
                                            l5584 0C00                                              l5568 0B1E  
                                            l5488 082E                                              l5680 1B40  
                                            l5672 1AF8                                              l5664 1AB0  
                                            l5656 1A68                                              l5648 1A20  
                                            l5728 2C8E                                              l4864 387E  
                                            l5840 0D6A                                              l4858 3650  
                                            l4970 162A                                              l5586 0C06  
                                            l5498 0916                                              l5682 1B52  
                                            l5674 1B0A                                              l5666 1AC2  
                                            l5658 1A7A                                              l4866 3888  
                                            l5930 1026                                              l5842 0D6E  
                                            l5834 0D40                                              l5826 0D14  
                                            l4796 33B4                                              l4964 1564  
                                            l5588 0C1C                                              l5596 3A2E  
                                            l5684 1B64                                              l5676 1B1C  
                                            l5668 1AD4                                              l5692 1B8E  
                                            l4876 38B4                                              l5924 1006  
                                            l5860 0E4A                                              l4982 17B4  
                                            l4974 1650                                              l5598 3A34  
                                            l5686 1B76                                              l5678 1B2E  
                                            l5694 1C8E                                              l4878 38BA  
                                            l5934 1042                                              l5918 0FE2  
                                            l5926 1012                                              l5870 0E80  
                                            l5854 0DB6                                              l5838 0D54  
                                            l5688 1B88                                              l5864 0E60  
                                            l5866 0E6A                                              l5882 0EF4  
                                            l4988 187A                                              l5884 0EFE  
                                            l5974 2F1A                                              l5878 0EEC  
                                            l5982 3ABC                                              l5888 0F14  
                                            l5978 2F36                                              l5986 3AD0  
                                            l5998 36F4                                              STR_1 7F9E  
                                            STR_2 7F6B                                              STR_3 7FE8  
                                            STR_4 7FD0                                              STR_5 7FF5  
                                            STR_6 7FCB                                              STR_7 7FC1  
                                            STR_8 7FC4                                              STR_9 7FBF  
                                            u3071 2D1C                                              u3090 2D66  
                                            u3095 2D5C                                              u5051 25B8  
                                            u6020 3D42                                              u4511 1F56  
                                            u5071 25F2                                              u4521 1F74  
                                            u5340 39BA                                              u5405 27CC  
                                            u6038 3D46                                              u5415 27E2  
                                            u6144 0EB0                                              u4721 2A72  
                                            u6145 0EA8                                              u5530 02F6  
                                            u4490 390C                                              u5355 2476  
                                            u5348 39BE                                              u4741 2AAC  
                                            u6317 3BFC                                              u5365 24A0  
                                            u5535 02EA                                              u6327 3C06  
                                            u5375 24CA                                              u5720 07A0  
                                            u4497 3902                                              u6337 399C  
                                            u5385 24F4                                              u5395 27B6  
                                            u6347 39A6                                              u4940 3B52  
                                            u6357 39CA                                              u6367 3B62  
                                            u6377 3B7E                                              u4948 3B56  
                        ??_util_onewire_read_byte 0067                                              u5961 2BD0  
                                            u5981 2C0A                                              _RBPU 007F8F  
                                            _TMR2 000FBC                                              _WPUB 000F61  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 3E1A                                      ___ftpack@arg 0060  
                                    ___ftpack@exp 0063                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 0039                                     __CFG_BORV$190 000000  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00A6                                     __CFG_IESO$OFF 000000  
                            ?_util_pwm_initialize 0001   __end_of_util_transmit_space_between_dots_dashes 3E1A  
__size_of_util_transmit_space_between_dots_dashes 0010         ??_util_transmit_space_between_dots_dashes 0027  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3E0A  
                                    _sprintf$2784 00B3                           ?_init_timer2_initialize 0001  
                                    ___ftmul@cntr 0081                                      ___param_bank 000000  
                                    ___ftmul@sign 0082                                      ___fttol@exp1 0098  
                                    ___fttol@lval 0094                                _util_transmit_dash 3D9E  
                         util_getTemperature@sign 01A4                                             ?_main 0001  
                                 __end_of___awdiv 3440                                             _ADRES 000FC3  
                                 __end_of___ftadd 21A8                                             STR_10 7FD6  
                                           STR_11 7FCC                                             STR_12 7FB2  
                                           STR_20 7FF6                                             STR_13 7FE7  
                                           STR_21 7FD1                                             STR_22 7FA9  
                                           STR_14 7FFA                                             STR_30 7FAB  
                                           STR_15 7FA8                                             STR_23 7FEC  
                                           STR_31 7FB1                                             STR_24 7F92  
                                           STR_16 7FC0                                             STR_32 7FB7  
                                           STR_40 7F97                                             STR_17 7FA7  
                                           STR_25 7FE2                                             STR_33 7F91  
                                           STR_41 7FC3                                             STR_18 7FF0  
                                           STR_26 7FEB                                             STR_34 7FDB  
                                           STR_42 7F89                                             STR_19 7FE6  
                                           STR_27 7FE1                                             STR_35 7FD5  
                                           STR_43 7F90                                             STR_28 7FCA  
                                           STR_36 7FCF                                   __end_of___awmod 365A  
                                           STR_37 7FC9                                             STR_29 7FA5  
                                           STR_38 7FBD                                             STR_39 7F82  
                                 __end_of___ftdiv 2D06                                   __end_of___ftneg 3CE2  
                                 __end_of___lldiv 34FC                                 ?_low_priority_int 0001  
                                 __end_of___ftmul 2BBA                                   ___awdiv@divisor 0068  
                                 __end_of___llmod 36F4                                   __end_of___ftsub 3A24  
                                 __end_of___fttol 2E4A                       __size_of_util_onewire_reset 004C  
                                   __CFG_WDTEN$ON 000000                                             i2l444 2266  
                                           i2l439 21F0                                             i2l456 23AA  
                                 ___awdiv@counter 006A                    __end_of_init_timer1_initialize 3D82  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0016  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0070                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 3132                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 006B  
                                 __end_of_dpowers 7F1D                                             _scale 13F2  
                                 __end_of_isdigit 3D36                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0064                          ??_util_onewire_write_bit 0027  
                       util_waits_delay_secs@secs 0065                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3BAC  
                                 __end_of_sprintf 0C48                              ??_util_transmit_dash 0027  
                           ??_util_pwm_initialize 0027                    __end_of_init_timer2_initialize 3DD4  
                         util_waits_delay_hours@i 0074                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 393E                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3E26                      __end_of_util_transmit_letter 1C94  
                      ?_init_watchdogs_initialize 0001                                            ??_main 0027  
                                   ___fttol@sign1 0093                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 019E                        util_onewire_read_bit@value 0063  
                       util_getSolarCurrent@value 009B                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 006D  
                                          ?_scale 0083                                            _CCPR2L 000F67  
                                ___awdiv@dividend 0066                                  __end_of___awtoft 3AB0  
                                __end_of___ftpack 3068                    high_priority_int@valid_samples 0027  
                                __end_of___lltoft 37FE                                            i2l4530 2280  
                                          i2l4514 2246                                            i2l4550 22DA  
                                          i2l4542 22BE                                            i2l4518 2256  
                                          i2l4566 2352                                            i2l4558 2330  
                                          i2l4574 23A8                                  __end_of___lwtoft 3D0C  
                 __size_of_util_onewire_read_byte 0194                       __size_of_init_io_initialize 00BC  
               __size_of_util_beacon_transmission 0112                            __size_of_util_pwm_stop 0008  
                       ?_util_beacon_transmission 00CC                                    __CFG_XINST$OFF 000000  
                                __end_of__powers_ 7F44                                      _CCPTMRS0bits 000F49  
                        ?_util_onewire_write_byte 0062                                            ___ftge 31FC  
                      util_onewire_read_byte@bit0 0075                        util_onewire_read_byte@bit1 0077  
                      util_onewire_read_byte@bit2 0079                        util_onewire_read_byte@bit3 007B  
                      util_onewire_read_byte@bit4 007D                        util_onewire_read_byte@bit5 007F  
                      util_onewire_read_byte@bit6 0081                        util_onewire_read_byte@bit7 0083  
                         ??_util_waits_delay_mins 006E                           ??_util_waits_delay_secs 0067  
                                          ___wmul 3BAC                                         ??___awdiv 0027  
                                       ??___ftadd 0093                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 0027                                         ??___ftdiv 0072  
                                       ??___ftneg 0027                                         ??___lldiv 0027  
                                       ??___ftmul 007A                                         ??___llmod 0027  
                                       ??___ftsub 0027                                         ??___fttol 008E  
                     util_onewire_write_byte@bit0 0067                       util_onewire_write_byte@bit1 0069  
                     util_onewire_write_byte@bit2 006B                       util_onewire_write_byte@bit3 006D  
                     util_onewire_write_byte@bit4 006F                       util_onewire_write_byte@bit5 0071  
                     util_onewire_write_byte@bit6 0073                       util_onewire_write_byte@bit7 0075  
                                          _memset 3C4A                                            _fround 1C94  
                                          clear_0 3966                                            clear_1 3978  
                                ___awdiv@quotient 006C                                   ___awmod@divisor 0062  
                                 ___awmod@counter 0064                       util_waits_delay_hours@hours 0071  
                                          _strcat 3A24                                            _strcpy 3C16  
                                          _strlen 38DC                             ___ftmul@f3_as_product 007E  
                                    __pdataCOMRAM 0034                                         ??_isdigit 0060  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00AD                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 0027                   __size_of_util_onewire_write_bit 0034  
                                 _init_initialize 3DD4                                        __accesstop 0060  
                         __end_of__initialization 397E                                   __CFG_PBADEN$OFF 000000  
                                      ___ftadd@f1 008D                                        ___ftadd@f2 0090  
                                      ___ftge@ff1 0060                                        ___ftge@ff2 0063  
                                   ___rparam_used 000001                                        ___ftdiv@f1 006C  
                                      ___ftdiv@f2 006F                                        ___ftdiv@f3 0076  
                        ??_util_getBatteryVoltage 0027                                        ___ftneg@f1 0060  
                                      ___awtoft@c 0068                                        ___ftmul@f1 0074  
                                      ___ftmul@f2 0077                                        ___ftsub@f1 0099  
                                      ___ftsub@f2 009C                                        ___fttol@f1 008A  
                                  __pcstackCOMRAM 0001                              _util_getSolarCurrent 3068  
                                      ___lltoft@c 0068                          main_loop@battery_current 00DB  
                                   __end_of_scale 18A0                            _util_onewire_read_byte 2740  
                                   _util_pwm_stop 3E26                                        ___lwtoft@c 0068  
                                      __div_to_l_ 28D4                          main_loop@battery_voltage 00DD  
                  __size_of_util_onewire_read_bit 003C                     __end_of_util_onewire_read_bit 3B70  
                                 __div_to_l_@exp1 006B                                   __div_to_l_@cntr 006A  
                                         ??_scale 0027                                   __div_to_l_@quot 0066  
                                    sprintf@width 00BA         __end_of_util_transmit_space_between_words 3DFA  
      __size_of_util_transmit_space_between_words 0010               ??_util_transmit_space_between_words 0027  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 3DEA  
          high_priority_int@tmr1_interrupt_number 0031                                        __pbssBANK2 0200  
                              __size_of_main_loop 008E                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 18A0                                     __div_to_l_@f1 0060  
                                   __div_to_l_@f2 0063                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 0099                                           ?___ftge 0060  
                    util_onewire_write_bit@bit_in 0060                                           ?___wmul 006E  
                high_priority_int@sample_position 002F                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 3BE2                                    ?_util_pwm_stop 0001  
                                         ?_memset 0060                                           ?_fround 0083  
                                       ?___awtoft 0068                                         ?___ftpack 0060  
                               _high_priority_int 0008                                         ?___lltoft 0068  
                                         ?_strcat 0060                                           ?_strcpy 0060  
                                         ?_strlen 0060                                         ?___lwtoft 0068  
                              ?_high_priority_int 0001                           __end_of_init_initialize 3DEA  
                         __size_of_util_pwm_start 0008                               ??_high_priority_int 0001  
                    __size_of_util_getTemperature 07AA                             ?_util_transmit_letter 0001  
                 __size_of_util_getBatteryCurrent 00CA                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 0063                      util_waits_delay_mins@minutes 006C  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F6B  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00BE  
                                      _scale$2783 0086              __end_of_util_transmit_morse_sequence 3872  
           __size_of_util_transmit_morse_sequence 0074                      _util_transmit_morse_sequence 37FE  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 3E0A      __size_of_util_transmit_space_between_letters 0010  
           ??_util_transmit_space_between_letters 0027              ?_util_transmit_space_between_letters 0001  
             _util_transmit_space_between_letters 3DFA                                   __size_of___ftge 00C8  
                                         ___awdiv 3382                                           ___ftadd 1F40  
                                         ___awmod 35B8                                           ___ftdiv 2BBA  
                                         ___ftneg 3CB2                                           ___lldiv 3440  
                                 __size_of___wmul 0036                                           ___ftmul 2A5C  
                        ??_util_waits_delay_hours 0073                                           ___llmod 365A  
                                         ___ftsub 39D8                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2D06                         __end_of_high_priority_int 23E6  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 39D8  
                               __end_of_main_loop 3782                                           __pcinit 393E  
                     ??_init_watchdogs_initialize 0060                                        ??___awtoft 0027  
                                      ??___ftpack 0065                                   __size_of_memset 0034  
                                 __size_of_fround 02AC                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 006C  
                                         __ptext0 3E1A                                           __ptext1 36F4  
                                         __ptext2 3AB0                                           __ptext3 3AF2  
                                         __ptext4 0C48                                           __ptext5 3872  
                                         __ptext6 23E6                                           __ptext7 3BE2  
                                         __ptext8 398C                                           __ptext9 2740  
                                      ??___lwtoft 0027                                   __size_of_strcat 0048  
                                 __size_of_strcpy 0034                                   __size_of_strlen 0062  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0060  
                                         _dpowers 7EF5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 3D0C  
                                ___awmod@dividend 0060                      util_onewire_write_byte@value 0062  
                            main_loop@temperature 00D6                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 006A                                    __pintcode_body 21A8  
                            end_of_initialization 397E                       __end_of_util_pwm_initialize 3CB2  
                                         memset@c 0062                                           memset@n 0064  
                                         memset@p 0066                                     __Lmediumconst 7EF4  
                                         int_func 21A8                       __size_of_util_transmit_dash 001C  
                                 ___lldiv@divisor 0064                            ??_util_getSolarCurrent 0027  
                                 ___lldiv@counter 006C                                           postdec1 000FE5  
                                         postdec2 000FDD                      __size_of_util_waits_delay_ms 003C  
                                 ??_util_pwm_stop 0027                                           postinc0 000FEE  
                                         postinc2 000FDE             util_beacon_transmission@solar_current 00CF  
                  __size_of_util_waits_delay_mins 0042                                    __tdiv_to_l_@f1 0060  
                                  __tdiv_to_l_@f2 0063                    __size_of_util_waits_delay_secs 006A  
                   __end_of_util_waits_delay_mins 3B34                            _util_getBatteryCurrent 3132  
                   __end_of_util_waits_delay_secs 38DC                                           strlen@s 0060  
                                   ??__tdiv_to_l_ 0066                                         _PORTAbits 000F80  
                                       _PORTBbits 000F81                                         _PORTDbits 000F83  
                         high_priority_int@sample 0014                            _util_getBatteryVoltage 32C4  
                __size_of_util_onewire_write_byte 01BC                          _util_getTemperature$2780 01B0  
                        _util_getTemperature$2777 01A7                          _util_getTemperature$2778 01AA  
                        _util_getTemperature$2779 01AD                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ?_init_initialize 0001                        __end_of_init_io_initialize 35B8  
                          ??_util_transmit_letter 0027                         _init_watchdogs_initialize 3D36  
                                     ___ftdiv@exp 0079                                       _CCP2CONbits 000F66  
           util_beacon_transmission@BEACON_BUFFER 0180                               __size_of__div_to_l_ 0188  
                                     ___ftmul@exp 007D                           ?_util_onewire_read_byte 0065  
                               _util_transmit_dot 3D82                        __size_of_high_priority_int 23DE  
                        ??_init_timer1_initialize 0027                                    __end_of___ftge 32C4  
                 __size_of_util_waits_delay_hours 0042                  high_priority_int@noise_avg_value 0034  
                                  __end_of___wmul 3BE2                                ?_util_transmit_dot 0001  
                                   __pidataCOMRAM 3E36                                    __end_of_memset 3C7E  
                                  __end_of_fround 1F40                                    __end_of_strcat 3A6C  
                                  __end_of_strcpy 3C4A                                    __end_of_strlen 393E  
                             start_initialization 393E                               ??_util_transmit_dot 0027  
                          util_waits_delay_mins@i 006F                            util_waits_delay_secs@i 0068  
                          util_waits_delay_secs@j 006A                                    _util_pwm_start 3E2E  
                             __end_of__tdiv_to_l_ 2740                          _util_beacon_transmission 2E4A  
                        ??_init_timer2_initialize 0027               util_beacon_transmission@temperature 00D3  
                                _low_priority_int 0018                                   ___llmod@divisor 0071  
                                 ___llmod@counter 0075                    __end_of_util_onewire_read_byte 28D4  
                       __end_of_util_transmit_dot 3D9E                           ?_util_onewire_write_bit 0060  
                                        ??___ftge 0066                                          ??___wmul 0027  
                             _util_getTemperature 0C48                                          ??_memset 0027  
                                        ??_fround 0027                                     sprintf@tmpval 00BC  
                                        ??_strcat 0027                                          ??_strcpy 0027  
                                        ??_strlen 0062                                        fround@prec 008C  
                          __end_of_util_pwm_start 3E36                                 __size_of___awtoft 0044  
                               __size_of___ftpack 010C                                 __size_of___lltoft 007C  
                                     __pbssCOMRAM 0027                                 __size_of___lwtoft 002A  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$2411 0061                             _util_onewire_read_bit 3B34  
                            ?_util_getTemperature 0099                            _util_waits_delay_hours 3AB0  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00B8  
                                     sprintf@fval 00C6             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00C9                    __end_of_util_onewire_write_bit 3C16  
                                       __pintcode 0008                                     __pmediumconst 7EF4  
                                        ?___awdiv 0066                                          ?___ftadd 008D  
                                        ?___awmod 0060                                          ?___ftdiv 006C  
                                        ?___ftneg 0060                                          ?___lldiv 0060  
                                        ?___ftmul 0074                                          ?___llmod 006D  
                                        ?___ftsub 0099                                         __npowers_ 7F44  
                                        ?___fttol 008A                   __size_of_init_timer1_initialize 0026  
                                     __pintcodelo 0018                                  __CFG_PRICLKEN$ON 000000  
                                     __tdiv_to_l_ 25A2                                      ??__div_to_l_ 0027  
                         _util_onewire_write_byte 23E6                                   ?_util_pwm_start 0001  
                                        ?_isdigit 0001                                         _main_loop 36F4  
                      high_priority_int@total_add 0029        high_priority_int@cycles_transmitter_active 002B  
                             _util_waits_delay_ms 3B70                             ??_util_getTemperature 009C  
                              _util_onewire_reset 398C                                          ?_sprintf 009F  
                                  __size_of_scale 04AE                   __size_of_init_timer2_initialize 001A  
                     util_getBatteryVoltage@value 0086                                    ___wmul@product 0072  
                                        _LATAbits 000F89                                          _LATBbits 000F8A  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0060  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 001C                                          i2u430_40 228C  
                                        i2u422_40 2206                                          i2u423_48 2208  
                                        i2u425_40 222E                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 2A5C                                          i2u426_48 2230  
                                        i2u437_40 2384                                          i2u437_45 237C  
                                        i2u438_40 23A2                                          i2u439_40 23A4  
              __size_of_init_watchdogs_initialize 0026                           ?_util_getBatteryCurrent 0099  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 0060           util_beacon_transmission@battery_current 00D1  
                         ?_util_getBatteryVoltage 0083                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 006E                              ??_util_onewire_reset 0062  
                      util_transmit_letter@letter 006C                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00CC                            ?_util_onewire_read_bit 0060  
                     util_getBatteryCurrent@value 009B                                         copy_data0 3952  
                          _init_timer1_initialize 3D5C                             util_waits_delay_ms@ms 0060  
                      __end_of_util_transmit_dash 3DBA            high_priority_int@is_transmitter_active 0033  
                  __end_of_util_getBatteryCurrent 31FC                                          __Hrparam 0000  
                    __size_of_util_pwm_initialize 0034                                _init_io_initialize 34FC  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 0062  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
               __end_of_init_watchdogs_initialize 3D5C                    __end_of_util_getBatteryVoltage 3382  
                          _init_timer2_initialize 3DBA                                  __size_of___awdiv 00BE  
                                __size_of___ftadd 0268                                  __size_of___awmod 00A2  
                                __size_of___ftdiv 014C                                  __size_of___ftneg 0030  
                           __end_of_util_pwm_stop 3E2E                                  __size_of___lldiv 00BC  
                                __size_of___ftmul 015E                         ??_util_onewire_write_byte 0064  
                                __size_of___llmod 009A                                  __size_of___ftsub 004C  
                                __size_of___fttol 0144                               ?_init_io_initialize 0001  
                                        ___awtoft 3A6C                                          ___ftpack 2F5C  
                                     _fround$2781 0089                                       _fround$2782 0086  
                        __end_of_low_priority_int 00A6                                          ___lltoft 3782  
                      ??_util_beacon_transmission 0027                             _util_waits_delay_mins 3AF2  
                           _util_waits_delay_secs 3872                                        _ANSELAbits 000F38  
                                        ___lwtoft 3CE2                                        _ANSELBbits 000F39  
                                      _ANSELDbits 000F3B                                        sprintf@exp 00C4  
                                      sprintf@val 00C0                                        strcat@from 0062  
                                __size_of_isdigit 002A                                          __ptext10 3B34  
                                        __ptext11 2BBA                                          __ptext20 3DFA  
                                        __ptext12 3A6C                                          __ptext21 37FE  
                                        __ptext13 3068                                          __ptext30 3A24  
                                        __ptext22 3E0A                                          __ptext14 32C4  
                                        __ptext31 00AA                                          __ptext23 3D82  
                                        __ptext15 3132                                          __ptext40 28D4  
                                        __ptext32 13F2                                          __ptext24 3D9E  
                                        __ptext16 3CE2                                          __ptext41 3782  
                                        __ptext33 3D0C                                          __ptext25 3B70  
                                        __ptext17 2E4A                                          __ptext50 3C4A  
                                        __ptext42 365A                                          __ptext34 1C94  
                                        __ptext26 3E26                                          __ptext18 18A0  
                                        __ptext51 3DD4                                          __ptext43 3440  
                                        __ptext35 3BAC                                          __ptext27 3E2E  
                                        __ptext19 3DEA                                          __ptext52 3C7E  
                                        __ptext44 2D06                                          __ptext36 2A5C  
                                        __ptext28 38DC                                          __ptext53 3D36  
                                        __ptext45 39D8                                          __ptext37 35B8  
                                        __ptext29 3C16                                          __ptext54 3DBA  
                                        __ptext46 1F40                                          __ptext38 3382  
                                        __ptext55 3D5C                                          __ptext47 2F5C  
                                        __ptext39 25A2                                          __ptext56 34FC  
                                        __ptext48 3CB2                                          __ptext49 31FC  
                                        __powers_ 7F1D                                  __size_of_sprintf 0B9E  
                            ??_init_io_initialize 0027                                        strcpy@from 0062  
                   __size_of_util_transmit_letter 03F4                  util_getSolarCurrent@solarCurrent 009E  
                        __size_of_init_initialize 0016                                     __size_of_main 000C  
                      util_onewire_reset@presence 0063                                      _PSTR2CONbits 000F63  
                                        int$flags 0039                     ?_util_transmit_morse_sequence 0066  
                   util_getBatteryVoltage@voltage 0089                                       ??_main_loop 0027  
                                      _INTCONbits 000FF2                           ?_util_waits_delay_hours 0071  
                                        isdigit@c 0062                                          memset@p1 0060  
                          main_loop@solar_current 00D9                                          scale@scl 0089  
                 __end_of_util_onewire_write_byte 25A2                                          intlevel1 0000  
                                        intlevel2 0000                                         sprintf@ap 00B6  
                                __tdiv_to_l_@exp1 006E                                         sprintf@sp 009F  
                                __tdiv_to_l_@cntr 006D                                  __tdiv_to_l_@quot 0069  
                                    _VREFCON0bits 000F42                                  ___lldiv@dividend 0060  
                                ??_util_pwm_start 0027                            ?_util_waits_delay_mins 006C  
                          ?_util_waits_delay_secs 0065                                      ?__tdiv_to_l_ 0060  
                                        sprintf@c 00CB                                          sprintf@f 00A1  
                                        strcat@cp 0064                                          strcat@to 0060  
                  __end_of_util_waits_delay_hours 3AF2                                  ___lldiv@quotient 0068  
                                        strcpy@cp 0064                                          strlen@cp 0064  
                                        strcpy@to 0060                                 __CFG_T3CMX$PORTB5 000000  
                        high_priority_int@samples 0200          high_priority_int@times_thresold_exceeded 002D  
            util_getBatteryCurrent@batteryCurrent 009E  
