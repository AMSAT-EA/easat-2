

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Apr 08 20:07:35 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 1.40
    77                           ; Generated 01/12/2016 GMT
    78                           ; 
    79                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F45K22 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  003CC6                     __pidataCOMRAM:
   113                           	opt stack 0
   114                           
   115                           ;initializer for high_priority_int@noise_mean_value
   116  003CC6  00                 	db	0
   117  003CC7  7D                 	db	125
   118  003CC8  00                 	db	0
   119                           
   120                           ;initializer for high_priority_int@activation_thresold
   121  003CC9  7D00               	dw	32000
   122                           
   123                           	psect	mediumconst
   124  007EF4                     __pmediumconst:
   125                           	opt stack 0
   126  007EF4  00                 	db	0
   127  007EF5                     _dpowers:
   128                           	opt stack 0
   129  007EF5  0001               	dw	1
   130  007EF7  0000               	dw	0
   131  007EF9  000A               	dw	10
   132  007EFB  0000               	dw	0
   133  007EFD  0064               	dw	100
   134  007EFF  0000               	dw	0
   135  007F01  03E8               	dw	1000
   136  007F03  0000               	dw	0
   137  007F05  2710               	dw	10000
   138  007F07  0000               	dw	0
   139  007F09  86A0               	dw	34464
   140  007F0B  0001               	dw	1
   141  007F0D  4240               	dw	16960
   142  007F0F  000F               	dw	15
   143  007F11  9680               	dw	38528
   144  007F13  0098               	dw	152
   145  007F15  E100               	dw	57600
   146  007F17  05F5               	dw	1525
   147  007F19  CA00               	dw	51712
   148  007F1B  3B9A               	dw	15258
   149  007F1D                     __end_of_dpowers:
   150                           	opt stack 0
   151  007F1D                     __npowers_:
   152                           	opt stack 0
   153  007F1D  00                 	db	0
   154  007F1E  80                 	db	128
   155  007F1F  3F                 	db	63
   156  007F20  CD                 	db	205
   157  007F21  CC                 	db	204
   158  007F22  3D                 	db	61
   159  007F23  D7                 	db	215
   160  007F24  23                 	db	35
   161  007F25  3C                 	db	60
   162  007F26  12                 	db	18
   163  007F27  83                 	db	131
   164  007F28  3A                 	db	58
   165  007F29  B7                 	db	183
   166  007F2A  D1                 	db	209
   167  007F2B  38                 	db	56
   168  007F2C  C6                 	db	198
   169  007F2D  27                 	db	39
   170  007F2E  37                 	db	55
   171  007F2F  38                 	db	56
   172  007F30  86                 	db	134
   173  007F31  35                 	db	53
   174  007F32  C0                 	db	192
   175  007F33  D6                 	db	214
   176  007F34  33                 	db	51
   177  007F35  CC                 	db	204
   178  007F36  2B                 	db	43
   179  007F37  32                 	db	50
   180  007F38  70                 	db	112
   181  007F39  89                 	db	137
   182  007F3A  30                 	db	48
   183  007F3B  E7                 	db	231
   184  007F3C  DB                 	db	219
   185  007F3D  2E                 	db	46
   186  007F3E  E5                 	db	229
   187  007F3F  3C                 	db	60
   188  007F40  1E                 	db	30
   189  007F41  42                 	db	66
   190  007F42  A2                 	db	162
   191  007F43  0D                 	db	13
   192  007F44                     __end_of__npowers_:
   193                           	opt stack 0
   194  007F44                     __powers_:
   195                           	opt stack 0
   196  007F44  00                 	db	0
   197  007F45  80                 	db	128
   198  007F46  3F                 	db	63
   199  007F47  00                 	db	0
   200  007F48  20                 	db	32
   201  007F49  41                 	db	65
   202  007F4A  00                 	db	0
   203  007F4B  C8                 	db	200
   204  007F4C  42                 	db	66
   205  007F4D  00                 	db	0
   206  007F4E  7A                 	db	122
   207  007F4F  44                 	db	68
   208  007F50  40                 	db	64
   209  007F51  1C                 	db	28
   210  007F52  46                 	db	70
   211  007F53  50                 	db	80
   212  007F54  C3                 	db	195
   213  007F55  47                 	db	71
   214  007F56  24                 	db	36
   215  007F57  74                 	db	116
   216  007F58  49                 	db	73
   217  007F59  97                 	db	151
   218  007F5A  18                 	db	24
   219  007F5B  4B                 	db	75
   220  007F5C  BC                 	db	188
   221  007F5D  BE                 	db	190
   222  007F5E  4C                 	db	76
   223  007F5F  6B                 	db	107
   224  007F60  6E                 	db	110
   225  007F61  4E                 	db	78
   226  007F62  03                 	db	3
   227  007F63  15                 	db	21
   228  007F64  50                 	db	80
   229  007F65  79                 	db	121
   230  007F66  AD                 	db	173
   231  007F67  60                 	db	96
   232  007F68  F3                 	db	243
   233  007F69  49                 	db	73
   234  007F6A  71                 	db	113
   235  007F6B                     __end_of__powers_:
   236                           	opt stack 0
   237  0000                     _ANSELAbits	set	3896
   238  0000                     _ANSELBbits	set	3897
   239  0000                     _ANSELDbits	set	3899
   240  0000                     _VREFCON0bits	set	3906
   241  0000                     _ADRES	set	4035
   242  0000                     _ADCON0bits	set	4034
   243  0000                     _ADCON1	set	4033
   244  0000                     _ADCON2	set	4032
   245  0000                     _INTCONbits	set	4082
   246  0000                     _IPR1bits	set	3999
   247  0000                     _LATAbits	set	3977
   248  0000                     _LATBbits	set	3978
   249  0000                     _LATDbits	set	3980
   250  0000                     _PIE1bits	set	3997
   251  0000                     _PIR1bits	set	3998
   252  0000                     _PORTAbits	set	3968
   253  0000                     _PORTBbits	set	3969
   254  0000                     _PORTDbits	set	3971
   255  0000                     _RCONbits	set	4048
   256  0000                     _T1CONbits	set	4045
   257  0000                     _TMR1H	set	4047
   258  0000                     _TMR1L	set	4046
   259  0000                     _TRISAbits	set	3986
   260  0000                     _TRISBbits	set	3987
   261  0000                     _TRISDbits	set	3989
   262  0000                     _WPUB	set	3937
   263  0000                     _RBPU	set	32655
   264  007F6B                     STR_2:
   265  007F6B  20                 	db	32
   266  007F6C  25                 	db	37
   267  007F6D  2E                 	db	46
   268  007F6E  31                 	db	49	;'1'
   269  007F6F  66                 	db	102	;'f'
   270  007F70  20                 	db	32
   271  007F71  25                 	db	37
   272  007F72  2E                 	db	46
   273  007F73  31                 	db	49	;'1'
   274  007F74  66                 	db	102	;'f'
   275  007F75  20                 	db	32
   276  007F76  25                 	db	37
   277  007F77  33                 	db	51	;'3'
   278  007F78  2E                 	db	46
   279  007F79  30                 	db	48	;'0'
   280  007F7A  64                 	db	100	;'d'
   281  007F7B  20                 	db	32
   282  007F7C  25                 	db	37
   283  007F7D  33                 	db	51	;'3'
   284  007F7E  2E                 	db	46
   285  007F7F  30                 	db	48	;'0'
   286  007F80  64                 	db	100	;'d'
   287  007F81  00                 	db	0
   288  007F82                     STR_39:
   289  007F82  2D                 	db	45
   290  007F83  2D                 	db	45
   291  007F84  2E                 	db	46
   292  007F85  2E                 	db	46
   293  007F86  2D                 	db	45
   294  007F87  2D                 	db	45
   295  007F88  00                 	db	0
   296  007F89                     STR_42:
   297  007F89  2E                 	db	46
   298  007F8A  2D                 	db	45
   299  007F8B  2E                 	db	46
   300  007F8C  2D                 	db	45
   301  007F8D  2E                 	db	46
   302  007F8E  2D                 	db	45
   303  007F8F  00                 	db	0
   304  007F90                     STR_43:
   305  007F90  2D                 	db	45
   306  007F91  2E                 	db	46
   307  007F92  2E                 	db	46
   308  007F93  2E                 	db	46
   309  007F94  2E                 	db	46
   310  007F95  2D                 	db	45
   311  007F96  00                 	db	0
   312  007F97                     STR_40:
   313  007F97  2E                 	db	46
   314  007F98  2E                 	db	46
   315  007F99  2D                 	db	45
   316  007F9A  2D                 	db	45
   317  007F9B  2E                 	db	46
   318  007F9C  2E                 	db	46
   319  007F9D  00                 	db	0
   320  007F9E                     STR_1:
   321  007F9E  45                 	db	69	;'E'
   322  007F9F  41                 	db	65	;'A'
   323  007FA0  53                 	db	83	;'S'
   324  007FA1  41                 	db	65	;'A'
   325  007FA2  54                 	db	84	;'T'
   326  007FA3  32                 	db	50	;'2'
   327  007FA4  00                 	db	0
   328  007FA5                     STR_29:
   329  007FA5  2D                 	db	45
   330  007FA6  2D                 	db	45
   331  007FA7  2D                 	db	45
   332  007FA8  2D                 	db	45
   333  007FA9  2D                 	db	45
   334  007FAA  00                 	db	0
   335  007FAB                     STR_30:
   336  007FAB  2E                 	db	46
   337  007FAC  2D                 	db	45
   338  007FAD  2D                 	db	45
   339  007FAE  2D                 	db	45
   340  007FAF  2D                 	db	45
   341  007FB0  00                 	db	0
   342  007FB1                     STR_31:
   343  007FB1  2E                 	db	46
   344  007FB2  2E                 	db	46
   345  007FB3  2D                 	db	45
   346  007FB4  2D                 	db	45
   347  007FB5  2D                 	db	45
   348  007FB6  00                 	db	0
   349  007FB7                     STR_32:
   350  007FB7  2E                 	db	46
   351  007FB8  2E                 	db	46
   352  007FB9  2E                 	db	46
   353  007FBA  2D                 	db	45
   354  007FBB  2D                 	db	45
   355  007FBC  00                 	db	0
   356  007FBD                     STR_38:
   357  007FBD  2D                 	db	45
   358  007FBE  2D                 	db	45
   359  007FBF  2D                 	db	45
   360  007FC0  2D                 	db	45
   361  007FC1  2E                 	db	46
   362  007FC2  00                 	db	0
   363  007FC3                     STR_41:
   364  007FC3  2D                 	db	45
   365  007FC4  2E                 	db	46
   366  007FC5  2E                 	db	46
   367  007FC6  2D                 	db	45
   368  007FC7  2E                 	db	46
   369  007FC8  00                 	db	0
   370  007FC9                     STR_37:
   371  007FC9  2D                 	db	45
   372  007FCA  2D                 	db	45
   373  007FCB  2D                 	db	45
   374  007FCC  2E                 	db	46
   375  007FCD  2E                 	db	46
   376  007FCE  00                 	db	0
   377  007FCF                     STR_36:
   378  007FCF  2D                 	db	45
   379  007FD0  2D                 	db	45
   380  007FD1  2E                 	db	46
   381  007FD2  2E                 	db	46
   382  007FD3  2E                 	db	46
   383  007FD4  00                 	db	0
   384  007FD5                     STR_35:
   385  007FD5  2D                 	db	45
   386  007FD6  2E                 	db	46
   387  007FD7  2E                 	db	46
   388  007FD8  2E                 	db	46
   389  007FD9  2E                 	db	46
   390  007FDA  00                 	db	0
   391  007FDB                     STR_34:
   392  007FDB  2E                 	db	46
   393  007FDC  2E                 	db	46
   394  007FDD  2E                 	db	46
   395  007FDE  2E                 	db	46
   396  007FDF  2E                 	db	46
   397  007FE0  00                 	db	0
   398  007FE1                     STR_27:
   399  007FE1  2D                 	db	45
   400  007FE2  2E                 	db	46
   401  007FE3  2D                 	db	45
   402  007FE4  2D                 	db	45
   403  007FE5  00                 	db	0
   404  007FE6                     STR_19:
   405  007FE6  2D                 	db	45
   406  007FE7  2D                 	db	45
   407  007FE8  2E                 	db	46
   408  007FE9  2D                 	db	45
   409  007FEA  00                 	db	0
   410  007FEB                     STR_26:
   411  007FEB  2D                 	db	45
   412  007FEC  2E                 	db	46
   413  007FED  2E                 	db	46
   414  007FEE  2D                 	db	45
   415  007FEF  00                 	db	0
   416  007FF0                     STR_18:
   417  007FF0  2E                 	db	46
   418  007FF1  2D                 	db	45
   419  007FF2  2D                 	db	45
   420  007FF3  2E                 	db	46
   421  007FF4  00                 	db	0
   422  007FF5                     STR_5:
   423  007FF5  2D                 	db	45
   424  007FF6  2E                 	db	46
   425  007FF7  2D                 	db	45
   426  007FF8  2E                 	db	46
   427  007FF9  00                 	db	0
   428  007FFA                     STR_14:
   429  007FFA  2E                 	db	46
   430  007FFB  2D                 	db	45
   431  007FFC  2E                 	db	46
   432  007FFD  2E                 	db	46
   433  007FFE  00                 	db	0
   434  0000                     
   435                           ; #config settings
   436  007FFF  00                 	db	0	; dummy byte at the end
   437  0000                     
   438                           	psect	cinit
   439  003878                     __pcinit:
   440                           	opt stack 0
   441  003878                     start_initialization:
   442                           	opt stack 0
   443  003878                     __initialization:
   444                           	opt stack 0
   445                           
   446                           ; Initialize objects allocated to COMRAM (5 bytes)
   447                           ; load TBLPTR registers with __pidataCOMRAM
   448  003878  0EC6               	movlw	low __pidataCOMRAM
   449  00387A  6EF6               	movwf	tblptrl,c
   450  00387C  0E3C               	movlw	high __pidataCOMRAM
   451  00387E  6EF7               	movwf	tblptrh,c
   452  003880  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   453  003882  6EF8               	movwf	tblptru,c
   454  003884  EE00  F039         	lfsr	0,__pdataCOMRAM
   455  003888  EE10 F005          	lfsr	1,5
   456  00388C                     copy_data0:
   457  00388C  0009               	tblrd		*+
   458  00388E  CFF5 FFEE          	movff	tablat,postinc0
   459  003892  50E5               	movf	postdec1,w,c
   460  003894  50E1               	movf	fsr1l,w,c
   461  003896  E1FA               	bnz	copy_data0
   462                           
   463                           ; Clear objects allocated to BANK2 (200 bytes)
   464  003898  EE02  F000         	lfsr	0,__pbssBANK2
   465  00389C  0EC8               	movlw	200
   466  00389E                     clear_0:
   467  00389E  6AEE               	clrf	postinc0,c
   468  0038A0  06E8               	decf	wreg,f,c
   469  0038A2  E1FD               	bnz	clear_0
   470                           
   471                           ; Clear objects allocated to COMRAM (12 bytes)
   472  0038A4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   473  0038A8  0E0C               	movlw	12
   474  0038AA                     clear_1:
   475  0038AA  6AEE               	clrf	postinc0,c
   476  0038AC  06E8               	decf	wreg,f,c
   477  0038AE  E1FD               	bnz	clear_1
   478  0038B0                     end_of_initialization:
   479                           	opt stack 0
   480  0038B0                     __end_of__initialization:
   481                           	opt stack 0
   482  0038B0  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   483  0038B2  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   484  0038B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   485  0038B6  6EF8               	movwf	tblptru,c
   486  0038B8  0100               	movlb	0
   487  0038BA  EF58  F01E         	goto	_main	;jump to C main() function
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	bssCOMRAM
   498  00002D                     __pbssCOMRAM:
   499                           	opt stack 0
   500  00002D                     _tmr1_interrupt_number:
   501                           	opt stack 0
   502  00002D                     	ds	2
   503  00002F                     high_priority_int@cycles_transmitter_active:
   504                           	opt stack 0
   505  00002F                     	ds	2
   506  000031                     high_priority_int@is_transmitter_active:
   507                           	opt stack 0
   508  000031                     	ds	2
   509  000033                     high_priority_int@sample_position:
   510                           	opt stack 0
   511  000033                     	ds	2
   512  000035                     high_priority_int@times_thresold_exceeded:
   513                           	opt stack 0
   514  000035                     	ds	2
   515  000037                     high_priority_int@valid_samples:
   516                           	opt stack 0
   517  000037                     	ds	2
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	dataCOMRAM
   528  000039                     __pdataCOMRAM:
   529                           	opt stack 0
   530  000039                     high_priority_int@noise_mean_value:
   531                           	opt stack 0
   532  000039                     	ds	3
   533  00003C                     high_priority_int@activation_thresold:
   534                           	opt stack 0
   535  00003C                     	ds	2
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545                           	psect	bssBANK2
   546  000200                     __pbssBANK2:
   547                           	opt stack 0
   548  000200                     high_priority_int@samples:
   549                           	opt stack 0
   550  000200                     	ds	200
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           tblptrl	equ	0xFF6
   554                           tablat	equ	0xFF5
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1l	equ	0xFE1
   559                           
   560                           	psect	cstackBANK1
   561  000100                     __pcstackBANK1:
   562                           	opt stack 0
   563  000100                     util_beacon_transmission@BEACON_MESSAGE:
   564                           	opt stack 0
   565  000100                     util_getTemperature@bit_mem:
   566                           	opt stack 0
   567                           
   568                           ; 144 bytes @ 0x0
   569  000100                     	ds	128
   570  000180                     util_beacon_transmission@BEACON_BUFFER:
   571                           	opt stack 0
   572                           
   573                           ; 64 bytes @ 0x80
   574  000180                     	ds	16
   575  000190                     util_getTemperature@byte_mem:
   576                           	opt stack 0
   577                           
   578                           ; 18 bytes @ 0x90
   579  000190                     	ds	18
   580  0001A2                     util_getTemperature@num_bit:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0xA2
   584  0001A2                     	ds	2
   585  0001A4                     util_getTemperature@sign:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0xA4
   589  0001A4                     	ds	3
   590  0001A7                     _util_getTemperature$2419:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0xA7
   594  0001A7                     	ds	3
   595  0001AA                     _util_getTemperature$2420:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0xAA
   599  0001AA                     	ds	3
   600  0001AD                     _util_getTemperature$2421:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0xAD
   604  0001AD                     	ds	3
   605  0001B0                     _util_getTemperature$2422:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0xB0
   609  0001B0                     	ds	3
   610  0001B3                     util_getTemperature@shift_reg_bit0:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0xB3
   614  0001B3                     	ds	2
   615  0001B5                     util_getTemperature@shift_reg_bit1:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0xB5
   619  0001B5                     	ds	2
   620  0001B7                     util_getTemperature@shift_reg_bit2:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0xB7
   624  0001B7                     	ds	2
   625  0001B9                     util_getTemperature@shift_reg_bit3:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0xB9
   629  0001B9                     	ds	2
   630  0001BB                     util_getTemperature@shift_reg_bit4:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0xBB
   634  0001BB                     	ds	2
   635  0001BD                     util_getTemperature@shift_reg_bit5:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0xBD
   639  0001BD                     	ds	2
   640  0001BF                     util_getTemperature@shift_reg_bit6:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0xBF
   644  0001BF                     	ds	1
   645  0001C0                     util_beacon_transmission@i:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xC0
   649  0001C0                     	ds	1
   650  0001C1                     util_getTemperature@shift_reg_bit7:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0xC1
   654  0001C1                     	ds	2
   655  0001C3                     util_getTemperature@shift_reg_bit_temp:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0xC3
   659  0001C3                     	ds	2
   660  0001C5                     util_getTemperature@num_byte:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0xC5
   664  0001C5                     	ds	2
   665  0001C7                     util_getTemperature@bit_in_byte:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0xC7
   669  0001C7                     	ds	2
   670  0001C9                     util_getTemperature@temperature:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0xC9
   674  0001C9                     	ds	3
   675  0001CC                     util_getTemperature@i:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0xCC
   679  0001CC                     	ds	2
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1l	equ	0xFE1
   688                           
   689                           	psect	cstackBANK0
   690  000060                     __pcstackBANK0:
   691                           	opt stack 0
   692  000060                     ??_low_priority_int:
   693                           
   694                           ; 1 bytes @ 0x0
   695  000060                     	ds	17
   696  000071                     ?_util_onewire_reset:
   697                           	opt stack 0
   698  000071                     ?_util_onewire_read_bit:
   699                           	opt stack 0
   700  000071                     ?_strlen:
   701                           	opt stack 0
   702  000071                     ?___awmod:
   703                           	opt stack 0
   704  000071                     ?___ftpack:
   705                           	opt stack 0
   706  000071                     ?___ftneg:
   707                           	opt stack 0
   708  000071                     ?__tdiv_to_l_:
   709                           	opt stack 0
   710  000071                     ?__div_to_l_:
   711                           	opt stack 0
   712  000071                     ?___lldiv:
   713                           	opt stack 0
   714  000071                     util_onewire_write_bit@bit_in:
   715                           	opt stack 0
   716  000071                     util_waits_delay_ms@ms:
   717                           	opt stack 0
   718  000071                     util_waits_delay_hundred_us@hun_us:
   719                           	opt stack 0
   720  000071                     ___awmod@dividend:
   721                           	opt stack 0
   722  000071                     memset@p1:
   723                           	opt stack 0
   724  000071                     strcat@to:
   725                           	opt stack 0
   726  000071                     strcpy@to:
   727                           	opt stack 0
   728  000071                     strlen@s:
   729                           	opt stack 0
   730  000071                     __div_to_l_@f1:
   731                           	opt stack 0
   732  000071                     ___ftpack@arg:
   733                           	opt stack 0
   734  000071                     __tdiv_to_l_@f1:
   735                           	opt stack 0
   736  000071                     ___ftge@ff1:
   737                           	opt stack 0
   738  000071                     ___ftneg@f1:
   739                           	opt stack 0
   740  000071                     ___lldiv@dividend:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x11
   744  000071                     	ds	2
   745  000073                     ?_util_onewire_read_byte:
   746                           	opt stack 0
   747  000073                     util_onewire_write_byte@value:
   748                           	opt stack 0
   749  000073                     util_transmit_morse_sequence@morse_sequence:
   750                           	opt stack 0
   751  000073                     util_waits_delay_secs@secs:
   752                           	opt stack 0
   753  000073                     ___awmod@divisor:
   754                           	opt stack 0
   755  000073                     memset@c:
   756                           	opt stack 0
   757  000073                     strcat@from:
   758                           	opt stack 0
   759  000073                     strcpy@from:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x13
   763  000073                     	ds	1
   764  000074                     ___ftpack@exp:
   765                           	opt stack 0
   766  000074                     __div_to_l_@f2:
   767                           	opt stack 0
   768  000074                     __tdiv_to_l_@f2:
   769                           	opt stack 0
   770  000074                     ___ftge@ff2:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x14
   774  000074                     	ds	1
   775  000075                     ??_util_onewire_read_byte:
   776  000075                     ?___awdiv:
   777                           	opt stack 0
   778  000075                     ___ftpack@sign:
   779                           	opt stack 0
   780  000075                     util_onewire_write_byte@bit0:
   781                           	opt stack 0
   782  000075                     util_waits_delay_mins@minutes:
   783                           	opt stack 0
   784  000075                     ___awdiv@dividend:
   785                           	opt stack 0
   786  000075                     memset@n:
   787                           	opt stack 0
   788  000075                     ___lldiv@divisor:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x15
   792  000075                     	ds	1
   793  000076                     ?___awtoft:
   794                           	opt stack 0
   795  000076                     ?___lltoft:
   796                           	opt stack 0
   797  000076                     ?___lwtoft:
   798                           	opt stack 0
   799  000076                     ___awtoft@c:
   800                           	opt stack 0
   801  000076                     ___lwtoft@c:
   802                           	opt stack 0
   803  000076                     ___lltoft@c:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x16
   807  000076                     	ds	1
   808  000077                     util_onewire_write_byte@bit1:
   809                           	opt stack 0
   810  000077                     util_waits_delay_hours@hours:
   811                           	opt stack 0
   812  000077                     ___awdiv@divisor:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x17
   816  000077                     	ds	2
   817  000079                     ??_util_waits_delay_hours:
   818  000079                     ?___wmul:
   819                           	opt stack 0
   820  000079                     ?___ftdiv:
   821                           	opt stack 0
   822  000079                     ?___llmod:
   823                           	opt stack 0
   824  000079                     util_onewire_write_byte@bit2:
   825                           	opt stack 0
   826  000079                     ___wmul@multiplier:
   827                           	opt stack 0
   828  000079                     ___ftdiv@f1:
   829                           	opt stack 0
   830  000079                     ___llmod@dividend:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x19
   834  000079                     	ds	1
   835  00007A                     util_waits_delay_hours@i:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x1A
   839  00007A                     	ds	1
   840  00007B                     util_onewire_write_byte@bit3:
   841                           	opt stack 0
   842  00007B                     ___wmul@multiplicand:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x1B
   846  00007B                     	ds	1
   847  00007C                     ___ftdiv@f2:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x1C
   851  00007C                     	ds	1
   852  00007D                     ?___ftmul:
   853                           	opt stack 0
   854  00007D                     util_onewire_write_byte@bit4:
   855                           	opt stack 0
   856  00007D                     ___ftmul@f1:
   857                           	opt stack 0
   858  00007D                     ___llmod@divisor:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x1D
   862  00007D                     	ds	2
   863  00007F                     ___ftdiv@cntr:
   864                           	opt stack 0
   865  00007F                     util_onewire_write_byte@bit5:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x1F
   869  00007F                     	ds	1
   870  000080                     ___ftdiv@f3:
   871                           	opt stack 0
   872  000080                     ___ftmul@f2:
   873                           	opt stack 0
   874                           
   875                           ; 3 bytes @ 0x20
   876  000080                     	ds	1
   877  000081                     util_onewire_write_byte@bit6:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x21
   881  000081                     	ds	2
   882  000083                     ___ftdiv@exp:
   883                           	opt stack 0
   884  000083                     ___ftmul@exp:
   885                           	opt stack 0
   886  000083                     util_onewire_write_byte@bit7:
   887                           	opt stack 0
   888  000083                     util_onewire_read_byte@bit0:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x23
   892  000083                     	ds	1
   893  000084                     ___ftdiv@sign:
   894                           	opt stack 0
   895  000084                     ___ftmul@f3_as_product:
   896                           	opt stack 0
   897                           
   898                           ; 3 bytes @ 0x24
   899  000084                     	ds	1
   900  000085                     util_onewire_read_byte@bit1:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904  000085                     	ds	2
   905  000087                     ___ftmul@cntr:
   906                           	opt stack 0
   907  000087                     util_onewire_read_byte@bit2:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x27
   911  000087                     	ds	1
   912  000088                     ___ftmul@sign:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x28
   916  000088                     	ds	1
   917  000089                     ?_util_getBatteryVoltage:
   918                           	opt stack 0
   919  000089                     ?_fround:
   920                           	opt stack 0
   921  000089                     ?_scale:
   922                           	opt stack 0
   923  000089                     util_onewire_read_byte@bit3:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x29
   927  000089                     	ds	2
   928  00008B                     util_onewire_read_byte@bit4:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x2B
   932  00008B                     	ds	1
   933  00008C                     util_getBatteryVoltage@value:
   934                           	opt stack 0
   935  00008C                     _fround$2424:
   936                           	opt stack 0
   937  00008C                     _scale$2425:
   938                           	opt stack 0
   939                           
   940                           ; 3 bytes @ 0x2C
   941  00008C                     	ds	1
   942  00008D                     util_onewire_read_byte@bit5:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x2D
   946  00008D                     	ds	2
   947  00008F                     scale@scl:
   948                           	opt stack 0
   949  00008F                     util_onewire_read_byte@bit6:
   950                           	opt stack 0
   951  00008F                     util_getBatteryVoltage@voltage:
   952                           	opt stack 0
   953  00008F                     _fround$2423:
   954                           	opt stack 0
   955                           
   956                           ; 3 bytes @ 0x2F
   957  00008F                     	ds	1
   958  000090                     ?___fttol:
   959                           	opt stack 0
   960  000090                     ___fttol@f1:
   961                           	opt stack 0
   962                           
   963                           ; 3 bytes @ 0x30
   964  000090                     	ds	1
   965  000091                     util_onewire_read_byte@bit7:
   966                           	opt stack 0
   967                           
   968                           ; 2 bytes @ 0x31
   969  000091                     	ds	1
   970  000092                     fround@prec:
   971                           	opt stack 0
   972                           
   973                           ; 1 bytes @ 0x32
   974  000092                     	ds	1
   975  000093                     ?___ftadd:
   976                           	opt stack 0
   977  000093                     util_onewire_read_byte@value:
   978                           	opt stack 0
   979  000093                     ___ftadd@f1:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x33
   983  000093                     	ds	1
   984  000094                     ??___fttol:
   985                           
   986                           ; 1 bytes @ 0x34
   987  000094                     	ds	2
   988  000096                     ___ftadd@f2:
   989                           	opt stack 0
   990                           
   991                           ; 3 bytes @ 0x36
   992  000096                     	ds	3
   993  000099                     ??___ftadd:
   994  000099                     ___fttol@sign1:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x39
   998  000099                     	ds	1
   999  00009A                     ___fttol@lval:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x3A
  1003  00009A                     	ds	2
  1004  00009C                     ___ftadd@sign:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x3C
  1008  00009C                     	ds	1
  1009  00009D                     ___ftadd@exp2:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x3D
  1013  00009D                     	ds	1
  1014  00009E                     ___ftadd@exp1:
  1015                           	opt stack 0
  1016  00009E                     ___fttol@exp1:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x3E
  1020  00009E                     	ds	1
  1021  00009F                     ?_util_getSolarCurrent:
  1022                           	opt stack 0
  1023  00009F                     ?_util_getBatteryCurrent:
  1024                           	opt stack 0
  1025  00009F                     ?_util_getTemperature:
  1026                           	opt stack 0
  1027  00009F                     ?___ftsub:
  1028                           	opt stack 0
  1029  00009F                     ___ftsub@f1:
  1030                           	opt stack 0
  1031                           
  1032                           ; 3 bytes @ 0x3F
  1033  00009F                     	ds	2
  1034  0000A1                     util_getSolarCurrent@value:
  1035                           	opt stack 0
  1036  0000A1                     util_getBatteryCurrent@value:
  1037                           	opt stack 0
  1038                           
  1039                           ; 3 bytes @ 0x41
  1040  0000A1                     	ds	1
  1041  0000A2                     ??_util_getTemperature:
  1042  0000A2                     ___ftsub@f2:
  1043                           	opt stack 0
  1044                           
  1045                           ; 3 bytes @ 0x42
  1046  0000A2                     	ds	2
  1047  0000A4                     util_getSolarCurrent@solarCurrent:
  1048                           	opt stack 0
  1049  0000A4                     util_getBatteryCurrent@batteryCurrent:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x44
  1053  0000A4                     	ds	1
  1054  0000A5                     ?_sprintf:
  1055                           	opt stack 0
  1056  0000A5                     sprintf@sp:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x45
  1060  0000A5                     	ds	2
  1061  0000A7                     sprintf@f:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x47
  1065  0000A7                     	ds	12
  1066  0000B3                     ??_sprintf:
  1067                           
  1068                           ; 1 bytes @ 0x53
  1069  0000B3                     	ds	6
  1070  0000B9                     _sprintf$2426:
  1071                           	opt stack 0
  1072                           
  1073                           ; 3 bytes @ 0x59
  1074  0000B9                     	ds	3
  1075  0000BC                     sprintf@ap:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x5C
  1079  0000BC                     	ds	2
  1080  0000BE                     sprintf@flag:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x5E
  1084  0000BE                     	ds	2
  1085  0000C0                     sprintf@width:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x60
  1089  0000C0                     	ds	2
  1090  0000C2                     sprintf@tmpval:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0x62
  1094  0000C2                     	ds	4
  1095  0000C6                     sprintf@val:
  1096                           	opt stack 0
  1097                           
  1098                           ; 4 bytes @ 0x66
  1099  0000C6                     	ds	4
  1100  0000CA                     sprintf@exp:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x6A
  1104  0000CA                     	ds	2
  1105  0000CC                     sprintf@fval:
  1106                           	opt stack 0
  1107                           
  1108                           ; 3 bytes @ 0x6C
  1109  0000CC                     	ds	3
  1110  0000CF                     sprintf@prec:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x6F
  1114  0000CF                     	ds	2
  1115  0000D1                     sprintf@c:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x71
  1119  0000D1                     	ds	1
  1120  0000D2                     util_beacon_transmission@battery_voltage:
  1121                           	opt stack 0
  1122                           
  1123                           ; 3 bytes @ 0x72
  1124  0000D2                     	ds	3
  1125  0000D5                     util_beacon_transmission@solar_current:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x75
  1129  0000D5                     	ds	2
  1130  0000D7                     util_beacon_transmission@battery_current:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x77
  1134  0000D7                     	ds	2
  1135  0000D9                     util_beacon_transmission@temperature:
  1136                           	opt stack 0
  1137                           
  1138                           ; 3 bytes @ 0x79
  1139  0000D9                     	ds	3
  1140  0000DC                     main_loop@temperature:
  1141                           	opt stack 0
  1142                           
  1143                           ; 3 bytes @ 0x7C
  1144  0000DC                     	ds	3
  1145  0000DF                     main_loop@solar_current:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x7F
  1149  0000DF                     	ds	2
  1150  0000E1                     main_loop@battery_current:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x81
  1154  0000E1                     	ds	2
  1155  0000E3                     main_loop@battery_voltage:
  1156                           	opt stack 0
  1157                           
  1158                           ; 3 bytes @ 0x83
  1159  0000E3                     	ds	3
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           fsr1l	equ	0xFE1
  1168                           
  1169                           	psect	cstackCOMRAM
  1170  000001                     __pcstackCOMRAM:
  1171                           	opt stack 0
  1172  000001                     ?___ltdiv:
  1173                           	opt stack 0
  1174  000001                     ___ltdiv@dividend:
  1175                           	opt stack 0
  1176                           
  1177                           ; 3 bytes @ 0x0
  1178  000001                     	ds	3
  1179  000004                     ___ltdiv@divisor:
  1180                           	opt stack 0
  1181                           
  1182                           ; 3 bytes @ 0x3
  1183  000004                     	ds	3
  1184  000007                     ___ltdiv@quotient:
  1185                           	opt stack 0
  1186                           
  1187                           ; 3 bytes @ 0x6
  1188  000007                     	ds	3
  1189  00000A                     ___ltdiv@counter:
  1190                           	opt stack 0
  1191                           
  1192                           ; 1 bytes @ 0x9
  1193  00000A                     	ds	1
  1194  00000B                     ??_high_priority_int:
  1195                           
  1196                           ; 1 bytes @ 0xA
  1197  00000B                     	ds	19
  1198  00001E                     high_priority_int@sample:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x1D
  1202  00001E                     	ds	2
  1203  000020                     high_priority_int@i:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x1F
  1207  000020                     	ds	2
  1208  000022                     ??_util_onewire_reset:
  1209  000022                     ??_util_onewire_write_byte:
  1210  000022                     ??_util_onewire_read_bit:
  1211  000022                     ??_strlen:
  1212  000022                     ??_util_waits_delay_ms:
  1213  000022                     ??_util_waits_delay_hundred_us:
  1214  000022                     ??_isdigit:
  1215  000022                     ??__tdiv_to_l_:
  1216  000022                     ??___ftpack:
  1217  000022                     ??___ftge:
  1218  000022                     ___awmod@counter:
  1219                           	opt stack 0
  1220  000022                     memset@p:
  1221                           	opt stack 0
  1222  000022                     strcat@cp:
  1223                           	opt stack 0
  1224  000022                     strcpy@cp:
  1225                           	opt stack 0
  1226  000022                     __div_to_l_@quot:
  1227                           	opt stack 0
  1228  000022                     ___lldiv@quotient:
  1229                           	opt stack 0
  1230                           
  1231                           ; 4 bytes @ 0x21
  1232  000022                     	ds	1
  1233  000023                     ___awmod@sign:
  1234                           	opt stack 0
  1235  000023                     _isdigit$2065:
  1236                           	opt stack 0
  1237  000023                     util_onewire_reset@presence:
  1238                           	opt stack 0
  1239  000023                     util_onewire_read_bit@value:
  1240                           	opt stack 0
  1241  000023                     util_waits_delay_ms@i:
  1242                           	opt stack 0
  1243  000023                     util_waits_delay_hundred_us@i:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x22
  1247  000023                     	ds	1
  1248  000024                     ___awdiv@counter:
  1249                           	opt stack 0
  1250  000024                     isdigit@c:
  1251                           	opt stack 0
  1252  000024                     strlen@cp:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x23
  1256  000024                     	ds	1
  1257  000025                     ??_util_waits_delay_secs:
  1258  000025                     ??___lltoft:
  1259  000025                     ___awdiv@sign:
  1260                           	opt stack 0
  1261  000025                     ___awtoft@sign:
  1262                           	opt stack 0
  1263  000025                     util_transmit_dot@i:
  1264                           	opt stack 0
  1265  000025                     util_transmit_dash@i:
  1266                           	opt stack 0
  1267  000025                     __tdiv_to_l_@quot:
  1268                           	opt stack 0
  1269                           
  1270                           ; 4 bytes @ 0x24
  1271  000025                     	ds	1
  1272  000026                     ??___ftdiv:
  1273  000026                     __div_to_l_@cntr:
  1274                           	opt stack 0
  1275  000026                     ___lldiv@counter:
  1276                           	opt stack 0
  1277  000026                     util_waits_delay_secs@i:
  1278                           	opt stack 0
  1279  000026                     ___awdiv@quotient:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0x25
  1283  000026                     	ds	1
  1284  000027                     ??_util_transmit_morse_sequence:
  1285  000027                     __div_to_l_@exp1:
  1286                           	opt stack 0
  1287  000027                     ___llmod@counter:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x26
  1291  000027                     	ds	1
  1292  000028                     util_waits_delay_secs@j:
  1293                           	opt stack 0
  1294  000028                     ___wmul@product:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x27
  1298  000028                     	ds	1
  1299  000029                     __tdiv_to_l_@cntr:
  1300                           	opt stack 0
  1301  000029                     ___lltoft@exp:
  1302                           	opt stack 0
  1303  000029                     util_transmit_morse_sequence@i:
  1304                           	opt stack 0
  1305                           
  1306                           ; 2 bytes @ 0x28
  1307  000029                     	ds	1
  1308  00002A                     ??_util_waits_delay_mins:
  1309  00002A                     ??___ftmul:
  1310  00002A                     __tdiv_to_l_@exp1:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x29
  1314  00002A                     	ds	1
  1315  00002B                     util_transmit_letter@letter:
  1316                           	opt stack 0
  1317  00002B                     util_waits_delay_mins@i:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x2A
  1321  00002B                     	ds	2
  1322  00002D                     tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331                           ; 1 bytes @ 0x2C
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 19 in file "easat2_main_mcu.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1351 ;;      Params:         0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels required when called:   10
  1357 ;; This function calls:
  1358 ;;		_initialize
  1359 ;;		_main_loop
  1360 ;; This function is called by:
  1361 ;;		Startup code after reset
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text0
  1366  003CB0                     __ptext0:
  1367                           	opt stack 0
  1368  003CB0                     _main:
  1369                           	opt stack 21
  1370                           
  1371                           ;easat2_main_mcu.c: 22: initialize();
  1372                           
  1373                           ;incstack = 0
  1374  003CB0  EC5E  F01E         	call	_initialize	;wreg free
  1375                           
  1376                           ;easat2_main_mcu.c: 25: main_loop();
  1377  003CB4  ECE0  F01A         	call	_main_loop	;wreg free
  1378  003CB8  EF53  F000         	goto	start
  1379  003CBC                     __end_of_main:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           
  1390 ;; *************** function _main_loop *****************
  1391 ;; Defined at:
  1392 ;;		line 31 in file "easat2_main_mcu.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  battery_volt    3  131[BANK0 ] float 
  1397 ;;  temperature     3  124[BANK0 ] float 
  1398 ;;  battery_curr    2  129[BANK0 ] int 
  1399 ;;  solar_curren    2  127[BANK0 ] int 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1409 ;;      Params:         0       0       0       0       0       0       0
  1410 ;;      Locals:         0      10       0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0
  1412 ;;      Totals:         0      10       0       0       0       0       0
  1413 ;;Total ram usage:       10 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    9
  1416 ;; This function calls:
  1417 ;;		_util_beacon_transmission
  1418 ;;		_util_getBatteryCurrent
  1419 ;;		_util_getBatteryVoltage
  1420 ;;		_util_getSolarCurrent
  1421 ;;		_util_getTemperature
  1422 ;;		_util_waits_delay_hours
  1423 ;;		_util_waits_delay_mins
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text1
  1430  0035C0                     __ptext1:
  1431                           	opt stack 0
  1432  0035C0                     _main_loop:
  1433                           	opt stack 21
  1434  0035C0                     l24:
  1435  0035C0  0004               	clrwdt		;# 
  1436                           
  1437                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1438  0035C2  EC88  F018         	call	_util_getBatteryVoltage	;wreg free
  1439  0035C6  C089  F0E3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1440  0035CA  C08A  F0E4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1441  0035CE  C08B  F0E5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1442                           
  1443                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1444  0035D2  ECBE  F017         	call	_util_getSolarCurrent	;wreg free
  1445  0035D6  C09F  F0DF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1446  0035DA  C0A0  F0E0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1447                           
  1448                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1449  0035DE  EC23  F018         	call	_util_getBatteryCurrent	;wreg free
  1450  0035E2  C09F  F0E1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1451  0035E6  C0A0  F0E2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1452                           
  1453                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1454  0035EA  EC24  F006         	call	_util_getTemperature	;wreg free
  1455  0035EE  C09F  F0DC         	movff	?_util_getTemperature,main_loop@temperature
  1456  0035F2  C0A0  F0DD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1457  0035F6  C0A1  F0DE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1458                           
  1459                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1460  0035FA  0100               	movlb	0	; () banked
  1461  0035FC  BFE5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1462  0035FE  D017               	goto	l6246
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1466  003600  C0E3  F0D2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1467  003604  C0E4  F0D3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1468  003608  C0E5  F0D4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1469  00360C  C0DF  F0D5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1470  003610  C0E0  F0D6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1471  003614  C0E1  F0D7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1472  003618  C0E2  F0D8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1473  00361C  C0DC  F0D9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1474  003620  C0DD  F0DA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1475  003624  C0DE  F0DB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1476  003628  ECBB  F016         	call	_util_beacon_transmission	;wreg free
  1477                           
  1478                           ;easat2_main_mcu.c: 62: } else {
  1479  00362C  D007               	goto	l26
  1480  00362E                     l6246:
  1481                           
  1482                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1483  00362E  0E00               	movlw	0
  1484  003630  0100               	movlb	0	; () banked
  1485  003632  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1486  003634  0E02               	movlw	2
  1487  003636  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1488  003638  EC81  F01C         	call	_util_waits_delay_hours	;wreg free
  1489  00363C                     l26:
  1490                           
  1491                           ;easat2_main_mcu.c: 65: }
  1492                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1493  00363C  0E00               	movlw	0
  1494  00363E  0100               	movlb	0	; () banked
  1495  003640  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1496  003642  0E03               	movlw	3
  1497  003644  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1498  003646  ECE3  F01C         	call	_util_waits_delay_mins	;wreg free
  1499                           
  1500                           ;easat2_main_mcu.c: 71: } while (1);
  1501  00364A  D7BA               	goto	l24
  1502  00364C                     __end_of_main_loop:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           postinc0	equ	0xFEE
  1509                           wreg	equ	0xFE8
  1510                           postdec1	equ	0xFE5
  1511                           fsr1l	equ	0xFE1
  1512                           
  1513 ;; *************** function _util_waits_delay_hours *****************
  1514 ;; Defined at:
  1515 ;;		line 17 in file "easat2_util_waits.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  hours           2   23[BANK0 ] int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  i               2   26[BANK0 ] int 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1529 ;;      Params:         0       2       0       0       0       0       0
  1530 ;;      Locals:         0       2       0       0       0       0       0
  1531 ;;      Temps:          0       1       0       0       0       0       0
  1532 ;;      Totals:         0       5       0       0       0       0       0
  1533 ;;Total ram usage:        5 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    6
  1536 ;; This function calls:
  1537 ;;		_util_waits_delay_mins
  1538 ;; This function is called by:
  1539 ;;		_main_loop
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text2
  1544  003902                     __ptext2:
  1545                           	opt stack 0
  1546  003902                     _util_waits_delay_hours:
  1547                           	opt stack 23
  1548                           
  1549                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1550                           
  1551                           ;incstack = 0
  1552  003902  0E00               	movlw	0
  1553  003904  0100               	movlb	0	; () banked
  1554  003906  6F7B               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1555  003908  0E00               	movlw	0
  1556  00390A  6F7A               	movwf	util_waits_delay_hours@i& (0+255),b
  1557  00390C  D00A               	goto	l6092
  1558  00390E                     l6088:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1562  00390E  0E00               	movlw	0
  1563  003910  0100               	movlb	0	; () banked
  1564  003912  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1565  003914  0E3C               	movlw	60
  1566  003916  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1567  003918  ECE3  F01C         	call	_util_waits_delay_mins	;wreg free
  1568  00391C  0100               	movlb	0	; () banked
  1569  00391E  4B7A               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1570  003920  2B7B               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1571  003922                     l6092:
  1572                           
  1573                           ; BSR set to: 0
  1574  003922  0100               	movlb	0	; () banked
  1575  003924  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1576  003926  0100               	movlb	0	; () banked
  1577  003928  5D7A               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1578  00392A  0100               	movlb	0	; () banked
  1579  00392C  517B               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1580  00392E  0A80               	xorlw	128
  1581  003930  0100               	movlb	0	; () banked
  1582  003932  6F79               	movwf	??_util_waits_delay_hours& (0+255),b
  1583  003934  0100               	movlb	0	; () banked
  1584  003936  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1585  003938  0A80               	xorlw	128
  1586  00393A  0100               	movlb	0	; () banked
  1587  00393C  5979               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1588  00393E  B0D8               	btfsc	status,0,c
  1589  003940  0012               	return	
  1590  003942  D7E5               	goto	l6088
  1591  003944                     __end_of_util_waits_delay_hours:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           postdec1	equ	0xFE5
  1600                           fsr1l	equ	0xFE1
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _util_waits_delay_mins *****************
  1604 ;; Defined at:
  1605 ;;		line 24 in file "easat2_util_waits.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  minutes         2   21[BANK0 ] int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  i               2   42[COMRAM] int 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         0       2       0       0       0       0       0
  1620 ;;      Locals:         2       0       0       0       0       0       0
  1621 ;;      Temps:          1       0       0       0       0       0       0
  1622 ;;      Totals:         3       2       0       0       0       0       0
  1623 ;;Total ram usage:        5 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    5
  1626 ;; This function calls:
  1627 ;;		_util_waits_delay_secs
  1628 ;; This function is called by:
  1629 ;;		_main_loop
  1630 ;;		_util_waits_delay_hours
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text3
  1635  0039C6                     __ptext3:
  1636                           	opt stack 0
  1637  0039C6                     _util_waits_delay_mins:
  1638                           	opt stack 24
  1639                           
  1640                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;incstack = 0
  1644  0039C6  0E00               	movlw	0
  1645  0039C8  6E2C               	movwf	util_waits_delay_mins@i+1,c
  1646  0039CA  0E00               	movlw	0
  1647  0039CC  6E2B               	movwf	util_waits_delay_mins@i,c
  1648  0039CE  D009               	goto	l5318
  1649  0039D0                     l5314:
  1650                           
  1651                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1652  0039D0  0E00               	movlw	0
  1653  0039D2  0100               	movlb	0	; () banked
  1654  0039D4  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1655  0039D6  0E3C               	movlw	60
  1656  0039D8  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1657  0039DA  ECEC  F01B         	call	_util_waits_delay_secs	;wreg free
  1658  0039DE  4A2B               	infsnz	util_waits_delay_mins@i,f,c
  1659  0039E0  2A2C               	incf	util_waits_delay_mins@i+1,f,c
  1660  0039E2                     l5318:
  1661  0039E2  0100               	movlb	0	; () banked
  1662  0039E4  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1663  0039E6  5C2B               	subwf	util_waits_delay_mins@i,w,c
  1664  0039E8  502C               	movf	util_waits_delay_mins@i+1,w,c
  1665  0039EA  0A80               	xorlw	128
  1666  0039EC  6E2A               	movwf	??_util_waits_delay_mins& (0+255),c
  1667  0039EE  0100               	movlb	0	; () banked
  1668  0039F0  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1669  0039F2  0A80               	xorlw	128
  1670  0039F4  582A               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1671  0039F6  B0D8               	btfsc	status,0,c
  1672  0039F8  0012               	return	
  1673  0039FA  D7EA               	goto	l5314
  1674  0039FC                     __end_of_util_waits_delay_mins:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1l	equ	0xFE1
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function _util_getTemperature *****************
  1687 ;; Defined at:
  1688 ;;		line 118 in file "easat2_util_inputs.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  bit_mem       144    0[BANK1 ] int [72]
  1693 ;;  byte_mem       18  144[BANK1 ] int [9]
  1694 ;;  temperature     3  201[BANK1 ] float 
  1695 ;;  sign            3  164[BANK1 ] float 
  1696 ;;  i               2  204[BANK1 ] int 
  1697 ;;  bit_in_byte     2  199[BANK1 ] int 
  1698 ;;  num_byte        2  197[BANK1 ] int 
  1699 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1700 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1701 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1702 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1703 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1704 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1705 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1706 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1707 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1708 ;;  num_bit         2  162[BANK1 ] int 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  3   63[BANK0 ] float 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1718 ;;      Params:         0       3       0       0       0       0       0
  1719 ;;      Locals:         0       0     206       0       0       0       0
  1720 ;;      Temps:          0       3       0       0       0       0       0
  1721 ;;      Totals:         0       6     206       0       0       0       0
  1722 ;;Total ram usage:      212 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    5
  1725 ;; This function calls:
  1726 ;;		___awtoft
  1727 ;;		___ftadd
  1728 ;;		___ftdiv
  1729 ;;		___ftmul
  1730 ;;		_util_onewire_read_byte
  1731 ;;		_util_onewire_reset
  1732 ;;		_util_onewire_write_byte
  1733 ;;		_util_waits_delay_secs
  1734 ;; This function is called by:
  1735 ;;		_main_loop
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text4
  1740  000C48                     __ptext4:
  1741                           	opt stack 0
  1742  000C48                     _util_getTemperature:
  1743                           	opt stack 24
  1744                           
  1745                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1746                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1747                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;incstack = 0
  1751  000C48  0E00               	movlw	0
  1752  000C4A  0101               	movlb	1	; () banked
  1753  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1754  000C4E  0E00               	movlw	0
  1755  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1756                           
  1757                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1758  000C52  0E00               	movlw	0
  1759  000C54  0101               	movlb	1	; () banked
  1760  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1761  000C58  0E00               	movlw	0
  1762  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1763                           
  1764                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1765  000C5C  0E00               	movlw	0
  1766  000C5E  0101               	movlb	1	; () banked
  1767  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1768  000C62  0E00               	movlw	0
  1769  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1770                           
  1771                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1772  000C66  0E00               	movlw	0
  1773  000C68  0101               	movlb	1	; () banked
  1774  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1775  000C6C  0E00               	movlw	0
  1776  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1777                           
  1778                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1779  000C70  0E00               	movlw	0
  1780  000C72  0101               	movlb	1	; () banked
  1781  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1782  000C76  0E00               	movlw	0
  1783  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1784                           
  1785                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1786  000C7A  0E00               	movlw	0
  1787  000C7C  0101               	movlb	1	; () banked
  1788  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1789  000C80  0E00               	movlw	0
  1790  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1791                           
  1792                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1793  000C84  0E00               	movlw	0
  1794  000C86  0101               	movlb	1	; () banked
  1795  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1796  000C8A  0E00               	movlw	0
  1797  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1798                           
  1799                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1800  000C8E  0E00               	movlw	0
  1801  000C90  0101               	movlb	1	; () banked
  1802  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1803  000C94  0E00               	movlw	0
  1804  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1805                           
  1806                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1807  000C98  0E00               	movlw	0
  1808  000C9A  0101               	movlb	1	; () banked
  1809  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1810  000C9E  0E00               	movlw	0
  1811  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1812                           
  1813                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1814  000CA2  0E00               	movlw	0
  1815  000CA4  0101               	movlb	1	; () banked
  1816  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1817  000CA8  0E00               	movlw	0
  1818  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1819  000CAC  0E00               	movlw	0
  1820  000CAE  0101               	movlb	1	; () banked
  1821  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1822  000CB2  0E00               	movlw	0
  1823  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1824  000CB6  0E00               	movlw	0
  1825  000CB8  0101               	movlb	1	; () banked
  1826  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1827  000CBC  0E00               	movlw	0
  1828  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1829                           
  1830                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1831  000CC0  0E00               	movlw	0
  1832  000CC2  0101               	movlb	1	; () banked
  1833  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1834  000CC6  0E00               	movlw	0
  1835  000CC8  0101               	movlb	1	; () banked
  1836  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1837  000CCC  0E00               	movlw	0
  1838  000CCE  0101               	movlb	1	; () banked
  1839  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1840                           
  1841                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1842  000CD2  0E00               	movlw	0
  1843  000CD4  0101               	movlb	1	; () banked
  1844  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1845  000CD8  0E80               	movlw	128
  1846  000CDA  0101               	movlb	1	; () banked
  1847  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1848  000CDE  0E3F               	movlw	63
  1849  000CE0  0101               	movlb	1	; () banked
  1850  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1851                           
  1852                           ;easat2_util_inputs.c: 137: int i = 0;
  1853  000CE4  0E00               	movlw	0
  1854  000CE6  0101               	movlb	1	; () banked
  1855  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1856  000CEA  0E00               	movlw	0
  1857  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1861  000CEE  ECA2  F01C         	call	_util_onewire_reset	;wreg free
  1862  000CF2  0100               	movlb	0	; () banked
  1863  000CF4  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1864  000CF6  0100               	movlb	0	; () banked
  1865  000CF8  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1866  000CFA  B4D8               	btfsc	status,2,c
  1867  000CFC  D00A               	goto	l5936
  1868                           
  1869                           ; BSR set to: 0
  1870  000CFE  0E33               	movlw	51
  1871  000D00  0100               	movlb	0	; () banked
  1872  000D02  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1873  000D04  0EC6               	movlw	198
  1874  000D06  0100               	movlb	0	; () banked
  1875  000D08  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1876  000D0A  0EC2               	movlw	194
  1877  000D0C  0100               	movlb	0	; () banked
  1878  000D0E  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1879                           
  1880                           ; BSR set to: 0
  1881  000D10  0012               	return	
  1882  000D12                     l5936:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1886  000D12  0E00               	movlw	0
  1887  000D14  0100               	movlb	0	; () banked
  1888  000D16  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1889  000D18  0ECC               	movlw	204
  1890  000D1A  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1891  000D1C  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1892                           
  1893                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1894  000D20  0E00               	movlw	0
  1895  000D22  0100               	movlb	0	; () banked
  1896  000D24  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1897  000D26  0E44               	movlw	68
  1898  000D28  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1899  000D2A  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  1900                           
  1901                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1902  000D2E  8692               	bsf	3986,3,c	;volatile
  1903                           
  1904                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1905  000D30  0E00               	movlw	0
  1906  000D32  0101               	movlb	1	; () banked
  1907  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1908  000D36  0E00               	movlw	0
  1909  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1910  000D3A  D00A               	goto	l5946
  1911  000D3C                     l5942:
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1915  000D3C  0E00               	movlw	0
  1916  000D3E  0100               	movlb	0	; () banked
  1917  000D40  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1918  000D42  0E01               	movlw	1
  1919  000D44  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1920  000D46  ECEC  F01B         	call	_util_waits_delay_secs	;wreg free
  1921  000D4A  0101               	movlb	1	; () banked
  1922  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1923  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1924  000D50                     l5946:
  1925                           
  1926                           ; BSR set to: 1
  1927  000D50  0101               	movlb	1	; () banked
  1928  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1929  000D54  D008               	goto	l5948
  1930  000D56  0101               	movlb	1	; () banked
  1931  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1932  000D5A  E107               	bnz	l5950
  1933  000D5C  0E05               	movlw	5
  1934  000D5E  0101               	movlb	1	; () banked
  1935  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1936  000D62  B0D8               	btfsc	status,0,c
  1937  000D64  D002               	goto	l5950
  1938  000D66                     l5948:
  1939                           
  1940                           ; BSR set to: 1
  1941  000D66  A680               	btfss	3968,3,c	;volatile
  1942  000D68  D7E9               	goto	l5942
  1943  000D6A                     l5950:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1947  000D6A  0E05               	movlw	5
  1948  000D6C  0101               	movlb	1	; () banked
  1949  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1950  000D70  0101               	movlb	1	; () banked
  1951  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1952  000D74  A4D8               	btfss	status,2,c
  1953  000D76  D00A               	goto	l5956
  1954                           
  1955                           ; BSR set to: 1
  1956  000D78  0E66               	movlw	102
  1957  000D7A  0100               	movlb	0	; () banked
  1958  000D7C  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1959  000D7E  0EC6               	movlw	198
  1960  000D80  0100               	movlb	0	; () banked
  1961  000D82  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1962  000D84  0EC2               	movlw	194
  1963  000D86  0100               	movlb	0	; () banked
  1964  000D88  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967  000D8A  0012               	return	
  1968  000D8C                     l5956:
  1969                           
  1970                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1971  000D8C  ECA2  F01C         	call	_util_onewire_reset	;wreg free
  1972  000D90  0100               	movlb	0	; () banked
  1973  000D92  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1974  000D94  0100               	movlb	0	; () banked
  1975  000D96  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1976  000D98  B4D8               	btfsc	status,2,c
  1977  000D9A  D00A               	goto	l5962
  1978                           
  1979                           ; BSR set to: 0
  1980  000D9C  0E9A               	movlw	154
  1981  000D9E  0100               	movlb	0	; () banked
  1982  000DA0  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1983  000DA2  0EC6               	movlw	198
  1984  000DA4  0100               	movlb	0	; () banked
  1985  000DA6  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1986  000DA8  0EC2               	movlw	194
  1987  000DAA  0100               	movlb	0	; () banked
  1988  000DAC  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1989                           
  1990                           ; BSR set to: 0
  1991  000DAE  0012               	return	
  1992  000DB0                     l5962:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1996  000DB0  0E00               	movlw	0
  1997  000DB2  0100               	movlb	0	; () banked
  1998  000DB4  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1999  000DB6  0ECC               	movlw	204
  2000  000DB8  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  2001  000DBA  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2002                           
  2003                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  2004  000DBE  0E00               	movlw	0
  2005  000DC0  0100               	movlb	0	; () banked
  2006  000DC2  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  2007  000DC4  0EBE               	movlw	190
  2008  000DC6  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  2009  000DC8  ECA9  F012         	call	_util_onewire_write_byte	;wreg free
  2010                           
  2011                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  2012  000DCC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2013  000DD0  C073  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2014  000DD4  C074  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2015                           
  2016                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  2017  000DD8  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2018  000DDC  C073  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2019  000DE0  C074  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2020                           
  2021                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  2022  000DE4  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2023  000DE8  C073  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2024  000DEC  C074  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2025                           
  2026                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  2027  000DF0  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2028  000DF4  C073  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2029  000DF8  C074  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2030                           
  2031                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2032  000DFC  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2033  000E00  C073  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2034  000E04  C074  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2035                           
  2036                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2037  000E08  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2038  000E0C  C073  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2039  000E10  C074  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2040                           
  2041                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2042  000E14  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2043  000E18  C073  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2044  000E1C  C074  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2045                           
  2046                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2047  000E20  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2048  000E24  C073  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2049  000E28  C074  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2050                           
  2051                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2052  000E2C  ECDF  F011         	call	_util_onewire_read_byte	;wreg free
  2053  000E30  C073  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2054  000E34  C074  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2055                           
  2056                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2057  000E38  0E00               	movlw	0
  2058  000E3A  0101               	movlb	1	; () banked
  2059  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2060  000E3E  0E00               	movlw	0
  2061  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2062  000E42                     l5966:
  2063                           
  2064                           ; BSR set to: 1
  2065  000E42  0101               	movlb	1	; () banked
  2066  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2067  000E46  D008               	goto	l5970
  2068  000E48  0101               	movlb	1	; () banked
  2069  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2070  000E4C  E14F               	bnz	l5988
  2071  000E4E  0E09               	movlw	9
  2072  000E50  0101               	movlb	1	; () banked
  2073  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2074  000E54  B0D8               	btfsc	status,0,c
  2075  000E56  D04A               	goto	l5988
  2076  000E58                     l5970:
  2077                           
  2078                           ; BSR set to: 1
  2079                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2080  000E58  0E00               	movlw	0
  2081  000E5A  0101               	movlb	1	; () banked
  2082  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2083  000E5E  0E00               	movlw	0
  2084  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2085  000E62                     l5972:
  2086                           
  2087                           ; BSR set to: 1
  2088  000E62  0101               	movlb	1	; () banked
  2089  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2090  000E66  D008               	goto	l5976
  2091  000E68  0101               	movlb	1	; () banked
  2092  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2093  000E6C  E13B               	bnz	l5984
  2094  000E6E  0E08               	movlw	8
  2095  000E70  0101               	movlb	1	; () banked
  2096  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2097  000E74  B0D8               	btfsc	status,0,c
  2098  000E76  D036               	goto	l5984
  2099  000E78                     l5976:
  2100                           
  2101                           ; BSR set to: 1
  2102                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2103  000E78  C1C7  F0A2         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2104  000E7C  90D8               	bcf	status,0,c
  2105  000E7E  0101               	movlb	1	; () banked
  2106  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2107  000E82  6ED9               	movwf	fsr2l,c
  2108  000E84  0101               	movlb	1	; () banked
  2109  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2110  000E88  6EDA               	movwf	fsr2h,c
  2111  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2112  000E8C  26D9               	addwf	fsr2l,f,c
  2113  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2114  000E90  22DA               	addwfc	fsr2h,f,c
  2115  000E92  CFDE F0A3          	movff	postinc2,??_util_getTemperature+1
  2116  000E96  CFDD F0A4          	movff	postdec2,??_util_getTemperature+2
  2117  000E9A  0100               	movlb	0	; () banked
  2118  000E9C  2BA2               	incf	??_util_getTemperature& (0+255),f,b
  2119  000E9E  D004               	goto	u6184
  2120  000EA0                     u6185:
  2121  000EA0  0100               	movlb	0	; () banked
  2122  000EA2  35A4               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2123  000EA4  33A4               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2124  000EA6  33A3               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2125  000EA8                     u6184:
  2126  000EA8  0100               	movlb	0	; () banked
  2127  000EAA  2FA2               	decfsz	??_util_getTemperature& (0+255),f,b
  2128  000EAC  D7F9               	goto	u6185
  2129  000EAE  0E01               	movlw	1
  2130  000EB0  0100               	movlb	0	; () banked
  2131  000EB2  17A3               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2132  000EB4  0E00               	movlw	0
  2133  000EB6  17A4               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2134  000EB8  90D8               	bcf	status,0,c
  2135  000EBA  0101               	movlb	1	; () banked
  2136  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2137  000EBE  6ED9               	movwf	fsr2l,c
  2138  000EC0  0101               	movlb	1	; () banked
  2139  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2140  000EC4  6EDA               	movwf	fsr2h,c
  2141  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2142  000EC8  26D9               	addwf	fsr2l,f,c
  2143  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2144  000ECC  22DA               	addwfc	fsr2h,f,c
  2145  000ECE  C0A3  FFDE         	movff	??_util_getTemperature+1,postinc2
  2146  000ED2  C0A4  FFDD         	movff	??_util_getTemperature+2,postdec2
  2147                           
  2148                           ; BSR set to: 1
  2149  000ED6  0101               	movlb	1	; () banked
  2150  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2151  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2152                           
  2153                           ; BSR set to: 1
  2154  000EDC  0101               	movlb	1	; () banked
  2155  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2156  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2157  000EE2  D7BF               	goto	l5972
  2158  000EE4                     l5984:
  2159                           
  2160                           ; BSR set to: 1
  2161  000EE4  0101               	movlb	1	; () banked
  2162  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2163  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2164  000EEA  D7AB               	goto	l5966
  2165  000EEC                     l5988:
  2166                           
  2167                           ; BSR set to: 1
  2168                           ;easat2_util_inputs.c: 205: }
  2169                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2170  000EEC  0E00               	movlw	0
  2171  000EEE  0101               	movlb	1	; () banked
  2172  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2173  000EF2  0E00               	movlw	0
  2174  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2175  000EF6                     l5990:
  2176                           
  2177                           ; BSR set to: 1
  2178  000EF6  0101               	movlb	1	; () banked
  2179  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2180  000EFA  D008               	goto	l5994
  2181  000EFC  0101               	movlb	1	; () banked
  2182  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2183  000F00  E154               	bnz	l6016
  2184  000F02  0E48               	movlw	72
  2185  000F04  0101               	movlb	1	; () banked
  2186  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2187  000F08  B0D8               	btfsc	status,0,c
  2188  000F0A  D04F               	goto	l6016
  2189  000F0C                     l5994:
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2193  000F0C  90D8               	bcf	status,0,c
  2194  000F0E  0101               	movlb	1	; () banked
  2195  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2196  000F12  6ED9               	movwf	fsr2l,c
  2197  000F14  0101               	movlb	1	; () banked
  2198  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2199  000F18  6EDA               	movwf	fsr2h,c
  2200  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2201  000F1C  26D9               	addwf	fsr2l,f,c
  2202  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2203  000F20  22DA               	addwfc	fsr2h,f,c
  2204  000F22  CFDE F0A2          	movff	postinc2,??_util_getTemperature
  2205  000F26  CFDD F0A3          	movff	postdec2,??_util_getTemperature+1
  2206  000F2A  0101               	movlb	1	; () banked
  2207  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2208  000F2E  0100               	movlb	0	; () banked
  2209  000F30  19A2               	xorwf	??_util_getTemperature& (0+255),w,b
  2210  000F32  0101               	movlb	1	; () banked
  2211  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2212  000F36  0101               	movlb	1	; () banked
  2213  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2214  000F3A  0100               	movlb	0	; () banked
  2215  000F3C  19A3               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2216  000F3E  0101               	movlb	1	; () banked
  2217  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2218                           
  2219                           ; BSR set to: 1
  2220                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2221  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2222  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2223                           
  2224                           ; BSR set to: 1
  2225                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2226  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2227  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2231  000F52  0101               	movlb	1	; () banked
  2232  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2233  000F56  0101               	movlb	1	; () banked
  2234  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2235  000F5A  0101               	movlb	1	; () banked
  2236  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2237  000F5E  0101               	movlb	1	; () banked
  2238  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2239  000F62  0101               	movlb	1	; () banked
  2240  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2241  000F66  0101               	movlb	1	; () banked
  2242  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2246  000F6A  0101               	movlb	1	; () banked
  2247  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2248  000F6E  0101               	movlb	1	; () banked
  2249  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2250  000F72  0101               	movlb	1	; () banked
  2251  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2252  000F76  0101               	movlb	1	; () banked
  2253  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2254  000F7A  0101               	movlb	1	; () banked
  2255  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2256  000F7E  0101               	movlb	1	; () banked
  2257  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2261  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2262  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2266  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2267  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2271  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2272  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2276  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2277  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2278                           
  2279                           ; BSR set to: 1
  2280  000FA2  0101               	movlb	1	; () banked
  2281  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2282  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2283  000FA8  D7A6               	goto	l5990
  2284  000FAA                     l6016:
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;easat2_util_inputs.c: 225: }
  2288                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2289                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2290                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2291  000FAA  0101               	movlb	1	; () banked
  2292  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2293  000FAE  0101               	movlb	1	; () banked
  2294  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2295  000FB2  A4D8               	btfss	status,2,c
  2296  000FB4  D02A               	goto	l6032
  2297                           
  2298                           ; BSR set to: 1
  2299  000FB6  0101               	movlb	1	; () banked
  2300  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2301  000FBA  0101               	movlb	1	; () banked
  2302  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2303  000FBE  A4D8               	btfss	status,2,c
  2304  000FC0  D024               	goto	l6032
  2305                           
  2306                           ; BSR set to: 1
  2307  000FC2  0101               	movlb	1	; () banked
  2308  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2309  000FC6  0101               	movlb	1	; () banked
  2310  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2311  000FCA  B4D8               	btfsc	status,2,c
  2312  000FCC  D006               	goto	l6024
  2313                           
  2314                           ; BSR set to: 1
  2315  000FCE  0101               	movlb	1	; () banked
  2316  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2317  000FD2  0101               	movlb	1	; () banked
  2318  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2319  000FD6  A4D8               	btfss	status,2,c
  2320  000FD8  D018               	goto	l6032
  2321  000FDA                     l6024:
  2322                           
  2323                           ; BSR set to: 1
  2324  000FDA  0101               	movlb	1	; () banked
  2325  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2326  000FDE  0101               	movlb	1	; () banked
  2327  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2328  000FE2  A4D8               	btfss	status,2,c
  2329  000FE4  D012               	goto	l6032
  2330                           
  2331                           ; BSR set to: 1
  2332  000FE6  0101               	movlb	1	; () banked
  2333  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2334  000FEA  0101               	movlb	1	; () banked
  2335  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2336  000FEE  B4D8               	btfsc	status,2,c
  2337  000FF0  D006               	goto	l6030
  2338                           
  2339                           ; BSR set to: 1
  2340  000FF2  0101               	movlb	1	; () banked
  2341  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2342  000FF6  0101               	movlb	1	; () banked
  2343  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2344  000FFA  A4D8               	btfss	status,2,c
  2345  000FFC  D006               	goto	l6032
  2346  000FFE                     l6030:
  2347                           
  2348                           ; BSR set to: 1
  2349  000FFE  0101               	movlb	1	; () banked
  2350  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2351  001002  0101               	movlb	1	; () banked
  2352  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2353  001006  B4D8               	btfsc	status,2,c
  2354  001008  D00A               	goto	l6036
  2355  00100A                     l6032:
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;easat2_util_inputs.c: 232: return -99.7;
  2359  00100A  0E66               	movlw	102
  2360  00100C  0100               	movlb	0	; () banked
  2361  00100E  6F9F               	movwf	?_util_getTemperature& (0+255),b
  2362  001010  0EC7               	movlw	199
  2363  001012  0100               	movlb	0	; () banked
  2364  001014  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  2365  001016  0EC2               	movlw	194
  2366  001018  0100               	movlb	0	; () banked
  2367  00101A  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  2368                           
  2369                           ; BSR set to: 0
  2370  00101C  0012               	return	
  2371  00101E                     l6036:
  2372                           
  2373                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2374  00101E  0101               	movlb	1	; () banked
  2375  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2376  001022  0101               	movlb	1	; () banked
  2377  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2378  001026  A4D8               	btfss	status,2,c
  2379  001028  D008               	goto	l6040
  2380                           
  2381                           ; BSR set to: 1
  2382  00102A  0E00               	movlw	0
  2383  00102C  0101               	movlb	1	; () banked
  2384  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2385  001030  0E80               	movlw	128
  2386  001032  0101               	movlb	1	; () banked
  2387  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2388  001036  0E3F               	movlw	63
  2389  001038  D007               	goto	L1
  2390  00103A                     l6040:
  2391                           
  2392                           ; BSR set to: 1
  2393  00103A  0E00               	movlw	0
  2394  00103C  0101               	movlb	1	; () banked
  2395  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2396  001040  0E80               	movlw	128
  2397  001042  0101               	movlb	1	; () banked
  2398  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2399  001046  0EBF               	movlw	191
  2400  001048                     L1:
  2401  001048  0101               	movlb	1	; () banked
  2402  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2406                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2407                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2408                           
  2409                           ; BSR set to: 1
  2410  00104C  0E00               	movlw	0
  2411  00104E  0100               	movlb	0	; () banked
  2412  001050  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2413  001052  0E00               	movlw	0
  2414  001054  0100               	movlb	0	; () banked
  2415  001056  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2416  001058  0E41               	movlw	65
  2417  00105A  0100               	movlb	0	; () banked
  2418  00105C  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2419  00105E  C102  F076         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2420  001062  C103  F077         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2421  001066  ECC3  F01C         	call	___awtoft	;wreg free
  2422  00106A  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2423  00106E  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2424  001072  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2425  001076  EC1B  F016         	call	___ftdiv	;wreg free
  2426  00107A  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2427  00107E  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2428  001082  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2429  001086  0E00               	movlw	0
  2430  001088  0100               	movlb	0	; () banked
  2431  00108A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2432  00108C  0E80               	movlw	128
  2433  00108E  0100               	movlb	0	; () banked
  2434  001090  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2435  001092  0E41               	movlw	65
  2436  001094  0100               	movlb	0	; () banked
  2437  001096  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2438  001098  C100  F076         	movff	util_getTemperature@bit_mem,___awtoft@c
  2439  00109C  C101  F077         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2440  0010A0  ECC3  F01C         	call	___awtoft	;wreg free
  2441  0010A4  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2442  0010A8  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2443  0010AC  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2444  0010B0  EC1B  F016         	call	___ftdiv	;wreg free
  2445  0010B4  C079  F093         	movff	?___ftdiv,___ftadd@f1
  2446  0010B8  C07A  F094         	movff	?___ftdiv+1,___ftadd@f1+1
  2447  0010BC  C07B  F095         	movff	?___ftdiv+2,___ftadd@f1+2
  2448  0010C0  EC9A  F00F         	call	___ftadd	;wreg free
  2449  0010C4  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2419
  2450  0010C8  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2419+1
  2451  0010CC  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2419+2
  2452                           
  2453                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2454                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2455                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2456  0010D0  0E00               	movlw	0
  2457  0010D2  0100               	movlb	0	; () banked
  2458  0010D4  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2459  0010D6  0E80               	movlw	128
  2460  0010D8  0100               	movlb	0	; () banked
  2461  0010DA  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2462  0010DC  0E40               	movlw	64
  2463  0010DE  0100               	movlb	0	; () banked
  2464  0010E0  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2465  0010E2  C104  F076         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2466  0010E6  C105  F077         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2467  0010EA  ECC3  F01C         	call	___awtoft	;wreg free
  2468  0010EE  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2469  0010F2  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2470  0010F6  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2471  0010FA  EC1B  F016         	call	___ftdiv	;wreg free
  2472  0010FE  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2473  001102  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2474  001106  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2475  00110A  C1A7  F093         	movff	_util_getTemperature$2419,___ftadd@f1
  2476  00110E  C1A8  F094         	movff	_util_getTemperature$2419+1,___ftadd@f1+1
  2477  001112  C1A9  F095         	movff	_util_getTemperature$2419+2,___ftadd@f1+2
  2478  001116  EC9A  F00F         	call	___ftadd	;wreg free
  2479  00111A  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2420
  2480  00111E  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2420+1
  2481  001122  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2420+2
  2482                           
  2483                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2484                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2485                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2486  001126  0E00               	movlw	0
  2487  001128  0100               	movlb	0	; () banked
  2488  00112A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2489  00112C  0E00               	movlw	0
  2490  00112E  0100               	movlb	0	; () banked
  2491  001130  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2492  001132  0E40               	movlw	64
  2493  001134  0100               	movlb	0	; () banked
  2494  001136  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2495  001138  C106  F076         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2496  00113C  C107  F077         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2497  001140  ECC3  F01C         	call	___awtoft	;wreg free
  2498  001144  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2499  001148  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2500  00114C  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2501  001150  EC1B  F016         	call	___ftdiv	;wreg free
  2502  001154  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2503  001158  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2504  00115C  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2505  001160  C1AA  F093         	movff	_util_getTemperature$2420,___ftadd@f1
  2506  001164  C1AB  F094         	movff	_util_getTemperature$2420+1,___ftadd@f1+1
  2507  001168  C1AC  F095         	movff	_util_getTemperature$2420+2,___ftadd@f1+2
  2508  00116C  EC9A  F00F         	call	___ftadd	;wreg free
  2509  001170  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2421
  2510  001174  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2421+1
  2511  001178  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2421+2
  2512                           
  2513                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2514                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2515                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2516  00117C  C108  F076         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2517  001180  C109  F077         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2518  001184  ECC3  F01C         	call	___awtoft	;wreg free
  2519  001188  C076  F096         	movff	?___awtoft,___ftadd@f2
  2520  00118C  C077  F097         	movff	?___awtoft+1,___ftadd@f2+1
  2521  001190  C078  F098         	movff	?___awtoft+2,___ftadd@f2+2
  2522  001194  C1AD  F093         	movff	_util_getTemperature$2421,___ftadd@f1
  2523  001198  C1AE  F094         	movff	_util_getTemperature$2421+1,___ftadd@f1+1
  2524  00119C  C1AF  F095         	movff	_util_getTemperature$2421+2,___ftadd@f1+2
  2525  0011A0  EC9A  F00F         	call	___ftadd	;wreg free
  2526  0011A4  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2422
  2527  0011A8  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2422+1
  2528  0011AC  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2422+2
  2529                           
  2530                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2531                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2532                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2533  0011B0  C1B0  F093         	movff	_util_getTemperature$2422,___ftadd@f1
  2534  0011B4  C1B1  F094         	movff	_util_getTemperature$2422+1,___ftadd@f1+1
  2535  0011B8  C1B2  F095         	movff	_util_getTemperature$2422+2,___ftadd@f1+2
  2536  0011BC  0E00               	movlw	0
  2537  0011BE  0100               	movlb	0	; () banked
  2538  0011C0  6F80               	movwf	___ftmul@f2& (0+255),b
  2539  0011C2  0E00               	movlw	0
  2540  0011C4  0100               	movlb	0	; () banked
  2541  0011C6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2542  0011C8  0E40               	movlw	64
  2543  0011CA  0100               	movlb	0	; () banked
  2544  0011CC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2545  0011CE  C10A  F076         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2546  0011D2  C10B  F077         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2547  0011D6  ECC3  F01C         	call	___awtoft	;wreg free
  2548  0011DA  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2549  0011DE  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2550  0011E2  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2551  0011E6  ECD0  F014         	call	___ftmul	;wreg free
  2552  0011EA  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2553  0011EE  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2554  0011F2  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2555  0011F6  EC9A  F00F         	call	___ftadd	;wreg free
  2556  0011FA  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2557  0011FE  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2558  001202  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2559                           
  2560                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2561                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2562                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2563                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2564  001206  0E00               	movlw	0
  2565  001208  0100               	movlb	0	; () banked
  2566  00120A  6F80               	movwf	___ftmul@f2& (0+255),b
  2567  00120C  0E00               	movlw	0
  2568  00120E  0100               	movlb	0	; () banked
  2569  001210  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2570  001212  0E41               	movlw	65
  2571  001214  0100               	movlb	0	; () banked
  2572  001216  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2573  001218  C10E  F076         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2574  00121C  C10F  F077         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2575  001220  ECC3  F01C         	call	___awtoft	;wreg free
  2576  001224  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2577  001228  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2578  00122C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2579  001230  ECD0  F014         	call	___ftmul	;wreg free
  2580  001234  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2581  001238  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2582  00123C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2583  001240  0E00               	movlw	0
  2584  001242  0100               	movlb	0	; () banked
  2585  001244  6F80               	movwf	___ftmul@f2& (0+255),b
  2586  001246  0E80               	movlw	128
  2587  001248  0100               	movlb	0	; () banked
  2588  00124A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2589  00124C  0E40               	movlw	64
  2590  00124E  0100               	movlb	0	; () banked
  2591  001250  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2592  001252  C10C  F076         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2593  001256  C10D  F077         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2594  00125A  ECC3  F01C         	call	___awtoft	;wreg free
  2595  00125E  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2596  001262  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2597  001266  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2598  00126A  ECD0  F014         	call	___ftmul	;wreg free
  2599  00126E  C07D  F093         	movff	?___ftmul,___ftadd@f1
  2600  001272  C07E  F094         	movff	?___ftmul+1,___ftadd@f1+1
  2601  001276  C07F  F095         	movff	?___ftmul+2,___ftadd@f1+2
  2602  00127A  EC9A  F00F         	call	___ftadd	;wreg free
  2603  00127E  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2419
  2604  001282  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2419+1
  2605  001286  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2419+2
  2606                           
  2607                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2608                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2609                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2610                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2611  00128A  0E00               	movlw	0
  2612  00128C  0100               	movlb	0	; () banked
  2613  00128E  6F80               	movwf	___ftmul@f2& (0+255),b
  2614  001290  0E80               	movlw	128
  2615  001292  0100               	movlb	0	; () banked
  2616  001294  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2617  001296  0E41               	movlw	65
  2618  001298  0100               	movlb	0	; () banked
  2619  00129A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2620  00129C  C110  F076         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2621  0012A0  C111  F077         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2622  0012A4  ECC3  F01C         	call	___awtoft	;wreg free
  2623  0012A8  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2624  0012AC  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2625  0012B0  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2626  0012B4  ECD0  F014         	call	___ftmul	;wreg free
  2627  0012B8  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2628  0012BC  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2629  0012C0  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2630  0012C4  C1A7  F093         	movff	_util_getTemperature$2419,___ftadd@f1
  2631  0012C8  C1A8  F094         	movff	_util_getTemperature$2419+1,___ftadd@f1+1
  2632  0012CC  C1A9  F095         	movff	_util_getTemperature$2419+2,___ftadd@f1+2
  2633  0012D0  EC9A  F00F         	call	___ftadd	;wreg free
  2634  0012D4  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2420
  2635  0012D8  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2420+1
  2636  0012DC  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2420+2
  2637                           
  2638                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2639                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2640                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2641                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2642  0012E0  0E00               	movlw	0
  2643  0012E2  0100               	movlb	0	; () banked
  2644  0012E4  6F80               	movwf	___ftmul@f2& (0+255),b
  2645  0012E6  0E00               	movlw	0
  2646  0012E8  0100               	movlb	0	; () banked
  2647  0012EA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2648  0012EC  0E42               	movlw	66
  2649  0012EE  0100               	movlb	0	; () banked
  2650  0012F0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2651  0012F2  C112  F076         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2652  0012F6  C113  F077         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2653  0012FA  ECC3  F01C         	call	___awtoft	;wreg free
  2654  0012FE  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2655  001302  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2656  001306  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2657  00130A  ECD0  F014         	call	___ftmul	;wreg free
  2658  00130E  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2659  001312  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2660  001316  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2661  00131A  C1AA  F093         	movff	_util_getTemperature$2420,___ftadd@f1
  2662  00131E  C1AB  F094         	movff	_util_getTemperature$2420+1,___ftadd@f1+1
  2663  001322  C1AC  F095         	movff	_util_getTemperature$2420+2,___ftadd@f1+2
  2664  001326  EC9A  F00F         	call	___ftadd	;wreg free
  2665  00132A  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2421
  2666  00132E  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2421+1
  2667  001332  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2421+2
  2668                           
  2669                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2670                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2671                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2672                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2673  001336  0E00               	movlw	0
  2674  001338  0100               	movlb	0	; () banked
  2675  00133A  6F80               	movwf	___ftmul@f2& (0+255),b
  2676  00133C  0E80               	movlw	128
  2677  00133E  0100               	movlb	0	; () banked
  2678  001340  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2679  001342  0E42               	movlw	66
  2680  001344  0100               	movlb	0	; () banked
  2681  001346  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2682  001348  C114  F076         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2683  00134C  C115  F077         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2684  001350  ECC3  F01C         	call	___awtoft	;wreg free
  2685  001354  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2686  001358  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2687  00135C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2688  001360  ECD0  F014         	call	___ftmul	;wreg free
  2689  001364  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2690  001368  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2691  00136C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2692  001370  C1AD  F093         	movff	_util_getTemperature$2421,___ftadd@f1
  2693  001374  C1AE  F094         	movff	_util_getTemperature$2421+1,___ftadd@f1+1
  2694  001378  C1AF  F095         	movff	_util_getTemperature$2421+2,___ftadd@f1+2
  2695  00137C  EC9A  F00F         	call	___ftadd	;wreg free
  2696  001380  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2422
  2697  001384  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2422+1
  2698  001388  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2422+2
  2699                           
  2700                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2701                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2702                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2703                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2704  00138C  C1B0  F093         	movff	_util_getTemperature$2422,___ftadd@f1
  2705  001390  C1B1  F094         	movff	_util_getTemperature$2422+1,___ftadd@f1+1
  2706  001394  C1B2  F095         	movff	_util_getTemperature$2422+2,___ftadd@f1+2
  2707  001398  C1C9  F096         	movff	util_getTemperature@temperature,___ftadd@f2
  2708  00139C  C1CA  F097         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2709  0013A0  C1CB  F098         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2710  0013A4  EC9A  F00F         	call	___ftadd	;wreg free
  2711  0013A8  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2712  0013AC  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2713  0013B0  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2714                           
  2715                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2716  0013B4  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2717  0013B8  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2718  0013BC  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2719  0013C0  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2720  0013C4  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2721  0013C8  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2722  0013CC  ECD0  F014         	call	___ftmul	;wreg free
  2723  0013D0  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2724  0013D4  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2725  0013D8  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2726                           
  2727                           ;easat2_util_inputs.c: 248: return temperature;
  2728  0013DC  C1C9  F09F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2729  0013E0  C1CA  F0A0         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2730  0013E4  C1CB  F0A1         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2731  0013E8  0012               	return	
  2732  0013EA                     __end_of_util_getTemperature:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           postdec1	equ	0xFE5
  2741                           fsr1l	equ	0xFE1
  2742                           postinc2	equ	0xFDE
  2743                           postdec2	equ	0xFDD
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _util_waits_delay_secs *****************
  2749 ;; Defined at:
  2750 ;;		line 31 in file "easat2_util_waits.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  secs            2   19[BANK0 ] int 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  j               2   39[COMRAM] int 
  2755 ;;  i               2   37[COMRAM] int 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2765 ;;      Params:         0       2       0       0       0       0       0
  2766 ;;      Locals:         4       0       0       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0       0       0
  2768 ;;      Totals:         5       2       0       0       0       0       0
  2769 ;;Total ram usage:        7 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    4
  2772 ;; This function calls:
  2773 ;;		_util_waits_delay_ms
  2774 ;; This function is called by:
  2775 ;;		_util_getTemperature
  2776 ;;		_util_waits_delay_mins
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text5
  2781  0037D8                     __ptext5:
  2782                           	opt stack 0
  2783  0037D8                     _util_waits_delay_secs:
  2784                           	opt stack 24
  2785                           
  2786                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2787                           
  2788                           ;incstack = 0
  2789  0037D8  0E00               	movlw	0
  2790  0037DA  6E27               	movwf	util_waits_delay_secs@i+1,c
  2791  0037DC  0E00               	movlw	0
  2792  0037DE  6E26               	movwf	util_waits_delay_secs@i,c
  2793  0037E0  D018               	goto	l4992
  2794  0037E2                     l4978:
  2795                           
  2796                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2797  0037E2  0E00               	movlw	0
  2798  0037E4  6E29               	movwf	util_waits_delay_secs@j+1,c
  2799  0037E6  0E00               	movlw	0
  2800  0037E8  6E28               	movwf	util_waits_delay_secs@j,c
  2801  0037EA                     l4980:
  2802  0037EA  BE29               	btfsc	util_waits_delay_secs@j+1,7,c
  2803  0037EC  D006               	goto	l4984
  2804  0037EE  5029               	movf	util_waits_delay_secs@j+1,w,c
  2805  0037F0  E10E               	bnz	l4990
  2806  0037F2  0E0A               	movlw	10
  2807  0037F4  5C28               	subwf	util_waits_delay_secs@j,w,c
  2808  0037F6  B0D8               	btfsc	status,0,c
  2809  0037F8  D00A               	goto	l4990
  2810  0037FA                     l4984:
  2811                           
  2812                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2813  0037FA  0E00               	movlw	0
  2814  0037FC  0100               	movlb	0	; () banked
  2815  0037FE  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2816  003800  0E64               	movlw	100
  2817  003802  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  2818  003804  ECB0  F01D         	call	_util_waits_delay_ms	;wreg free
  2819  003808  4A28               	infsnz	util_waits_delay_secs@j,f,c
  2820  00380A  2A29               	incf	util_waits_delay_secs@j+1,f,c
  2821  00380C  D7EE               	goto	l4980
  2822  00380E                     l4990:
  2823  00380E  4A26               	infsnz	util_waits_delay_secs@i,f,c
  2824  003810  2A27               	incf	util_waits_delay_secs@i+1,f,c
  2825  003812                     l4992:
  2826  003812  0100               	movlb	0	; () banked
  2827  003814  5173               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2828  003816  5C26               	subwf	util_waits_delay_secs@i,w,c
  2829  003818  5027               	movf	util_waits_delay_secs@i+1,w,c
  2830  00381A  0A80               	xorlw	128
  2831  00381C  6E25               	movwf	??_util_waits_delay_secs& (0+255),c
  2832  00381E  0100               	movlb	0	; () banked
  2833  003820  5174               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2834  003822  0A80               	xorlw	128
  2835  003824  5825               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2836  003826  B0D8               	btfsc	status,0,c
  2837  003828  0012               	return	
  2838  00382A  D7DB               	goto	l4978
  2839  00382C                     __end_of_util_waits_delay_secs:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           postdec1	equ	0xFE5
  2848                           fsr1l	equ	0xFE1
  2849                           postinc2	equ	0xFDE
  2850                           postdec2	equ	0xFDD
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _util_onewire_write_byte *****************
  2856 ;; Defined at:
  2857 ;;		line 62 in file "easat2_util_onewire.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  value           2   19[BANK0 ] int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  bit7            2   35[BANK0 ] int 
  2862 ;;  bit6            2   33[BANK0 ] int 
  2863 ;;  bit5            2   31[BANK0 ] int 
  2864 ;;  bit4            2   29[BANK0 ] int 
  2865 ;;  bit3            2   27[BANK0 ] int 
  2866 ;;  bit2            2   25[BANK0 ] int 
  2867 ;;  bit1            2   23[BANK0 ] int 
  2868 ;;  bit0            2   21[BANK0 ] int 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2878 ;;      Params:         0       2       0       0       0       0       0
  2879 ;;      Locals:         0      16       0       0       0       0       0
  2880 ;;      Temps:          3       0       0       0       0       0       0
  2881 ;;      Totals:         3      18       0       0       0       0       0
  2882 ;;Total ram usage:       21 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    4
  2885 ;; This function calls:
  2886 ;;		_util_onewire_write_bit
  2887 ;; This function is called by:
  2888 ;;		_util_getTemperature
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text6
  2893  002552                     __ptext6:
  2894                           	opt stack 0
  2895  002552                     _util_onewire_write_byte:
  2896                           	opt stack 24
  2897                           
  2898                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2899                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;incstack = 0
  2903  002552  0E01               	movlw	1
  2904  002554  0100               	movlb	0	; () banked
  2905  002556  1573               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2906  002558  0100               	movlb	0	; () banked
  2907  00255A  6F75               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2908  00255C  0100               	movlb	0	; () banked
  2909  00255E  6B76               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2910                           
  2911                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2912  002560  0100               	movlb	0	; () banked
  2913  002562  3574               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2914  002564  3174               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2915  002566  6E23               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2916  002568  0100               	movlb	0	; () banked
  2917  00256A  3173               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2918  00256C  6E22               	movwf	??_util_onewire_write_byte& (0+255),c
  2919  00256E  0E01               	movlw	1
  2920  002570  1422               	andwf	??_util_onewire_write_byte,w,c
  2921  002572  0100               	movlb	0	; () banked
  2922  002574  6F77               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2923  002576  0100               	movlb	0	; () banked
  2924  002578  6B78               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2925                           
  2926                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2927  00257A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2928  00257E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2929  002582  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2930  002584  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2931  002586  3222               	rrcf	??_util_onewire_write_byte,f,c
  2932  002588  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2933  00258A  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2934  00258C  3222               	rrcf	??_util_onewire_write_byte,f,c
  2935  00258E  0E01               	movlw	1
  2936  002590  1422               	andwf	??_util_onewire_write_byte,w,c
  2937  002592  0100               	movlb	0	; () banked
  2938  002594  6F79               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2939  002596  0100               	movlb	0	; () banked
  2940  002598  6B7A               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2941                           
  2942                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2943  00259A  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2944  00259E  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2945  0025A2  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2946  0025A4  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2947  0025A6  3222               	rrcf	??_util_onewire_write_byte,f,c
  2948  0025A8  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2949  0025AA  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2950  0025AC  3222               	rrcf	??_util_onewire_write_byte,f,c
  2951  0025AE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2952  0025B0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2953  0025B2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2954  0025B4  0E01               	movlw	1
  2955  0025B6  1422               	andwf	??_util_onewire_write_byte,w,c
  2956  0025B8  0100               	movlb	0	; () banked
  2957  0025BA  6F7B               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2958  0025BC  0100               	movlb	0	; () banked
  2959  0025BE  6B7C               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2960                           
  2961                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2962  0025C0  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2963  0025C4  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2964  0025C8  0E04               	movlw	4
  2965  0025CA  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2966  0025CC                     u5415:
  2967  0025CC  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2968  0025CE  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2969  0025D0  3222               	rrcf	??_util_onewire_write_byte,f,c
  2970  0025D2  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2971  0025D4  D7FB               	goto	u5415
  2972  0025D6  0E01               	movlw	1
  2973  0025D8  1422               	andwf	??_util_onewire_write_byte,w,c
  2974  0025DA  0100               	movlb	0	; () banked
  2975  0025DC  6F7D               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2976  0025DE  0100               	movlb	0	; () banked
  2977  0025E0  6B7E               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2978                           
  2979                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2980  0025E2  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2981  0025E6  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2982  0025EA  0E05               	movlw	5
  2983  0025EC  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2984  0025EE                     u5425:
  2985  0025EE  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2986  0025F0  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2987  0025F2  3222               	rrcf	??_util_onewire_write_byte,f,c
  2988  0025F4  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2989  0025F6  D7FB               	goto	u5425
  2990  0025F8  0E01               	movlw	1
  2991  0025FA  1422               	andwf	??_util_onewire_write_byte,w,c
  2992  0025FC  0100               	movlb	0	; () banked
  2993  0025FE  6F7F               	movwf	util_onewire_write_byte@bit5& (0+255),b
  2994  002600  0100               	movlb	0	; () banked
  2995  002602  6B80               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  2996                           
  2997                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2998  002604  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2999  002608  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3000  00260C  0E06               	movlw	6
  3001  00260E  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3002  002610                     u5435:
  3003  002610  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3004  002612  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3005  002614  3222               	rrcf	??_util_onewire_write_byte,f,c
  3006  002616  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3007  002618  D7FB               	goto	u5435
  3008  00261A  0E01               	movlw	1
  3009  00261C  1422               	andwf	??_util_onewire_write_byte,w,c
  3010  00261E  0100               	movlb	0	; () banked
  3011  002620  6F81               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3012  002622  0100               	movlb	0	; () banked
  3013  002624  6B82               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3014                           
  3015                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3016  002626  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3017  00262A  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3018  00262E  0E07               	movlw	7
  3019  002630  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3020  002632                     u5445:
  3021  002632  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  3022  002634  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  3023  002636  3222               	rrcf	??_util_onewire_write_byte,f,c
  3024  002638  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3025  00263A  D7FB               	goto	u5445
  3026  00263C  0E01               	movlw	1
  3027  00263E  1422               	andwf	??_util_onewire_write_byte,w,c
  3028  002640  0100               	movlb	0	; () banked
  3029  002642  6F83               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3030  002644  0100               	movlb	0	; () banked
  3031  002646  6B84               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3035  002648  C075  F071         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3036  00264C  C076  F072         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3037  002650  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3038                           
  3039                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3040  002654  D000               	nop2		;2 cycle nop
  3041  002656  D000               	nop2		;2 cycle nop
  3042  002658  F000               	nop	
  3043                           
  3044                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3045  00265A  C077  F071         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3046  00265E  C078  F072         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3047  002662  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3048                           
  3049                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3050  002666  D000               	nop2		;2 cycle nop
  3051  002668  D000               	nop2		;2 cycle nop
  3052  00266A  F000               	nop	
  3053                           
  3054                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3055  00266C  C079  F071         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3056  002670  C07A  F072         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3057  002674  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3058                           
  3059                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3060  002678  D000               	nop2		;2 cycle nop
  3061  00267A  D000               	nop2		;2 cycle nop
  3062  00267C  F000               	nop	
  3063                           
  3064                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3065  00267E  C07B  F071         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3066  002682  C07C  F072         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3067  002686  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3068                           
  3069                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3070  00268A  D000               	nop2		;2 cycle nop
  3071  00268C  D000               	nop2		;2 cycle nop
  3072  00268E  F000               	nop	
  3073                           
  3074                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3075  002690  C07D  F071         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3076  002694  C07E  F072         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3077  002698  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3078                           
  3079                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3080  00269C  D000               	nop2		;2 cycle nop
  3081  00269E  D000               	nop2		;2 cycle nop
  3082  0026A0  F000               	nop	
  3083                           
  3084                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3085  0026A2  C07F  F071         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3086  0026A6  C080  F072         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3087  0026AA  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3088                           
  3089                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3090  0026AE  D000               	nop2		;2 cycle nop
  3091  0026B0  D000               	nop2		;2 cycle nop
  3092  0026B2  F000               	nop	
  3093                           
  3094                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3095  0026B4  C081  F071         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3096  0026B8  C082  F072         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3097  0026BC  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3098                           
  3099                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3100  0026C0  D000               	nop2		;2 cycle nop
  3101  0026C2  D000               	nop2		;2 cycle nop
  3102  0026C4  F000               	nop	
  3103                           
  3104                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3105  0026C6  C083  F071         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3106  0026CA  C084  F072         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3107  0026CE  ECFE  F01C         	call	_util_onewire_write_bit	;wreg free
  3108                           
  3109                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3110  0026D2  D000               	nop2		;2 cycle nop
  3111  0026D4  D000               	nop2		;2 cycle nop
  3112  0026D6  F000               	nop	
  3113  0026D8  0012               	return		;funcret
  3114  0026DA                     __end_of_util_onewire_write_byte:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           postinc0	equ	0xFEE
  3121                           wreg	equ	0xFE8
  3122                           postdec1	equ	0xFE5
  3123                           fsr1l	equ	0xFE1
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _util_onewire_write_bit *****************
  3131 ;; Defined at:
  3132 ;;		line 121 in file "easat2_util_onewire.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  bit_in          2   17[BANK0 ] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         0       2       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0
  3149 ;;      Totals:         0       2       0       0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    3
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_util_onewire_write_byte
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text7
  3161  0039FC                     __ptext7:
  3162                           	opt stack 0
  3163  0039FC                     _util_onewire_write_bit:
  3164                           	opt stack 24
  3165                           
  3166                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3167                           
  3168                           ;incstack = 0
  3169  0039FC  9692               	bcf	3986,3,c	;volatile
  3170                           
  3171                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3172  0039FE  0100               	movlb	0	; () banked
  3173  003A00  5171               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3174  003A02  0100               	movlb	0	; () banked
  3175  003A04  1172               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3176  003A06  B4D8               	btfsc	status,2,c
  3177  003A08  D009               	goto	l171
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3181  003A0A  9680               	bcf	3968,3,c	;volatile
  3182                           
  3183                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3184  003A0C  D000               	nop2		;2 cycle nop
  3185  003A0E  D000               	nop2		;2 cycle nop
  3186  003A10  F000               	nop	
  3187                           
  3188                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3189  003A12  8680               	bsf	3968,3,c	;volatile
  3190                           
  3191                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3192  003A14  0E09               	movlw	9
  3193  003A16                     u6357:
  3194  003A16  2EE8               	decfsz	wreg,f,c
  3195  003A18  D7FE               	bra	u6357
  3196                           
  3197                           ;easat2_util_onewire.c: 141: } else {
  3198  003A1A  0012               	return	
  3199  003A1C                     l171:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3203  003A1C  9680               	bcf	3968,3,c	;volatile
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3207  003A1E  0E0B               	movlw	11
  3208  003A20                     u6367:
  3209  003A20  2EE8               	decfsz	wreg,f,c
  3210  003A22  D7FE               	bra	u6367
  3211  003A24  D000               	nop2	
  3212                           
  3213                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3214  003A26  8680               	bsf	3968,3,c	;volatile
  3215                           
  3216                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3217  003A28  D000               	nop2		;2 cycle nop
  3218  003A2A  D000               	nop2		;2 cycle nop
  3219  003A2C  F000               	nop	
  3220  003A2E  0012               	return	
  3221  003A30                     __end_of_util_onewire_write_bit:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           postinc0	equ	0xFEE
  3228                           wreg	equ	0xFE8
  3229                           postdec1	equ	0xFE5
  3230                           fsr1l	equ	0xFE1
  3231                           postinc2	equ	0xFDE
  3232                           postdec2	equ	0xFDD
  3233                           fsr2h	equ	0xFDA
  3234                           fsr2l	equ	0xFD9
  3235                           status	equ	0xFD8
  3236                           
  3237 ;; *************** function _util_onewire_reset *****************
  3238 ;; Defined at:
  3239 ;;		line 18 in file "easat2_util_onewire.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  presence        2   34[COMRAM] int 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  2   17[BANK0 ] int 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3253 ;;      Params:         0       2       0       0       0       0       0
  3254 ;;      Locals:         2       0       0       0       0       0       0
  3255 ;;      Temps:          1       0       0       0       0       0       0
  3256 ;;      Totals:         3       2       0       0       0       0       0
  3257 ;;Total ram usage:        5 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    3
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_util_getTemperature
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text8
  3268  003944                     __ptext8:
  3269                           	opt stack 0
  3270  003944                     _util_onewire_reset:
  3271                           	opt stack 25
  3272                           
  3273                           ;easat2_util_onewire.c: 20: int presence = 1;
  3274                           
  3275                           ;incstack = 0
  3276  003944  0E00               	movlw	0
  3277  003946  6E24               	movwf	util_onewire_reset@presence+1,c
  3278  003948  0E01               	movlw	1
  3279  00394A  6E23               	movwf	util_onewire_reset@presence,c
  3280                           
  3281                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3282  00394C  9692               	bcf	3986,3,c	;volatile
  3283                           
  3284                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3285  00394E  9680               	bcf	3968,3,c	;volatile
  3286                           
  3287                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3288  003950  0E5D               	movlw	93
  3289  003952                     u6377:
  3290  003952  2EE8               	decfsz	wreg,f,c
  3291  003954  D7FE               	bra	u6377
  3292  003956  F000               	nop	
  3293                           
  3294                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3295  003958  8680               	bsf	3968,3,c	;volatile
  3296                           
  3297                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3298  00395A  0E0B               	movlw	11
  3299  00395C                     u6387:
  3300  00395C  2EE8               	decfsz	wreg,f,c
  3301  00395E  D7FE               	bra	u6387
  3302  003960  D000               	nop2	
  3303                           
  3304                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3305  003962  8692               	bsf	3986,3,c	;volatile
  3306                           
  3307                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3308  003964  A680               	btfss	3968,3,c	;volatile
  3309  003966  D003               	goto	u5400
  3310  003968  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3311  00396A  2A22               	incf	??_util_onewire_reset& (0+255),f,c
  3312  00396C  D001               	goto	u5408
  3313  00396E                     u5400:
  3314  00396E  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3315  003970                     u5408:
  3316  003970  5022               	movf	??_util_onewire_reset,w,c
  3317  003972  6E23               	movwf	util_onewire_reset@presence,c
  3318  003974  6A24               	clrf	util_onewire_reset@presence+1,c
  3319                           
  3320                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3321  003976  0E46               	movlw	70
  3322  003978                     u6397:
  3323  003978  2EE8               	decfsz	wreg,f,c
  3324  00397A  D7FE               	bra	u6397
  3325                           
  3326                           ;easat2_util_onewire.c: 56: return presence;
  3327  00397C  C023  F071         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3328  003980  C024  F072         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3329  003984  0012               	return	
  3330  003986                     __end_of_util_onewire_reset:
  3331                           	opt stack 0
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           postinc0	equ	0xFEE
  3337                           wreg	equ	0xFE8
  3338                           postdec1	equ	0xFE5
  3339                           fsr1l	equ	0xFE1
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           fsr2h	equ	0xFDA
  3343                           fsr2l	equ	0xFD9
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function _util_onewire_read_byte *****************
  3347 ;; Defined at:
  3348 ;;		line 96 in file "easat2_util_onewire.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  value           2   51[BANK0 ] int 
  3353 ;;  bit7            2   49[BANK0 ] int 
  3354 ;;  bit6            2   47[BANK0 ] int 
  3355 ;;  bit5            2   45[BANK0 ] int 
  3356 ;;  bit4            2   43[BANK0 ] int 
  3357 ;;  bit3            2   41[BANK0 ] int 
  3358 ;;  bit2            2   39[BANK0 ] int 
  3359 ;;  bit1            2   37[BANK0 ] int 
  3360 ;;  bit0            2   35[BANK0 ] int 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  2   19[BANK0 ] int 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         0       2       0       0       0       0       0
  3371 ;;      Locals:         0      18       0       0       0       0       0
  3372 ;;      Temps:          0      14       0       0       0       0       0
  3373 ;;      Totals:         0      34       0       0       0       0       0
  3374 ;;Total ram usage:       34 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    4
  3377 ;; This function calls:
  3378 ;;		_util_onewire_read_bit
  3379 ;; This function is called by:
  3380 ;;		_util_getTemperature
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text9
  3385  0023BE                     __ptext9:
  3386                           	opt stack 0
  3387  0023BE                     _util_onewire_read_byte:
  3388                           	opt stack 24
  3389                           
  3390                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3391                           ;easat2_util_onewire.c: 99: int value = 0;
  3392                           
  3393                           ;incstack = 0
  3394  0023BE  0E00               	movlw	0
  3395  0023C0  0100               	movlb	0	; () banked
  3396  0023C2  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3397  0023C4  0E00               	movlw	0
  3398  0023C6  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3402  0023C8  8692               	bsf	3986,3,c	;volatile
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3406  0023CA  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3407  0023CE  C071  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3408  0023D2  C072  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3409                           
  3410                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3411  0023D6  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3412  0023DA  C071  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3413  0023DE  C072  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3414                           
  3415                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3416  0023E2  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3417  0023E6  C071  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3418  0023EA  C072  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3419                           
  3420                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3421  0023EE  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3422  0023F2  C071  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3423  0023F6  C072  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3424                           
  3425                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3426  0023FA  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3427  0023FE  C071  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3428  002402  C072  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3429                           
  3430                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3431  002406  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3432  00240A  C071  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3433  00240E  C072  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3434                           
  3435                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3436  002412  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3437  002416  C071  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3438  00241A  C072  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3439                           
  3440                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3441  00241E  EC4C  F01D         	call	_util_onewire_read_bit	;wreg free
  3442  002422  C071  F091         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3443  002426  C072  F092         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3444                           
  3445                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3446                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3447  00242A  C091  F075         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3448  00242E  C092  F076         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3449  002432  0E07               	movlw	7
  3450  002434                     u5455:
  3451  002434  90D8               	bcf	status,0,c
  3452  002436  0100               	movlb	0	; () banked
  3453  002438  3775               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3454  00243A  3776               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3455  00243C  2EE8               	decfsz	wreg,f,c
  3456  00243E  D7FA               	goto	u5455
  3457  002440  C08F  F077         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3458  002444  C090  F078         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3459  002448  0E06               	movlw	6
  3460  00244A                     u5465:
  3461  00244A  90D8               	bcf	status,0,c
  3462  00244C  0100               	movlb	0	; () banked
  3463  00244E  3777               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3464  002450  3778               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3465  002452  2EE8               	decfsz	wreg,f,c
  3466  002454  D7FA               	goto	u5465
  3467  002456  C08D  F079         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3468  00245A  C08E  F07A         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3469  00245E  0E05               	movlw	5
  3470  002460                     u5475:
  3471  002460  90D8               	bcf	status,0,c
  3472  002462  0100               	movlb	0	; () banked
  3473  002464  3779               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3474  002466  377A               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3475  002468  2EE8               	decfsz	wreg,f,c
  3476  00246A  D7FA               	goto	u5475
  3477  00246C  C08B  F07B         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3478  002470  C08C  F07C         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3479  002474  0100               	movlb	0	; () banked
  3480  002476  3B7B               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3481  002478  3B7C               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3482  00247A  0EF0               	movlw	240
  3483  00247C  177C               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3484  00247E  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3485  002480  0B0F               	andlw	15
  3486  002482  137C               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3487  002484  0EF0               	movlw	240
  3488  002486  177B               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3489  002488  C089  F07D         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3490  00248C  C08A  F07E         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3491  002490  0100               	movlb	0	; () banked
  3492  002492  90D8               	bcf	status,0,c
  3493  002494  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3494  002496  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3495  002498  0100               	movlb	0	; () banked
  3496  00249A  90D8               	bcf	status,0,c
  3497  00249C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3498  00249E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3499  0024A0  0100               	movlb	0	; () banked
  3500  0024A2  90D8               	bcf	status,0,c
  3501  0024A4  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3502  0024A6  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3503  0024A8  C087  F07F         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3504  0024AC  C088  F080         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3505  0024B0  0100               	movlb	0	; () banked
  3506  0024B2  90D8               	bcf	status,0,c
  3507  0024B4  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3508  0024B6  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3509  0024B8  0100               	movlb	0	; () banked
  3510  0024BA  90D8               	bcf	status,0,c
  3511  0024BC  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3512  0024BE  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3513  0024C0  C085  F081         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3514  0024C4  C086  F082         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3515  0024C8  90D8               	bcf	status,0,c
  3516  0024CA  0100               	movlb	0	; () banked
  3517  0024CC  3781               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3518  0024CE  3782               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3519  0024D0  0100               	movlb	0	; () banked
  3520  0024D2  517F               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3521  0024D4  0100               	movlb	0	; () banked
  3522  0024D6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3523  0024D8  0100               	movlb	0	; () banked
  3524  0024DA  5180               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3525  0024DC  0100               	movlb	0	; () banked
  3526  0024DE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3527  0024E0  0100               	movlb	0	; () banked
  3528  0024E2  517D               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3529  0024E4  0100               	movlb	0	; () banked
  3530  0024E6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3531  0024E8  0100               	movlb	0	; () banked
  3532  0024EA  517E               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3533  0024EC  0100               	movlb	0	; () banked
  3534  0024EE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3535  0024F0  0100               	movlb	0	; () banked
  3536  0024F2  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3537  0024F4  0100               	movlb	0	; () banked
  3538  0024F6  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3539  0024F8  0100               	movlb	0	; () banked
  3540  0024FA  517C               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3541  0024FC  0100               	movlb	0	; () banked
  3542  0024FE  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3543  002500  0100               	movlb	0	; () banked
  3544  002502  5179               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3545  002504  0100               	movlb	0	; () banked
  3546  002506  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3547  002508  0100               	movlb	0	; () banked
  3548  00250A  517A               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3549  00250C  0100               	movlb	0	; () banked
  3550  00250E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3551  002510  0100               	movlb	0	; () banked
  3552  002512  5177               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3553  002514  0100               	movlb	0	; () banked
  3554  002516  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3555  002518  0100               	movlb	0	; () banked
  3556  00251A  5178               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3557  00251C  0100               	movlb	0	; () banked
  3558  00251E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3559  002520  0100               	movlb	0	; () banked
  3560  002522  5175               	movf	??_util_onewire_read_byte& (0+255),w,b
  3561  002524  0100               	movlb	0	; () banked
  3562  002526  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3563  002528  0100               	movlb	0	; () banked
  3564  00252A  5176               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3565  00252C  0100               	movlb	0	; () banked
  3566  00252E  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3567  002530  0100               	movlb	0	; () banked
  3568  002532  5183               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3569  002534  0100               	movlb	0	; () banked
  3570  002536  2581               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3571  002538  0100               	movlb	0	; () banked
  3572  00253A  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3573  00253C  0100               	movlb	0	; () banked
  3574  00253E  5184               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3575  002540  0100               	movlb	0	; () banked
  3576  002542  2182               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3577  002544  0100               	movlb	0	; () banked
  3578  002546  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;easat2_util_onewire.c: 116: return value;
  3582  002548  C093  F073         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3583  00254C  C094  F074         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3584  002550  0012               	return	
  3585  002552                     __end_of_util_onewire_read_byte:
  3586                           	opt stack 0
  3587                           tblptru	equ	0xFF8
  3588                           tblptrh	equ	0xFF7
  3589                           tblptrl	equ	0xFF6
  3590                           tablat	equ	0xFF5
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _util_onewire_read_bit *****************
  3602 ;; Defined at:
  3603 ;;		line 162 in file "easat2_util_onewire.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  value           2   34[COMRAM] int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2   17[BANK0 ] int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3617 ;;      Params:         0       2       0       0       0       0       0
  3618 ;;      Locals:         2       0       0       0       0       0       0
  3619 ;;      Temps:          1       0       0       0       0       0       0
  3620 ;;      Totals:         3       2       0       0       0       0       0
  3621 ;;Total ram usage:        5 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    3
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_util_onewire_read_byte
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text10
  3632  003A98                     __ptext10:
  3633                           	opt stack 0
  3634  003A98                     _util_onewire_read_bit:
  3635                           	opt stack 24
  3636                           
  3637                           ;easat2_util_onewire.c: 164: int value = 0;
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;incstack = 0
  3641  003A98  0E00               	movlw	0
  3642  003A9A  6E24               	movwf	util_onewire_read_bit@value+1,c
  3643  003A9C  0E00               	movlw	0
  3644  003A9E  6E23               	movwf	util_onewire_read_bit@value,c
  3645                           
  3646                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3647  003AA0  9692               	bcf	3986,3,c	;volatile
  3648                           
  3649                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3650  003AA2  9680               	bcf	3968,3,c	;volatile
  3651                           
  3652                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3653                           
  3654                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3655  003AA4  8680               	bsf	3968,3,c	;volatile
  3656                           
  3657                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3658  003AA6  D000               	nop2		;2 cycle nop
  3659                           
  3660                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3661  003AA8  A680               	btfss	3968,3,c	;volatile
  3662  003AAA  D003               	goto	u5000
  3663  003AAC  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3664  003AAE  2A22               	incf	??_util_onewire_read_bit& (0+255),f,c
  3665  003AB0  D001               	goto	u5008
  3666  003AB2                     u5000:
  3667  003AB2  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3668  003AB4                     u5008:
  3669  003AB4  5022               	movf	??_util_onewire_read_bit,w,c
  3670  003AB6  6E23               	movwf	util_onewire_read_bit@value,c
  3671  003AB8  6A24               	clrf	util_onewire_read_bit@value+1,c
  3672                           
  3673                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3674  003ABA  0E0A               	movlw	10
  3675  003ABC                     u6407:
  3676  003ABC  2EE8               	decfsz	wreg,f,c
  3677  003ABE  D7FE               	bra	u6407
  3678                           
  3679                           ;easat2_util_onewire.c: 187: return value;
  3680  003AC0  C023  F071         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3681  003AC4  C024  F072         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3682  003AC8  0012               	return	
  3683  003ACA                     __end_of_util_onewire_read_bit:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           postdec1	equ	0xFE5
  3692                           fsr1l	equ	0xFE1
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function ___ftdiv *****************
  3700 ;; Defined at:
  3701 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  f1              3   25[BANK0 ] float 
  3704 ;;  f2              3   28[BANK0 ] float 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  f3              3   32[BANK0 ] float 
  3707 ;;  sign            1   36[BANK0 ] unsigned char 
  3708 ;;  exp             1   35[BANK0 ] unsigned char 
  3709 ;;  cntr            1   31[BANK0 ] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  3   25[BANK0 ] float 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3719 ;;      Params:         0       6       0       0       0       0       0
  3720 ;;      Locals:         0       6       0       0       0       0       0
  3721 ;;      Temps:          3       0       0       0       0       0       0
  3722 ;;      Totals:         3      12       0       0       0       0       0
  3723 ;;Total ram usage:       15 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    4
  3726 ;; This function calls:
  3727 ;;		___ftpack
  3728 ;; This function is called by:
  3729 ;;		_util_getTemperature
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text11
  3734  002C36                     __ptext11:
  3735                           	opt stack 0
  3736  002C36                     ___ftdiv:
  3737                           	opt stack 24
  3738                           
  3739                           ;incstack = 0
  3740  002C36  C07B  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3741  002C3A  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3742  002C3C  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3743  002C3E  0100               	movlb	0	; () banked
  3744  002C40  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3745  002C42  3626               	rlcf	??___ftdiv& (0+255),f,c
  3746  002C44  E301               	bnc	u6021
  3747  002C46  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3748  002C48                     u6021:
  3749  002C48  5026               	movf	??___ftdiv,w,c
  3750  002C4A  0100               	movlb	0	; () banked
  3751  002C4C  6F83               	movwf	___ftdiv@exp& (0+255),b
  3752  002C4E  0100               	movlb	0	; () banked
  3753  002C50  5183               	movf	___ftdiv@exp& (0+255),w,b
  3754  002C52  A4D8               	btfss	status,2,c
  3755  002C54  D00A               	goto	l5816
  3756                           
  3757                           ; BSR set to: 0
  3758  002C56  0E00               	movlw	0
  3759  002C58  0100               	movlb	0	; () banked
  3760  002C5A  6F79               	movwf	?___ftdiv& (0+255),b
  3761  002C5C  0E00               	movlw	0
  3762  002C5E  0100               	movlb	0	; () banked
  3763  002C60  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3764  002C62  0E00               	movlw	0
  3765  002C64  0100               	movlb	0	; () banked
  3766  002C66  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3767                           
  3768                           ; BSR set to: 0
  3769  002C68  0012               	return	
  3770  002C6A                     l5816:
  3771                           
  3772                           ; BSR set to: 0
  3773  002C6A  C07E  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3774  002C6E  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3775  002C70  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3776  002C72  0100               	movlb	0	; () banked
  3777  002C74  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3778  002C76  3626               	rlcf	??___ftdiv& (0+255),f,c
  3779  002C78  E301               	bnc	u6041
  3780  002C7A  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3781  002C7C                     u6041:
  3782  002C7C  5026               	movf	??___ftdiv,w,c
  3783  002C7E  0100               	movlb	0	; () banked
  3784  002C80  6F84               	movwf	___ftdiv@sign& (0+255),b
  3785  002C82  0100               	movlb	0	; () banked
  3786  002C84  5184               	movf	___ftdiv@sign& (0+255),w,b
  3787  002C86  A4D8               	btfss	status,2,c
  3788  002C88  D00A               	goto	l5822
  3789                           
  3790                           ; BSR set to: 0
  3791  002C8A  0E00               	movlw	0
  3792  002C8C  0100               	movlb	0	; () banked
  3793  002C8E  6F79               	movwf	?___ftdiv& (0+255),b
  3794  002C90  0E00               	movlw	0
  3795  002C92  0100               	movlb	0	; () banked
  3796  002C94  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3797  002C96  0E00               	movlw	0
  3798  002C98  0100               	movlb	0	; () banked
  3799  002C9A  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802  002C9C  0012               	return	
  3803  002C9E                     l5822:
  3804                           
  3805                           ; BSR set to: 0
  3806  002C9E  0E00               	movlw	0
  3807  002CA0  0100               	movlb	0	; () banked
  3808  002CA2  6F80               	movwf	___ftdiv@f3& (0+255),b
  3809  002CA4  0E00               	movlw	0
  3810  002CA6  0100               	movlb	0	; () banked
  3811  002CA8  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3812  002CAA  0E00               	movlw	0
  3813  002CAC  0100               	movlb	0	; () banked
  3814  002CAE  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3815                           
  3816                           ; BSR set to: 0
  3817  002CB0  0100               	movlb	0	; () banked
  3818  002CB2  5184               	movf	___ftdiv@sign& (0+255),w,b
  3819  002CB4  0F89               	addlw	137
  3820  002CB6  0100               	movlb	0	; () banked
  3821  002CB8  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3822                           
  3823                           ; BSR set to: 0
  3824  002CBA  C07B  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3825                           
  3826                           ; BSR set to: 0
  3827  002CBE  0100               	movlb	0	; () banked
  3828  002CC0  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3829  002CC2  0100               	movlb	0	; () banked
  3830  002CC4  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3831                           
  3832                           ; BSR set to: 0
  3833  002CC6  0E80               	movlw	128
  3834  002CC8  0100               	movlb	0	; () banked
  3835  002CCA  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3836                           
  3837                           ; BSR set to: 0
  3838  002CCC  0100               	movlb	0	; () banked
  3839  002CCE  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3840                           
  3841                           ; BSR set to: 0
  3842  002CD0  0EFF               	movlw	255
  3843  002CD2  0100               	movlb	0	; () banked
  3844  002CD4  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3845  002CD6  0EFF               	movlw	255
  3846  002CD8  0100               	movlb	0	; () banked
  3847  002CDA  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3848  002CDC  0E00               	movlw	0
  3849  002CDE  0100               	movlb	0	; () banked
  3850  002CE0  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3851                           
  3852                           ; BSR set to: 0
  3853  002CE2  0100               	movlb	0	; () banked
  3854  002CE4  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3855                           
  3856                           ; BSR set to: 0
  3857  002CE6  0EFF               	movlw	255
  3858  002CE8  0100               	movlb	0	; () banked
  3859  002CEA  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3860  002CEC  0EFF               	movlw	255
  3861  002CEE  0100               	movlb	0	; () banked
  3862  002CF0  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3863  002CF2  0E00               	movlw	0
  3864  002CF4  0100               	movlb	0	; () banked
  3865  002CF6  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3866                           
  3867                           ; BSR set to: 0
  3868  002CF8  0E18               	movlw	24
  3869  002CFA  0100               	movlb	0	; () banked
  3870  002CFC  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3871  002CFE                     l5842:
  3872                           
  3873                           ; BSR set to: 0
  3874  002CFE  0100               	movlb	0	; () banked
  3875  002D00  90D8               	bcf	status,0,c
  3876  002D02  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3877  002D04  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3878  002D06  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 0
  3881  002D08  0100               	movlb	0	; () banked
  3882  002D0A  517C               	movf	___ftdiv@f2& (0+255),w,b
  3883  002D0C  0100               	movlb	0	; () banked
  3884  002D0E  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3885  002D10  0100               	movlb	0	; () banked
  3886  002D12  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3887  002D14  0100               	movlb	0	; () banked
  3888  002D16  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3889  002D18  0100               	movlb	0	; () banked
  3890  002D1A  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3891  002D1C  0100               	movlb	0	; () banked
  3892  002D1E  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3893  002D20  A0D8               	btfss	status,0,c
  3894  002D22  D00E               	goto	l824
  3895                           
  3896                           ; BSR set to: 0
  3897  002D24  0100               	movlb	0	; () banked
  3898  002D26  517C               	movf	___ftdiv@f2& (0+255),w,b
  3899  002D28  0100               	movlb	0	; () banked
  3900  002D2A  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3901  002D2C  0100               	movlb	0	; () banked
  3902  002D2E  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3903  002D30  0100               	movlb	0	; () banked
  3904  002D32  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3905  002D34  0100               	movlb	0	; () banked
  3906  002D36  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3907  002D38  0100               	movlb	0	; () banked
  3908  002D3A  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3909                           
  3910                           ; BSR set to: 0
  3911  002D3C  0100               	movlb	0	; () banked
  3912  002D3E  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3913  002D40                     l824:
  3914                           
  3915                           ; BSR set to: 0
  3916  002D40  0100               	movlb	0	; () banked
  3917  002D42  90D8               	bcf	status,0,c
  3918  002D44  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3919  002D46  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3920  002D48  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3921                           
  3922                           ; BSR set to: 0
  3923  002D4A  0100               	movlb	0	; () banked
  3924  002D4C  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3925  002D4E  D7D7               	goto	l5842
  3926                           
  3927                           ; BSR set to: 0
  3928                           
  3929                           ; BSR set to: 0
  3930  002D50  C080  F071         	movff	___ftdiv@f3,___ftpack@arg
  3931  002D54  C081  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3932  002D58  C082  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3933  002D5C  C083  F074         	movff	___ftdiv@exp,___ftpack@exp
  3934  002D60  C084  F075         	movff	___ftdiv@sign,___ftpack@sign
  3935  002D64  EC44  F017         	call	___ftpack	;wreg free
  3936  002D68  C071  F079         	movff	?___ftpack,?___ftdiv
  3937  002D6C  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3938  002D70  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3939  002D74  0012               	return	
  3940  002D76                     __end_of___ftdiv:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec1	equ	0xFE5
  3949                           fsr1l	equ	0xFE1
  3950                           postinc2	equ	0xFDE
  3951                           postdec2	equ	0xFDD
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function ___awtoft *****************
  3957 ;; Defined at:
  3958 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  c               2   22[BANK0 ] int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  sign            1   36[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  3   22[BANK0 ] float 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3972 ;;      Params:         0       3       0       0       0       0       0
  3973 ;;      Locals:         1       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0
  3975 ;;      Totals:         1       3       0       0       0       0       0
  3976 ;;Total ram usage:        4 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    4
  3979 ;; This function calls:
  3980 ;;		___ftpack
  3981 ;; This function is called by:
  3982 ;;		_util_getTemperature
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text12
  3987  003986                     __ptext12:
  3988                           	opt stack 0
  3989  003986                     ___awtoft:
  3990                           	opt stack 24
  3991                           
  3992                           ;incstack = 0
  3993  003986  0E00               	movlw	0
  3994  003988  6E25               	movwf	___awtoft@sign,c
  3995  00398A  0100               	movlb	0	; () banked
  3996  00398C  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
  3997  00398E  D007               	goto	l5864
  3998                           
  3999                           ; BSR set to: 0
  4000  003990  0100               	movlb	0	; () banked
  4001  003992  6D76               	negf	___awtoft@c& (0+255),b
  4002  003994  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
  4003  003996  B0D8               	btfsc	status,0,c
  4004  003998  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
  4005                           
  4006                           ; BSR set to: 0
  4007  00399A  0E01               	movlw	1
  4008  00399C  6E25               	movwf	___awtoft@sign,c
  4009  00399E                     l5864:
  4010                           
  4011                           ; BSR set to: 0
  4012  00399E  C076  F071         	movff	___awtoft@c,___ftpack@arg
  4013  0039A2  C077  F072         	movff	___awtoft@c+1,___ftpack@arg+1
  4014  0039A6  0100               	movlb	0	; () banked
  4015  0039A8  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4016  0039AA  0E8E               	movlw	142
  4017  0039AC  0100               	movlb	0	; () banked
  4018  0039AE  6F74               	movwf	___ftpack@exp& (0+255),b
  4019  0039B0  C025  F075         	movff	___awtoft@sign,___ftpack@sign
  4020  0039B4  EC44  F017         	call	___ftpack	;wreg free
  4021  0039B8  C071  F076         	movff	?___ftpack,?___awtoft
  4022  0039BC  C072  F077         	movff	?___ftpack+1,?___awtoft+1
  4023  0039C0  C073  F078         	movff	?___ftpack+2,?___awtoft+2
  4024  0039C4  0012               	return	
  4025  0039C6                     __end_of___awtoft:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1l	equ	0xFE1
  4035                           postinc2	equ	0xFDE
  4036                           postdec2	equ	0xFDD
  4037                           fsr2h	equ	0xFDA
  4038                           fsr2l	equ	0xFD9
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _util_getSolarCurrent *****************
  4042 ;; Defined at:
  4043 ;;		line 52 in file "easat2_util_inputs.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  solarCurrent    3   68[BANK0 ] float 
  4048 ;;  value           3   65[BANK0 ] float 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  2   63[BANK0 ] int 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4058 ;;      Params:         0       2       0       0       0       0       0
  4059 ;;      Locals:         0       6       0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0
  4061 ;;      Totals:         0       8       0       0       0       0       0
  4062 ;;Total ram usage:        8 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    5
  4065 ;; This function calls:
  4066 ;;		___ftmul
  4067 ;;		___fttol
  4068 ;;		___lwtoft
  4069 ;; This function is called by:
  4070 ;;		_main_loop
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text13
  4075  002F7C                     __ptext13:
  4076                           	opt stack 0
  4077  002F7C                     _util_getSolarCurrent:
  4078                           	opt stack 24
  4079                           
  4080                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4081                           
  4082                           ;incstack = 0
  4083  002F7C  0E00               	movlw	0
  4084  002F7E  0100               	movlb	0	; () banked
  4085  002F80  6FA1               	movwf	util_getSolarCurrent@value& (0+255),b
  4086  002F82  0E00               	movlw	0
  4087  002F84  0100               	movlb	0	; () banked
  4088  002F86  6FA2               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4089  002F88  0E00               	movlw	0
  4090  002F8A  0100               	movlb	0	; () banked
  4091  002F8C  6FA3               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4092  002F8E  0E00               	movlw	0
  4093  002F90  0100               	movlb	0	; () banked
  4094  002F92  6FA4               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4095  002F94  0E00               	movlw	0
  4096  002F96  0100               	movlb	0	; () banked
  4097  002F98  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4098  002F9A  0E00               	movlw	0
  4099  002F9C  0100               	movlb	0	; () banked
  4100  002F9E  6FA6               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4104  002FA0  84C2               	bsf	4034,2,c	;volatile
  4105  002FA2  96C2               	bcf	4034,3,c	;volatile
  4106  002FA4  98C2               	bcf	4034,4,c	;volatile
  4107  002FA6  9AC2               	bcf	4034,5,c	;volatile
  4108  002FA8  9CC2               	bcf	4034,6,c	;volatile
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4112  002FAA  80C2               	bsf	4034,0,c	;volatile
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4116  002FAC  9C9E               	bcf	3998,6,c	;volatile
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4120  002FAE  82C2               	bsf	4034,1,c	;volatile
  4121  002FB0                     l114:
  4122  002FB0  AC9E               	btfss	3998,6,c	;volatile
  4123  002FB2  D7FE               	goto	l114
  4124                           
  4125                           ;easat2_util_inputs.c: 63: value = ADRES;
  4126  002FB4  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4127  002FB8  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4128  002FBC  ECF8  F01D         	call	___lwtoft	;wreg free
  4129  002FC0  C076  F0A1         	movff	?___lwtoft,util_getSolarCurrent@value
  4130  002FC4  C077  F0A2         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4131  002FC8  C078  F0A3         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4132                           
  4133                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4134  002FCC  9C9E               	bcf	3998,6,c	;volatile
  4135                           
  4136                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4137  002FCE  90C2               	bcf	4034,0,c	;volatile
  4138                           
  4139                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4140  002FD0  C0A1  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4141  002FD4  C0A2  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4142  002FD8  C0A3  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4143  002FDC  0E33               	movlw	51
  4144  002FDE  0100               	movlb	0	; () banked
  4145  002FE0  6F80               	movwf	___ftmul@f2& (0+255),b
  4146  002FE2  0E03               	movlw	3
  4147  002FE4  0100               	movlb	0	; () banked
  4148  002FE6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4149  002FE8  0E3B               	movlw	59
  4150  002FEA  0100               	movlb	0	; () banked
  4151  002FEC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4152  002FEE  ECD0  F014         	call	___ftmul	;wreg free
  4153  002FF2  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4154  002FF6  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4155  002FFA  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4156                           
  4157                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4158  002FFE  C0A4  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4159  003002  C0A5  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4160  003006  C0A6  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4161  00300A  0E00               	movlw	0
  4162  00300C  0100               	movlb	0	; () banked
  4163  00300E  6F80               	movwf	___ftmul@f2& (0+255),b
  4164  003010  0E80               	movlw	128
  4165  003012  0100               	movlb	0	; () banked
  4166  003014  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4167  003016  0E3F               	movlw	63
  4168  003018  0100               	movlb	0	; () banked
  4169  00301A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4170  00301C  ECD0  F014         	call	___ftmul	;wreg free
  4171  003020  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4172  003024  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4173  003028  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4174                           
  4175                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4176  00302C  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4177  003030  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4178  003034  C0A6  F092         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4179  003038  EC79  F015         	call	___fttol	;wreg free
  4180  00303C  C090  F09F         	movff	?___fttol,?_util_getSolarCurrent
  4181  003040  C091  F0A0         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4182  003044  0012               	return	
  4183  003046                     __end_of_util_getSolarCurrent:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           postdec1	equ	0xFE5
  4192                           fsr1l	equ	0xFE1
  4193                           postinc2	equ	0xFDE
  4194                           postdec2	equ	0xFDD
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function _util_getBatteryVoltage *****************
  4200 ;; Defined at:
  4201 ;;		line 19 in file "easat2_util_inputs.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  voltage         3   47[BANK0 ] float 
  4206 ;;  value           3   44[BANK0 ] float 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  3   41[BANK0 ] float 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4216 ;;      Params:         0       3       0       0       0       0       0
  4217 ;;      Locals:         0       6       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0
  4219 ;;      Totals:         0       9       0       0       0       0       0
  4220 ;;Total ram usage:        9 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    5
  4223 ;; This function calls:
  4224 ;;		___ftmul
  4225 ;;		___lwtoft
  4226 ;; This function is called by:
  4227 ;;		_main_loop
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text14
  4232  003110                     __ptext14:
  4233                           	opt stack 0
  4234  003110                     _util_getBatteryVoltage:
  4235                           	opt stack 24
  4236                           
  4237                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4238                           
  4239                           ;incstack = 0
  4240  003110  0E00               	movlw	0
  4241  003112  0100               	movlb	0	; () banked
  4242  003114  6F8C               	movwf	util_getBatteryVoltage@value& (0+255),b
  4243  003116  0E00               	movlw	0
  4244  003118  0100               	movlb	0	; () banked
  4245  00311A  6F8D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4246  00311C  0E00               	movlw	0
  4247  00311E  0100               	movlb	0	; () banked
  4248  003120  6F8E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4249  003122  0E00               	movlw	0
  4250  003124  0100               	movlb	0	; () banked
  4251  003126  6F8F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4252  003128  0E00               	movlw	0
  4253  00312A  0100               	movlb	0	; () banked
  4254  00312C  6F90               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4255  00312E  0E00               	movlw	0
  4256  003130  0100               	movlb	0	; () banked
  4257  003132  6F91               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4261  003134  94C2               	bcf	4034,2,c	;volatile
  4262  003136  96C2               	bcf	4034,3,c	;volatile
  4263  003138  98C2               	bcf	4034,4,c	;volatile
  4264  00313A  9AC2               	bcf	4034,5,c	;volatile
  4265  00313C  9CC2               	bcf	4034,6,c	;volatile
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4269  00313E  80C2               	bsf	4034,0,c	;volatile
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4273  003140  9C9E               	bcf	3998,6,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4277  003142  82C2               	bsf	4034,1,c	;volatile
  4278  003144                     l108:
  4279  003144  AC9E               	btfss	3998,6,c	;volatile
  4280  003146  D7FE               	goto	l108
  4281                           
  4282                           ;easat2_util_inputs.c: 30: value = ADRES;
  4283  003148  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4284  00314C  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4285  003150  ECF8  F01D         	call	___lwtoft	;wreg free
  4286  003154  C076  F08C         	movff	?___lwtoft,util_getBatteryVoltage@value
  4287  003158  C077  F08D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4288  00315C  C078  F08E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4289                           
  4290                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4291  003160  9C9E               	bcf	3998,6,c	;volatile
  4292                           
  4293                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4294  003162  90C2               	bcf	4034,0,c	;volatile
  4295                           
  4296                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4297  003164  C08C  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4298  003168  C08D  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4299  00316C  C08E  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4300  003170  0E33               	movlw	51
  4301  003172  0100               	movlb	0	; () banked
  4302  003174  6F80               	movwf	___ftmul@f2& (0+255),b
  4303  003176  0E03               	movlw	3
  4304  003178  0100               	movlb	0	; () banked
  4305  00317A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4306  00317C  0E3B               	movlw	59
  4307  00317E  0100               	movlb	0	; () banked
  4308  003180  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4309  003182  ECD0  F014         	call	___ftmul	;wreg free
  4310  003186  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4311  00318A  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4312  00318E  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4313                           
  4314                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4315  003192  C08F  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4316  003196  C090  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4317  00319A  C091  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4318  00319E  0E66               	movlw	102
  4319  0031A0  0100               	movlb	0	; () banked
  4320  0031A2  6F80               	movwf	___ftmul@f2& (0+255),b
  4321  0031A4  0EB6               	movlw	182
  4322  0031A6  0100               	movlb	0	; () banked
  4323  0031A8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4324  0031AA  0E40               	movlw	64
  4325  0031AC  0100               	movlb	0	; () banked
  4326  0031AE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4327  0031B0  ECD0  F014         	call	___ftmul	;wreg free
  4328  0031B4  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4329  0031B8  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4330  0031BC  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4331                           
  4332                           ;easat2_util_inputs.c: 46: return voltage;
  4333  0031C0  C08F  F089         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4334  0031C4  C090  F08A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4335  0031C8  C091  F08B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4336  0031CC  0012               	return	
  4337  0031CE                     __end_of_util_getBatteryVoltage:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           postdec1	equ	0xFE5
  4346                           fsr1l	equ	0xFE1
  4347                           postinc2	equ	0xFDE
  4348                           postdec2	equ	0xFDD
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function _util_getBatteryCurrent *****************
  4354 ;; Defined at:
  4355 ;;		line 85 in file "easat2_util_inputs.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  batteryCurre    3   68[BANK0 ] float 
  4360 ;;  value           3   65[BANK0 ] float 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   63[BANK0 ] int 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:         0       2       0       0       0       0       0
  4371 ;;      Locals:         0       6       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0
  4373 ;;      Totals:         0       8       0       0       0       0       0
  4374 ;;Total ram usage:        8 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    5
  4377 ;; This function calls:
  4378 ;;		___ftmul
  4379 ;;		___fttol
  4380 ;;		___lwtoft
  4381 ;; This function is called by:
  4382 ;;		_main_loop
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text15
  4387  003046                     __ptext15:
  4388                           	opt stack 0
  4389  003046                     _util_getBatteryCurrent:
  4390                           	opt stack 24
  4391                           
  4392                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4393                           
  4394                           ;incstack = 0
  4395  003046  0E00               	movlw	0
  4396  003048  0100               	movlb	0	; () banked
  4397  00304A  6FA1               	movwf	util_getBatteryCurrent@value& (0+255),b
  4398  00304C  0E00               	movlw	0
  4399  00304E  0100               	movlb	0	; () banked
  4400  003050  6FA2               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4401  003052  0E00               	movlw	0
  4402  003054  0100               	movlb	0	; () banked
  4403  003056  6FA3               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4404  003058  0E00               	movlw	0
  4405  00305A  0100               	movlb	0	; () banked
  4406  00305C  6FA4               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4407  00305E  0E00               	movlw	0
  4408  003060  0100               	movlb	0	; () banked
  4409  003062  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4410  003064  0E00               	movlw	0
  4411  003066  0100               	movlb	0	; () banked
  4412  003068  6FA6               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4416  00306A  94C2               	bcf	4034,2,c	;volatile
  4417  00306C  96C2               	bcf	4034,3,c	;volatile
  4418  00306E  88C2               	bsf	4034,4,c	;volatile
  4419  003070  8AC2               	bsf	4034,5,c	;volatile
  4420  003072  9CC2               	bcf	4034,6,c	;volatile
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4424  003074  80C2               	bsf	4034,0,c	;volatile
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4428  003076  9C9E               	bcf	3998,6,c	;volatile
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4432  003078  82C2               	bsf	4034,1,c	;volatile
  4433  00307A                     l120:
  4434  00307A  AC9E               	btfss	3998,6,c	;volatile
  4435  00307C  D7FE               	goto	l120
  4436                           
  4437                           ;easat2_util_inputs.c: 96: value = ADRES;
  4438  00307E  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4439  003082  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4440  003086  ECF8  F01D         	call	___lwtoft	;wreg free
  4441  00308A  C076  F0A1         	movff	?___lwtoft,util_getBatteryCurrent@value
  4442  00308E  C077  F0A2         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4443  003092  C078  F0A3         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4444                           
  4445                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4446  003096  9C9E               	bcf	3998,6,c	;volatile
  4447                           
  4448                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4449  003098  90C2               	bcf	4034,0,c	;volatile
  4450                           
  4451                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4452  00309A  C0A1  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4453  00309E  C0A2  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4454  0030A2  C0A3  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4455  0030A6  0E33               	movlw	51
  4456  0030A8  0100               	movlb	0	; () banked
  4457  0030AA  6F80               	movwf	___ftmul@f2& (0+255),b
  4458  0030AC  0E03               	movlw	3
  4459  0030AE  0100               	movlb	0	; () banked
  4460  0030B0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4461  0030B2  0E3B               	movlw	59
  4462  0030B4  0100               	movlb	0	; () banked
  4463  0030B6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4464  0030B8  ECD0  F014         	call	___ftmul	;wreg free
  4465  0030BC  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4466  0030C0  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4467  0030C4  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4468                           
  4469                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4470  0030C8  C0A4  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4471  0030CC  C0A5  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4472  0030D0  C0A6  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4473  0030D4  0E00               	movlw	0
  4474  0030D6  0100               	movlb	0	; () banked
  4475  0030D8  6F80               	movwf	___ftmul@f2& (0+255),b
  4476  0030DA  0E80               	movlw	128
  4477  0030DC  0100               	movlb	0	; () banked
  4478  0030DE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4479  0030E0  0E3F               	movlw	63
  4480  0030E2  0100               	movlb	0	; () banked
  4481  0030E4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4482  0030E6  ECD0  F014         	call	___ftmul	;wreg free
  4483  0030EA  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4484  0030EE  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4485  0030F2  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4486                           
  4487                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4488  0030F6  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4489  0030FA  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4490  0030FE  C0A6  F092         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4491  003102  EC79  F015         	call	___fttol	;wreg free
  4492  003106  C090  F09F         	movff	?___fttol,?_util_getBatteryCurrent
  4493  00310A  C091  F0A0         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4494  00310E  0012               	return	
  4495  003110                     __end_of_util_getBatteryCurrent:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1l	equ	0xFE1
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function ___lwtoft *****************
  4512 ;; Defined at:
  4513 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  c               2   22[BANK0 ] unsigned int 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  3   22[BANK0 ] float 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4527 ;;      Params:         0       3       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0
  4530 ;;      Totals:         0       3       0       0       0       0       0
  4531 ;;Total ram usage:        3 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    4
  4534 ;; This function calls:
  4535 ;;		___ftpack
  4536 ;; This function is called by:
  4537 ;;		_util_getBatteryVoltage
  4538 ;;		_util_getSolarCurrent
  4539 ;;		_util_getBatteryCurrent
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text16
  4544  003BF0                     __ptext16:
  4545                           	opt stack 0
  4546  003BF0                     ___lwtoft:
  4547                           	opt stack 24
  4548                           
  4549                           ;incstack = 0
  4550  003BF0  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  4551  003BF4  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  4552  003BF8  0100               	movlb	0	; () banked
  4553  003BFA  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4554  003BFC  0E8E               	movlw	142
  4555  003BFE  0100               	movlb	0	; () banked
  4556  003C00  6F74               	movwf	___ftpack@exp& (0+255),b
  4557  003C02  0E00               	movlw	0
  4558  003C04  0100               	movlb	0	; () banked
  4559  003C06  6F75               	movwf	___ftpack@sign& (0+255),b
  4560  003C08  EC44  F017         	call	___ftpack	;wreg free
  4561  003C0C  C071  F076         	movff	?___ftpack,?___lwtoft
  4562  003C10  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  4563  003C14  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  4564  003C18  0012               	return	
  4565  003C1A                     __end_of___lwtoft:
  4566                           	opt stack 0
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           postinc0	equ	0xFEE
  4572                           wreg	equ	0xFE8
  4573                           postdec1	equ	0xFE5
  4574                           fsr1l	equ	0xFE1
  4575                           postinc2	equ	0xFDE
  4576                           postdec2	equ	0xFDD
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _util_beacon_transmission *****************
  4582 ;; Defined at:
  4583 ;;		line 21 in file "easat2_util_transmission.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  battery_volt    3  114[BANK0 ] float 
  4586 ;;  solar_curren    2  117[BANK0 ] int 
  4587 ;;  battery_curr    2  119[BANK0 ] int 
  4588 ;;  temperature     3  121[BANK0 ] float 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  i               2  192[BANK1 ] int 
  4591 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4592 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4602 ;;      Params:         0      10       0       0       0       0       0
  4603 ;;      Locals:         0       0     194       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0
  4605 ;;      Totals:         0      10     194       0       0       0       0
  4606 ;;Total ram usage:      204 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    8
  4609 ;; This function calls:
  4610 ;;		_memset
  4611 ;;		_sprintf
  4612 ;;		_strcat
  4613 ;;		_strcpy
  4614 ;;		_strlen
  4615 ;;		_util_transmit_letter
  4616 ;; This function is called by:
  4617 ;;		_main_loop
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text17
  4622  002D76                     __ptext17:
  4623                           	opt stack 0
  4624  002D76                     _util_beacon_transmission:
  4625                           	opt stack 21
  4626                           
  4627                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4628                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4629                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4630                           
  4631                           ;incstack = 0
  4632  002D76  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4633  002D78  0100               	movlb	0	; () banked
  4634  002D7A  6F71               	movwf	memset@p1& (0+255),b
  4635  002D7C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4636  002D7E  0100               	movlb	0	; () banked
  4637  002D80  6F72               	movwf	(memset@p1+1)& (0+255),b
  4638  002D82  0E00               	movlw	0
  4639  002D84  0100               	movlb	0	; () banked
  4640  002D86  6F74               	movwf	(memset@c+1)& (0+255),b
  4641  002D88  0E00               	movlw	0
  4642  002D8A  6F73               	movwf	memset@c& (0+255),b
  4643  002D8C  0E00               	movlw	0
  4644  002D8E  0100               	movlb	0	; () banked
  4645  002D90  6F76               	movwf	(memset@n+1)& (0+255),b
  4646  002D92  0E80               	movlw	128
  4647  002D94  6F75               	movwf	memset@n& (0+255),b
  4648  002D96  EC97  F01D         	call	_memset	;wreg free
  4649                           
  4650                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4651  002D9A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4652  002D9C  0100               	movlb	0	; () banked
  4653  002D9E  6F71               	movwf	strcpy@to& (0+255),b
  4654  002DA0  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4655  002DA2  0100               	movlb	0	; () banked
  4656  002DA4  6F72               	movwf	(strcpy@to+1)& (0+255),b
  4657  002DA6  0E9E               	movlw	low STR_1
  4658  002DA8  0100               	movlb	0	; () banked
  4659  002DAA  6F73               	movwf	strcpy@from& (0+255),b
  4660  002DAC  0E7F               	movlw	high STR_1
  4661  002DAE  0100               	movlb	0	; () banked
  4662  002DB0  6F74               	movwf	(strcpy@from+1)& (0+255),b
  4663  002DB2  EC65  F01D         	call	_strcpy	;wreg free
  4664                           
  4665                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4666  002DB6  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4667  002DB8  0100               	movlb	0	; () banked
  4668  002DBA  6F71               	movwf	memset@p1& (0+255),b
  4669  002DBC  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4670  002DBE  0100               	movlb	0	; () banked
  4671  002DC0  6F72               	movwf	(memset@p1+1)& (0+255),b
  4672  002DC2  0E00               	movlw	0
  4673  002DC4  0100               	movlb	0	; () banked
  4674  002DC6  6F74               	movwf	(memset@c+1)& (0+255),b
  4675  002DC8  0E00               	movlw	0
  4676  002DCA  6F73               	movwf	memset@c& (0+255),b
  4677  002DCC  0E00               	movlw	0
  4678  002DCE  0100               	movlb	0	; () banked
  4679  002DD0  6F76               	movwf	(memset@n+1)& (0+255),b
  4680  002DD2  0E40               	movlw	64
  4681  002DD4  6F75               	movwf	memset@n& (0+255),b
  4682  002DD6  EC97  F01D         	call	_memset	;wreg free
  4683                           
  4684                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4685                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4686  002DDA  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4687  002DDC  0100               	movlb	0	; () banked
  4688  002DDE  6FA5               	movwf	sprintf@sp& (0+255),b
  4689  002DE0  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4690  002DE2  0100               	movlb	0	; () banked
  4691  002DE4  6FA6               	movwf	(sprintf@sp+1)& (0+255),b
  4692  002DE6  0E6B               	movlw	low STR_2
  4693  002DE8  0100               	movlb	0	; () banked
  4694  002DEA  6FA7               	movwf	sprintf@f& (0+255),b
  4695  002DEC  0E7F               	movlw	high STR_2
  4696  002DEE  0100               	movlb	0	; () banked
  4697  002DF0  6FA8               	movwf	(sprintf@f+1)& (0+255),b
  4698  002DF2  C0D9  F0A9         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4699  002DF6  C0DA  F0AA         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4700  002DFA  C0DB  F0AB         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4701  002DFE  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4702  002E02  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4703  002E06  C0D4  F0AE         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4704  002E0A  C0D5  F0AF         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4705  002E0E  C0D6  F0B0         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4706  002E12  C0D7  F0B1         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4707  002E16  C0D8  F0B2         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4708  002E1A  EC55  F000         	call	_sprintf	;wreg free
  4709                           
  4710                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4711  002E1E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4712  002E20  0100               	movlb	0	; () banked
  4713  002E22  6F71               	movwf	strcat@to& (0+255),b
  4714  002E24  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4715  002E26  0100               	movlb	0	; () banked
  4716  002E28  6F72               	movwf	(strcat@to+1)& (0+255),b
  4717  002E2A  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4718  002E2C  0100               	movlb	0	; () banked
  4719  002E2E  6F73               	movwf	strcat@from& (0+255),b
  4720  002E30  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4721  002E32  0100               	movlb	0	; () banked
  4722  002E34  6F74               	movwf	(strcat@from+1)& (0+255),b
  4723  002E36  EC5F  F01C         	call	_strcat	;wreg free
  4724                           
  4725                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4726  002E3A  0E00               	movlw	0
  4727  002E3C  0101               	movlb	1	; () banked
  4728  002E3E  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4729  002E40  0E00               	movlw	0
  4730  002E42  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4731  002E44  D00E               	goto	l6084
  4732  002E46                     l6080:
  4733                           
  4734                           ; BSR set to: 1
  4735                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4736  002E46  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4737  002E48  0101               	movlb	1	; () banked
  4738  002E4A  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4739  002E4C  6ED9               	movwf	fsr2l,c
  4740  002E4E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4741  002E50  0101               	movlb	1	; () banked
  4742  002E52  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4743  002E54  6EDA               	movwf	fsr2h,c
  4744  002E56  50DF               	movf	indf2,w,c
  4745  002E58  EC4C  F00C         	call	_util_transmit_letter
  4746  002E5C  0101               	movlb	1	; () banked
  4747  002E5E  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4748  002E60  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4749  002E62                     l6084:
  4750                           
  4751                           ; BSR set to: 1
  4752  002E62  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4753  002E64  0100               	movlb	0	; () banked
  4754  002E66  6F71               	movwf	strlen@s& (0+255),b
  4755  002E68  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4756  002E6A  0100               	movlb	0	; () banked
  4757  002E6C  6F72               	movwf	(strlen@s+1)& (0+255),b
  4758  002E6E  ECC1  F01B         	call	_strlen	;wreg free
  4759  002E72  0100               	movlb	0	; () banked
  4760  002E74  5171               	movf	?_strlen& (0+255),w,b
  4761  002E76  0101               	movlb	1	; () banked
  4762  002E78  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4763  002E7A  0100               	movlb	0	; () banked
  4764  002E7C  5172               	movf	(?_strlen+1)& (0+255),w,b
  4765  002E7E  0101               	movlb	1	; () banked
  4766  002E80  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4767  002E82  B0D8               	btfsc	status,0,c
  4768  002E84  0012               	return	
  4769  002E86  D7DF               	goto	l6080
  4770  002E88                     __end_of_util_beacon_transmission:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postdec1	equ	0xFE5
  4779                           fsr1l	equ	0xFE1
  4780                           indf2	equ	0xFDF
  4781                           postinc2	equ	0xFDE
  4782                           postdec2	equ	0xFDD
  4783                           fsr2h	equ	0xFDA
  4784                           fsr2l	equ	0xFD9
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _util_transmit_letter *****************
  4788 ;; Defined at:
  4789 ;;		line 52 in file "easat2_util_transmission.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  letter          1    wreg     unsigned char 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  letter          1   42[COMRAM] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         0       0       0       0       0       0       0
  4804 ;;      Locals:         1       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0
  4806 ;;      Totals:         1       0       0       0       0       0       0
  4807 ;;Total ram usage:        1 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    7
  4810 ;; This function calls:
  4811 ;;		_util_transmit_morse_sequence
  4812 ;;		_util_transmit_space_between_letters
  4813 ;;		_util_transmit_space_between_words
  4814 ;; This function is called by:
  4815 ;;		_util_beacon_transmission
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text18
  4820  001898                     __ptext18:
  4821                           	opt stack 0
  4822  001898                     _util_transmit_letter:
  4823                           	opt stack 21
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;incstack = 0
  4827                           ;util_transmit_letter@letter stored from wreg
  4828  001898  6E2B               	movwf	util_transmit_letter@letter,c
  4829                           
  4830                           ;easat2_util_transmission.c: 54: switch (letter) {
  4831  00189A  D174               	goto	l5806
  4832  00189C                     l5720:
  4833                           
  4834                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4835  00189C  0EE8               	movlw	low (STR_19+2)
  4836  00189E  0100               	movlb	0	; () banked
  4837  0018A0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4838  0018A2  0E7F               	movlw	high (STR_19+2)
  4839  0018A4  0100               	movlb	0	; () banked
  4840  0018A6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4841  0018A8  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4842                           
  4843                           ;easat2_util_transmission.c: 61: break;
  4844  0018AC  D1EA               	goto	l5808
  4845  0018AE                     l5722:
  4846                           
  4847                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4848  0018AE  0ED0               	movlw	low (STR_36+1)
  4849  0018B0  0100               	movlb	0	; () banked
  4850  0018B2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4851  0018B4  0E7F               	movlw	high (STR_36+1)
  4852  0018B6  0100               	movlb	0	; () banked
  4853  0018B8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4854  0018BA  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4855                           
  4856                           ;easat2_util_transmission.c: 64: break;
  4857  0018BE  D1E1               	goto	l5808
  4858  0018C0                     l5724:
  4859                           
  4860                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4861  0018C0  0EF5               	movlw	low STR_5
  4862  0018C2  0100               	movlb	0	; () banked
  4863  0018C4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4864  0018C6  0E7F               	movlw	high STR_5
  4865  0018C8  0100               	movlb	0	; () banked
  4866  0018CA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4867  0018CC  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4868                           
  4869                           ;easat2_util_transmission.c: 67: break;
  4870  0018D0  D1D8               	goto	l5808
  4871  0018D2                     l5726:
  4872                           
  4873                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4874  0018D2  0ECB               	movlw	low (STR_37+2)
  4875  0018D4  0100               	movlb	0	; () banked
  4876  0018D6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4877  0018D8  0E7F               	movlw	high (STR_37+2)
  4878  0018DA  0100               	movlb	0	; () banked
  4879  0018DC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4880  0018DE  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4881                           
  4882                           ;easat2_util_transmission.c: 70: break;
  4883  0018E2  D1CF               	goto	l5808
  4884  0018E4                     l5728:
  4885                           
  4886                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4887  0018E4  0EC1               	movlw	low (STR_38+4)
  4888  0018E6  0100               	movlb	0	; () banked
  4889  0018E8  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4890  0018EA  0E7F               	movlw	high (STR_38+4)
  4891  0018EC  0100               	movlb	0	; () banked
  4892  0018EE  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4893  0018F0  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4894                           
  4895                           ;easat2_util_transmission.c: 73: break;
  4896  0018F4  D1C6               	goto	l5808
  4897  0018F6                     l5730:
  4898                           
  4899                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4900  0018F6  0EC4               	movlw	low (STR_41+1)
  4901  0018F8  0100               	movlb	0	; () banked
  4902  0018FA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4903  0018FC  0E7F               	movlw	high (STR_41+1)
  4904  0018FE  0100               	movlb	0	; () banked
  4905  001900  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4906  001902  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4907                           
  4908                           ;easat2_util_transmission.c: 76: break;
  4909  001906  D1BD               	goto	l5808
  4910  001908                     l5732:
  4911                           
  4912                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4913  001908  0EBF               	movlw	low (STR_38+2)
  4914  00190A  0100               	movlb	0	; () banked
  4915  00190C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4916  00190E  0E7F               	movlw	high (STR_38+2)
  4917  001910  0100               	movlb	0	; () banked
  4918  001912  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4919  001914  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4920                           
  4921                           ;easat2_util_transmission.c: 79: break;
  4922  001918  D1B4               	goto	l5808
  4923  00191A                     l5734:
  4924                           
  4925                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4926  00191A  0ED6               	movlw	low (STR_35+1)
  4927  00191C  0100               	movlb	0	; () banked
  4928  00191E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4929  001920  0E7F               	movlw	high (STR_35+1)
  4930  001922  0100               	movlb	0	; () banked
  4931  001924  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4932  001926  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4933                           
  4934                           ;easat2_util_transmission.c: 82: break;
  4935  00192A  D1AB               	goto	l5808
  4936  00192C                     l5736:
  4937                           
  4938                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4939  00192C  0ECC               	movlw	low (STR_37+3)
  4940  00192E  0100               	movlb	0	; () banked
  4941  001930  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4942  001932  0E7F               	movlw	high (STR_37+3)
  4943  001934  0100               	movlb	0	; () banked
  4944  001936  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4945  001938  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4946                           
  4947                           ;easat2_util_transmission.c: 85: break;
  4948  00193C  D1A2               	goto	l5808
  4949  00193E                     l5738:
  4950                           
  4951                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4952  00193E  0EB2               	movlw	low (STR_31+1)
  4953  001940  0100               	movlb	0	; () banked
  4954  001942  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4955  001944  0E7F               	movlw	high (STR_31+1)
  4956  001946  0100               	movlb	0	; () banked
  4957  001948  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4958  00194A  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4959                           
  4960                           ;easat2_util_transmission.c: 88: break;
  4961  00194E  D199               	goto	l5808
  4962  001950                     l5740:
  4963                           
  4964                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4965  001950  0EE7               	movlw	low (STR_19+1)
  4966  001952  0100               	movlb	0	; () banked
  4967  001954  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4968  001956  0E7F               	movlw	high (STR_19+1)
  4969  001958  0100               	movlb	0	; () banked
  4970  00195A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4971  00195C  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4972                           
  4973                           ;easat2_util_transmission.c: 91: break;
  4974  001960  D190               	goto	l5808
  4975  001962                     l5742:
  4976                           
  4977                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4978  001962  0EFA               	movlw	low STR_14
  4979  001964  0100               	movlb	0	; () banked
  4980  001966  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4981  001968  0E7F               	movlw	high STR_14
  4982  00196A  0100               	movlb	0	; () banked
  4983  00196C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4984  00196E  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4985                           
  4986                           ;easat2_util_transmission.c: 94: break;
  4987  001972  D187               	goto	l5808
  4988  001974                     l5744:
  4989                           
  4990                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4991  001974  0EA8               	movlw	low (STR_29+3)
  4992  001976  0100               	movlb	0	; () banked
  4993  001978  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4994  00197A  0E7F               	movlw	high (STR_29+3)
  4995  00197C  0100               	movlb	0	; () banked
  4996  00197E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4997  001980  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4998                           
  4999                           ;easat2_util_transmission.c: 97: break;
  5000  001984  D17E               	goto	l5808
  5001  001986                     l5746:
  5002                           
  5003                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  5004  001986  0EC0               	movlw	low (STR_38+3)
  5005  001988  0100               	movlb	0	; () banked
  5006  00198A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5007  00198C  0E7F               	movlw	high (STR_38+3)
  5008  00198E  0100               	movlb	0	; () banked
  5009  001990  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5010  001992  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5011                           
  5012                           ;easat2_util_transmission.c: 100: break;
  5013  001996  D175               	goto	l5808
  5014  001998                     l5748:
  5015                           
  5016                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  5017  001998  0EA7               	movlw	low (STR_29+2)
  5018  00199A  0100               	movlb	0	; () banked
  5019  00199C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5020  00199E  0E7F               	movlw	high (STR_29+2)
  5021  0019A0  0100               	movlb	0	; () banked
  5022  0019A2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5023  0019A4  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5024                           
  5025                           ;easat2_util_transmission.c: 103: break;
  5026  0019A8  D16C               	goto	l5808
  5027  0019AA                     l5750:
  5028                           
  5029                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  5030  0019AA  0EF0               	movlw	low STR_18
  5031  0019AC  0100               	movlb	0	; () banked
  5032  0019AE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5033  0019B0  0E7F               	movlw	high STR_18
  5034  0019B2  0100               	movlb	0	; () banked
  5035  0019B4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5036  0019B6  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5037                           
  5038                           ;easat2_util_transmission.c: 106: break;
  5039  0019BA  D163               	goto	l5808
  5040  0019BC                     l5752:
  5041                           
  5042                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  5043  0019BC  0EE6               	movlw	low STR_19
  5044  0019BE  0100               	movlb	0	; () banked
  5045  0019C0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5046  0019C2  0E7F               	movlw	high STR_19
  5047  0019C4  0100               	movlb	0	; () banked
  5048  0019C6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5049  0019C8  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5050                           
  5051                           ;easat2_util_transmission.c: 109: break;
  5052  0019CC  D15A               	goto	l5808
  5053  0019CE                     l5754:
  5054                           
  5055                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  5056  0019CE  0EF6               	movlw	low (STR_5+1)
  5057  0019D0  0100               	movlb	0	; () banked
  5058  0019D2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5059  0019D4  0E7F               	movlw	high (STR_5+1)
  5060  0019D6  0100               	movlb	0	; () banked
  5061  0019D8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5062  0019DA  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5063                           
  5064                           ;easat2_util_transmission.c: 112: break;
  5065  0019DE  D151               	goto	l5808
  5066  0019E0                     l5756:
  5067                           
  5068                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  5069  0019E0  0ED1               	movlw	low (STR_36+2)
  5070  0019E2  0100               	movlb	0	; () banked
  5071  0019E4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5072  0019E6  0E7F               	movlw	high (STR_36+2)
  5073  0019E8  0100               	movlb	0	; () banked
  5074  0019EA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5075  0019EC  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5076                           
  5077                           ;easat2_util_transmission.c: 115: break;
  5078  0019F0  D148               	goto	l5808
  5079  0019F2                     l5758:
  5080                           
  5081                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  5082  0019F2  0EA9               	movlw	low (STR_29+4)
  5083  0019F4  0100               	movlb	0	; () banked
  5084  0019F6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5085  0019F8  0E7F               	movlw	high (STR_29+4)
  5086  0019FA  0100               	movlb	0	; () banked
  5087  0019FC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5088  0019FE  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5089                           
  5090                           ;easat2_util_transmission.c: 118: break;
  5091  001A02  D13F               	goto	l5808
  5092  001A04                     l5760:
  5093                           
  5094                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  5095  001A04  0EEC               	movlw	low (STR_26+1)
  5096  001A06  0100               	movlb	0	; () banked
  5097  001A08  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5098  001A0A  0E7F               	movlw	high (STR_26+1)
  5099  001A0C  0100               	movlb	0	; () banked
  5100  001A0E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5101  001A10  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5102                           
  5103                           ;easat2_util_transmission.c: 121: break;
  5104  001A14  D136               	goto	l5808
  5105  001A16                     l5762:
  5106                           
  5107                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  5108  001A16  0E92               	movlw	low (STR_43+2)
  5109  001A18  0100               	movlb	0	; () banked
  5110  001A1A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5111  001A1C  0E7F               	movlw	high (STR_43+2)
  5112  001A1E  0100               	movlb	0	; () banked
  5113  001A20  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5114  001A22  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5115                           
  5116                           ;easat2_util_transmission.c: 124: break;
  5117  001A26  D12D               	goto	l5808
  5118  001A28                     l5764:
  5119                           
  5120                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  5121  001A28  0EE2               	movlw	low (STR_27+1)
  5122  001A2A  0100               	movlb	0	; () banked
  5123  001A2C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5124  001A2E  0E7F               	movlw	high (STR_27+1)
  5125  001A30  0100               	movlb	0	; () banked
  5126  001A32  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5127  001A34  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5128                           
  5129                           ;easat2_util_transmission.c: 127: break;
  5130  001A38  D124               	goto	l5808
  5131  001A3A                     l5766:
  5132                           
  5133                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  5134  001A3A  0EEB               	movlw	low STR_26
  5135  001A3C  0100               	movlb	0	; () banked
  5136  001A3E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5137  001A40  0E7F               	movlw	high STR_26
  5138  001A42  0100               	movlb	0	; () banked
  5139  001A44  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5140  001A46  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5141                           
  5142                           ;easat2_util_transmission.c: 130: break;
  5143  001A4A  D11B               	goto	l5808
  5144  001A4C                     l5768:
  5145                           
  5146                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  5147  001A4C  0EE1               	movlw	low STR_27
  5148  001A4E  0100               	movlb	0	; () banked
  5149  001A50  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5150  001A52  0E7F               	movlw	high STR_27
  5151  001A54  0100               	movlb	0	; () banked
  5152  001A56  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5153  001A58  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5154                           
  5155                           ;easat2_util_transmission.c: 133: break;
  5156  001A5C  D112               	goto	l5808
  5157  001A5E                     l5770:
  5158                           
  5159                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  5160  001A5E  0ECA               	movlw	low (STR_37+1)
  5161  001A60  0100               	movlb	0	; () banked
  5162  001A62  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5163  001A64  0E7F               	movlw	high (STR_37+1)
  5164  001A66  0100               	movlb	0	; () banked
  5165  001A68  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5166  001A6A  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5167                           
  5168                           ;easat2_util_transmission.c: 136: break;
  5169  001A6E  D109               	goto	l5808
  5170  001A70                     l5772:
  5171                           
  5172                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  5173  001A70  0EA5               	movlw	low STR_29
  5174  001A72  0100               	movlb	0	; () banked
  5175  001A74  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5176  001A76  0E7F               	movlw	high STR_29
  5177  001A78  0100               	movlb	0	; () banked
  5178  001A7A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5179  001A7C  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5180                           
  5181                           ;easat2_util_transmission.c: 139: break;
  5182  001A80  D100               	goto	l5808
  5183  001A82                     l5774:
  5184                           
  5185                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  5186  001A82  0EAB               	movlw	low STR_30
  5187  001A84  0100               	movlb	0	; () banked
  5188  001A86  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5189  001A88  0E7F               	movlw	high STR_30
  5190  001A8A  0100               	movlb	0	; () banked
  5191  001A8C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5192  001A8E  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5193                           
  5194                           ;easat2_util_transmission.c: 142: break;
  5195  001A92  D0F7               	goto	l5808
  5196  001A94                     l5776:
  5197                           
  5198                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  5199  001A94  0EB1               	movlw	low STR_31
  5200  001A96  0100               	movlb	0	; () banked
  5201  001A98  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5202  001A9A  0E7F               	movlw	high STR_31
  5203  001A9C  0100               	movlb	0	; () banked
  5204  001A9E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5205  001AA0  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5206                           
  5207                           ;easat2_util_transmission.c: 145: break;
  5208  001AA4  D0EE               	goto	l5808
  5209  001AA6                     l5778:
  5210                           
  5211                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  5212  001AA6  0EB7               	movlw	low STR_32
  5213  001AA8  0100               	movlb	0	; () banked
  5214  001AAA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5215  001AAC  0E7F               	movlw	high STR_32
  5216  001AAE  0100               	movlb	0	; () banked
  5217  001AB0  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5218  001AB2  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5219                           
  5220                           ;easat2_util_transmission.c: 148: break;
  5221  001AB6  D0E5               	goto	l5808
  5222  001AB8                     l5780:
  5223                           
  5224                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  5225  001AB8  0E91               	movlw	low (STR_43+1)
  5226  001ABA  0100               	movlb	0	; () banked
  5227  001ABC  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5228  001ABE  0E7F               	movlw	high (STR_43+1)
  5229  001AC0  0100               	movlb	0	; () banked
  5230  001AC2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5231  001AC4  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5232                           
  5233                           ;easat2_util_transmission.c: 151: break;
  5234  001AC8  D0DC               	goto	l5808
  5235  001ACA                     l5782:
  5236                           
  5237                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  5238  001ACA  0EDB               	movlw	low STR_34
  5239  001ACC  0100               	movlb	0	; () banked
  5240  001ACE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5241  001AD0  0E7F               	movlw	high STR_34
  5242  001AD2  0100               	movlb	0	; () banked
  5243  001AD4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5244  001AD6  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5245                           
  5246                           ;easat2_util_transmission.c: 154: break;
  5247  001ADA  D0D3               	goto	l5808
  5248  001ADC                     l5784:
  5249                           
  5250                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  5251  001ADC  0ED5               	movlw	low STR_35
  5252  001ADE  0100               	movlb	0	; () banked
  5253  001AE0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5254  001AE2  0E7F               	movlw	high STR_35
  5255  001AE4  0100               	movlb	0	; () banked
  5256  001AE6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5257  001AE8  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5258                           
  5259                           ;easat2_util_transmission.c: 157: break;
  5260  001AEC  D0CA               	goto	l5808
  5261  001AEE                     l5786:
  5262                           
  5263                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  5264  001AEE  0ECF               	movlw	low STR_36
  5265  001AF0  0100               	movlb	0	; () banked
  5266  001AF2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5267  001AF4  0E7F               	movlw	high STR_36
  5268  001AF6  0100               	movlb	0	; () banked
  5269  001AF8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5270  001AFA  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5271                           
  5272                           ;easat2_util_transmission.c: 160: break;
  5273  001AFE  D0C1               	goto	l5808
  5274  001B00                     l5788:
  5275                           
  5276                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  5277  001B00  0EC9               	movlw	low STR_37
  5278  001B02  0100               	movlb	0	; () banked
  5279  001B04  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5280  001B06  0E7F               	movlw	high STR_37
  5281  001B08  0100               	movlb	0	; () banked
  5282  001B0A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5283  001B0C  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5284                           
  5285                           ;easat2_util_transmission.c: 163: break;
  5286  001B10  D0B8               	goto	l5808
  5287  001B12                     l5790:
  5288                           
  5289                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  5290  001B12  0EBD               	movlw	low STR_38
  5291  001B14  0100               	movlb	0	; () banked
  5292  001B16  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5293  001B18  0E7F               	movlw	high STR_38
  5294  001B1A  0100               	movlb	0	; () banked
  5295  001B1C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5296  001B1E  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5297                           
  5298                           ;easat2_util_transmission.c: 166: break;
  5299  001B22  D0AF               	goto	l5808
  5300  001B24                     l5792:
  5301                           
  5302                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  5303  001B24  0E82               	movlw	low STR_39
  5304  001B26  0100               	movlb	0	; () banked
  5305  001B28  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5306  001B2A  0E7F               	movlw	high STR_39
  5307  001B2C  0100               	movlb	0	; () banked
  5308  001B2E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5309  001B30  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5310                           
  5311                           ;easat2_util_transmission.c: 169: break;
  5312  001B34  D0A6               	goto	l5808
  5313  001B36                     l5794:
  5314                           
  5315                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  5316  001B36  0E97               	movlw	low STR_40
  5317  001B38  0100               	movlb	0	; () banked
  5318  001B3A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5319  001B3C  0E7F               	movlw	high STR_40
  5320  001B3E  0100               	movlb	0	; () banked
  5321  001B40  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5322  001B42  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5323                           
  5324                           ;easat2_util_transmission.c: 172: break;
  5325  001B46  D09D               	goto	l5808
  5326  001B48                     l5796:
  5327                           
  5328                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  5329  001B48  0EC3               	movlw	low STR_41
  5330  001B4A  0100               	movlb	0	; () banked
  5331  001B4C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5332  001B4E  0E7F               	movlw	high STR_41
  5333  001B50  0100               	movlb	0	; () banked
  5334  001B52  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5335  001B54  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5336                           
  5337                           ;easat2_util_transmission.c: 175: break;
  5338  001B58  D094               	goto	l5808
  5339  001B5A                     l5798:
  5340                           
  5341                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  5342  001B5A  0E89               	movlw	low STR_42
  5343  001B5C  0100               	movlb	0	; () banked
  5344  001B5E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5345  001B60  0E7F               	movlw	high STR_42
  5346  001B62  0100               	movlb	0	; () banked
  5347  001B64  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5348  001B66  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5349                           
  5350                           ;easat2_util_transmission.c: 178: break;
  5351  001B6A  D08B               	goto	l5808
  5352  001B6C                     l5800:
  5353                           
  5354                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  5355  001B6C  0E90               	movlw	low STR_43
  5356  001B6E  0100               	movlb	0	; () banked
  5357  001B70  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5358  001B72  0E7F               	movlw	high STR_43
  5359  001B74  0100               	movlb	0	; () banked
  5360  001B76  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5361  001B78  EC8F  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5362                           
  5363                           ;easat2_util_transmission.c: 181: break;
  5364  001B7C  D082               	goto	l5808
  5365  001B7E                     l5802:
  5366                           
  5367                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  5368  001B7E  EC40  F01E         	call	_util_transmit_space_between_words	;wreg free
  5369                           
  5370                           ;easat2_util_transmission.c: 188: }
  5371                           
  5372                           ;easat2_util_transmission.c: 186: break;
  5373                           
  5374                           ;easat2_util_transmission.c: 185: default:
  5375                           
  5376                           ;easat2_util_transmission.c: 184: break;
  5377  001B82  D07F               	goto	l5808
  5378  001B84                     l5806:
  5379  001B84  502B               	movf	util_transmit_letter@letter,w,c
  5380                           
  5381                           ; Switch size 1, requested type "space"
  5382                           ; Number of cases is 42, Range of values is 32 to 90
  5383                           ; switch strategies available:
  5384                           ; Name         Instructions Cycles
  5385                           ; simple_byte          127    64 (average)
  5386                           ;	Chosen strategy is simple_byte
  5387  001B86  0A20               	xorlw	32	; case 32
  5388  001B88  B4D8               	btfsc	status,2,c
  5389  001B8A  D7F9               	goto	l5802
  5390  001B8C  0A0C               	xorlw	12	; case 44
  5391  001B8E  B4D8               	btfsc	status,2,c
  5392  001B90  D7C9               	goto	l5792
  5393  001B92  0A01               	xorlw	1	; case 45
  5394  001B94  B4D8               	btfsc	status,2,c
  5395  001B96  D7EA               	goto	l5800
  5396  001B98  0A03               	xorlw	3	; case 46
  5397  001B9A  B4D8               	btfsc	status,2,c
  5398  001B9C  D7DE               	goto	l5798
  5399  001B9E  0A01               	xorlw	1	; case 47
  5400  001BA0  B4D8               	btfsc	status,2,c
  5401  001BA2  D7D2               	goto	l5796
  5402  001BA4  0A1F               	xorlw	31	; case 48
  5403  001BA6  B4D8               	btfsc	status,2,c
  5404  001BA8  D763               	goto	l5772
  5405  001BAA  0A01               	xorlw	1	; case 49
  5406  001BAC  B4D8               	btfsc	status,2,c
  5407  001BAE  D769               	goto	l5774
  5408  001BB0  0A03               	xorlw	3	; case 50
  5409  001BB2  B4D8               	btfsc	status,2,c
  5410  001BB4  D76F               	goto	l5776
  5411  001BB6  0A01               	xorlw	1	; case 51
  5412  001BB8  B4D8               	btfsc	status,2,c
  5413  001BBA  D775               	goto	l5778
  5414  001BBC  0A07               	xorlw	7	; case 52
  5415  001BBE  B4D8               	btfsc	status,2,c
  5416  001BC0  D77B               	goto	l5780
  5417  001BC2  0A01               	xorlw	1	; case 53
  5418  001BC4  B4D8               	btfsc	status,2,c
  5419  001BC6  D781               	goto	l5782
  5420  001BC8  0A03               	xorlw	3	; case 54
  5421  001BCA  B4D8               	btfsc	status,2,c
  5422  001BCC  D787               	goto	l5784
  5423  001BCE  0A01               	xorlw	1	; case 55
  5424  001BD0  B4D8               	btfsc	status,2,c
  5425  001BD2  D78D               	goto	l5786
  5426  001BD4  0A0F               	xorlw	15	; case 56
  5427  001BD6  B4D8               	btfsc	status,2,c
  5428  001BD8  D793               	goto	l5788
  5429  001BDA  0A01               	xorlw	1	; case 57
  5430  001BDC  B4D8               	btfsc	status,2,c
  5431  001BDE  D799               	goto	l5790
  5432  001BE0  0A06               	xorlw	6	; case 63
  5433  001BE2  B4D8               	btfsc	status,2,c
  5434  001BE4  D7A8               	goto	l5794
  5435  001BE6  0A7E               	xorlw	126	; case 65
  5436  001BE8  B4D8               	btfsc	status,2,c
  5437  001BEA  D658               	goto	l5720
  5438  001BEC  0A03               	xorlw	3	; case 66
  5439  001BEE  B4D8               	btfsc	status,2,c
  5440  001BF0  D65E               	goto	l5722
  5441  001BF2  0A01               	xorlw	1	; case 67
  5442  001BF4  B4D8               	btfsc	status,2,c
  5443  001BF6  D664               	goto	l5724
  5444  001BF8  0A07               	xorlw	7	; case 68
  5445  001BFA  B4D8               	btfsc	status,2,c
  5446  001BFC  D66A               	goto	l5726
  5447  001BFE  0A01               	xorlw	1	; case 69
  5448  001C00  B4D8               	btfsc	status,2,c
  5449  001C02  D670               	goto	l5728
  5450  001C04  0A03               	xorlw	3	; case 70
  5451  001C06  B4D8               	btfsc	status,2,c
  5452  001C08  D676               	goto	l5730
  5453  001C0A  0A01               	xorlw	1	; case 71
  5454  001C0C  B4D8               	btfsc	status,2,c
  5455  001C0E  D67C               	goto	l5732
  5456  001C10  0A0F               	xorlw	15	; case 72
  5457  001C12  B4D8               	btfsc	status,2,c
  5458  001C14  D682               	goto	l5734
  5459  001C16  0A01               	xorlw	1	; case 73
  5460  001C18  B4D8               	btfsc	status,2,c
  5461  001C1A  D688               	goto	l5736
  5462  001C1C  0A03               	xorlw	3	; case 74
  5463  001C1E  B4D8               	btfsc	status,2,c
  5464  001C20  D68E               	goto	l5738
  5465  001C22  0A01               	xorlw	1	; case 75
  5466  001C24  B4D8               	btfsc	status,2,c
  5467  001C26  D694               	goto	l5740
  5468  001C28  0A07               	xorlw	7	; case 76
  5469  001C2A  B4D8               	btfsc	status,2,c
  5470  001C2C  D69A               	goto	l5742
  5471  001C2E  0A01               	xorlw	1	; case 77
  5472  001C30  B4D8               	btfsc	status,2,c
  5473  001C32  D6A0               	goto	l5744
  5474  001C34  0A03               	xorlw	3	; case 78
  5475  001C36  B4D8               	btfsc	status,2,c
  5476  001C38  D6A6               	goto	l5746
  5477  001C3A  0A01               	xorlw	1	; case 79
  5478  001C3C  B4D8               	btfsc	status,2,c
  5479  001C3E  D6AC               	goto	l5748
  5480  001C40  0A1F               	xorlw	31	; case 80
  5481  001C42  B4D8               	btfsc	status,2,c
  5482  001C44  D6B2               	goto	l5750
  5483  001C46  0A01               	xorlw	1	; case 81
  5484  001C48  B4D8               	btfsc	status,2,c
  5485  001C4A  D6B8               	goto	l5752
  5486  001C4C  0A03               	xorlw	3	; case 82
  5487  001C4E  B4D8               	btfsc	status,2,c
  5488  001C50  D6BE               	goto	l5754
  5489  001C52  0A01               	xorlw	1	; case 83
  5490  001C54  B4D8               	btfsc	status,2,c
  5491  001C56  D6C4               	goto	l5756
  5492  001C58  0A07               	xorlw	7	; case 84
  5493  001C5A  B4D8               	btfsc	status,2,c
  5494  001C5C  D6CA               	goto	l5758
  5495  001C5E  0A01               	xorlw	1	; case 85
  5496  001C60  B4D8               	btfsc	status,2,c
  5497  001C62  D6D0               	goto	l5760
  5498  001C64  0A03               	xorlw	3	; case 86
  5499  001C66  B4D8               	btfsc	status,2,c
  5500  001C68  D6D6               	goto	l5762
  5501  001C6A  0A01               	xorlw	1	; case 87
  5502  001C6C  B4D8               	btfsc	status,2,c
  5503  001C6E  D6DC               	goto	l5764
  5504  001C70  0A0F               	xorlw	15	; case 88
  5505  001C72  B4D8               	btfsc	status,2,c
  5506  001C74  D6E2               	goto	l5766
  5507  001C76  0A01               	xorlw	1	; case 89
  5508  001C78  B4D8               	btfsc	status,2,c
  5509  001C7A  D6E8               	goto	l5768
  5510  001C7C  0A03               	xorlw	3	; case 90
  5511  001C7E  B4D8               	btfsc	status,2,c
  5512  001C80  D6EE               	goto	l5770
  5513  001C82                     l5808:
  5514                           
  5515                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  5516  001C82  EC48  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5517  001C86  0012               	return		;funcret
  5518  001C88                     __end_of_util_transmit_letter:
  5519                           	opt stack 0
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           postinc0	equ	0xFEE
  5525                           wreg	equ	0xFE8
  5526                           postdec1	equ	0xFE5
  5527                           fsr1l	equ	0xFE1
  5528                           indf2	equ	0xFDF
  5529                           postinc2	equ	0xFDE
  5530                           postdec2	equ	0xFDD
  5531                           fsr2h	equ	0xFDA
  5532                           fsr2l	equ	0xFD9
  5533                           status	equ	0xFD8
  5534                           
  5535 ;; *************** function _util_transmit_space_between_words *****************
  5536 ;; Defined at:
  5537 ;;		line 304 in file "easat2_util_transmission.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5551 ;;      Params:         0       0       0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0
  5554 ;;      Totals:         0       0       0       0       0       0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		_util_waits_delay_ms
  5560 ;; This function is called by:
  5561 ;;		_util_transmit_letter
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text19
  5566  003C80                     __ptext19:
  5567                           	opt stack 0
  5568  003C80                     _util_transmit_space_between_words:
  5569                           	opt stack 23
  5570                           
  5571                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  5572                           
  5573                           ;incstack = 0
  5574  003C80  0E02               	movlw	2
  5575  003C82  0100               	movlb	0	; () banked
  5576  003C84  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5577  003C86  0E0D               	movlw	13
  5578  003C88  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5579  003C8A  ECB0  F01D         	call	_util_waits_delay_ms	;wreg free
  5580  003C8E  0012               	return		;funcret
  5581  003C90                     __end_of_util_transmit_space_between_words:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           postinc0	equ	0xFEE
  5588                           wreg	equ	0xFE8
  5589                           postdec1	equ	0xFE5
  5590                           fsr1l	equ	0xFE1
  5591                           indf2	equ	0xFDF
  5592                           postinc2	equ	0xFDE
  5593                           postdec2	equ	0xFDD
  5594                           fsr2h	equ	0xFDA
  5595                           fsr2l	equ	0xFD9
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function _util_transmit_space_between_letters *****************
  5599 ;; Defined at:
  5600 ;;		line 297 in file "easat2_util_transmission.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5614 ;;      Params:         0       0       0       0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0
  5617 ;;      Totals:         0       0       0       0       0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    4
  5621 ;; This function calls:
  5622 ;;		_util_waits_delay_ms
  5623 ;; This function is called by:
  5624 ;;		_util_transmit_letter
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text20
  5629  003C90                     __ptext20:
  5630                           	opt stack 0
  5631  003C90                     _util_transmit_space_between_letters:
  5632                           	opt stack 23
  5633                           
  5634                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  5635                           
  5636                           ;incstack = 0
  5637  003C90  0E00               	movlw	0
  5638  003C92  0100               	movlb	0	; () banked
  5639  003C94  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5640  003C96  0EE1               	movlw	225
  5641  003C98  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5642  003C9A  ECB0  F01D         	call	_util_waits_delay_ms	;wreg free
  5643  003C9E  0012               	return		;funcret
  5644  003CA0                     __end_of_util_transmit_space_between_letters:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           fsr1l	equ	0xFE1
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _util_transmit_morse_sequence *****************
  5662 ;; Defined at:
  5663 ;;		line 201 in file "easat2_util_transmission.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  morse_sequen    2   19[BANK0 ] PTR unsigned char 
  5666 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5667 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5668 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5669 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5670 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5671 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5672 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5673 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5674 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5675 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5676 ;;		 -> STR_3(3), 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  i               2   40[COMRAM] int 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         0       2       0       0       0       0       0
  5689 ;;      Locals:         2       0       0       0       0       0       0
  5690 ;;      Temps:          2       0       0       0       0       0       0
  5691 ;;      Totals:         4       2       0       0       0       0       0
  5692 ;;Total ram usage:        6 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    6
  5695 ;; This function calls:
  5696 ;;		_strlen
  5697 ;;		_util_transmit_dash
  5698 ;;		_util_transmit_dot
  5699 ;;		_util_transmit_space_between_dots_dashes
  5700 ;; This function is called by:
  5701 ;;		_util_transmit_letter
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text21
  5706  00371E                     __ptext21:
  5707                           	opt stack 0
  5708  00371E                     _util_transmit_morse_sequence:
  5709                           	opt stack 21
  5710                           
  5711                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5712                           
  5713                           ;incstack = 0
  5714  00371E  0E00               	movlw	0
  5715  003720  6E2A               	movwf	util_transmit_morse_sequence@i+1,c
  5716  003722  0E00               	movlw	0
  5717  003724  6E29               	movwf	util_transmit_morse_sequence@i,c
  5718  003726  D01E               	goto	l5040
  5719  003728                     l5028:
  5720                           
  5721                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5722  003728  EC18  F01D         	call	_util_transmit_dot	;wreg free
  5723                           
  5724                           ;easat2_util_transmission.c: 211: break;
  5725  00372C  D017               	goto	l5036
  5726  00372E                     l5030:
  5727                           
  5728                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5729  00372E  EC32  F01D         	call	_util_transmit_dash	;wreg free
  5730                           
  5731                           ;easat2_util_transmission.c: 217: }
  5732                           
  5733                           ;easat2_util_transmission.c: 216: break;
  5734                           
  5735                           ;easat2_util_transmission.c: 215: default:
  5736                           
  5737                           ;easat2_util_transmission.c: 214: break;
  5738  003732  D014               	goto	l5036
  5739  003734                     l5034:
  5740  003734  5029               	movf	util_transmit_morse_sequence@i,w,c
  5741  003736  0100               	movlb	0	; () banked
  5742  003738  2573               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5743  00373A  6E27               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5744  00373C  502A               	movf	util_transmit_morse_sequence@i+1,w,c
  5745  00373E  0100               	movlb	0	; () banked
  5746  003740  2174               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5747  003742  6E28               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5748  003744  C027  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5749  003748  C028  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5750  00374C                     	if	0	;tblptru may be non-zero
  5751  00374C                     	endif
  5752  00374C                     	if	0	;tblptru may be non-zero
  5753  00374C                     	endif
  5754  00374C  0008               	tblrd		*
  5755  00374E  50F5               	movf	tablat,w,c
  5756                           
  5757                           ; Switch size 1, requested type "space"
  5758                           ; Number of cases is 2, Range of values is 45 to 46
  5759                           ; switch strategies available:
  5760                           ; Name         Instructions Cycles
  5761                           ; simple_byte            7     4 (average)
  5762                           ;	Chosen strategy is simple_byte
  5763  003750  0A2D               	xorlw	45	; case 45
  5764  003752  B4D8               	btfsc	status,2,c
  5765  003754  D7EC               	goto	l5030
  5766  003756  0A03               	xorlw	3	; case 46
  5767  003758  B4D8               	btfsc	status,2,c
  5768  00375A  D7E6               	goto	l5028
  5769  00375C                     l5036:
  5770                           
  5771                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5772  00375C  EC50  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5773  003760  4A29               	infsnz	util_transmit_morse_sequence@i,f,c
  5774  003762  2A2A               	incf	util_transmit_morse_sequence@i+1,f,c
  5775  003764                     l5040:
  5776  003764  C073  F071         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5777  003768  C074  F072         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5778  00376C  ECC1  F01B         	call	_strlen	;wreg free
  5779  003770  0100               	movlb	0	; () banked
  5780  003772  5171               	movf	?_strlen& (0+255),w,b
  5781  003774  5C29               	subwf	util_transmit_morse_sequence@i,w,c
  5782  003776  0100               	movlb	0	; () banked
  5783  003778  5172               	movf	(?_strlen+1)& (0+255),w,b
  5784  00377A  582A               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5785  00377C  B0D8               	btfsc	status,0,c
  5786  00377E  0012               	return	
  5787  003780  D7D9               	goto	l5034
  5788  003782                     __end_of_util_transmit_morse_sequence:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           postdec1	equ	0xFE5
  5797                           fsr1l	equ	0xFE1
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           postdec2	equ	0xFDD
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5806 ;; Defined at:
  5807 ;;		line 289 in file "easat2_util_transmission.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;		None
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;		None
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5821 ;;      Params:         0       0       0       0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0
  5824 ;;      Totals:         0       0       0       0       0       0       0
  5825 ;;Total ram usage:        0 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    4
  5828 ;; This function calls:
  5829 ;;		_util_waits_delay_ms
  5830 ;; This function is called by:
  5831 ;;		_util_transmit_morse_sequence
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text22
  5836  003CA0                     __ptext22:
  5837                           	opt stack 0
  5838  003CA0                     _util_transmit_space_between_dots_dashes:
  5839                           	opt stack 22
  5840                           
  5841                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;incstack = 0
  5845  003CA0  0E00               	movlw	0
  5846  003CA2  0100               	movlb	0	; () banked
  5847  003CA4  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5848  003CA6  0E4B               	movlw	75
  5849  003CA8  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5850  003CAA  ECB0  F01D         	call	_util_waits_delay_ms	;wreg free
  5851  003CAE  0012               	return		;funcret
  5852  003CB0                     __end_of_util_transmit_space_between_dots_dashes:
  5853                           	opt stack 0
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           postinc0	equ	0xFEE
  5859                           wreg	equ	0xFE8
  5860                           postdec1	equ	0xFE5
  5861                           fsr1l	equ	0xFE1
  5862                           indf2	equ	0xFDF
  5863                           postinc2	equ	0xFDE
  5864                           postdec2	equ	0xFDD
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _util_transmit_dot *****************
  5870 ;; Defined at:
  5871 ;;		line 231 in file "easat2_util_transmission.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  i               2   36[COMRAM] int 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5885 ;;      Params:         0       0       0       0       0       0       0
  5886 ;;      Locals:         2       0       0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0
  5888 ;;      Totals:         2       0       0       0       0       0       0
  5889 ;;Total ram usage:        2 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    5
  5892 ;; This function calls:
  5893 ;;		_util_transmit_buzzer_1ms_cycle
  5894 ;;		_util_waits_delay_ms
  5895 ;; This function is called by:
  5896 ;;		_util_transmit_morse_sequence
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text23
  5901  003A30                     __ptext23:
  5902                           	opt stack 0
  5903  003A30                     _util_transmit_dot:
  5904                           	opt stack 21
  5905                           
  5906                           ;easat2_util_transmission.c: 235: (PORTDbits.RD1) = 1;
  5907                           
  5908                           ;incstack = 0
  5909  003A30  8283               	bsf	3971,1,c	;volatile
  5910                           
  5911                           ;easat2_util_transmission.c: 236: (PORTDbits.RD3) = 1;
  5912  003A32  8683               	bsf	3971,3,c	;volatile
  5913                           
  5914                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5915  003A34  0E00               	movlw	0
  5916  003A36  6E26               	movwf	util_transmit_dot@i+1,c
  5917  003A38  0E00               	movlw	0
  5918  003A3A  6E25               	movwf	util_transmit_dot@i,c
  5919  003A3C  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5920  003A3E  D006               	goto	l4746
  5921  003A40  5026               	movf	util_transmit_dot@i+1,w,c
  5922  003A42  E10D               	bnz	l343
  5923  003A44  0E4B               	movlw	75
  5924  003A46  5C25               	subwf	util_transmit_dot@i,w,c
  5925  003A48  B0D8               	btfsc	status,0,c
  5926  003A4A  D009               	goto	l343
  5927  003A4C                     l4746:
  5928                           
  5929                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5930  003A4C  EC20  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5931                           
  5932                           ;easat2_util_transmission.c: 246: else
  5933                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5934  003A50  4A25               	infsnz	util_transmit_dot@i,f,c
  5935  003A52  2A26               	incf	util_transmit_dot@i+1,f,c
  5936  003A54  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5937  003A56  D7FA               	goto	l4746
  5938  003A58  5026               	movf	util_transmit_dot@i+1,w,c
  5939  003A5A  E101               	bnz	u4540
  5940  003A5C  D7F3               	goto	L2
  5941  003A5E                     u4540:
  5942  003A5E                     l343:
  5943                           
  5944                           ;easat2_util_transmission.c: 249: }
  5945                           ;easat2_util_transmission.c: 251: (PORTDbits.RD1) = 0;
  5946  003A5E  9283               	bcf	3971,1,c	;volatile
  5947                           
  5948                           ;easat2_util_transmission.c: 252: (PORTDbits.RD3) = 0;
  5949  003A60  9683               	bcf	3971,3,c	;volatile
  5950  003A62  0012               	return		;funcret
  5951  003A64                     __end_of_util_transmit_dot:
  5952                           	opt stack 0
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           postdec1	equ	0xFE5
  5960                           fsr1l	equ	0xFE1
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _util_transmit_dash *****************
  5969 ;; Defined at:
  5970 ;;		line 262 in file "easat2_util_transmission.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  i               2   36[COMRAM] int 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         0       0       0       0       0       0       0
  5985 ;;      Locals:         2       0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0
  5987 ;;      Totals:         2       0       0       0       0       0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    5
  5991 ;; This function calls:
  5992 ;;		_util_transmit_buzzer_1ms_cycle
  5993 ;;		_util_waits_delay_ms
  5994 ;; This function is called by:
  5995 ;;		_util_transmit_morse_sequence
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text24
  6000  003A64                     __ptext24:
  6001                           	opt stack 0
  6002  003A64                     _util_transmit_dash:
  6003                           	opt stack 21
  6004                           
  6005                           ;easat2_util_transmission.c: 266: (PORTDbits.RD1) = 1;
  6006                           
  6007                           ;incstack = 0
  6008  003A64  8283               	bsf	3971,1,c	;volatile
  6009                           
  6010                           ;easat2_util_transmission.c: 267: (PORTDbits.RD3) = 1;
  6011  003A66  8683               	bsf	3971,3,c	;volatile
  6012                           
  6013                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  6014  003A68  0E00               	movlw	0
  6015  003A6A  6E26               	movwf	util_transmit_dash@i+1,c
  6016  003A6C  0E00               	movlw	0
  6017  003A6E  6E25               	movwf	util_transmit_dash@i,c
  6018  003A70  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6019  003A72  D006               	goto	l4762
  6020  003A74  5026               	movf	util_transmit_dash@i+1,w,c
  6021  003A76  E10D               	bnz	l350
  6022  003A78  0EE1               	movlw	225
  6023  003A7A  5C25               	subwf	util_transmit_dash@i,w,c
  6024  003A7C  B0D8               	btfsc	status,0,c
  6025  003A7E  D009               	goto	l350
  6026  003A80                     l4762:
  6027                           
  6028                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  6029  003A80  EC20  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  6030                           
  6031                           ;easat2_util_transmission.c: 277: else
  6032                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  6033  003A84  4A25               	infsnz	util_transmit_dash@i,f,c
  6034  003A86  2A26               	incf	util_transmit_dash@i+1,f,c
  6035  003A88  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6036  003A8A  D7FA               	goto	l4762
  6037  003A8C  5026               	movf	util_transmit_dash@i+1,w,c
  6038  003A8E  E101               	bnz	u4560
  6039  003A90  D7F3               	goto	L3
  6040  003A92                     u4560:
  6041  003A92                     l350:
  6042                           
  6043                           ;easat2_util_transmission.c: 280: }
  6044                           ;easat2_util_transmission.c: 282: (PORTDbits.RD1) = 0;
  6045  003A92  9283               	bcf	3971,1,c	;volatile
  6046                           
  6047                           ;easat2_util_transmission.c: 283: (PORTDbits.RD3) = 0;
  6048  003A94  9683               	bcf	3971,3,c	;volatile
  6049  003A96  0012               	return		;funcret
  6050  003A98                     __end_of_util_transmit_dash:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           postinc0	equ	0xFEE
  6057                           wreg	equ	0xFE8
  6058                           postdec1	equ	0xFE5
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _util_waits_delay_ms *****************
  6068 ;; Defined at:
  6069 ;;		line 40 in file "easat2_util_waits.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  ms              2   17[BANK0 ] int 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  i               2   34[COMRAM] int 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         0       2       0       0       0       0       0
  6084 ;;      Locals:         2       0       0       0       0       0       0
  6085 ;;      Temps:          1       0       0       0       0       0       0
  6086 ;;      Totals:         3       2       0       0       0       0       0
  6087 ;;Total ram usage:        5 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    3
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_util_transmit_dot
  6094 ;;		_util_transmit_dash
  6095 ;;		_util_transmit_space_between_dots_dashes
  6096 ;;		_util_transmit_space_between_letters
  6097 ;;		_util_transmit_space_between_words
  6098 ;;		_util_waits_delay_secs
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text25
  6103  003B60                     __ptext25:
  6104                           	opt stack 0
  6105  003B60                     _util_waits_delay_ms:
  6106                           	opt stack 24
  6107                           
  6108                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6109                           
  6110                           ;incstack = 0
  6111  003B60  0E00               	movlw	0
  6112  003B62  6E24               	movwf	util_waits_delay_ms@i+1,c
  6113  003B64  0E00               	movlw	0
  6114  003B66  6E23               	movwf	util_waits_delay_ms@i,c
  6115  003B68  D006               	goto	l396
  6116  003B6A                     l4688:
  6117                           
  6118                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6119  003B6A  0EA6               	movlw	166
  6120  003B6C                     u6417:
  6121  003B6C  2EE8               	decfsz	wreg,f,c
  6122  003B6E  D7FE               	bra	u6417
  6123  003B70  D000               	nop2	
  6124  003B72  4A23               	infsnz	util_waits_delay_ms@i,f,c
  6125  003B74  2A24               	incf	util_waits_delay_ms@i+1,f,c
  6126  003B76                     l396:
  6127  003B76  0100               	movlb	0	; () banked
  6128  003B78  5171               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6129  003B7A  5C23               	subwf	util_waits_delay_ms@i,w,c
  6130  003B7C  5024               	movf	util_waits_delay_ms@i+1,w,c
  6131  003B7E  0A80               	xorlw	128
  6132  003B80  6E22               	movwf	??_util_waits_delay_ms& (0+255),c
  6133  003B82  0100               	movlb	0	; () banked
  6134  003B84  5172               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6135  003B86  0A80               	xorlw	128
  6136  003B88  5822               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6137  003B8A  B0D8               	btfsc	status,0,c
  6138  003B8C  0012               	return	
  6139  003B8E  D7ED               	goto	l4688
  6140  003B90                     __end_of_util_waits_delay_ms:
  6141                           	opt stack 0
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           postinc0	equ	0xFEE
  6147                           wreg	equ	0xFE8
  6148                           postdec1	equ	0xFE5
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           fsr2h	equ	0xFDA
  6154                           fsr2l	equ	0xFD9
  6155                           status	equ	0xFD8
  6156                           
  6157 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  6158 ;; Defined at:
  6159 ;;		line 310 in file "easat2_util_transmission.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6173 ;;      Params:         0       0       0       0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0
  6176 ;;      Totals:         0       0       0       0       0       0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    4
  6180 ;; This function calls:
  6181 ;;		_util_waits_delay_hundred_us
  6182 ;; This function is called by:
  6183 ;;		_util_transmit_dot
  6184 ;;		_util_transmit_dash
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text26
  6189  003C40                     __ptext26:
  6190                           	opt stack 0
  6191  003C40                     _util_transmit_buzzer_1ms_cycle:
  6192                           	opt stack 21
  6193                           
  6194                           ;easat2_util_transmission.c: 312: (PORTDbits.RD2) = 1;
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;incstack = 0
  6198  003C40  8483               	bsf	3971,2,c	;volatile
  6199                           
  6200                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  6201  003C42  0E00               	movlw	0
  6202  003C44  0100               	movlb	0	; () banked
  6203  003C46  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6204  003C48  0E05               	movlw	5
  6205  003C4A  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6206  003C4C  ECC8  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6207                           
  6208                           ;easat2_util_transmission.c: 314: (PORTDbits.RD2) = 0;
  6209  003C50  9483               	bcf	3971,2,c	;volatile
  6210                           
  6211                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  6212  003C52  0E00               	movlw	0
  6213  003C54  0100               	movlb	0	; () banked
  6214  003C56  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6215  003C58  0E05               	movlw	5
  6216  003C5A  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6217  003C5C  ECC8  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6218  003C60  0012               	return		;funcret
  6219  003C62                     __end_of_util_transmit_buzzer_1ms_cycle:
  6220                           	opt stack 0
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           postinc0	equ	0xFEE
  6226                           wreg	equ	0xFE8
  6227                           postdec1	equ	0xFE5
  6228                           fsr1l	equ	0xFE1
  6229                           indf2	equ	0xFDF
  6230                           postinc2	equ	0xFDE
  6231                           postdec2	equ	0xFDD
  6232                           fsr2h	equ	0xFDA
  6233                           fsr2l	equ	0xFD9
  6234                           status	equ	0xFD8
  6235                           
  6236 ;; *************** function _util_waits_delay_hundred_us *****************
  6237 ;; Defined at:
  6238 ;;		line 47 in file "easat2_util_waits.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  hun_us          2   17[BANK0 ] int 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  i               2   34[COMRAM] int 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6252 ;;      Params:         0       2       0       0       0       0       0
  6253 ;;      Locals:         2       0       0       0       0       0       0
  6254 ;;      Temps:          1       0       0       0       0       0       0
  6255 ;;      Totals:         3       2       0       0       0       0       0
  6256 ;;Total ram usage:        5 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    3
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_util_transmit_buzzer_1ms_cycle
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text27
  6267  003B90                     __ptext27:
  6268                           	opt stack 0
  6269  003B90                     _util_waits_delay_hundred_us:
  6270                           	opt stack 21
  6271                           
  6272                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  6273                           
  6274                           ;incstack = 0
  6275  003B90  0E00               	movlw	0
  6276  003B92  6E24               	movwf	util_waits_delay_hundred_us@i+1,c
  6277  003B94  0E00               	movlw	0
  6278  003B96  6E23               	movwf	util_waits_delay_hundred_us@i,c
  6279  003B98  D006               	goto	l402
  6280  003B9A                     l4676:
  6281                           
  6282                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  6283  003B9A  0E10               	movlw	16
  6284  003B9C                     u6427:
  6285  003B9C  2EE8               	decfsz	wreg,f,c
  6286  003B9E  D7FE               	bra	u6427
  6287  003BA0  D000               	nop2	
  6288  003BA2  4A23               	infsnz	util_waits_delay_hundred_us@i,f,c
  6289  003BA4  2A24               	incf	util_waits_delay_hundred_us@i+1,f,c
  6290  003BA6                     l402:
  6291  003BA6  0100               	movlb	0	; () banked
  6292  003BA8  5171               	movf	util_waits_delay_hundred_us@hun_us& (0+255),w,b
  6293  003BAA  5C23               	subwf	util_waits_delay_hundred_us@i,w,c
  6294  003BAC  5024               	movf	util_waits_delay_hundred_us@i+1,w,c
  6295  003BAE  0A80               	xorlw	128
  6296  003BB0  6E22               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  6297  003BB2  0100               	movlb	0	; () banked
  6298  003BB4  5172               	movf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),w,b
  6299  003BB6  0A80               	xorlw	128
  6300  003BB8  5822               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  6301  003BBA  B0D8               	btfsc	status,0,c
  6302  003BBC  0012               	return	
  6303  003BBE  D7ED               	goto	l4676
  6304  003BC0                     __end_of_util_waits_delay_hundred_us:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _strlen *****************
  6322 ;; Defined at:
  6323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  6326 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6327 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6328 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6329 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6330 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6331 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6332 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6333 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6334 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6335 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6336 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  cp              2   35[COMRAM] PTR const unsigned char 
  6339 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6340 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6341 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6342 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6343 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6344 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6345 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6346 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6347 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6348 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6349 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  2   17[BANK0 ] unsigned int 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6359 ;;      Params:         0       2       0       0       0       0       0
  6360 ;;      Locals:         2       0       0       0       0       0       0
  6361 ;;      Temps:          2       0       0       0       0       0       0
  6362 ;;      Totals:         4       2       0       0       0       0       0
  6363 ;;Total ram usage:        6 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    3
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_util_beacon_transmission
  6370 ;;		_util_transmit_morse_sequence
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text28
  6375  003782                     __ptext28:
  6376                           	opt stack 0
  6377  003782                     _strlen:
  6378                           	opt stack 23
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;incstack = 0
  6382  003782  C071  F024         	movff	strlen@s,strlen@cp
  6383  003786  C072  F025         	movff	strlen@s+1,strlen@cp+1
  6384  00378A  D002               	goto	l4732
  6385  00378C                     l4730:
  6386  00378C  4A24               	infsnz	strlen@cp,f,c
  6387  00378E  2A25               	incf	strlen@cp+1,f,c
  6388  003790                     l4732:
  6389  003790  C024  FFF6         	movff	strlen@cp,tblptrl
  6390  003794  C025  FFF7         	movff	strlen@cp+1,tblptrh
  6391  003798  6AF8               	clrf	tblptru,c
  6392  00379A  0E05               	movlw	(high __ramtop+-1)
  6393  00379C  64F7               	cpfsgt	tblptrh,c
  6394  00379E  D003               	bra	u4517
  6395  0037A0  0008               	tblrd		*
  6396  0037A2  50F5               	movf	tablat,w,c
  6397  0037A4  D005               	bra	u4510
  6398  0037A6                     u4517:
  6399  0037A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6400  0037AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6401  0037AE  50EF               	movf	indf0,w,c
  6402  0037B0                     u4510:
  6403  0037B0  0900               	iorlw	0
  6404  0037B2  A4D8               	btfss	status,2,c
  6405  0037B4  D7EB               	goto	l4730
  6406  0037B6  C071  F022         	movff	strlen@s,??_strlen
  6407  0037BA  C072  F023         	movff	strlen@s+1,??_strlen+1
  6408  0037BE  1E22               	comf	??_strlen,f,c
  6409  0037C0  1E23               	comf	??_strlen+1,f,c
  6410  0037C2  4A22               	infsnz	??_strlen,f,c
  6411  0037C4  2A23               	incf	??_strlen+1,f,c
  6412  0037C6  5024               	movf	strlen@cp,w,c
  6413  0037C8  2422               	addwf	??_strlen,w,c
  6414  0037CA  0100               	movlb	0	; () banked
  6415  0037CC  6F71               	movwf	?_strlen& (0+255),b
  6416  0037CE  5025               	movf	strlen@cp+1,w,c
  6417  0037D0  2023               	addwfc	??_strlen+1,w,c
  6418  0037D2  0100               	movlb	0	; () banked
  6419  0037D4  6F72               	movwf	(?_strlen+1)& (0+255),b
  6420  0037D6  0012               	return	
  6421  0037D8                     __end_of_strlen:
  6422                           	opt stack 0
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           indf0	equ	0xFEF
  6428                           postinc0	equ	0xFEE
  6429                           fsr0h	equ	0xFEA
  6430                           fsr0l	equ	0xFE9
  6431                           wreg	equ	0xFE8
  6432                           postdec1	equ	0xFE5
  6433                           fsr1l	equ	0xFE1
  6434                           indf2	equ	0xFDF
  6435                           postinc2	equ	0xFDE
  6436                           postdec2	equ	0xFDD
  6437                           fsr2h	equ	0xFDA
  6438                           fsr2l	equ	0xFD9
  6439                           status	equ	0xFD8
  6440                           
  6441 ;; *************** function _strcpy *****************
  6442 ;; Defined at:
  6443 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcpy.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6446 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6447 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6448 ;;		 -> STR_1(7), 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6451 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  2   17[BANK0 ] PTR unsigned char 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6461 ;;      Params:         0       4       0       0       0       0       0
  6462 ;;      Locals:         2       0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0
  6464 ;;      Totals:         2       4       0       0       0       0       0
  6465 ;;Total ram usage:        6 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    3
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_util_beacon_transmission
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text29
  6476  003ACA                     __ptext29:
  6477                           	opt stack 0
  6478  003ACA                     _strcpy:
  6479                           	opt stack 25
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;incstack = 0
  6483  003ACA  C071  F022         	movff	strcpy@to,strcpy@cp
  6484  003ACE  C072  F023         	movff	strcpy@to+1,strcpy@cp+1
  6485  003AD2  D005               	goto	l5412
  6486  003AD4                     l5410:
  6487  003AD4  4A22               	infsnz	strcpy@cp,f,c
  6488  003AD6  2A23               	incf	strcpy@cp+1,f,c
  6489  003AD8  0100               	movlb	0	; () banked
  6490  003ADA  4B73               	infsnz	strcpy@from& (0+255),f,b
  6491  003ADC  2B74               	incf	(strcpy@from+1)& (0+255),f,b
  6492  003ADE                     l5412:
  6493  003ADE  C073  FFF6         	movff	strcpy@from,tblptrl
  6494  003AE2  C074  FFF7         	movff	strcpy@from+1,tblptrh
  6495  003AE6                     	if	0	;tblptru may be non-zero
  6496  003AE6                     	endif
  6497  003AE6                     	if	0	;tblptru may be non-zero
  6498  003AE6                     	endif
  6499  003AE6  C022  FFD9         	movff	strcpy@cp,fsr2l
  6500  003AEA  C023  FFDA         	movff	strcpy@cp+1,fsr2h
  6501  003AEE  0008               	tblrd		*
  6502  003AF0  CFF5 FFDF          	movff	tablat,indf2
  6503  003AF4  50DF               	movf	indf2,w,c
  6504  003AF6  B4D8               	btfsc	status,2,c
  6505  003AF8  0012               	return	
  6506  003AFA  D7EC               	goto	l5410
  6507  003AFC                     __end_of_strcpy:
  6508                           	opt stack 0
  6509                           tblptru	equ	0xFF8
  6510                           tblptrh	equ	0xFF7
  6511                           tblptrl	equ	0xFF6
  6512                           tablat	equ	0xFF5
  6513                           indf0	equ	0xFEF
  6514                           postinc0	equ	0xFEE
  6515                           fsr0h	equ	0xFEA
  6516                           fsr0l	equ	0xFE9
  6517                           wreg	equ	0xFE8
  6518                           postdec1	equ	0xFE5
  6519                           fsr1l	equ	0xFE1
  6520                           indf2	equ	0xFDF
  6521                           postinc2	equ	0xFDE
  6522                           postdec2	equ	0xFDD
  6523                           fsr2h	equ	0xFDA
  6524                           fsr2l	equ	0xFD9
  6525                           status	equ	0xFD8
  6526                           
  6527 ;; *************** function _strcat *****************
  6528 ;; Defined at:
  6529 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strcat.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6532 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6533 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6534 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6537 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2   17[BANK0 ] PTR unsigned char 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6547 ;;      Params:         0       4       0       0       0       0       0
  6548 ;;      Locals:         2       0       0       0       0       0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0
  6550 ;;      Totals:         2       4       0       0       0       0       0
  6551 ;;Total ram usage:        6 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_util_beacon_transmission
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text30
  6562  0038BE                     __ptext30:
  6563                           	opt stack 0
  6564  0038BE                     _strcat:
  6565                           	opt stack 25
  6566                           
  6567                           ;incstack = 0
  6568  0038BE  C071  F022         	movff	strcat@to,strcat@cp
  6569  0038C2  C072  F023         	movff	strcat@to+1,strcat@cp+1
  6570  0038C6  D002               	goto	l5712
  6571  0038C8                     l5710:
  6572  0038C8  4A22               	infsnz	strcat@cp,f,c
  6573  0038CA  2A23               	incf	strcat@cp+1,f,c
  6574  0038CC                     l5712:
  6575  0038CC  C022  FFD9         	movff	strcat@cp,fsr2l
  6576  0038D0  C023  FFDA         	movff	strcat@cp+1,fsr2h
  6577  0038D4  50DF               	movf	indf2,w,c
  6578  0038D6  B4D8               	btfsc	status,2,c
  6579  0038D8  D006               	goto	l5716
  6580  0038DA  D7F6               	goto	l5710
  6581  0038DC                     l5714:
  6582  0038DC  4A22               	infsnz	strcat@cp,f,c
  6583  0038DE  2A23               	incf	strcat@cp+1,f,c
  6584  0038E0  0100               	movlb	0	; () banked
  6585  0038E2  4B73               	infsnz	strcat@from& (0+255),f,b
  6586  0038E4  2B74               	incf	(strcat@from+1)& (0+255),f,b
  6587  0038E6                     l5716:
  6588  0038E6  C073  FFD9         	movff	strcat@from,fsr2l
  6589  0038EA  C074  FFDA         	movff	strcat@from+1,fsr2h
  6590  0038EE  C022  FFE1         	movff	strcat@cp,fsr1l
  6591  0038F2  C023  FFE2         	movff	strcat@cp+1,fsr1h
  6592  0038F6  CFDF FFE7          	movff	indf2,indf1
  6593  0038FA  50E7               	movf	indf1,w,c
  6594  0038FC  B4D8               	btfsc	status,2,c
  6595  0038FE  0012               	return	
  6596  003900  D7ED               	goto	l5714
  6597  003902                     __end_of_strcat:
  6598                           	opt stack 0
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           indf0	equ	0xFEF
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           postdec1	equ	0xFE5
  6610                           fsr1h	equ	0xFE2
  6611                           fsr1l	equ	0xFE1
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           postdec2	equ	0xFDD
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _sprintf *****************
  6620 ;; Defined at:
  6621 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  sp              2   69[BANK0 ] PTR unsigned char 
  6624 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6625 ;;  f               2   71[BANK0 ] PTR const unsigned char 
  6626 ;;		 -> STR_2(23), 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  val             4  102[BANK0 ] unsigned long 
  6629 ;;  tmpval          4   98[BANK0 ] struct .
  6630 ;;  fval            3  108[BANK0 ] struct .
  6631 ;;  cp              3    0        PTR const unsigned char 
  6632 ;;  prec            2  111[BANK0 ] int 
  6633 ;;  exp             2  106[BANK0 ] int 
  6634 ;;  width           2   96[BANK0 ] int 
  6635 ;;  flag            2   94[BANK0 ] unsigned short 
  6636 ;;  ap              2   92[BANK0 ] PTR void [1]
  6637 ;;		 -> ?_sprintf(2), 
  6638 ;;  len             2    0        unsigned int 
  6639 ;;  c               1  113[BANK0 ] char 
  6640 ;;  d               1    0        unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  2   69[BANK0 ] int 
  6643 ;; Registers used:
  6644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6650 ;;      Params:         0      14       0       0       0       0       0
  6651 ;;      Locals:         0      25       0       0       0       0       0
  6652 ;;      Temps:          0       6       0       0       0       0       0
  6653 ;;      Totals:         0      45       0       0       0       0       0
  6654 ;;Total ram usage:       45 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    6
  6657 ;; This function calls:
  6658 ;;		___awdiv
  6659 ;;		___ftadd
  6660 ;;		___ftge
  6661 ;;		___ftmul
  6662 ;;		___ftneg
  6663 ;;		___ftsub
  6664 ;;		___fttol
  6665 ;;		___lldiv
  6666 ;;		___llmod
  6667 ;;		___lltoft
  6668 ;;		___wmul
  6669 ;;		__div_to_l_
  6670 ;;		__tdiv_to_l_
  6671 ;;		_fround
  6672 ;;		_isdigit
  6673 ;;		_scale
  6674 ;; This function is called by:
  6675 ;;		_util_beacon_transmission
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text31
  6680  0000AA                     __ptext31:
  6681                           	opt stack 0
  6682  0000AA                     _sprintf:
  6683                           	opt stack 22
  6684                           
  6685                           ;doprnt.c: 494: va_list ap;
  6686                           ;doprnt.c: 499: signed char c;
  6687                           ;doprnt.c: 501: int width;
  6688                           ;doprnt.c: 504: int prec;
  6689                           ;doprnt.c: 508: unsigned short flag;
  6690                           ;doprnt.c: 515: char d;
  6691                           ;doprnt.c: 516: double fval;
  6692                           ;doprnt.c: 517: int exp;
  6693                           ;doprnt.c: 523: union {
  6694                           ;doprnt.c: 524: unsigned long vd;
  6695                           ;doprnt.c: 525: double integ;
  6696                           ;doprnt.c: 526: } tmpval;
  6697                           ;doprnt.c: 528: unsigned long val;
  6698                           ;doprnt.c: 529: unsigned len;
  6699                           ;doprnt.c: 530: const char * cp;
  6700                           ;doprnt.c: 533: *ap = __va_start();
  6701                           
  6702                           ;incstack = 0
  6703  0000AA  0EA9               	movlw	low (?_sprintf+4)
  6704  0000AC  0100               	movlb	0	; () banked
  6705  0000AE  6FBC               	movwf	sprintf@ap& (0+255),b
  6706  0000B0  0E00               	movlw	high (?_sprintf+4)
  6707  0000B2  0100               	movlb	0	; () banked
  6708  0000B4  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6709                           
  6710                           ;doprnt.c: 536: while(c = *f++) {
  6711  0000B6  EF0E  F006         	goto	l5702
  6712  0000BA                     l5416:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;doprnt.c: 538: if(c != '%')
  6716  0000BA  0E25               	movlw	37
  6717  0000BC  0100               	movlb	0	; () banked
  6718  0000BE  19D1               	xorwf	sprintf@c& (0+255),w,b
  6719  0000C0  B4D8               	btfsc	status,2,c
  6720  0000C2  D00B               	goto	l5422
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;doprnt.c: 540: {
  6724                           ;doprnt.c: 541: ((*sp++ = (c)));
  6725  0000C4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  6726  0000C8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  6727  0000CC  C0D1  FFDF         	movff	sprintf@c,indf2
  6728                           
  6729                           ; BSR set to: 0
  6730  0000D0  0100               	movlb	0	; () banked
  6731  0000D2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  6732  0000D4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  6733                           
  6734                           ;doprnt.c: 542: continue;
  6735  0000D6  EF0E  F006         	goto	l5702
  6736  0000DA                     l5422:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;doprnt.c: 543: }
  6740                           ;doprnt.c: 546: width = 0;
  6741  0000DA  0E00               	movlw	0
  6742  0000DC  0100               	movlb	0	; () banked
  6743  0000DE  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6744  0000E0  0E00               	movlw	0
  6745  0000E2  6FC0               	movwf	sprintf@width& (0+255),b
  6746                           
  6747                           ;doprnt.c: 548: flag = 0;
  6748  0000E4  0E00               	movlw	0
  6749  0000E6  0100               	movlb	0	; () banked
  6750  0000E8  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  6751  0000EA  0E00               	movlw	0
  6752  0000EC  6FBE               	movwf	sprintf@flag& (0+255),b
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6756  0000EE  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6757  0000F2  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6758  0000F6                     	if	0	;tblptru may be non-zero
  6759  0000F6                     	endif
  6760  0000F6                     	if	0	;tblptru may be non-zero
  6761  0000F6                     	endif
  6762  0000F6  0008               	tblrd		*
  6763  0000F8  50F5               	movf	tablat,w,c
  6764  0000FA  EC31  F01E         	call	_isdigit
  6765  0000FE  A0D8               	btfss	status,0,c
  6766  000100  D040               	goto	l5436
  6767                           
  6768                           ;doprnt.c: 598: width = 0;
  6769  000102  0E00               	movlw	0
  6770  000104  0100               	movlb	0	; () banked
  6771  000106  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6772  000108  0E00               	movlw	0
  6773  00010A  6FC0               	movwf	sprintf@width& (0+255),b
  6774  00010C                     l5428:
  6775                           
  6776                           ;doprnt.c: 600: width *= 10;
  6777  00010C  C0C0  F079         	movff	sprintf@width,___wmul@multiplier
  6778  000110  C0C1  F07A         	movff	sprintf@width+1,___wmul@multiplier+1
  6779  000114  0E00               	movlw	0
  6780  000116  0100               	movlb	0	; () banked
  6781  000118  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6782  00011A  0E0A               	movlw	10
  6783  00011C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6784  00011E  EC7E  F01D         	call	___wmul	;wreg free
  6785  000122  C079  F0C0         	movff	?___wmul,sprintf@width
  6786  000126  C07A  F0C1         	movff	?___wmul+1,sprintf@width+1
  6787                           
  6788                           ;doprnt.c: 601: width += *f++ - '0';
  6789  00012A  0ED0               	movlw	208
  6790  00012C  0100               	movlb	0	; () banked
  6791  00012E  6FB3               	movwf	??_sprintf& (0+255),b
  6792  000130  0EFF               	movlw	255
  6793  000132  0100               	movlb	0	; () banked
  6794  000134  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  6795  000136  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6796  00013A  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6797  00013E                     	if	0	;tblptru may be non-zero
  6798  00013E                     	endif
  6799  00013E                     	if	0	;tblptru may be non-zero
  6800  00013E                     	endif
  6801  00013E  0008               	tblrd		*
  6802  000140  50F5               	movf	tablat,w,c
  6803  000142  0100               	movlb	0	; () banked
  6804  000144  6FB5               	movwf	(??_sprintf+2)& (0+255),b
  6805  000146  6BB6               	clrf	(??_sprintf+3)& (0+255),b
  6806  000148  0100               	movlb	0	; () banked
  6807  00014A  51B3               	movf	??_sprintf& (0+255),w,b
  6808  00014C  0100               	movlb	0	; () banked
  6809  00014E  27B5               	addwf	(??_sprintf+2)& (0+255),f,b
  6810  000150  0100               	movlb	0	; () banked
  6811  000152  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  6812  000154  0100               	movlb	0	; () banked
  6813  000156  23B6               	addwfc	(??_sprintf+3)& (0+255),f,b
  6814  000158  0100               	movlb	0	; () banked
  6815  00015A  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  6816  00015C  0100               	movlb	0	; () banked
  6817  00015E  27C0               	addwf	sprintf@width& (0+255),f,b
  6818  000160  0100               	movlb	0	; () banked
  6819  000162  51B6               	movf	(??_sprintf+3)& (0+255),w,b
  6820  000164  0100               	movlb	0	; () banked
  6821  000166  23C1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6822                           
  6823                           ; BSR set to: 0
  6824  000168  0100               	movlb	0	; () banked
  6825  00016A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6826  00016C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6830  00016E  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6831  000172  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6832  000176                     	if	0	;tblptru may be non-zero
  6833  000176                     	endif
  6834  000176                     	if	0	;tblptru may be non-zero
  6835  000176                     	endif
  6836  000176  0008               	tblrd		*
  6837  000178  50F5               	movf	tablat,w,c
  6838  00017A  EC31  F01E         	call	_isdigit
  6839  00017E  B0D8               	btfsc	status,0,c
  6840  000180  D7C5               	goto	l5428
  6841  000182                     l5436:
  6842                           
  6843                           ;doprnt.c: 608: }
  6844                           ;doprnt.c: 611: if(*f == '.') {
  6845  000182  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6846  000186  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6847  00018A                     	if	0	;tblptru may be non-zero
  6848  00018A                     	endif
  6849  00018A                     	if	0	;tblptru may be non-zero
  6850  00018A                     	endif
  6851  00018A  0008               	tblrd		*
  6852  00018C  50F5               	movf	tablat,w,c
  6853  00018E  0A2E               	xorlw	46
  6854  000190  A4D8               	btfss	status,2,c
  6855  000192  D039               	goto	l5448
  6856                           
  6857                           ;doprnt.c: 612: flag |= 0x4000;
  6858  000194  0100               	movlb	0	; () banked
  6859  000196  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  6860                           
  6861                           ;doprnt.c: 613: f++;
  6862  000198  0100               	movlb	0	; () banked
  6863  00019A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6864  00019C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;doprnt.c: 620: {
  6868                           ;doprnt.c: 621: prec = 0;
  6869  00019E  0E00               	movlw	0
  6870  0001A0  0100               	movlb	0	; () banked
  6871  0001A2  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6872  0001A4  0E00               	movlw	0
  6873  0001A6  6FCF               	movwf	sprintf@prec& (0+255),b
  6874                           
  6875                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6876  0001A8  D023               	goto	l5446
  6877  0001AA                     l5442:
  6878                           
  6879                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6880  0001AA  C0CF  F079         	movff	sprintf@prec,___wmul@multiplier
  6881  0001AE  C0D0  F07A         	movff	sprintf@prec+1,___wmul@multiplier+1
  6882  0001B2  0E00               	movlw	0
  6883  0001B4  0100               	movlb	0	; () banked
  6884  0001B6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6885  0001B8  0E0A               	movlw	10
  6886  0001BA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6887  0001BC  EC7E  F01D         	call	___wmul	;wreg free
  6888  0001C0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6889  0001C4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6890  0001C8                     	if	0	;tblptru may be non-zero
  6891  0001C8                     	endif
  6892  0001C8                     	if	0	;tblptru may be non-zero
  6893  0001C8                     	endif
  6894  0001C8  0008               	tblrd		*
  6895  0001CA  50F5               	movf	tablat,w,c
  6896  0001CC  0100               	movlb	0	; () banked
  6897  0001CE  2779               	addwf	?___wmul& (0+255),f,b
  6898  0001D0  0E00               	movlw	0
  6899  0001D2  0100               	movlb	0	; () banked
  6900  0001D4  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  6901  0001D6  0ED0               	movlw	208
  6902  0001D8  0100               	movlb	0	; () banked
  6903  0001DA  2579               	addwf	?___wmul& (0+255),w,b
  6904  0001DC  0100               	movlb	0	; () banked
  6905  0001DE  6FCF               	movwf	sprintf@prec& (0+255),b
  6906  0001E0  0EFF               	movlw	255
  6907  0001E2  0100               	movlb	0	; () banked
  6908  0001E4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  6909  0001E6  0100               	movlb	0	; () banked
  6910  0001E8  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6911                           
  6912                           ; BSR set to: 0
  6913  0001EA  0100               	movlb	0	; () banked
  6914  0001EC  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6915  0001EE  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6916  0001F0                     l5446:
  6917                           
  6918                           ; BSR set to: 0
  6919  0001F0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6920  0001F4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6921  0001F8                     	if	0	;tblptru may be non-zero
  6922  0001F8                     	endif
  6923  0001F8                     	if	0	;tblptru may be non-zero
  6924  0001F8                     	endif
  6925  0001F8  0008               	tblrd		*
  6926  0001FA  50F5               	movf	tablat,w,c
  6927  0001FC  EC31  F01E         	call	_isdigit
  6928  000200  A0D8               	btfss	status,0,c
  6929  000202  D00C               	goto	l5456
  6930  000204  D7D2               	goto	l5442
  6931  000206                     l5448:
  6932                           
  6933                           ;doprnt.c: 626: prec = 0;
  6934  000206  0E00               	movlw	0
  6935  000208  0100               	movlb	0	; () banked
  6936  00020A  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6937  00020C  0E00               	movlw	0
  6938  00020E  6FCF               	movwf	sprintf@prec& (0+255),b
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;doprnt.c: 628: flag |= 0x1000;
  6942  000210  0100               	movlb	0	; () banked
  6943  000212  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;doprnt.c: 630: }
  6947                           ;doprnt.c: 635: switch(c = *f++) {
  6948  000214  D003               	goto	l5456
  6949  000216                     l5452:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;doprnt.c: 663: flag |= 0x400;
  6953  000216  0100               	movlb	0	; () banked
  6954  000218  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;doprnt.c: 698: case 'i':
  6958                           ;doprnt.c: 699: break;
  6959                           
  6960                           ; BSR set to: 0
  6961                           
  6962                           ;doprnt.c: 697: case 'd':
  6963                           
  6964                           ;doprnt.c: 664: break;
  6965  00021A  D01A               	goto	l5458
  6966  00021C                     l5456:
  6967  00021C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6968  000220  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6969  000224  0100               	movlb	0	; () banked
  6970  000226  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6971  000228  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6972  00022A                     	if	0	;tblptru may be non-zero
  6973  00022A                     	endif
  6974  00022A                     	if	0	;tblptru may be non-zero
  6975  00022A                     	endif
  6976  00022A  0008               	tblrd		*
  6977  00022C  CFF5 F0D1          	movff	tablat,sprintf@c
  6978  000230  0100               	movlb	0	; () banked
  6979  000232  51D1               	movf	sprintf@c& (0+255),w,b
  6980                           
  6981                           ; Switch size 1, requested type "space"
  6982                           ; Number of cases is 4, Range of values is 0 to 105
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte           13     7 (average)
  6986                           ;	Chosen strategy is simple_byte
  6987  000234  0A00               	xorlw	0	; case 0
  6988  000236  B4D8               	btfsc	status,2,c
  6989  000238  EF1D  F006         	goto	l5704
  6990  00023C  0A64               	xorlw	100	; case 100
  6991  00023E  B4D8               	btfsc	status,2,c
  6992  000240  D007               	goto	l5458
  6993  000242  0A02               	xorlw	2	; case 102
  6994  000244  B4D8               	btfsc	status,2,c
  6995  000246  D7E7               	goto	l5452
  6996  000248  0A0F               	xorlw	15	; case 105
  6997  00024A  A4D8               	btfss	status,2,c
  6998  00024C  EF0E  F006         	goto	l5702
  6999  000250                     l5458:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;doprnt.c: 825: if(flag & (0x700)) {
  7003  000250  0E07               	movlw	7
  7004  000252  0100               	movlb	0	; () banked
  7005  000254  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7006  000256  B4D8               	btfsc	status,2,c
  7007  000258  D379               	goto	l5622
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;doprnt.c: 827: if(flag & 0x1000)
  7011  00025A  0100               	movlb	0	; () banked
  7012  00025C  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  7013  00025E  D005               	goto	l5464
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;doprnt.c: 829: prec = 6;
  7017  000260  0E00               	movlw	0
  7018  000262  0100               	movlb	0	; () banked
  7019  000264  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  7020  000266  0E06               	movlw	6
  7021  000268  6FCF               	movwf	sprintf@prec& (0+255),b
  7022  00026A                     l5464:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7026  00026A  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7027  00026E  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7028  000272  CFDE F0CC          	movff	postinc2,sprintf@fval
  7029  000276  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  7030  00027A  CFDD F0CE          	movff	postdec2,sprintf@fval+2
  7031                           
  7032                           ; BSR set to: 0
  7033  00027E  0E03               	movlw	3
  7034  000280  0100               	movlb	0	; () banked
  7035  000282  27BC               	addwf	sprintf@ap& (0+255),f,b
  7036  000284  0E00               	movlw	0
  7037  000286  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;doprnt.c: 831: if(fval < 0.0) {
  7041  000288  0100               	movlb	0	; () banked
  7042  00028A  AFCE               	btfss	(sprintf@fval+2)& (0+255),7,b
  7043  00028C  D011               	goto	l5474
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;doprnt.c: 832: fval = -fval;
  7047  00028E  C0CC  F071         	movff	sprintf@fval,___ftneg@f1
  7048  000292  C0CD  F072         	movff	sprintf@fval+1,___ftneg@f1+1
  7049  000296  C0CE  F073         	movff	sprintf@fval+2,___ftneg@f1+2
  7050  00029A  ECE0  F01D         	call	___ftneg	;wreg free
  7051  00029E  C071  F0CC         	movff	?___ftneg,sprintf@fval
  7052  0002A2  C072  F0CD         	movff	?___ftneg+1,sprintf@fval+1
  7053  0002A6  C073  F0CE         	movff	?___ftneg+2,sprintf@fval+2
  7054                           
  7055                           ;doprnt.c: 833: flag |= 0x03;
  7056  0002AA  0E03               	movlw	3
  7057  0002AC  0100               	movlb	0	; () banked
  7058  0002AE  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7059  0002B0                     l5474:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;doprnt.c: 834: }
  7063                           ;doprnt.c: 835: exp = 0;
  7064  0002B0  0E00               	movlw	0
  7065  0002B2  0100               	movlb	0	; () banked
  7066  0002B4  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7067  0002B6  0E00               	movlw	0
  7068  0002B8  6FCA               	movwf	sprintf@exp& (0+255),b
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;doprnt.c: 836: if( fval!=0) {
  7072  0002BA  0100               	movlb	0	; () banked
  7073  0002BC  51CC               	movf	sprintf@fval& (0+255),w,b
  7074  0002BE  0100               	movlb	0	; () banked
  7075  0002C0  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7076  0002C2  0100               	movlb	0	; () banked
  7077  0002C4  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7078  0002C6  B4D8               	btfsc	status,2,c
  7079  0002C8  D09B               	goto	l5502
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7083  0002CA  0E82               	movlw	130
  7084  0002CC  0100               	movlb	0	; () banked
  7085  0002CE  6FB3               	movwf	??_sprintf& (0+255),b
  7086  0002D0  0EFF               	movlw	255
  7087  0002D2  0100               	movlb	0	; () banked
  7088  0002D4  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7089  0002D6  C0CC  F0B5         	movff	sprintf@fval,??_sprintf+2
  7090  0002DA  C0CD  F0B6         	movff	sprintf@fval+1,??_sprintf+3
  7091  0002DE  C0CE  F0B7         	movff	sprintf@fval+2,??_sprintf+4
  7092  0002E2  C0CF  F0B8         	movff	sprintf@fval+3,??_sprintf+5
  7093  0002E6  0E10               	movlw	16
  7094  0002E8  D006               	goto	u5590
  7095  0002EA                     u5595:
  7096  0002EA  0100               	movlb	0	; () banked
  7097  0002EC  90D8               	bcf	status,0,c
  7098  0002EE  33B8               	rrcf	(??_sprintf+5)& (0+255),f,b
  7099  0002F0  33B7               	rrcf	(??_sprintf+4)& (0+255),f,b
  7100  0002F2  33B6               	rrcf	(??_sprintf+3)& (0+255),f,b
  7101  0002F4  33B5               	rrcf	(??_sprintf+2)& (0+255),f,b
  7102  0002F6                     u5590:
  7103  0002F6  2EE8               	decfsz	wreg,f,c
  7104  0002F8  D7F8               	goto	u5595
  7105  0002FA  0100               	movlb	0	; () banked
  7106  0002FC  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  7107  0002FE  0100               	movlb	0	; () banked
  7108  000300  25B3               	addwf	??_sprintf& (0+255),w,b
  7109  000302  0100               	movlb	0	; () banked
  7110  000304  6FCA               	movwf	sprintf@exp& (0+255),b
  7111  000306  0E00               	movlw	0
  7112  000308  0100               	movlb	0	; () banked
  7113  00030A  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  7114  00030C  0100               	movlb	0	; () banked
  7115  00030E  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;doprnt.c: 838: exp--;
  7119  000310  0100               	movlb	0	; () banked
  7120  000312  07CA               	decf	sprintf@exp& (0+255),f,b
  7121  000314  A0D8               	btfss	status,0,c
  7122  000316  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;doprnt.c: 839: exp *= 3;
  7126  000318  C0CA  F079         	movff	sprintf@exp,___wmul@multiplier
  7127  00031C  C0CB  F07A         	movff	sprintf@exp+1,___wmul@multiplier+1
  7128  000320  0E00               	movlw	0
  7129  000322  0100               	movlb	0	; () banked
  7130  000324  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7131  000326  0E03               	movlw	3
  7132  000328  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7133  00032A  EC7E  F01D         	call	___wmul	;wreg free
  7134  00032E  C079  F0CA         	movff	?___wmul,sprintf@exp
  7135  000332  C07A  F0CB         	movff	?___wmul+1,sprintf@exp+1
  7136                           
  7137                           ;doprnt.c: 840: exp /= 10;
  7138  000336  C0CA  F075         	movff	sprintf@exp,___awdiv@dividend
  7139  00033A  C0CB  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  7140  00033E  0E00               	movlw	0
  7141  000340  0100               	movlb	0	; () banked
  7142  000342  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7143  000344  0E0A               	movlw	10
  7144  000346  6F77               	movwf	___awdiv@divisor& (0+255),b
  7145  000348  ECF9  F019         	call	___awdiv	;wreg free
  7146  00034C  C075  F0CA         	movff	?___awdiv,sprintf@exp
  7147  000350  C076  F0CB         	movff	?___awdiv+1,sprintf@exp+1
  7148                           
  7149                           ;doprnt.c: 841: if(exp < 0)
  7150  000354  0100               	movlb	0	; () banked
  7151  000356  AFCB               	btfss	(sprintf@exp+1)& (0+255),7,b
  7152  000358  D004               	goto	l5490
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;doprnt.c: 842: exp--;
  7156  00035A  0100               	movlb	0	; () banked
  7157  00035C  07CA               	decf	sprintf@exp& (0+255),f,b
  7158  00035E  A0D8               	btfss	status,0,c
  7159  000360  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7160  000362                     l5490:
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7164  000362  0100               	movlb	0	; () banked
  7165  000364  51CA               	movf	sprintf@exp& (0+255),w,b
  7166  000366  0800               	sublw	0
  7167  000368  ECF5  F009         	call	_scale
  7168  00036C  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7169  000370  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7170  000374  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7171                           
  7172                           ;doprnt.c: 847: tmpval.integ *= fval;
  7173  000378  C0C2  F07D         	movff	sprintf@tmpval,___ftmul@f1
  7174  00037C  C0C3  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7175  000380  C0C4  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7176  000384  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7177  000388  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7178  00038C  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7179  000390  ECD0  F014         	call	___ftmul	;wreg free
  7180  000394  C07D  F0C2         	movff	?___ftmul,sprintf@tmpval
  7181  000398  C07E  F0C3         	movff	?___ftmul+1,sprintf@tmpval+1
  7182  00039C  C07F  F0C4         	movff	?___ftmul+2,sprintf@tmpval+2
  7183                           
  7184                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7185  0003A0  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7186  0003A4  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7187  0003A8  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7188  0003AC  0E00               	movlw	0
  7189  0003AE  0100               	movlb	0	; () banked
  7190  0003B0  6F74               	movwf	___ftge@ff2& (0+255),b
  7191  0003B2  0E80               	movlw	128
  7192  0003B4  0100               	movlb	0	; () banked
  7193  0003B6  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7194  0003B8  0E3F               	movlw	63
  7195  0003BA  0100               	movlb	0	; () banked
  7196  0003BC  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7197  0003BE  EC45  F019         	call	___ftge	;wreg free
  7198  0003C2  0100               	movlb	0	; () banked
  7199  0003C4  B0D8               	btfsc	status,0,c
  7200  0003C6  D005               	goto	l5498
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;doprnt.c: 849: exp--;
  7204  0003C8  0100               	movlb	0	; () banked
  7205  0003CA  07CA               	decf	sprintf@exp& (0+255),f,b
  7206  0003CC  A0D8               	btfss	status,0,c
  7207  0003CE  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7208  0003D0  D017               	goto	l5502
  7209  0003D2                     l5498:
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7213  0003D2  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7214  0003D6  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7215  0003DA  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7216  0003DE  0E00               	movlw	0
  7217  0003E0  0100               	movlb	0	; () banked
  7218  0003E2  6F74               	movwf	___ftge@ff2& (0+255),b
  7219  0003E4  0E20               	movlw	32
  7220  0003E6  0100               	movlb	0	; () banked
  7221  0003E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7222  0003EA  0E41               	movlw	65
  7223  0003EC  0100               	movlb	0	; () banked
  7224  0003EE  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7225  0003F0  EC45  F019         	call	___ftge	;wreg free
  7226  0003F4  0100               	movlb	0	; () banked
  7227  0003F6  A0D8               	btfss	status,0,c
  7228  0003F8  D003               	goto	l5502
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;doprnt.c: 851: exp++;
  7232  0003FA  0100               	movlb	0	; () banked
  7233  0003FC  4BCA               	infsnz	sprintf@exp& (0+255),f,b
  7234  0003FE  2BCB               	incf	(sprintf@exp+1)& (0+255),f,b
  7235  000400                     l5502:
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;doprnt.c: 852: }
  7239                           ;doprnt.c: 1112: if(prec <= 12)
  7240  000400  0100               	movlb	0	; () banked
  7241  000402  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7242  000404  D008               	goto	l5504
  7243  000406  0100               	movlb	0	; () banked
  7244  000408  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7245  00040A  E11D               	bnz	l5506
  7246  00040C  0E0D               	movlw	13
  7247  00040E  0100               	movlb	0	; () banked
  7248  000410  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7249  000412  B0D8               	btfsc	status,0,c
  7250  000414  D018               	goto	l5506
  7251  000416                     l5504:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;doprnt.c: 1113: fval += fround(prec);
  7255  000416  C0CC  F093         	movff	sprintf@fval,___ftadd@f1
  7256  00041A  C0CD  F094         	movff	sprintf@fval+1,___ftadd@f1+1
  7257  00041E  C0CE  F095         	movff	sprintf@fval+2,___ftadd@f1+2
  7258  000422  0100               	movlb	0	; () banked
  7259  000424  51CF               	movf	sprintf@prec& (0+255),w,b
  7260  000426  EC44  F00E         	call	_fround
  7261  00042A  C089  F096         	movff	?_fround,___ftadd@f2
  7262  00042E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
  7263  000432  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
  7264  000436  EC9A  F00F         	call	___ftadd	;wreg free
  7265  00043A  C093  F0CC         	movff	?___ftadd,sprintf@fval
  7266  00043E  C094  F0CD         	movff	?___ftadd+1,sprintf@fval+1
  7267  000442  C095  F0CE         	movff	?___ftadd+2,sprintf@fval+2
  7268  000446                     l5506:
  7269                           
  7270                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7271  000446  0100               	movlb	0	; () banked
  7272  000448  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7273  00044A  D008               	goto	l5508
  7274  00044C  0100               	movlb	0	; () banked
  7275  00044E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7276  000450  E12A               	bnz	l5514
  7277  000452  0E0A               	movlw	10
  7278  000454  0100               	movlb	0	; () banked
  7279  000456  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7280  000458  B0D8               	btfsc	status,0,c
  7281  00045A  D025               	goto	l5514
  7282  00045C                     l5508:
  7283                           
  7284                           ; BSR set to: 0
  7285  00045C  0100               	movlb	0	; () banked
  7286  00045E  51CC               	movf	sprintf@fval& (0+255),w,b
  7287  000460  0100               	movlb	0	; () banked
  7288  000462  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7289  000464  0100               	movlb	0	; () banked
  7290  000466  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7291  000468  B4D8               	btfsc	status,2,c
  7292  00046A  D063               	goto	l5528
  7293                           
  7294                           ; BSR set to: 0
  7295  00046C  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7296  000470  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7297  000474  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7298  000478  EC79  F015         	call	___fttol	;wreg free
  7299  00047C  0100               	movlb	0	; () banked
  7300  00047E  5190               	movf	?___fttol& (0+255),w,b
  7301  000480  0100               	movlb	0	; () banked
  7302  000482  1191               	iorwf	(?___fttol+1)& (0+255),w,b
  7303  000484  0100               	movlb	0	; () banked
  7304  000486  1192               	iorwf	(?___fttol+2)& (0+255),w,b
  7305  000488  0100               	movlb	0	; () banked
  7306  00048A  1193               	iorwf	(?___fttol+3)& (0+255),w,b
  7307  00048C  A4D8               	btfss	status,2,c
  7308  00048E  D051               	goto	l5528
  7309                           
  7310                           ; BSR set to: 0
  7311  000490  0100               	movlb	0	; () banked
  7312  000492  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7313  000494  D04E               	goto	l5528
  7314  000496  0100               	movlb	0	; () banked
  7315  000498  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7316  00049A  E105               	bnz	l5514
  7317  00049C  0E02               	movlw	2
  7318  00049E  0100               	movlb	0	; () banked
  7319  0004A0  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7320  0004A2  A0D8               	btfss	status,0,c
  7321  0004A4  D046               	goto	l5528
  7322  0004A6                     l5514:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7326  0004A6  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7327  0004AA  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7328  0004AE  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7329  0004B2  0E70               	movlw	112
  7330  0004B4  0100               	movlb	0	; () banked
  7331  0004B6  6F74               	movwf	___ftge@ff2& (0+255),b
  7332  0004B8  0E89               	movlw	137
  7333  0004BA  0100               	movlb	0	; () banked
  7334  0004BC  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7335  0004BE  0E40               	movlw	64
  7336  0004C0  0100               	movlb	0	; () banked
  7337  0004C2  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7338  0004C4  EC45  F019         	call	___ftge	;wreg free
  7339  0004C8  0100               	movlb	0	; () banked
  7340  0004CA  B0D8               	btfsc	status,0,c
  7341  0004CC  D003               	goto	l5518
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7345  0004CE  0100               	movlb	0	; () banked
  7346  0004D0  0EF7               	movlw	247
  7347  0004D2  D002               	goto	L4
  7348  0004D4                     l5518:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7352  0004D4  0100               	movlb	0	; () banked
  7353  0004D6  0EF8               	movlw	248
  7354  0004D8                     L4:
  7355  0004D8  27CA               	addwf	sprintf@exp& (0+255),f,b
  7356  0004DA  0EFF               	movlw	255
  7357  0004DC  23CB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;doprnt.c: 1124: }
  7361                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7362                           
  7363                           ; BSR set to: 0
  7364  0004DE  0100               	movlb	0	; () banked
  7365  0004E0  51CA               	movf	sprintf@exp& (0+255),w,b
  7366  0004E2  ECF5  F009         	call	_scale
  7367  0004E6  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7368  0004EA  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7369  0004EE  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7370                           
  7371                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7372  0004F2  C0CC  F071         	movff	sprintf@fval,__tdiv_to_l_@f1
  7373  0004F6  C0CD  F072         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7374  0004FA  C0CE  F073         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7375  0004FE  C0C2  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7376  000502  C0C3  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7377  000506  C0C4  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7378  00050A  EC6D  F013         	call	__tdiv_to_l_	;wreg free
  7379  00050E  C071  F0C6         	movff	?__tdiv_to_l_,sprintf@val
  7380  000512  C072  F0C7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7381  000516  C073  F0C8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7382  00051A  C074  F0C9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7383                           
  7384                           ;doprnt.c: 1129: fval = 0.0;
  7385  00051E  0E00               	movlw	0
  7386  000520  0100               	movlb	0	; () banked
  7387  000522  6FCC               	movwf	sprintf@fval& (0+255),b
  7388  000524  0E00               	movlw	0
  7389  000526  0100               	movlb	0	; () banked
  7390  000528  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  7391  00052A  0E00               	movlw	0
  7392  00052C  0100               	movlb	0	; () banked
  7393  00052E  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  7394                           
  7395                           ;doprnt.c: 1130: } else {
  7396  000530  D033               	goto	l5532
  7397  000532                     l5528:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7401  000532  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7402  000536  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7403  00053A  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7404  00053E  EC79  F015         	call	___fttol	;wreg free
  7405  000542  C090  F0C6         	movff	?___fttol,sprintf@val
  7406  000546  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7407  00054A  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7408  00054E  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7409                           
  7410                           ;doprnt.c: 1132: fval -= (double)val;
  7411  000552  C0CC  F09F         	movff	sprintf@fval,___ftsub@f1
  7412  000556  C0CD  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
  7413  00055A  C0CE  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
  7414  00055E  C0C6  F076         	movff	sprintf@val,___lltoft@c
  7415  000562  C0C7  F077         	movff	sprintf@val+1,___lltoft@c+1
  7416  000566  C0C8  F078         	movff	sprintf@val+2,___lltoft@c+2
  7417  00056A  C0C9  F079         	movff	sprintf@val+3,___lltoft@c+3
  7418  00056E  EC5B  F01B         	call	___lltoft	;wreg free
  7419  000572  C076  F0A2         	movff	?___lltoft,___ftsub@f2
  7420  000576  C077  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
  7421  00057A  C078  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
  7422  00057E  EC16  F01C         	call	___ftsub	;wreg free
  7423  000582  C09F  F0CC         	movff	?___ftsub,sprintf@fval
  7424  000586  C0A0  F0CD         	movff	?___ftsub+1,sprintf@fval+1
  7425  00058A  C0A1  F0CE         	movff	?___ftsub+2,sprintf@fval+2
  7426                           
  7427                           ;doprnt.c: 1133: exp = 0;
  7428  00058E  0E00               	movlw	0
  7429  000590  0100               	movlb	0	; () banked
  7430  000592  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7431  000594  0E00               	movlw	0
  7432  000596  6FCA               	movwf	sprintf@exp& (0+255),b
  7433  000598                     l5532:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;doprnt.c: 1134: }
  7437                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7438  000598  0E01               	movlw	1
  7439  00059A  0100               	movlb	0	; () banked
  7440  00059C  6FD1               	movwf	sprintf@c& (0+255),b
  7441  00059E                     l5534:
  7442                           
  7443                           ; BSR set to: 0
  7444  00059E  0E0A               	movlw	10
  7445  0005A0  0100               	movlb	0	; () banked
  7446  0005A2  19D1               	xorwf	sprintf@c& (0+255),w,b
  7447  0005A4  B4D8               	btfsc	status,2,c
  7448  0005A6  D01E               	goto	l5546
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;doprnt.c: 1137: if(val < dpowers[c])
  7452                           
  7453                           ; BSR set to: 0
  7454                           
  7455                           ; BSR set to: 0
  7456  0005A8  0100               	movlb	0	; () banked
  7457  0005AA  51D1               	movf	sprintf@c& (0+255),w,b
  7458  0005AC  0D04               	mullw	4
  7459  0005AE  0EF5               	movlw	low _dpowers
  7460  0005B0  24F3               	addwf	prodl,w,c
  7461  0005B2  6EF6               	movwf	tblptrl,c
  7462  0005B4  0E7E               	movlw	high _dpowers
  7463  0005B6  20F4               	addwfc	prodh,w,c
  7464  0005B8  6EF7               	movwf	tblptrh,c
  7465  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7466  0005BA                     	endif
  7467  0005BA  0009               	tblrd		*+
  7468  0005BC  50F5               	movf	tablat,w,c
  7469  0005BE  0100               	movlb	0	; () banked
  7470  0005C0  5DC6               	subwf	sprintf@val& (0+255),w,b
  7471  0005C2  0009               	tblrd		*+
  7472  0005C4  50F5               	movf	tablat,w,c
  7473  0005C6  0100               	movlb	0	; () banked
  7474  0005C8  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7475  0005CA  0009               	tblrd		*+
  7476  0005CC  50F5               	movf	tablat,w,c
  7477  0005CE  0100               	movlb	0	; () banked
  7478  0005D0  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7479  0005D2  0009               	tblrd		*+
  7480  0005D4  50F5               	movf	tablat,w,c
  7481  0005D6  0100               	movlb	0	; () banked
  7482  0005D8  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7483  0005DA  A0D8               	btfss	status,0,c
  7484  0005DC  D003               	goto	l5546
  7485                           
  7486                           ; BSR set to: 0
  7487                           
  7488                           ; BSR set to: 0
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;doprnt.c: 1138: break;
  7492  0005DE  0100               	movlb	0	; () banked
  7493  0005E0  2BD1               	incf	sprintf@c& (0+255),f,b
  7494  0005E2  D7DD               	goto	l5534
  7495  0005E4                     l5546:
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;doprnt.c: 1142: width -= prec + c + exp;
  7499  0005E4  C0D1  F0B3         	movff	sprintf@c,??_sprintf
  7500  0005E8  0100               	movlb	0	; () banked
  7501  0005EA  6BB4               	clrf	(??_sprintf+1)& (0+255),b
  7502  0005EC  BFB3               	btfsc	??_sprintf& (0+255),7,b
  7503  0005EE  07B4               	decf	(??_sprintf+1)& (0+255),f,b
  7504  0005F0  0100               	movlb	0	; () banked
  7505  0005F2  51CF               	movf	sprintf@prec& (0+255),w,b
  7506  0005F4  0100               	movlb	0	; () banked
  7507  0005F6  27B3               	addwf	??_sprintf& (0+255),f,b
  7508  0005F8  0100               	movlb	0	; () banked
  7509  0005FA  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7510  0005FC  0100               	movlb	0	; () banked
  7511  0005FE  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7512  000600  0100               	movlb	0	; () banked
  7513  000602  51CA               	movf	sprintf@exp& (0+255),w,b
  7514  000604  0100               	movlb	0	; () banked
  7515  000606  27B3               	addwf	??_sprintf& (0+255),f,b
  7516  000608  0100               	movlb	0	; () banked
  7517  00060A  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7518  00060C  0100               	movlb	0	; () banked
  7519  00060E  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7520  000610  0100               	movlb	0	; () banked
  7521  000612  51B3               	movf	??_sprintf& (0+255),w,b
  7522  000614  0100               	movlb	0	; () banked
  7523  000616  5FC0               	subwf	sprintf@width& (0+255),f,b
  7524  000618  0100               	movlb	0	; () banked
  7525  00061A  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  7526  00061C  0100               	movlb	0	; () banked
  7527  00061E  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7528                           
  7529                           ;doprnt.c: 1143: if(
  7530                           ;doprnt.c: 1147: prec)
  7531  000620  0100               	movlb	0	; () banked
  7532  000622  51CF               	movf	sprintf@prec& (0+255),w,b
  7533  000624  0100               	movlb	0	; () banked
  7534  000626  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7535  000628  B4D8               	btfsc	status,2,c
  7536  00062A  D004               	goto	l5550
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;doprnt.c: 1148: width--;
  7540  00062C  0100               	movlb	0	; () banked
  7541  00062E  07C0               	decf	sprintf@width& (0+255),f,b
  7542  000630  A0D8               	btfss	status,0,c
  7543  000632  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7544  000634                     l5550:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;doprnt.c: 1149: if(flag & 0x03)
  7548  000634  0E03               	movlw	3
  7549  000636  0100               	movlb	0	; () banked
  7550  000638  15BE               	andwf	sprintf@flag& (0+255),w,b
  7551  00063A  0100               	movlb	0	; () banked
  7552  00063C  6FB3               	movwf	??_sprintf& (0+255),b
  7553  00063E  0E00               	movlw	0
  7554  000640  0100               	movlb	0	; () banked
  7555  000642  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7556  000644  0100               	movlb	0	; () banked
  7557  000646  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7558  000648  0100               	movlb	0	; () banked
  7559  00064A  51B3               	movf	??_sprintf& (0+255),w,b
  7560  00064C  0100               	movlb	0	; () banked
  7561  00064E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7562  000650  B4D8               	btfsc	status,2,c
  7563  000652  D00E               	goto	l5560
  7564  000654  D009               	goto	l5558
  7565  000656                     l5554:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7569  000656  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7570  00065A  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7571  00065E  0E20               	movlw	32
  7572  000660  6EDF               	movwf	indf2,c
  7573                           
  7574                           ; BSR set to: 0
  7575  000662  0100               	movlb	0	; () banked
  7576  000664  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7577  000666  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7578  000668                     l5558:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;doprnt.c: 1182: width--;
  7582  000668  0100               	movlb	0	; () banked
  7583  00066A  07C0               	decf	sprintf@width& (0+255),f,b
  7584  00066C  A0D8               	btfss	status,0,c
  7585  00066E  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7586  000670                     l5560:
  7587                           
  7588                           ; BSR set to: 0
  7589  000670  0100               	movlb	0	; () banked
  7590  000672  BFC1               	btfsc	(sprintf@width+1)& (0+255),7,b
  7591  000674  D007               	goto	l5562
  7592  000676  0100               	movlb	0	; () banked
  7593  000678  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  7594  00067A  E1ED               	bnz	l5554
  7595  00067C  0100               	movlb	0	; () banked
  7596  00067E  05C0               	decf	sprintf@width& (0+255),w,b
  7597  000680  B0D8               	btfsc	status,0,c
  7598  000682  D7E9               	goto	l5554
  7599  000684                     l5562:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 1183: }
  7603                           ;doprnt.c: 1188: if(flag & 0x03)
  7604  000684  0E03               	movlw	3
  7605  000686  0100               	movlb	0	; () banked
  7606  000688  15BE               	andwf	sprintf@flag& (0+255),w,b
  7607  00068A  0100               	movlb	0	; () banked
  7608  00068C  6FB3               	movwf	??_sprintf& (0+255),b
  7609  00068E  0E00               	movlw	0
  7610  000690  0100               	movlb	0	; () banked
  7611  000692  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7612  000694  0100               	movlb	0	; () banked
  7613  000696  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7614  000698  0100               	movlb	0	; () banked
  7615  00069A  51B3               	movf	??_sprintf& (0+255),w,b
  7616  00069C  0100               	movlb	0	; () banked
  7617  00069E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7618  0006A0  B4D8               	btfsc	status,2,c
  7619  0006A2  D055               	goto	l5576
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7623  0006A4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7624  0006A8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7625  0006AC  0E2D               	movlw	45
  7626  0006AE  D04D               	goto	L5
  7627  0006B0                     l5566:
  7628                           
  7629                           ; BSR set to: 0
  7630  0006B0  0100               	movlb	0	; () banked
  7631  0006B2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7632  0006B4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;doprnt.c: 1195: }
  7636                           ;doprnt.c: 1196: while(c--) {
  7637  0006B6  D04B               	goto	l5576
  7638  0006B8                     l5568:
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;doprnt.c: 1200: {
  7642                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7643  0006B8  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7644  0006BC  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7645  0006C0  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7646  0006C4  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7647  0006C8  0100               	movlb	0	; () banked
  7648  0006CA  51D1               	movf	sprintf@c& (0+255),w,b
  7649  0006CC  0D04               	mullw	4
  7650  0006CE  0EF5               	movlw	low _dpowers
  7651  0006D0  24F3               	addwf	prodl,w,c
  7652  0006D2  6EF6               	movwf	tblptrl,c
  7653  0006D4  0E7E               	movlw	high _dpowers
  7654  0006D6  20F4               	addwfc	prodh,w,c
  7655  0006D8  6EF7               	movwf	tblptrh,c
  7656  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7657  0006DA                     	endif
  7658  0006DA  0009               	tblrd		*+
  7659  0006DC  CFF5 F075          	movff	tablat,___lldiv@divisor
  7660  0006E0  0009               	tblrd		*+
  7661  0006E2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7662  0006E6  0009               	tblrd		*+
  7663  0006E8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7664  0006EC  000A               	tblrd		*-
  7665  0006EE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7666  0006F2  ECA1  F019         	call	___lldiv	;wreg free
  7667  0006F6  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7668  0006FA  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7669  0006FE  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7670  000702  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7671                           
  7672                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7673  000706  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7674  00070A  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7675  00070E  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7676  000712  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7677  000716  0E0A               	movlw	10
  7678  000718  0100               	movlb	0	; () banked
  7679  00071A  6F7D               	movwf	___llmod@divisor& (0+255),b
  7680  00071C  0E00               	movlw	0
  7681  00071E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7682  000720  0E00               	movlw	0
  7683  000722  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7684  000724  0E00               	movlw	0
  7685  000726  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7686  000728  EC96  F01A         	call	___llmod	;wreg free
  7687  00072C  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7688  000730  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7689  000734  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7690  000738  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7691                           
  7692                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7693  00073C  0100               	movlb	0	; () banked
  7694  00073E  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7695  000740  0F30               	addlw	48
  7696  000742  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7697  000746  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7698  00074A                     L5:
  7699  00074A  6EDF               	movwf	indf2,c
  7700  00074C  D7B1               	goto	l5566
  7701  00074E                     l5576:
  7702                           
  7703                           ; BSR set to: 0
  7704  00074E  0100               	movlb	0	; () banked
  7705  000750  07D1               	decf	sprintf@c& (0+255),f,b
  7706  000752  0100               	movlb	0	; () banked
  7707  000754  29D1               	incf	sprintf@c& (0+255),w,b
  7708  000756  B4D8               	btfsc	status,2,c
  7709  000758  D00E               	goto	l5584
  7710  00075A  D7AE               	goto	l5568
  7711  00075C                     l5578:
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7715  00075C  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7716  000760  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7717  000764  0E30               	movlw	48
  7718  000766  6EDF               	movwf	indf2,c
  7719                           
  7720                           ; BSR set to: 0
  7721  000768  0100               	movlb	0	; () banked
  7722  00076A  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7723  00076C  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;doprnt.c: 1209: exp--;
  7727  00076E  0100               	movlb	0	; () banked
  7728  000770  07CA               	decf	sprintf@exp& (0+255),f,b
  7729  000772  A0D8               	btfss	status,0,c
  7730  000774  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7731  000776                     l5584:
  7732                           
  7733                           ; BSR set to: 0
  7734  000776  0100               	movlb	0	; () banked
  7735  000778  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7736  00077A  D007               	goto	l5586
  7737  00077C  0100               	movlb	0	; () banked
  7738  00077E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7739  000780  E1ED               	bnz	l5578
  7740  000782  0100               	movlb	0	; () banked
  7741  000784  05CA               	decf	sprintf@exp& (0+255),w,b
  7742  000786  B0D8               	btfsc	status,0,c
  7743  000788  D7E9               	goto	l5578
  7744  00078A                     l5586:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;doprnt.c: 1210: }
  7748                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7749  00078A  0100               	movlb	0	; () banked
  7750  00078C  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7751  00078E  D00C               	goto	l493
  7752  000790  0100               	movlb	0	; () banked
  7753  000792  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7754  000794  E105               	bnz	u5780
  7755  000796  0E09               	movlw	9
  7756  000798  0100               	movlb	0	; () banked
  7757  00079A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7758  00079C  A0D8               	btfss	status,0,c
  7759  00079E  D004               	goto	l493
  7760  0007A0                     u5780:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7764  0007A0  0E08               	movlw	8
  7765  0007A2  0100               	movlb	0	; () banked
  7766  0007A4  6FD1               	movwf	sprintf@c& (0+255),b
  7767  0007A6  D002               	goto	l5590
  7768  0007A8                     l493:
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;doprnt.c: 1213: else
  7772                           ;doprnt.c: 1214: c = prec;
  7773  0007A8  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  7774  0007AC                     l5590:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;doprnt.c: 1215: prec -= c;
  7778  0007AC  0100               	movlb	0	; () banked
  7779  0007AE  51D1               	movf	sprintf@c& (0+255),w,b
  7780  0007B0  0100               	movlb	0	; () banked
  7781  0007B2  5FCF               	subwf	sprintf@prec& (0+255),f,b
  7782  0007B4  0E00               	movlw	0
  7783  0007B6  0100               	movlb	0	; () banked
  7784  0007B8  BFD1               	btfsc	sprintf@c& (0+255),7,b
  7785  0007BA  0EFF               	movlw	255
  7786  0007BC  0100               	movlb	0	; () banked
  7787  0007BE  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;doprnt.c: 1219: if(c)
  7791  0007C0  0100               	movlb	0	; () banked
  7792  0007C2  51D1               	movf	sprintf@c& (0+255),w,b
  7793  0007C4  0100               	movlb	0	; () banked
  7794  0007C6  B4D8               	btfsc	status,2,c
  7795  0007C8  D009               	goto	l5598
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7799  0007CA  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7800  0007CE  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7801  0007D2  0E2E               	movlw	46
  7802  0007D4  6EDF               	movwf	indf2,c
  7803                           
  7804                           ; BSR set to: 0
  7805  0007D6  0100               	movlb	0	; () banked
  7806  0007D8  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7807  0007DA  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7808  0007DC                     l5598:
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7812  0007DC  0100               	movlb	0	; () banked
  7813  0007DE  51D1               	movf	sprintf@c& (0+255),w,b
  7814  0007E0  ECF5  F009         	call	_scale
  7815  0007E4  C089  F0B9         	movff	?_scale,_sprintf$2426
  7816  0007E8  C08A  F0BA         	movff	?_scale+1,_sprintf$2426+1
  7817  0007EC  C08B  F0BB         	movff	?_scale+2,_sprintf$2426+2
  7818                           
  7819                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7820  0007F0  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7821  0007F4  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7822  0007F8  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7823  0007FC  C0B9  F07D         	movff	_sprintf$2426,___ftmul@f1
  7824  000800  C0BA  F07E         	movff	_sprintf$2426+1,___ftmul@f1+1
  7825  000804  C0BB  F07F         	movff	_sprintf$2426+2,___ftmul@f1+2
  7826  000808  ECD0  F014         	call	___ftmul	;wreg free
  7827  00080C  C07D  F090         	movff	?___ftmul,___fttol@f1
  7828  000810  C07E  F091         	movff	?___ftmul+1,___fttol@f1+1
  7829  000814  C07F  F092         	movff	?___ftmul+2,___fttol@f1+2
  7830  000818  EC79  F015         	call	___fttol	;wreg free
  7831  00081C  C090  F0C6         	movff	?___fttol,sprintf@val
  7832  000820  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7833  000824  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7834  000828  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7835                           
  7836                           ;doprnt.c: 1228: while(c--) {
  7837  00082C  D074               	goto	l5612
  7838  00082E                     l5602:
  7839                           
  7840                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7841  00082E  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7842  000832  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7843  000836  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7844  00083A  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7845  00083E  0100               	movlb	0	; () banked
  7846  000840  51D1               	movf	sprintf@c& (0+255),w,b
  7847  000842  0D04               	mullw	4
  7848  000844  0EF5               	movlw	low _dpowers
  7849  000846  24F3               	addwf	prodl,w,c
  7850  000848  6EF6               	movwf	tblptrl,c
  7851  00084A  0E7E               	movlw	high _dpowers
  7852  00084C  20F4               	addwfc	prodh,w,c
  7853  00084E  6EF7               	movwf	tblptrh,c
  7854  000850                     	if	0	;There are less than 3 active tblptr bytes
  7855  000850                     	endif
  7856  000850  0009               	tblrd		*+
  7857  000852  CFF5 F075          	movff	tablat,___lldiv@divisor
  7858  000856  0009               	tblrd		*+
  7859  000858  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7860  00085C  0009               	tblrd		*+
  7861  00085E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7862  000862  000A               	tblrd		*-
  7863  000864  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7864  000868  ECA1  F019         	call	___lldiv	;wreg free
  7865  00086C  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7866  000870  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7867  000874  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7868  000878  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7869                           
  7870                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7871  00087C  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7872  000880  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7873  000884  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7874  000888  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7875  00088C  0E0A               	movlw	10
  7876  00088E  0100               	movlb	0	; () banked
  7877  000890  6F7D               	movwf	___llmod@divisor& (0+255),b
  7878  000892  0E00               	movlw	0
  7879  000894  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7880  000896  0E00               	movlw	0
  7881  000898  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7882  00089A  0E00               	movlw	0
  7883  00089C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7884  00089E  EC96  F01A         	call	___llmod	;wreg free
  7885  0008A2  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7886  0008A6  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7887  0008AA  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7888  0008AE  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7889                           
  7890                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7891  0008B2  0100               	movlb	0	; () banked
  7892  0008B4  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7893  0008B6  0F30               	addlw	48
  7894  0008B8  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7895  0008BC  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7896  0008C0  6EDF               	movwf	indf2,c
  7897                           
  7898                           ; BSR set to: 0
  7899  0008C2  0100               	movlb	0	; () banked
  7900  0008C4  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7901  0008C6  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;doprnt.c: 1232: val %= dpowers[c];
  7905  0008C8  C0C6  F079         	movff	sprintf@val,___llmod@dividend
  7906  0008CC  C0C7  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7907  0008D0  C0C8  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7908  0008D4  C0C9  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7909  0008D8  0100               	movlb	0	; () banked
  7910  0008DA  51D1               	movf	sprintf@c& (0+255),w,b
  7911  0008DC  0D04               	mullw	4
  7912  0008DE  0EF5               	movlw	low _dpowers
  7913  0008E0  24F3               	addwf	prodl,w,c
  7914  0008E2  6EF6               	movwf	tblptrl,c
  7915  0008E4  0E7E               	movlw	high _dpowers
  7916  0008E6  20F4               	addwfc	prodh,w,c
  7917  0008E8  6EF7               	movwf	tblptrh,c
  7918  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7919  0008EA                     	endif
  7920  0008EA  0009               	tblrd		*+
  7921  0008EC  CFF5 F07D          	movff	tablat,___llmod@divisor
  7922  0008F0  0009               	tblrd		*+
  7923  0008F2  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7924  0008F6  0009               	tblrd		*+
  7925  0008F8  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7926  0008FC  000A               	tblrd		*-
  7927  0008FE  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7928  000902  EC96  F01A         	call	___llmod	;wreg free
  7929  000906  C079  F0C6         	movff	?___llmod,sprintf@val
  7930  00090A  C07A  F0C7         	movff	?___llmod+1,sprintf@val+1
  7931  00090E  C07B  F0C8         	movff	?___llmod+2,sprintf@val+2
  7932  000912  C07C  F0C9         	movff	?___llmod+3,sprintf@val+3
  7933  000916                     l5612:
  7934  000916  0100               	movlb	0	; () banked
  7935  000918  07D1               	decf	sprintf@c& (0+255),f,b
  7936  00091A  0100               	movlb	0	; () banked
  7937  00091C  29D1               	incf	sprintf@c& (0+255),w,b
  7938  00091E  B4D8               	btfsc	status,2,c
  7939  000920  D00E               	goto	l5620
  7940  000922  D785               	goto	l5602
  7941  000924                     l5614:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7945  000924  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7946  000928  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7947  00092C  0E30               	movlw	48
  7948  00092E  6EDF               	movwf	indf2,c
  7949                           
  7950                           ; BSR set to: 0
  7951  000930  0100               	movlb	0	; () banked
  7952  000932  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7953  000934  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;doprnt.c: 1237: prec--;
  7957  000936  0100               	movlb	0	; () banked
  7958  000938  07CF               	decf	sprintf@prec& (0+255),f,b
  7959  00093A  A0D8               	btfss	status,0,c
  7960  00093C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  7961  00093E                     l5620:
  7962                           
  7963                           ; BSR set to: 0
  7964  00093E  0100               	movlb	0	; () banked
  7965  000940  51CF               	movf	sprintf@prec& (0+255),w,b
  7966  000942  0100               	movlb	0	; () banked
  7967  000944  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7968  000946  B4D8               	btfsc	status,2,c
  7969  000948  D169               	goto	l5702
  7970  00094A  D7EC               	goto	l5614
  7971  00094C                     l5622:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;doprnt.c: 1246: }
  7975                           ;doprnt.c: 1253: {
  7976                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7977  00094C  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7978  000950  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7979  000954  CFDE F0C6          	movff	postinc2,sprintf@val
  7980  000958  CFDD F0C7          	movff	postdec2,sprintf@val+1
  7981  00095C  0100               	movlb	0	; () banked
  7982  00095E  0E00               	movlw	0
  7983  000960  BFC7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7984  000962  0EFF               	movlw	-1
  7985  000964  6FC8               	movwf	(sprintf@val+2)& (0+255),b
  7986  000966  6FC9               	movwf	(sprintf@val+3)& (0+255),b
  7987                           
  7988                           ; BSR set to: 0
  7989  000968  0E02               	movlw	2
  7990  00096A  0100               	movlb	0	; () banked
  7991  00096C  27BC               	addwf	sprintf@ap& (0+255),f,b
  7992  00096E  0E00               	movlw	0
  7993  000970  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;doprnt.c: 1261: if((long)val < 0) {
  7997  000972  0100               	movlb	0	; () banked
  7998  000974  AFC9               	btfss	(sprintf@val+3)& (0+255),7,b
  7999  000976  D00C               	goto	l5632
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;doprnt.c: 1262: flag |= 0x03;
  8003  000978  0E03               	movlw	3
  8004  00097A  0100               	movlb	0	; () banked
  8005  00097C  13BE               	iorwf	sprintf@flag& (0+255),f,b
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;doprnt.c: 1263: val = -val;
  8009  00097E  0100               	movlb	0	; () banked
  8010  000980  1FC9               	comf	(sprintf@val+3)& (0+255),f,b
  8011  000982  1FC8               	comf	(sprintf@val+2)& (0+255),f,b
  8012  000984  1FC7               	comf	(sprintf@val+1)& (0+255),f,b
  8013  000986  6DC6               	negf	sprintf@val& (0+255),b
  8014  000988  0E00               	movlw	0
  8015  00098A  23C7               	addwfc	(sprintf@val+1)& (0+255),f,b
  8016  00098C  23C8               	addwfc	(sprintf@val+2)& (0+255),f,b
  8017  00098E  23C9               	addwfc	(sprintf@val+3)& (0+255),f,b
  8018  000990                     l5632:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;doprnt.c: 1264: }
  8022                           ;doprnt.c: 1266: }
  8023                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8024  000990  0100               	movlb	0	; () banked
  8025  000992  51CF               	movf	sprintf@prec& (0+255),w,b
  8026  000994  0100               	movlb	0	; () banked
  8027  000996  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8028  000998  A4D8               	btfss	status,2,c
  8029  00099A  D00D               	goto	l5638
  8030                           
  8031                           ; BSR set to: 0
  8032  00099C  0100               	movlb	0	; () banked
  8033  00099E  51C6               	movf	sprintf@val& (0+255),w,b
  8034  0009A0  0100               	movlb	0	; () banked
  8035  0009A2  11C7               	iorwf	(sprintf@val+1)& (0+255),w,b
  8036  0009A4  0100               	movlb	0	; () banked
  8037  0009A6  11C8               	iorwf	(sprintf@val+2)& (0+255),w,b
  8038  0009A8  0100               	movlb	0	; () banked
  8039  0009AA  11C9               	iorwf	(sprintf@val+3)& (0+255),w,b
  8040  0009AC  A4D8               	btfss	status,2,c
  8041  0009AE  D003               	goto	l5638
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;doprnt.c: 1291: prec++;
  8045  0009B0  0100               	movlb	0	; () banked
  8046  0009B2  4BCF               	infsnz	sprintf@prec& (0+255),f,b
  8047  0009B4  2BD0               	incf	(sprintf@prec+1)& (0+255),f,b
  8048  0009B6                     l5638:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8052  0009B6  0E01               	movlw	1
  8053  0009B8  0100               	movlb	0	; () banked
  8054  0009BA  6FD1               	movwf	sprintf@c& (0+255),b
  8055  0009BC                     l5640:
  8056                           
  8057                           ; BSR set to: 0
  8058  0009BC  0E0A               	movlw	10
  8059  0009BE  0100               	movlb	0	; () banked
  8060  0009C0  19D1               	xorwf	sprintf@c& (0+255),w,b
  8061  0009C2  B4D8               	btfsc	status,2,c
  8062  0009C4  D01E               	goto	l5652
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;doprnt.c: 1306: if(val < dpowers[c])
  8066                           
  8067                           ; BSR set to: 0
  8068                           
  8069                           ; BSR set to: 0
  8070  0009C6  0100               	movlb	0	; () banked
  8071  0009C8  51D1               	movf	sprintf@c& (0+255),w,b
  8072  0009CA  0D04               	mullw	4
  8073  0009CC  0EF5               	movlw	low _dpowers
  8074  0009CE  24F3               	addwf	prodl,w,c
  8075  0009D0  6EF6               	movwf	tblptrl,c
  8076  0009D2  0E7E               	movlw	high _dpowers
  8077  0009D4  20F4               	addwfc	prodh,w,c
  8078  0009D6  6EF7               	movwf	tblptrh,c
  8079  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8080  0009D8                     	endif
  8081  0009D8  0009               	tblrd		*+
  8082  0009DA  50F5               	movf	tablat,w,c
  8083  0009DC  0100               	movlb	0	; () banked
  8084  0009DE  5DC6               	subwf	sprintf@val& (0+255),w,b
  8085  0009E0  0009               	tblrd		*+
  8086  0009E2  50F5               	movf	tablat,w,c
  8087  0009E4  0100               	movlb	0	; () banked
  8088  0009E6  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  8089  0009E8  0009               	tblrd		*+
  8090  0009EA  50F5               	movf	tablat,w,c
  8091  0009EC  0100               	movlb	0	; () banked
  8092  0009EE  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  8093  0009F0  0009               	tblrd		*+
  8094  0009F2  50F5               	movf	tablat,w,c
  8095  0009F4  0100               	movlb	0	; () banked
  8096  0009F6  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  8097  0009F8  A0D8               	btfss	status,0,c
  8098  0009FA  D003               	goto	l5652
  8099                           
  8100                           ; BSR set to: 0
  8101                           
  8102                           ; BSR set to: 0
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;doprnt.c: 1307: break;
  8106  0009FC  0100               	movlb	0	; () banked
  8107  0009FE  2BD1               	incf	sprintf@c& (0+255),f,b
  8108  000A00  D7DD               	goto	l5640
  8109  000A02                     l5652:
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;doprnt.c: 1339: if(c < prec)
  8113  000A02  0E80               	movlw	128
  8114  000A04  0100               	movlb	0	; () banked
  8115  000A06  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8116  000A08  0E7F               	movlw	127
  8117  000A0A  0100               	movlb	0	; () banked
  8118  000A0C  6FB3               	movwf	??_sprintf& (0+255),b
  8119  000A0E  0100               	movlb	0	; () banked
  8120  000A10  51CF               	movf	sprintf@prec& (0+255),w,b
  8121  000A12  0100               	movlb	0	; () banked
  8122  000A14  5DD1               	subwf	sprintf@c& (0+255),w,b
  8123  000A16  0100               	movlb	0	; () banked
  8124  000A18  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8125  000A1A  0A80               	xorlw	128
  8126  000A1C  0100               	movlb	0	; () banked
  8127  000A1E  59B3               	subwfb	??_sprintf& (0+255),w,b
  8128  000A20  B0D8               	btfsc	status,0,c
  8129  000A22  D003               	goto	l5656
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;doprnt.c: 1340: c = prec;
  8133  000A24  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  8134  000A28  D018               	goto	l5660
  8135  000A2A                     l5656:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;doprnt.c: 1341: else if(prec < c)
  8139  000A2A  0100               	movlb	0	; () banked
  8140  000A2C  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8141  000A2E  0A80               	xorlw	128
  8142  000A30  0100               	movlb	0	; () banked
  8143  000A32  6FB3               	movwf	??_sprintf& (0+255),b
  8144  000A34  0100               	movlb	0	; () banked
  8145  000A36  51D1               	movf	sprintf@c& (0+255),w,b
  8146  000A38  0100               	movlb	0	; () banked
  8147  000A3A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8148  000A3C  0E80               	movlw	128
  8149  000A3E  0100               	movlb	0	; () banked
  8150  000A40  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8151  000A42  0E7F               	movlw	127
  8152  000A44  0100               	movlb	0	; () banked
  8153  000A46  59B3               	subwfb	??_sprintf& (0+255),w,b
  8154  000A48  B0D8               	btfsc	status,0,c
  8155  000A4A  D007               	goto	l5660
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;doprnt.c: 1342: prec = c;
  8159  000A4C  0100               	movlb	0	; () banked
  8160  000A4E  51D1               	movf	sprintf@c& (0+255),w,b
  8161  000A50  0100               	movlb	0	; () banked
  8162  000A52  6FCF               	movwf	sprintf@prec& (0+255),b
  8163  000A54  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
  8164  000A56  BFCF               	btfsc	sprintf@prec& (0+255),7,b
  8165  000A58  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8166  000A5A                     l5660:
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8170  000A5A  0100               	movlb	0	; () banked
  8171  000A5C  51C0               	movf	sprintf@width& (0+255),w,b
  8172  000A5E  0100               	movlb	0	; () banked
  8173  000A60  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8174  000A62  B4D8               	btfsc	status,2,c
  8175  000A64  D014               	goto	l5666
  8176                           
  8177                           ; BSR set to: 0
  8178  000A66  0E03               	movlw	3
  8179  000A68  0100               	movlb	0	; () banked
  8180  000A6A  15BE               	andwf	sprintf@flag& (0+255),w,b
  8181  000A6C  0100               	movlb	0	; () banked
  8182  000A6E  6FB3               	movwf	??_sprintf& (0+255),b
  8183  000A70  0E00               	movlw	0
  8184  000A72  0100               	movlb	0	; () banked
  8185  000A74  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8186  000A76  0100               	movlb	0	; () banked
  8187  000A78  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8188  000A7A  0100               	movlb	0	; () banked
  8189  000A7C  51B3               	movf	??_sprintf& (0+255),w,b
  8190  000A7E  0100               	movlb	0	; () banked
  8191  000A80  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8192  000A82  B4D8               	btfsc	status,2,c
  8193  000A84  D004               	goto	l5666
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;doprnt.c: 1346: width--;
  8197  000A86  0100               	movlb	0	; () banked
  8198  000A88  07C0               	decf	sprintf@width& (0+255),f,b
  8199  000A8A  A0D8               	btfss	status,0,c
  8200  000A8C  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8201  000A8E                     l5666:
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8205  000A8E  0100               	movlb	0	; () banked
  8206  000A90  ADBF               	btfss	(sprintf@flag+1)& (0+255),6,b
  8207  000A92  D01E               	goto	l5674
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;doprnt.c: 1349: if(width > prec)
  8211  000A94  0100               	movlb	0	; () banked
  8212  000A96  51C0               	movf	sprintf@width& (0+255),w,b
  8213  000A98  0100               	movlb	0	; () banked
  8214  000A9A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8215  000A9C  0100               	movlb	0	; () banked
  8216  000A9E  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8217  000AA0  0A80               	xorlw	128
  8218  000AA2  0100               	movlb	0	; () banked
  8219  000AA4  6FB3               	movwf	??_sprintf& (0+255),b
  8220  000AA6  0100               	movlb	0	; () banked
  8221  000AA8  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8222  000AAA  0A80               	xorlw	128
  8223  000AAC  0100               	movlb	0	; () banked
  8224  000AAE  59B3               	subwfb	??_sprintf& (0+255),w,b
  8225  000AB0  B0D8               	btfsc	status,0,c
  8226  000AB2  D009               	goto	l5672
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;doprnt.c: 1350: width -= prec;
  8230  000AB4  0100               	movlb	0	; () banked
  8231  000AB6  51CF               	movf	sprintf@prec& (0+255),w,b
  8232  000AB8  0100               	movlb	0	; () banked
  8233  000ABA  5FC0               	subwf	sprintf@width& (0+255),f,b
  8234  000ABC  0100               	movlb	0	; () banked
  8235  000ABE  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8236  000AC0  0100               	movlb	0	; () banked
  8237  000AC2  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8238  000AC4  D005               	goto	l5674
  8239  000AC6                     l5672:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;doprnt.c: 1351: else
  8243                           ;doprnt.c: 1352: width = 0;
  8244  000AC6  0E00               	movlw	0
  8245  000AC8  0100               	movlb	0	; () banked
  8246  000ACA  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8247  000ACC  0E00               	movlw	0
  8248  000ACE  6FC0               	movwf	sprintf@width& (0+255),b
  8249  000AD0                     l5674:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;doprnt.c: 1353: }
  8253                           ;doprnt.c: 1381: if(width > c)
  8254  000AD0  0E80               	movlw	128
  8255  000AD2  0100               	movlb	0	; () banked
  8256  000AD4  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8257  000AD6  0E7F               	movlw	127
  8258  000AD8  0100               	movlb	0	; () banked
  8259  000ADA  6FB3               	movwf	??_sprintf& (0+255),b
  8260  000ADC  0100               	movlb	0	; () banked
  8261  000ADE  51C0               	movf	sprintf@width& (0+255),w,b
  8262  000AE0  0100               	movlb	0	; () banked
  8263  000AE2  5DD1               	subwf	sprintf@c& (0+255),w,b
  8264  000AE4  0100               	movlb	0	; () banked
  8265  000AE6  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8266  000AE8  0A80               	xorlw	128
  8267  000AEA  0100               	movlb	0	; () banked
  8268  000AEC  59B3               	subwfb	??_sprintf& (0+255),w,b
  8269  000AEE  B0D8               	btfsc	status,0,c
  8270  000AF0  D00B               	goto	l5678
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;doprnt.c: 1382: width -= c;
  8274  000AF2  0100               	movlb	0	; () banked
  8275  000AF4  51D1               	movf	sprintf@c& (0+255),w,b
  8276  000AF6  0100               	movlb	0	; () banked
  8277  000AF8  5FC0               	subwf	sprintf@width& (0+255),f,b
  8278  000AFA  0E00               	movlw	0
  8279  000AFC  0100               	movlb	0	; () banked
  8280  000AFE  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8281  000B00  0EFF               	movlw	255
  8282  000B02  0100               	movlb	0	; () banked
  8283  000B04  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8284  000B06  D005               	goto	l5680
  8285  000B08                     l5678:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;doprnt.c: 1383: else
  8289                           ;doprnt.c: 1384: width = 0;
  8290  000B08  0E00               	movlw	0
  8291  000B0A  0100               	movlb	0	; () banked
  8292  000B0C  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8293  000B0E  0E00               	movlw	0
  8294  000B10  6FC0               	movwf	sprintf@width& (0+255),b
  8295  000B12                     l5680:
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;doprnt.c: 1422: {
  8299                           ;doprnt.c: 1424: if(width
  8300                           ;doprnt.c: 1428: )
  8301  000B12  0100               	movlb	0	; () banked
  8302  000B14  51C0               	movf	sprintf@width& (0+255),w,b
  8303  000B16  0100               	movlb	0	; () banked
  8304  000B18  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8305  000B1A  B4D8               	btfsc	status,2,c
  8306  000B1C  D013               	goto	l5688
  8307  000B1E                     l5682:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8311  000B1E  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8312  000B22  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8313  000B26  0E20               	movlw	32
  8314  000B28  6EDF               	movwf	indf2,c
  8315                           
  8316                           ; BSR set to: 0
  8317  000B2A  0100               	movlb	0	; () banked
  8318  000B2C  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8319  000B2E  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;doprnt.c: 1431: while(--width);
  8323  000B30  0100               	movlb	0	; () banked
  8324  000B32  07C0               	decf	sprintf@width& (0+255),f,b
  8325  000B34  A0D8               	btfss	status,0,c
  8326  000B36  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8327  000B38  0100               	movlb	0	; () banked
  8328  000B3A  51C0               	movf	sprintf@width& (0+255),w,b
  8329  000B3C  0100               	movlb	0	; () banked
  8330  000B3E  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8331  000B40  A4D8               	btfss	status,2,c
  8332  000B42  D7ED               	goto	l5682
  8333  000B44                     l5688:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;doprnt.c: 1438: if(flag & 0x03)
  8337  000B44  0E03               	movlw	3
  8338  000B46  0100               	movlb	0	; () banked
  8339  000B48  15BE               	andwf	sprintf@flag& (0+255),w,b
  8340  000B4A  0100               	movlb	0	; () banked
  8341  000B4C  6FB3               	movwf	??_sprintf& (0+255),b
  8342  000B4E  0E00               	movlw	0
  8343  000B50  0100               	movlb	0	; () banked
  8344  000B52  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8345  000B54  0100               	movlb	0	; () banked
  8346  000B56  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8347  000B58  0100               	movlb	0	; () banked
  8348  000B5A  51B3               	movf	??_sprintf& (0+255),w,b
  8349  000B5C  0100               	movlb	0	; () banked
  8350  000B5E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8351  000B60  B4D8               	btfsc	status,2,c
  8352  000B62  D051               	goto	l5700
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8356  000B64  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8357  000B68  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8358  000B6C  0E2D               	movlw	45
  8359  000B6E  6EDF               	movwf	indf2,c
  8360  000B70  D047               	goto	l5698
  8361  000B72                     l5694:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;doprnt.c: 1478: {
  8365                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8366  000B72  C0CF  F0B3         	movff	sprintf@prec,??_sprintf
  8367  000B76  C0D0  F0B4         	movff	sprintf@prec+1,??_sprintf+1
  8368  000B7A  0100               	movlb	0	; () banked
  8369  000B7C  90D8               	bcf	status,0,c
  8370  000B7E  37B3               	rlcf	??_sprintf& (0+255),f,b
  8371  000B80  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8372  000B82  0100               	movlb	0	; () banked
  8373  000B84  90D8               	bcf	status,0,c
  8374  000B86  37B3               	rlcf	??_sprintf& (0+255),f,b
  8375  000B88  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8376  000B8A  0EF5               	movlw	low _dpowers
  8377  000B8C  0100               	movlb	0	; () banked
  8378  000B8E  25B3               	addwf	??_sprintf& (0+255),w,b
  8379  000B90  6EF6               	movwf	tblptrl,c
  8380  000B92  0E7E               	movlw	high _dpowers
  8381  000B94  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8382  000B96  6EF7               	movwf	tblptrh,c
  8383  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8384  000B98                     	endif
  8385  000B98  0009               	tblrd		*+
  8386  000B9A  CFF5 F075          	movff	tablat,___lldiv@divisor
  8387  000B9E  0009               	tblrd		*+
  8388  000BA0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8389  000BA4  0009               	tblrd		*+
  8390  000BA6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8391  000BAA  000A               	tblrd		*-
  8392  000BAC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8393  000BB0  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  8394  000BB4  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8395  000BB8  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8396  000BBC  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8397  000BC0  ECA1  F019         	call	___lldiv	;wreg free
  8398  000BC4  C071  F079         	movff	?___lldiv,___llmod@dividend
  8399  000BC8  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8400  000BCC  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8401  000BD0  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8402  000BD4  0E0A               	movlw	10
  8403  000BD6  0100               	movlb	0	; () banked
  8404  000BD8  6F7D               	movwf	___llmod@divisor& (0+255),b
  8405  000BDA  0E00               	movlw	0
  8406  000BDC  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8407  000BDE  0E00               	movlw	0
  8408  000BE0  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8409  000BE2  0E00               	movlw	0
  8410  000BE4  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8411  000BE6  EC96  F01A         	call	___llmod	;wreg free
  8412  000BEA  0100               	movlb	0	; () banked
  8413  000BEC  5179               	movf	?___llmod& (0+255),w,b
  8414  000BEE  0F30               	addlw	48
  8415  000BF0  0100               	movlb	0	; () banked
  8416  000BF2  6FD1               	movwf	sprintf@c& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;doprnt.c: 1523: }
  8420                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8421  000BF4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8422  000BF8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8423  000BFC  C0D1  FFDF         	movff	sprintf@c,indf2
  8424  000C00                     l5698:
  8425                           
  8426                           ; BSR set to: 0
  8427  000C00  0100               	movlb	0	; () banked
  8428  000C02  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8429  000C04  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8430  000C06                     l5700:
  8431                           
  8432                           ; BSR set to: 0
  8433  000C06  0100               	movlb	0	; () banked
  8434  000C08  07CF               	decf	sprintf@prec& (0+255),f,b
  8435  000C0A  A0D8               	btfss	status,0,c
  8436  000C0C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8437  000C0E  0100               	movlb	0	; () banked
  8438  000C10  29CF               	incf	sprintf@prec& (0+255),w,b
  8439  000C12  E1AF               	bnz	l5694
  8440  000C14  0100               	movlb	0	; () banked
  8441  000C16  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
  8442  000C18  A4D8               	btfss	status,2,c
  8443  000C1A  D7AB               	goto	l5694
  8444  000C1C                     l5702:
  8445                           
  8446                           ; BSR set to: 0
  8447  000C1C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  8448  000C20  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  8449  000C24  0100               	movlb	0	; () banked
  8450  000C26  4BA7               	infsnz	sprintf@f& (0+255),f,b
  8451  000C28  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  8452  000C2A                     	if	0	;tblptru may be non-zero
  8453  000C2A                     	endif
  8454  000C2A                     	if	0	;tblptru may be non-zero
  8455  000C2A                     	endif
  8456  000C2A  0008               	tblrd		*
  8457  000C2C  CFF5 F0D1          	movff	tablat,sprintf@c
  8458  000C30  0100               	movlb	0	; () banked
  8459  000C32  51D1               	movf	sprintf@c& (0+255),w,b
  8460  000C34  A4D8               	btfss	status,2,c
  8461  000C36  EF5D  F000         	goto	l5416
  8462  000C3A                     l5704:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;doprnt.c: 1538: *sp = 0;
  8466  000C3A  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8467  000C3E  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8468  000C42  0E00               	movlw	0
  8469  000C44  6EDF               	movwf	indf2,c
  8470  000C46  0012               	return	
  8471  000C48                     __end_of_sprintf:
  8472                           	opt stack 0
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           indf0	equ	0xFEF
  8480                           postinc0	equ	0xFEE
  8481                           fsr0h	equ	0xFEA
  8482                           fsr0l	equ	0xFE9
  8483                           wreg	equ	0xFE8
  8484                           indf1	equ	0xFE7
  8485                           postdec1	equ	0xFE5
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           indf2	equ	0xFDF
  8489                           postinc2	equ	0xFDE
  8490                           postdec2	equ	0xFDD
  8491                           fsr2h	equ	0xFDA
  8492                           fsr2l	equ	0xFD9
  8493                           status	equ	0xFD8
  8494                           
  8495 ;; *************** function _scale *****************
  8496 ;; Defined at:
  8497 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  scl             1    wreg     char 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  scl             1   47[BANK0 ] char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  3   41[BANK0 ] char 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8511 ;;      Params:         0       3       0       0       0       0       0
  8512 ;;      Locals:         0       4       0       0       0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0
  8514 ;;      Totals:         0       7       0       0       0       0       0
  8515 ;;Total ram usage:        7 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:    5
  8518 ;; This function calls:
  8519 ;;		___awdiv
  8520 ;;		___awmod
  8521 ;;		___ftmul
  8522 ;;		___wmul
  8523 ;; This function is called by:
  8524 ;;		_sprintf
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text32
  8529  0013EA                     __ptext32:
  8530                           	opt stack 0
  8531  0013EA                     _scale:
  8532                           	opt stack 22
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;incstack = 0
  8536                           ;scale@scl stored from wreg
  8537  0013EA  0100               	movlb	0	; () banked
  8538  0013EC  6F8F               	movwf	scale@scl& (0+255),b
  8539                           
  8540                           ;doprnt.c: 428: if(scl < 0) {
  8541  0013EE  0100               	movlb	0	; () banked
  8542  0013F0  AF8F               	btfss	scale@scl& (0+255),7,b
  8543  0013F2  D12A               	goto	l5088
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;doprnt.c: 429: scl = -scl;
  8547  0013F4  0100               	movlb	0	; () banked
  8548  0013F6  6D8F               	negf	scale@scl& (0+255),b
  8549                           
  8550                           ;doprnt.c: 430: if(scl>=110)
  8551  0013F8  0100               	movlb	0	; () banked
  8552  0013FA  518F               	movf	scale@scl& (0+255),w,b
  8553  0013FC  0A80               	xorlw	128
  8554  0013FE  0F12               	addlw	-238
  8555  001400  A0D8               	btfss	status,0,c
  8556  001402  D0AC               	goto	l5078
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8560  001404  0E00               	movlw	0
  8561  001406  0100               	movlb	0	; () banked
  8562  001408  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8563  00140A  0E03               	movlw	3
  8564  00140C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8565  00140E  0E00               	movlw	0
  8566  001410  0100               	movlb	0	; () banked
  8567  001412  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8568  001414  0E0A               	movlw	10
  8569  001416  6F77               	movwf	___awdiv@divisor& (0+255),b
  8570  001418  0E00               	movlw	0
  8571  00141A  0100               	movlb	0	; () banked
  8572  00141C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8573  00141E  0E64               	movlw	100
  8574  001420  6F73               	movwf	___awmod@divisor& (0+255),b
  8575  001422  0100               	movlb	0	; () banked
  8576  001424  518F               	movf	scale@scl& (0+255),w,b
  8577  001426  0100               	movlb	0	; () banked
  8578  001428  6F71               	movwf	___awmod@dividend& (0+255),b
  8579  00142A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8580  00142C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8581  00142E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8582  001430  EC4C  F01A         	call	___awmod	;wreg free
  8583  001434  C071  F075         	movff	?___awmod,___awdiv@dividend
  8584  001438  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8585  00143C  ECF9  F019         	call	___awdiv	;wreg free
  8586  001440  0E09               	movlw	9
  8587  001442  0100               	movlb	0	; () banked
  8588  001444  2575               	addwf	?___awdiv& (0+255),w,b
  8589  001446  0100               	movlb	0	; () banked
  8590  001448  6F79               	movwf	___wmul@multiplier& (0+255),b
  8591  00144A  0E00               	movlw	0
  8592  00144C  0100               	movlb	0	; () banked
  8593  00144E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8594  001450  0100               	movlb	0	; () banked
  8595  001452  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8596  001454  EC7E  F01D         	call	___wmul	;wreg free
  8597  001458  0E1D               	movlw	low __npowers_
  8598  00145A  0100               	movlb	0	; () banked
  8599  00145C  2579               	addwf	?___wmul& (0+255),w,b
  8600  00145E  6EF6               	movwf	tblptrl,c
  8601  001460  0E7F               	movlw	high __npowers_
  8602  001462  0100               	movlb	0	; () banked
  8603  001464  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8604  001466  6EF7               	movwf	tblptrh,c
  8605  001468                     	if	0	;There are less than 3 active tblptr bytes
  8606  001468                     	endif
  8607  001468  0009               	tblrd		*+
  8608  00146A  CFF5 F080          	movff	tablat,___ftmul@f2
  8609  00146E  0009               	tblrd		*+
  8610  001470  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8611  001474  000A               	tblrd		*-
  8612  001476  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8613  00147A  0E00               	movlw	0
  8614  00147C  0100               	movlb	0	; () banked
  8615  00147E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8616  001480  0E64               	movlw	100
  8617  001482  6F77               	movwf	___awdiv@divisor& (0+255),b
  8618  001484  0100               	movlb	0	; () banked
  8619  001486  518F               	movf	scale@scl& (0+255),w,b
  8620  001488  0100               	movlb	0	; () banked
  8621  00148A  6F75               	movwf	___awdiv@dividend& (0+255),b
  8622  00148C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8623  00148E  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8624  001490  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8625  001492  ECF9  F019         	call	___awdiv	;wreg free
  8626  001496  0E12               	movlw	18
  8627  001498  0100               	movlb	0	; () banked
  8628  00149A  2575               	addwf	?___awdiv& (0+255),w,b
  8629  00149C  0100               	movlb	0	; () banked
  8630  00149E  6F79               	movwf	___wmul@multiplier& (0+255),b
  8631  0014A0  0E00               	movlw	0
  8632  0014A2  0100               	movlb	0	; () banked
  8633  0014A4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8634  0014A6  0100               	movlb	0	; () banked
  8635  0014A8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8636  0014AA  0E00               	movlw	0
  8637  0014AC  0100               	movlb	0	; () banked
  8638  0014AE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8639  0014B0  0E03               	movlw	3
  8640  0014B2  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8641  0014B4  EC7E  F01D         	call	___wmul	;wreg free
  8642  0014B8  0E1D               	movlw	low __npowers_
  8643  0014BA  0100               	movlb	0	; () banked
  8644  0014BC  2579               	addwf	?___wmul& (0+255),w,b
  8645  0014BE  6EF6               	movwf	tblptrl,c
  8646  0014C0  0E7F               	movlw	high __npowers_
  8647  0014C2  0100               	movlb	0	; () banked
  8648  0014C4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8649  0014C6  6EF7               	movwf	tblptrh,c
  8650  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8651  0014C8                     	endif
  8652  0014C8  0009               	tblrd		*+
  8653  0014CA  CFF5 F07D          	movff	tablat,___ftmul@f1
  8654  0014CE  0009               	tblrd		*+
  8655  0014D0  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8656  0014D4  000A               	tblrd		*-
  8657  0014D6  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8658  0014DA  ECD0  F014         	call	___ftmul	;wreg free
  8659  0014DE  C07D  F08C         	movff	?___ftmul,_scale$2425
  8660  0014E2  C07E  F08D         	movff	?___ftmul+1,_scale$2425+1
  8661  0014E6  C07F  F08E         	movff	?___ftmul+2,_scale$2425+2
  8662                           
  8663                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8664  0014EA  C08C  F07D         	movff	_scale$2425,___ftmul@f1
  8665  0014EE  C08D  F07E         	movff	_scale$2425+1,___ftmul@f1+1
  8666  0014F2  C08E  F07F         	movff	_scale$2425+2,___ftmul@f1+2
  8667  0014F6  0E00               	movlw	0
  8668  0014F8  0100               	movlb	0	; () banked
  8669  0014FA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8670  0014FC  0E03               	movlw	3
  8671  0014FE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8672  001500  0E00               	movlw	0
  8673  001502  0100               	movlb	0	; () banked
  8674  001504  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8675  001506  0E0A               	movlw	10
  8676  001508  6F73               	movwf	___awmod@divisor& (0+255),b
  8677  00150A  0100               	movlb	0	; () banked
  8678  00150C  518F               	movf	scale@scl& (0+255),w,b
  8679  00150E  0100               	movlb	0	; () banked
  8680  001510  6F71               	movwf	___awmod@dividend& (0+255),b
  8681  001512  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8682  001514  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8683  001516  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8684  001518  EC4C  F01A         	call	___awmod	;wreg free
  8685  00151C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8686  001520  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8687  001524  EC7E  F01D         	call	___wmul	;wreg free
  8688  001528  0E1D               	movlw	low __npowers_
  8689  00152A  0100               	movlb	0	; () banked
  8690  00152C  2579               	addwf	?___wmul& (0+255),w,b
  8691  00152E  6EF6               	movwf	tblptrl,c
  8692  001530  0E7F               	movlw	high __npowers_
  8693  001532  0100               	movlb	0	; () banked
  8694  001534  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8695  001536  6EF7               	movwf	tblptrh,c
  8696  001538                     	if	0	;There are less than 3 active tblptr bytes
  8697  001538                     	endif
  8698  001538  0009               	tblrd		*+
  8699  00153A  CFF5 F080          	movff	tablat,___ftmul@f2
  8700  00153E  0009               	tblrd		*+
  8701  001540  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8702  001544  000A               	tblrd		*-
  8703  001546  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8704  00154A  ECD0  F014         	call	___ftmul	;wreg free
  8705  00154E  C07D  F089         	movff	?___ftmul,?_scale
  8706  001552  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8707  001556  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8708  00155A  0012               	return	
  8709  00155C                     l5078:
  8710                           
  8711                           ;doprnt.c: 432: else if(scl > 10)
  8712  00155C  0100               	movlb	0	; () banked
  8713  00155E  518F               	movf	scale@scl& (0+255),w,b
  8714  001560  0A80               	xorlw	128
  8715  001562  0F75               	addlw	-139
  8716  001564  A0D8               	btfss	status,0,c
  8717  001566  D05D               	goto	l5084
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8721  001568  0E00               	movlw	0
  8722  00156A  0100               	movlb	0	; () banked
  8723  00156C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8724  00156E  0E0A               	movlw	10
  8725  001570  6F77               	movwf	___awdiv@divisor& (0+255),b
  8726  001572  0100               	movlb	0	; () banked
  8727  001574  518F               	movf	scale@scl& (0+255),w,b
  8728  001576  0100               	movlb	0	; () banked
  8729  001578  6F75               	movwf	___awdiv@dividend& (0+255),b
  8730  00157A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8731  00157C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8732  00157E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8733  001580  ECF9  F019         	call	___awdiv	;wreg free
  8734  001584  0E09               	movlw	9
  8735  001586  0100               	movlb	0	; () banked
  8736  001588  2575               	addwf	?___awdiv& (0+255),w,b
  8737  00158A  0100               	movlb	0	; () banked
  8738  00158C  6F79               	movwf	___wmul@multiplier& (0+255),b
  8739  00158E  0E00               	movlw	0
  8740  001590  0100               	movlb	0	; () banked
  8741  001592  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8742  001594  0100               	movlb	0	; () banked
  8743  001596  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8744  001598  0E00               	movlw	0
  8745  00159A  0100               	movlb	0	; () banked
  8746  00159C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8747  00159E  0E03               	movlw	3
  8748  0015A0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8749  0015A2  EC7E  F01D         	call	___wmul	;wreg free
  8750  0015A6  0E1D               	movlw	low __npowers_
  8751  0015A8  0100               	movlb	0	; () banked
  8752  0015AA  2579               	addwf	?___wmul& (0+255),w,b
  8753  0015AC  6EF6               	movwf	tblptrl,c
  8754  0015AE  0E7F               	movlw	high __npowers_
  8755  0015B0  0100               	movlb	0	; () banked
  8756  0015B2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8757  0015B4  6EF7               	movwf	tblptrh,c
  8758  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8759  0015B6                     	endif
  8760  0015B6  0009               	tblrd		*+
  8761  0015B8  CFF5 F07D          	movff	tablat,___ftmul@f1
  8762  0015BC  0009               	tblrd		*+
  8763  0015BE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8764  0015C2  000A               	tblrd		*-
  8765  0015C4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8766  0015C8  0E00               	movlw	0
  8767  0015CA  0100               	movlb	0	; () banked
  8768  0015CC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8769  0015CE  0E03               	movlw	3
  8770  0015D0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8771  0015D2  0E00               	movlw	0
  8772  0015D4  0100               	movlb	0	; () banked
  8773  0015D6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8774  0015D8  0E0A               	movlw	10
  8775  0015DA  6F73               	movwf	___awmod@divisor& (0+255),b
  8776  0015DC  0100               	movlb	0	; () banked
  8777  0015DE  518F               	movf	scale@scl& (0+255),w,b
  8778  0015E0  0100               	movlb	0	; () banked
  8779  0015E2  6F71               	movwf	___awmod@dividend& (0+255),b
  8780  0015E4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8781  0015E6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8782  0015E8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8783  0015EA  EC4C  F01A         	call	___awmod	;wreg free
  8784  0015EE  C071  F079         	movff	?___awmod,___wmul@multiplier
  8785  0015F2  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8786  0015F6  EC7E  F01D         	call	___wmul	;wreg free
  8787  0015FA  0E1D               	movlw	low __npowers_
  8788  0015FC  0100               	movlb	0	; () banked
  8789  0015FE  2579               	addwf	?___wmul& (0+255),w,b
  8790  001600  6EF6               	movwf	tblptrl,c
  8791  001602  0E7F               	movlw	high __npowers_
  8792  001604  0100               	movlb	0	; () banked
  8793  001606  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8794  001608  6EF7               	movwf	tblptrh,c
  8795  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8796  00160A                     	endif
  8797  00160A  0009               	tblrd		*+
  8798  00160C  CFF5 F080          	movff	tablat,___ftmul@f2
  8799  001610  0009               	tblrd		*+
  8800  001612  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8801  001616  000A               	tblrd		*-
  8802  001618  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8803  00161C  ECD0  F014         	call	___ftmul	;wreg free
  8804  001620  D796               	goto	L6
  8805  001622                     l5084:
  8806                           
  8807                           ;doprnt.c: 434: return _npowers_[scl];
  8808  001622  0100               	movlb	0	; () banked
  8809  001624  518F               	movf	scale@scl& (0+255),w,b
  8810  001626  0D03               	mullw	3
  8811  001628  0E1D               	movlw	low __npowers_
  8812  00162A  24F3               	addwf	prodl,w,c
  8813  00162C  6EF6               	movwf	tblptrl,c
  8814  00162E  0E7F               	movlw	high __npowers_
  8815  001630  20F4               	addwfc	prodh,w,c
  8816  001632  6EF7               	movwf	tblptrh,c
  8817  001634                     	if	0	;There are less than 3 active tblptr bytes
  8818  001634                     	endif
  8819  001634  0009               	tblrd		*+
  8820  001636  CFF5 F089          	movff	tablat,?_scale
  8821  00163A  0009               	tblrd		*+
  8822  00163C  CFF5 F08A          	movff	tablat,?_scale+1
  8823  001640  000A               	tblrd		*-
  8824  001642  CFF5 F08B          	movff	tablat,?_scale+2
  8825                           
  8826                           ; BSR set to: 0
  8827  001646  0012               	return	
  8828  001648                     l5088:
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;doprnt.c: 435: }
  8832                           ;doprnt.c: 436: if(scl>=110)
  8833  001648  0100               	movlb	0	; () banked
  8834  00164A  518F               	movf	scale@scl& (0+255),w,b
  8835  00164C  0A80               	xorlw	128
  8836  00164E  0F12               	addlw	-238
  8837  001650  A0D8               	btfss	status,0,c
  8838  001652  D0AC               	goto	l5096
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8842  001654  0E00               	movlw	0
  8843  001656  0100               	movlb	0	; () banked
  8844  001658  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8845  00165A  0E03               	movlw	3
  8846  00165C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8847  00165E  0E00               	movlw	0
  8848  001660  0100               	movlb	0	; () banked
  8849  001662  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8850  001664  0E0A               	movlw	10
  8851  001666  6F77               	movwf	___awdiv@divisor& (0+255),b
  8852  001668  0E00               	movlw	0
  8853  00166A  0100               	movlb	0	; () banked
  8854  00166C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8855  00166E  0E64               	movlw	100
  8856  001670  6F73               	movwf	___awmod@divisor& (0+255),b
  8857  001672  0100               	movlb	0	; () banked
  8858  001674  518F               	movf	scale@scl& (0+255),w,b
  8859  001676  0100               	movlb	0	; () banked
  8860  001678  6F71               	movwf	___awmod@dividend& (0+255),b
  8861  00167A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8862  00167C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8863  00167E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8864  001680  EC4C  F01A         	call	___awmod	;wreg free
  8865  001684  C071  F075         	movff	?___awmod,___awdiv@dividend
  8866  001688  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8867  00168C  ECF9  F019         	call	___awdiv	;wreg free
  8868  001690  0E09               	movlw	9
  8869  001692  0100               	movlb	0	; () banked
  8870  001694  2575               	addwf	?___awdiv& (0+255),w,b
  8871  001696  0100               	movlb	0	; () banked
  8872  001698  6F79               	movwf	___wmul@multiplier& (0+255),b
  8873  00169A  0E00               	movlw	0
  8874  00169C  0100               	movlb	0	; () banked
  8875  00169E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8876  0016A0  0100               	movlb	0	; () banked
  8877  0016A2  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8878  0016A4  EC7E  F01D         	call	___wmul	;wreg free
  8879  0016A8  0E44               	movlw	low __powers_
  8880  0016AA  0100               	movlb	0	; () banked
  8881  0016AC  2579               	addwf	?___wmul& (0+255),w,b
  8882  0016AE  6EF6               	movwf	tblptrl,c
  8883  0016B0  0E7F               	movlw	high __powers_
  8884  0016B2  0100               	movlb	0	; () banked
  8885  0016B4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8886  0016B6  6EF7               	movwf	tblptrh,c
  8887  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8888  0016B8                     	endif
  8889  0016B8  0009               	tblrd		*+
  8890  0016BA  CFF5 F080          	movff	tablat,___ftmul@f2
  8891  0016BE  0009               	tblrd		*+
  8892  0016C0  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8893  0016C4  000A               	tblrd		*-
  8894  0016C6  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8895  0016CA  0E00               	movlw	0
  8896  0016CC  0100               	movlb	0	; () banked
  8897  0016CE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8898  0016D0  0E64               	movlw	100
  8899  0016D2  6F77               	movwf	___awdiv@divisor& (0+255),b
  8900  0016D4  0100               	movlb	0	; () banked
  8901  0016D6  518F               	movf	scale@scl& (0+255),w,b
  8902  0016D8  0100               	movlb	0	; () banked
  8903  0016DA  6F75               	movwf	___awdiv@dividend& (0+255),b
  8904  0016DC  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8905  0016DE  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8906  0016E0  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8907  0016E2  ECF9  F019         	call	___awdiv	;wreg free
  8908  0016E6  0E12               	movlw	18
  8909  0016E8  0100               	movlb	0	; () banked
  8910  0016EA  2575               	addwf	?___awdiv& (0+255),w,b
  8911  0016EC  0100               	movlb	0	; () banked
  8912  0016EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  8913  0016F0  0E00               	movlw	0
  8914  0016F2  0100               	movlb	0	; () banked
  8915  0016F4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8916  0016F6  0100               	movlb	0	; () banked
  8917  0016F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8918  0016FA  0E00               	movlw	0
  8919  0016FC  0100               	movlb	0	; () banked
  8920  0016FE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8921  001700  0E03               	movlw	3
  8922  001702  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8923  001704  EC7E  F01D         	call	___wmul	;wreg free
  8924  001708  0E44               	movlw	low __powers_
  8925  00170A  0100               	movlb	0	; () banked
  8926  00170C  2579               	addwf	?___wmul& (0+255),w,b
  8927  00170E  6EF6               	movwf	tblptrl,c
  8928  001710  0E7F               	movlw	high __powers_
  8929  001712  0100               	movlb	0	; () banked
  8930  001714  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8931  001716  6EF7               	movwf	tblptrh,c
  8932  001718                     	if	0	;There are less than 3 active tblptr bytes
  8933  001718                     	endif
  8934  001718  0009               	tblrd		*+
  8935  00171A  CFF5 F07D          	movff	tablat,___ftmul@f1
  8936  00171E  0009               	tblrd		*+
  8937  001720  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8938  001724  000A               	tblrd		*-
  8939  001726  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8940  00172A  ECD0  F014         	call	___ftmul	;wreg free
  8941  00172E  C07D  F08C         	movff	?___ftmul,_scale$2425
  8942  001732  C07E  F08D         	movff	?___ftmul+1,_scale$2425+1
  8943  001736  C07F  F08E         	movff	?___ftmul+2,_scale$2425+2
  8944                           
  8945                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8946  00173A  C08C  F07D         	movff	_scale$2425,___ftmul@f1
  8947  00173E  C08D  F07E         	movff	_scale$2425+1,___ftmul@f1+1
  8948  001742  C08E  F07F         	movff	_scale$2425+2,___ftmul@f1+2
  8949  001746  0E00               	movlw	0
  8950  001748  0100               	movlb	0	; () banked
  8951  00174A  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8952  00174C  0E03               	movlw	3
  8953  00174E  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8954  001750  0E00               	movlw	0
  8955  001752  0100               	movlb	0	; () banked
  8956  001754  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8957  001756  0E0A               	movlw	10
  8958  001758  6F73               	movwf	___awmod@divisor& (0+255),b
  8959  00175A  0100               	movlb	0	; () banked
  8960  00175C  518F               	movf	scale@scl& (0+255),w,b
  8961  00175E  0100               	movlb	0	; () banked
  8962  001760  6F71               	movwf	___awmod@dividend& (0+255),b
  8963  001762  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8964  001764  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8965  001766  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8966  001768  EC4C  F01A         	call	___awmod	;wreg free
  8967  00176C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8968  001770  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8969  001774  EC7E  F01D         	call	___wmul	;wreg free
  8970  001778  0E44               	movlw	low __powers_
  8971  00177A  0100               	movlb	0	; () banked
  8972  00177C  2579               	addwf	?___wmul& (0+255),w,b
  8973  00177E  6EF6               	movwf	tblptrl,c
  8974  001780  0E7F               	movlw	high __powers_
  8975  001782  0100               	movlb	0	; () banked
  8976  001784  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8977  001786  6EF7               	movwf	tblptrh,c
  8978  001788                     	if	0	;There are less than 3 active tblptr bytes
  8979  001788                     	endif
  8980  001788  0009               	tblrd		*+
  8981  00178A  CFF5 F080          	movff	tablat,___ftmul@f2
  8982  00178E  0009               	tblrd		*+
  8983  001790  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8984  001794  000A               	tblrd		*-
  8985  001796  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8986  00179A  ECD0  F014         	call	___ftmul	;wreg free
  8987  00179E  C07D  F089         	movff	?___ftmul,?_scale
  8988  0017A2  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8989  0017A6  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8990  0017AA  0012               	return	
  8991  0017AC                     l5096:
  8992                           
  8993                           ;doprnt.c: 438: else if(scl > 10)
  8994  0017AC  0100               	movlb	0	; () banked
  8995  0017AE  518F               	movf	scale@scl& (0+255),w,b
  8996  0017B0  0A80               	xorlw	128
  8997  0017B2  0F75               	addlw	-139
  8998  0017B4  A0D8               	btfss	status,0,c
  8999  0017B6  D05D               	goto	l5102
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9003  0017B8  0E00               	movlw	0
  9004  0017BA  0100               	movlb	0	; () banked
  9005  0017BC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9006  0017BE  0E0A               	movlw	10
  9007  0017C0  6F77               	movwf	___awdiv@divisor& (0+255),b
  9008  0017C2  0100               	movlb	0	; () banked
  9009  0017C4  518F               	movf	scale@scl& (0+255),w,b
  9010  0017C6  0100               	movlb	0	; () banked
  9011  0017C8  6F75               	movwf	___awdiv@dividend& (0+255),b
  9012  0017CA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9013  0017CC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  9014  0017CE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9015  0017D0  ECF9  F019         	call	___awdiv	;wreg free
  9016  0017D4  0E09               	movlw	9
  9017  0017D6  0100               	movlb	0	; () banked
  9018  0017D8  2575               	addwf	?___awdiv& (0+255),w,b
  9019  0017DA  0100               	movlb	0	; () banked
  9020  0017DC  6F79               	movwf	___wmul@multiplier& (0+255),b
  9021  0017DE  0E00               	movlw	0
  9022  0017E0  0100               	movlb	0	; () banked
  9023  0017E2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9024  0017E4  0100               	movlb	0	; () banked
  9025  0017E6  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9026  0017E8  0E00               	movlw	0
  9027  0017EA  0100               	movlb	0	; () banked
  9028  0017EC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9029  0017EE  0E03               	movlw	3
  9030  0017F0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9031  0017F2  EC7E  F01D         	call	___wmul	;wreg free
  9032  0017F6  0E44               	movlw	low __powers_
  9033  0017F8  0100               	movlb	0	; () banked
  9034  0017FA  2579               	addwf	?___wmul& (0+255),w,b
  9035  0017FC  6EF6               	movwf	tblptrl,c
  9036  0017FE  0E7F               	movlw	high __powers_
  9037  001800  0100               	movlb	0	; () banked
  9038  001802  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9039  001804  6EF7               	movwf	tblptrh,c
  9040  001806                     	if	0	;There are less than 3 active tblptr bytes
  9041  001806                     	endif
  9042  001806  0009               	tblrd		*+
  9043  001808  CFF5 F07D          	movff	tablat,___ftmul@f1
  9044  00180C  0009               	tblrd		*+
  9045  00180E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9046  001812  000A               	tblrd		*-
  9047  001814  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9048  001818  0E00               	movlw	0
  9049  00181A  0100               	movlb	0	; () banked
  9050  00181C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9051  00181E  0E03               	movlw	3
  9052  001820  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9053  001822  0E00               	movlw	0
  9054  001824  0100               	movlb	0	; () banked
  9055  001826  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9056  001828  0E0A               	movlw	10
  9057  00182A  6F73               	movwf	___awmod@divisor& (0+255),b
  9058  00182C  0100               	movlb	0	; () banked
  9059  00182E  518F               	movf	scale@scl& (0+255),w,b
  9060  001830  0100               	movlb	0	; () banked
  9061  001832  6F71               	movwf	___awmod@dividend& (0+255),b
  9062  001834  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9063  001836  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9064  001838  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9065  00183A  EC4C  F01A         	call	___awmod	;wreg free
  9066  00183E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9067  001842  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9068  001846  EC7E  F01D         	call	___wmul	;wreg free
  9069  00184A  0E44               	movlw	low __powers_
  9070  00184C  0100               	movlb	0	; () banked
  9071  00184E  2579               	addwf	?___wmul& (0+255),w,b
  9072  001850  6EF6               	movwf	tblptrl,c
  9073  001852  0E7F               	movlw	high __powers_
  9074  001854  0100               	movlb	0	; () banked
  9075  001856  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9076  001858  6EF7               	movwf	tblptrh,c
  9077  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9078  00185A                     	endif
  9079  00185A  0009               	tblrd		*+
  9080  00185C  CFF5 F080          	movff	tablat,___ftmul@f2
  9081  001860  0009               	tblrd		*+
  9082  001862  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9083  001866  000A               	tblrd		*-
  9084  001868  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9085  00186C  ECD0  F014         	call	___ftmul	;wreg free
  9086  001870  D796               	goto	L7
  9087  001872                     l5102:
  9088                           
  9089                           ;doprnt.c: 440: return _powers_[scl];
  9090  001872  0100               	movlb	0	; () banked
  9091  001874  518F               	movf	scale@scl& (0+255),w,b
  9092  001876  0D03               	mullw	3
  9093  001878  0E44               	movlw	low __powers_
  9094  00187A  24F3               	addwf	prodl,w,c
  9095  00187C  6EF6               	movwf	tblptrl,c
  9096  00187E  0E7F               	movlw	high __powers_
  9097  001880  20F4               	addwfc	prodh,w,c
  9098  001882  6EF7               	movwf	tblptrh,c
  9099  001884                     	if	0	;There are less than 3 active tblptr bytes
  9100  001884                     	endif
  9101  001884  0009               	tblrd		*+
  9102  001886  CFF5 F089          	movff	tablat,?_scale
  9103  00188A  0009               	tblrd		*+
  9104  00188C  CFF5 F08A          	movff	tablat,?_scale+1
  9105  001890  000A               	tblrd		*-
  9106  001892  CFF5 F08B          	movff	tablat,?_scale+2
  9107  001896  0012               	return	
  9108  001898                     __end_of_scale:
  9109                           	opt stack 0
  9110                           tblptru	equ	0xFF8
  9111                           tblptrh	equ	0xFF7
  9112                           tblptrl	equ	0xFF6
  9113                           tablat	equ	0xFF5
  9114                           prodh	equ	0xFF4
  9115                           prodl	equ	0xFF3
  9116                           indf0	equ	0xFEF
  9117                           postinc0	equ	0xFEE
  9118                           fsr0h	equ	0xFEA
  9119                           fsr0l	equ	0xFE9
  9120                           wreg	equ	0xFE8
  9121                           indf1	equ	0xFE7
  9122                           postdec1	equ	0xFE5
  9123                           fsr1h	equ	0xFE2
  9124                           fsr1l	equ	0xFE1
  9125                           indf2	equ	0xFDF
  9126                           postinc2	equ	0xFDE
  9127                           postdec2	equ	0xFDD
  9128                           fsr2h	equ	0xFDA
  9129                           fsr2l	equ	0xFD9
  9130                           status	equ	0xFD8
  9131                           
  9132 ;; *************** function _isdigit *****************
  9133 ;; Defined at:
  9134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  c               1    wreg     unsigned char 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  c               1   35[COMRAM] unsigned char 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;		None               void
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9148 ;;      Params:         0       0       0       0       0       0       0
  9149 ;;      Locals:         2       0       0       0       0       0       0
  9150 ;;      Temps:          1       0       0       0       0       0       0
  9151 ;;      Totals:         3       0       0       0       0       0       0
  9152 ;;Total ram usage:        3 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    3
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_sprintf
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text33
  9163  003C62                     __ptext33:
  9164                           	opt stack 0
  9165  003C62                     _isdigit:
  9166                           	opt stack 24
  9167                           
  9168                           ;incstack = 0
  9169                           ;isdigit@c stored from wreg
  9170  003C62  6E24               	movwf	isdigit@c,c
  9171  003C64  0E00               	movlw	0
  9172  003C66  6E23               	movwf	_isdigit$2065,c
  9173  003C68  0E3A               	movlw	58
  9174  003C6A  6024               	cpfslt	isdigit@c,c
  9175  003C6C  D005               	goto	l5114
  9176  003C6E  0E2F               	movlw	47
  9177  003C70  6424               	cpfsgt	isdigit@c,c
  9178  003C72  D002               	goto	l5114
  9179  003C74  0E01               	movlw	1
  9180  003C76  6E23               	movwf	_isdigit$2065,c
  9181  003C78                     l5114:
  9182  003C78  C023  F022         	movff	_isdigit$2065,??_isdigit
  9183  003C7C  3022               	rrcf	??_isdigit,w,c
  9184  003C7E  0012               	return	
  9185  003C80                     __end_of_isdigit:
  9186                           	opt stack 0
  9187                           tblptru	equ	0xFF8
  9188                           tblptrh	equ	0xFF7
  9189                           tblptrl	equ	0xFF6
  9190                           tablat	equ	0xFF5
  9191                           prodh	equ	0xFF4
  9192                           prodl	equ	0xFF3
  9193                           indf0	equ	0xFEF
  9194                           postinc0	equ	0xFEE
  9195                           fsr0h	equ	0xFEA
  9196                           fsr0l	equ	0xFE9
  9197                           wreg	equ	0xFE8
  9198                           indf1	equ	0xFE7
  9199                           postdec1	equ	0xFE5
  9200                           fsr1h	equ	0xFE2
  9201                           fsr1l	equ	0xFE1
  9202                           indf2	equ	0xFDF
  9203                           postinc2	equ	0xFDE
  9204                           postdec2	equ	0xFDD
  9205                           fsr2h	equ	0xFDA
  9206                           fsr2l	equ	0xFD9
  9207                           status	equ	0xFD8
  9208                           
  9209 ;; *************** function _fround *****************
  9210 ;; Defined at:
  9211 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  prec            1    wreg     unsigned char 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  prec            1   50[BANK0 ] unsigned char 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  3   41[BANK0 ] unsigned char 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9225 ;;      Params:         0       3       0       0       0       0       0
  9226 ;;      Locals:         0       7       0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0
  9228 ;;      Totals:         0      10       0       0       0       0       0
  9229 ;;Total ram usage:       10 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    5
  9232 ;; This function calls:
  9233 ;;		___awdiv
  9234 ;;		___awmod
  9235 ;;		___ftmul
  9236 ;;		___wmul
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text34
  9243  001C88                     __ptext34:
  9244                           	opt stack 0
  9245  001C88                     _fround:
  9246                           	opt stack 22
  9247                           
  9248                           ;incstack = 0
  9249                           ;fround@prec stored from wreg
  9250  001C88  0100               	movlb	0	; () banked
  9251  001C8A  6F92               	movwf	fround@prec& (0+255),b
  9252                           
  9253                           ;doprnt.c: 413: if(prec>=110)
  9254  001C8C  0E6D               	movlw	109
  9255  001C8E  0100               	movlb	0	; () banked
  9256  001C90  6592               	cpfsgt	fround@prec& (0+255),b
  9257  001C92  D0BA               	goto	l5056
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9261  001C94  0E00               	movlw	0
  9262  001C96  0100               	movlb	0	; () banked
  9263  001C98  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9264  001C9A  0E03               	movlw	3
  9265  001C9C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9266  001C9E  0E00               	movlw	0
  9267  001CA0  0100               	movlb	0	; () banked
  9268  001CA2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9269  001CA4  0E0A               	movlw	10
  9270  001CA6  6F77               	movwf	___awdiv@divisor& (0+255),b
  9271  001CA8  0E00               	movlw	0
  9272  001CAA  0100               	movlb	0	; () banked
  9273  001CAC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9274  001CAE  0E64               	movlw	100
  9275  001CB0  6F73               	movwf	___awmod@divisor& (0+255),b
  9276  001CB2  C092  F071         	movff	fround@prec,___awmod@dividend
  9277  001CB6  0100               	movlb	0	; () banked
  9278  001CB8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9279  001CBA  EC4C  F01A         	call	___awmod	;wreg free
  9280  001CBE  C071  F075         	movff	?___awmod,___awdiv@dividend
  9281  001CC2  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  9282  001CC6  ECF9  F019         	call	___awdiv	;wreg free
  9283  001CCA  0E09               	movlw	9
  9284  001CCC  0100               	movlb	0	; () banked
  9285  001CCE  2575               	addwf	?___awdiv& (0+255),w,b
  9286  001CD0  0100               	movlb	0	; () banked
  9287  001CD2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9288  001CD4  0E00               	movlw	0
  9289  001CD6  0100               	movlb	0	; () banked
  9290  001CD8  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9291  001CDA  0100               	movlb	0	; () banked
  9292  001CDC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9293  001CDE  EC7E  F01D         	call	___wmul	;wreg free
  9294  001CE2  0E1D               	movlw	low __npowers_
  9295  001CE4  0100               	movlb	0	; () banked
  9296  001CE6  2579               	addwf	?___wmul& (0+255),w,b
  9297  001CE8  6EF6               	movwf	tblptrl,c
  9298  001CEA  0E7F               	movlw	high __npowers_
  9299  001CEC  0100               	movlb	0	; () banked
  9300  001CEE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9301  001CF0  6EF7               	movwf	tblptrh,c
  9302  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  9303  001CF2                     	endif
  9304  001CF2  0009               	tblrd		*+
  9305  001CF4  CFF5 F080          	movff	tablat,___ftmul@f2
  9306  001CF8  0009               	tblrd		*+
  9307  001CFA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9308  001CFE  000A               	tblrd		*-
  9309  001D00  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9310  001D04  0E00               	movlw	0
  9311  001D06  0100               	movlb	0	; () banked
  9312  001D08  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9313  001D0A  0E64               	movlw	100
  9314  001D0C  6F77               	movwf	___awdiv@divisor& (0+255),b
  9315  001D0E  C092  F075         	movff	fround@prec,___awdiv@dividend
  9316  001D12  0100               	movlb	0	; () banked
  9317  001D14  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9318  001D16  ECF9  F019         	call	___awdiv	;wreg free
  9319  001D1A  0E12               	movlw	18
  9320  001D1C  0100               	movlb	0	; () banked
  9321  001D1E  2575               	addwf	?___awdiv& (0+255),w,b
  9322  001D20  0100               	movlb	0	; () banked
  9323  001D22  6F79               	movwf	___wmul@multiplier& (0+255),b
  9324  001D24  0E00               	movlw	0
  9325  001D26  0100               	movlb	0	; () banked
  9326  001D28  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9327  001D2A  0100               	movlb	0	; () banked
  9328  001D2C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9329  001D2E  0E00               	movlw	0
  9330  001D30  0100               	movlb	0	; () banked
  9331  001D32  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9332  001D34  0E03               	movlw	3
  9333  001D36  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9334  001D38  EC7E  F01D         	call	___wmul	;wreg free
  9335  001D3C  0E1D               	movlw	low __npowers_
  9336  001D3E  0100               	movlb	0	; () banked
  9337  001D40  2579               	addwf	?___wmul& (0+255),w,b
  9338  001D42  6EF6               	movwf	tblptrl,c
  9339  001D44  0E7F               	movlw	high __npowers_
  9340  001D46  0100               	movlb	0	; () banked
  9341  001D48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9342  001D4A  6EF7               	movwf	tblptrh,c
  9343  001D4C                     	if	0	;There are less than 3 active tblptr bytes
  9344  001D4C                     	endif
  9345  001D4C  0009               	tblrd		*+
  9346  001D4E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9347  001D52  0009               	tblrd		*+
  9348  001D54  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9349  001D58  000A               	tblrd		*-
  9350  001D5A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9351  001D5E  ECD0  F014         	call	___ftmul	;wreg free
  9352  001D62  C07D  F08F         	movff	?___ftmul,_fround$2423
  9353  001D66  C07E  F090         	movff	?___ftmul+1,_fround$2423+1
  9354  001D6A  C07F  F091         	movff	?___ftmul+2,_fround$2423+2
  9355                           
  9356                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9357  001D6E  0E00               	movlw	0
  9358  001D70  0100               	movlb	0	; () banked
  9359  001D72  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9360  001D74  0E03               	movlw	3
  9361  001D76  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9362  001D78  0E00               	movlw	0
  9363  001D7A  0100               	movlb	0	; () banked
  9364  001D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9365  001D7E  0E0A               	movlw	10
  9366  001D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9367  001D82  C092  F071         	movff	fround@prec,___awmod@dividend
  9368  001D86  0100               	movlb	0	; () banked
  9369  001D88  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9370  001D8A  EC4C  F01A         	call	___awmod	;wreg free
  9371  001D8E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9372  001D92  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9373  001D96  EC7E  F01D         	call	___wmul	;wreg free
  9374  001D9A  0E1D               	movlw	low __npowers_
  9375  001D9C  0100               	movlb	0	; () banked
  9376  001D9E  2579               	addwf	?___wmul& (0+255),w,b
  9377  001DA0  6EF6               	movwf	tblptrl,c
  9378  001DA2  0E7F               	movlw	high __npowers_
  9379  001DA4  0100               	movlb	0	; () banked
  9380  001DA6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9381  001DA8  6EF7               	movwf	tblptrh,c
  9382  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9383  001DAA                     	endif
  9384  001DAA  0009               	tblrd		*+
  9385  001DAC  CFF5 F080          	movff	tablat,___ftmul@f2
  9386  001DB0  0009               	tblrd		*+
  9387  001DB2  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9388  001DB6  000A               	tblrd		*-
  9389  001DB8  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9390  001DBC  C08F  F07D         	movff	_fround$2423,___ftmul@f1
  9391  001DC0  C090  F07E         	movff	_fround$2423+1,___ftmul@f1+1
  9392  001DC4  C091  F07F         	movff	_fround$2423+2,___ftmul@f1+2
  9393  001DC8  ECD0  F014         	call	___ftmul	;wreg free
  9394  001DCC  C07D  F08C         	movff	?___ftmul,_fround$2424
  9395  001DD0  C07E  F08D         	movff	?___ftmul+1,_fround$2424+1
  9396  001DD4  C07F  F08E         	movff	?___ftmul+2,_fround$2424+2
  9397                           
  9398                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9399  001DD8  C08C  F07D         	movff	_fround$2424,___ftmul@f1
  9400  001DDC  C08D  F07E         	movff	_fround$2424+1,___ftmul@f1+1
  9401  001DE0  C08E  F07F         	movff	_fround$2424+2,___ftmul@f1+2
  9402  001DE4  0E00               	movlw	0
  9403  001DE6  0100               	movlb	0	; () banked
  9404  001DE8  6F80               	movwf	___ftmul@f2& (0+255),b
  9405  001DEA  0E00               	movlw	0
  9406  001DEC  0100               	movlb	0	; () banked
  9407  001DEE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9408  001DF0  0E3F               	movlw	63
  9409  001DF2  0100               	movlb	0	; () banked
  9410  001DF4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9411  001DF6  ECD0  F014         	call	___ftmul	;wreg free
  9412  001DFA  C07D  F089         	movff	?___ftmul,?_fround
  9413  001DFE  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9414  001E02  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9415  001E06  0012               	return	
  9416  001E08                     l5056:
  9417                           
  9418                           ;doprnt.c: 415: else if(prec > 10)
  9419  001E08  0E0A               	movlw	10
  9420  001E0A  0100               	movlb	0	; () banked
  9421  001E0C  6592               	cpfsgt	fround@prec& (0+255),b
  9422  001E0E  D06E               	goto	l5064
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9426  001E10  0E00               	movlw	0
  9427  001E12  0100               	movlb	0	; () banked
  9428  001E14  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9429  001E16  0E03               	movlw	3
  9430  001E18  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9431  001E1A  0E00               	movlw	0
  9432  001E1C  0100               	movlb	0	; () banked
  9433  001E1E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9434  001E20  0E0A               	movlw	10
  9435  001E22  6F73               	movwf	___awmod@divisor& (0+255),b
  9436  001E24  C092  F071         	movff	fround@prec,___awmod@dividend
  9437  001E28  0100               	movlb	0	; () banked
  9438  001E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9439  001E2C  EC4C  F01A         	call	___awmod	;wreg free
  9440  001E30  C071  F079         	movff	?___awmod,___wmul@multiplier
  9441  001E34  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9442  001E38  EC7E  F01D         	call	___wmul	;wreg free
  9443  001E3C  0E1D               	movlw	low __npowers_
  9444  001E3E  0100               	movlb	0	; () banked
  9445  001E40  2579               	addwf	?___wmul& (0+255),w,b
  9446  001E42  6EF6               	movwf	tblptrl,c
  9447  001E44  0E7F               	movlw	high __npowers_
  9448  001E46  0100               	movlb	0	; () banked
  9449  001E48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9450  001E4A  6EF7               	movwf	tblptrh,c
  9451  001E4C                     	if	0	;There are less than 3 active tblptr bytes
  9452  001E4C                     	endif
  9453  001E4C  0009               	tblrd		*+
  9454  001E4E  CFF5 F080          	movff	tablat,___ftmul@f2
  9455  001E52  0009               	tblrd		*+
  9456  001E54  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9457  001E58  000A               	tblrd		*-
  9458  001E5A  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9459  001E5E  0E00               	movlw	0
  9460  001E60  0100               	movlb	0	; () banked
  9461  001E62  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9462  001E64  0E0A               	movlw	10
  9463  001E66  6F77               	movwf	___awdiv@divisor& (0+255),b
  9464  001E68  C092  F075         	movff	fround@prec,___awdiv@dividend
  9465  001E6C  0100               	movlb	0	; () banked
  9466  001E6E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9467  001E70  ECF9  F019         	call	___awdiv	;wreg free
  9468  001E74  0E09               	movlw	9
  9469  001E76  0100               	movlb	0	; () banked
  9470  001E78  2575               	addwf	?___awdiv& (0+255),w,b
  9471  001E7A  0100               	movlb	0	; () banked
  9472  001E7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9473  001E7E  0E00               	movlw	0
  9474  001E80  0100               	movlb	0	; () banked
  9475  001E82  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9476  001E84  0100               	movlb	0	; () banked
  9477  001E86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9478  001E88  0E00               	movlw	0
  9479  001E8A  0100               	movlb	0	; () banked
  9480  001E8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9481  001E8E  0E03               	movlw	3
  9482  001E90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9483  001E92  EC7E  F01D         	call	___wmul	;wreg free
  9484  001E96  0E1D               	movlw	low __npowers_
  9485  001E98  0100               	movlb	0	; () banked
  9486  001E9A  2579               	addwf	?___wmul& (0+255),w,b
  9487  001E9C  6EF6               	movwf	tblptrl,c
  9488  001E9E  0E7F               	movlw	high __npowers_
  9489  001EA0  0100               	movlb	0	; () banked
  9490  001EA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9491  001EA4  6EF7               	movwf	tblptrh,c
  9492  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  9493  001EA6                     	endif
  9494  001EA6  0009               	tblrd		*+
  9495  001EA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9496  001EAC  0009               	tblrd		*+
  9497  001EAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9498  001EB2  000A               	tblrd		*-
  9499  001EB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9500  001EB8  ECD0  F014         	call	___ftmul	;wreg free
  9501  001EBC  C07D  F08F         	movff	?___ftmul,_fround$2423
  9502  001EC0  C07E  F090         	movff	?___ftmul+1,_fround$2423+1
  9503  001EC4  C07F  F091         	movff	?___ftmul+2,_fround$2423+2
  9504                           
  9505                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9506  001EC8  C08F  F07D         	movff	_fround$2423,___ftmul@f1
  9507  001ECC  C090  F07E         	movff	_fround$2423+1,___ftmul@f1+1
  9508  001ED0  C091  F07F         	movff	_fround$2423+2,___ftmul@f1+2
  9509  001ED4  0E00               	movlw	0
  9510  001ED6  0100               	movlb	0	; () banked
  9511  001ED8  6F80               	movwf	___ftmul@f2& (0+255),b
  9512  001EDA  0E00               	movlw	0
  9513  001EDC  0100               	movlb	0	; () banked
  9514  001EDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9515  001EE0  0E3F               	movlw	63
  9516  001EE2  0100               	movlb	0	; () banked
  9517  001EE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9518  001EE6  ECD0  F014         	call	___ftmul	;wreg free
  9519  001EEA  D787               	goto	L8
  9520  001EEC                     l5064:
  9521                           
  9522                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9523  001EEC  0100               	movlb	0	; () banked
  9524  001EEE  5192               	movf	fround@prec& (0+255),w,b
  9525  001EF0  0D03               	mullw	3
  9526  001EF2  0E1D               	movlw	low __npowers_
  9527  001EF4  24F3               	addwf	prodl,w,c
  9528  001EF6  6EF6               	movwf	tblptrl,c
  9529  001EF8  0E7F               	movlw	high __npowers_
  9530  001EFA  20F4               	addwfc	prodh,w,c
  9531  001EFC  6EF7               	movwf	tblptrh,c
  9532  001EFE                     	if	0	;There are less than 3 active tblptr bytes
  9533  001EFE                     	endif
  9534  001EFE  0009               	tblrd		*+
  9535  001F00  CFF5 F07D          	movff	tablat,___ftmul@f1
  9536  001F04  0009               	tblrd		*+
  9537  001F06  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9538  001F0A  000A               	tblrd		*-
  9539  001F0C  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9540  001F10  0E00               	movlw	0
  9541  001F12  0100               	movlb	0	; () banked
  9542  001F14  6F80               	movwf	___ftmul@f2& (0+255),b
  9543  001F16  0E00               	movlw	0
  9544  001F18  0100               	movlb	0	; () banked
  9545  001F1A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9546  001F1C  0E3F               	movlw	63
  9547  001F1E  0100               	movlb	0	; () banked
  9548  001F20  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9549  001F22  ECD0  F014         	call	___ftmul	;wreg free
  9550  001F26  C07D  F089         	movff	?___ftmul,?_fround
  9551  001F2A  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9552  001F2E  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9553  001F32  0012               	return	
  9554  001F34                     __end_of_fround:
  9555                           	opt stack 0
  9556                           tblptru	equ	0xFF8
  9557                           tblptrh	equ	0xFF7
  9558                           tblptrl	equ	0xFF6
  9559                           tablat	equ	0xFF5
  9560                           prodh	equ	0xFF4
  9561                           prodl	equ	0xFF3
  9562                           indf0	equ	0xFEF
  9563                           postinc0	equ	0xFEE
  9564                           fsr0h	equ	0xFEA
  9565                           fsr0l	equ	0xFE9
  9566                           wreg	equ	0xFE8
  9567                           indf1	equ	0xFE7
  9568                           postdec1	equ	0xFE5
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           postdec2	equ	0xFDD
  9574                           fsr2h	equ	0xFDA
  9575                           fsr2l	equ	0xFD9
  9576                           status	equ	0xFD8
  9577                           
  9578 ;; *************** function ___wmul *****************
  9579 ;; Defined at:
  9580 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  multiplier      2   25[BANK0 ] unsigned int 
  9583 ;;  multiplicand    2   27[BANK0 ] unsigned int 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  product         2   39[COMRAM] unsigned int 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  2   25[BANK0 ] unsigned int 
  9588 ;; Registers used:
  9589 ;;		wreg, status,2, status,0, prodl, prodh
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9595 ;;      Params:         0       4       0       0       0       0       0
  9596 ;;      Locals:         2       0       0       0       0       0       0
  9597 ;;      Temps:          0       0       0       0       0       0       0
  9598 ;;      Totals:         2       4       0       0       0       0       0
  9599 ;;Total ram usage:        6 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    3
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_fround
  9606 ;;		_scale
  9607 ;;		_sprintf
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text35
  9612  003AFC                     __ptext35:
  9613                           	opt stack 0
  9614  003AFC                     ___wmul:
  9615                           	opt stack 23
  9616                           
  9617                           ;incstack = 0
  9618  003AFC  0100               	movlb	0	; () banked
  9619  003AFE  5179               	movf	___wmul@multiplier& (0+255),w,b
  9620  003B00  0100               	movlb	0	; () banked
  9621  003B02  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9622  003B04  CFF3 F028          	movff	prodl,___wmul@product
  9623  003B08  CFF4 F029          	movff	prodh,___wmul@product+1
  9624  003B0C  0100               	movlb	0	; () banked
  9625  003B0E  5179               	movf	___wmul@multiplier& (0+255),w,b
  9626  003B10  0100               	movlb	0	; () banked
  9627  003B12  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9628  003B14  50F3               	movf	prodl,w,c
  9629  003B16  2629               	addwf	___wmul@product+1,f,c
  9630  003B18  0100               	movlb	0	; () banked
  9631  003B1A  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9632  003B1C  0100               	movlb	0	; () banked
  9633  003B1E  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9634  003B20  50F3               	movf	prodl,w,c
  9635  003B22  2629               	addwf	___wmul@product+1,f,c
  9636                           
  9637                           ; BSR set to: 0
  9638  003B24  C028  F079         	movff	___wmul@product,?___wmul
  9639  003B28  C029  F07A         	movff	___wmul@product+1,?___wmul+1
  9640  003B2C  0012               	return	
  9641  003B2E                     __end_of___wmul:
  9642                           	opt stack 0
  9643                           tblptru	equ	0xFF8
  9644                           tblptrh	equ	0xFF7
  9645                           tblptrl	equ	0xFF6
  9646                           tablat	equ	0xFF5
  9647                           prodh	equ	0xFF4
  9648                           prodl	equ	0xFF3
  9649                           indf0	equ	0xFEF
  9650                           postinc0	equ	0xFEE
  9651                           fsr0h	equ	0xFEA
  9652                           fsr0l	equ	0xFE9
  9653                           wreg	equ	0xFE8
  9654                           indf1	equ	0xFE7
  9655                           postdec1	equ	0xFE5
  9656                           fsr1h	equ	0xFE2
  9657                           fsr1l	equ	0xFE1
  9658                           indf2	equ	0xFDF
  9659                           postinc2	equ	0xFDE
  9660                           postdec2	equ	0xFDD
  9661                           fsr2h	equ	0xFDA
  9662                           fsr2l	equ	0xFD9
  9663                           status	equ	0xFD8
  9664                           
  9665 ;; *************** function ___ftmul *****************
  9666 ;; Defined at:
  9667 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  f1              3   29[BANK0 ] float 
  9670 ;;  f2              3   32[BANK0 ] float 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  9673 ;;  sign            1   40[BANK0 ] unsigned char 
  9674 ;;  cntr            1   39[BANK0 ] unsigned char 
  9675 ;;  exp             1   35[BANK0 ] unsigned char 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  3   29[BANK0 ] float 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9685 ;;      Params:         0       6       0       0       0       0       0
  9686 ;;      Locals:         0       6       0       0       0       0       0
  9687 ;;      Temps:          3       0       0       0       0       0       0
  9688 ;;      Totals:         3      12       0       0       0       0       0
  9689 ;;Total ram usage:       15 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    4
  9692 ;; This function calls:
  9693 ;;		___ftpack
  9694 ;; This function is called by:
  9695 ;;		_util_getBatteryVoltage
  9696 ;;		_util_getSolarCurrent
  9697 ;;		_util_getBatteryCurrent
  9698 ;;		_util_getTemperature
  9699 ;;		_fround
  9700 ;;		_scale
  9701 ;;		_sprintf
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text36
  9706  0029A0                     __ptext36:
  9707                           	opt stack 0
  9708  0029A0                     ___ftmul:
  9709                           	opt stack 24
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;incstack = 0
  9713  0029A0  C07F  F02A         	movff	___ftmul@f1+2,??___ftmul
  9714  0029A4  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9715  0029A6  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9716  0029A8  0100               	movlb	0	; () banked
  9717  0029AA  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9718  0029AC  362A               	rlcf	??___ftmul& (0+255),f,c
  9719  0029AE  E301               	bnc	u4781
  9720  0029B0  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9721  0029B2                     u4781:
  9722  0029B2  502A               	movf	??___ftmul,w,c
  9723  0029B4  0100               	movlb	0	; () banked
  9724  0029B6  6F83               	movwf	___ftmul@exp& (0+255),b
  9725  0029B8  0100               	movlb	0	; () banked
  9726  0029BA  5183               	movf	___ftmul@exp& (0+255),w,b
  9727  0029BC  A4D8               	btfss	status,2,c
  9728  0029BE  D00A               	goto	l4854
  9729                           
  9730                           ; BSR set to: 0
  9731  0029C0  0E00               	movlw	0
  9732  0029C2  0100               	movlb	0	; () banked
  9733  0029C4  6F7D               	movwf	?___ftmul& (0+255),b
  9734  0029C6  0E00               	movlw	0
  9735  0029C8  0100               	movlb	0	; () banked
  9736  0029CA  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9737  0029CC  0E00               	movlw	0
  9738  0029CE  0100               	movlb	0	; () banked
  9739  0029D0  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9740                           
  9741                           ; BSR set to: 0
  9742  0029D2  0012               	return	
  9743  0029D4                     l4854:
  9744                           
  9745                           ; BSR set to: 0
  9746  0029D4  C082  F02A         	movff	___ftmul@f2+2,??___ftmul
  9747  0029D8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9748  0029DA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9749  0029DC  0100               	movlb	0	; () banked
  9750  0029DE  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9751  0029E0  362A               	rlcf	??___ftmul& (0+255),f,c
  9752  0029E2  E301               	bnc	u4801
  9753  0029E4  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9754  0029E6                     u4801:
  9755  0029E6  502A               	movf	??___ftmul,w,c
  9756  0029E8  0100               	movlb	0	; () banked
  9757  0029EA  6F88               	movwf	___ftmul@sign& (0+255),b
  9758  0029EC  0100               	movlb	0	; () banked
  9759  0029EE  5188               	movf	___ftmul@sign& (0+255),w,b
  9760  0029F0  A4D8               	btfss	status,2,c
  9761  0029F2  D00A               	goto	l4860
  9762                           
  9763                           ; BSR set to: 0
  9764  0029F4  0E00               	movlw	0
  9765  0029F6  0100               	movlb	0	; () banked
  9766  0029F8  6F7D               	movwf	?___ftmul& (0+255),b
  9767  0029FA  0E00               	movlw	0
  9768  0029FC  0100               	movlb	0	; () banked
  9769  0029FE  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9770  002A00  0E00               	movlw	0
  9771  002A02  0100               	movlb	0	; () banked
  9772  002A04  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9773                           
  9774                           ; BSR set to: 0
  9775  002A06  0012               	return	
  9776  002A08                     l4860:
  9777                           
  9778                           ; BSR set to: 0
  9779  002A08  0100               	movlb	0	; () banked
  9780  002A0A  5188               	movf	___ftmul@sign& (0+255),w,b
  9781  002A0C  0F7B               	addlw	123
  9782  002A0E  0100               	movlb	0	; () banked
  9783  002A10  2783               	addwf	___ftmul@exp& (0+255),f,b
  9784                           
  9785                           ; BSR set to: 0
  9786  002A12  C07F  F088         	movff	___ftmul@f1+2,___ftmul@sign
  9787  002A16  0100               	movlb	0	; () banked
  9788  002A18  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9789  002A1A  0100               	movlb	0	; () banked
  9790  002A1C  1B88               	xorwf	___ftmul@sign& (0+255),f,b
  9791  002A1E  0E80               	movlw	128
  9792  002A20  0100               	movlb	0	; () banked
  9793  002A22  1788               	andwf	___ftmul@sign& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  002A24  0100               	movlb	0	; () banked
  9797  002A26  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9798                           
  9799                           ; BSR set to: 0
  9800  002A28  0100               	movlb	0	; () banked
  9801  002A2A  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9802                           
  9803                           ; BSR set to: 0
  9804  002A2C  0EFF               	movlw	255
  9805  002A2E  0100               	movlb	0	; () banked
  9806  002A30  1780               	andwf	___ftmul@f2& (0+255),f,b
  9807  002A32  0EFF               	movlw	255
  9808  002A34  0100               	movlb	0	; () banked
  9809  002A36  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9810  002A38  0E00               	movlw	0
  9811  002A3A  0100               	movlb	0	; () banked
  9812  002A3C  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9813                           
  9814                           ; BSR set to: 0
  9815  002A3E  0E00               	movlw	0
  9816  002A40  0100               	movlb	0	; () banked
  9817  002A42  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
  9818  002A44  0E00               	movlw	0
  9819  002A46  0100               	movlb	0	; () banked
  9820  002A48  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9821  002A4A  0E00               	movlw	0
  9822  002A4C  0100               	movlb	0	; () banked
  9823  002A4E  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9824                           
  9825                           ; BSR set to: 0
  9826  002A50  0E07               	movlw	7
  9827  002A52  0100               	movlb	0	; () banked
  9828  002A54  6F87               	movwf	___ftmul@cntr& (0+255),b
  9829  002A56                     l4874:
  9830                           
  9831                           ; BSR set to: 0
  9832  002A56  0100               	movlb	0	; () banked
  9833  002A58  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9834  002A5A  D00C               	goto	l4878
  9835                           
  9836                           ; BSR set to: 0
  9837  002A5C  0100               	movlb	0	; () banked
  9838  002A5E  5180               	movf	___ftmul@f2& (0+255),w,b
  9839  002A60  0100               	movlb	0	; () banked
  9840  002A62  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9841  002A64  0100               	movlb	0	; () banked
  9842  002A66  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9843  002A68  0100               	movlb	0	; () banked
  9844  002A6A  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9845  002A6C  0100               	movlb	0	; () banked
  9846  002A6E  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9847  002A70  0100               	movlb	0	; () banked
  9848  002A72  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9849  002A74                     l4878:
  9850                           
  9851                           ; BSR set to: 0
  9852  002A74  0100               	movlb	0	; () banked
  9853  002A76  90D8               	bcf	status,0,c
  9854  002A78  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9855  002A7A  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9856  002A7C  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9857  002A7E  0100               	movlb	0	; () banked
  9858  002A80  90D8               	bcf	status,0,c
  9859  002A82  3780               	rlcf	___ftmul@f2& (0+255),f,b
  9860  002A84  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9861  002A86  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9862                           
  9863                           ; BSR set to: 0
  9864  002A88  0100               	movlb	0	; () banked
  9865  002A8A  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9866  002A8C  D7E4               	goto	l4874
  9867                           
  9868                           ; BSR set to: 0
  9869                           
  9870                           ; BSR set to: 0
  9871  002A8E  0E09               	movlw	9
  9872  002A90  0100               	movlb	0	; () banked
  9873  002A92  6F87               	movwf	___ftmul@cntr& (0+255),b
  9874  002A94                     l4884:
  9875                           
  9876                           ; BSR set to: 0
  9877  002A94  0100               	movlb	0	; () banked
  9878  002A96  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9879  002A98  D00C               	goto	l4888
  9880                           
  9881                           ; BSR set to: 0
  9882  002A9A  0100               	movlb	0	; () banked
  9883  002A9C  5180               	movf	___ftmul@f2& (0+255),w,b
  9884  002A9E  0100               	movlb	0	; () banked
  9885  002AA0  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9886  002AA2  0100               	movlb	0	; () banked
  9887  002AA4  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9888  002AA6  0100               	movlb	0	; () banked
  9889  002AA8  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9890  002AAA  0100               	movlb	0	; () banked
  9891  002AAC  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9892  002AAE  0100               	movlb	0	; () banked
  9893  002AB0  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9894  002AB2                     l4888:
  9895                           
  9896                           ; BSR set to: 0
  9897  002AB2  0100               	movlb	0	; () banked
  9898  002AB4  90D8               	bcf	status,0,c
  9899  002AB6  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9900  002AB8  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9901  002ABA  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9902  002ABC  0100               	movlb	0	; () banked
  9903  002ABE  90D8               	bcf	status,0,c
  9904  002AC0  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9905  002AC2  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9906  002AC4  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9907                           
  9908                           ; BSR set to: 0
  9909  002AC6  0100               	movlb	0	; () banked
  9910  002AC8  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9911  002ACA  D7E4               	goto	l4884
  9912                           
  9913                           ; BSR set to: 0
  9914                           
  9915                           ; BSR set to: 0
  9916  002ACC  C084  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  9917  002AD0  C085  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9918  002AD4  C086  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9919  002AD8  C083  F074         	movff	___ftmul@exp,___ftpack@exp
  9920  002ADC  C088  F075         	movff	___ftmul@sign,___ftpack@sign
  9921  002AE0  EC44  F017         	call	___ftpack	;wreg free
  9922  002AE4  C071  F07D         	movff	?___ftpack,?___ftmul
  9923  002AE8  C072  F07E         	movff	?___ftpack+1,?___ftmul+1
  9924  002AEC  C073  F07F         	movff	?___ftpack+2,?___ftmul+2
  9925  002AF0  0012               	return	
  9926  002AF2                     __end_of___ftmul:
  9927                           	opt stack 0
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           indf0	equ	0xFEF
  9935                           postinc0	equ	0xFEE
  9936                           fsr0h	equ	0xFEA
  9937                           fsr0l	equ	0xFE9
  9938                           wreg	equ	0xFE8
  9939                           indf1	equ	0xFE7
  9940                           postdec1	equ	0xFE5
  9941                           fsr1h	equ	0xFE2
  9942                           fsr1l	equ	0xFE1
  9943                           indf2	equ	0xFDF
  9944                           postinc2	equ	0xFDE
  9945                           postdec2	equ	0xFDD
  9946                           fsr2h	equ	0xFDA
  9947                           fsr2l	equ	0xFD9
  9948                           status	equ	0xFD8
  9949                           
  9950 ;; *************** function ___awmod *****************
  9951 ;; Defined at:
  9952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;  dividend        2   17[BANK0 ] int 
  9955 ;;  divisor         2   19[BANK0 ] int 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  sign            1   34[COMRAM] unsigned char 
  9958 ;;  counter         1   33[COMRAM] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  2   17[BANK0 ] int 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9968 ;;      Params:         0       4       0       0       0       0       0
  9969 ;;      Locals:         2       0       0       0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0
  9971 ;;      Totals:         2       4       0       0       0       0       0
  9972 ;;Total ram usage:        6 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    3
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_fround
  9979 ;;		_scale
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text37
  9984  003498                     __ptext37:
  9985                           	opt stack 0
  9986  003498                     ___awmod:
  9987                           	opt stack 23
  9988                           
  9989                           ;incstack = 0
  9990  003498  0E00               	movlw	0
  9991  00349A  6E23               	movwf	___awmod@sign,c
  9992  00349C  0100               	movlb	0	; () banked
  9993  00349E  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9994  0034A0  D007               	goto	l4948
  9995                           
  9996                           ; BSR set to: 0
  9997  0034A2  0100               	movlb	0	; () banked
  9998  0034A4  6D71               	negf	___awmod@dividend& (0+255),b
  9999  0034A6  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10000  0034A8  B0D8               	btfsc	status,0,c
 10001  0034AA  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10002                           
 10003                           ; BSR set to: 0
 10004  0034AC  0E01               	movlw	1
 10005  0034AE  6E23               	movwf	___awmod@sign,c
 10006  0034B0                     l4948:
 10007                           
 10008                           ; BSR set to: 0
 10009  0034B0  0100               	movlb	0	; () banked
 10010  0034B2  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10011  0034B4  D005               	goto	l4952
 10012                           
 10013                           ; BSR set to: 0
 10014  0034B6  0100               	movlb	0	; () banked
 10015  0034B8  6D73               	negf	___awmod@divisor& (0+255),b
 10016  0034BA  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10017  0034BC  B0D8               	btfsc	status,0,c
 10018  0034BE  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10019  0034C0                     l4952:
 10020                           
 10021                           ; BSR set to: 0
 10022  0034C0  0100               	movlb	0	; () banked
 10023  0034C2  5173               	movf	___awmod@divisor& (0+255),w,b
 10024  0034C4  0100               	movlb	0	; () banked
 10025  0034C6  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10026  0034C8  B4D8               	btfsc	status,2,c
 10027  0034CA  D023               	goto	l4968
 10028                           
 10029                           ; BSR set to: 0
 10030  0034CC  0E01               	movlw	1
 10031  0034CE  6E22               	movwf	___awmod@counter,c
 10032  0034D0  D005               	goto	l4958
 10033  0034D2                     l4956:
 10034                           
 10035                           ; BSR set to: 0
 10036  0034D2  0100               	movlb	0	; () banked
 10037  0034D4  90D8               	bcf	status,0,c
 10038  0034D6  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10039  0034D8  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10040  0034DA  2A22               	incf	___awmod@counter,f,c
 10041  0034DC                     l4958:
 10042                           
 10043                           ; BSR set to: 0
 10044  0034DC  0100               	movlb	0	; () banked
 10045  0034DE  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10046  0034E0  D7F8               	goto	l4956
 10047  0034E2                     l4960:
 10048                           
 10049                           ; BSR set to: 0
 10050  0034E2  0100               	movlb	0	; () banked
 10051  0034E4  5173               	movf	___awmod@divisor& (0+255),w,b
 10052  0034E6  0100               	movlb	0	; () banked
 10053  0034E8  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10054  0034EA  0100               	movlb	0	; () banked
 10055  0034EC  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10056  0034EE  0100               	movlb	0	; () banked
 10057  0034F0  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10058  0034F2  A0D8               	btfss	status,0,c
 10059  0034F4  D008               	goto	l4964
 10060                           
 10061                           ; BSR set to: 0
 10062  0034F6  0100               	movlb	0	; () banked
 10063  0034F8  5173               	movf	___awmod@divisor& (0+255),w,b
 10064  0034FA  0100               	movlb	0	; () banked
 10065  0034FC  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10066  0034FE  0100               	movlb	0	; () banked
 10067  003500  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10068  003502  0100               	movlb	0	; () banked
 10069  003504  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10070  003506                     l4964:
 10071                           
 10072                           ; BSR set to: 0
 10073  003506  0100               	movlb	0	; () banked
 10074  003508  90D8               	bcf	status,0,c
 10075  00350A  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10076  00350C  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10077                           
 10078                           ; BSR set to: 0
 10079  00350E  2E22               	decfsz	___awmod@counter,f,c
 10080  003510  D7E8               	goto	l4960
 10081  003512                     l4968:
 10082                           
 10083                           ; BSR set to: 0
 10084  003512  5023               	movf	___awmod@sign,w,c
 10085  003514  B4D8               	btfsc	status,2,c
 10086  003516  D005               	goto	l4972
 10087                           
 10088                           ; BSR set to: 0
 10089  003518  0100               	movlb	0	; () banked
 10090  00351A  6D71               	negf	___awmod@dividend& (0+255),b
 10091  00351C  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10092  00351E  B0D8               	btfsc	status,0,c
 10093  003520  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10094  003522                     l4972:
 10095                           
 10096                           ; BSR set to: 0
 10097  003522  C071  F071         	movff	___awmod@dividend,?___awmod
 10098  003526  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10099  00352A  0012               	return	
 10100  00352C                     __end_of___awmod:
 10101                           	opt stack 0
 10102                           tblptru	equ	0xFF8
 10103                           tblptrh	equ	0xFF7
 10104                           tblptrl	equ	0xFF6
 10105                           tablat	equ	0xFF5
 10106                           prodh	equ	0xFF4
 10107                           prodl	equ	0xFF3
 10108                           indf0	equ	0xFEF
 10109                           postinc0	equ	0xFEE
 10110                           fsr0h	equ	0xFEA
 10111                           fsr0l	equ	0xFE9
 10112                           wreg	equ	0xFE8
 10113                           indf1	equ	0xFE7
 10114                           postdec1	equ	0xFE5
 10115                           fsr1h	equ	0xFE2
 10116                           fsr1l	equ	0xFE1
 10117                           indf2	equ	0xFDF
 10118                           postinc2	equ	0xFDE
 10119                           postdec2	equ	0xFDD
 10120                           fsr2h	equ	0xFDA
 10121                           fsr2l	equ	0xFD9
 10122                           status	equ	0xFD8
 10123                           
 10124 ;; *************** function ___awdiv *****************
 10125 ;; Defined at:
 10126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  dividend        2   21[BANK0 ] int 
 10129 ;;  divisor         2   23[BANK0 ] int 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  quotient        2   37[COMRAM] int 
 10132 ;;  sign            1   36[COMRAM] unsigned char 
 10133 ;;  counter         1   35[COMRAM] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  2   21[BANK0 ] int 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10143 ;;      Params:         0       4       0       0       0       0       0
 10144 ;;      Locals:         4       0       0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0
 10146 ;;      Totals:         4       4       0       0       0       0       0
 10147 ;;Total ram usage:        8 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    3
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_fround
 10154 ;;		_scale
 10155 ;;		_sprintf
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text38
 10160  0033F2                     __ptext38:
 10161                           	opt stack 0
 10162  0033F2                     ___awdiv:
 10163                           	opt stack 23
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;incstack = 0
 10167  0033F2  0E00               	movlw	0
 10168  0033F4  6E25               	movwf	___awdiv@sign,c
 10169  0033F6  0100               	movlb	0	; () banked
 10170  0033F8  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10171  0033FA  D007               	goto	l4904
 10172                           
 10173                           ; BSR set to: 0
 10174  0033FC  0100               	movlb	0	; () banked
 10175  0033FE  6D77               	negf	___awdiv@divisor& (0+255),b
 10176  003400  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10177  003402  B0D8               	btfsc	status,0,c
 10178  003404  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10179                           
 10180                           ; BSR set to: 0
 10181  003406  0E01               	movlw	1
 10182  003408  6E25               	movwf	___awdiv@sign,c
 10183  00340A                     l4904:
 10184                           
 10185                           ; BSR set to: 0
 10186  00340A  0100               	movlb	0	; () banked
 10187  00340C  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10188  00340E  D007               	goto	l4910
 10189                           
 10190                           ; BSR set to: 0
 10191  003410  0100               	movlb	0	; () banked
 10192  003412  6D75               	negf	___awdiv@dividend& (0+255),b
 10193  003414  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10194  003416  B0D8               	btfsc	status,0,c
 10195  003418  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10196                           
 10197                           ; BSR set to: 0
 10198  00341A  0E01               	movlw	1
 10199  00341C  1A25               	xorwf	___awdiv@sign,f,c
 10200  00341E                     l4910:
 10201                           
 10202                           ; BSR set to: 0
 10203  00341E  0E00               	movlw	0
 10204  003420  6E27               	movwf	___awdiv@quotient+1,c
 10205  003422  0E00               	movlw	0
 10206  003424  6E26               	movwf	___awdiv@quotient,c
 10207                           
 10208                           ; BSR set to: 0
 10209  003426  0100               	movlb	0	; () banked
 10210  003428  5177               	movf	___awdiv@divisor& (0+255),w,b
 10211  00342A  0100               	movlb	0	; () banked
 10212  00342C  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10213  00342E  B4D8               	btfsc	status,2,c
 10214  003430  D027               	goto	l4932
 10215                           
 10216                           ; BSR set to: 0
 10217  003432  0E01               	movlw	1
 10218  003434  6E24               	movwf	___awdiv@counter,c
 10219  003436  D005               	goto	l4918
 10220  003438                     l4916:
 10221                           
 10222                           ; BSR set to: 0
 10223  003438  0100               	movlb	0	; () banked
 10224  00343A  90D8               	bcf	status,0,c
 10225  00343C  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 10226  00343E  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10227  003440  2A24               	incf	___awdiv@counter,f,c
 10228  003442                     l4918:
 10229                           
 10230                           ; BSR set to: 0
 10231  003442  0100               	movlb	0	; () banked
 10232  003444  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10233  003446  D7F8               	goto	l4916
 10234  003448                     l4920:
 10235                           
 10236                           ; BSR set to: 0
 10237  003448  90D8               	bcf	status,0,c
 10238  00344A  3626               	rlcf	___awdiv@quotient,f,c
 10239  00344C  3627               	rlcf	___awdiv@quotient+1,f,c
 10240                           
 10241                           ; BSR set to: 0
 10242  00344E  0100               	movlb	0	; () banked
 10243  003450  5177               	movf	___awdiv@divisor& (0+255),w,b
 10244  003452  0100               	movlb	0	; () banked
 10245  003454  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 10246  003456  0100               	movlb	0	; () banked
 10247  003458  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10248  00345A  0100               	movlb	0	; () banked
 10249  00345C  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10250  00345E  A0D8               	btfss	status,0,c
 10251  003460  D009               	goto	l4928
 10252                           
 10253                           ; BSR set to: 0
 10254  003462  0100               	movlb	0	; () banked
 10255  003464  5177               	movf	___awdiv@divisor& (0+255),w,b
 10256  003466  0100               	movlb	0	; () banked
 10257  003468  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 10258  00346A  0100               	movlb	0	; () banked
 10259  00346C  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10260  00346E  0100               	movlb	0	; () banked
 10261  003470  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10262                           
 10263                           ; BSR set to: 0
 10264  003472  8026               	bsf	___awdiv@quotient,0,c
 10265  003474                     l4928:
 10266                           
 10267                           ; BSR set to: 0
 10268  003474  0100               	movlb	0	; () banked
 10269  003476  90D8               	bcf	status,0,c
 10270  003478  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10271  00347A  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  00347C  2E24               	decfsz	___awdiv@counter,f,c
 10275  00347E  D7E4               	goto	l4920
 10276  003480                     l4932:
 10277                           
 10278                           ; BSR set to: 0
 10279  003480  5025               	movf	___awdiv@sign,w,c
 10280  003482  B4D8               	btfsc	status,2,c
 10281  003484  D004               	goto	l4936
 10282                           
 10283                           ; BSR set to: 0
 10284  003486  6C26               	negf	___awdiv@quotient,c
 10285  003488  1E27               	comf	___awdiv@quotient+1,f,c
 10286  00348A  B0D8               	btfsc	status,0,c
 10287  00348C  2A27               	incf	___awdiv@quotient+1,f,c
 10288  00348E                     l4936:
 10289                           
 10290                           ; BSR set to: 0
 10291  00348E  C026  F075         	movff	___awdiv@quotient,?___awdiv
 10292  003492  C027  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 10293  003496  0012               	return	
 10294  003498                     __end_of___awdiv:
 10295                           	opt stack 0
 10296                           tblptru	equ	0xFF8
 10297                           tblptrh	equ	0xFF7
 10298                           tblptrl	equ	0xFF6
 10299                           tablat	equ	0xFF5
 10300                           prodh	equ	0xFF4
 10301                           prodl	equ	0xFF3
 10302                           indf0	equ	0xFEF
 10303                           postinc0	equ	0xFEE
 10304                           fsr0h	equ	0xFEA
 10305                           fsr0l	equ	0xFE9
 10306                           wreg	equ	0xFE8
 10307                           indf1	equ	0xFE7
 10308                           postdec1	equ	0xFE5
 10309                           fsr1h	equ	0xFE2
 10310                           fsr1l	equ	0xFE1
 10311                           indf2	equ	0xFDF
 10312                           postinc2	equ	0xFDE
 10313                           postdec2	equ	0xFDD
 10314                           fsr2h	equ	0xFDA
 10315                           fsr2l	equ	0xFD9
 10316                           status	equ	0xFD8
 10317                           
 10318 ;; *************** function __tdiv_to_l_ *****************
 10319 ;; Defined at:
 10320 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  f1              3   17[BANK0 ] float 
 10323 ;;  f2              3   20[BANK0 ] float 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  quot            4   36[COMRAM] unsigned long 
 10326 ;;  exp1            1   41[COMRAM] unsigned char 
 10327 ;;  cntr            1   40[COMRAM] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  4   17[BANK0 ] unsigned long 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10337 ;;      Params:         0       6       0       0       0       0       0
 10338 ;;      Locals:         6       0       0       0       0       0       0
 10339 ;;      Temps:          3       0       0       0       0       0       0
 10340 ;;      Totals:         9       6       0       0       0       0       0
 10341 ;;Total ram usage:       15 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    3
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_sprintf
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text39
 10352  0026DA                     __ptext39:
 10353                           	opt stack 0
 10354  0026DA                     __tdiv_to_l_:
 10355                           	opt stack 24
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;incstack = 0
 10359  0026DA  C073  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10360  0026DE  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10361  0026E0  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10362  0026E2  0100               	movlb	0	; () banked
 10363  0026E4  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10364  0026E6  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10365  0026E8  E301               	bnc	u5111
 10366  0026EA  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10367  0026EC                     u5111:
 10368  0026EC  5022               	movf	??__tdiv_to_l_,w,c
 10369  0026EE  6E2A               	movwf	__tdiv_to_l_@exp1,c
 10370  0026F0  502A               	movf	__tdiv_to_l_@exp1,w,c
 10371  0026F2  A4D8               	btfss	status,2,c
 10372  0026F4  D00A               	goto	l5124
 10373                           
 10374                           ; BSR set to: 0
 10375  0026F6  0E00               	movlw	0
 10376  0026F8  0100               	movlb	0	; () banked
 10377  0026FA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10378  0026FC  0E00               	movlw	0
 10379  0026FE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10380  002700  0E00               	movlw	0
 10381  002702  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10382  002704  0E00               	movlw	0
 10383  002706  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10384                           
 10385                           ; BSR set to: 0
 10386  002708  0012               	return	
 10387  00270A                     l5124:
 10388                           
 10389                           ; BSR set to: 0
 10390  00270A  C076  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10391  00270E  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10392  002710  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10393  002712  0100               	movlb	0	; () banked
 10394  002714  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10395  002716  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10396  002718  E301               	bnc	u5131
 10397  00271A  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10398  00271C                     u5131:
 10399  00271C  5022               	movf	??__tdiv_to_l_,w,c
 10400  00271E  6E29               	movwf	__tdiv_to_l_@cntr,c
 10401  002720  5029               	movf	__tdiv_to_l_@cntr,w,c
 10402  002722  A4D8               	btfss	status,2,c
 10403  002724  D00A               	goto	l5130
 10404                           
 10405                           ; BSR set to: 0
 10406  002726  0E00               	movlw	0
 10407  002728  0100               	movlb	0	; () banked
 10408  00272A  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10409  00272C  0E00               	movlw	0
 10410  00272E  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10411  002730  0E00               	movlw	0
 10412  002732  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10413  002734  0E00               	movlw	0
 10414  002736  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10415                           
 10416                           ; BSR set to: 0
 10417  002738  0012               	return	
 10418  00273A                     l5130:
 10419                           
 10420                           ; BSR set to: 0
 10421  00273A  0100               	movlb	0	; () banked
 10422  00273C  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10423                           
 10424                           ; BSR set to: 0
 10425  00273E  0EFF               	movlw	255
 10426  002740  0100               	movlb	0	; () banked
 10427  002742  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10428  002744  0EFF               	movlw	255
 10429  002746  0100               	movlb	0	; () banked
 10430  002748  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10431  00274A  0E00               	movlw	0
 10432  00274C  0100               	movlb	0	; () banked
 10433  00274E  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10434  002750  0100               	movlb	0	; () banked
 10435  002752  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10436                           
 10437                           ; BSR set to: 0
 10438  002754  0EFF               	movlw	255
 10439  002756  0100               	movlb	0	; () banked
 10440  002758  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10441  00275A  0EFF               	movlw	255
 10442  00275C  0100               	movlb	0	; () banked
 10443  00275E  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10444  002760  0E00               	movlw	0
 10445  002762  0100               	movlb	0	; () banked
 10446  002764  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10447                           
 10448                           ; BSR set to: 0
 10449  002766  0E00               	movlw	0
 10450  002768  6E25               	movwf	__tdiv_to_l_@quot,c
 10451  00276A  0E00               	movlw	0
 10452  00276C  6E26               	movwf	__tdiv_to_l_@quot+1,c
 10453  00276E  0E00               	movlw	0
 10454  002770  6E27               	movwf	__tdiv_to_l_@quot+2,c
 10455  002772  0E00               	movlw	0
 10456  002774  6E28               	movwf	__tdiv_to_l_@quot+3,c
 10457                           
 10458                           ; BSR set to: 0
 10459  002776  0E7F               	movlw	127
 10460  002778  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10461                           
 10462                           ; BSR set to: 0
 10463  00277A  5029               	movf	__tdiv_to_l_@cntr,w,c
 10464  00277C  0F98               	addlw	152
 10465  00277E  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10466                           
 10467                           ; BSR set to: 0
 10468  002780  0E18               	movlw	24
 10469  002782  6E29               	movwf	__tdiv_to_l_@cntr,c
 10470  002784                     l831:
 10471                           
 10472                           ; BSR set to: 0
 10473  002784  90D8               	bcf	status,0,c
 10474  002786  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10475  002788  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10476  00278A  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10477  00278C  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10478                           
 10479                           ; BSR set to: 0
 10480  00278E  0100               	movlb	0	; () banked
 10481  002790  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10482  002792  0100               	movlb	0	; () banked
 10483  002794  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10484  002796  0100               	movlb	0	; () banked
 10485  002798  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10486  00279A  0100               	movlb	0	; () banked
 10487  00279C  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10488  00279E  0100               	movlb	0	; () banked
 10489  0027A0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10490  0027A2  0100               	movlb	0	; () banked
 10491  0027A4  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10492  0027A6  A0D8               	btfss	status,0,c
 10493  0027A8  D00D               	goto	l832
 10494                           
 10495                           ; BSR set to: 0
 10496  0027AA  0100               	movlb	0	; () banked
 10497  0027AC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10498  0027AE  0100               	movlb	0	; () banked
 10499  0027B0  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10500  0027B2  0100               	movlb	0	; () banked
 10501  0027B4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10502  0027B6  0100               	movlb	0	; () banked
 10503  0027B8  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10504  0027BA  0100               	movlb	0	; () banked
 10505  0027BC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10506  0027BE  0100               	movlb	0	; () banked
 10507  0027C0  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10508                           
 10509                           ; BSR set to: 0
 10510  0027C2  8025               	bsf	__tdiv_to_l_@quot,0,c
 10511  0027C4                     l832:
 10512                           
 10513                           ; BSR set to: 0
 10514  0027C4  0100               	movlb	0	; () banked
 10515  0027C6  90D8               	bcf	status,0,c
 10516  0027C8  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10517  0027CA  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10518  0027CC  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521  0027CE  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 10522  0027D0  D7D9               	goto	l831
 10523                           
 10524                           ; BSR set to: 0
 10525                           
 10526                           ; BSR set to: 0
 10527  0027D2  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 10528  0027D4  D017               	goto	l5164
 10529                           
 10530                           ; BSR set to: 0
 10531  0027D6  502A               	movf	__tdiv_to_l_@exp1,w,c
 10532  0027D8  0A80               	xorlw	128
 10533  0027DA  0F97               	addlw	151
 10534  0027DC  B0D8               	btfsc	status,0,c
 10535  0027DE  D00A               	goto	l5160
 10536                           
 10537                           ; BSR set to: 0
 10538  0027E0  0E00               	movlw	0
 10539  0027E2  0100               	movlb	0	; () banked
 10540  0027E4  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10541  0027E6  0E00               	movlw	0
 10542  0027E8  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10543  0027EA  0E00               	movlw	0
 10544  0027EC  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10545  0027EE  0E00               	movlw	0
 10546  0027F0  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10547                           
 10548                           ; BSR set to: 0
 10549  0027F2  0012               	return	
 10550  0027F4                     l5160:
 10551  0027F4  90D8               	bcf	status,0,c
 10552  0027F6  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 10553  0027F8  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 10554  0027FA  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 10555  0027FC  3225               	rrcf	__tdiv_to_l_@quot,f,c
 10556  0027FE  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 10557  002800  D7F9               	goto	l5160
 10558  002802  D016               	goto	l838
 10559  002804                     l5164:
 10560  002804  0E17               	movlw	23
 10561  002806  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 10562  002808  D010               	goto	l5172
 10563  00280A  0E00               	movlw	0
 10564  00280C  0100               	movlb	0	; () banked
 10565  00280E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10566  002810  0E00               	movlw	0
 10567  002812  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10568  002814  0E00               	movlw	0
 10569  002816  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10570  002818  0E00               	movlw	0
 10571  00281A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10572                           
 10573                           ; BSR set to: 0
 10574  00281C  0012               	return	
 10575  00281E                     l5170:
 10576  00281E  90D8               	bcf	status,0,c
 10577  002820  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10578  002822  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10579  002824  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10580  002826  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10581  002828  062A               	decf	__tdiv_to_l_@exp1,f,c
 10582  00282A                     l5172:
 10583  00282A  502A               	movf	__tdiv_to_l_@exp1,w,c
 10584  00282C  A4D8               	btfss	status,2,c
 10585  00282E  D7F7               	goto	l5170
 10586  002830                     l838:
 10587  002830  C025  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10588  002834  C026  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10589  002838  C027  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10590  00283C  C028  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10591  002840  0012               	return		;funcret
 10592  002842                     __end_of__tdiv_to_l_:
 10593                           	opt stack 0
 10594                           tblptru	equ	0xFF8
 10595                           tblptrh	equ	0xFF7
 10596                           tblptrl	equ	0xFF6
 10597                           tablat	equ	0xFF5
 10598                           prodh	equ	0xFF4
 10599                           prodl	equ	0xFF3
 10600                           indf0	equ	0xFEF
 10601                           postinc0	equ	0xFEE
 10602                           fsr0h	equ	0xFEA
 10603                           fsr0l	equ	0xFE9
 10604                           wreg	equ	0xFE8
 10605                           indf1	equ	0xFE7
 10606                           postdec1	equ	0xFE5
 10607                           fsr1h	equ	0xFE2
 10608                           fsr1l	equ	0xFE1
 10609                           indf2	equ	0xFDF
 10610                           postinc2	equ	0xFDE
 10611                           postdec2	equ	0xFDD
 10612                           fsr2h	equ	0xFDA
 10613                           fsr2l	equ	0xFD9
 10614                           status	equ	0xFD8
 10615                           
 10616 ;; *************** function __div_to_l_ *****************
 10617 ;; Defined at:
 10618 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  f1              3   17[BANK0 ] unsigned long 
 10621 ;;  f2              3   20[BANK0 ] unsigned long 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  quot            4   33[COMRAM] unsigned long 
 10624 ;;  exp1            1   38[COMRAM] unsigned char 
 10625 ;;  cntr            1   37[COMRAM] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  4   17[BANK0 ] unsigned long 
 10628 ;; Registers used:
 10629 ;;		wreg, status,2, status,0
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10635 ;;      Params:         0       6       0       0       0       0       0
 10636 ;;      Locals:         6       0       0       0       0       0       0
 10637 ;;      Temps:          0       0       0       0       0       0       0
 10638 ;;      Totals:         6       6       0       0       0       0       0
 10639 ;;Total ram usage:       12 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    3
 10642 ;; This function calls:
 10643 ;;		Nothing
 10644 ;; This function is called by:
 10645 ;;		_sprintf
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text40
 10650  002842                     __ptext40:
 10651                           	opt stack 0
 10652  002842                     __div_to_l_:
 10653                           	opt stack 24
 10654                           
 10655                           ;incstack = 0
 10656  002842  0100               	movlb	0	; () banked
 10657  002844  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10658  002846  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10659  002848  6E27               	movwf	__div_to_l_@exp1,c
 10660  00284A  5027               	movf	__div_to_l_@exp1,w,c
 10661  00284C  A4D8               	btfss	status,2,c
 10662  00284E  D00A               	goto	l5180
 10663                           
 10664                           ; BSR set to: 0
 10665  002850  0E00               	movlw	0
 10666  002852  0100               	movlb	0	; () banked
 10667  002854  6F71               	movwf	?__div_to_l_& (0+255),b
 10668  002856  0E00               	movlw	0
 10669  002858  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10670  00285A  0E00               	movlw	0
 10671  00285C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10672  00285E  0E00               	movlw	0
 10673  002860  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10674                           
 10675                           ; BSR set to: 0
 10676  002862  0012               	return	
 10677  002864                     l5180:
 10678                           
 10679                           ; BSR set to: 0
 10680  002864  0100               	movlb	0	; () banked
 10681  002866  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10682  002868  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10683  00286A  6E26               	movwf	__div_to_l_@cntr,c
 10684  00286C  5026               	movf	__div_to_l_@cntr,w,c
 10685  00286E  A4D8               	btfss	status,2,c
 10686  002870  D00A               	goto	l5186
 10687                           
 10688                           ; BSR set to: 0
 10689  002872  0E00               	movlw	0
 10690  002874  0100               	movlb	0	; () banked
 10691  002876  6F71               	movwf	?__div_to_l_& (0+255),b
 10692  002878  0E00               	movlw	0
 10693  00287A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10694  00287C  0E00               	movlw	0
 10695  00287E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10696  002880  0E00               	movlw	0
 10697  002882  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10698                           
 10699                           ; BSR set to: 0
 10700  002884  0012               	return	
 10701  002886                     l5186:
 10702                           
 10703                           ; BSR set to: 0
 10704  002886  0100               	movlb	0	; () banked
 10705  002888  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10706                           
 10707                           ; BSR set to: 0
 10708  00288A  0EFF               	movlw	255
 10709  00288C  0100               	movlb	0	; () banked
 10710  00288E  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10711  002890  0EFF               	movlw	255
 10712  002892  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10713  002894  0EFF               	movlw	255
 10714  002896  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10715  002898  0E00               	movlw	0
 10716  00289A  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10717                           
 10718                           ; BSR set to: 0
 10719  00289C  0100               	movlb	0	; () banked
 10720  00289E  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10721  0028A0  0EFF               	movlw	255
 10722  0028A2  0100               	movlb	0	; () banked
 10723  0028A4  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10724  0028A6  0EFF               	movlw	255
 10725  0028A8  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10726  0028AA  0EFF               	movlw	255
 10727  0028AC  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10728  0028AE  0E00               	movlw	0
 10729  0028B0  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10730                           
 10731                           ; BSR set to: 0
 10732  0028B2  0E00               	movlw	0
 10733  0028B4  6E22               	movwf	__div_to_l_@quot,c
 10734  0028B6  0E00               	movlw	0
 10735  0028B8  6E23               	movwf	__div_to_l_@quot+1,c
 10736  0028BA  0E00               	movlw	0
 10737  0028BC  6E24               	movwf	__div_to_l_@quot+2,c
 10738  0028BE  0E00               	movlw	0
 10739  0028C0  6E25               	movwf	__div_to_l_@quot+3,c
 10740                           
 10741                           ; BSR set to: 0
 10742  0028C2  0E7F               	movlw	127
 10743  0028C4  5E27               	subwf	__div_to_l_@exp1,f,c
 10744                           
 10745                           ; BSR set to: 0
 10746  0028C6  5026               	movf	__div_to_l_@cntr,w,c
 10747  0028C8  0FA0               	addlw	160
 10748  0028CA  5E27               	subwf	__div_to_l_@exp1,f,c
 10749                           
 10750                           ; BSR set to: 0
 10751  0028CC  0E20               	movlw	32
 10752  0028CE  6E26               	movwf	__div_to_l_@cntr,c
 10753  0028D0                     l5200:
 10754                           
 10755                           ; BSR set to: 0
 10756  0028D0  90D8               	bcf	status,0,c
 10757  0028D2  3622               	rlcf	__div_to_l_@quot,f,c
 10758  0028D4  3623               	rlcf	__div_to_l_@quot+1,f,c
 10759  0028D6  3624               	rlcf	__div_to_l_@quot+2,f,c
 10760  0028D8  3625               	rlcf	__div_to_l_@quot+3,f,c
 10761                           
 10762                           ; BSR set to: 0
 10763  0028DA  0100               	movlb	0	; () banked
 10764  0028DC  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10765  0028DE  0100               	movlb	0	; () banked
 10766  0028E0  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10767  0028E2  0100               	movlb	0	; () banked
 10768  0028E4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10769  0028E6  0100               	movlb	0	; () banked
 10770  0028E8  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10771  0028EA  0100               	movlb	0	; () banked
 10772  0028EC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10773  0028EE  0100               	movlb	0	; () banked
 10774  0028F0  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10775  0028F2  0100               	movlb	0	; () banked
 10776  0028F4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10777  0028F6  0100               	movlb	0	; () banked
 10778  0028F8  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10779  0028FA  A0D8               	btfss	status,0,c
 10780  0028FC  D011               	goto	l5208
 10781                           
 10782                           ; BSR set to: 0
 10783  0028FE  0100               	movlb	0	; () banked
 10784  002900  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10785  002902  0100               	movlb	0	; () banked
 10786  002904  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10787  002906  0100               	movlb	0	; () banked
 10788  002908  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10789  00290A  0100               	movlb	0	; () banked
 10790  00290C  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10791  00290E  0100               	movlb	0	; () banked
 10792  002910  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10793  002912  0100               	movlb	0	; () banked
 10794  002914  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10795  002916  0100               	movlb	0	; () banked
 10796  002918  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10797  00291A  0100               	movlb	0	; () banked
 10798  00291C  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10799                           
 10800                           ; BSR set to: 0
 10801  00291E  8022               	bsf	__div_to_l_@quot,0,c
 10802  002920                     l5208:
 10803                           
 10804                           ; BSR set to: 0
 10805  002920  0100               	movlb	0	; () banked
 10806  002922  90D8               	bcf	status,0,c
 10807  002924  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10808  002926  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10809  002928  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10810  00292A  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10811                           
 10812                           ; BSR set to: 0
 10813  00292C  2E26               	decfsz	__div_to_l_@cntr,f,c
 10814  00292E  D7D0               	goto	l5200
 10815                           
 10816                           ; BSR set to: 0
 10817                           
 10818                           ; BSR set to: 0
 10819  002930  AE27               	btfss	__div_to_l_@exp1,7,c
 10820  002932  D017               	goto	l5224
 10821                           
 10822                           ; BSR set to: 0
 10823  002934  5027               	movf	__div_to_l_@exp1,w,c
 10824  002936  0A80               	xorlw	128
 10825  002938  0F9F               	addlw	159
 10826  00293A  B0D8               	btfsc	status,0,c
 10827  00293C  D00A               	goto	l5220
 10828                           
 10829                           ; BSR set to: 0
 10830  00293E  0E00               	movlw	0
 10831  002940  0100               	movlb	0	; () banked
 10832  002942  6F71               	movwf	?__div_to_l_& (0+255),b
 10833  002944  0E00               	movlw	0
 10834  002946  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10835  002948  0E00               	movlw	0
 10836  00294A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10837  00294C  0E00               	movlw	0
 10838  00294E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10839                           
 10840                           ; BSR set to: 0
 10841  002950  0012               	return	
 10842  002952                     l5220:
 10843  002952  90D8               	bcf	status,0,c
 10844  002954  3225               	rrcf	__div_to_l_@quot+3,f,c
 10845  002956  3224               	rrcf	__div_to_l_@quot+2,f,c
 10846  002958  3223               	rrcf	__div_to_l_@quot+1,f,c
 10847  00295A  3222               	rrcf	__div_to_l_@quot,f,c
 10848  00295C  3E27               	incfsz	__div_to_l_@exp1,f,c
 10849  00295E  D7F9               	goto	l5220
 10850  002960  D016               	goto	l734
 10851  002962                     l5224:
 10852  002962  0E1F               	movlw	31
 10853  002964  6427               	cpfsgt	__div_to_l_@exp1,c
 10854  002966  D010               	goto	l5232
 10855  002968  0E00               	movlw	0
 10856  00296A  0100               	movlb	0	; () banked
 10857  00296C  6F71               	movwf	?__div_to_l_& (0+255),b
 10858  00296E  0E00               	movlw	0
 10859  002970  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10860  002972  0E00               	movlw	0
 10861  002974  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10862  002976  0E00               	movlw	0
 10863  002978  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10864                           
 10865                           ; BSR set to: 0
 10866  00297A  0012               	return	
 10867  00297C                     l5230:
 10868  00297C  90D8               	bcf	status,0,c
 10869  00297E  3622               	rlcf	__div_to_l_@quot,f,c
 10870  002980  3623               	rlcf	__div_to_l_@quot+1,f,c
 10871  002982  3624               	rlcf	__div_to_l_@quot+2,f,c
 10872  002984  3625               	rlcf	__div_to_l_@quot+3,f,c
 10873  002986  0627               	decf	__div_to_l_@exp1,f,c
 10874  002988                     l5232:
 10875  002988  5027               	movf	__div_to_l_@exp1,w,c
 10876  00298A  A4D8               	btfss	status,2,c
 10877  00298C  D7F7               	goto	l5230
 10878  00298E                     l734:
 10879  00298E  C022  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10880  002992  C023  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10881  002996  C024  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10882  00299A  C025  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10883  00299E  0012               	return		;funcret
 10884  0029A0                     __end_of__div_to_l_:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           indf0	equ	0xFEF
 10893                           postinc0	equ	0xFEE
 10894                           fsr0h	equ	0xFEA
 10895                           fsr0l	equ	0xFE9
 10896                           wreg	equ	0xFE8
 10897                           indf1	equ	0xFE7
 10898                           postdec1	equ	0xFE5
 10899                           fsr1h	equ	0xFE2
 10900                           fsr1l	equ	0xFE1
 10901                           indf2	equ	0xFDF
 10902                           postinc2	equ	0xFDE
 10903                           postdec2	equ	0xFDD
 10904                           fsr2h	equ	0xFDA
 10905                           fsr2l	equ	0xFD9
 10906                           status	equ	0xFD8
 10907                           
 10908 ;; *************** function ___lltoft *****************
 10909 ;; Defined at:
 10910 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  c               4   22[BANK0 ] unsigned long 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  exp             1   40[COMRAM] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  3   22[BANK0 ] float 
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0, cstack
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10924 ;;      Params:         0       4       0       0       0       0       0
 10925 ;;      Locals:         1       0       0       0       0       0       0
 10926 ;;      Temps:          4       0       0       0       0       0       0
 10927 ;;      Totals:         5       4       0       0       0       0       0
 10928 ;;Total ram usage:        9 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    4
 10931 ;; This function calls:
 10932 ;;		___ftpack
 10933 ;; This function is called by:
 10934 ;;		_sprintf
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text41
 10939  0036B6                     __ptext41:
 10940                           	opt stack 0
 10941  0036B6                     ___lltoft:
 10942                           	opt stack 23
 10943                           
 10944                           ;incstack = 0
 10945  0036B6  0E8E               	movlw	142
 10946  0036B8  6E29               	movwf	___lltoft@exp,c
 10947  0036BA  D007               	goto	l5306
 10948  0036BC                     l5304:
 10949  0036BC  0100               	movlb	0	; () banked
 10950  0036BE  90D8               	bcf	status,0,c
 10951  0036C0  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10952  0036C2  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10953  0036C4  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10954  0036C6  3376               	rrcf	___lltoft@c& (0+255),f,b
 10955  0036C8  2A29               	incf	___lltoft@exp,f,c
 10956  0036CA                     l5306:
 10957  0036CA  0E00               	movlw	0
 10958  0036CC  0100               	movlb	0	; () banked
 10959  0036CE  1576               	andwf	___lltoft@c& (0+255),w,b
 10960  0036D0  6E25               	movwf	??___lltoft& (0+255),c
 10961  0036D2  0E00               	movlw	0
 10962  0036D4  0100               	movlb	0	; () banked
 10963  0036D6  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 10964  0036D8  6E26               	movwf	(??___lltoft+1)& (0+255),c
 10965  0036DA  0E00               	movlw	0
 10966  0036DC  0100               	movlb	0	; () banked
 10967  0036DE  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 10968  0036E0  6E27               	movwf	(??___lltoft+2)& (0+255),c
 10969  0036E2  0EFF               	movlw	255
 10970  0036E4  0100               	movlb	0	; () banked
 10971  0036E6  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 10972  0036E8  6E28               	movwf	(??___lltoft+3)& (0+255),c
 10973  0036EA  5025               	movf	??___lltoft,w,c
 10974  0036EC  1026               	iorwf	??___lltoft+1,w,c
 10975  0036EE  1027               	iorwf	??___lltoft+2,w,c
 10976  0036F0  1028               	iorwf	??___lltoft+3,w,c
 10977  0036F2  A4D8               	btfss	status,2,c
 10978  0036F4  D7E3               	goto	l5304
 10979                           
 10980                           ; BSR set to: 0
 10981                           
 10982                           ; BSR set to: 0
 10983  0036F6  C076  F071         	movff	___lltoft@c,___ftpack@arg
 10984  0036FA  C077  F072         	movff	___lltoft@c+1,___ftpack@arg+1
 10985  0036FE  C078  F073         	movff	___lltoft@c+2,___ftpack@arg+2
 10986  003702  C029  F074         	movff	___lltoft@exp,___ftpack@exp
 10987  003706  0E00               	movlw	0
 10988  003708  0100               	movlb	0	; () banked
 10989  00370A  6F75               	movwf	___ftpack@sign& (0+255),b
 10990  00370C  EC44  F017         	call	___ftpack	;wreg free
 10991  003710  C071  F076         	movff	?___ftpack,?___lltoft
 10992  003714  C072  F077         	movff	?___ftpack+1,?___lltoft+1
 10993  003718  C073  F078         	movff	?___ftpack+2,?___lltoft+2
 10994  00371C  0012               	return	
 10995  00371E                     __end_of___lltoft:
 10996                           	opt stack 0
 10997                           tblptru	equ	0xFF8
 10998                           tblptrh	equ	0xFF7
 10999                           tblptrl	equ	0xFF6
 11000                           tablat	equ	0xFF5
 11001                           prodh	equ	0xFF4
 11002                           prodl	equ	0xFF3
 11003                           indf0	equ	0xFEF
 11004                           postinc0	equ	0xFEE
 11005                           fsr0h	equ	0xFEA
 11006                           fsr0l	equ	0xFE9
 11007                           wreg	equ	0xFE8
 11008                           indf1	equ	0xFE7
 11009                           postdec1	equ	0xFE5
 11010                           fsr1h	equ	0xFE2
 11011                           fsr1l	equ	0xFE1
 11012                           indf2	equ	0xFDF
 11013                           postinc2	equ	0xFDE
 11014                           postdec2	equ	0xFDD
 11015                           fsr2h	equ	0xFDA
 11016                           fsr2l	equ	0xFD9
 11017                           status	equ	0xFD8
 11018                           
 11019 ;; *************** function ___llmod *****************
 11020 ;; Defined at:
 11021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  dividend        4   25[BANK0 ] unsigned long 
 11024 ;;  divisor         4   29[BANK0 ] unsigned long 
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  counter         1   38[COMRAM] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  4   25[BANK0 ] unsigned long 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11036 ;;      Params:         0       8       0       0       0       0       0
 11037 ;;      Locals:         1       0       0       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0
 11039 ;;      Totals:         1       8       0       0       0       0       0
 11040 ;;Total ram usage:        9 bytes
 11041 ;; Hardware stack levels used:    1
 11042 ;; Hardware stack levels required when called:    3
 11043 ;; This function calls:
 11044 ;;		Nothing
 11045 ;; This function is called by:
 11046 ;;		_sprintf
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text42
 11051  00352C                     __ptext42:
 11052                           	opt stack 0
 11053  00352C                     ___llmod:
 11054                           	opt stack 24
 11055                           
 11056                           ;incstack = 0
 11057  00352C  0100               	movlb	0	; () banked
 11058  00352E  517D               	movf	___llmod@divisor& (0+255),w,b
 11059  003530  0100               	movlb	0	; () banked
 11060  003532  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11061  003534  0100               	movlb	0	; () banked
 11062  003536  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11063  003538  0100               	movlb	0	; () banked
 11064  00353A  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11065  00353C  B4D8               	btfsc	status,2,c
 11066  00353E  D037               	goto	l923
 11067                           
 11068                           ; BSR set to: 0
 11069  003540  0E01               	movlw	1
 11070  003542  6E27               	movwf	___llmod@counter,c
 11071  003544  D007               	goto	l5292
 11072  003546                     l5290:
 11073                           
 11074                           ; BSR set to: 0
 11075  003546  0100               	movlb	0	; () banked
 11076  003548  90D8               	bcf	status,0,c
 11077  00354A  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11078  00354C  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11079  00354E  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11080  003550  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11081  003552  2A27               	incf	___llmod@counter,f,c
 11082  003554                     l5292:
 11083                           
 11084                           ; BSR set to: 0
 11085  003554  0100               	movlb	0	; () banked
 11086  003556  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11087  003558  D7F6               	goto	l5290
 11088  00355A                     l5294:
 11089                           
 11090                           ; BSR set to: 0
 11091  00355A  0100               	movlb	0	; () banked
 11092  00355C  517D               	movf	___llmod@divisor& (0+255),w,b
 11093  00355E  0100               	movlb	0	; () banked
 11094  003560  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11095  003562  0100               	movlb	0	; () banked
 11096  003564  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11097  003566  0100               	movlb	0	; () banked
 11098  003568  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11099  00356A  0100               	movlb	0	; () banked
 11100  00356C  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11101  00356E  0100               	movlb	0	; () banked
 11102  003570  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11103  003572  0100               	movlb	0	; () banked
 11104  003574  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11105  003576  0100               	movlb	0	; () banked
 11106  003578  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11107  00357A  A0D8               	btfss	status,0,c
 11108  00357C  D010               	goto	l5298
 11109                           
 11110                           ; BSR set to: 0
 11111  00357E  0100               	movlb	0	; () banked
 11112  003580  517D               	movf	___llmod@divisor& (0+255),w,b
 11113  003582  0100               	movlb	0	; () banked
 11114  003584  5F79               	subwf	___llmod@dividend& (0+255),f,b
 11115  003586  0100               	movlb	0	; () banked
 11116  003588  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11117  00358A  0100               	movlb	0	; () banked
 11118  00358C  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11119  00358E  0100               	movlb	0	; () banked
 11120  003590  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11121  003592  0100               	movlb	0	; () banked
 11122  003594  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11123  003596  0100               	movlb	0	; () banked
 11124  003598  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11125  00359A  0100               	movlb	0	; () banked
 11126  00359C  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11127  00359E                     l5298:
 11128                           
 11129                           ; BSR set to: 0
 11130  00359E  0100               	movlb	0	; () banked
 11131  0035A0  90D8               	bcf	status,0,c
 11132  0035A2  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11133  0035A4  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11134  0035A6  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11135  0035A8  337D               	rrcf	___llmod@divisor& (0+255),f,b
 11136                           
 11137                           ; BSR set to: 0
 11138  0035AA  2E27               	decfsz	___llmod@counter,f,c
 11139  0035AC  D7D6               	goto	l5294
 11140  0035AE                     l923:
 11141                           
 11142                           ; BSR set to: 0
 11143  0035AE  C079  F079         	movff	___llmod@dividend,?___llmod
 11144  0035B2  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 11145  0035B6  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 11146  0035BA  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 11147                           
 11148                           ; BSR set to: 0
 11149  0035BE  0012               	return		;funcret
 11150  0035C0                     __end_of___llmod:
 11151                           	opt stack 0
 11152                           tblptru	equ	0xFF8
 11153                           tblptrh	equ	0xFF7
 11154                           tblptrl	equ	0xFF6
 11155                           tablat	equ	0xFF5
 11156                           prodh	equ	0xFF4
 11157                           prodl	equ	0xFF3
 11158                           indf0	equ	0xFEF
 11159                           postinc0	equ	0xFEE
 11160                           fsr0h	equ	0xFEA
 11161                           fsr0l	equ	0xFE9
 11162                           wreg	equ	0xFE8
 11163                           indf1	equ	0xFE7
 11164                           postdec1	equ	0xFE5
 11165                           fsr1h	equ	0xFE2
 11166                           fsr1l	equ	0xFE1
 11167                           indf2	equ	0xFDF
 11168                           postinc2	equ	0xFDE
 11169                           postdec2	equ	0xFDD
 11170                           fsr2h	equ	0xFDA
 11171                           fsr2l	equ	0xFD9
 11172                           status	equ	0xFD8
 11173                           
 11174 ;; *************** function ___lldiv *****************
 11175 ;; Defined at:
 11176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  dividend        4   17[BANK0 ] unsigned long 
 11179 ;;  divisor         4   21[BANK0 ] unsigned long 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  quotient        4   33[COMRAM] unsigned long 
 11182 ;;  counter         1   37[COMRAM] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  4   17[BANK0 ] unsigned long 
 11185 ;; Registers used:
 11186 ;;		wreg, status,2, status,0
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11192 ;;      Params:         0       8       0       0       0       0       0
 11193 ;;      Locals:         5       0       0       0       0       0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0
 11195 ;;      Totals:         5       8       0       0       0       0       0
 11196 ;;Total ram usage:       13 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    3
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_sprintf
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text43
 11207  003342                     __ptext43:
 11208                           	opt stack 0
 11209  003342                     ___lldiv:
 11210                           	opt stack 24
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;incstack = 0
 11214  003342  0E00               	movlw	0
 11215  003344  6E22               	movwf	___lldiv@quotient,c
 11216  003346  0E00               	movlw	0
 11217  003348  6E23               	movwf	___lldiv@quotient+1,c
 11218  00334A  0E00               	movlw	0
 11219  00334C  6E24               	movwf	___lldiv@quotient+2,c
 11220  00334E  0E00               	movlw	0
 11221  003350  6E25               	movwf	___lldiv@quotient+3,c
 11222  003352  0100               	movlb	0	; () banked
 11223  003354  5175               	movf	___lldiv@divisor& (0+255),w,b
 11224  003356  0100               	movlb	0	; () banked
 11225  003358  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11226  00335A  0100               	movlb	0	; () banked
 11227  00335C  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11228  00335E  0100               	movlb	0	; () banked
 11229  003360  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11230  003362  B4D8               	btfsc	status,2,c
 11231  003364  D03D               	goto	l913
 11232                           
 11233                           ; BSR set to: 0
 11234  003366  0E01               	movlw	1
 11235  003368  6E26               	movwf	___lldiv@counter,c
 11236  00336A  D007               	goto	l5272
 11237  00336C                     l5270:
 11238                           
 11239                           ; BSR set to: 0
 11240  00336C  0100               	movlb	0	; () banked
 11241  00336E  90D8               	bcf	status,0,c
 11242  003370  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11243  003372  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11244  003374  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11245  003376  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11246  003378  2A26               	incf	___lldiv@counter,f,c
 11247  00337A                     l5272:
 11248                           
 11249                           ; BSR set to: 0
 11250  00337A  0100               	movlb	0	; () banked
 11251  00337C  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11252  00337E  D7F6               	goto	l5270
 11253  003380                     l5274:
 11254                           
 11255                           ; BSR set to: 0
 11256  003380  90D8               	bcf	status,0,c
 11257  003382  3622               	rlcf	___lldiv@quotient,f,c
 11258  003384  3623               	rlcf	___lldiv@quotient+1,f,c
 11259  003386  3624               	rlcf	___lldiv@quotient+2,f,c
 11260  003388  3625               	rlcf	___lldiv@quotient+3,f,c
 11261                           
 11262                           ; BSR set to: 0
 11263  00338A  0100               	movlb	0	; () banked
 11264  00338C  5175               	movf	___lldiv@divisor& (0+255),w,b
 11265  00338E  0100               	movlb	0	; () banked
 11266  003390  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11267  003392  0100               	movlb	0	; () banked
 11268  003394  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11269  003396  0100               	movlb	0	; () banked
 11270  003398  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11271  00339A  0100               	movlb	0	; () banked
 11272  00339C  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11273  00339E  0100               	movlb	0	; () banked
 11274  0033A0  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11275  0033A2  0100               	movlb	0	; () banked
 11276  0033A4  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11277  0033A6  0100               	movlb	0	; () banked
 11278  0033A8  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11279  0033AA  A0D8               	btfss	status,0,c
 11280  0033AC  D011               	goto	l5282
 11281                           
 11282                           ; BSR set to: 0
 11283  0033AE  0100               	movlb	0	; () banked
 11284  0033B0  5175               	movf	___lldiv@divisor& (0+255),w,b
 11285  0033B2  0100               	movlb	0	; () banked
 11286  0033B4  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11287  0033B6  0100               	movlb	0	; () banked
 11288  0033B8  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11289  0033BA  0100               	movlb	0	; () banked
 11290  0033BC  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11291  0033BE  0100               	movlb	0	; () banked
 11292  0033C0  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11293  0033C2  0100               	movlb	0	; () banked
 11294  0033C4  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11295  0033C6  0100               	movlb	0	; () banked
 11296  0033C8  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11297  0033CA  0100               	movlb	0	; () banked
 11298  0033CC  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11299                           
 11300                           ; BSR set to: 0
 11301  0033CE  8022               	bsf	___lldiv@quotient,0,c
 11302  0033D0                     l5282:
 11303                           
 11304                           ; BSR set to: 0
 11305  0033D0  0100               	movlb	0	; () banked
 11306  0033D2  90D8               	bcf	status,0,c
 11307  0033D4  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11308  0033D6  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11309  0033D8  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11310  0033DA  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11311                           
 11312                           ; BSR set to: 0
 11313  0033DC  2E26               	decfsz	___lldiv@counter,f,c
 11314  0033DE  D7D0               	goto	l5274
 11315  0033E0                     l913:
 11316                           
 11317                           ; BSR set to: 0
 11318  0033E0  C022  F071         	movff	___lldiv@quotient,?___lldiv
 11319  0033E4  C023  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11320  0033E8  C024  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11321  0033EC  C025  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11322                           
 11323                           ; BSR set to: 0
 11324  0033F0  0012               	return		;funcret
 11325  0033F2                     __end_of___lldiv:
 11326                           	opt stack 0
 11327                           tblptru	equ	0xFF8
 11328                           tblptrh	equ	0xFF7
 11329                           tblptrl	equ	0xFF6
 11330                           tablat	equ	0xFF5
 11331                           prodh	equ	0xFF4
 11332                           prodl	equ	0xFF3
 11333                           indf0	equ	0xFEF
 11334                           postinc0	equ	0xFEE
 11335                           fsr0h	equ	0xFEA
 11336                           fsr0l	equ	0xFE9
 11337                           wreg	equ	0xFE8
 11338                           indf1	equ	0xFE7
 11339                           postdec1	equ	0xFE5
 11340                           fsr1h	equ	0xFE2
 11341                           fsr1l	equ	0xFE1
 11342                           indf2	equ	0xFDF
 11343                           postinc2	equ	0xFDE
 11344                           postdec2	equ	0xFDD
 11345                           fsr2h	equ	0xFDA
 11346                           fsr2l	equ	0xFD9
 11347                           status	equ	0xFD8
 11348                           
 11349 ;; *************** function ___fttol *****************
 11350 ;; Defined at:
 11351 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  f1              3   48[BANK0 ] float 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  lval            4   58[BANK0 ] unsigned long 
 11356 ;;  exp1            1   62[BANK0 ] unsigned char 
 11357 ;;  sign1           1   57[BANK0 ] unsigned char 
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  4   48[BANK0 ] long 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11367 ;;      Params:         0       4       0       0       0       0       0
 11368 ;;      Locals:         0       6       0       0       0       0       0
 11369 ;;      Temps:          0       5       0       0       0       0       0
 11370 ;;      Totals:         0      15       0       0       0       0       0
 11371 ;;Total ram usage:       15 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:    3
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_util_getSolarCurrent
 11378 ;;		_util_getBatteryCurrent
 11379 ;;		_sprintf
 11380 ;; This function uses a non-reentrant model
 11381 ;;
 11382                           
 11383                           	psect	text44
 11384  002AF2                     __ptext44:
 11385                           	opt stack 0
 11386  002AF2                     ___fttol:
 11387                           	opt stack 25
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;incstack = 0
 11391  002AF2  C092  F094         	movff	___fttol@f1+2,??___fttol
 11392  002AF6  0100               	movlb	0	; () banked
 11393  002AF8  6B95               	clrf	(??___fttol+1)& (0+255),b
 11394  002AFA  6B96               	clrf	(??___fttol+2)& (0+255),b
 11395  002AFC  0100               	movlb	0	; () banked
 11396  002AFE  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11397  002B00  0100               	movlb	0	; () banked
 11398  002B02  3794               	rlcf	??___fttol& (0+255),f,b
 11399  002B04  E301               	bnc	u3121
 11400  002B06  8195               	bsf	(??___fttol+1)& (0+255),0,b
 11401  002B08                     u3121:
 11402  002B08  0100               	movlb	0	; () banked
 11403  002B0A  5194               	movf	??___fttol& (0+255),w,b
 11404  002B0C  0100               	movlb	0	; () banked
 11405  002B0E  6F9E               	movwf	___fttol@exp1& (0+255),b
 11406  002B10  0100               	movlb	0	; () banked
 11407  002B12  519E               	movf	___fttol@exp1& (0+255),w,b
 11408  002B14  A4D8               	btfss	status,2,c
 11409  002B16  D00A               	goto	l3544
 11410                           
 11411                           ; BSR set to: 0
 11412  002B18  0E00               	movlw	0
 11413  002B1A  0100               	movlb	0	; () banked
 11414  002B1C  6F90               	movwf	?___fttol& (0+255),b
 11415  002B1E  0E00               	movlw	0
 11416  002B20  6F91               	movwf	(?___fttol+1)& (0+255),b
 11417  002B22  0E00               	movlw	0
 11418  002B24  6F92               	movwf	(?___fttol+2)& (0+255),b
 11419  002B26  0E00               	movlw	0
 11420  002B28  6F93               	movwf	(?___fttol+3)& (0+255),b
 11421                           
 11422                           ; BSR set to: 0
 11423  002B2A  0012               	return	
 11424  002B2C                     l3544:
 11425                           
 11426                           ; BSR set to: 0
 11427  002B2C  0E17               	movlw	23
 11428  002B2E  0100               	movlb	0	; () banked
 11429  002B30  6F94               	movwf	??___fttol& (0+255),b
 11430  002B32  C090  F095         	movff	___fttol@f1,??___fttol+1
 11431  002B36  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 11432  002B3A  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 11433  002B3E  0100               	movlb	0	; () banked
 11434  002B40  2994               	incf	??___fttol& (0+255),w,b
 11435  002B42  0100               	movlb	0	; () banked
 11436  002B44  6F98               	movwf	(??___fttol+4)& (0+255),b
 11437  002B46  D005               	goto	u3140
 11438  002B48                     u3145:
 11439  002B48  0100               	movlb	0	; () banked
 11440  002B4A  90D8               	bcf	status,0,c
 11441  002B4C  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 11442  002B4E  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 11443  002B50  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 11444  002B52                     u3140:
 11445  002B52  0100               	movlb	0	; () banked
 11446  002B54  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 11447  002B56  D7F8               	goto	u3145
 11448  002B58  0100               	movlb	0	; () banked
 11449  002B5A  5195               	movf	(??___fttol+1)& (0+255),w,b
 11450  002B5C  0100               	movlb	0	; () banked
 11451  002B5E  6F99               	movwf	___fttol@sign1& (0+255),b
 11452                           
 11453                           ; BSR set to: 0
 11454  002B60  0100               	movlb	0	; () banked
 11455  002B62  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 11456                           
 11457                           ; BSR set to: 0
 11458  002B64  0EFF               	movlw	255
 11459  002B66  0100               	movlb	0	; () banked
 11460  002B68  1790               	andwf	___fttol@f1& (0+255),f,b
 11461  002B6A  0EFF               	movlw	255
 11462  002B6C  0100               	movlb	0	; () banked
 11463  002B6E  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 11464  002B70  0E00               	movlw	0
 11465  002B72  0100               	movlb	0	; () banked
 11466  002B74  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 11467                           
 11468                           ; BSR set to: 0
 11469  002B76  0100               	movlb	0	; () banked
 11470  002B78  5190               	movf	___fttol@f1& (0+255),w,b
 11471  002B7A  0100               	movlb	0	; () banked
 11472  002B7C  6F9A               	movwf	___fttol@lval& (0+255),b
 11473  002B7E  0100               	movlb	0	; () banked
 11474  002B80  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 11475  002B82  0100               	movlb	0	; () banked
 11476  002B84  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 11477  002B86  0100               	movlb	0	; () banked
 11478  002B88  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 11479  002B8A  0100               	movlb	0	; () banked
 11480  002B8C  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 11481  002B8E  0100               	movlb	0	; () banked
 11482  002B90  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 11483                           
 11484                           ; BSR set to: 0
 11485  002B92  0E8E               	movlw	142
 11486  002B94  0100               	movlb	0	; () banked
 11487  002B96  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 11488                           
 11489                           ; BSR set to: 0
 11490  002B98  0100               	movlb	0	; () banked
 11491  002B9A  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 11492  002B9C  D01A               	goto	l3566
 11493                           
 11494                           ; BSR set to: 0
 11495  002B9E  0100               	movlb	0	; () banked
 11496  002BA0  519E               	movf	___fttol@exp1& (0+255),w,b
 11497  002BA2  0A80               	xorlw	128
 11498  002BA4  0F8F               	addlw	143
 11499  002BA6  B0D8               	btfsc	status,0,c
 11500  002BA8  D00A               	goto	l3562
 11501                           
 11502                           ; BSR set to: 0
 11503  002BAA  0E00               	movlw	0
 11504  002BAC  0100               	movlb	0	; () banked
 11505  002BAE  6F90               	movwf	?___fttol& (0+255),b
 11506  002BB0  0E00               	movlw	0
 11507  002BB2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11508  002BB4  0E00               	movlw	0
 11509  002BB6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11510  002BB8  0E00               	movlw	0
 11511  002BBA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11512                           
 11513                           ; BSR set to: 0
 11514  002BBC  0012               	return	
 11515  002BBE                     l3562:
 11516                           
 11517                           ; BSR set to: 0
 11518  002BBE  0100               	movlb	0	; () banked
 11519  002BC0  90D8               	bcf	status,0,c
 11520  002BC2  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11521  002BC4  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11522  002BC6  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11523  002BC8  339A               	rrcf	___fttol@lval& (0+255),f,b
 11524                           
 11525                           ; BSR set to: 0
 11526  002BCA  0100               	movlb	0	; () banked
 11527  002BCC  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 11528  002BCE  D7F7               	goto	l3562
 11529                           
 11530                           ; BSR set to: 0
 11531  002BD0  D01B               	goto	l3576
 11532  002BD2                     l3566:
 11533                           
 11534                           ; BSR set to: 0
 11535  002BD2  0E17               	movlw	23
 11536  002BD4  0100               	movlb	0	; () banked
 11537  002BD6  659E               	cpfsgt	___fttol@exp1& (0+255),b
 11538  002BD8  D012               	goto	l3574
 11539                           
 11540                           ; BSR set to: 0
 11541  002BDA  0E00               	movlw	0
 11542  002BDC  0100               	movlb	0	; () banked
 11543  002BDE  6F90               	movwf	?___fttol& (0+255),b
 11544  002BE0  0E00               	movlw	0
 11545  002BE2  6F91               	movwf	(?___fttol+1)& (0+255),b
 11546  002BE4  0E00               	movlw	0
 11547  002BE6  6F92               	movwf	(?___fttol+2)& (0+255),b
 11548  002BE8  0E00               	movlw	0
 11549  002BEA  6F93               	movwf	(?___fttol+3)& (0+255),b
 11550                           
 11551                           ; BSR set to: 0
 11552  002BEC  0012               	return	
 11553  002BEE                     l3572:
 11554                           
 11555                           ; BSR set to: 0
 11556  002BEE  0100               	movlb	0	; () banked
 11557  002BF0  90D8               	bcf	status,0,c
 11558  002BF2  379A               	rlcf	___fttol@lval& (0+255),f,b
 11559  002BF4  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11560  002BF6  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11561  002BF8  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11562  002BFA  0100               	movlb	0	; () banked
 11563  002BFC  079E               	decf	___fttol@exp1& (0+255),f,b
 11564  002BFE                     l3574:
 11565                           
 11566                           ; BSR set to: 0
 11567  002BFE  0100               	movlb	0	; () banked
 11568  002C00  519E               	movf	___fttol@exp1& (0+255),w,b
 11569  002C02  0100               	movlb	0	; () banked
 11570  002C04  A4D8               	btfss	status,2,c
 11571  002C06  D7F3               	goto	l3572
 11572  002C08                     l3576:
 11573                           
 11574                           ; BSR set to: 0
 11575  002C08  0100               	movlb	0	; () banked
 11576  002C0A  5199               	movf	___fttol@sign1& (0+255),w,b
 11577  002C0C  0100               	movlb	0	; () banked
 11578  002C0E  B4D8               	btfsc	status,2,c
 11579  002C10  D009               	goto	l3580
 11580                           
 11581                           ; BSR set to: 0
 11582  002C12  0100               	movlb	0	; () banked
 11583  002C14  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 11584  002C16  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 11585  002C18  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 11586  002C1A  6D9A               	negf	___fttol@lval& (0+255),b
 11587  002C1C  0E00               	movlw	0
 11588  002C1E  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11589  002C20  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11590  002C22  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11591  002C24                     l3580:
 11592                           
 11593                           ; BSR set to: 0
 11594  002C24  C09A  F090         	movff	___fttol@lval,?___fttol
 11595  002C28  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 11596  002C2C  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 11597  002C30  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 11598  002C34  0012               	return	
 11599  002C36                     __end_of___fttol:
 11600                           	opt stack 0
 11601                           tblptru	equ	0xFF8
 11602                           tblptrh	equ	0xFF7
 11603                           tblptrl	equ	0xFF6
 11604                           tablat	equ	0xFF5
 11605                           prodh	equ	0xFF4
 11606                           prodl	equ	0xFF3
 11607                           indf0	equ	0xFEF
 11608                           postinc0	equ	0xFEE
 11609                           fsr0h	equ	0xFEA
 11610                           fsr0l	equ	0xFE9
 11611                           wreg	equ	0xFE8
 11612                           indf1	equ	0xFE7
 11613                           postdec1	equ	0xFE5
 11614                           fsr1h	equ	0xFE2
 11615                           fsr1l	equ	0xFE1
 11616                           indf2	equ	0xFDF
 11617                           postinc2	equ	0xFDE
 11618                           postdec2	equ	0xFDD
 11619                           fsr2h	equ	0xFDA
 11620                           fsr2l	equ	0xFD9
 11621                           status	equ	0xFD8
 11622                           
 11623 ;; *************** function ___ftsub *****************
 11624 ;; Defined at:
 11625 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  f1              3   63[BANK0 ] float 
 11628 ;;  f2              3   66[BANK0 ] float 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  3   63[BANK0 ] float 
 11633 ;; Registers used:
 11634 ;;		wreg, status,2, status,0, cstack
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11640 ;;      Params:         0       6       0       0       0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0
 11643 ;;      Totals:         0       6       0       0       0       0       0
 11644 ;;Total ram usage:        6 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:    5
 11647 ;; This function calls:
 11648 ;;		___ftadd
 11649 ;; This function is called by:
 11650 ;;		_sprintf
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text45
 11655  00382C                     __ptext45:
 11656                           	opt stack 0
 11657  00382C                     ___ftsub:
 11658                           	opt stack 22
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;incstack = 0
 11662  00382C  0100               	movlb	0	; () banked
 11663  00382E  51A2               	movf	___ftsub@f2& (0+255),w,b
 11664  003830  0100               	movlb	0	; () banked
 11665  003832  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11666  003834  0100               	movlb	0	; () banked
 11667  003836  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11668  003838  B4D8               	btfsc	status,2,c
 11669  00383A  D009               	goto	l5238
 11670                           
 11671                           ; BSR set to: 0
 11672  00383C  0E00               	movlw	0
 11673  00383E  0100               	movlb	0	; () banked
 11674  003840  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 11675  003842  0E00               	movlw	0
 11676  003844  0100               	movlb	0	; () banked
 11677  003846  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11678  003848  0E80               	movlw	128
 11679  00384A  0100               	movlb	0	; () banked
 11680  00384C  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11681  00384E                     l5238:
 11682                           
 11683                           ; BSR set to: 0
 11684  00384E  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 11685  003852  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 11686  003856  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 11687  00385A  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 11688  00385E  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 11689  003862  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 11690  003866  EC9A  F00F         	call	___ftadd	;wreg free
 11691  00386A  C093  F09F         	movff	?___ftadd,?___ftsub
 11692  00386E  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 11693  003872  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 11694  003876  0012               	return	
 11695  003878                     __end_of___ftsub:
 11696                           	opt stack 0
 11697                           tblptru	equ	0xFF8
 11698                           tblptrh	equ	0xFF7
 11699                           tblptrl	equ	0xFF6
 11700                           tablat	equ	0xFF5
 11701                           prodh	equ	0xFF4
 11702                           prodl	equ	0xFF3
 11703                           indf0	equ	0xFEF
 11704                           postinc0	equ	0xFEE
 11705                           fsr0h	equ	0xFEA
 11706                           fsr0l	equ	0xFE9
 11707                           wreg	equ	0xFE8
 11708                           indf1	equ	0xFE7
 11709                           postdec1	equ	0xFE5
 11710                           fsr1h	equ	0xFE2
 11711                           fsr1l	equ	0xFE1
 11712                           indf2	equ	0xFDF
 11713                           postinc2	equ	0xFDE
 11714                           postdec2	equ	0xFDD
 11715                           fsr2h	equ	0xFDA
 11716                           fsr2l	equ	0xFD9
 11717                           status	equ	0xFD8
 11718                           
 11719 ;; *************** function ___ftadd *****************
 11720 ;; Defined at:
 11721 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  f1              3   51[BANK0 ] float 
 11724 ;;  f2              3   54[BANK0 ] float 
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;  exp1            1   62[BANK0 ] unsigned char 
 11727 ;;  exp2            1   61[BANK0 ] unsigned char 
 11728 ;;  sign            1   60[BANK0 ] unsigned char 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  3   51[BANK0 ] float 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11738 ;;      Params:         0       6       0       0       0       0       0
 11739 ;;      Locals:         0       3       0       0       0       0       0
 11740 ;;      Temps:          0       3       0       0       0       0       0
 11741 ;;      Totals:         0      12       0       0       0       0       0
 11742 ;;Total ram usage:       12 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    4
 11745 ;; This function calls:
 11746 ;;		___ftpack
 11747 ;; This function is called by:
 11748 ;;		_util_getTemperature
 11749 ;;		_sprintf
 11750 ;;		___ftsub
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text46
 11755  001F34                     __ptext46:
 11756                           	opt stack 0
 11757  001F34                     ___ftadd:
 11758                           	opt stack 24
 11759                           
 11760                           ;incstack = 0
 11761  001F34  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 11762  001F38  0100               	movlb	0	; () banked
 11763  001F3A  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11764  001F3C  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11765  001F3E  0100               	movlb	0	; () banked
 11766  001F40  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11767  001F42  0100               	movlb	0	; () banked
 11768  001F44  3799               	rlcf	??___ftadd& (0+255),f,b
 11769  001F46  E301               	bnc	u4571
 11770  001F48  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11771  001F4A                     u4571:
 11772  001F4A  0100               	movlb	0	; () banked
 11773  001F4C  5199               	movf	??___ftadd& (0+255),w,b
 11774  001F4E  0100               	movlb	0	; () banked
 11775  001F50  6F9E               	movwf	___ftadd@exp1& (0+255),b
 11776  001F52  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 11777  001F56  0100               	movlb	0	; () banked
 11778  001F58  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11779  001F5A  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11780  001F5C  0100               	movlb	0	; () banked
 11781  001F5E  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11782  001F60  0100               	movlb	0	; () banked
 11783  001F62  3799               	rlcf	??___ftadd& (0+255),f,b
 11784  001F64  E301               	bnc	u4581
 11785  001F66  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11786  001F68                     u4581:
 11787  001F68  0100               	movlb	0	; () banked
 11788  001F6A  5199               	movf	??___ftadd& (0+255),w,b
 11789  001F6C  0100               	movlb	0	; () banked
 11790  001F6E  6F9D               	movwf	___ftadd@exp2& (0+255),b
 11791                           
 11792                           ; BSR set to: 0
 11793  001F70  0100               	movlb	0	; () banked
 11794  001F72  519E               	movf	___ftadd@exp1& (0+255),w,b
 11795  001F74  0100               	movlb	0	; () banked
 11796  001F76  B4D8               	btfsc	status,2,c
 11797  001F78  D011               	goto	l789
 11798                           
 11799                           ; BSR set to: 0
 11800  001F7A  0100               	movlb	0	; () banked
 11801  001F7C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11802  001F7E  0100               	movlb	0	; () banked
 11803  001F80  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11804  001F82  B0D8               	btfsc	status,0,c
 11805  001F84  D012               	goto	l4786
 11806                           
 11807                           ; BSR set to: 0
 11808  001F86  0100               	movlb	0	; () banked
 11809  001F88  519E               	movf	___ftadd@exp1& (0+255),w,b
 11810  001F8A  0800               	sublw	0
 11811  001F8C  0100               	movlb	0	; () banked
 11812  001F8E  259D               	addwf	___ftadd@exp2& (0+255),w,b
 11813  001F90  0100               	movlb	0	; () banked
 11814  001F92  6F99               	movwf	??___ftadd& (0+255),b
 11815  001F94  0E18               	movlw	24
 11816  001F96  0100               	movlb	0	; () banked
 11817  001F98  6599               	cpfsgt	??___ftadd& (0+255),b
 11818  001F9A  D007               	goto	l4786
 11819  001F9C                     l789:
 11820                           
 11821                           ; BSR set to: 0
 11822  001F9C  C096  F093         	movff	___ftadd@f2,?___ftadd
 11823  001FA0  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 11824  001FA4  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 11825  001FA8  0012               	return	
 11826  001FAA                     l4786:
 11827                           
 11828                           ; BSR set to: 0
 11829  001FAA  0100               	movlb	0	; () banked
 11830  001FAC  519D               	movf	___ftadd@exp2& (0+255),w,b
 11831  001FAE  0100               	movlb	0	; () banked
 11832  001FB0  B4D8               	btfsc	status,2,c
 11833  001FB2  D011               	goto	l793
 11834                           
 11835                           ; BSR set to: 0
 11836  001FB4  0100               	movlb	0	; () banked
 11837  001FB6  519E               	movf	___ftadd@exp1& (0+255),w,b
 11838  001FB8  0100               	movlb	0	; () banked
 11839  001FBA  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11840  001FBC  B0D8               	btfsc	status,0,c
 11841  001FBE  D012               	goto	l4792
 11842                           
 11843                           ; BSR set to: 0
 11844  001FC0  0100               	movlb	0	; () banked
 11845  001FC2  519D               	movf	___ftadd@exp2& (0+255),w,b
 11846  001FC4  0800               	sublw	0
 11847  001FC6  0100               	movlb	0	; () banked
 11848  001FC8  259E               	addwf	___ftadd@exp1& (0+255),w,b
 11849  001FCA  0100               	movlb	0	; () banked
 11850  001FCC  6F99               	movwf	??___ftadd& (0+255),b
 11851  001FCE  0E18               	movlw	24
 11852  001FD0  0100               	movlb	0	; () banked
 11853  001FD2  6599               	cpfsgt	??___ftadd& (0+255),b
 11854  001FD4  D007               	goto	l4792
 11855  001FD6                     l793:
 11856                           
 11857                           ; BSR set to: 0
 11858  001FD6  C093  F093         	movff	___ftadd@f1,?___ftadd
 11859  001FDA  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 11860  001FDE  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 11861  001FE2  0012               	return	
 11862  001FE4                     l4792:
 11863                           
 11864                           ; BSR set to: 0
 11865  001FE4  0E06               	movlw	6
 11866  001FE6  0100               	movlb	0	; () banked
 11867  001FE8  6F9C               	movwf	___ftadd@sign& (0+255),b
 11868                           
 11869                           ; BSR set to: 0
 11870  001FEA  0100               	movlb	0	; () banked
 11871  001FEC  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11872  001FEE  D002               	goto	l4798
 11873                           
 11874                           ; BSR set to: 0
 11875  001FF0  0100               	movlb	0	; () banked
 11876  001FF2  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 11877  001FF4                     l4798:
 11878                           
 11879                           ; BSR set to: 0
 11880  001FF4  0100               	movlb	0	; () banked
 11881  001FF6  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11882  001FF8  D002               	goto	l795
 11883                           
 11884                           ; BSR set to: 0
 11885  001FFA  0100               	movlb	0	; () banked
 11886  001FFC  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 11887  001FFE                     l795:
 11888                           
 11889                           ; BSR set to: 0
 11890  001FFE  0100               	movlb	0	; () banked
 11891  002000  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11892                           
 11893                           ; BSR set to: 0
 11894  002002  0EFF               	movlw	255
 11895  002004  0100               	movlb	0	; () banked
 11896  002006  1793               	andwf	___ftadd@f1& (0+255),f,b
 11897  002008  0EFF               	movlw	255
 11898  00200A  0100               	movlb	0	; () banked
 11899  00200C  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11900  00200E  0E00               	movlw	0
 11901  002010  0100               	movlb	0	; () banked
 11902  002012  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11903  002014  0100               	movlb	0	; () banked
 11904  002016  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11905                           
 11906                           ; BSR set to: 0
 11907  002018  0EFF               	movlw	255
 11908  00201A  0100               	movlb	0	; () banked
 11909  00201C  1796               	andwf	___ftadd@f2& (0+255),f,b
 11910  00201E  0EFF               	movlw	255
 11911  002020  0100               	movlb	0	; () banked
 11912  002022  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11913  002024  0E00               	movlw	0
 11914  002026  0100               	movlb	0	; () banked
 11915  002028  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11916                           
 11917                           ; BSR set to: 0
 11918  00202A  0100               	movlb	0	; () banked
 11919  00202C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11920  00202E  0100               	movlb	0	; () banked
 11921  002030  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11922  002032  B0D8               	btfsc	status,0,c
 11923  002034  D025               	goto	l4818
 11924  002036                     l4808:
 11925                           
 11926                           ; BSR set to: 0
 11927  002036  0100               	movlb	0	; () banked
 11928  002038  90D8               	bcf	status,0,c
 11929  00203A  3796               	rlcf	___ftadd@f2& (0+255),f,b
 11930  00203C  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11931  00203E  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11932  002040  0100               	movlb	0	; () banked
 11933  002042  079D               	decf	___ftadd@exp2& (0+255),f,b
 11934                           
 11935                           ; BSR set to: 0
 11936  002044  0100               	movlb	0	; () banked
 11937  002046  519E               	movf	___ftadd@exp1& (0+255),w,b
 11938  002048  0100               	movlb	0	; () banked
 11939  00204A  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11940  00204C  B4D8               	btfsc	status,2,c
 11941  00204E  D011               	goto	l4816
 11942                           
 11943                           ; BSR set to: 0
 11944  002050  0100               	movlb	0	; () banked
 11945  002052  079C               	decf	___ftadd@sign& (0+255),f,b
 11946  002054  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11947  002058  0E07               	movlw	7
 11948  00205A  0100               	movlb	0	; () banked
 11949  00205C  1799               	andwf	??___ftadd& (0+255),f,b
 11950  00205E  B4D8               	btfsc	status,2,c
 11951  002060  D008               	goto	l4816
 11952  002062  D7E9               	goto	l4808
 11953  002064                     l4814:
 11954                           
 11955                           ; BSR set to: 0
 11956  002064  0100               	movlb	0	; () banked
 11957  002066  90D8               	bcf	status,0,c
 11958  002068  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11959  00206A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11960  00206C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 11961  00206E  0100               	movlb	0	; () banked
 11962  002070  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 11963  002072                     l4816:
 11964                           
 11965                           ; BSR set to: 0
 11966  002072  0100               	movlb	0	; () banked
 11967  002074  519D               	movf	___ftadd@exp2& (0+255),w,b
 11968  002076  0100               	movlb	0	; () banked
 11969  002078  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11970  00207A  B4D8               	btfsc	status,2,c
 11971  00207C  D02B               	goto	l804
 11972  00207E  D7F2               	goto	l4814
 11973  002080                     l4818:
 11974                           
 11975                           ; BSR set to: 0
 11976  002080  0100               	movlb	0	; () banked
 11977  002082  519E               	movf	___ftadd@exp1& (0+255),w,b
 11978  002084  0100               	movlb	0	; () banked
 11979  002086  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11980  002088  B0D8               	btfsc	status,0,c
 11981  00208A  D024               	goto	l804
 11982  00208C                     l4820:
 11983                           
 11984                           ; BSR set to: 0
 11985  00208C  0100               	movlb	0	; () banked
 11986  00208E  90D8               	bcf	status,0,c
 11987  002090  3793               	rlcf	___ftadd@f1& (0+255),f,b
 11988  002092  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11989  002094  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11990  002096  0100               	movlb	0	; () banked
 11991  002098  079E               	decf	___ftadd@exp1& (0+255),f,b
 11992                           
 11993                           ; BSR set to: 0
 11994  00209A  0100               	movlb	0	; () banked
 11995  00209C  519E               	movf	___ftadd@exp1& (0+255),w,b
 11996  00209E  0100               	movlb	0	; () banked
 11997  0020A0  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11998  0020A2  B4D8               	btfsc	status,2,c
 11999  0020A4  D011               	goto	l4828
 12000                           
 12001                           ; BSR set to: 0
 12002  0020A6  0100               	movlb	0	; () banked
 12003  0020A8  079C               	decf	___ftadd@sign& (0+255),f,b
 12004  0020AA  C09C  F099         	movff	___ftadd@sign,??___ftadd
 12005  0020AE  0E07               	movlw	7
 12006  0020B0  0100               	movlb	0	; () banked
 12007  0020B2  1799               	andwf	??___ftadd& (0+255),f,b
 12008  0020B4  B4D8               	btfsc	status,2,c
 12009  0020B6  D008               	goto	l4828
 12010  0020B8  D7E9               	goto	l4820
 12011  0020BA                     l4826:
 12012                           
 12013                           ; BSR set to: 0
 12014  0020BA  0100               	movlb	0	; () banked
 12015  0020BC  90D8               	bcf	status,0,c
 12016  0020BE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12017  0020C0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12018  0020C2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 12019  0020C4  0100               	movlb	0	; () banked
 12020  0020C6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 12021  0020C8                     l4828:
 12022                           
 12023                           ; BSR set to: 0
 12024  0020C8  0100               	movlb	0	; () banked
 12025  0020CA  519D               	movf	___ftadd@exp2& (0+255),w,b
 12026  0020CC  0100               	movlb	0	; () banked
 12027  0020CE  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 12028  0020D0  A4D8               	btfss	status,2,c
 12029  0020D2  D7F3               	goto	l4826
 12030  0020D4                     l804:
 12031                           
 12032                           ; BSR set to: 0
 12033  0020D4  0100               	movlb	0	; () banked
 12034  0020D6  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 12035  0020D8  D012               	goto	l813
 12036                           
 12037                           ; BSR set to: 0
 12038  0020DA  0EFF               	movlw	255
 12039  0020DC  0100               	movlb	0	; () banked
 12040  0020DE  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 12041  0020E0  0EFF               	movlw	255
 12042  0020E2  0100               	movlb	0	; () banked
 12043  0020E4  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12044  0020E6  0EFF               	movlw	255
 12045  0020E8  0100               	movlb	0	; () banked
 12046  0020EA  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12047  0020EC  0E01               	movlw	1
 12048  0020EE  0100               	movlb	0	; () banked
 12049  0020F0  2793               	addwf	___ftadd@f1& (0+255),f,b
 12050  0020F2  0E00               	movlw	0
 12051  0020F4  0100               	movlb	0	; () banked
 12052  0020F6  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12053  0020F8  0E00               	movlw	0
 12054  0020FA  0100               	movlb	0	; () banked
 12055  0020FC  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12056  0020FE                     l813:
 12057                           
 12058                           ; BSR set to: 0
 12059  0020FE  0100               	movlb	0	; () banked
 12060  002100  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 12061  002102  D012               	goto	l4834
 12062                           
 12063                           ; BSR set to: 0
 12064  002104  0EFF               	movlw	255
 12065  002106  0100               	movlb	0	; () banked
 12066  002108  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12067  00210A  0EFF               	movlw	255
 12068  00210C  0100               	movlb	0	; () banked
 12069  00210E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12070  002110  0EFF               	movlw	255
 12071  002112  0100               	movlb	0	; () banked
 12072  002114  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12073  002116  0E01               	movlw	1
 12074  002118  0100               	movlb	0	; () banked
 12075  00211A  2796               	addwf	___ftadd@f2& (0+255),f,b
 12076  00211C  0E00               	movlw	0
 12077  00211E  0100               	movlb	0	; () banked
 12078  002120  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12079  002122  0E00               	movlw	0
 12080  002124  0100               	movlb	0	; () banked
 12081  002126  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12082  002128                     l4834:
 12083                           
 12084                           ; BSR set to: 0
 12085  002128  0E00               	movlw	0
 12086  00212A  0100               	movlb	0	; () banked
 12087  00212C  6F9C               	movwf	___ftadd@sign& (0+255),b
 12088                           
 12089                           ; BSR set to: 0
 12090  00212E  0100               	movlb	0	; () banked
 12091  002130  5193               	movf	___ftadd@f1& (0+255),w,b
 12092  002132  0100               	movlb	0	; () banked
 12093  002134  2796               	addwf	___ftadd@f2& (0+255),f,b
 12094  002136  0100               	movlb	0	; () banked
 12095  002138  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 12096  00213A  0100               	movlb	0	; () banked
 12097  00213C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12098  00213E  0100               	movlb	0	; () banked
 12099  002140  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 12100  002142  0100               	movlb	0	; () banked
 12101  002144  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12102                           
 12103                           ; BSR set to: 0
 12104  002146  0100               	movlb	0	; () banked
 12105  002148  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12106  00214A  D015               	goto	l4844
 12107                           
 12108                           ; BSR set to: 0
 12109  00214C  0EFF               	movlw	255
 12110  00214E  0100               	movlb	0	; () banked
 12111  002150  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12112  002152  0EFF               	movlw	255
 12113  002154  0100               	movlb	0	; () banked
 12114  002156  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12115  002158  0EFF               	movlw	255
 12116  00215A  0100               	movlb	0	; () banked
 12117  00215C  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12118  00215E  0E01               	movlw	1
 12119  002160  0100               	movlb	0	; () banked
 12120  002162  2796               	addwf	___ftadd@f2& (0+255),f,b
 12121  002164  0E00               	movlw	0
 12122  002166  0100               	movlb	0	; () banked
 12123  002168  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12124  00216A  0E00               	movlw	0
 12125  00216C  0100               	movlb	0	; () banked
 12126  00216E  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12127                           
 12128                           ; BSR set to: 0
 12129  002170  0E01               	movlw	1
 12130  002172  0100               	movlb	0	; () banked
 12131  002174  6F9C               	movwf	___ftadd@sign& (0+255),b
 12132  002176                     l4844:
 12133                           
 12134                           ; BSR set to: 0
 12135  002176  C096  F071         	movff	___ftadd@f2,___ftpack@arg
 12136  00217A  C097  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
 12137  00217E  C098  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
 12138  002182  C09E  F074         	movff	___ftadd@exp1,___ftpack@exp
 12139  002186  C09C  F075         	movff	___ftadd@sign,___ftpack@sign
 12140  00218A  EC44  F017         	call	___ftpack	;wreg free
 12141  00218E  C071  F093         	movff	?___ftpack,?___ftadd
 12142  002192  C072  F094         	movff	?___ftpack+1,?___ftadd+1
 12143  002196  C073  F095         	movff	?___ftpack+2,?___ftadd+2
 12144  00219A  0012               	return	
 12145  00219C                     __end_of___ftadd:
 12146                           	opt stack 0
 12147                           tblptru	equ	0xFF8
 12148                           tblptrh	equ	0xFF7
 12149                           tblptrl	equ	0xFF6
 12150                           tablat	equ	0xFF5
 12151                           prodh	equ	0xFF4
 12152                           prodl	equ	0xFF3
 12153                           indf0	equ	0xFEF
 12154                           postinc0	equ	0xFEE
 12155                           fsr0h	equ	0xFEA
 12156                           fsr0l	equ	0xFE9
 12157                           wreg	equ	0xFE8
 12158                           indf1	equ	0xFE7
 12159                           postdec1	equ	0xFE5
 12160                           fsr1h	equ	0xFE2
 12161                           fsr1l	equ	0xFE1
 12162                           indf2	equ	0xFDF
 12163                           postinc2	equ	0xFDE
 12164                           postdec2	equ	0xFDD
 12165                           fsr2h	equ	0xFDA
 12166                           fsr2l	equ	0xFD9
 12167                           status	equ	0xFD8
 12168                           
 12169 ;; *************** function ___ftpack *****************
 12170 ;; Defined at:
 12171 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  arg             3   17[BANK0 ] unsigned um
 12174 ;;  exp             1   20[BANK0 ] unsigned char 
 12175 ;;  sign            1   21[BANK0 ] unsigned char 
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  3   17[BANK0 ] float 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2, status,0
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12187 ;;      Params:         0       5       0       0       0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0
 12189 ;;      Temps:          3       0       0       0       0       0       0
 12190 ;;      Totals:         3       5       0       0       0       0       0
 12191 ;;Total ram usage:        8 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    3
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		___awtoft
 12198 ;;		___ftadd
 12199 ;;		___ftdiv
 12200 ;;		___ftmul
 12201 ;;		___lltoft
 12202 ;;		___lwtoft
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text47
 12207  002E88                     __ptext47:
 12208                           	opt stack 0
 12209  002E88                     ___ftpack:
 12210                           	opt stack 24
 12211                           
 12212                           ;incstack = 0
 12213  002E88  0100               	movlb	0	; () banked
 12214  002E8A  5174               	movf	___ftpack@exp& (0+255),w,b
 12215  002E8C  0100               	movlb	0	; () banked
 12216  002E8E  B4D8               	btfsc	status,2,c
 12217  002E90  D008               	goto	l4696
 12218                           
 12219                           ; BSR set to: 0
 12220  002E92  0100               	movlb	0	; () banked
 12221  002E94  5171               	movf	___ftpack@arg& (0+255),w,b
 12222  002E96  0100               	movlb	0	; () banked
 12223  002E98  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12224  002E9A  0100               	movlb	0	; () banked
 12225  002E9C  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12226  002E9E  A4D8               	btfss	status,2,c
 12227  002EA0  D011               	goto	l4702
 12228  002EA2                     l4696:
 12229                           
 12230                           ; BSR set to: 0
 12231  002EA2  0E00               	movlw	0
 12232  002EA4  0100               	movlb	0	; () banked
 12233  002EA6  6F71               	movwf	?___ftpack& (0+255),b
 12234  002EA8  0E00               	movlw	0
 12235  002EAA  0100               	movlb	0	; () banked
 12236  002EAC  6F72               	movwf	(?___ftpack+1)& (0+255),b
 12237  002EAE  0E00               	movlw	0
 12238  002EB0  0100               	movlb	0	; () banked
 12239  002EB2  6F73               	movwf	(?___ftpack+2)& (0+255),b
 12240                           
 12241                           ; BSR set to: 0
 12242  002EB4  0012               	return	
 12243  002EB6                     l4700:
 12244                           
 12245                           ; BSR set to: 0
 12246  002EB6  0100               	movlb	0	; () banked
 12247  002EB8  2B74               	incf	___ftpack@exp& (0+255),f,b
 12248  002EBA  0100               	movlb	0	; () banked
 12249  002EBC  90D8               	bcf	status,0,c
 12250  002EBE  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12251  002EC0  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12252  002EC2  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12253  002EC4                     l4702:
 12254                           
 12255                           ; BSR set to: 0
 12256  002EC4  0E00               	movlw	0
 12257  002EC6  0100               	movlb	0	; () banked
 12258  002EC8  1571               	andwf	___ftpack@arg& (0+255),w,b
 12259  002ECA  6E22               	movwf	??___ftpack& (0+255),c
 12260  002ECC  0E00               	movlw	0
 12261  002ECE  0100               	movlb	0	; () banked
 12262  002ED0  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12263  002ED2  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12264  002ED4  0EFE               	movlw	254
 12265  002ED6  0100               	movlb	0	; () banked
 12266  002ED8  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12267  002EDA  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12268  002EDC  5022               	movf	??___ftpack,w,c
 12269  002EDE  1023               	iorwf	??___ftpack+1,w,c
 12270  002EE0  1024               	iorwf	??___ftpack+2,w,c
 12271  002EE2  B4D8               	btfsc	status,2,c
 12272  002EE4  D011               	goto	l4708
 12273  002EE6  D7E7               	goto	l4700
 12274  002EE8                     l4704:
 12275                           
 12276                           ; BSR set to: 0
 12277  002EE8  0100               	movlb	0	; () banked
 12278  002EEA  2B74               	incf	___ftpack@exp& (0+255),f,b
 12279                           
 12280                           ; BSR set to: 0
 12281  002EEC  0E01               	movlw	1
 12282  002EEE  0100               	movlb	0	; () banked
 12283  002EF0  2771               	addwf	___ftpack@arg& (0+255),f,b
 12284  002EF2  0E00               	movlw	0
 12285  002EF4  0100               	movlb	0	; () banked
 12286  002EF6  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12287  002EF8  0E00               	movlw	0
 12288  002EFA  0100               	movlb	0	; () banked
 12289  002EFC  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12290  002EFE  0100               	movlb	0	; () banked
 12291  002F00  90D8               	bcf	status,0,c
 12292  002F02  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12293  002F04  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12294  002F06  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12295  002F08                     l4708:
 12296                           
 12297                           ; BSR set to: 0
 12298  002F08  0E00               	movlw	0
 12299  002F0A  0100               	movlb	0	; () banked
 12300  002F0C  1571               	andwf	___ftpack@arg& (0+255),w,b
 12301  002F0E  6E22               	movwf	??___ftpack& (0+255),c
 12302  002F10  0E00               	movlw	0
 12303  002F12  0100               	movlb	0	; () banked
 12304  002F14  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12305  002F16  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12306  002F18  0EFF               	movlw	255
 12307  002F1A  0100               	movlb	0	; () banked
 12308  002F1C  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12309  002F1E  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12310  002F20  5022               	movf	??___ftpack,w,c
 12311  002F22  1023               	iorwf	??___ftpack+1,w,c
 12312  002F24  1024               	iorwf	??___ftpack+2,w,c
 12313  002F26  B4D8               	btfsc	status,2,c
 12314  002F28  D008               	goto	l4712
 12315  002F2A  D7DE               	goto	l4704
 12316  002F2C                     l4710:
 12317                           
 12318                           ; BSR set to: 0
 12319  002F2C  0100               	movlb	0	; () banked
 12320  002F2E  0774               	decf	___ftpack@exp& (0+255),f,b
 12321  002F30  0100               	movlb	0	; () banked
 12322  002F32  90D8               	bcf	status,0,c
 12323  002F34  3771               	rlcf	___ftpack@arg& (0+255),f,b
 12324  002F36  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12325  002F38  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12326  002F3A                     l4712:
 12327                           
 12328                           ; BSR set to: 0
 12329  002F3A  0100               	movlb	0	; () banked
 12330  002F3C  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12331  002F3E  D004               	goto	l766
 12332                           
 12333                           ; BSR set to: 0
 12334  002F40  0E02               	movlw	2
 12335  002F42  0100               	movlb	0	; () banked
 12336  002F44  6174               	cpfslt	___ftpack@exp& (0+255),b
 12337  002F46  D7F2               	goto	l4710
 12338  002F48                     l766:
 12339                           
 12340                           ; BSR set to: 0
 12341  002F48  0100               	movlb	0	; () banked
 12342  002F4A  B174               	btfsc	___ftpack@exp& (0+255),0,b
 12343  002F4C  D002               	goto	l4718
 12344                           
 12345                           ; BSR set to: 0
 12346  002F4E  0100               	movlb	0	; () banked
 12347  002F50  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12348  002F52                     l4718:
 12349                           
 12350                           ; BSR set to: 0
 12351  002F52  0100               	movlb	0	; () banked
 12352  002F54  90D8               	bcf	status,0,c
 12353  002F56  3374               	rrcf	___ftpack@exp& (0+255),f,b
 12354  002F58  0100               	movlb	0	; () banked
 12355  002F5A  5174               	movf	___ftpack@exp& (0+255),w,b
 12356  002F5C  0100               	movlb	0	; () banked
 12357  002F5E  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12358                           
 12359                           ; BSR set to: 0
 12360  002F60  0100               	movlb	0	; () banked
 12361  002F62  5175               	movf	___ftpack@sign& (0+255),w,b
 12362  002F64  0100               	movlb	0	; () banked
 12363  002F66  B4D8               	btfsc	status,2,c
 12364  002F68  D002               	goto	l4724
 12365                           
 12366                           ; BSR set to: 0
 12367  002F6A  0100               	movlb	0	; () banked
 12368  002F6C  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12369  002F6E                     l4724:
 12370                           
 12371                           ; BSR set to: 0
 12372  002F6E  C071  F071         	movff	___ftpack@arg,?___ftpack
 12373  002F72  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
 12374  002F76  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
 12375  002F7A  0012               	return	
 12376  002F7C                     __end_of___ftpack:
 12377                           	opt stack 0
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           indf0	equ	0xFEF
 12385                           postinc0	equ	0xFEE
 12386                           fsr0h	equ	0xFEA
 12387                           fsr0l	equ	0xFE9
 12388                           wreg	equ	0xFE8
 12389                           indf1	equ	0xFE7
 12390                           postdec1	equ	0xFE5
 12391                           fsr1h	equ	0xFE2
 12392                           fsr1l	equ	0xFE1
 12393                           indf2	equ	0xFDF
 12394                           postinc2	equ	0xFDE
 12395                           postdec2	equ	0xFDD
 12396                           fsr2h	equ	0xFDA
 12397                           fsr2l	equ	0xFD9
 12398                           status	equ	0xFD8
 12399                           
 12400 ;; *************** function ___ftneg *****************
 12401 ;; Defined at:
 12402 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 12403 ;; Parameters:    Size  Location     Type
 12404 ;;  f1              3   17[BANK0 ] float 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;		None
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  3   17[BANK0 ] float 
 12409 ;; Registers used:
 12410 ;;		wreg, status,2, status,0
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12416 ;;      Params:         0       3       0       0       0       0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0
 12419 ;;      Totals:         0       3       0       0       0       0       0
 12420 ;;Total ram usage:        3 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:    3
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_sprintf
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text48
 12431  003BC0                     __ptext48:
 12432                           	opt stack 0
 12433  003BC0                     ___ftneg:
 12434                           	opt stack 24
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;incstack = 0
 12438  003BC0  0100               	movlb	0	; () banked
 12439  003BC2  5171               	movf	___ftneg@f1& (0+255),w,b
 12440  003BC4  0100               	movlb	0	; () banked
 12441  003BC6  1172               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12442  003BC8  0100               	movlb	0	; () banked
 12443  003BCA  1173               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12444  003BCC  B4D8               	btfsc	status,2,c
 12445  003BCE  D009               	goto	l863
 12446                           
 12447                           ; BSR set to: 0
 12448  003BD0  0E00               	movlw	0
 12449  003BD2  0100               	movlb	0	; () banked
 12450  003BD4  1B71               	xorwf	___ftneg@f1& (0+255),f,b
 12451  003BD6  0E00               	movlw	0
 12452  003BD8  0100               	movlb	0	; () banked
 12453  003BDA  1B72               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12454  003BDC  0E80               	movlw	128
 12455  003BDE  0100               	movlb	0	; () banked
 12456  003BE0  1B73               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12457  003BE2                     l863:
 12458                           
 12459                           ; BSR set to: 0
 12460  003BE2  C071  F071         	movff	___ftneg@f1,?___ftneg
 12461  003BE6  C072  F072         	movff	___ftneg@f1+1,?___ftneg+1
 12462  003BEA  C073  F073         	movff	___ftneg@f1+2,?___ftneg+2
 12463                           
 12464                           ; BSR set to: 0
 12465  003BEE  0012               	return		;funcret
 12466  003BF0                     __end_of___ftneg:
 12467                           	opt stack 0
 12468                           tblptru	equ	0xFF8
 12469                           tblptrh	equ	0xFF7
 12470                           tblptrl	equ	0xFF6
 12471                           tablat	equ	0xFF5
 12472                           prodh	equ	0xFF4
 12473                           prodl	equ	0xFF3
 12474                           indf0	equ	0xFEF
 12475                           postinc0	equ	0xFEE
 12476                           fsr0h	equ	0xFEA
 12477                           fsr0l	equ	0xFE9
 12478                           wreg	equ	0xFE8
 12479                           indf1	equ	0xFE7
 12480                           postdec1	equ	0xFE5
 12481                           fsr1h	equ	0xFE2
 12482                           fsr1l	equ	0xFE1
 12483                           indf2	equ	0xFDF
 12484                           postinc2	equ	0xFDE
 12485                           postdec2	equ	0xFDD
 12486                           fsr2h	equ	0xFDA
 12487                           fsr2l	equ	0xFD9
 12488                           status	equ	0xFD8
 12489                           
 12490 ;; *************** function ___ftge *****************
 12491 ;; Defined at:
 12492 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  ff1             3   17[BANK0 ] float 
 12495 ;;  ff2             3   20[BANK0 ] float 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;		None               void
 12500 ;; Registers used:
 12501 ;;		wreg, status,2, status,0
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12507 ;;      Params:         0       6       0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0
 12509 ;;      Temps:          3       0       0       0       0       0       0
 12510 ;;      Totals:         3       6       0       0       0       0       0
 12511 ;;Total ram usage:        9 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    3
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_sprintf
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text49
 12522  00328A                     __ptext49:
 12523                           	opt stack 0
 12524  00328A                     ___ftge:
 12525                           	opt stack 24
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;incstack = 0
 12529  00328A  0100               	movlb	0	; () banked
 12530  00328C  AF73               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12531  00328E  D019               	goto	l5246
 12532                           
 12533                           ; BSR set to: 0
 12534  003290  C071  F022         	movff	___ftge@ff1,??___ftge
 12535  003294  C072  F023         	movff	___ftge@ff1+1,??___ftge+1
 12536  003298  C073  F024         	movff	___ftge@ff1+2,??___ftge+2
 12537  00329C  1E22               	comf	??___ftge,f,c
 12538  00329E  1E23               	comf	??___ftge+1,f,c
 12539  0032A0  1E24               	comf	??___ftge+2,f,c
 12540  0032A2  2A22               	incf	??___ftge,f,c
 12541  0032A4  0E00               	movlw	0
 12542  0032A6  2223               	addwfc	??___ftge+1,f,c
 12543  0032A8  2224               	addwfc	??___ftge+2,f,c
 12544  0032AA  0E00               	movlw	0
 12545  0032AC  2422               	addwf	??___ftge,w,c
 12546  0032AE  0100               	movlb	0	; () banked
 12547  0032B0  6F71               	movwf	___ftge@ff1& (0+255),b
 12548  0032B2  0E00               	movlw	0
 12549  0032B4  2023               	addwfc	??___ftge+1,w,c
 12550  0032B6  0100               	movlb	0	; () banked
 12551  0032B8  6F72               	movwf	(___ftge@ff1+1)& (0+255),b
 12552  0032BA  0E80               	movlw	128
 12553  0032BC  2024               	addwfc	??___ftge+2,w,c
 12554  0032BE  0100               	movlb	0	; () banked
 12555  0032C0  6F73               	movwf	(___ftge@ff1+2)& (0+255),b
 12556  0032C2                     l5246:
 12557                           
 12558                           ; BSR set to: 0
 12559  0032C2  0100               	movlb	0	; () banked
 12560  0032C4  AF76               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12561  0032C6  D019               	goto	l5250
 12562                           
 12563                           ; BSR set to: 0
 12564  0032C8  C074  F022         	movff	___ftge@ff2,??___ftge
 12565  0032CC  C075  F023         	movff	___ftge@ff2+1,??___ftge+1
 12566  0032D0  C076  F024         	movff	___ftge@ff2+2,??___ftge+2
 12567  0032D4  1E22               	comf	??___ftge,f,c
 12568  0032D6  1E23               	comf	??___ftge+1,f,c
 12569  0032D8  1E24               	comf	??___ftge+2,f,c
 12570  0032DA  2A22               	incf	??___ftge,f,c
 12571  0032DC  0E00               	movlw	0
 12572  0032DE  2223               	addwfc	??___ftge+1,f,c
 12573  0032E0  2224               	addwfc	??___ftge+2,f,c
 12574  0032E2  0E00               	movlw	0
 12575  0032E4  2422               	addwf	??___ftge,w,c
 12576  0032E6  0100               	movlb	0	; () banked
 12577  0032E8  6F74               	movwf	___ftge@ff2& (0+255),b
 12578  0032EA  0E00               	movlw	0
 12579  0032EC  2023               	addwfc	??___ftge+1,w,c
 12580  0032EE  0100               	movlb	0	; () banked
 12581  0032F0  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
 12582  0032F2  0E80               	movlw	128
 12583  0032F4  2024               	addwfc	??___ftge+2,w,c
 12584  0032F6  0100               	movlb	0	; () banked
 12585  0032F8  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
 12586  0032FA                     l5250:
 12587                           
 12588                           ; BSR set to: 0
 12589  0032FA  0E00               	movlw	0
 12590  0032FC  0100               	movlb	0	; () banked
 12591  0032FE  1B71               	xorwf	___ftge@ff1& (0+255),f,b
 12592  003300  0E00               	movlw	0
 12593  003302  0100               	movlb	0	; () banked
 12594  003304  1B72               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12595  003306  0E80               	movlw	128
 12596  003308  0100               	movlb	0	; () banked
 12597  00330A  1B73               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12598                           
 12599                           ; BSR set to: 0
 12600  00330C  0E00               	movlw	0
 12601  00330E  0100               	movlb	0	; () banked
 12602  003310  1B74               	xorwf	___ftge@ff2& (0+255),f,b
 12603  003312  0E00               	movlw	0
 12604  003314  0100               	movlb	0	; () banked
 12605  003316  1B75               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12606  003318  0E80               	movlw	128
 12607  00331A  0100               	movlb	0	; () banked
 12608  00331C  1B76               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12609  00331E  0100               	movlb	0	; () banked
 12610  003320  5174               	movf	___ftge@ff2& (0+255),w,b
 12611  003322  0100               	movlb	0	; () banked
 12612  003324  5D71               	subwf	___ftge@ff1& (0+255),w,b
 12613  003326  0100               	movlb	0	; () banked
 12614  003328  5175               	movf	(___ftge@ff2+1)& (0+255),w,b
 12615  00332A  0100               	movlb	0	; () banked
 12616  00332C  5972               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12617  00332E  0100               	movlb	0	; () banked
 12618  003330  5176               	movf	(___ftge@ff2+2)& (0+255),w,b
 12619  003332  0100               	movlb	0	; () banked
 12620  003334  5973               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12621  003336  B0D8               	btfsc	status,0,c
 12622  003338  D002               	goto	l5256
 12623                           
 12624                           ; BSR set to: 0
 12625  00333A  90D8               	bcf	status,0,c
 12626  00333C  0012               	return	
 12627  00333E                     l5256:
 12628                           
 12629                           ; BSR set to: 0
 12630  00333E  80D8               	bsf	status,0,c
 12631                           
 12632                           ; BSR set to: 0
 12633  003340  0012               	return	
 12634  003342                     __end_of___ftge:
 12635                           	opt stack 0
 12636                           tblptru	equ	0xFF8
 12637                           tblptrh	equ	0xFF7
 12638                           tblptrl	equ	0xFF6
 12639                           tablat	equ	0xFF5
 12640                           prodh	equ	0xFF4
 12641                           prodl	equ	0xFF3
 12642                           indf0	equ	0xFEF
 12643                           postinc0	equ	0xFEE
 12644                           fsr0h	equ	0xFEA
 12645                           fsr0l	equ	0xFE9
 12646                           wreg	equ	0xFE8
 12647                           indf1	equ	0xFE7
 12648                           postdec1	equ	0xFE5
 12649                           fsr1h	equ	0xFE2
 12650                           fsr1l	equ	0xFE1
 12651                           indf2	equ	0xFDF
 12652                           postinc2	equ	0xFDE
 12653                           postdec2	equ	0xFDD
 12654                           fsr2h	equ	0xFDA
 12655                           fsr2l	equ	0xFD9
 12656                           status	equ	0xFD8
 12657                           
 12658 ;; *************** function _memset *****************
 12659 ;; Defined at:
 12660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  p1              2   17[BANK0 ] PTR void 
 12663 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12664 ;;  c               2   19[BANK0 ] int 
 12665 ;;  n               2   21[BANK0 ] unsigned int 
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;  p               2   33[COMRAM] PTR unsigned char 
 12668 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  2   17[BANK0 ] PTR void 
 12671 ;; Registers used:
 12672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12678 ;;      Params:         0       6       0       0       0       0       0
 12679 ;;      Locals:         2       0       0       0       0       0       0
 12680 ;;      Temps:          0       0       0       0       0       0       0
 12681 ;;      Totals:         2       6       0       0       0       0       0
 12682 ;;Total ram usage:        8 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:    3
 12685 ;; This function calls:
 12686 ;;		Nothing
 12687 ;; This function is called by:
 12688 ;;		_util_beacon_transmission
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text50
 12693  003B2E                     __ptext50:
 12694                           	opt stack 0
 12695  003B2E                     _memset:
 12696                           	opt stack 25
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;incstack = 0
 12700  003B2E  C071  F022         	movff	memset@p1,memset@p
 12701  003B32  C072  F023         	movff	memset@p1+1,memset@p+1
 12702  003B36  D008               	goto	l5406
 12703  003B38                     l5402:
 12704  003B38  C022  FFD9         	movff	memset@p,fsr2l
 12705  003B3C  C023  FFDA         	movff	memset@p+1,fsr2h
 12706  003B40  C073  FFDF         	movff	memset@c,indf2
 12707  003B44  4A22               	infsnz	memset@p,f,c
 12708  003B46  2A23               	incf	memset@p+1,f,c
 12709  003B48                     l5406:
 12710  003B48  0100               	movlb	0	; () banked
 12711  003B4A  0775               	decf	memset@n& (0+255),f,b
 12712  003B4C  A0D8               	btfss	status,0,c
 12713  003B4E  0776               	decf	(memset@n+1)& (0+255),f,b
 12714  003B50  0100               	movlb	0	; () banked
 12715  003B52  2975               	incf	memset@n& (0+255),w,b
 12716  003B54  E1F1               	bnz	l5402
 12717  003B56  0100               	movlb	0	; () banked
 12718  003B58  2976               	incf	(memset@n+1)& (0+255),w,b
 12719  003B5A  B4D8               	btfsc	status,2,c
 12720  003B5C  0012               	return	
 12721  003B5E  D7EC               	goto	l5402
 12722  003B60                     __end_of_memset:
 12723                           	opt stack 0
 12724                           tblptru	equ	0xFF8
 12725                           tblptrh	equ	0xFF7
 12726                           tblptrl	equ	0xFF6
 12727                           tablat	equ	0xFF5
 12728                           prodh	equ	0xFF4
 12729                           prodl	equ	0xFF3
 12730                           indf0	equ	0xFEF
 12731                           postinc0	equ	0xFEE
 12732                           fsr0h	equ	0xFEA
 12733                           fsr0l	equ	0xFE9
 12734                           wreg	equ	0xFE8
 12735                           indf1	equ	0xFE7
 12736                           postdec1	equ	0xFE5
 12737                           fsr1h	equ	0xFE2
 12738                           fsr1l	equ	0xFE1
 12739                           indf2	equ	0xFDF
 12740                           postinc2	equ	0xFDE
 12741                           postdec2	equ	0xFDD
 12742                           fsr2h	equ	0xFDA
 12743                           fsr2l	equ	0xFD9
 12744                           status	equ	0xFD8
 12745                           
 12746 ;; *************** function _initialize *****************
 12747 ;; Defined at:
 12748 ;;		line 17 in file "easat2_util_initialize.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;		None
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;		None
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12762 ;;      Params:         0       0       0       0       0       0       0
 12763 ;;      Locals:         0       0       0       0       0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0
 12765 ;;      Totals:         0       0       0       0       0       0       0
 12766 ;;Total ram usage:        0 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    4
 12769 ;; This function calls:
 12770 ;;		_io_initialize
 12771 ;;		_util_timer1_initialize
 12772 ;; This function is called by:
 12773 ;;		_main
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           	psect	text51
 12778  003CBC                     __ptext51:
 12779                           	opt stack 0
 12780  003CBC                     _initialize:
 12781                           	opt stack 26
 12782                           
 12783                           ;easat2_util_initialize.c: 19: io_initialize();
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;incstack = 0
 12787  003CBC  ECE7  F018         	call	_io_initialize	;wreg free
 12788                           
 12789                           ;easat2_util_initialize.c: 20: util_timer1_initialize();
 12790  003CC0  EC0D  F01E         	call	_util_timer1_initialize	;wreg free
 12791  003CC4  0012               	return		;funcret
 12792  003CC6                     __end_of_initialize:
 12793                           	opt stack 0
 12794                           tblptru	equ	0xFF8
 12795                           tblptrh	equ	0xFF7
 12796                           tblptrl	equ	0xFF6
 12797                           tablat	equ	0xFF5
 12798                           prodh	equ	0xFF4
 12799                           prodl	equ	0xFF3
 12800                           indf0	equ	0xFEF
 12801                           postinc0	equ	0xFEE
 12802                           fsr0h	equ	0xFEA
 12803                           fsr0l	equ	0xFE9
 12804                           wreg	equ	0xFE8
 12805                           indf1	equ	0xFE7
 12806                           postdec1	equ	0xFE5
 12807                           fsr1h	equ	0xFE2
 12808                           fsr1l	equ	0xFE1
 12809                           indf2	equ	0xFDF
 12810                           postinc2	equ	0xFDE
 12811                           postdec2	equ	0xFDD
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _util_timer1_initialize *****************
 12817 ;; Defined at:
 12818 ;;		line 19 in file "easat2_util_timer.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;		None
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;		None
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      void 
 12825 ;; Registers used:
 12826 ;;		wreg, status,2
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12832 ;;      Params:         0       0       0       0       0       0       0
 12833 ;;      Locals:         0       0       0       0       0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0
 12835 ;;      Totals:         0       0       0       0       0       0       0
 12836 ;;Total ram usage:        0 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:    3
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_initialize
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           	psect	text52
 12847  003C1A                     __ptext52:
 12848                           	opt stack 0
 12849  003C1A                     _util_timer1_initialize:
 12850                           	opt stack 26
 12851                           
 12852                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 12853                           
 12854                           ;incstack = 0
 12855  003C1A  8ED0               	bsf	4048,7,c	;volatile
 12856                           
 12857                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 12858  003C1C  90CD               	bcf	4045,0,c	;volatile
 12859                           
 12860                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 12861  003C1E  9CCD               	bcf	4045,6,c	;volatile
 12862                           
 12863                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 12864  003C20  9ECD               	bcf	4045,7,c	;volatile
 12865                           
 12866                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 12867  003C22  9ACD               	bcf	4045,5,c	;volatile
 12868                           
 12869                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 12870  003C24  98CD               	bcf	4045,4,c	;volatile
 12871                           
 12872                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 12873  003C26  96CD               	bcf	4045,3,c	;volatile
 12874                           
 12875                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 12876  003C28  82CD               	bsf	4045,1,c	;volatile
 12877                           
 12878                           ;easat2_util_timer.c: 53: TMR1H = 0xEC;
 12879  003C2A  0EEC               	movlw	236
 12880  003C2C  6ECF               	movwf	4047,c	;volatile
 12881                           
 12882                           ;easat2_util_timer.c: 54: TMR1L = 0x77 ; 60535;
 12883  003C2E  0E77               	movlw	119
 12884  003C30  6ECE               	movwf	4046,c	;volatile
 12885                           
 12886                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 12887  003C32  809D               	bsf	3997,0,c	;volatile
 12888                           
 12889                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 12890  003C34  809F               	bsf	3999,0,c	;volatile
 12891                           
 12892                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 12893  003C36  909E               	bcf	3998,0,c	;volatile
 12894                           
 12895                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 12896  003C38  80CD               	bsf	4045,0,c	;volatile
 12897                           
 12898                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 12899  003C3A  9CF2               	bcf	intcon,6,c	;volatile
 12900                           
 12901                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 12902  003C3C  8EF2               	bsf	intcon,7,c	;volatile
 12903  003C3E  0012               	return		;funcret
 12904  003C40                     __end_of_util_timer1_initialize:
 12905                           	opt stack 0
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           indf0	equ	0xFEF
 12914                           postinc0	equ	0xFEE
 12915                           fsr0h	equ	0xFEA
 12916                           fsr0l	equ	0xFE9
 12917                           wreg	equ	0xFE8
 12918                           indf1	equ	0xFE7
 12919                           postdec1	equ	0xFE5
 12920                           fsr1h	equ	0xFE2
 12921                           fsr1l	equ	0xFE1
 12922                           indf2	equ	0xFDF
 12923                           postinc2	equ	0xFDE
 12924                           postdec2	equ	0xFDD
 12925                           fsr2h	equ	0xFDA
 12926                           fsr2l	equ	0xFD9
 12927                           status	equ	0xFD8
 12928                           
 12929 ;; *************** function _io_initialize *****************
 12930 ;; Defined at:
 12931 ;;		line 27 in file "easat2_util_initialize.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		wreg, status,2
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12945 ;;      Params:         0       0       0       0       0       0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0
 12948 ;;      Totals:         0       0       0       0       0       0       0
 12949 ;;Total ram usage:        0 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:    3
 12952 ;; This function calls:
 12953 ;;		Nothing
 12954 ;; This function is called by:
 12955 ;;		_initialize
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           
 12959                           	psect	text53
 12960  0031CE                     __ptext53:
 12961                           	opt stack 0
 12962  0031CE                     _io_initialize:
 12963                           	opt stack 26
 12964                           
 12965                           ;easat2_util_initialize.c: 36: VREFCON0bits.FVREN = 1;
 12966                           
 12967                           ;incstack = 0
 12968  0031CE  010F               	movlb	15	; () banked
 12969  0031D0  8F42               	bsf	66,7,b	;volatile
 12970                           
 12971                           ;easat2_util_initialize.c: 37: VREFCON0bits.FVRS0 = 0;
 12972  0031D2  010F               	movlb	15	; () banked
 12973  0031D4  9942               	bcf	66,4,b	;volatile
 12974                           
 12975                           ;easat2_util_initialize.c: 38: VREFCON0bits.FVRS1 = 1;
 12976  0031D6  010F               	movlb	15	; () banked
 12977  0031D8  8B42               	bsf	66,5,b	;volatile
 12978                           
 12979                           ;easat2_util_initialize.c: 40: VREFCON0bits.FVRST = 1;
 12980  0031DA  010F               	movlb	15	; () banked
 12981  0031DC  8D42               	bsf	66,6,b	;volatile
 12982                           
 12983                           ; BSR set to: 15
 12984                           ;easat2_util_initialize.c: 45: ADCON1 = 0x08;
 12985  0031DE  0E08               	movlw	8
 12986  0031E0  6EC1               	movwf	4033,c	;volatile
 12987                           
 12988                           ;easat2_util_initialize.c: 46: ADCON2 = 0xAF;
 12989  0031E2  0EAF               	movlw	175
 12990  0031E4  6EC0               	movwf	4032,c	;volatile
 12991                           
 12992                           ; BSR set to: 15
 12993                           ;easat2_util_initialize.c: 50: TRISAbits.TRISA0 = 1;
 12994  0031E6  8092               	bsf	3986,0,c	;volatile
 12995                           
 12996                           ; BSR set to: 15
 12997                           ;easat2_util_initialize.c: 51: TRISAbits.TRISA1 = 1;
 12998  0031E8  8292               	bsf	3986,1,c	;volatile
 12999                           
 13000                           ; BSR set to: 15
 13001                           ;easat2_util_initialize.c: 52: TRISAbits.TRISA2 = 0;
 13002  0031EA  9492               	bcf	3986,2,c	;volatile
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;easat2_util_initialize.c: 53: TRISAbits.TRISA3 = 1;
 13006  0031EC  8692               	bsf	3986,3,c	;volatile
 13007                           
 13008                           ; BSR set to: 15
 13009                           ;easat2_util_initialize.c: 54: TRISAbits.TRISA4 = 1;
 13010  0031EE  8892               	bsf	3986,4,c	;volatile
 13011                           
 13012                           ; BSR set to: 15
 13013                           ;easat2_util_initialize.c: 55: TRISAbits.TRISA5 = 1;
 13014  0031F0  8A92               	bsf	3986,5,c	;volatile
 13015                           
 13016                           ; BSR set to: 15
 13017                           ;easat2_util_initialize.c: 62: ANSELAbits.ANSA0 = 1;
 13018  0031F2  010F               	movlb	15	; () banked
 13019  0031F4  8138               	bsf	56,0,b	;volatile
 13020                           
 13021                           ; BSR set to: 15
 13022                           ;easat2_util_initialize.c: 63: ANSELAbits.ANSA1 = 1;
 13023  0031F6  010F               	movlb	15	; () banked
 13024  0031F8  8338               	bsf	56,1,b	;volatile
 13025                           
 13026                           ; BSR set to: 15
 13027                           ;easat2_util_initialize.c: 64: ANSELAbits.ANSA2 = 1;
 13028  0031FA  010F               	movlb	15	; () banked
 13029  0031FC  8538               	bsf	56,2,b	;volatile
 13030                           
 13031                           ; BSR set to: 15
 13032                           ;easat2_util_initialize.c: 65: ANSELAbits.ANSA3 = 0;
 13033  0031FE  010F               	movlb	15	; () banked
 13034  003200  9738               	bcf	56,3,b	;volatile
 13035                           
 13036                           ; BSR set to: 15
 13037                           ;easat2_util_initialize.c: 67: ANSELAbits.ANSA5 = 1;
 13038  003202  010F               	movlb	15	; () banked
 13039  003204  8B38               	bsf	56,5,b	;volatile
 13040                           
 13041                           ; BSR set to: 15
 13042                           ;easat2_util_initialize.c: 71: LATAbits.LATA0 = 0;
 13043  003206  9089               	bcf	3977,0,c	;volatile
 13044                           
 13045                           ; BSR set to: 15
 13046                           ;easat2_util_initialize.c: 72: LATAbits.LATA1 = 0;
 13047  003208  9289               	bcf	3977,1,c	;volatile
 13048                           
 13049                           ; BSR set to: 15
 13050                           ;easat2_util_initialize.c: 73: LATAbits.LATA2 = 0;
 13051  00320A  9489               	bcf	3977,2,c	;volatile
 13052                           
 13053                           ; BSR set to: 15
 13054                           ;easat2_util_initialize.c: 74: LATAbits.LATA3 = 0;
 13055  00320C  9689               	bcf	3977,3,c	;volatile
 13056                           
 13057                           ; BSR set to: 15
 13058                           ;easat2_util_initialize.c: 75: LATAbits.LATA4 = 0;
 13059  00320E  9889               	bcf	3977,4,c	;volatile
 13060                           
 13061                           ; BSR set to: 15
 13062                           ;easat2_util_initialize.c: 76: LATAbits.LATA5 = 0;
 13063  003210  9A89               	bcf	3977,5,c	;volatile
 13064                           
 13065                           ;easat2_util_initialize.c: 84: WPUB = 0b00000000;
 13066  003212  0E00               	movlw	0
 13067  003214  6E61               	movwf	3937,c	;volatile
 13068                           
 13069                           ; BSR set to: 15
 13070                           ;easat2_util_initialize.c: 85: RBPU = 0b11111111;
 13071  003216  8EF1               	bsf	intcon2,7,c	;volatile
 13072                           
 13073                           ; BSR set to: 15
 13074                           ;easat2_util_initialize.c: 89: TRISBbits.TRISB0 = 1;
 13075  003218  8093               	bsf	3987,0,c	;volatile
 13076                           
 13077                           ; BSR set to: 15
 13078                           ;easat2_util_initialize.c: 90: TRISBbits.TRISB1 = 0;
 13079  00321A  9293               	bcf	3987,1,c	;volatile
 13080                           
 13081                           ; BSR set to: 15
 13082                           ;easat2_util_initialize.c: 91: TRISBbits.TRISB2 = 0;
 13083  00321C  9493               	bcf	3987,2,c	;volatile
 13084                           
 13085                           ; BSR set to: 15
 13086                           ;easat2_util_initialize.c: 92: TRISBbits.TRISB3 = 0;
 13087  00321E  9693               	bcf	3987,3,c	;volatile
 13088                           
 13089                           ; BSR set to: 15
 13090                           ;easat2_util_initialize.c: 93: TRISBbits.TRISB4 = 0;
 13091  003220  9893               	bcf	3987,4,c	;volatile
 13092                           
 13093                           ; BSR set to: 15
 13094                           ;easat2_util_initialize.c: 94: TRISBbits.TRISB5 = 0;
 13095  003222  9A93               	bcf	3987,5,c	;volatile
 13096                           
 13097                           ; BSR set to: 15
 13098                           ;easat2_util_initialize.c: 95: TRISBbits.TRISB6 = 0;
 13099  003224  9C93               	bcf	3987,6,c	;volatile
 13100                           
 13101                           ; BSR set to: 15
 13102                           ;easat2_util_initialize.c: 96: TRISBbits.TRISB7 = 0;
 13103  003226  9E93               	bcf	3987,7,c	;volatile
 13104                           
 13105                           ; BSR set to: 15
 13106                           ;easat2_util_initialize.c: 100: ANSELBbits.ANSB0 = 1;
 13107  003228  010F               	movlb	15	; () banked
 13108  00322A  8139               	bsf	57,0,b	;volatile
 13109                           
 13110                           ; BSR set to: 15
 13111                           ;easat2_util_initialize.c: 101: ANSELBbits.ANSB1 = 0;
 13112  00322C  010F               	movlb	15	; () banked
 13113  00322E  9339               	bcf	57,1,b	;volatile
 13114                           
 13115                           ; BSR set to: 15
 13116                           ;easat2_util_initialize.c: 102: ANSELBbits.ANSB2 = 0;
 13117  003230  010F               	movlb	15	; () banked
 13118  003232  9539               	bcf	57,2,b	;volatile
 13119                           
 13120                           ; BSR set to: 15
 13121                           ;easat2_util_initialize.c: 103: ANSELBbits.ANSB3 = 0;
 13122  003234  010F               	movlb	15	; () banked
 13123  003236  9739               	bcf	57,3,b	;volatile
 13124                           
 13125                           ; BSR set to: 15
 13126                           ;easat2_util_initialize.c: 105: ANSELBbits.ANSB5 = 0;
 13127  003238  010F               	movlb	15	; () banked
 13128  00323A  9B39               	bcf	57,5,b	;volatile
 13129                           
 13130                           ; BSR set to: 15
 13131                           ;easat2_util_initialize.c: 109: LATBbits.LATB0 = 0;
 13132  00323C  908A               	bcf	3978,0,c	;volatile
 13133                           
 13134                           ; BSR set to: 15
 13135                           ;easat2_util_initialize.c: 110: LATBbits.LATB1 = 0;
 13136  00323E  928A               	bcf	3978,1,c	;volatile
 13137                           
 13138                           ; BSR set to: 15
 13139                           ;easat2_util_initialize.c: 111: LATBbits.LATB2 = 0;
 13140  003240  948A               	bcf	3978,2,c	;volatile
 13141                           
 13142                           ; BSR set to: 15
 13143                           ;easat2_util_initialize.c: 112: LATBbits.LATB3 = 0;
 13144  003242  968A               	bcf	3978,3,c	;volatile
 13145                           
 13146                           ; BSR set to: 15
 13147                           ;easat2_util_initialize.c: 113: LATBbits.LATB4 = 0;
 13148  003244  988A               	bcf	3978,4,c	;volatile
 13149                           
 13150                           ; BSR set to: 15
 13151                           ;easat2_util_initialize.c: 114: LATBbits.LATB5 = 0;
 13152  003246  9A8A               	bcf	3978,5,c	;volatile
 13153                           
 13154                           ; BSR set to: 15
 13155                           ;easat2_util_initialize.c: 118: TRISDbits.TRISD0 = 0;
 13156  003248  9095               	bcf	3989,0,c	;volatile
 13157                           
 13158                           ; BSR set to: 15
 13159                           ;easat2_util_initialize.c: 119: TRISDbits.TRISD1 = 0;
 13160  00324A  9295               	bcf	3989,1,c	;volatile
 13161                           
 13162                           ; BSR set to: 15
 13163                           ;easat2_util_initialize.c: 120: TRISDbits.TRISD2 = 0;
 13164  00324C  9495               	bcf	3989,2,c	;volatile
 13165                           
 13166                           ; BSR set to: 15
 13167                           ;easat2_util_initialize.c: 121: TRISDbits.TRISD3 = 0;
 13168  00324E  9695               	bcf	3989,3,c	;volatile
 13169                           
 13170                           ; BSR set to: 15
 13171                           ;easat2_util_initialize.c: 122: TRISDbits.TRISD4 = 0;
 13172  003250  9895               	bcf	3989,4,c	;volatile
 13173                           
 13174                           ; BSR set to: 15
 13175                           ;easat2_util_initialize.c: 123: TRISDbits.TRISD5 = 0;
 13176  003252  9A95               	bcf	3989,5,c	;volatile
 13177                           
 13178                           ; BSR set to: 15
 13179                           ;easat2_util_initialize.c: 124: TRISDbits.TRISD6 = 0;
 13180  003254  9C95               	bcf	3989,6,c	;volatile
 13181                           
 13182                           ; BSR set to: 15
 13183                           ;easat2_util_initialize.c: 125: TRISDbits.TRISD7 = 0;
 13184  003256  9E95               	bcf	3989,7,c	;volatile
 13185                           
 13186                           ; BSR set to: 15
 13187                           ;easat2_util_initialize.c: 129: ANSELDbits.ANSD0 = 0;
 13188  003258  010F               	movlb	15	; () banked
 13189  00325A  913B               	bcf	59,0,b	;volatile
 13190                           
 13191                           ; BSR set to: 15
 13192                           ;easat2_util_initialize.c: 130: ANSELDbits.ANSD1 = 0;
 13193  00325C  010F               	movlb	15	; () banked
 13194  00325E  933B               	bcf	59,1,b	;volatile
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;easat2_util_initialize.c: 131: ANSELDbits.ANSD2 = 0;
 13198  003260  010F               	movlb	15	; () banked
 13199  003262  953B               	bcf	59,2,b	;volatile
 13200                           
 13201                           ; BSR set to: 15
 13202                           ;easat2_util_initialize.c: 132: ANSELDbits.ANSD3 = 0;
 13203  003264  010F               	movlb	15	; () banked
 13204  003266  973B               	bcf	59,3,b	;volatile
 13205                           
 13206                           ; BSR set to: 15
 13207                           ;easat2_util_initialize.c: 133: ANSELDbits.ANSD4 = 0;
 13208  003268  010F               	movlb	15	; () banked
 13209  00326A  993B               	bcf	59,4,b	;volatile
 13210                           
 13211                           ; BSR set to: 15
 13212                           ;easat2_util_initialize.c: 134: ANSELDbits.ANSD5 = 0;
 13213  00326C  010F               	movlb	15	; () banked
 13214  00326E  9B3B               	bcf	59,5,b	;volatile
 13215                           
 13216                           ; BSR set to: 15
 13217                           ;easat2_util_initialize.c: 135: ANSELDbits.ANSD6 = 0;
 13218  003270  010F               	movlb	15	; () banked
 13219  003272  9D3B               	bcf	59,6,b	;volatile
 13220                           
 13221                           ; BSR set to: 15
 13222                           ;easat2_util_initialize.c: 136: ANSELDbits.ANSD7 = 0;
 13223  003274  010F               	movlb	15	; () banked
 13224  003276  9F3B               	bcf	59,7,b	;volatile
 13225                           
 13226                           ; BSR set to: 15
 13227                           ;easat2_util_initialize.c: 140: LATDbits.LATD0 = 0;
 13228  003278  908C               	bcf	3980,0,c	;volatile
 13229                           
 13230                           ; BSR set to: 15
 13231                           ;easat2_util_initialize.c: 141: LATDbits.LATD1 = 0;
 13232  00327A  928C               	bcf	3980,1,c	;volatile
 13233                           
 13234                           ; BSR set to: 15
 13235                           ;easat2_util_initialize.c: 142: LATDbits.LATD2 = 0;
 13236  00327C  948C               	bcf	3980,2,c	;volatile
 13237                           
 13238                           ; BSR set to: 15
 13239                           ;easat2_util_initialize.c: 143: LATDbits.LATD3 = 0;
 13240  00327E  968C               	bcf	3980,3,c	;volatile
 13241                           
 13242                           ; BSR set to: 15
 13243                           ;easat2_util_initialize.c: 144: LATDbits.LATD4 = 0;
 13244  003280  988C               	bcf	3980,4,c	;volatile
 13245                           
 13246                           ; BSR set to: 15
 13247                           ;easat2_util_initialize.c: 145: LATDbits.LATD5 = 0;
 13248  003282  9A8C               	bcf	3980,5,c	;volatile
 13249                           
 13250                           ; BSR set to: 15
 13251                           ;easat2_util_initialize.c: 146: LATDbits.LATD6 = 0;
 13252  003284  9C8C               	bcf	3980,6,c	;volatile
 13253                           
 13254                           ; BSR set to: 15
 13255                           ;easat2_util_initialize.c: 147: LATDbits.LATD7 = 0;
 13256  003286  9E8C               	bcf	3980,7,c	;volatile
 13257                           
 13258                           ; BSR set to: 15
 13259  003288  0012               	return		;funcret
 13260  00328A                     __end_of_io_initialize:
 13261                           	opt stack 0
 13262                           tblptru	equ	0xFF8
 13263                           tblptrh	equ	0xFF7
 13264                           tblptrl	equ	0xFF6
 13265                           tablat	equ	0xFF5
 13266                           prodh	equ	0xFF4
 13267                           prodl	equ	0xFF3
 13268                           intcon	equ	0xFF2
 13269                           intcon2	equ	0xFF1
 13270                           indf0	equ	0xFEF
 13271                           postinc0	equ	0xFEE
 13272                           fsr0h	equ	0xFEA
 13273                           fsr0l	equ	0xFE9
 13274                           wreg	equ	0xFE8
 13275                           indf1	equ	0xFE7
 13276                           postdec1	equ	0xFE5
 13277                           fsr1h	equ	0xFE2
 13278                           fsr1l	equ	0xFE1
 13279                           indf2	equ	0xFDF
 13280                           postinc2	equ	0xFDE
 13281                           postdec2	equ	0xFDD
 13282                           fsr2h	equ	0xFDA
 13283                           fsr2l	equ	0xFD9
 13284                           status	equ	0xFD8
 13285                           
 13286 ;; *************** function _low_priority_int *****************
 13287 ;; Defined at:
 13288 ;;		line 223 in file "easat2_util_timer.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;		None
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;		None
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  1    wreg      void 
 13295 ;; Registers used:
 13296 ;;		None
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13302 ;;      Params:         0       0       0       0       0       0       0
 13303 ;;      Locals:         0       0       0       0       0       0       0
 13304 ;;      Temps:          0      17       0       0       0       0       0
 13305 ;;      Totals:         0      17       0       0       0       0       0
 13306 ;;Total ram usage:       17 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    2
 13309 ;; This function calls:
 13310 ;;		Nothing
 13311 ;; This function is called by:
 13312 ;;		Interrupt level 1
 13313 ;; This function uses a non-reentrant model
 13314 ;;
 13315                           
 13316                           	psect	intcodelo
 13317  000018                     __pintcodelo:
 13318                           	opt stack 0
 13319  000018                     _low_priority_int:
 13320                           	opt stack 21
 13321                           
 13322                           ; BSR set to: 15
 13323                           ;incstack = 0
 13324  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13325  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13326  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13327  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13328  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13329  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13330  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13331  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13332  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13333  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13334  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13335  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13336  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13337  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13338  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13339  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13340  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13341  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13342  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13343  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13344  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13345  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13346  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13347  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13348  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13349  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13350  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13351  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13352  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13353  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13354  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13355  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13356  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13357  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13358  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13359  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13360  0000A4  0010               	retfie	
 13361  0000A6                     __end_of_low_priority_int:
 13362                           	opt stack 0
 13363                           pclatu	equ	0xFFB
 13364                           pclath	equ	0xFFA
 13365                           tblptru	equ	0xFF8
 13366                           tblptrh	equ	0xFF7
 13367                           tblptrl	equ	0xFF6
 13368                           tablat	equ	0xFF5
 13369                           prodh	equ	0xFF4
 13370                           prodl	equ	0xFF3
 13371                           intcon	equ	0xFF2
 13372                           intcon2	equ	0xFF1
 13373                           indf0	equ	0xFEF
 13374                           postinc0	equ	0xFEE
 13375                           fsr0h	equ	0xFEA
 13376                           fsr0l	equ	0xFE9
 13377                           wreg	equ	0xFE8
 13378                           indf1	equ	0xFE7
 13379                           postdec1	equ	0xFE5
 13380                           fsr1h	equ	0xFE2
 13381                           fsr1l	equ	0xFE1
 13382                           bsr	equ	0xFE0
 13383                           indf2	equ	0xFDF
 13384                           postinc2	equ	0xFDE
 13385                           postdec2	equ	0xFDD
 13386                           fsr2h	equ	0xFDA
 13387                           fsr2l	equ	0xFD9
 13388                           status	equ	0xFD8
 13389                           
 13390 ;; *************** function _high_priority_int *****************
 13391 ;; Defined at:
 13392 ;;		line 74 in file "easat2_util_timer.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  i               2   31[COMRAM] int 
 13397 ;;  sample          2   29[COMRAM] unsigned int 
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13407 ;;      Params:         0       0       0       0       0       0       0
 13408 ;;      Locals:         4       0       0       0       0       0       0
 13409 ;;      Temps:         19       0       0       0       0       0       0
 13410 ;;      Totals:        23       0       0       0       0       0       0
 13411 ;;Total ram usage:       23 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    1
 13414 ;; This function calls:
 13415 ;;		___ltdiv
 13416 ;; This function is called by:
 13417 ;;		Interrupt level 2
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	intcode
 13422  000008                     __pintcode:
 13423                           	opt stack 0
 13424  000008                     _high_priority_int:
 13425                           	opt stack 21
 13426                           
 13427                           ;incstack = 0
 13428  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13429  00000A  EFCE  F010         	goto	int_func
 13430                           pclatu	equ	0xFFB
 13431                           pclath	equ	0xFFA
 13432                           tblptru	equ	0xFF8
 13433                           tblptrh	equ	0xFF7
 13434                           tblptrl	equ	0xFF6
 13435                           tablat	equ	0xFF5
 13436                           prodh	equ	0xFF4
 13437                           prodl	equ	0xFF3
 13438                           intcon	equ	0xFF2
 13439                           intcon2	equ	0xFF1
 13440                           indf0	equ	0xFEF
 13441                           postinc0	equ	0xFEE
 13442                           fsr0h	equ	0xFEA
 13443                           fsr0l	equ	0xFE9
 13444                           wreg	equ	0xFE8
 13445                           indf1	equ	0xFE7
 13446                           postdec1	equ	0xFE5
 13447                           fsr1h	equ	0xFE2
 13448                           fsr1l	equ	0xFE1
 13449                           bsr	equ	0xFE0
 13450                           indf2	equ	0xFDF
 13451                           postinc2	equ	0xFDE
 13452                           postdec2	equ	0xFDD
 13453                           fsr2h	equ	0xFDA
 13454                           fsr2l	equ	0xFD9
 13455                           status	equ	0xFD8
 13456                           
 13457                           	psect	intcode_body
 13458  00219C                     __pintcode_body:
 13459                           	opt stack 21
 13460  00219C                     int_func:
 13461                           	opt stack 21
 13462  00219C  CFFA F010          	movff	pclath,??_high_priority_int+5
 13463  0021A0  CFFB F011          	movff	pclatu,??_high_priority_int+6
 13464  0021A4  CFE9 F012          	movff	fsr0l,??_high_priority_int+7
 13465  0021A8  CFEA F013          	movff	fsr0h,??_high_priority_int+8
 13466  0021AC  CFE1 F014          	movff	fsr1l,??_high_priority_int+9
 13467  0021B0  CFE2 F015          	movff	fsr1h,??_high_priority_int+10
 13468  0021B4  CFD9 F016          	movff	fsr2l,??_high_priority_int+11
 13469  0021B8  CFDA F017          	movff	fsr2h,??_high_priority_int+12
 13470  0021BC  CFF3 F018          	movff	prodl,??_high_priority_int+13
 13471  0021C0  CFF4 F019          	movff	prodh,??_high_priority_int+14
 13472  0021C4  CFF6 F01A          	movff	tblptrl,??_high_priority_int+15
 13473  0021C8  CFF7 F01B          	movff	tblptrh,??_high_priority_int+16
 13474  0021CC  CFF8 F01C          	movff	tblptru,??_high_priority_int+17
 13475  0021D0  CFF5 F01D          	movff	tablat,??_high_priority_int+18
 13476                           
 13477                           ;easat2_util_timer.c: 76: static unsigned int samples[100];
 13478                           ;easat2_util_timer.c: 77: static int sample_position = 0;
 13479                           ;easat2_util_timer.c: 78: static unsigned short long noise_mean_value = 32000;
 13480                           ;easat2_util_timer.c: 79: static unsigned int activation_thresold = 32000;
 13481                           ;easat2_util_timer.c: 80: static int times_thresold_exceeded = 0;
 13482                           ;easat2_util_timer.c: 81: static int cycles_transmitter_active = 0;
 13483                           ;easat2_util_timer.c: 82: static int is_transmitter_active = 0;
 13484                           ;easat2_util_timer.c: 84: static int valid_samples = 0;
 13485  0021D4  0E00               	movlw	0
 13486  0021D6  6E1F               	movwf	high_priority_int@sample+1,c
 13487  0021D8  0E00               	movlw	0
 13488  0021DA  6E1E               	movwf	high_priority_int@sample,c
 13489                           
 13490                           ;easat2_util_timer.c: 90: if (PIR1bits.TMR1IF) {
 13491  0021DC  A09E               	btfss	3998,0,c	;volatile
 13492  0021DE  D0D1               	goto	i2l239
 13493                           
 13494                           ;easat2_util_timer.c: 94: TMR1H = 0xEC;
 13495  0021E0  0EEC               	movlw	236
 13496  0021E2  6ECF               	movwf	4047,c	;volatile
 13497                           
 13498                           ;easat2_util_timer.c: 95: TMR1L = 0x77 ; 60535;
 13499  0021E4  0E77               	movlw	119
 13500  0021E6  6ECE               	movwf	4046,c	;volatile
 13501  0021E8  0004               	clrwdt		;# 
 13502                           
 13503                           ;easat2_util_timer.c: 112: tmr1_interrupt_number++;
 13504  0021EA  4A2D               	infsnz	_tmr1_interrupt_number,f,c
 13505  0021EC  2A2E               	incf	_tmr1_interrupt_number+1,f,c
 13506                           
 13507                           ;easat2_util_timer.c: 116: if (tmr1_interrupt_number == 50) {
 13508  0021EE  0E32               	movlw	50
 13509  0021F0  182D               	xorwf	_tmr1_interrupt_number,w,c
 13510  0021F2  102E               	iorwf	_tmr1_interrupt_number+1,w,c
 13511  0021F4  A4D8               	btfss	status,2,c
 13512  0021F6  D010               	goto	i2l4606
 13513                           
 13514                           ;easat2_util_timer.c: 119: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13515  0021F8  B883               	btfsc	3971,4,c	;volatile
 13516  0021FA  D003               	goto	i2u428_40
 13517  0021FC  6A0B               	clrf	??_high_priority_int& (0+255),c
 13518  0021FE  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13519  002200  D001               	goto	i2u429_48
 13520  002202                     i2u428_40:
 13521  002202  6A0B               	clrf	??_high_priority_int& (0+255),c
 13522  002204                     i2u429_48:
 13523  002204  3A0B               	swapf	??_high_priority_int,f,c
 13524  002206  5083               	movf	3971,w,c	;volatile
 13525  002208  180B               	xorwf	??_high_priority_int,w,c
 13526  00220A  0BEF               	andlw	-17
 13527  00220C  180B               	xorwf	??_high_priority_int,w,c
 13528  00220E  6E83               	movwf	3971,c	;volatile
 13529                           
 13530                           ;easat2_util_timer.c: 121: tmr1_interrupt_number = 0;
 13531  002210  0E00               	movlw	0
 13532  002212  6E2E               	movwf	_tmr1_interrupt_number+1,c
 13533  002214  0E00               	movlw	0
 13534  002216  6E2D               	movwf	_tmr1_interrupt_number,c
 13535  002218                     i2l4606:
 13536                           
 13537                           ;easat2_util_timer.c: 123: }
 13538                           ;easat2_util_timer.c: 127: if (valid_samples < 100) valid_samples++;
 13539  002218  BE38               	btfsc	high_priority_int@valid_samples+1,7,c
 13540  00221A  D006               	goto	i2l4608
 13541  00221C  5038               	movf	high_priority_int@valid_samples+1,w,c
 13542  00221E  E106               	bnz	i2l4610
 13543  002220  0E64               	movlw	100
 13544  002222  5C37               	subwf	high_priority_int@valid_samples,w,c
 13545  002224  B0D8               	btfsc	status,0,c
 13546  002226  D002               	goto	i2l4610
 13547  002228                     i2l4608:
 13548  002228  4A37               	infsnz	high_priority_int@valid_samples,f,c
 13549  00222A  2A38               	incf	high_priority_int@valid_samples+1,f,c
 13550  00222C                     i2l4610:
 13551                           
 13552                           ;easat2_util_timer.c: 140: ADCON0bits.CHS = 4;
 13553  00222C  94C2               	bcf	4034,2,c	;volatile
 13554  00222E  96C2               	bcf	4034,3,c	;volatile
 13555  002230  88C2               	bsf	4034,4,c	;volatile
 13556  002232  9AC2               	bcf	4034,5,c	;volatile
 13557  002234  9CC2               	bcf	4034,6,c	;volatile
 13558                           
 13559                           ;easat2_util_timer.c: 141: ADCON0bits.ADON = 1;
 13560  002236  80C2               	bsf	4034,0,c	;volatile
 13561                           
 13562                           ;easat2_util_timer.c: 142: PIR1bits.ADIF = 0;
 13563  002238  9C9E               	bcf	3998,6,c	;volatile
 13564                           
 13565                           ;easat2_util_timer.c: 144: ADCON0bits.GO = 1;
 13566  00223A  82C2               	bsf	4034,1,c	;volatile
 13567  00223C                     i2l227:
 13568  00223C  AC9E               	btfss	3998,6,c	;volatile
 13569  00223E  D7FE               	goto	i2l227
 13570                           
 13571                           ;easat2_util_timer.c: 147: sample = ADRES;
 13572  002240  CFC3 F01E          	movff	4035,high_priority_int@sample	;volatile
 13573  002244  CFC4 F01F          	movff	4036,high_priority_int@sample+1	;volatile
 13574                           
 13575                           ;easat2_util_timer.c: 149: PIR1bits.ADIF = 0;
 13576  002248  9C9E               	bcf	3998,6,c	;volatile
 13577                           
 13578                           ;easat2_util_timer.c: 150: ADCON0bits.ADON = 0;
 13579  00224A  90C2               	bcf	4034,0,c	;volatile
 13580                           
 13581                           ;easat2_util_timer.c: 152: if (is_transmitter_active) cycles_transmitter_active++;
 13582  00224C  5031               	movf	high_priority_int@is_transmitter_active,w,c
 13583  00224E  1032               	iorwf	high_priority_int@is_transmitter_active+1,w,c
 13584  002250  B4D8               	btfsc	status,2,c
 13585  002252  D002               	goto	i2l4622
 13586  002254  4A2F               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13587  002256  2A30               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13588  002258                     i2l4622:
 13589                           
 13590                           ;easat2_util_timer.c: 157: if (sample > 128 && sample > activation_thresold) {
 13591  002258  501F               	movf	high_priority_int@sample+1,w,c
 13592  00225A  E104               	bnz	i2u433_40
 13593  00225C  0E81               	movlw	129
 13594  00225E  5C1E               	subwf	high_priority_int@sample,w,c
 13595  002260  A0D8               	btfss	status,0,c
 13596  002262  D01B               	goto	i2l4634
 13597  002264                     i2u433_40:
 13598  002264  501E               	movf	high_priority_int@sample,w,c
 13599  002266  5C3C               	subwf	high_priority_int@activation_thresold,w,c
 13600  002268  501F               	movf	high_priority_int@sample+1,w,c
 13601  00226A  583D               	subwfb	high_priority_int@activation_thresold+1,w,c
 13602  00226C  B0D8               	btfsc	status,0,c
 13603  00226E  D015               	goto	i2l4634
 13604                           
 13605                           ;easat2_util_timer.c: 159: times_thresold_exceeded++;
 13606  002270  4A35               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 13607  002272  2A36               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 13608                           
 13609                           ;easat2_util_timer.c: 161: if (times_thresold_exceeded == 200) {
 13610  002274  0EC8               	movlw	200
 13611  002276  1835               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 13612  002278  1036               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 13613  00227A  A4D8               	btfss	status,2,c
 13614  00227C  D081               	goto	i2l4668
 13615                           
 13616                           ;easat2_util_timer.c: 166: (PORTBbits.RB1) = 1;
 13617  00227E  8281               	bsf	3969,1,c	;volatile
 13618                           
 13619                           ;easat2_util_timer.c: 168: is_transmitter_active = 1;
 13620  002280  0E00               	movlw	0
 13621  002282  6E32               	movwf	high_priority_int@is_transmitter_active+1,c
 13622  002284  0E01               	movlw	1
 13623  002286  6E31               	movwf	high_priority_int@is_transmitter_active,c
 13624                           
 13625                           ;easat2_util_timer.c: 169: cycles_transmitter_active = 0;
 13626  002288  0E00               	movlw	0
 13627  00228A  6E30               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13628  00228C  0E00               	movlw	0
 13629  00228E  6E2F               	movwf	high_priority_int@cycles_transmitter_active,c
 13630                           
 13631                           ;easat2_util_timer.c: 171: times_thresold_exceeded = 0;
 13632  002290  0E00               	movlw	0
 13633  002292  6E36               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13634  002294  0E00               	movlw	0
 13635  002296  6E35               	movwf	high_priority_int@times_thresold_exceeded,c
 13636                           
 13637                           ;easat2_util_timer.c: 173: }
 13638                           ;easat2_util_timer.c: 176: } else {
 13639  002298  D073               	goto	i2l4668
 13640  00229A                     i2l4634:
 13641                           
 13642                           ;easat2_util_timer.c: 178: times_thresold_exceeded = 0;
 13643  00229A  0E00               	movlw	0
 13644  00229C  6E36               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13645  00229E  0E00               	movlw	0
 13646  0022A0  6E35               	movwf	high_priority_int@times_thresold_exceeded,c
 13647                           
 13648                           ;easat2_util_timer.c: 180: if (cycles_transmitter_active == 12000) {
 13649  0022A2  0EE0               	movlw	224
 13650  0022A4  182F               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13651  0022A6  E109               	bnz	i2l4642
 13652  0022A8  0E2E               	movlw	46
 13653  0022AA  1830               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13654  0022AC  A4D8               	btfss	status,2,c
 13655  0022AE  D005               	goto	i2l4642
 13656                           
 13657                           ;easat2_util_timer.c: 182: (PORTBbits.RB1) = 0;
 13658  0022B0  9281               	bcf	3969,1,c	;volatile
 13659                           
 13660                           ;easat2_util_timer.c: 183: is_transmitter_active = 0;
 13661  0022B2  0E00               	movlw	0
 13662  0022B4  6E32               	movwf	high_priority_int@is_transmitter_active+1,c
 13663  0022B6  0E00               	movlw	0
 13664  0022B8  6E31               	movwf	high_priority_int@is_transmitter_active,c
 13665  0022BA                     i2l4642:
 13666                           
 13667                           ;easat2_util_timer.c: 184: }
 13668                           ;easat2_util_timer.c: 186: samples[sample_position++] = sample;
 13669  0022BA  90D8               	bcf	status,0,c
 13670  0022BC  3433               	rlcf	high_priority_int@sample_position,w,c
 13671  0022BE  6ED9               	movwf	fsr2l,c
 13672  0022C0  3434               	rlcf	high_priority_int@sample_position+1,w,c
 13673  0022C2  6EDA               	movwf	fsr2h,c
 13674  0022C4  0E00               	movlw	low high_priority_int@samples
 13675  0022C6  26D9               	addwf	fsr2l,f,c
 13676  0022C8  0E02               	movlw	high high_priority_int@samples
 13677  0022CA  22DA               	addwfc	fsr2h,f,c
 13678  0022CC  C01E  FFDE         	movff	high_priority_int@sample,postinc2
 13679  0022D0  C01F  FFDD         	movff	high_priority_int@sample+1,postdec2
 13680  0022D4  4A33               	infsnz	high_priority_int@sample_position,f,c
 13681  0022D6  2A34               	incf	high_priority_int@sample_position+1,f,c
 13682                           
 13683                           ;easat2_util_timer.c: 189: if (sample_position == 100) sample_position = 0;
 13684  0022D8  0E64               	movlw	100
 13685  0022DA  1833               	xorwf	high_priority_int@sample_position,w,c
 13686  0022DC  1034               	iorwf	high_priority_int@sample_position+1,w,c
 13687  0022DE  A4D8               	btfss	status,2,c
 13688  0022E0  D004               	goto	i2l4650
 13689  0022E2  0E00               	movlw	0
 13690  0022E4  6E34               	movwf	high_priority_int@sample_position+1,c
 13691  0022E6  0E00               	movlw	0
 13692  0022E8  6E33               	movwf	high_priority_int@sample_position,c
 13693  0022EA                     i2l4650:
 13694                           
 13695                           ;easat2_util_timer.c: 191: if (valid_samples == 100) {
 13696  0022EA  0E64               	movlw	100
 13697  0022EC  1837               	xorwf	high_priority_int@valid_samples,w,c
 13698  0022EE  1038               	iorwf	high_priority_int@valid_samples+1,w,c
 13699  0022F0  A4D8               	btfss	status,2,c
 13700  0022F2  D046               	goto	i2l4668
 13701                           
 13702                           ;easat2_util_timer.c: 194: noise_mean_value = 0;
 13703  0022F4  0E00               	movlw	0
 13704  0022F6  6E39               	movwf	high_priority_int@noise_mean_value,c
 13705  0022F8  0E00               	movlw	0
 13706  0022FA  6E3A               	movwf	high_priority_int@noise_mean_value+1,c
 13707  0022FC  0E00               	movlw	0
 13708  0022FE  6E3B               	movwf	high_priority_int@noise_mean_value+2,c
 13709                           
 13710                           ;easat2_util_timer.c: 196: for (int i = 0; i < 100; i++)
 13711  002300  0E00               	movlw	0
 13712  002302  6E21               	movwf	high_priority_int@i+1,c
 13713  002304  0E00               	movlw	0
 13714  002306  6E20               	movwf	high_priority_int@i,c
 13715  002308                     i2l4654:
 13716  002308  BE21               	btfsc	high_priority_int@i+1,7,c
 13717  00230A  D006               	goto	i2l4658
 13718  00230C  5021               	movf	high_priority_int@i+1,w,c
 13719  00230E  E11F               	bnz	i2l4664
 13720  002310  0E64               	movlw	100
 13721  002312  5C20               	subwf	high_priority_int@i,w,c
 13722  002314  B0D8               	btfsc	status,0,c
 13723  002316  D01B               	goto	i2l4664
 13724  002318                     i2l4658:
 13725                           
 13726                           ;easat2_util_timer.c: 197: noise_mean_value += samples[i];
 13727  002318  90D8               	bcf	status,0,c
 13728  00231A  3420               	rlcf	high_priority_int@i,w,c
 13729  00231C  6ED9               	movwf	fsr2l,c
 13730  00231E  3421               	rlcf	high_priority_int@i+1,w,c
 13731  002320  6EDA               	movwf	fsr2h,c
 13732  002322  0E00               	movlw	low high_priority_int@samples
 13733  002324  26D9               	addwf	fsr2l,f,c
 13734  002326  0E02               	movlw	high high_priority_int@samples
 13735  002328  22DA               	addwfc	fsr2h,f,c
 13736  00232A  CFDE F00B          	movff	postinc2,??_high_priority_int
 13737  00232E  CFDD F00C          	movff	postdec2,??_high_priority_int+1
 13738  002332  C00B  F00D         	movff	??_high_priority_int,??_high_priority_int+2
 13739  002336  C00C  F00E         	movff	??_high_priority_int+1,??_high_priority_int+3
 13740  00233A  6A0F               	clrf	(??_high_priority_int+4)& (0+255),c
 13741  00233C  500D               	movf	??_high_priority_int+2,w,c
 13742  00233E  2639               	addwf	high_priority_int@noise_mean_value,f,c
 13743  002340  500E               	movf	??_high_priority_int+3,w,c
 13744  002342  223A               	addwfc	high_priority_int@noise_mean_value+1,f,c
 13745  002344  500F               	movf	??_high_priority_int+4,w,c
 13746  002346  223B               	addwfc	high_priority_int@noise_mean_value+2,f,c
 13747  002348  4A20               	infsnz	high_priority_int@i,f,c
 13748  00234A  2A21               	incf	high_priority_int@i+1,f,c
 13749  00234C  D7DD               	goto	i2l4654
 13750  00234E                     i2l4664:
 13751                           
 13752                           ;easat2_util_timer.c: 200: noise_mean_value = (unsigned short long)(noise_mean_value / 1
      +                          00);
 13753  00234E  C039  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 13754  002352  C03A  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 13755  002356  C03B  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 13756  00235A  0E64               	movlw	100
 13757  00235C  6E04               	movwf	___ltdiv@divisor,c
 13758  00235E  0E00               	movlw	0
 13759  002360  6E05               	movwf	___ltdiv@divisor+1,c
 13760  002362  0E00               	movlw	0
 13761  002364  6E06               	movwf	___ltdiv@divisor+2,c
 13762  002366  EC26  F01B         	call	___ltdiv	;wreg free
 13763  00236A  C001  F039         	movff	?___ltdiv,high_priority_int@noise_mean_value
 13764  00236E  C002  F03A         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 13765  002372  C003  F03B         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 13766                           
 13767                           ;easat2_util_timer.c: 205: activation_thresold = noise_mean_value * 2;
 13768  002376  90D8               	bcf	status,0,c
 13769  002378  3439               	rlcf	high_priority_int@noise_mean_value,w,c
 13770  00237A  6E3C               	movwf	high_priority_int@activation_thresold,c
 13771  00237C  343A               	rlcf	high_priority_int@noise_mean_value+1,w,c
 13772  00237E  6E3D               	movwf	high_priority_int@activation_thresold+1,c
 13773  002380                     i2l4668:
 13774                           
 13775                           ;easat2_util_timer.c: 207: }
 13776                           ;easat2_util_timer.c: 209: }
 13777                           ;easat2_util_timer.c: 214: PIR1bits.TMR1IF = 0;
 13778  002380  909E               	bcf	3998,0,c	;volatile
 13779  002382                     i2l239:
 13780  002382  C01D  FFF5         	movff	??_high_priority_int+18,tablat
 13781  002386  C01C  FFF8         	movff	??_high_priority_int+17,tblptru
 13782  00238A  C01B  FFF7         	movff	??_high_priority_int+16,tblptrh
 13783  00238E  C01A  FFF6         	movff	??_high_priority_int+15,tblptrl
 13784  002392  C019  FFF4         	movff	??_high_priority_int+14,prodh
 13785  002396  C018  FFF3         	movff	??_high_priority_int+13,prodl
 13786  00239A  C017  FFDA         	movff	??_high_priority_int+12,fsr2h
 13787  00239E  C016  FFD9         	movff	??_high_priority_int+11,fsr2l
 13788  0023A2  C015  FFE2         	movff	??_high_priority_int+10,fsr1h
 13789  0023A6  C014  FFE1         	movff	??_high_priority_int+9,fsr1l
 13790  0023AA  C013  FFEA         	movff	??_high_priority_int+8,fsr0h
 13791  0023AE  C012  FFE9         	movff	??_high_priority_int+7,fsr0l
 13792  0023B2  C011  FFFB         	movff	??_high_priority_int+6,pclatu
 13793  0023B6  C010  FFFA         	movff	??_high_priority_int+5,pclath
 13794  0023BA  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13795  0023BC  0011               	retfie		f
 13796  0023BE                     __end_of_high_priority_int:
 13797                           	opt stack 0
 13798                           pclatu	equ	0xFFB
 13799                           pclath	equ	0xFFA
 13800                           tblptru	equ	0xFF8
 13801                           tblptrh	equ	0xFF7
 13802                           tblptrl	equ	0xFF6
 13803                           tablat	equ	0xFF5
 13804                           prodh	equ	0xFF4
 13805                           prodl	equ	0xFF3
 13806                           intcon	equ	0xFF2
 13807                           intcon2	equ	0xFF1
 13808                           indf0	equ	0xFEF
 13809                           postinc0	equ	0xFEE
 13810                           fsr0h	equ	0xFEA
 13811                           fsr0l	equ	0xFE9
 13812                           wreg	equ	0xFE8
 13813                           indf1	equ	0xFE7
 13814                           postdec1	equ	0xFE5
 13815                           fsr1h	equ	0xFE2
 13816                           fsr1l	equ	0xFE1
 13817                           bsr	equ	0xFE0
 13818                           indf2	equ	0xFDF
 13819                           postinc2	equ	0xFDE
 13820                           postdec2	equ	0xFDD
 13821                           fsr2h	equ	0xFDA
 13822                           fsr2l	equ	0xFD9
 13823                           status	equ	0xFD8
 13824                           
 13825 ;; *************** function ___ltdiv *****************
 13826 ;; Defined at:
 13827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ltdiv.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  dividend        3    0[COMRAM] unsigned um
 13830 ;;  divisor         3    3[COMRAM] unsigned um
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  quotient        3    6[COMRAM] unsigned um
 13833 ;;  counter         1    9[COMRAM] unsigned char 
 13834 ;; Return value:  Size  Location     Type
 13835 ;;                  3    0[COMRAM] unsigned um
 13836 ;; Registers used:
 13837 ;;		wreg, status,2, status,0
 13838 ;; Tracked objects:
 13839 ;;		On entry : 0/0
 13840 ;;		On exit  : 0/0
 13841 ;;		Unchanged: 0/0
 13842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13843 ;;      Params:         6       0       0       0       0       0       0
 13844 ;;      Locals:         4       0       0       0       0       0       0
 13845 ;;      Temps:          0       0       0       0       0       0       0
 13846 ;;      Totals:        10       0       0       0       0       0       0
 13847 ;;Total ram usage:       10 bytes
 13848 ;; Hardware stack levels used:    1
 13849 ;; This function calls:
 13850 ;;		Nothing
 13851 ;; This function is called by:
 13852 ;;		_high_priority_int
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text56
 13857  00364C                     __ptext56:
 13858                           	opt stack 0
 13859  00364C                     ___ltdiv:
 13860                           	opt stack 21
 13861                           
 13862                           ;incstack = 0
 13863  00364C  0E00               	movlw	0
 13864  00364E  6E07               	movwf	___ltdiv@quotient,c
 13865  003650  0E00               	movlw	0
 13866  003652  6E08               	movwf	___ltdiv@quotient+1,c
 13867  003654  0E00               	movlw	0
 13868  003656  6E09               	movwf	___ltdiv@quotient+2,c
 13869  003658  5004               	movf	___ltdiv@divisor,w,c
 13870  00365A  1005               	iorwf	___ltdiv@divisor+1,w,c
 13871  00365C  1006               	iorwf	___ltdiv@divisor+2,w,c
 13872  00365E  B4D8               	btfsc	status,2,c
 13873  003660  D023               	goto	i2l941
 13874  003662  0E01               	movlw	1
 13875  003664  6E0A               	movwf	___ltdiv@counter,c
 13876  003666  D005               	goto	i2l4576
 13877  003668                     i2l4574:
 13878  003668  90D8               	bcf	status,0,c
 13879  00366A  3604               	rlcf	___ltdiv@divisor,f,c
 13880  00366C  3605               	rlcf	___ltdiv@divisor+1,f,c
 13881  00366E  3606               	rlcf	___ltdiv@divisor+2,f,c
 13882  003670  2A0A               	incf	___ltdiv@counter,f,c
 13883  003672                     i2l4576:
 13884  003672  AE06               	btfss	___ltdiv@divisor+2,7,c
 13885  003674  D7F9               	goto	i2l4574
 13886  003676                     i2l4578:
 13887  003676  90D8               	bcf	status,0,c
 13888  003678  3607               	rlcf	___ltdiv@quotient,f,c
 13889  00367A  3608               	rlcf	___ltdiv@quotient+1,f,c
 13890  00367C  3609               	rlcf	___ltdiv@quotient+2,f,c
 13891  00367E  5004               	movf	___ltdiv@divisor,w,c
 13892  003680  5C01               	subwf	___ltdiv@dividend,w,c
 13893  003682  5005               	movf	___ltdiv@divisor+1,w,c
 13894  003684  5802               	subwfb	___ltdiv@dividend+1,w,c
 13895  003686  5006               	movf	___ltdiv@divisor+2,w,c
 13896  003688  5803               	subwfb	___ltdiv@dividend+2,w,c
 13897  00368A  A0D8               	btfss	status,0,c
 13898  00368C  D007               	goto	i2l946
 13899  00368E  5004               	movf	___ltdiv@divisor,w,c
 13900  003690  5E01               	subwf	___ltdiv@dividend,f,c
 13901  003692  5005               	movf	___ltdiv@divisor+1,w,c
 13902  003694  5A02               	subwfb	___ltdiv@dividend+1,f,c
 13903  003696  5006               	movf	___ltdiv@divisor+2,w,c
 13904  003698  5A03               	subwfb	___ltdiv@dividend+2,f,c
 13905  00369A  8007               	bsf	___ltdiv@quotient,0,c
 13906  00369C                     i2l946:
 13907  00369C  90D8               	bcf	status,0,c
 13908  00369E  3206               	rrcf	___ltdiv@divisor+2,f,c
 13909  0036A0  3205               	rrcf	___ltdiv@divisor+1,f,c
 13910  0036A2  3204               	rrcf	___ltdiv@divisor,f,c
 13911  0036A4  2E0A               	decfsz	___ltdiv@counter,f,c
 13912  0036A6  D7E7               	goto	i2l4578
 13913  0036A8                     i2l941:
 13914  0036A8  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 13915  0036AC  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13916  0036B0  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13917  0036B4  0012               	return		;funcret
 13918  0036B6                     __end_of___ltdiv:
 13919                           	opt stack 0
 13920                           pclatu	equ	0xFFB
 13921                           pclath	equ	0xFFA
 13922                           tblptru	equ	0xFF8
 13923                           tblptrh	equ	0xFF7
 13924                           tblptrl	equ	0xFF6
 13925                           tablat	equ	0xFF5
 13926                           prodh	equ	0xFF4
 13927                           prodl	equ	0xFF3
 13928                           intcon	equ	0xFF2
 13929                           intcon2	equ	0xFF1
 13930                           indf0	equ	0xFEF
 13931                           postinc0	equ	0xFEE
 13932                           fsr0h	equ	0xFEA
 13933                           fsr0l	equ	0xFE9
 13934                           wreg	equ	0xFE8
 13935                           indf1	equ	0xFE7
 13936                           postdec1	equ	0xFE5
 13937                           fsr1h	equ	0xFE2
 13938                           fsr1l	equ	0xFE1
 13939                           bsr	equ	0xFE0
 13940                           indf2	equ	0xFDF
 13941                           postinc2	equ	0xFDE
 13942                           postdec2	equ	0xFDD
 13943                           fsr2h	equ	0xFDA
 13944                           fsr2l	equ	0xFD9
 13945                           status	equ	0xFD8
 13946                           pclatu	equ	0xFFB
 13947                           pclath	equ	0xFFA
 13948                           tblptru	equ	0xFF8
 13949                           tblptrh	equ	0xFF7
 13950                           tblptrl	equ	0xFF6
 13951                           tablat	equ	0xFF5
 13952                           prodh	equ	0xFF4
 13953                           prodl	equ	0xFF3
 13954                           intcon	equ	0xFF2
 13955                           intcon2	equ	0xFF1
 13956                           indf0	equ	0xFEF
 13957                           postinc0	equ	0xFEE
 13958                           fsr0h	equ	0xFEA
 13959                           fsr0l	equ	0xFE9
 13960                           wreg	equ	0xFE8
 13961                           indf1	equ	0xFE7
 13962                           postdec1	equ	0xFE5
 13963                           fsr1h	equ	0xFE2
 13964                           fsr1l	equ	0xFE1
 13965                           bsr	equ	0xFE0
 13966                           indf2	equ	0xFDF
 13967                           postinc2	equ	0xFDE
 13968                           postdec2	equ	0xFDD
 13969                           fsr2h	equ	0xFDA
 13970                           fsr2l	equ	0xFD9
 13971                           status	equ	0xFD8
 13972                           
 13973                           	psect	rparam
 13974  0000                     pclatu	equ	0xFFB
 13975                           pclath	equ	0xFFA
 13976                           tblptru	equ	0xFF8
 13977                           tblptrh	equ	0xFF7
 13978                           tblptrl	equ	0xFF6
 13979                           tablat	equ	0xFF5
 13980                           prodh	equ	0xFF4
 13981                           prodl	equ	0xFF3
 13982                           intcon	equ	0xFF2
 13983                           intcon2	equ	0xFF1
 13984                           indf0	equ	0xFEF
 13985                           postinc0	equ	0xFEE
 13986                           fsr0h	equ	0xFEA
 13987                           fsr0l	equ	0xFE9
 13988                           wreg	equ	0xFE8
 13989                           indf1	equ	0xFE7
 13990                           postdec1	equ	0xFE5
 13991                           fsr1h	equ	0xFE2
 13992                           fsr1l	equ	0xFE1
 13993                           bsr	equ	0xFE0
 13994                           indf2	equ	0xFDF
 13995                           postinc2	equ	0xFDE
 13996                           postdec2	equ	0xFDD
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001                           	psect	temp
 14002  00003E                     btemp:
 14003                           	opt stack 0
 14004  00003E                     	ds	1
 14005  0000                     int$flags	set	btemp
 14006                           pclatu	equ	0xFFB
 14007                           pclath	equ	0xFFA
 14008                           tblptru	equ	0xFF8
 14009                           tblptrh	equ	0xFF7
 14010                           tblptrl	equ	0xFF6
 14011                           tablat	equ	0xFF5
 14012                           prodh	equ	0xFF4
 14013                           prodl	equ	0xFF3
 14014                           intcon	equ	0xFF2
 14015                           intcon2	equ	0xFF1
 14016                           indf0	equ	0xFEF
 14017                           postinc0	equ	0xFEE
 14018                           fsr0h	equ	0xFEA
 14019                           fsr0l	equ	0xFE9
 14020                           wreg	equ	0xFE8
 14021                           indf1	equ	0xFE7
 14022                           postdec1	equ	0xFE5
 14023                           fsr1h	equ	0xFE2
 14024                           fsr1l	equ	0xFE1
 14025                           bsr	equ	0xFE0
 14026                           indf2	equ	0xFDF
 14027                           postinc2	equ	0xFDE
 14028                           postdec2	equ	0xFDD
 14029                           fsr2h	equ	0xFDA
 14030                           fsr2l	equ	0xFD9
 14031                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      61
    BANK0           160    134     134
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_mins
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134161
                         _initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  134161
                                            124 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             23 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             41 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             63 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             36 COMRAM     5     5      0
                                             19 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             33 COMRAM     3     3      0
                                             19 BANK0     18    16      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             19 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             37 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             36 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             41 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   74084
                                            114 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6832
                                             42 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5741
                                             38 COMRAM     4     4      0
                                             19 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     222
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     222
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             69 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             41 COMRAM     3     3      0
                                             29 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             35 COMRAM     4     4      0
                                             21 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             33 COMRAM     9     9      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             33 COMRAM     6     6      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             36 COMRAM     5     5      0
                                             22 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             38 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             33 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             48 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             51 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             33 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             33 COMRAM     3     3      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             33 COMRAM     2     2      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                      _io_initialize
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _io_initialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   23    23      0     426
                                             10 COMRAM    23    23      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (10) ___ltdiv                                            10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _io_initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3D       1       64.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259       9        0.0%
DATA                 0      0     259      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Apr 08 20:07:35 2017

                     util_onewire_read_byte@value 0093              high_priority_int@activation_thresold 003C  
                            util_getTemperature@i 01CC                                                l24 35C0  
                                              l26 363C                                      ___awdiv@sign 0025  
                                              bsr 000FE0                               ___wmul@multiplicand 007B  
                __end_of_util_beacon_transmission 2E88                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 009E  
                                    ___ftadd@exp2 009D                                      ___ftadd@sign 009C  
                                             l120 307A                                               l114 2FB0  
                                             l108 3144                                               l402 3BA6  
                                             l171 3A1C                                               l350 3A92  
                                             l343 3A5E                                               l804 20D4  
                                             l396 3B76                                               l813 20FE  
                                             l493 07A8                                               l734 298E  
                                             l831 2784                                               l832 27C4  
                                             l824 2D40                                               l913 33E0  
                                             l923 35AE                                               l766 2F48  
                                             l838 2830                                               l863 3BE2  
                                             l793 1FD6                                               l795 1FFE  
                                             l789 1F9C                           ??_util_onewire_read_bit 0022  
                                    __CFG_CPB$OFF 000000                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13EA                   __size_of_util_timer1_initialize 0026  
                                    ___awmod@sign 0023                    ??_util_transmit_morse_sequence 0027  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0073  
                                    ___ftdiv@cntr 007F                                      ___ftdiv@sign 0084  
                                            l5102 1872                                              l5030 372E  
                                            l5200 28D0                                              l5040 3764  
                                            l5130 273A                                              l5114 3C78  
                                            l5034 3734                                              l5220 2952  
                                            l5124 270A                                              l5036 375C  
                                            l5028 3728                                              l5230 297C  
                                            l6030 0FFE                                              l3544 2B2C  
                                            l5304 36BC                                              l5232 2988  
                                            l5224 2962                                              l5208 2920  
                                            l5160 27F4                                              l5064 1EEC  
                                            l5056 1E08                                              l6040 103A  
                                            l6024 0FDA                                              l6032 100A  
                                            l6016 0FAA                                              l5402 3B38  
                                            l5250 32FA                                              l3562 2BBE  
                                            l5306 36CA                                              l5170 281E  
                                            l5410 3AD4                                              l5314 39D0  
                                            l4700 2EB6                                              l3580 2C24  
                                            l3572 2BEE                                              l5180 2864  
                                            l5172 282A                                              l5164 2804  
                                            l5084 1622                                              l5412 3ADE  
                                            l6036 101E                                              l5406 3B48  
                                            l5246 32C2                                              l4710 2F2C  
                                            l4702 2EC4                                              l5238 384E  
                                            l3574 2BFE                                              l3566 2BD2  
                                            l5270 336C                                              l5078 155C  
                                            l5502 0400                                              l5422 00DA  
                                            l5318 39E2                                              l5256 333E  
                                            l4712 2F3A                                              l4704 2EE8  
                                            l3576 2C08                                              l5272 337A  
                                            l5096 17AC                                              l5088 1648  
                                            l5504 0416                                              l5416 00BA  
                                            l6080 2E46                                              l5282 33D0  
                                            l5274 3380                                              l5290 3546  
                                            l5186 2886                                              l5602 082E  
                                            l5514 04A6                                              l5506 0446  
                                            l5442 01AA                                              l4730 378C  
                                            l4724 2F6E                                              l4708 2F08  
                                            l4820 208C                                              l5292 3554  
                                            l5700 0C06                                              l5620 093E  
                                            l5612 0916                                              l5532 0598  
                                            l5508 045C                                              l5452 0216  
                                            l5428 010C                                              l5436 0182  
                                            l4732 3790                                              l6084 2E62  
                                            l6092 3922                                              l4718 2F52  
                                            l4814 2064                                              l5294 355A  
                                            l4910 341E                                              l5614 0924  
                                            l5550 0634                                              l5534 059E  
                                            l5518 04D4                                              l5622 094C  
                                            l5446 01F0                                              l5702 0C1C  
                                            l5710 38C8                                              l6246 362E  
                                            l4816 2072                                              l4808 2036  
                                            l4920 3448                                              l4904 340A  
                                            l5640 09BC                                              l5632 0990  
                                            l5560 0670                                              l5528 0532  
                                            l5464 026A                                              l5704 0C3A  
                                            l5456 021C                                              l5448 0206  
                                            l5712 38CC                                              l5800 1B6C  
                                            l5720 189C                                              l6088 390E  
                                            l4834 2128                                              l4826 20BA  
                                            l4818 2080                                              l5298 359E  
                                            l5562 0684                                              l5554 0656  
                                            l5546 05E4                                              l5490 0362  
                                            l5474 02B0                                              l5458 0250  
                                            l5714 38DC                                              l4762 3A80  
                                            l4746 3A4C                                              l5802 1B7E  
                                            l5730 18F6                                              l5722 18AE  
                                            l4844 2176                                              l4828 20C8  
                                            l4916 3438                                              l4932 3480  
                                            l4860 2A08                                              l5660 0A5A  
                                            l5652 0A02                                              l5716 38E6  
                                            l4676 3B9A                                              l5740 1950  
                                            l5732 1908                                              l5724 18C0  
                                            l4918 3442                                              l4854 29D4  
                                            l5638 09B6                                              l5590 07AC  
                                            l5566 06B0                                              l5558 0668  
                                            l5750 19AA                                              l5742 1962  
                                            l5734 191A                                              l5726 18D2  
                                            l5806 1B84                                              l5822 2C9E  
                                            l4696 2EA2                                              l4792 1FE4  
                                            l4936 348E                                              l4928 3474  
                                            l4960 34E2                                              l4952 34C0  
                                            l5680 0B12                                              l5672 0AC6  
                                            l5656 0A2A                                              l5584 0776  
                                            l5568 06B8                                              l5576 074E  
                                            l4688 3B6A                                              l5760 1A04  
                                            l5752 19BC                                              l5744 1974  
                                            l5736 192C                                              l5728 18E4  
                                            l5808 1C82                                              l5816 2C6A  
                                            l4786 1FAA                                              l4874 2A56  
                                            l5682 0B1E                                              l5674 0AD0  
                                            l5666 0A8E                                              l5586 078A  
                                            l5578 075C                                              l5498 03D2  
                                            l5770 1A5E                                              l5762 1A16  
                                            l5754 19CE                                              l5746 1986  
                                            l5738 193E                                              l5842 2CFE  
                                            l4972 3522                                              l4964 3506  
                                            l4956 34D2                                              l4948 34B0  
                                            l4884 2A94                                              l5780 1AB8  
                                            l5772 1A70                                              l5764 1A28  
                                            l5756 19E0                                              l5748 1998  
                                            l4980 37EA                                              l4798 1FF4  
                                            l4958 34DC                                              l4878 2A74  
                                            l5694 0B72                                              l5678 0B08  
                                            l5598 07DC                                              l5790 1B12  
                                            l5782 1ACA                                              l5774 1A82  
                                            l5766 1A3A                                              l5758 19F2  
                                            l4990 380E                                              l5950 0D6A  
                                            l5942 0D3C                                              l4968 3512  
                                            l4888 2AB2                                              l5688 0B44  
                                            l5792 1B24                                              l5784 1ADC  
                                            l5776 1A94                                              l5768 1A4C  
                                            l5864 399E                                              l4984 37FA  
                                            l4992 3812                                              l5936 0D12  
                                            l5698 0C00                                              l5794 1B36  
                                            l5786 1AEE                                              l5778 1AA6  
                                            l4978 37E2                                              l5970 0E58  
                                            l5962 0DB0                                              l5946 0D50  
                                            l5796 1B48                                              l5788 1B00  
                                            l5972 0E62                                              l5956 0D8C  
                                            l5948 0D66                                              l5798 1B5A  
                                            l5990 0EF6                                              l5966 0E42  
                                            l5984 0EE4                                              l5976 0E78  
                                            l5994 0F0C                                              l5988 0EEC  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3121 2B08  
                                            u3140 2B52                                              u5000 3AB2  
                                            u3145 2B48                                              u5111 26EC  
                                            u5008 3AB4                                              u5131 271C  
                                            u6021 2C48                                              u4510 37B0  
                                            u5400 396E                                              u6041 2C7C  
                                            u4540 3A5E                                              u4517 37A6  
                                            u5415 25CC                                              u4560 3A92  
                                            u5408 3970                                              u4801 29E6  
                                            u5425 25EE                                              u4571 1F4A  
                                            u5435 2610                                              u4581 1F68  
                                            u5445 2632                                              u6407 3ABC  
                                            u5455 2434                                              u6184 0EA8  
                                            u6417 3B6C                                              u5465 244A  
                                            u6185 0EA0                                              u6427 3B9C  
                                            u5475 2460                                              u4781 29B2  
                                            u6357 3A16                                              u5590 02F6  
                                            u6367 3A20                                              u6377 3952  
                                            u5595 02EA                                              u6387 395C  
                                            u5780 07A0                                              u6397 3978  
                        ??_util_onewire_read_byte 0075                                              _RBPU 007F8F  
                              high_priority_int@i 0020                                              _WPUB 000F61  
                          __size_of_io_initialize 00BC                                      __CFG_WRTC$ON 000000  
                                    __CFG_WRTD$ON 000000                                              _main 3CB0  
                                    ___ftpack@arg 0071                                      ___ftpack@exp 0074  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 003E  
                                   __CFG_BORV$190 000000                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A6  
                                   __CFG_IESO$OFF 000000   __end_of_util_transmit_space_between_dots_dashes 3CB0  
__size_of_util_transmit_space_between_dots_dashes 0010         ??_util_transmit_space_between_dots_dashes 0025  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3CA0  
                                    _sprintf$2426 00B9                                      ___ftmul@cntr 0087  
                                    ___param_bank 000000                                      ___ftmul@sign 0088  
                                    ___fttol@exp1 009E                                      ___fttol@lval 009A  
                              _util_transmit_dash 3A64                           util_getTemperature@sign 01A4  
                                           ?_main 0001               __end_of_util_waits_delay_hundred_us 3BC0  
                     _util_waits_delay_hundred_us 3B90                                   __end_of___awdiv 3498  
                                           _ADRES 000FC3                                   __end_of___ftadd 219C  
                                           STR_10 7FD6                                             STR_11 7FCC  
                                           STR_12 7FB2                                             STR_20 7FF6  
                                           STR_13 7FE7                                             STR_21 7FD1  
                                           STR_22 7FA9                                             STR_14 7FFA  
                                           STR_30 7FAB                                             STR_15 7FA8  
                                           STR_23 7FEC                                             STR_31 7FB1  
                                           STR_24 7F92                                             STR_16 7FC0  
                                           STR_32 7FB7                                             STR_40 7F97  
                                           STR_17 7FA7                                             STR_25 7FE2  
                                           STR_33 7F91                                             STR_41 7FC3  
                                           STR_18 7FF0                                             STR_26 7FEB  
                                           STR_34 7FDB                                             STR_42 7F89  
                                           STR_19 7FE6                                             STR_27 7FE1  
                                           STR_35 7FD5                                             STR_43 7F90  
                                           STR_28 7FCA                                             STR_36 7FCF  
                                 __end_of___awmod 352C                                             STR_37 7FC9  
                                           STR_29 7FA5                                             STR_38 7FBD  
                                           STR_39 7F82                                   __end_of___ftdiv 2D76  
                                 __end_of___ftneg 3BF0                                   __end_of___lldiv 33F2  
                               ?_low_priority_int 0001                                   __end_of___ftmul 2AF2  
                                 ___awdiv@divisor 0077                                   __end_of___llmod 35C0  
                                 __end_of___ftsub 3878                                   __end_of___fttol 2C36  
                                 __end_of___ltdiv 36B6                       __size_of_util_onewire_reset 0042  
                                           i2l227 223C                                     __CFG_WDTEN$ON 000000  
                                           i2l239 2382                                             i2l941 36A8  
                                           i2l946 369C                                   ___awdiv@counter 0024  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0060  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0029                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 3046                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 0025  
                                 __end_of_dpowers 7F1D                                             _scale 13EA  
                                 __end_of_isdigit 3C80                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0075                          ??_util_onewire_write_bit 0022  
                       util_waits_delay_secs@secs 0073                                    __CFG_BOREN$OFF 000000  
                                           pclath 000FFA                                             tablat 000FF5  
               high_priority_int@noise_mean_value 0039                                             status 000FD8  
                     __end_of_util_waits_delay_ms 3B90                                   __end_of_sprintf 0C48  
                          _util_timer1_initialize 3C1A                              ??_util_transmit_dash 0025  
                         util_waits_delay_hours@i 007A                    util_getTemperature@bit_in_byte 01C7  
                                 __initialization 3878                         util_beacon_transmission@i 01C0  
                                    __end_of_main 3CBC                      __end_of_util_transmit_letter 1C88  
                                   _io_initialize 31CE                                            ??_main 002D  
                                   ___fttol@sign1 0099                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 0168                        util_onewire_read_bit@value 0023  
                       util_getSolarCurrent@value 00A1                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0089                                  ___awdiv@dividend 0075  
                                __end_of___awtoft 39C6                                  __end_of___ftpack 2F7C  
                  high_priority_int@valid_samples 0037                                  __end_of___lltoft 371E  
                                          i2l4610 222C                                            i2l4622 2258  
                                          i2l4606 2218                                            i2l4608 2228  
                                          i2l4650 22EA                                            i2l4642 22BA  
                                          i2l4634 229A                                            i2l4574 3668  
                                          i2l4654 2308                                            i2l4576 3672  
                                          i2l4664 234E                                            i2l4578 3676  
                                          i2l4658 2318                                            i2l4668 2380  
                                __end_of___lwtoft 3C1A                   __size_of_util_onewire_read_byte 0194  
               __size_of_util_beacon_transmission 0112                         ?_util_beacon_transmission 00D2  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F6B  
                        ?_util_onewire_write_byte 0073                                            ___ftge 328A  
                      util_onewire_read_byte@bit0 0083                        util_onewire_read_byte@bit1 0085  
                      util_onewire_read_byte@bit2 0087                        util_onewire_read_byte@bit3 0089  
                      util_onewire_read_byte@bit4 008B                        util_onewire_read_byte@bit5 008D  
                      util_onewire_read_byte@bit6 008F                        util_onewire_read_byte@bit7 0091  
                         ??_util_waits_delay_mins 002A                           ??_util_waits_delay_secs 0025  
                                          ___wmul 3AFC                                         ??___awdiv 0024  
                                       ??___ftadd 0099                                    __CFG_STVREN$ON 000000  
                                       ??___awmod 0022                                         ??___ftdiv 0026  
                                       ??___ftneg 0022                                         ??___lldiv 0022  
                                       ??___ftmul 002A                                         ??___llmod 0027  
                                       ??___ftsub 002D                                         ??___fttol 0094  
                                       ??___ltdiv 0007                       util_onewire_write_byte@bit0 0075  
                     util_onewire_write_byte@bit1 0077                       util_onewire_write_byte@bit2 0079  
                     util_onewire_write_byte@bit3 007B                       util_onewire_write_byte@bit4 007D  
                     util_onewire_write_byte@bit5 007F                       util_onewire_write_byte@bit6 0081  
                     util_onewire_write_byte@bit7 0083                                    ?_io_initialize 0001  
                                          _memset 3B2E                                            _fround 1C88  
                                          clear_0 389E                                            clear_1 38AA  
                                ___awdiv@quotient 0026                                   ___awmod@divisor 0073  
                                 ___awmod@counter 0022                       util_waits_delay_hours@hours 0077  
                                          _strcat 38BE                                            _strcpy 3ACA  
                                          _strlen 3782                             ___ftmul@f3_as_product 0084  
                                    __pdataCOMRAM 0039                                         ??_isdigit 0022  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00B3                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 002D                   __size_of_util_onewire_write_bit 0034  
                                      __accesstop 0060                           __end_of__initialization 38B0  
                                 __CFG_PBADEN$OFF 000000                                        ___ftadd@f1 0093  
                                      ___ftadd@f2 0096                                        ___ftge@ff1 0071  
                                      ___ftge@ff2 0074                                     ___rparam_used 000001  
                                      ___ftdiv@f1 0079                                        ___ftdiv@f2 007C  
                                      ___ftdiv@f3 0080                          ??_util_getBatteryVoltage 002D  
                                      ___ftneg@f1 0071                                        ___awtoft@c 0076  
                                      ___ftmul@f1 007D                                        ___ftmul@f2 0080  
                                      ___ftsub@f1 009F                                        ___ftsub@f2 00A2  
                                      ___fttol@f1 0090                                    __pcstackCOMRAM 0001  
                            _util_getSolarCurrent 2F7C                                        ___lltoft@c 0076  
                        main_loop@battery_current 00E1                                     __end_of_scale 1898  
                          _util_onewire_read_byte 23BE                                        ___lwtoft@c 0076  
                                      __div_to_l_ 2842                          main_loop@battery_voltage 00E3  
                  __size_of_util_onewire_read_bit 0032                     __end_of_util_onewire_read_bit 3ACA  
                                 __div_to_l_@exp1 0027                                   __div_to_l_@cntr 0026  
                                         ??_scale 002D                                   __div_to_l_@quot 0022  
                                    sprintf@width 00C0         __end_of_util_transmit_space_between_words 3C90  
      __size_of_util_transmit_space_between_words 0010               ??_util_transmit_space_between_words 0025  
              ?_util_transmit_space_between_words 0001                 _util_transmit_space_between_words 3C80  
                                      __pbssBANK2 0200                                __size_of_main_loop 008C  
                                 __CFG_PLLCFG$OFF 000000                              _util_transmit_letter 1898  
                                   __div_to_l_@f1 0071                                     __div_to_l_@f2 0074  
                              __CFG_CCP2MX$PORTC1 000000                             ?_util_getSolarCurrent 009F  
                                         ?___ftge 0071                                   ??_io_initialize 0022  
                    util_onewire_write_bit@bit_in 0071                                           ?___wmul 0079  
                high_priority_int@sample_position 0033                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 39FC                                           ?_memset 0071  
                                         ?_fround 0089                                         ?___awtoft 0076  
                                       ?___ftpack 0071                                 _high_priority_int 0008  
                                       ?___lltoft 0076                                           ?_strcat 0071  
                                         ?_strcpy 0071                                           ?_strlen 0071  
                                       ?___lwtoft 0076                                ?_high_priority_int 0001  
                             ??_high_priority_int 000B                      __size_of_util_getTemperature 07A2  
                         ?_util_timer1_initialize 0001                             ?_util_transmit_letter 0001  
            __size_of_util_waits_delay_hundred_us 0030                   __size_of_util_getBatteryCurrent 00CA  
                       __size_of_low_priority_int 008E                              util_waits_delay_ms@i 0023  
                    util_waits_delay_mins@minutes 0075                                   __CFG_PWRTEN$OFF 000000  
                               __end_of__npowers_ 7F44                                           __Hparam 0000  
                 __size_of_util_getBatteryVoltage 00BE                                        _scale$2425 008C  
            __end_of_util_transmit_morse_sequence 3782             __size_of_util_transmit_morse_sequence 0064  
                    _util_transmit_morse_sequence 371E                                           __Lparam 0000  
                      util_getTemperature@bit_mem 0100       __end_of_util_transmit_space_between_letters 3CA0  
    __size_of_util_transmit_space_between_letters 0010             ??_util_transmit_space_between_letters 0025  
            ?_util_transmit_space_between_letters 0001               _util_transmit_space_between_letters 3C90  
                                 __size_of___ftge 00B8                                           ___awdiv 33F2  
                                         ___ftadd 1F34                                           ___awmod 3498  
                                         ___ftdiv 2C36                                           ___ftneg 3BC0  
                                         ___lldiv 3342                                   __size_of___wmul 0032  
                                         ___ftmul 29A0                          ??_util_waits_delay_hours 0079  
                                         ___llmod 352C                                           ___ftsub 382C  
                     util_getTemperature@byte_mem 0190                                           ___fttol 2AF2  
                                         ___ltdiv 364C                         __end_of_high_priority_int 23BE  
                  util_getTemperature@temperature 01C9                        __end_of_util_onewire_reset 3986  
                               __end_of_main_loop 364C                                           __pcinit 3878  
                                      ??___awtoft 0025                                        ??___ftpack 0022  
                                 __size_of_memset 0032                                   __size_of_fround 02AC  
                                         __ramtop 0600                                        _initialize 3CBC  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0025  
                                         __ptext0 3CB0                                           __ptext1 35C0  
                                         __ptext2 3902                                           __ptext3 39C6  
                                         __ptext4 0C48                                           __ptext5 37D8  
                                         __ptext6 2552                                           __ptext7 39FC  
                                         __ptext8 3944                                           __ptext9 23BE  
                                      ??___lwtoft 0025                                   __size_of_strcat 0044  
                                 __size_of_strcpy 0032                                   __size_of_strlen 0056  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0071  
                                         _dpowers 7EF5                       util_getTemperature@num_byte 01C5  
                                         _isdigit 3C62                                  ___awmod@dividend 0071  
                    util_onewire_write_byte@value 0073                  ??_util_transmit_buzzer_1ms_cycle 0025  
                 ?_util_transmit_buzzer_1ms_cycle 0001                    __end_of_util_timer1_initialize 3C40  
                            main_loop@temperature 00DC                                           _sprintf 00AA  
                   util_transmit_morse_sequence@i 0029                                    __pintcode_body 219C  
                            end_of_initialization 38B0                      util_waits_delay_hundred_us@i 0023  
                                         memset@c 0073                                           memset@n 0075  
                                         memset@p 0022                                     __Lmediumconst 7EF4  
                                         int_func 219C                       __size_of_util_transmit_dash 0034  
                                 ___lldiv@divisor 0075                                  ___ltdiv@dividend 0001  
                          ??_util_getSolarCurrent 002D                                   ___lldiv@counter 0026  
                                         postdec1 000FE5                                           postdec2 000FDD  
                    __size_of_util_waits_delay_ms 0030                                           postinc0 000FEE  
                                         postinc2 000FDE             util_beacon_transmission@solar_current 00D5  
                  __size_of_util_waits_delay_mins 0036                                    __tdiv_to_l_@f1 0071  
                                  __tdiv_to_l_@f2 0074                    __size_of_util_waits_delay_secs 0054  
                   __end_of_util_waits_delay_mins 39FC                            _util_getBatteryCurrent 3046  
                   __end_of_util_waits_delay_secs 382C                                           strlen@s 0071  
                                   ??__tdiv_to_l_ 0022                                         _PORTAbits 000F80  
                                       _PORTBbits 000F81                                         _PORTDbits 000F83  
                         high_priority_int@sample 001E                            _util_getBatteryVoltage 3110  
                __size_of_util_onewire_write_byte 0188                          _util_getTemperature$2420 01AA  
                        _util_getTemperature$2421 01AD                          _util_getTemperature$2422 01B0  
                        _util_getTemperature$2419 01A7                                         _TRISAbits 000F92  
                                       _TRISBbits 000F93                                         _TRISDbits 000F95  
                                ___ltdiv@quotient 0007                            ??_util_transmit_letter 002B  
                                     ___ftdiv@exp 0083             util_beacon_transmission@BEACON_BUFFER 0180  
                             __size_of__div_to_l_ 015E                                       ___ftmul@exp 0083  
                         ?_util_onewire_read_byte 0073                                 _util_transmit_dot 3A30  
                      __size_of_high_priority_int 23B6                                    __end_of___ftge 3342  
                 __size_of_util_waits_delay_hours 0042                                    __end_of___wmul 3B2E  
                              ?_util_transmit_dot 0001                                     __pidataCOMRAM 3CC6  
                                     ?_initialize 0001                                    __end_of_memset 3B60  
                                  __end_of_fround 1F34                                    __end_of_strcat 3902  
                                  __end_of_strcpy 3AFC                                    __end_of_strlen 37D8  
               util_waits_delay_hundred_us@hun_us 0071                               start_initialization 3878  
                             ??_util_transmit_dot 0025                            util_waits_delay_mins@i 002B  
                          util_waits_delay_secs@i 0026                            util_waits_delay_secs@j 0028  
                             __end_of__tdiv_to_l_ 2842                          _util_beacon_transmission 2D76  
             util_beacon_transmission@temperature 00D9                                  _low_priority_int 0018  
                                 ___llmod@divisor 007D                                   ___llmod@counter 0027  
                             util_transmit_dash@i 0025                    __end_of_util_onewire_read_byte 2552  
                       __end_of_util_transmit_dot 3A64                           ?_util_onewire_write_bit 0071  
                                        ??___ftge 0022                                          ??___wmul 0028  
                             _util_getTemperature 0C48                                          ??_memset 0022  
                                        ??_fround 002D                                     sprintf@tmpval 00C2  
                                        ??_strcat 0022                                          ??_strcpy 0022  
                                        ??_strlen 0022                      ?_util_waits_delay_hundred_us 0071  
                                      fround@prec 0092                                 __size_of___awtoft 0040  
                               __size_of___ftpack 00F4                                 __size_of___lltoft 0068  
                                     __pbssCOMRAM 002D                                 __size_of___lwtoft 002A  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 0100  
                                    _isdigit$2065 0023                             _util_onewire_read_bit 3A98  
                            ?_util_getTemperature 009F                            _util_waits_delay_hours 3902  
               util_getTemperature@shift_reg_bit0 01B3                 util_getTemperature@shift_reg_bit1 01B5  
               util_getTemperature@shift_reg_bit2 01B7                 util_getTemperature@shift_reg_bit3 01B9  
               util_getTemperature@shift_reg_bit4 01BB                 util_getTemperature@shift_reg_bit5 01BD  
               util_getTemperature@shift_reg_bit6 01BF                 util_getTemperature@shift_reg_bit7 01C1  
          util_beacon_transmission@BEACON_MESSAGE 0100                                       sprintf@flag 00BE  
                                     sprintf@fval 00CC             util_getTemperature@shift_reg_bit_temp 01C3  
                                     sprintf@prec 00CF                               __size_of_initialize 000A  
                  __end_of_util_onewire_write_bit 3A30                                         __pintcode 0008  
                                   __pmediumconst 7EF4                                          ?___awdiv 0075  
                                        ?___ftadd 0093                                          ?___awmod 0071  
                                        ?___ftdiv 0079                                          ?___ftneg 0071  
                                        ?___lldiv 0071                                          ?___ftmul 007D  
                                        ?___llmod 0079                                          ?___ftsub 009F  
                                       __npowers_ 7F1D                                          ?___fttol 0090  
                                        ?___ltdiv 0001                             __end_of_io_initialize 328A  
                                     __pintcodelo 0018                                  __CFG_PRICLKEN$ON 000000  
                                     __tdiv_to_l_ 26DA                                      ??__div_to_l_ 0022  
                         _util_onewire_write_byte 2552                                          ?_isdigit 0001  
                                       _main_loop 35C0                     ??_util_waits_delay_hundred_us 0022  
      high_priority_int@cycles_transmitter_active 002F                               _util_waits_delay_ms 3B60  
                           ??_util_getTemperature 00A2                                _util_onewire_reset 3944  
                                        ?_sprintf 00A5                                    __size_of_scale 04AE  
                     util_getBatteryVoltage@value 008C                                    ___wmul@product 0028  
                                        _LATAbits 000F89                                          _LATBbits 000F8A  
                                        _LATDbits 000F8C                               ?_util_onewire_reset 0071  
                                        _IPR1bits 000F9F                                          _PIE1bits 000F9D  
                      __size_of_util_transmit_dot 0034                                          i2u433_40 2264  
                                 ___ltdiv@divisor 0004                                          _PIR1bits 000F9E  
                              __end_of__div_to_l_ 29A0                                          i2u428_40 2202  
                                        i2u429_48 2204            __end_of_util_transmit_buzzer_1ms_cycle 3C62  
         __size_of_util_transmit_buzzer_1ms_cycle 0022                    _util_transmit_buzzer_1ms_cycle 3C40  
                         ?_util_getBatteryCurrent 009F                                   ___ltdiv@counter 000A  
                                        _RCONbits 000FD0                                  __CFG_WDTPS$32768 000000  
                            ?_util_waits_delay_ms 0071           util_beacon_transmission@battery_current 00D7  
                         ?_util_getBatteryVoltage 0089                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0079                              ??_util_onewire_reset 0022  
                      util_transmit_letter@letter 002B                                        ?_main_loop 0001  
         util_beacon_transmission@battery_voltage 00D2                            ?_util_onewire_read_bit 0071  
                     util_getBatteryCurrent@value 00A1                                         copy_data0 388C  
                           util_waits_delay_ms@ms 0071                        __end_of_util_transmit_dash 3A98  
          high_priority_int@is_transmitter_active 0031                    __end_of_util_getBatteryCurrent 3110  
                                        __Hrparam 0000                                util_transmit_dot@i 0025  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 0022  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
                  __end_of_util_getBatteryVoltage 31CE                                  __size_of___awdiv 00A6  
                                __size_of___ftadd 0268                                  __size_of___awmod 0094  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0030  
                                __size_of___lldiv 00B0                                  __size_of___ftmul 0152  
                       ??_util_onewire_write_byte 0022                                  __size_of___llmod 0094  
                                __size_of___ftsub 004C                                  __size_of___fttol 0144  
                                __size_of___ltdiv 006A                                      ??_initialize 0022  
                                        ___awtoft 3986                                          ___ftpack 2E88  
                                     _fround$2423 008F                                       _fround$2424 008C  
                        __end_of_low_priority_int 00A6                                          ___lltoft 36B6  
                      ??_util_beacon_transmission 002D                             _util_waits_delay_mins 39C6  
                           _util_waits_delay_secs 37D8                                        _ANSELAbits 000F38  
                                        ___lwtoft 3BF0                                        _ANSELBbits 000F39  
                                      _ANSELDbits 000F3B                                        sprintf@exp 00CA  
                                      sprintf@val 00C6                                        strcat@from 0073  
                                __size_of_isdigit 001E                                          __ptext10 3A98  
                                        __ptext11 2C36                                          __ptext20 3C90  
                                        __ptext12 3986                                          __ptext21 371E  
                                        __ptext13 2F7C                                          __ptext30 38BE  
                                        __ptext22 3CA0                                          __ptext14 3110  
                                        __ptext31 00AA                                          __ptext23 3A30  
                                        __ptext15 3046                                          __ptext40 2842  
                                        __ptext32 13EA                                          __ptext24 3A64  
                                        __ptext16 3BF0                                          __ptext41 36B6  
                                        __ptext33 3C62                                          __ptext25 3B60  
                                        __ptext17 2D76                                          __ptext50 3B2E  
                                        __ptext42 352C                                          __ptext34 1C88  
                                        __ptext26 3C40                                          __ptext18 1898  
                                        __ptext51 3CBC                                          __ptext43 3342  
                                        __ptext35 3AFC                                          __ptext27 3B90  
                                        __ptext19 3C80                                          __ptext52 3C1A  
                                        __ptext44 2AF2                                          __ptext36 29A0  
                                        __ptext28 3782                                          __ptext53 31CE  
                                        __ptext45 382C                                          __ptext37 3498  
                                        __ptext29 3ACA                                          __ptext46 1F34  
                                        __ptext38 33F2                                          __ptext47 2E88  
                                        __ptext39 26DA                                          __ptext56 364C  
                                        __ptext48 3BC0                                          __ptext49 328A  
                                        __powers_ 7F44                                  __size_of_sprintf 0B9E  
                                      strcpy@from 0073                     __size_of_util_transmit_letter 03F0  
                util_getSolarCurrent@solarCurrent 00A4                                     __size_of_main 000C  
                      util_onewire_reset@presence 0023                                __end_of_initialize 3CC6  
                                        int$flags 003E                     ?_util_transmit_morse_sequence 0073  
                   util_getBatteryVoltage@voltage 008F                             _tmr1_interrupt_number 002D  
                        ??_util_timer1_initialize 0022                                       ??_main_loop 002D  
                                      _INTCONbits 000FF2                           ?_util_waits_delay_hours 0077  
                                        isdigit@c 0024                                          memset@p1 0071  
                          main_loop@solar_current 00DF                                          scale@scl 008F  
                 __end_of_util_onewire_write_byte 26DA                                          intlevel1 0000  
                                        intlevel2 0000                                         sprintf@ap 00BC  
                                __tdiv_to_l_@exp1 002A                                  __tdiv_to_l_@cntr 0029  
                                       sprintf@sp 00A5                                  __tdiv_to_l_@quot 0025  
                                    _VREFCON0bits 000F42                                  ___lldiv@dividend 0071  
                          ?_util_waits_delay_mins 0075                            ?_util_waits_delay_secs 0073  
                                    ?__tdiv_to_l_ 0071                                          sprintf@c 00D1  
                                        sprintf@f 00A7                                          strcat@cp 0022  
                                        strcat@to 0071                    __end_of_util_waits_delay_hours 3944  
                                ___lldiv@quotient 0022                                          strcpy@cp 0022  
                                        strlen@cp 0024                                          strcpy@to 0071  
                               __CFG_T3CMX$PORTB5 000000                          high_priority_int@samples 0200  
        high_priority_int@times_thresold_exceeded 0035              util_getBatteryCurrent@batteryCurrent 00A4  
