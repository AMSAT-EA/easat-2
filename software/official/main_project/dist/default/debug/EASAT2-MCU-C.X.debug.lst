

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 14 19:35:28 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           ; Version 1.41
    91                           ; Generated 25/01/2017 GMT
    92                           ; 
    93                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F45K22 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataCOMRAM
   126  00487C                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for high_priority_int@noise_avg_value
   130  00487C  00                 	db	0
   131  00487D  7D                 	db	125
   132  00487E  00                 	db	0
   133                           
   134                           ;initializer for high_priority_int@activation_threshold
   135  00487F  7D00               	dw	32000
   136                           
   137                           	psect	mediumconst
   138  007ED4                     __pmediumconst:
   139                           	opt stack 0
   140  007ED4  00                 	db	0
   141  007ED5                     _dpowers:
   142                           	opt stack 0
   143  007ED5  0001               	dw	1
   144  007ED7  0000               	dw	0
   145  007ED9  000A               	dw	10
   146  007EDB  0000               	dw	0
   147  007EDD  0064               	dw	100
   148  007EDF  0000               	dw	0
   149  007EE1  03E8               	dw	1000
   150  007EE3  0000               	dw	0
   151  007EE5  2710               	dw	10000
   152  007EE7  0000               	dw	0
   153  007EE9  86A0               	dw	34464
   154  007EEB  0001               	dw	1
   155  007EED  4240               	dw	16960
   156  007EEF  000F               	dw	15
   157  007EF1  9680               	dw	38528
   158  007EF3  0098               	dw	152
   159  007EF5  E100               	dw	57600
   160  007EF7  05F5               	dw	1525
   161  007EF9  CA00               	dw	51712
   162  007EFB  3B9A               	dw	15258
   163  007EFD                     __end_of_dpowers:
   164                           	opt stack 0
   165  007EFD                     __powers_:
   166                           	opt stack 0
   167  007EFD  00                 	db	0
   168  007EFE  80                 	db	128
   169  007EFF  3F                 	db	63
   170  007F00  00                 	db	0
   171  007F01  20                 	db	32
   172  007F02  41                 	db	65
   173  007F03  00                 	db	0
   174  007F04  C8                 	db	200
   175  007F05  42                 	db	66
   176  007F06  00                 	db	0
   177  007F07  7A                 	db	122
   178  007F08  44                 	db	68
   179  007F09  40                 	db	64
   180  007F0A  1C                 	db	28
   181  007F0B  46                 	db	70
   182  007F0C  50                 	db	80
   183  007F0D  C3                 	db	195
   184  007F0E  47                 	db	71
   185  007F0F  24                 	db	36
   186  007F10  74                 	db	116
   187  007F11  49                 	db	73
   188  007F12  97                 	db	151
   189  007F13  18                 	db	24
   190  007F14  4B                 	db	75
   191  007F15  BC                 	db	188
   192  007F16  BE                 	db	190
   193  007F17  4C                 	db	76
   194  007F18  6B                 	db	107
   195  007F19  6E                 	db	110
   196  007F1A  4E                 	db	78
   197  007F1B  03                 	db	3
   198  007F1C  15                 	db	21
   199  007F1D  50                 	db	80
   200  007F1E  79                 	db	121
   201  007F1F  AD                 	db	173
   202  007F20  60                 	db	96
   203  007F21  F3                 	db	243
   204  007F22  49                 	db	73
   205  007F23  71                 	db	113
   206  007F24                     __end_of__powers_:
   207                           	opt stack 0
   208  007F24                     __npowers_:
   209                           	opt stack 0
   210  007F24  00                 	db	0
   211  007F25  80                 	db	128
   212  007F26  3F                 	db	63
   213  007F27  CD                 	db	205
   214  007F28  CC                 	db	204
   215  007F29  3D                 	db	61
   216  007F2A  D7                 	db	215
   217  007F2B  23                 	db	35
   218  007F2C  3C                 	db	60
   219  007F2D  12                 	db	18
   220  007F2E  83                 	db	131
   221  007F2F  3A                 	db	58
   222  007F30  B7                 	db	183
   223  007F31  D1                 	db	209
   224  007F32  38                 	db	56
   225  007F33  C6                 	db	198
   226  007F34  27                 	db	39
   227  007F35  37                 	db	55
   228  007F36  38                 	db	56
   229  007F37  86                 	db	134
   230  007F38  35                 	db	53
   231  007F39  C0                 	db	192
   232  007F3A  D6                 	db	214
   233  007F3B  33                 	db	51
   234  007F3C  CC                 	db	204
   235  007F3D  2B                 	db	43
   236  007F3E  32                 	db	50
   237  007F3F  70                 	db	112
   238  007F40  89                 	db	137
   239  007F41  30                 	db	48
   240  007F42  E7                 	db	231
   241  007F43  DB                 	db	219
   242  007F44  2E                 	db	46
   243  007F45  E5                 	db	229
   244  007F46  3C                 	db	60
   245  007F47  1E                 	db	30
   246  007F48  42                 	db	66
   247  007F49  A2                 	db	162
   248  007F4A  0D                 	db	13
   249  007F4B                     __end_of__npowers_:
   250                           	opt stack 0
   251  007F4B                     golay_weight@F87:
   252                           	opt stack 0
   253  007F4B  00                 	db	0
   254  007F4C  01                 	db	1
   255  007F4D  01                 	db	1
   256  007F4E  02                 	db	2
   257  007F4F  01                 	db	1
   258  007F50  02                 	db	2
   259  007F51  02                 	db	2
   260  007F52  03                 	db	3
   261  007F53  01                 	db	1
   262  007F54  02                 	db	2
   263  007F55  02                 	db	2
   264  007F56  03                 	db	3
   265  007F57  02                 	db	2
   266  007F58  03                 	db	3
   267  007F59  03                 	db	3
   268  007F5A  04                 	db	4
   269  007F5B                     __end_ofgolay_weight@F87:
   270                           	opt stack 0
   271  0000                     _CCPTMRS0bits	set	3913
   272  0000                     _ANSELDbits	set	3899
   273  0000                     _ANSELBbits	set	3897
   274  0000                     _ANSELAbits	set	3896
   275  0000                     _VREFCON0bits	set	3906
   276  0000                     _ADRES	set	4035
   277  0000                     _PORTBbits	set	3969
   278  0000                     _TMR2	set	4028
   279  0000                     _IPR1bits	set	3999
   280  0000                     _PIE1bits	set	3997
   281  0000                     _TMR1L	set	4046
   282  0000                     _TMR1H	set	4047
   283  0000                     _T1CONbits	set	4045
   284  0000                     _RCONbits	set	4048
   285  0000                     _T2CONbits	set	4026
   286  0000                     _CCPR2L	set	3943
   287  0000                     _PSTR2CONbits	set	3939
   288  0000                     _CCP2CONbits	set	3942
   289  0000                     _PR2	set	4027
   290  0000                     _PORTAbits	set	3968
   291  0000                     _INTCONbits	set	4082
   292  0000                     _PIR1bits	set	3998
   293  0000                     _ADCON0bits	set	4034
   294  0000                     _LATDbits	set	3980
   295  0000                     _TRISDbits	set	3989
   296  0000                     _LATBbits	set	3978
   297  0000                     _TRISBbits	set	3987
   298  0000                     _WPUB	set	3937
   299  0000                     _LATAbits	set	3977
   300  0000                     _TRISAbits	set	3986
   301  0000                     _ADCON2	set	4032
   302  0000                     _ADCON1	set	4033
   303  0000                     _PORTDbits	set	3971
   304  0000                     _RBPU	set	32655
   305  007F5B                     STR_2:
   306  007F5B  20                 	db	32
   307  007F5C  25                 	db	37
   308  007F5D  2E                 	db	46
   309  007F5E  31                 	db	49	;'1'
   310  007F5F  66                 	db	102	;'f'
   311  007F60  20                 	db	32
   312  007F61  25                 	db	37
   313  007F62  2E                 	db	46
   314  007F63  31                 	db	49	;'1'
   315  007F64  66                 	db	102	;'f'
   316  007F65  20                 	db	32
   317  007F66  25                 	db	37
   318  007F67  33                 	db	51	;'3'
   319  007F68  2E                 	db	46
   320  007F69  30                 	db	48	;'0'
   321  007F6A  64                 	db	100	;'d'
   322  007F6B  20                 	db	32
   323  007F6C  25                 	db	37
   324  007F6D  33                 	db	51	;'3'
   325  007F6E  2E                 	db	46
   326  007F6F  30                 	db	48	;'0'
   327  007F70  64                 	db	100	;'d'
   328  007F71  00                 	db	0
   329  007F72                     STR_3:
   330  007F72  45                 	db	69	;'E'
   331  007F73  41                 	db	65	;'A'
   332  007F74  53                 	db	83	;'S'
   333  007F75  41                 	db	65	;'A'
   334  007F76  54                 	db	84	;'T'
   335  007F77  32                 	db	50	;'2'
   336  007F78  20                 	db	32
   337  007F79  41                 	db	65	;'A'
   338  007F7A  43                 	db	67	;'C'
   339  007F7B  4B                 	db	75	;'K'
   340  007F7C  00                 	db	0
   341  007F7D                     STR_41:
   342  007F7D  2D                 	db	45
   343  007F7E  2D                 	db	45
   344  007F7F  2E                 	db	46
   345  007F80  2E                 	db	46
   346  007F81  2D                 	db	45
   347  007F82  2D                 	db	45
   348  007F83  00                 	db	0
   349  007F84                     STR_44:
   350  007F84  2E                 	db	46
   351  007F85  2D                 	db	45
   352  007F86  2E                 	db	46
   353  007F87  2D                 	db	45
   354  007F88  2E                 	db	46
   355  007F89  2D                 	db	45
   356  007F8A  00                 	db	0
   357  007F8B                     STR_45:
   358  007F8B  2D                 	db	45
   359  007F8C  2E                 	db	46
   360  007F8D  2E                 	db	46
   361  007F8E  2E                 	db	46
   362  007F8F  2E                 	db	46
   363  007F90  2D                 	db	45
   364  007F91  00                 	db	0
   365  007F92                     STR_42:
   366  007F92  2E                 	db	46
   367  007F93  2E                 	db	46
   368  007F94  2D                 	db	45
   369  007F95  2D                 	db	45
   370  007F96  2E                 	db	46
   371  007F97  2E                 	db	46
   372  007F98  00                 	db	0
   373  007F99                     STR_1:
   374  007F99  45                 	db	69	;'E'
   375  007F9A  41                 	db	65	;'A'
   376  007F9B  53                 	db	83	;'S'
   377  007F9C  41                 	db	65	;'A'
   378  007F9D  54                 	db	84	;'T'
   379  007F9E  32                 	db	50	;'2'
   380  007F9F  00                 	db	0
   381  007FA0                     STR_31:
   382  007FA0  2D                 	db	45
   383  007FA1  2D                 	db	45
   384  007FA2  2D                 	db	45
   385  007FA3  2D                 	db	45
   386  007FA4  2D                 	db	45
   387  007FA5  00                 	db	0
   388  007FA6                     STR_32:
   389  007FA6  2E                 	db	46
   390  007FA7  2D                 	db	45
   391  007FA8  2D                 	db	45
   392  007FA9  2D                 	db	45
   393  007FAA  2D                 	db	45
   394  007FAB  00                 	db	0
   395  007FAC                     STR_33:
   396  007FAC  2E                 	db	46
   397  007FAD  2E                 	db	46
   398  007FAE  2D                 	db	45
   399  007FAF  2D                 	db	45
   400  007FB0  2D                 	db	45
   401  007FB1  00                 	db	0
   402  007FB2                     STR_34:
   403  007FB2  2E                 	db	46
   404  007FB3  2E                 	db	46
   405  007FB4  2E                 	db	46
   406  007FB5  2D                 	db	45
   407  007FB6  2D                 	db	45
   408  007FB7  00                 	db	0
   409  007FB8                     STR_40:
   410  007FB8  2D                 	db	45
   411  007FB9  2D                 	db	45
   412  007FBA  2D                 	db	45
   413  007FBB  2D                 	db	45
   414  007FBC  2E                 	db	46
   415  007FBD  00                 	db	0
   416  007FBE                     STR_43:
   417  007FBE  2D                 	db	45
   418  007FBF  2E                 	db	46
   419  007FC0  2E                 	db	46
   420  007FC1  2D                 	db	45
   421  007FC2  2E                 	db	46
   422  007FC3  00                 	db	0
   423  007FC4                     STR_39:
   424  007FC4  2D                 	db	45
   425  007FC5  2D                 	db	45
   426  007FC6  2D                 	db	45
   427  007FC7  2E                 	db	46
   428  007FC8  2E                 	db	46
   429  007FC9  00                 	db	0
   430  007FCA                     STR_38:
   431  007FCA  2D                 	db	45
   432  007FCB  2D                 	db	45
   433  007FCC  2E                 	db	46
   434  007FCD  2E                 	db	46
   435  007FCE  2E                 	db	46
   436  007FCF  00                 	db	0
   437  007FD0                     STR_37:
   438  007FD0  2D                 	db	45
   439  007FD1  2E                 	db	46
   440  007FD2  2E                 	db	46
   441  007FD3  2E                 	db	46
   442  007FD4  2E                 	db	46
   443  007FD5  00                 	db	0
   444  007FD6                     STR_36:
   445  007FD6  2E                 	db	46
   446  007FD7  2E                 	db	46
   447  007FD8  2E                 	db	46
   448  007FD9  2E                 	db	46
   449  007FDA  2E                 	db	46
   450  007FDB  00                 	db	0
   451  007FDC                     STR_29:
   452  007FDC  2D                 	db	45
   453  007FDD  2E                 	db	46
   454  007FDE  2D                 	db	45
   455  007FDF  2D                 	db	45
   456  007FE0  00                 	db	0
   457  007FE1                     STR_21:
   458  007FE1  2D                 	db	45
   459  007FE2  2D                 	db	45
   460  007FE3  2E                 	db	46
   461  007FE4  2D                 	db	45
   462  007FE5  00                 	db	0
   463  007FE6                     STR_28:
   464  007FE6  2D                 	db	45
   465  007FE7  2E                 	db	46
   466  007FE8  2E                 	db	46
   467  007FE9  2D                 	db	45
   468  007FEA  00                 	db	0
   469  007FEB                     STR_20:
   470  007FEB  2E                 	db	46
   471  007FEC  2D                 	db	45
   472  007FED  2D                 	db	45
   473  007FEE  2E                 	db	46
   474  007FEF  00                 	db	0
   475  007FF0                     STR_7:
   476  007FF0  2D                 	db	45
   477  007FF1  2E                 	db	46
   478  007FF2  2D                 	db	45
   479  007FF3  2E                 	db	46
   480  007FF4  00                 	db	0
   481  007FF5                     STR_16:
   482  007FF5  2E                 	db	46
   483  007FF6  2D                 	db	45
   484  007FF7  2E                 	db	46
   485  007FF8  2E                 	db	46
   486  007FF9  00                 	db	0
   487  007FFA  30                 	db	48	;'0'
   488  007FFB  00                 	db	0
   489  007FFC  31                 	db	49	;'1'
   490  007FFD  00                 	db	0
   491  0000                     
   492                           ; #config settings
   493  007FFE  00                 	db	0	; dummy byte at the end
   494  0000                     
   495                           	psect	cinit
   496  0042D8                     __pcinit:
   497                           	opt stack 0
   498  0042D8                     start_initialization:
   499                           	opt stack 0
   500  0042D8                     __initialization:
   501                           	opt stack 0
   502                           
   503                           ; Initialize objects allocated to COMRAM (5 bytes)
   504                           ; load TBLPTR registers with __pidataCOMRAM
   505  0042D8  0E7C               	movlw	low __pidataCOMRAM
   506  0042DA  6EF6               	movwf	tblptrl,c
   507  0042DC  0E48               	movlw	high __pidataCOMRAM
   508  0042DE  6EF7               	movwf	tblptrh,c
   509  0042E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   510  0042E2  6EF8               	movwf	tblptru,c
   511  0042E4  EE00  F03F         	lfsr	0,__pdataCOMRAM
   512  0042E8  EE10 F005          	lfsr	1,5
   513  0042EC                     copy_data0:
   514  0042EC  0009               	tblrd		*+
   515  0042EE  CFF5 FFEE          	movff	tablat,postinc0
   516  0042F2  50E5               	movf	postdec1,w,c
   517  0042F4  50E1               	movf	fsr1l,w,c
   518  0042F6  E1FA               	bnz	copy_data0
   519                           
   520                           ; Clear objects allocated to BANK2 (256 bytes)
   521  0042F8  EE02  F000         	lfsr	0,__pbssBANK2
   522  0042FC  EE11 F000          	lfsr	1,256
   523  004300                     clear_0:
   524  004300  6AEE               	clrf	postinc0,c
   525  004302  50E5               	movf	postdec1,w,c
   526  004304  50E1               	movf	fsr1l,w,c
   527  004306  E1FC               	bnz	clear_0
   528  004308  50E2               	movf	fsr1h,w,c
   529  00430A  E1FA               	bnz	clear_0
   530                           
   531                           ; Clear objects allocated to BANK0 (6 bytes)
   532  00430C  0100               	movlb	0
   533  00430E  6BE9               	clrf	(__pbssBANK0+5)& (0+255),b
   534  004310  6BE8               	clrf	(__pbssBANK0+4)& (0+255),b
   535  004312  6BE7               	clrf	(__pbssBANK0+3)& (0+255),b
   536  004314  6BE6               	clrf	(__pbssBANK0+2)& (0+255),b
   537  004316  6BE5               	clrf	(__pbssBANK0+1)& (0+255),b
   538  004318  6BE4               	clrf	__pbssBANK0& (0+255),b
   539                           
   540                           ; Clear objects allocated to COMRAM (19 bytes)
   541  00431A  EE00  F02C         	lfsr	0,__pbssCOMRAM
   542  00431E  0E13               	movlw	19
   543  004320                     clear_1:
   544  004320  6AEE               	clrf	postinc0,c
   545  004322  06E8               	decf	wreg,f,c
   546  004324  E1FD               	bnz	clear_1
   547  004326                     end_of_initialization:
   548                           	opt stack 0
   549  004326                     __end_of__initialization:
   550                           	opt stack 0
   551  004326  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   552  004328  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   553  00432A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   554  00432C  6EF8               	movwf	tblptru,c
   555  00432E  0100               	movlb	0
   556  004330  EF30  F024         	goto	_main	;jump to C main() function
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1h	equ	0xFE2
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	bssCOMRAM
   568  00002C                     __pbssCOMRAM:
   569                           	opt stack 0
   570  00002C                     high_priority_int@num_received_bits:
   571                           	opt stack 0
   572  00002C                     	ds	2
   573  00002E                     high_priority_int@previous_received_bit:
   574                           	opt stack 0
   575  00002E                     	ds	2
   576  000030                     high_priority_int@previous_signal_level:
   577                           	opt stack 0
   578  000030                     	ds	2
   579  000032                     high_priority_int@valid_samples:
   580                           	opt stack 0
   581  000032                     	ds	2
   582  000034                     high_priority_int@total_add:
   583                           	opt stack 0
   584  000034                     	ds	2
   585  000036                     high_priority_int@cycles_transmitter_active:
   586                           	opt stack 0
   587  000036                     	ds	2
   588  000038                     high_priority_int@times_threshold_exceeded:
   589                           	opt stack 0
   590  000038                     	ds	2
   591  00003A                     high_priority_int@sample_position:
   592                           	opt stack 0
   593  00003A                     	ds	2
   594  00003C                     high_priority_int@tmr1_interrupt_number:
   595                           	opt stack 0
   596  00003C                     	ds	2
   597  00003E                     high_priority_int@is_transmitter_active:
   598                           	opt stack 0
   599  00003E                     	ds	1
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1h	equ	0xFE2
   608                           fsr1l	equ	0xFE1
   609                           
   610                           	psect	dataCOMRAM
   611  00003F                     __pdataCOMRAM:
   612                           	opt stack 0
   613  00003F                     high_priority_int@noise_avg_value:
   614                           	opt stack 0
   615  00003F                     	ds	3
   616  000042                     high_priority_int@activation_threshold:
   617                           	opt stack 0
   618  000042                     	ds	2
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1h	equ	0xFE2
   627                           fsr1l	equ	0xFE1
   628                           
   629                           	psect	bssBANK0
   630  0000E4                     __pbssBANK0:
   631                           	opt stack 0
   632  0000E4                     _global_command_buffer:
   633                           	opt stack 0
   634  0000E4                     	ds	4
   635  0000E8                     _global_command_pending_check:
   636                           	opt stack 0
   637  0000E8                     	ds	2
   638                           tblptru	equ	0xFF8
   639                           tblptrh	equ	0xFF7
   640                           tblptrl	equ	0xFF6
   641                           tablat	equ	0xFF5
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           postdec1	equ	0xFE5
   645                           fsr1h	equ	0xFE2
   646                           fsr1l	equ	0xFE1
   647                           
   648                           	psect	bssBANK2
   649  000200                     __pbssBANK2:
   650                           	opt stack 0
   651  000200                     high_priority_int@samples:
   652                           	opt stack 0
   653  000200                     	ds	256
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1h	equ	0xFE2
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	cstackBANK1
   665  000100                     __pcstackBANK1:
   666                           	opt stack 0
   667  000100                     util_beacon_transmission@BEACON_MESSAGE:
   668                           	opt stack 0
   669  000100                     util_command_ack_transmission@BEACON_COMMAND_MESSAGE:
   670                           	opt stack 0
   671  000100                     util_getTemperature@bit_mem:
   672                           	opt stack 0
   673                           
   674                           ; 144 bytes @ 0x0
   675  000100                     	ds	128
   676  000180                     util_beacon_transmission@BEACON_BUFFER:
   677                           	opt stack 0
   678  000180                     util_command_ack_transmission@BEACON_COMMAND_BUFFER:
   679                           	opt stack 0
   680                           
   681                           ; 64 bytes @ 0x80
   682  000180                     	ds	16
   683  000190                     util_getTemperature@byte_mem:
   684                           	opt stack 0
   685                           
   686                           ; 18 bytes @ 0x90
   687  000190                     	ds	18
   688  0001A2                     util_getTemperature@num_bit:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0xA2
   692  0001A2                     	ds	2
   693  0001A4                     util_getTemperature@sign:
   694                           	opt stack 0
   695                           
   696                           ; 3 bytes @ 0xA4
   697  0001A4                     	ds	3
   698  0001A7                     _util_getTemperature$2957:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0xA7
   702  0001A7                     	ds	3
   703  0001AA                     _util_getTemperature$2958:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0xAA
   707  0001AA                     	ds	3
   708  0001AD                     _util_getTemperature$2959:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0xAD
   712  0001AD                     	ds	3
   713  0001B0                     _util_getTemperature$2960:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0xB0
   717  0001B0                     	ds	3
   718  0001B3                     util_getTemperature@shift_reg_bit0:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0xB3
   722  0001B3                     	ds	2
   723  0001B5                     util_getTemperature@shift_reg_bit1:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0xB5
   727  0001B5                     	ds	2
   728  0001B7                     util_getTemperature@shift_reg_bit2:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0xB7
   732  0001B7                     	ds	2
   733  0001B9                     util_getTemperature@shift_reg_bit3:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0xB9
   737  0001B9                     	ds	2
   738  0001BB                     util_getTemperature@shift_reg_bit4:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0xBB
   742  0001BB                     	ds	2
   743  0001BD                     util_getTemperature@shift_reg_bit5:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xBD
   747  0001BD                     	ds	2
   748  0001BF                     util_getTemperature@shift_reg_bit6:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0xBF
   752  0001BF                     	ds	1
   753  0001C0                     util_beacon_transmission@i:
   754                           	opt stack 0
   755  0001C0                     util_command_ack_transmission@i:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0xC0
   759  0001C0                     	ds	1
   760  0001C1                     util_getTemperature@shift_reg_bit7:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0xC1
   764  0001C1                     	ds	2
   765  0001C3                     util_getTemperature@shift_reg_bit_temp:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0xC3
   769  0001C3                     	ds	2
   770  0001C5                     util_getTemperature@num_byte:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0xC5
   774  0001C5                     	ds	2
   775  0001C7                     util_getTemperature@bit_in_byte:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0xC7
   779  0001C7                     	ds	2
   780  0001C9                     util_getTemperature@temperature:
   781                           	opt stack 0
   782                           
   783                           ; 3 bytes @ 0xC9
   784  0001C9                     	ds	3
   785  0001CC                     util_getTemperature@i:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0xCC
   789  0001CC                     	ds	2
   790  0001CE                     main_loop@temperature:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0xCE
   794  0001CE                     	ds	3
   795  0001D1                     main_loop@solar_current:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0xD1
   799  0001D1                     	ds	2
   800  0001D3                     main_loop@battery_current:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0xD3
   804  0001D3                     	ds	2
   805  0001D5                     main_loop@battery_voltage:
   806                           	opt stack 0
   807                           
   808                           ; 3 bytes @ 0xD5
   809  0001D5                     	ds	3
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           postdec1	equ	0xFE5
   817                           fsr1h	equ	0xFE2
   818                           fsr1l	equ	0xFE1
   819                           
   820                           	psect	cstackBANK0
   821  000060                     __pcstackBANK0:
   822                           	opt stack 0
   823  000060                     ??_low_priority_int:
   824                           
   825                           ; 1 bytes @ 0x0
   826  000060                     	ds	17
   827  000071                     ?_util_onewire_read_byte:
   828                           	opt stack 0
   829  000071                     ?___awdiv:
   830                           	opt stack 0
   831  000071                     ?___awtoft:
   832                           	opt stack 0
   833  000071                     ?___lltoft:
   834                           	opt stack 0
   835  000071                     ?___lwtoft:
   836                           	opt stack 0
   837  000071                     ?___lldiv:
   838                           	opt stack 0
   839  000071                     util_onewire_write_byte@bit0:
   840                           	opt stack 0
   841  000071                     util_transmit_morse_sequence@morse_sequence:
   842                           	opt stack 0
   843  000071                     util_waits_delay_secs@secs:
   844                           	opt stack 0
   845  000071                     ___awdiv@dividend:
   846                           	opt stack 0
   847  000071                     ___awtoft@c:
   848                           	opt stack 0
   849  000071                     ___lwtoft@c:
   850                           	opt stack 0
   851  000071                     ___lldiv@dividend:
   852                           	opt stack 0
   853  000071                     ___lltoft@c:
   854                           	opt stack 0
   855  000071                     golay_weight@wgt:
   856                           	opt stack 0
   857                           
   858                           ; 16 bytes @ 0x11
   859  000071                     	ds	2
   860  000073                     ??_util_onewire_read_byte:
   861  000073                     util_onewire_write_byte@bit1:
   862                           	opt stack 0
   863  000073                     util_waits_delay_mins@minutes:
   864                           	opt stack 0
   865  000073                     ___awdiv@divisor:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x13
   869  000073                     	ds	1
   870  000074                     ?___ftdiv:
   871                           	opt stack 0
   872  000074                     ___ftdiv@f1:
   873                           	opt stack 0
   874                           
   875                           ; 3 bytes @ 0x14
   876  000074                     	ds	1
   877  000075                     ?___wmul:
   878                           	opt stack 0
   879  000075                     util_onewire_write_byte@bit2:
   880                           	opt stack 0
   881  000075                     util_waits_delay_hours@hours:
   882                           	opt stack 0
   883  000075                     ___wmul@multiplier:
   884                           	opt stack 0
   885  000075                     ___lldiv@divisor:
   886                           	opt stack 0
   887                           
   888                           ; 4 bytes @ 0x15
   889  000075                     	ds	2
   890  000077                     util_onewire_write_byte@bit3:
   891                           	opt stack 0
   892  000077                     ___wmul@multiplicand:
   893                           	opt stack 0
   894  000077                     ___ftdiv@f2:
   895                           	opt stack 0
   896                           
   897                           ; 3 bytes @ 0x17
   898  000077                     	ds	2
   899  000079                     ?___ftmul:
   900                           	opt stack 0
   901  000079                     ?___llmod:
   902                           	opt stack 0
   903  000079                     util_onewire_write_byte@bit4:
   904                           	opt stack 0
   905  000079                     ___ftmul@f1:
   906                           	opt stack 0
   907  000079                     ___llmod@dividend:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x19
   911  000079                     	ds	1
   912  00007A                     ___ftdiv@cntr:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x1A
   916  00007A                     	ds	1
   917  00007B                     util_onewire_write_byte@bit5:
   918                           	opt stack 0
   919  00007B                     ___ftdiv@f3:
   920                           	opt stack 0
   921                           
   922                           ; 3 bytes @ 0x1B
   923  00007B                     	ds	1
   924  00007C                     ___ftmul@f2:
   925                           	opt stack 0
   926                           
   927                           ; 3 bytes @ 0x1C
   928  00007C                     	ds	1
   929  00007D                     util_onewire_write_byte@bit6:
   930                           	opt stack 0
   931  00007D                     ___llmod@divisor:
   932                           	opt stack 0
   933                           
   934                           ; 4 bytes @ 0x1D
   935  00007D                     	ds	1
   936  00007E                     ___ftdiv@exp:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x1E
   940  00007E                     	ds	1
   941  00007F                     ___ftdiv@sign:
   942                           	opt stack 0
   943  00007F                     ___ftmul@exp:
   944                           	opt stack 0
   945  00007F                     util_onewire_write_byte@bit7:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x1F
   949  00007F                     	ds	1
   950  000080                     ___ftmul@f3_as_product:
   951                           	opt stack 0
   952                           
   953                           ; 3 bytes @ 0x20
   954  000080                     	ds	1
   955  000081                     util_onewire_read_byte@bit0:
   956                           	opt stack 0
   957  000081                     golay_weight@k:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x21
   961  000081                     	ds	2
   962  000083                     ___ftmul@cntr:
   963                           	opt stack 0
   964  000083                     util_onewire_read_byte@bit1:
   965                           	opt stack 0
   966  000083                     golay_weight@bits:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x23
   970  000083                     	ds	1
   971  000084                     ___ftmul@sign:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x24
   975  000084                     	ds	1
   976  000085                     ?_util_getBatteryVoltage:
   977                           	opt stack 0
   978  000085                     ?_fround:
   979                           	opt stack 0
   980  000085                     ?_scale:
   981                           	opt stack 0
   982  000085                     ?_golay_correct:
   983                           	opt stack 0
   984  000085                     util_onewire_read_byte@bit2:
   985                           	opt stack 0
   986  000085                     golay_correct@cw:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x25
   990  000085                     	ds	2
   991  000087                     util_onewire_read_byte@bit3:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x27
   995  000087                     	ds	1
   996  000088                     util_getBatteryVoltage@value:
   997                           	opt stack 0
   998  000088                     _fround$2962:
   999                           	opt stack 0
  1000  000088                     _scale$2963:
  1001                           	opt stack 0
  1002                           
  1003                           ; 3 bytes @ 0x28
  1004  000088                     	ds	1
  1005  000089                     util_onewire_read_byte@bit4:
  1006                           	opt stack 0
  1007  000089                     golay_correct@errs:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x29
  1011  000089                     	ds	2
  1012  00008B                     ??_golay_correct:
  1013  00008B                     scale@scl:
  1014                           	opt stack 0
  1015  00008B                     util_onewire_read_byte@bit5:
  1016                           	opt stack 0
  1017  00008B                     util_getBatteryVoltage@voltage:
  1018                           	opt stack 0
  1019  00008B                     _fround$2961:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x2B
  1023  00008B                     	ds	1
  1024  00008C                     ?___fttol:
  1025                           	opt stack 0
  1026  00008C                     ___fttol@f1:
  1027                           	opt stack 0
  1028                           
  1029                           ; 3 bytes @ 0x2C
  1030  00008C                     	ds	1
  1031  00008D                     util_onewire_read_byte@bit6:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x2D
  1035  00008D                     	ds	1
  1036  00008E                     fround@prec:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x2E
  1040  00008E                     	ds	1
  1041  00008F                     ?___ftadd:
  1042                           	opt stack 0
  1043  00008F                     util_onewire_read_byte@bit7:
  1044                           	opt stack 0
  1045  00008F                     ___ftadd@f1:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x2F
  1049  00008F                     	ds	1
  1050  000090                     ??___fttol:
  1051  000090                     golay_correct@w:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x30
  1055  000090                     	ds	1
  1056  000091                     util_onewire_read_byte@value:
  1057                           	opt stack 0
  1058  000091                     golay_correct@cwsaver:
  1059                           	opt stack 0
  1060                           
  1061                           ; 4 bytes @ 0x31
  1062  000091                     	ds	1
  1063  000092                     ___ftadd@f2:
  1064                           	opt stack 0
  1065                           
  1066                           ; 3 bytes @ 0x32
  1067  000092                     	ds	3
  1068  000095                     ??___ftadd:
  1069  000095                     ___fttol@sign1:
  1070                           	opt stack 0
  1071  000095                     golay_correct@mask:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x35
  1075  000095                     	ds	1
  1076  000096                     ___fttol@lval:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x36
  1080  000096                     	ds	2
  1081  000098                     ___ftadd@sign:
  1082                           	opt stack 0
  1083                           
  1084                           ; 1 bytes @ 0x38
  1085  000098                     	ds	1
  1086  000099                     ___ftadd@exp2:
  1087                           	opt stack 0
  1088  000099                     golay_correct@i:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x39
  1092  000099                     	ds	1
  1093  00009A                     ___ftadd@exp1:
  1094                           	opt stack 0
  1095  00009A                     ___fttol@exp1:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x3A
  1099  00009A                     	ds	1
  1100  00009B                     ?_util_getSolarCurrent:
  1101                           	opt stack 0
  1102  00009B                     ?_util_getBatteryCurrent:
  1103                           	opt stack 0
  1104  00009B                     ?_util_getTemperature:
  1105                           	opt stack 0
  1106  00009B                     ?___ftsub:
  1107                           	opt stack 0
  1108  00009B                     ___ftsub@f1:
  1109                           	opt stack 0
  1110  00009B                     golay_correct@s:
  1111                           	opt stack 0
  1112                           
  1113                           ; 4 bytes @ 0x3B
  1114  00009B                     	ds	2
  1115  00009D                     util_getSolarCurrent@value:
  1116                           	opt stack 0
  1117  00009D                     util_getBatteryCurrent@value:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x3D
  1121  00009D                     	ds	1
  1122  00009E                     ??_util_getTemperature:
  1123  00009E                     ___ftsub@f2:
  1124                           	opt stack 0
  1125                           
  1126                           ; 3 bytes @ 0x3E
  1127  00009E                     	ds	1
  1128  00009F                     golay_correct@j:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x3F
  1132  00009F                     	ds	1
  1133  0000A0                     util_getSolarCurrent@solarCurrent:
  1134                           	opt stack 0
  1135  0000A0                     util_getBatteryCurrent@batteryCurrent:
  1136                           	opt stack 0
  1137                           
  1138                           ; 3 bytes @ 0x40
  1139  0000A0                     	ds	1
  1140  0000A1                     ?_func_command_decode:
  1141                           	opt stack 0
  1142  0000A1                     ?__doprnt:
  1143                           	opt stack 0
  1144  0000A1                     __doprnt@pb:
  1145                           	opt stack 0
  1146  0000A1                     func_command_decode@candidate_command:
  1147                           	opt stack 0
  1148                           
  1149                           ; 4 bytes @ 0x41
  1150  0000A1                     	ds	2
  1151  0000A3                     __doprnt@f:
  1152                           	opt stack 0
  1153                           
  1154                           ; 2 bytes @ 0x43
  1155  0000A3                     	ds	2
  1156  0000A5                     func_command_decode@decoded_command:
  1157                           	opt stack 0
  1158  0000A5                     __doprnt@ap:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x45
  1162  0000A5                     	ds	2
  1163  0000A7                     ??__doprnt:
  1164  0000A7                     func_command_decode@decoded_value:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x47
  1168  0000A7                     	ds	2
  1169  0000A9                     func_command_decode@header:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x49
  1173  0000A9                     	ds	2
  1174  0000AB                     func_command_decode@fixed_command:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x4B
  1178  0000AB                     	ds	2
  1179  0000AD                     __doprnt$2964:
  1180                           	opt stack 0
  1181                           
  1182                           ; 3 bytes @ 0x4D
  1183  0000AD                     	ds	2
  1184  0000AF                     func_command_decode@golay_errors:
  1185                           	opt stack 0
  1186                           
  1187                           ; 2 bytes @ 0x4F
  1188  0000AF                     	ds	1
  1189  0000B0                     __doprnt@flag:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x50
  1193  0000B0                     	ds	1
  1194  0000B1                     func_command_decode@body:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x51
  1198  0000B1                     	ds	1
  1199  0000B2                     __doprnt@width:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x52
  1203  0000B2                     	ds	2
  1204  0000B4                     __doprnt@val:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0x54
  1208  0000B4                     	ds	1
  1209  0000B5                     func_command_decode@body_data:
  1210                           	opt stack 0
  1211                           
  1212                           ; 4 bytes @ 0x55
  1213  0000B5                     	ds	3
  1214  0000B8                     __doprnt@exp:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x58
  1218  0000B8                     	ds	2
  1219  0000BA                     __doprnt@tmpval:
  1220                           	opt stack 0
  1221                           
  1222                           ; 4 bytes @ 0x5A
  1223  0000BA                     	ds	4
  1224  0000BE                     __doprnt@fval:
  1225                           	opt stack 0
  1226                           
  1227                           ; 3 bytes @ 0x5E
  1228  0000BE                     	ds	3
  1229  0000C1                     __doprnt@prec:
  1230                           	opt stack 0
  1231                           
  1232                           ; 2 bytes @ 0x61
  1233  0000C1                     	ds	2
  1234  0000C3                     __doprnt@c:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x63
  1238  0000C3                     	ds	1
  1239  0000C4                     ?_sprintf:
  1240                           	opt stack 0
  1241  0000C4                     sprintf@wh:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x64
  1245  0000C4                     	ds	2
  1246  0000C6                     sprintf@f:
  1247                           	opt stack 0
  1248                           
  1249                           ; 2 bytes @ 0x66
  1250  0000C6                     	ds	12
  1251  0000D2                     sprintf@ap:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x72
  1255  0000D2                     	ds	2
  1256  0000D4                     sprintf@pb:
  1257                           	opt stack 0
  1258                           
  1259                           ; 4 bytes @ 0x74
  1260  0000D4                     	ds	4
  1261  0000D8                     util_command_ack_transmission@command:
  1262                           	opt stack 0
  1263  0000D8                     util_beacon_transmission@battery_voltage:
  1264                           	opt stack 0
  1265                           
  1266                           ; 3 bytes @ 0x78
  1267  0000D8                     	ds	2
  1268  0000DA                     util_command_ack_transmission@value:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x7A
  1272  0000DA                     	ds	1
  1273  0000DB                     util_beacon_transmission@solar_current:
  1274                           	opt stack 0
  1275                           
  1276                           ; 2 bytes @ 0x7B
  1277  0000DB                     	ds	1
  1278  0000DC                     func_command_management@candidate_command:
  1279                           	opt stack 0
  1280                           
  1281                           ; 4 bytes @ 0x7C
  1282  0000DC                     	ds	1
  1283  0000DD                     util_beacon_transmission@battery_current:
  1284                           	opt stack 0
  1285                           
  1286                           ; 2 bytes @ 0x7D
  1287  0000DD                     	ds	2
  1288  0000DF                     util_beacon_transmission@temperature:
  1289                           	opt stack 0
  1290                           
  1291                           ; 3 bytes @ 0x7F
  1292  0000DF                     	ds	1
  1293  0000E0                     func_command_management@decoded_command:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x80
  1297  0000E0                     	ds	2
  1298  0000E2                     func_command_management@decoded_command_value:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0x82
  1302  0000E2                     	ds	2
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           postdec1	equ	0xFE5
  1310                           fsr1h	equ	0xFE2
  1311                           fsr1l	equ	0xFE1
  1312                           
  1313                           	psect	cstackCOMRAM
  1314  000001                     __pcstackCOMRAM:
  1315                           	opt stack 0
  1316  000001                     ??_high_priority_int:
  1317  000001                     
  1318                           ; 1 bytes @ 0x0
  1319  000001                     	ds	19
  1320  000014                     high_priority_int@oldest_sample:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x13
  1324  000014                     	ds	2
  1325  000016                     high_priority_int@current_signal_level:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x15
  1329  000016                     	ds	2
  1330  000018                     high_priority_int@sample:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0x17
  1334  000018                     	ds	2
  1335  00001A                     high_priority_int@received_bit:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x19
  1339  00001A                     	ds	2
  1340  00001C                     ??_init_watchdogs_initialize:
  1341  00001C                     ??_isdigit:
  1342  00001C                     ?_golay_parity:
  1343                           	opt stack 0
  1344  00001C                     ?_util_onewire_reset:
  1345                           	opt stack 0
  1346  00001C                     ?_util_onewire_read_bit:
  1347                           	opt stack 0
  1348  00001C                     ?_strlen:
  1349                           	opt stack 0
  1350  00001C                     ?_golay_weight:
  1351                           	opt stack 0
  1352  00001C                     ?___awmod:
  1353                           	opt stack 0
  1354  00001C                     ?___ftpack:
  1355                           	opt stack 0
  1356  00001C                     ?___ftneg:
  1357                           	opt stack 0
  1358  00001C                     ?_golay_syndrome:
  1359                           	opt stack 0
  1360  00001C                     ?__tdiv_to_l_:
  1361                           	opt stack 0
  1362  00001C                     ?__div_to_l_:
  1363                           	opt stack 0
  1364  00001C                     ?_golay_rotate_left:
  1365                           	opt stack 0
  1366  00001C                     ?_golay_rotate_right:
  1367                           	opt stack 0
  1368  00001C                     util_onewire_write_bit@bit_in:
  1369                           	opt stack 0
  1370  00001C                     util_waits_delay_ms@ms:
  1371                           	opt stack 0
  1372  00001C                     ___awmod@dividend:
  1373                           	opt stack 0
  1374  00001C                     memset@p1:
  1375                           	opt stack 0
  1376  00001C                     strcat@to:
  1377                           	opt stack 0
  1378  00001C                     strcpy@to:
  1379                           	opt stack 0
  1380  00001C                     strlen@s:
  1381                           	opt stack 0
  1382  00001C                     __div_to_l_@f1:
  1383                           	opt stack 0
  1384  00001C                     ___ftpack@arg:
  1385                           	opt stack 0
  1386  00001C                     __tdiv_to_l_@f1:
  1387                           	opt stack 0
  1388  00001C                     ___ftge@ff1:
  1389                           	opt stack 0
  1390  00001C                     ___ftneg@f1:
  1391                           	opt stack 0
  1392  00001C                     golay_parity@cw:
  1393                           	opt stack 0
  1394  00001C                     golay_syndrome@cw:
  1395                           	opt stack 0
  1396  00001C                     golay_weight@cw:
  1397                           	opt stack 0
  1398  00001C                     golay_rotate_left@cw:
  1399                           	opt stack 0
  1400  00001C                     golay_rotate_right@cw:
  1401                           	opt stack 0
  1402  00001C                     ___lldiv@quotient:
  1403                           	opt stack 0
  1404                           
  1405                           ; 4 bytes @ 0x1B
  1406  00001C                     	ds	1
  1407  00001D                     _isdigit$2527:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x1C
  1411  00001D                     	ds	1
  1412  00001E                     ??_util_onewire_reset:
  1413  00001E                     ??_util_onewire_read_bit:
  1414  00001E                     ??_strlen:
  1415  00001E                     ??_util_waits_delay_ms:
  1416  00001E                     isdigit@c:
  1417                           	opt stack 0
  1418  00001E                     util_onewire_write_byte@value:
  1419                           	opt stack 0
  1420  00001E                     ___awmod@divisor:
  1421                           	opt stack 0
  1422  00001E                     memset@c:
  1423                           	opt stack 0
  1424  00001E                     strcat@from:
  1425                           	opt stack 0
  1426  00001E                     strcpy@from:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x1D
  1430  00001E                     	ds	1
  1431  00001F                     ___ftpack@exp:
  1432                           	opt stack 0
  1433  00001F                     util_onewire_reset@presence:
  1434                           	opt stack 0
  1435  00001F                     util_onewire_read_bit@value:
  1436                           	opt stack 0
  1437  00001F                     util_waits_delay_ms@i:
  1438                           	opt stack 0
  1439  00001F                     __div_to_l_@f2:
  1440                           	opt stack 0
  1441  00001F                     __tdiv_to_l_@f2:
  1442                           	opt stack 0
  1443  00001F                     ___ftge@ff2:
  1444                           	opt stack 0
  1445                           
  1446                           ; 3 bytes @ 0x1E
  1447  00001F                     	ds	1
  1448  000020                     ??_golay_syndrome:
  1449  000020                     ??_golay_parity:
  1450  000020                     ??_util_onewire_write_byte:
  1451  000020                     ??_golay_weight:
  1452  000020                     ___awmod@counter:
  1453                           	opt stack 0
  1454  000020                     ___ftpack@sign:
  1455                           	opt stack 0
  1456  000020                     ___lldiv@counter:
  1457                           	opt stack 0
  1458  000020                     golay_rotate_left@n:
  1459                           	opt stack 0
  1460  000020                     golay_rotate_right@n:
  1461                           	opt stack 0
  1462  000020                     memset@n:
  1463                           	opt stack 0
  1464  000020                     strcat@cp:
  1465                           	opt stack 0
  1466  000020                     strcpy@cp:
  1467                           	opt stack 0
  1468  000020                     strlen@cp:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x1F
  1472  000020                     	ds	1
  1473  000021                     ??_util_waits_delay_secs:
  1474  000021                     ??___ftpack:
  1475  000021                     golay_parity@p:
  1476                           	opt stack 0
  1477  000021                     ___awmod@sign:
  1478                           	opt stack 0
  1479  000021                     ___llmod@counter:
  1480                           	opt stack 0
  1481                           
  1482                           ; 1 bytes @ 0x20
  1483  000021                     	ds	1
  1484  000022                     ??_util_transmit_morse_sequence:
  1485  000022                     ??__tdiv_to_l_:
  1486  000022                     ??_golay_rotate_left:
  1487  000022                     ??_golay_rotate_right:
  1488  000022                     ??___ftge:
  1489  000022                     ___awdiv@counter:
  1490                           	opt stack 0
  1491  000022                     util_waits_delay_secs@i:
  1492                           	opt stack 0
  1493  000022                     memset@p:
  1494                           	opt stack 0
  1495  000022                     __div_to_l_@quot:
  1496                           	opt stack 0
  1497                           
  1498                           ; 4 bytes @ 0x21
  1499  000022                     	ds	1
  1500  000023                     ___awdiv@sign:
  1501                           	opt stack 0
  1502                           
  1503                           ; 1 bytes @ 0x22
  1504  000023                     	ds	1
  1505  000024                     ??___lltoft:
  1506  000024                     ___awtoft@sign:
  1507                           	opt stack 0
  1508  000024                     util_transmit_morse_sequence@i:
  1509                           	opt stack 0
  1510  000024                     util_waits_delay_secs@j:
  1511                           	opt stack 0
  1512  000024                     golay_syndrome@i:
  1513                           	opt stack 0
  1514  000024                     ___awdiv@quotient:
  1515                           	opt stack 0
  1516                           
  1517                           ; 2 bytes @ 0x23
  1518  000024                     	ds	1
  1519  000025                     ??___ftdiv:
  1520  000025                     __tdiv_to_l_@quot:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x24
  1524  000025                     	ds	1
  1525  000026                     ??_util_waits_delay_mins:
  1526  000026                     util_transmit_letter@letter:
  1527                           	opt stack 0
  1528  000026                     __div_to_l_@cntr:
  1529                           	opt stack 0
  1530  000026                     golay_rotate_left@i:
  1531                           	opt stack 0
  1532  000026                     golay_rotate_right@i:
  1533                           	opt stack 0
  1534  000026                     ___wmul@product:
  1535                           	opt stack 0
  1536                           
  1537                           ; 2 bytes @ 0x25
  1538  000026                     	ds	1
  1539  000027                     __div_to_l_@exp1:
  1540                           	opt stack 0
  1541  000027                     util_waits_delay_mins@i:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x26
  1545  000027                     	ds	1
  1546  000028                     ??___ftmul:
  1547  000028                     ??_func_command_decode:
  1548  000028                     ___lltoft@exp:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0x27
  1552  000028                     	ds	1
  1553  000029                     ??_util_waits_delay_hours:
  1554  000029                     __tdiv_to_l_@cntr:
  1555                           	opt stack 0
  1556                           
  1557                           ; 1 bytes @ 0x28
  1558  000029                     	ds	1
  1559  00002A                     __tdiv_to_l_@exp1:
  1560                           	opt stack 0
  1561  00002A                     util_waits_delay_hours@i:
  1562                           	opt stack 0
  1563                           
  1564                           ; 2 bytes @ 0x29
  1565  00002A                     	ds	1
  1566  00002B                     
  1567                           ; 1 bytes @ 0x2A
  1568  00002B                     	ds	1
  1569  00002C                     tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           postdec1	equ	0xFE5
  1576                           fsr1h	equ	0xFE2
  1577                           fsr1l	equ	0xFE1
  1578                           
  1579                           ; 1 bytes @ 0x2B
  1580 ;;
  1581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1582 ;;
  1583 ;; *************** function _main *****************
  1584 ;; Defined at:
  1585 ;;		line 20 in file "easat2_main_mcu.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         0       0       0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels required when called:   10
  1605 ;; This function calls:
  1606 ;;		_init_initialize
  1607 ;;		_main_loop
  1608 ;; This function is called by:
  1609 ;;		Startup code after reset
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text0
  1614  004860                     __ptext0:
  1615                           	opt stack 0
  1616  004860                     _main:
  1617                           	opt stack 21
  1618                           
  1619                           ;easat2_main_mcu.c: 23: init_initialize();
  1620                           
  1621                           ;incstack = 0
  1622  004860  EC10  F024         	call	_init_initialize	;wreg free
  1623                           
  1624                           ;easat2_main_mcu.c: 26: main_loop();
  1625  004864  EC82  F01F         	call	_main_loop	;wreg free
  1626  004868  EF53  F000         	goto	start
  1627  00486C                     __end_of_main:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1h	equ	0xFE2
  1637                           fsr1l	equ	0xFE1
  1638                           
  1639 ;; *************** function _main_loop *****************
  1640 ;; Defined at:
  1641 ;;		line 32 in file "easat2_main_mcu.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  battery_volt    3  213[BANK1 ] float 
  1646 ;;  temperature     3  206[BANK1 ] float 
  1647 ;;  battery_curr    2  211[BANK1 ] int 
  1648 ;;  solar_curren    2  209[BANK1 ] int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0      10       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0
  1661 ;;      Totals:         0       0      10       0       0       0       0
  1662 ;;Total ram usage:       10 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    9
  1665 ;; This function calls:
  1666 ;;		_func_command_management
  1667 ;;		_init_watchdogs_initialize
  1668 ;;		_util_beacon_transmission
  1669 ;;		_util_getBatteryCurrent
  1670 ;;		_util_getBatteryVoltage
  1671 ;;		_util_getSolarCurrent
  1672 ;;		_util_getTemperature
  1673 ;;		_util_waits_delay_hours
  1674 ;;		_util_waits_delay_mins
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text1
  1681  003F04                     __ptext1:
  1682                           	opt stack 0
  1683  003F04                     _main_loop:
  1684                           	opt stack 21
  1685  003F04                     
  1686                           ;easat2_main_mcu.c: 42: init_watchdogs_initialize();
  1687  003F04  ECDA  F023         	call	_init_watchdogs_initialize	;wreg free
  1688                           
  1689                           ;easat2_main_mcu.c: 45: func_command_management();
  1690  003F08  ECEB  F01E         	call	_func_command_management	;wreg free
  1691                           
  1692                           ;easat2_main_mcu.c: 50: battery_voltage = util_getBatteryVoltage();
  1693  003F0C  ECDB  F01C         	call	_util_getBatteryVoltage	;wreg free
  1694  003F10  C085  F1D5         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1695  003F14  C086  F1D6         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1696  003F18  C087  F1D7         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1697                           
  1698                           ;easat2_main_mcu.c: 53: solar_current = util_getSolarCurrent();
  1699  003F1C  EC11  F01C         	call	_util_getSolarCurrent	;wreg free
  1700  003F20  C09B  F1D1         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1701  003F24  C09C  F1D2         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1702                           
  1703                           ;easat2_main_mcu.c: 56: battery_current = util_getBatteryCurrent();
  1704  003F28  EC76  F01C         	call	_util_getBatteryCurrent	;wreg free
  1705  003F2C  C09B  F1D3         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1706  003F30  C09C  F1D4         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1707                           
  1708                           ;easat2_main_mcu.c: 59: temperature = util_getTemperature();
  1709  003F34  ECF8  F007         	call	_util_getTemperature	;wreg free
  1710  003F38  C09B  F1CE         	movff	?_util_getTemperature,main_loop@temperature
  1711  003F3C  C09C  F1CF         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1712  003F40  C09D  F1D0         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1713                           
  1714                           ;easat2_main_mcu.c: 63: if (battery_voltage >= 0) {
  1715  003F44  0101               	movlb	1	; () banked
  1716  003F46  BFD7               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1717  003F48  D017               	goto	l7041
  1718                           
  1719                           ; BSR set to: 1
  1720                           ;easat2_main_mcu.c: 64: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1721  003F4A  C1D5  F0D8         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1722  003F4E  C1D6  F0D9         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1723  003F52  C1D7  F0DA         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1724  003F56  C1D1  F0DB         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1725  003F5A  C1D2  F0DC         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1726  003F5E  C1D3  F0DD         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1727  003F62  C1D4  F0DE         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1728  003F66  C1CE  F0DF         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1729  003F6A  C1CF  F0E0         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1730  003F6E  C1D0  F0E1         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1731  003F72  EC33  F01B         	call	_util_beacon_transmission	;wreg free
  1732                           
  1733                           ;easat2_main_mcu.c: 65: } else {
  1734  003F76  D007               	goto	l107
  1735  003F78                     l7041:
  1736                           
  1737                           ;easat2_main_mcu.c: 67: util_waits_delay_hours(2);
  1738  003F78  0E00               	movlw	0
  1739  003F7A  0100               	movlb	0	; () banked
  1740  003F7C  6F76               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1741  003F7E  0E02               	movlw	2
  1742  003F80  6F75               	movwf	util_waits_delay_hours@hours& (0+255),b
  1743  003F82  EC9B  F022         	call	_util_waits_delay_hours	;wreg free
  1744  003F86                     l107:
  1745                           
  1746                           ;easat2_main_mcu.c: 68: }
  1747                           ;easat2_main_mcu.c: 71: util_waits_delay_mins(3);
  1748  003F86  0E00               	movlw	0
  1749  003F88  0100               	movlb	0	; () banked
  1750  003F8A  6F74               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1751  003F8C  0E03               	movlw	3
  1752  003F8E  6F73               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1753  003F90  ECB6  F022         	call	_util_waits_delay_mins	;wreg free
  1754                           
  1755                           ;easat2_main_mcu.c: 74: } while (1);
  1756  003F94  D7B7               	goto	l7025
  1757  003F96                     __end_of_main_loop:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           fsr1h	equ	0xFE2
  1767                           fsr1l	equ	0xFE1
  1768                           
  1769 ;; *************** function _util_waits_delay_hours *****************
  1770 ;; Defined at:
  1771 ;;		line 17 in file "easat2_util_waits.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  hours           2   21[BANK0 ] int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  i               2   41[COMRAM] int 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         0       2       0       0       0       0       0
  1786 ;;      Locals:         2       0       0       0       0       0       0
  1787 ;;      Temps:          1       0       0       0       0       0       0
  1788 ;;      Totals:         3       2       0       0       0       0       0
  1789 ;;Total ram usage:        5 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    5
  1792 ;; This function calls:
  1793 ;;		_util_waits_delay_mins
  1794 ;; This function is called by:
  1795 ;;		_main_loop
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text2
  1800  004536                     __ptext2:
  1801                           	opt stack 0
  1802  004536                     _util_waits_delay_hours:
  1803                           	opt stack 24
  1804                           
  1805                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1806                           
  1807                           ;incstack = 0
  1808  004536  0E00               	movlw	0
  1809  004538  6E2B               	movwf	util_waits_delay_hours@i+1,c
  1810  00453A  0E00               	movlw	0
  1811  00453C  6E2A               	movwf	util_waits_delay_hours@i,c
  1812  00453E  D009               	goto	l7013
  1813  004540                     l7009:
  1814                           
  1815                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1816  004540  0E00               	movlw	0
  1817  004542  0100               	movlb	0	; () banked
  1818  004544  6F74               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1819  004546  0E3C               	movlw	60
  1820  004548  6F73               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1821  00454A  ECB6  F022         	call	_util_waits_delay_mins	;wreg free
  1822  00454E  4A2A               	infsnz	util_waits_delay_hours@i,f,c
  1823  004550  2A2B               	incf	util_waits_delay_hours@i+1,f,c
  1824  004552                     l7013:
  1825  004552  0100               	movlb	0	; () banked
  1826  004554  5175               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1827  004556  5C2A               	subwf	util_waits_delay_hours@i,w,c
  1828  004558  502B               	movf	util_waits_delay_hours@i+1,w,c
  1829  00455A  0A80               	xorlw	128
  1830  00455C  6E29               	movwf	??_util_waits_delay_hours& (0+255),c
  1831  00455E  0100               	movlb	0	; () banked
  1832  004560  5176               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1833  004562  0A80               	xorlw	128
  1834  004564  5829               	subwfb	??_util_waits_delay_hours& (0+255),w,c
  1835  004566  B0D8               	btfsc	status,0,c
  1836  004568  0012               	return	
  1837  00456A  D7EA               	goto	l7009
  1838  00456C                     __end_of_util_waits_delay_hours:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           status	equ	0xFD8
  1850                           
  1851 ;; *************** function _util_waits_delay_mins *****************
  1852 ;; Defined at:
  1853 ;;		line 24 in file "easat2_util_waits.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  minutes         2   19[BANK0 ] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  i               2   38[COMRAM] int 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0       2       0       0       0       0       0
  1868 ;;      Locals:         2       0       0       0       0       0       0
  1869 ;;      Temps:          1       0       0       0       0       0       0
  1870 ;;      Totals:         3       2       0       0       0       0       0
  1871 ;;Total ram usage:        5 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    4
  1874 ;; This function calls:
  1875 ;;		_util_waits_delay_secs
  1876 ;; This function is called by:
  1877 ;;		_main_loop
  1878 ;;		_util_waits_delay_hours
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text3
  1883  00456C                     __ptext3:
  1884                           	opt stack 0
  1885  00456C                     _util_waits_delay_mins:
  1886                           	opt stack 25
  1887                           
  1888                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;incstack = 0
  1892  00456C  0E00               	movlw	0
  1893  00456E  6E28               	movwf	util_waits_delay_mins@i+1,c
  1894  004570  0E00               	movlw	0
  1895  004572  6E27               	movwf	util_waits_delay_mins@i,c
  1896  004574  D009               	goto	l6629
  1897  004576                     l6625:
  1898                           
  1899                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1900  004576  0E00               	movlw	0
  1901  004578  0100               	movlb	0	; () banked
  1902  00457A  6F72               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1903  00457C  0E3C               	movlw	60
  1904  00457E  6F71               	movwf	util_waits_delay_secs@secs& (0+255),b
  1905  004580  EC9A  F021         	call	_util_waits_delay_secs	;wreg free
  1906  004584  4A27               	infsnz	util_waits_delay_mins@i,f,c
  1907  004586  2A28               	incf	util_waits_delay_mins@i+1,f,c
  1908  004588                     l6629:
  1909  004588  0100               	movlb	0	; () banked
  1910  00458A  5173               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1911  00458C  5C27               	subwf	util_waits_delay_mins@i,w,c
  1912  00458E  5028               	movf	util_waits_delay_mins@i+1,w,c
  1913  004590  0A80               	xorlw	128
  1914  004592  6E26               	movwf	??_util_waits_delay_mins& (0+255),c
  1915  004594  0100               	movlb	0	; () banked
  1916  004596  5174               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1917  004598  0A80               	xorlw	128
  1918  00459A  5826               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1919  00459C  B0D8               	btfsc	status,0,c
  1920  00459E  0012               	return	
  1921  0045A0  D7EA               	goto	l6625
  1922  0045A2                     __end_of_util_waits_delay_mins:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1h	equ	0xFE2
  1932                           fsr1l	equ	0xFE1
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function _util_getTemperature *****************
  1936 ;; Defined at:
  1937 ;;		line 118 in file "easat2_util_inputs.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  bit_mem       144    0[BANK1 ] int [72]
  1942 ;;  byte_mem       18  144[BANK1 ] int [9]
  1943 ;;  temperature     3  201[BANK1 ] float 
  1944 ;;  sign            3  164[BANK1 ] float 
  1945 ;;  i               2  204[BANK1 ] int 
  1946 ;;  bit_in_byte     2  199[BANK1 ] int 
  1947 ;;  num_byte        2  197[BANK1 ] int 
  1948 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1949 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1950 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1951 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1952 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1953 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1954 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1955 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1956 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1957 ;;  num_bit         2  162[BANK1 ] int 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  3   59[BANK0 ] float 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1967 ;;      Params:         0       3       0       0       0       0       0
  1968 ;;      Locals:         0       0     206       0       0       0       0
  1969 ;;      Temps:          0       3       0       0       0       0       0
  1970 ;;      Totals:         0       6     206       0       0       0       0
  1971 ;;Total ram usage:      212 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		___awtoft
  1976 ;;		___ftadd
  1977 ;;		___ftdiv
  1978 ;;		___ftmul
  1979 ;;		_util_onewire_read_byte
  1980 ;;		_util_onewire_reset
  1981 ;;		_util_onewire_write_byte
  1982 ;;		_util_waits_delay_secs
  1983 ;; This function is called by:
  1984 ;;		_main_loop
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text4
  1989  000FF0                     __ptext4:
  1990                           	opt stack 0
  1991  000FF0                     _util_getTemperature:
  1992                           	opt stack 25
  1993                           
  1994                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1995                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1996                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;incstack = 0
  2000  000FF0  0E00               	movlw	0
  2001  000FF2  0101               	movlb	1	; () banked
  2002  000FF4  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  2003  000FF6  0E00               	movlw	0
  2004  000FF8  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  2005                           
  2006                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  2007  000FFA  0E00               	movlw	0
  2008  000FFC  0101               	movlb	1	; () banked
  2009  000FFE  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  2010  001000  0E00               	movlw	0
  2011  001002  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  2012                           
  2013                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  2014  001004  0E00               	movlw	0
  2015  001006  0101               	movlb	1	; () banked
  2016  001008  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2017  00100A  0E00               	movlw	0
  2018  00100C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2019                           
  2020                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  2021  00100E  0E00               	movlw	0
  2022  001010  0101               	movlb	1	; () banked
  2023  001012  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2024  001014  0E00               	movlw	0
  2025  001016  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2026                           
  2027                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  2028  001018  0E00               	movlw	0
  2029  00101A  0101               	movlb	1	; () banked
  2030  00101C  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  2031  00101E  0E00               	movlw	0
  2032  001020  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  2033                           
  2034                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  2035  001022  0E00               	movlw	0
  2036  001024  0101               	movlb	1	; () banked
  2037  001026  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  2038  001028  0E00               	movlw	0
  2039  00102A  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  2040                           
  2041                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  2042  00102C  0E00               	movlw	0
  2043  00102E  0101               	movlb	1	; () banked
  2044  001030  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  2045  001032  0E00               	movlw	0
  2046  001034  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  2047                           
  2048                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  2049  001036  0E00               	movlw	0
  2050  001038  0101               	movlb	1	; () banked
  2051  00103A  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  2052  00103C  0E00               	movlw	0
  2053  00103E  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  2054                           
  2055                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  2056  001040  0E00               	movlw	0
  2057  001042  0101               	movlb	1	; () banked
  2058  001044  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2059  001046  0E00               	movlw	0
  2060  001048  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2061                           
  2062                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  2063  00104A  0E00               	movlw	0
  2064  00104C  0101               	movlb	1	; () banked
  2065  00104E  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  2066  001050  0E00               	movlw	0
  2067  001052  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  2068  001054  0E00               	movlw	0
  2069  001056  0101               	movlb	1	; () banked
  2070  001058  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2071  00105A  0E00               	movlw	0
  2072  00105C  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2073  00105E  0E00               	movlw	0
  2074  001060  0101               	movlb	1	; () banked
  2075  001062  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2076  001064  0E00               	movlw	0
  2077  001066  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2078                           
  2079                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  2080  001068  0E00               	movlw	0
  2081  00106A  0101               	movlb	1	; () banked
  2082  00106C  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  2083  00106E  0E00               	movlw	0
  2084  001070  0101               	movlb	1	; () banked
  2085  001072  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  2086  001074  0E00               	movlw	0
  2087  001076  0101               	movlb	1	; () banked
  2088  001078  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  2089                           
  2090                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  2091  00107A  0E00               	movlw	0
  2092  00107C  0101               	movlb	1	; () banked
  2093  00107E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2094  001080  0E80               	movlw	128
  2095  001082  0101               	movlb	1	; () banked
  2096  001084  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2097  001086  0E3F               	movlw	63
  2098  001088  0101               	movlb	1	; () banked
  2099  00108A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2100                           
  2101                           ;easat2_util_inputs.c: 137: int i = 0;
  2102  00108C  0E00               	movlw	0
  2103  00108E  0101               	movlb	1	; () banked
  2104  001090  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2105  001092  0E00               	movlw	0
  2106  001094  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2107                           
  2108                           ; BSR set to: 1
  2109                           ;easat2_util_inputs.c: 143: INTCONbits.GIE = 0;
  2110  001096  9EF2               	bcf	intcon,7,c	;volatile
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;easat2_util_inputs.c: 151: if (util_onewire_reset()) return -99.1;
  2114  001098  EC3B  F022         	call	_util_onewire_reset	;wreg free
  2115  00109C  501C               	movf	?_util_onewire_reset,w,c
  2116  00109E  101D               	iorwf	?_util_onewire_reset+1,w,c
  2117  0010A0  B4D8               	btfsc	status,2,c
  2118  0010A2  D00A               	goto	l6853
  2119  0010A4  0E33               	movlw	51
  2120  0010A6  0100               	movlb	0	; () banked
  2121  0010A8  6F9B               	movwf	?_util_getTemperature& (0+255),b
  2122  0010AA  0EC6               	movlw	198
  2123  0010AC  0100               	movlb	0	; () banked
  2124  0010AE  6F9C               	movwf	(?_util_getTemperature+1)& (0+255),b
  2125  0010B0  0EC2               	movlw	194
  2126  0010B2  0100               	movlb	0	; () banked
  2127  0010B4  6F9D               	movwf	(?_util_getTemperature+2)& (0+255),b
  2128                           
  2129                           ; BSR set to: 0
  2130  0010B6  0012               	return	
  2131  0010B8                     l6853:
  2132                           
  2133                           ;easat2_util_inputs.c: 154: util_onewire_write_byte(0xCC);
  2134  0010B8  0E00               	movlw	0
  2135  0010BA  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2136  0010BC  0ECC               	movlw	204
  2137  0010BE  6E1E               	movwf	util_onewire_write_byte@value,c
  2138  0010C0  EC5A  F017         	call	_util_onewire_write_byte	;wreg free
  2139                           
  2140                           ;easat2_util_inputs.c: 157: util_onewire_write_byte(0x44);
  2141  0010C4  0E00               	movlw	0
  2142  0010C6  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2143  0010C8  0E44               	movlw	68
  2144  0010CA  6E1E               	movwf	util_onewire_write_byte@value,c
  2145  0010CC  EC5A  F017         	call	_util_onewire_write_byte	;wreg free
  2146                           
  2147                           ;easat2_util_inputs.c: 162: TRISAbits.TRISA3 = 1;
  2148  0010D0  8692               	bsf	3986,3,c	;volatile
  2149                           
  2150                           ;easat2_util_inputs.c: 164: INTCONbits.GIE = 1;
  2151  0010D2  8EF2               	bsf	intcon,7,c	;volatile
  2152                           
  2153                           ;easat2_util_inputs.c: 168: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  2154  0010D4  0E00               	movlw	0
  2155  0010D6  0101               	movlb	1	; () banked
  2156  0010D8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2157  0010DA  0E00               	movlw	0
  2158  0010DC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2159  0010DE  D00A               	goto	l6865
  2160  0010E0                     l6861:
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;easat2_util_inputs.c: 169: util_waits_delay_secs(1);
  2164  0010E0  0E00               	movlw	0
  2165  0010E2  0100               	movlb	0	; () banked
  2166  0010E4  6F72               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  2167  0010E6  0E01               	movlw	1
  2168  0010E8  6F71               	movwf	util_waits_delay_secs@secs& (0+255),b
  2169  0010EA  EC9A  F021         	call	_util_waits_delay_secs	;wreg free
  2170  0010EE  0101               	movlb	1	; () banked
  2171  0010F0  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2172  0010F2  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2173  0010F4                     l6865:
  2174                           
  2175                           ; BSR set to: 1
  2176  0010F4  0101               	movlb	1	; () banked
  2177  0010F6  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2178  0010F8  D008               	goto	l6867
  2179  0010FA  0101               	movlb	1	; () banked
  2180  0010FC  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2181  0010FE  E107               	bnz	l6869
  2182  001100  0E05               	movlw	5
  2183  001102  0101               	movlb	1	; () banked
  2184  001104  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2185  001106  B0D8               	btfsc	status,0,c
  2186  001108  D002               	goto	l6869
  2187  00110A                     l6867:
  2188                           
  2189                           ; BSR set to: 1
  2190  00110A  A680               	btfss	3968,3,c	;volatile
  2191  00110C  D7E9               	goto	l6861
  2192  00110E                     l6869:
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;easat2_util_inputs.c: 171: if (i == 5) return -99.2;
  2196  00110E  0E05               	movlw	5
  2197  001110  0101               	movlb	1	; () banked
  2198  001112  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  2199  001114  0101               	movlb	1	; () banked
  2200  001116  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  2201  001118  A4D8               	btfss	status,2,c
  2202  00111A  D00A               	goto	l178
  2203                           
  2204                           ; BSR set to: 1
  2205  00111C  0E66               	movlw	102
  2206  00111E  0100               	movlb	0	; () banked
  2207  001120  6F9B               	movwf	?_util_getTemperature& (0+255),b
  2208  001122  0EC6               	movlw	198
  2209  001124  0100               	movlb	0	; () banked
  2210  001126  6F9C               	movwf	(?_util_getTemperature+1)& (0+255),b
  2211  001128  0EC2               	movlw	194
  2212  00112A  0100               	movlb	0	; () banked
  2213  00112C  6F9D               	movwf	(?_util_getTemperature+2)& (0+255),b
  2214                           
  2215                           ; BSR set to: 0
  2216  00112E  0012               	return	
  2217  001130                     l178:
  2218                           
  2219                           ; BSR set to: 1
  2220                           ;easat2_util_inputs.c: 175: INTCONbits.GIE = 0;
  2221  001130  9EF2               	bcf	intcon,7,c	;volatile
  2222                           
  2223                           ; BSR set to: 1
  2224                           ;easat2_util_inputs.c: 181: if (util_onewire_reset()) return -99.3;
  2225  001132  EC3B  F022         	call	_util_onewire_reset	;wreg free
  2226  001136  501C               	movf	?_util_onewire_reset,w,c
  2227  001138  101D               	iorwf	?_util_onewire_reset+1,w,c
  2228  00113A  B4D8               	btfsc	status,2,c
  2229  00113C  D00A               	goto	l6881
  2230  00113E  0E9A               	movlw	154
  2231  001140  0100               	movlb	0	; () banked
  2232  001142  6F9B               	movwf	?_util_getTemperature& (0+255),b
  2233  001144  0EC6               	movlw	198
  2234  001146  0100               	movlb	0	; () banked
  2235  001148  6F9C               	movwf	(?_util_getTemperature+1)& (0+255),b
  2236  00114A  0EC2               	movlw	194
  2237  00114C  0100               	movlb	0	; () banked
  2238  00114E  6F9D               	movwf	(?_util_getTemperature+2)& (0+255),b
  2239                           
  2240                           ; BSR set to: 0
  2241  001150  0012               	return	
  2242  001152                     l6881:
  2243                           
  2244                           ;easat2_util_inputs.c: 184: util_onewire_write_byte(0xCC);
  2245  001152  0E00               	movlw	0
  2246  001154  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2247  001156  0ECC               	movlw	204
  2248  001158  6E1E               	movwf	util_onewire_write_byte@value,c
  2249  00115A  EC5A  F017         	call	_util_onewire_write_byte	;wreg free
  2250                           
  2251                           ;easat2_util_inputs.c: 187: util_onewire_write_byte(0xBE);
  2252  00115E  0E00               	movlw	0
  2253  001160  6E1F               	movwf	util_onewire_write_byte@value+1,c
  2254  001162  0EBE               	movlw	190
  2255  001164  6E1E               	movwf	util_onewire_write_byte@value,c
  2256  001166  EC5A  F017         	call	_util_onewire_write_byte	;wreg free
  2257                           
  2258                           ;easat2_util_inputs.c: 198: byte_mem[0] = util_onewire_read_byte();
  2259  00116A  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2260  00116E  C071  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  2261  001172  C072  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  2262                           
  2263                           ;easat2_util_inputs.c: 200: byte_mem[1] = util_onewire_read_byte();
  2264  001176  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2265  00117A  C071  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  2266  00117E  C072  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  2267                           
  2268                           ;easat2_util_inputs.c: 202: byte_mem[2] = util_onewire_read_byte();
  2269  001182  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2270  001186  C071  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  2271  00118A  C072  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  2272                           
  2273                           ;easat2_util_inputs.c: 204: byte_mem[3] = util_onewire_read_byte();
  2274  00118E  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2275  001192  C071  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  2276  001196  C072  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2277                           
  2278                           ;easat2_util_inputs.c: 206: byte_mem[4] = util_onewire_read_byte();
  2279  00119A  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2280  00119E  C071  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2281  0011A2  C072  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2282                           
  2283                           ;easat2_util_inputs.c: 208: byte_mem[5] = util_onewire_read_byte();
  2284  0011A6  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2285  0011AA  C071  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2286  0011AE  C072  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2287                           
  2288                           ;easat2_util_inputs.c: 210: byte_mem[6] = util_onewire_read_byte();
  2289  0011B2  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2290  0011B6  C071  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2291  0011BA  C072  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2292                           
  2293                           ;easat2_util_inputs.c: 212: byte_mem[7] = util_onewire_read_byte();
  2294  0011BE  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2295  0011C2  C071  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2296  0011C6  C072  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2297                           
  2298                           ;easat2_util_inputs.c: 214: byte_mem[8] = util_onewire_read_byte();
  2299  0011CA  ECCA  F015         	call	_util_onewire_read_byte	;wreg free
  2300  0011CE  C071  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2301  0011D2  C072  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2302                           
  2303                           ;easat2_util_inputs.c: 218: INTCONbits.GIE = 1;
  2304  0011D6  8EF2               	bsf	intcon,7,c	;volatile
  2305                           
  2306                           ;easat2_util_inputs.c: 224: for (num_byte = 0; num_byte < 9; num_byte++) {
  2307  0011D8  0E00               	movlw	0
  2308  0011DA  0101               	movlb	1	; () banked
  2309  0011DC  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2310  0011DE  0E00               	movlw	0
  2311  0011E0  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2312  0011E2                     l6887:
  2313                           
  2314                           ; BSR set to: 1
  2315  0011E2  0101               	movlb	1	; () banked
  2316  0011E4  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2317  0011E6  D008               	goto	l6891
  2318  0011E8  0101               	movlb	1	; () banked
  2319  0011EA  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2320  0011EC  E14F               	bnz	l6909
  2321  0011EE  0E09               	movlw	9
  2322  0011F0  0101               	movlb	1	; () banked
  2323  0011F2  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2324  0011F4  B0D8               	btfsc	status,0,c
  2325  0011F6  D04A               	goto	l6909
  2326  0011F8                     l6891:
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;easat2_util_inputs.c: 225: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2330  0011F8  0E00               	movlw	0
  2331  0011FA  0101               	movlb	1	; () banked
  2332  0011FC  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2333  0011FE  0E00               	movlw	0
  2334  001200  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2335  001202                     l6893:
  2336                           
  2337                           ; BSR set to: 1
  2338  001202  0101               	movlb	1	; () banked
  2339  001204  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2340  001206  D008               	goto	l6897
  2341  001208  0101               	movlb	1	; () banked
  2342  00120A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2343  00120C  E13B               	bnz	l6905
  2344  00120E  0E08               	movlw	8
  2345  001210  0101               	movlb	1	; () banked
  2346  001212  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2347  001214  B0D8               	btfsc	status,0,c
  2348  001216  D036               	goto	l6905
  2349  001218                     l6897:
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;easat2_util_inputs.c: 226: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2353  001218  C1C7  F09E         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2354  00121C  90D8               	bcf	status,0,c
  2355  00121E  0101               	movlb	1	; () banked
  2356  001220  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2357  001222  6ED9               	movwf	fsr2l,c
  2358  001224  0101               	movlb	1	; () banked
  2359  001226  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2360  001228  6EDA               	movwf	fsr2h,c
  2361  00122A  0E90               	movlw	low util_getTemperature@byte_mem
  2362  00122C  26D9               	addwf	fsr2l,f,c
  2363  00122E  0E01               	movlw	high util_getTemperature@byte_mem
  2364  001230  22DA               	addwfc	fsr2h,f,c
  2365  001232  CFDE F09F          	movff	postinc2,??_util_getTemperature+1
  2366  001236  CFDD F0A0          	movff	postdec2,??_util_getTemperature+2
  2367  00123A  0100               	movlb	0	; () banked
  2368  00123C  2B9E               	incf	??_util_getTemperature& (0+255),f,b
  2369  00123E  D004               	goto	u8104
  2370  001240                     u8105:
  2371  001240  0100               	movlb	0	; () banked
  2372  001242  35A0               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2373  001244  33A0               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2374  001246  339F               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2375  001248                     u8104:
  2376  001248  0100               	movlb	0	; () banked
  2377  00124A  2F9E               	decfsz	??_util_getTemperature& (0+255),f,b
  2378  00124C  D7F9               	goto	u8105
  2379  00124E  0E01               	movlw	1
  2380  001250  0100               	movlb	0	; () banked
  2381  001252  179F               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2382  001254  0E00               	movlw	0
  2383  001256  17A0               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2384  001258  90D8               	bcf	status,0,c
  2385  00125A  0101               	movlb	1	; () banked
  2386  00125C  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2387  00125E  6ED9               	movwf	fsr2l,c
  2388  001260  0101               	movlb	1	; () banked
  2389  001262  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2390  001264  6EDA               	movwf	fsr2h,c
  2391  001266  0E00               	movlw	low util_getTemperature@bit_mem
  2392  001268  26D9               	addwf	fsr2l,f,c
  2393  00126A  0E01               	movlw	high util_getTemperature@bit_mem
  2394  00126C  22DA               	addwfc	fsr2h,f,c
  2395  00126E  C09F  FFDE         	movff	??_util_getTemperature+1,postinc2
  2396  001272  C0A0  FFDD         	movff	??_util_getTemperature+2,postdec2
  2397                           
  2398                           ; BSR set to: 1
  2399  001276  0101               	movlb	1	; () banked
  2400  001278  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2401  00127A  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2402                           
  2403                           ; BSR set to: 1
  2404  00127C  0101               	movlb	1	; () banked
  2405  00127E  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2406  001280  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2407  001282  D7BF               	goto	l6893
  2408  001284                     l6905:
  2409                           
  2410                           ; BSR set to: 1
  2411  001284  0101               	movlb	1	; () banked
  2412  001286  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2413  001288  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2414  00128A  D7AB               	goto	l6887
  2415  00128C                     l6909:
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;easat2_util_inputs.c: 227: }
  2419                           ;easat2_util_inputs.c: 231: for (i = 0; i < (9*8); i++) {
  2420  00128C  0E00               	movlw	0
  2421  00128E  0101               	movlb	1	; () banked
  2422  001290  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2423  001292  0E00               	movlw	0
  2424  001294  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2425  001296                     l6911:
  2426                           
  2427                           ; BSR set to: 1
  2428  001296  0101               	movlb	1	; () banked
  2429  001298  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2430  00129A  D008               	goto	l6915
  2431  00129C  0101               	movlb	1	; () banked
  2432  00129E  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2433  0012A0  E154               	bnz	l6937
  2434  0012A2  0E48               	movlw	72
  2435  0012A4  0101               	movlb	1	; () banked
  2436  0012A6  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2437  0012A8  B0D8               	btfsc	status,0,c
  2438  0012AA  D04F               	goto	l6937
  2439  0012AC                     l6915:
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;easat2_util_inputs.c: 236: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2443  0012AC  90D8               	bcf	status,0,c
  2444  0012AE  0101               	movlb	1	; () banked
  2445  0012B0  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2446  0012B2  6ED9               	movwf	fsr2l,c
  2447  0012B4  0101               	movlb	1	; () banked
  2448  0012B6  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2449  0012B8  6EDA               	movwf	fsr2h,c
  2450  0012BA  0E00               	movlw	low util_getTemperature@bit_mem
  2451  0012BC  26D9               	addwf	fsr2l,f,c
  2452  0012BE  0E01               	movlw	high util_getTemperature@bit_mem
  2453  0012C0  22DA               	addwfc	fsr2h,f,c
  2454  0012C2  CFDE F09E          	movff	postinc2,??_util_getTemperature
  2455  0012C6  CFDD F09F          	movff	postdec2,??_util_getTemperature+1
  2456  0012CA  0101               	movlb	1	; () banked
  2457  0012CC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2458  0012CE  0100               	movlb	0	; () banked
  2459  0012D0  199E               	xorwf	??_util_getTemperature& (0+255),w,b
  2460  0012D2  0101               	movlb	1	; () banked
  2461  0012D4  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2462  0012D6  0101               	movlb	1	; () banked
  2463  0012D8  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2464  0012DA  0100               	movlb	0	; () banked
  2465  0012DC  199F               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2466  0012DE  0101               	movlb	1	; () banked
  2467  0012E0  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2468                           
  2469                           ; BSR set to: 1
  2470                           ;easat2_util_inputs.c: 238: shift_reg_bit0 = shift_reg_bit1;
  2471  0012E2  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2472  0012E6  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;easat2_util_inputs.c: 239: shift_reg_bit1 = shift_reg_bit2;
  2476  0012EA  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2477  0012EE  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;easat2_util_inputs.c: 240: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2481  0012F2  0101               	movlb	1	; () banked
  2482  0012F4  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2483  0012F6  0101               	movlb	1	; () banked
  2484  0012F8  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2485  0012FA  0101               	movlb	1	; () banked
  2486  0012FC  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2487  0012FE  0101               	movlb	1	; () banked
  2488  001300  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2489  001302  0101               	movlb	1	; () banked
  2490  001304  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2491  001306  0101               	movlb	1	; () banked
  2492  001308  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;easat2_util_inputs.c: 241: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2496  00130A  0101               	movlb	1	; () banked
  2497  00130C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2498  00130E  0101               	movlb	1	; () banked
  2499  001310  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2500  001312  0101               	movlb	1	; () banked
  2501  001314  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2502  001316  0101               	movlb	1	; () banked
  2503  001318  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2504  00131A  0101               	movlb	1	; () banked
  2505  00131C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2506  00131E  0101               	movlb	1	; () banked
  2507  001320  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;easat2_util_inputs.c: 242: shift_reg_bit4 = shift_reg_bit5;
  2511  001322  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2512  001326  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2513                           
  2514                           ; BSR set to: 1
  2515                           ;easat2_util_inputs.c: 243: shift_reg_bit5 = shift_reg_bit6;
  2516  00132A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2517  00132E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;easat2_util_inputs.c: 244: shift_reg_bit6 = shift_reg_bit7;
  2521  001332  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2522  001336  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;easat2_util_inputs.c: 245: shift_reg_bit7 = shift_reg_bit_temp;
  2526  00133A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2527  00133E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2528                           
  2529                           ; BSR set to: 1
  2530  001342  0101               	movlb	1	; () banked
  2531  001344  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2532  001346  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2533  001348  D7A6               	goto	l6911
  2534  00134A                     l6937:
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;easat2_util_inputs.c: 247: }
  2538                           ;easat2_util_inputs.c: 251: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2539                           ;easat2_util_inputs.c: 252: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2540                           ;easat2_util_inputs.c: 253: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2541  00134A  0101               	movlb	1	; () banked
  2542  00134C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2543  00134E  0101               	movlb	1	; () banked
  2544  001350  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2545  001352  A4D8               	btfss	status,2,c
  2546  001354  D02A               	goto	l6953
  2547                           
  2548                           ; BSR set to: 1
  2549  001356  0101               	movlb	1	; () banked
  2550  001358  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2551  00135A  0101               	movlb	1	; () banked
  2552  00135C  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2553  00135E  A4D8               	btfss	status,2,c
  2554  001360  D024               	goto	l6953
  2555                           
  2556                           ; BSR set to: 1
  2557  001362  0101               	movlb	1	; () banked
  2558  001364  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2559  001366  0101               	movlb	1	; () banked
  2560  001368  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2561  00136A  B4D8               	btfsc	status,2,c
  2562  00136C  D006               	goto	l6945
  2563                           
  2564                           ; BSR set to: 1
  2565  00136E  0101               	movlb	1	; () banked
  2566  001370  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2567  001372  0101               	movlb	1	; () banked
  2568  001374  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2569  001376  A4D8               	btfss	status,2,c
  2570  001378  D018               	goto	l6953
  2571  00137A                     l6945:
  2572                           
  2573                           ; BSR set to: 1
  2574  00137A  0101               	movlb	1	; () banked
  2575  00137C  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2576  00137E  0101               	movlb	1	; () banked
  2577  001380  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2578  001382  A4D8               	btfss	status,2,c
  2579  001384  D012               	goto	l6953
  2580                           
  2581                           ; BSR set to: 1
  2582  001386  0101               	movlb	1	; () banked
  2583  001388  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2584  00138A  0101               	movlb	1	; () banked
  2585  00138C  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2586  00138E  B4D8               	btfsc	status,2,c
  2587  001390  D006               	goto	l6951
  2588                           
  2589                           ; BSR set to: 1
  2590  001392  0101               	movlb	1	; () banked
  2591  001394  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2592  001396  0101               	movlb	1	; () banked
  2593  001398  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2594  00139A  A4D8               	btfss	status,2,c
  2595  00139C  D006               	goto	l6953
  2596  00139E                     l6951:
  2597                           
  2598                           ; BSR set to: 1
  2599  00139E  0101               	movlb	1	; () banked
  2600  0013A0  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2601  0013A2  0101               	movlb	1	; () banked
  2602  0013A4  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2603  0013A6  B4D8               	btfsc	status,2,c
  2604  0013A8  D00A               	goto	l6957
  2605  0013AA                     l6953:
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;easat2_util_inputs.c: 254: return -99.7;
  2609  0013AA  0E66               	movlw	102
  2610  0013AC  0100               	movlb	0	; () banked
  2611  0013AE  6F9B               	movwf	?_util_getTemperature& (0+255),b
  2612  0013B0  0EC7               	movlw	199
  2613  0013B2  0100               	movlb	0	; () banked
  2614  0013B4  6F9C               	movwf	(?_util_getTemperature+1)& (0+255),b
  2615  0013B6  0EC2               	movlw	194
  2616  0013B8  0100               	movlb	0	; () banked
  2617  0013BA  6F9D               	movwf	(?_util_getTemperature+2)& (0+255),b
  2618                           
  2619                           ; BSR set to: 0
  2620  0013BC  0012               	return	
  2621  0013BE                     l6957:
  2622                           
  2623                           ;easat2_util_inputs.c: 258: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2624  0013BE  0101               	movlb	1	; () banked
  2625  0013C0  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2626  0013C2  0101               	movlb	1	; () banked
  2627  0013C4  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2628  0013C6  A4D8               	btfss	status,2,c
  2629  0013C8  D008               	goto	l6961
  2630                           
  2631                           ; BSR set to: 1
  2632  0013CA  0E00               	movlw	0
  2633  0013CC  0101               	movlb	1	; () banked
  2634  0013CE  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2635  0013D0  0E80               	movlw	128
  2636  0013D2  0101               	movlb	1	; () banked
  2637  0013D4  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2638  0013D6  0E3F               	movlw	63
  2639  0013D8  D007               	goto	L1
  2640  0013DA                     l6961:
  2641                           
  2642                           ; BSR set to: 1
  2643  0013DA  0E00               	movlw	0
  2644  0013DC  0101               	movlb	1	; () banked
  2645  0013DE  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2646  0013E0  0E80               	movlw	128
  2647  0013E2  0101               	movlb	1	; () banked
  2648  0013E4  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2649  0013E6  0EBF               	movlw	191
  2650  0013E8                     L1:
  2651  0013E8  0101               	movlb	1	; () banked
  2652  0013EA  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2653                           
  2654                           ; BSR set to: 1
  2655                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2656                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2657                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2658                           
  2659                           ; BSR set to: 1
  2660  0013EC  0E00               	movlw	0
  2661  0013EE  0100               	movlb	0	; () banked
  2662  0013F0  6F77               	movwf	___ftdiv@f2& (0+255),b
  2663  0013F2  0E00               	movlw	0
  2664  0013F4  0100               	movlb	0	; () banked
  2665  0013F6  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2666  0013F8  0E41               	movlw	65
  2667  0013FA  0100               	movlb	0	; () banked
  2668  0013FC  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2669  0013FE  C102  F071         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2670  001402  C103  F072         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2671  001406  EC7D  F022         	call	___awtoft	;wreg free
  2672  00140A  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2673  00140E  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2674  001412  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2675  001416  EC66  F019         	call	___ftdiv	;wreg free
  2676  00141A  C074  F092         	movff	?___ftdiv,___ftadd@f2
  2677  00141E  C075  F093         	movff	?___ftdiv+1,___ftadd@f2+1
  2678  001422  C076  F094         	movff	?___ftdiv+2,___ftadd@f2+2
  2679  001426  0E00               	movlw	0
  2680  001428  0100               	movlb	0	; () banked
  2681  00142A  6F77               	movwf	___ftdiv@f2& (0+255),b
  2682  00142C  0E80               	movlw	128
  2683  00142E  0100               	movlb	0	; () banked
  2684  001430  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2685  001432  0E41               	movlw	65
  2686  001434  0100               	movlb	0	; () banked
  2687  001436  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2688  001438  C100  F071         	movff	util_getTemperature@bit_mem,___awtoft@c
  2689  00143C  C101  F072         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2690  001440  EC7D  F022         	call	___awtoft	;wreg free
  2691  001444  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2692  001448  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2693  00144C  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2694  001450  EC66  F019         	call	___ftdiv	;wreg free
  2695  001454  C074  F08F         	movff	?___ftdiv,___ftadd@f1
  2696  001458  C075  F090         	movff	?___ftdiv+1,___ftadd@f1+1
  2697  00145C  C076  F091         	movff	?___ftdiv+2,___ftadd@f1+2
  2698  001460  EC96  F014         	call	___ftadd	;wreg free
  2699  001464  C08F  F1A7         	movff	?___ftadd,_util_getTemperature$2957
  2700  001468  C090  F1A8         	movff	?___ftadd+1,_util_getTemperature$2957+1
  2701  00146C  C091  F1A9         	movff	?___ftadd+2,_util_getTemperature$2957+2
  2702                           
  2703                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2704                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2705                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2706  001470  0E00               	movlw	0
  2707  001472  0100               	movlb	0	; () banked
  2708  001474  6F77               	movwf	___ftdiv@f2& (0+255),b
  2709  001476  0E80               	movlw	128
  2710  001478  0100               	movlb	0	; () banked
  2711  00147A  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2712  00147C  0E40               	movlw	64
  2713  00147E  0100               	movlb	0	; () banked
  2714  001480  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2715  001482  C104  F071         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2716  001486  C105  F072         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2717  00148A  EC7D  F022         	call	___awtoft	;wreg free
  2718  00148E  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2719  001492  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2720  001496  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2721  00149A  EC66  F019         	call	___ftdiv	;wreg free
  2722  00149E  C074  F092         	movff	?___ftdiv,___ftadd@f2
  2723  0014A2  C075  F093         	movff	?___ftdiv+1,___ftadd@f2+1
  2724  0014A6  C076  F094         	movff	?___ftdiv+2,___ftadd@f2+2
  2725  0014AA  C1A7  F08F         	movff	_util_getTemperature$2957,___ftadd@f1
  2726  0014AE  C1A8  F090         	movff	_util_getTemperature$2957+1,___ftadd@f1+1
  2727  0014B2  C1A9  F091         	movff	_util_getTemperature$2957+2,___ftadd@f1+2
  2728  0014B6  EC96  F014         	call	___ftadd	;wreg free
  2729  0014BA  C08F  F1AA         	movff	?___ftadd,_util_getTemperature$2958
  2730  0014BE  C090  F1AB         	movff	?___ftadd+1,_util_getTemperature$2958+1
  2731  0014C2  C091  F1AC         	movff	?___ftadd+2,_util_getTemperature$2958+2
  2732                           
  2733                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2734                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2735                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2736  0014C6  0E00               	movlw	0
  2737  0014C8  0100               	movlb	0	; () banked
  2738  0014CA  6F77               	movwf	___ftdiv@f2& (0+255),b
  2739  0014CC  0E00               	movlw	0
  2740  0014CE  0100               	movlb	0	; () banked
  2741  0014D0  6F78               	movwf	(___ftdiv@f2+1)& (0+255),b
  2742  0014D2  0E40               	movlw	64
  2743  0014D4  0100               	movlb	0	; () banked
  2744  0014D6  6F79               	movwf	(___ftdiv@f2+2)& (0+255),b
  2745  0014D8  C106  F071         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2746  0014DC  C107  F072         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2747  0014E0  EC7D  F022         	call	___awtoft	;wreg free
  2748  0014E4  C071  F074         	movff	?___awtoft,___ftdiv@f1
  2749  0014E8  C072  F075         	movff	?___awtoft+1,___ftdiv@f1+1
  2750  0014EC  C073  F076         	movff	?___awtoft+2,___ftdiv@f1+2
  2751  0014F0  EC66  F019         	call	___ftdiv	;wreg free
  2752  0014F4  C074  F092         	movff	?___ftdiv,___ftadd@f2
  2753  0014F8  C075  F093         	movff	?___ftdiv+1,___ftadd@f2+1
  2754  0014FC  C076  F094         	movff	?___ftdiv+2,___ftadd@f2+2
  2755  001500  C1AA  F08F         	movff	_util_getTemperature$2958,___ftadd@f1
  2756  001504  C1AB  F090         	movff	_util_getTemperature$2958+1,___ftadd@f1+1
  2757  001508  C1AC  F091         	movff	_util_getTemperature$2958+2,___ftadd@f1+2
  2758  00150C  EC96  F014         	call	___ftadd	;wreg free
  2759  001510  C08F  F1AD         	movff	?___ftadd,_util_getTemperature$2959
  2760  001514  C090  F1AE         	movff	?___ftadd+1,_util_getTemperature$2959+1
  2761  001518  C091  F1AF         	movff	?___ftadd+2,_util_getTemperature$2959+2
  2762                           
  2763                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2764                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2765                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2766  00151C  C108  F071         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2767  001520  C109  F072         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2768  001524  EC7D  F022         	call	___awtoft	;wreg free
  2769  001528  C071  F092         	movff	?___awtoft,___ftadd@f2
  2770  00152C  C072  F093         	movff	?___awtoft+1,___ftadd@f2+1
  2771  001530  C073  F094         	movff	?___awtoft+2,___ftadd@f2+2
  2772  001534  C1AD  F08F         	movff	_util_getTemperature$2959,___ftadd@f1
  2773  001538  C1AE  F090         	movff	_util_getTemperature$2959+1,___ftadd@f1+1
  2774  00153C  C1AF  F091         	movff	_util_getTemperature$2959+2,___ftadd@f1+2
  2775  001540  EC96  F014         	call	___ftadd	;wreg free
  2776  001544  C08F  F1B0         	movff	?___ftadd,_util_getTemperature$2960
  2777  001548  C090  F1B1         	movff	?___ftadd+1,_util_getTemperature$2960+1
  2778  00154C  C091  F1B2         	movff	?___ftadd+2,_util_getTemperature$2960+2
  2779                           
  2780                           ;easat2_util_inputs.c: 260: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2781                           ;easat2_util_inputs.c: 261: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2782                           ;easat2_util_inputs.c: 262: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2783  001550  C1B0  F08F         	movff	_util_getTemperature$2960,___ftadd@f1
  2784  001554  C1B1  F090         	movff	_util_getTemperature$2960+1,___ftadd@f1+1
  2785  001558  C1B2  F091         	movff	_util_getTemperature$2960+2,___ftadd@f1+2
  2786  00155C  0E00               	movlw	0
  2787  00155E  0100               	movlb	0	; () banked
  2788  001560  6F7C               	movwf	___ftmul@f2& (0+255),b
  2789  001562  0E00               	movlw	0
  2790  001564  0100               	movlb	0	; () banked
  2791  001566  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2792  001568  0E40               	movlw	64
  2793  00156A  0100               	movlb	0	; () banked
  2794  00156C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2795  00156E  C10A  F071         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2796  001572  C10B  F072         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2797  001576  EC7D  F022         	call	___awtoft	;wreg free
  2798  00157A  C071  F079         	movff	?___awtoft,___ftmul@f1
  2799  00157E  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2800  001582  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2801  001586  EC1B  F018         	call	___ftmul	;wreg free
  2802  00158A  C079  F092         	movff	?___ftmul,___ftadd@f2
  2803  00158E  C07A  F093         	movff	?___ftmul+1,___ftadd@f2+1
  2804  001592  C07B  F094         	movff	?___ftmul+2,___ftadd@f2+2
  2805  001596  EC96  F014         	call	___ftadd	;wreg free
  2806  00159A  C08F  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2807  00159E  C090  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2808  0015A2  C091  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2809                           
  2810                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2811                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2812                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2813                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2814  0015A6  0E00               	movlw	0
  2815  0015A8  0100               	movlb	0	; () banked
  2816  0015AA  6F7C               	movwf	___ftmul@f2& (0+255),b
  2817  0015AC  0E00               	movlw	0
  2818  0015AE  0100               	movlb	0	; () banked
  2819  0015B0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2820  0015B2  0E41               	movlw	65
  2821  0015B4  0100               	movlb	0	; () banked
  2822  0015B6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2823  0015B8  C10E  F071         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2824  0015BC  C10F  F072         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2825  0015C0  EC7D  F022         	call	___awtoft	;wreg free
  2826  0015C4  C071  F079         	movff	?___awtoft,___ftmul@f1
  2827  0015C8  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2828  0015CC  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2829  0015D0  EC1B  F018         	call	___ftmul	;wreg free
  2830  0015D4  C079  F092         	movff	?___ftmul,___ftadd@f2
  2831  0015D8  C07A  F093         	movff	?___ftmul+1,___ftadd@f2+1
  2832  0015DC  C07B  F094         	movff	?___ftmul+2,___ftadd@f2+2
  2833  0015E0  0E00               	movlw	0
  2834  0015E2  0100               	movlb	0	; () banked
  2835  0015E4  6F7C               	movwf	___ftmul@f2& (0+255),b
  2836  0015E6  0E80               	movlw	128
  2837  0015E8  0100               	movlb	0	; () banked
  2838  0015EA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2839  0015EC  0E40               	movlw	64
  2840  0015EE  0100               	movlb	0	; () banked
  2841  0015F0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2842  0015F2  C10C  F071         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2843  0015F6  C10D  F072         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2844  0015FA  EC7D  F022         	call	___awtoft	;wreg free
  2845  0015FE  C071  F079         	movff	?___awtoft,___ftmul@f1
  2846  001602  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2847  001606  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2848  00160A  EC1B  F018         	call	___ftmul	;wreg free
  2849  00160E  C079  F08F         	movff	?___ftmul,___ftadd@f1
  2850  001612  C07A  F090         	movff	?___ftmul+1,___ftadd@f1+1
  2851  001616  C07B  F091         	movff	?___ftmul+2,___ftadd@f1+2
  2852  00161A  EC96  F014         	call	___ftadd	;wreg free
  2853  00161E  C08F  F1A7         	movff	?___ftadd,_util_getTemperature$2957
  2854  001622  C090  F1A8         	movff	?___ftadd+1,_util_getTemperature$2957+1
  2855  001626  C091  F1A9         	movff	?___ftadd+2,_util_getTemperature$2957+2
  2856                           
  2857                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2858                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2859                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2860                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2861  00162A  0E00               	movlw	0
  2862  00162C  0100               	movlb	0	; () banked
  2863  00162E  6F7C               	movwf	___ftmul@f2& (0+255),b
  2864  001630  0E80               	movlw	128
  2865  001632  0100               	movlb	0	; () banked
  2866  001634  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2867  001636  0E41               	movlw	65
  2868  001638  0100               	movlb	0	; () banked
  2869  00163A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2870  00163C  C110  F071         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2871  001640  C111  F072         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2872  001644  EC7D  F022         	call	___awtoft	;wreg free
  2873  001648  C071  F079         	movff	?___awtoft,___ftmul@f1
  2874  00164C  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2875  001650  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2876  001654  EC1B  F018         	call	___ftmul	;wreg free
  2877  001658  C079  F092         	movff	?___ftmul,___ftadd@f2
  2878  00165C  C07A  F093         	movff	?___ftmul+1,___ftadd@f2+1
  2879  001660  C07B  F094         	movff	?___ftmul+2,___ftadd@f2+2
  2880  001664  C1A7  F08F         	movff	_util_getTemperature$2957,___ftadd@f1
  2881  001668  C1A8  F090         	movff	_util_getTemperature$2957+1,___ftadd@f1+1
  2882  00166C  C1A9  F091         	movff	_util_getTemperature$2957+2,___ftadd@f1+2
  2883  001670  EC96  F014         	call	___ftadd	;wreg free
  2884  001674  C08F  F1AA         	movff	?___ftadd,_util_getTemperature$2958
  2885  001678  C090  F1AB         	movff	?___ftadd+1,_util_getTemperature$2958+1
  2886  00167C  C091  F1AC         	movff	?___ftadd+2,_util_getTemperature$2958+2
  2887                           
  2888                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2889                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2890                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2891                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2892  001680  0E00               	movlw	0
  2893  001682  0100               	movlb	0	; () banked
  2894  001684  6F7C               	movwf	___ftmul@f2& (0+255),b
  2895  001686  0E00               	movlw	0
  2896  001688  0100               	movlb	0	; () banked
  2897  00168A  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2898  00168C  0E42               	movlw	66
  2899  00168E  0100               	movlb	0	; () banked
  2900  001690  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2901  001692  C112  F071         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2902  001696  C113  F072         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2903  00169A  EC7D  F022         	call	___awtoft	;wreg free
  2904  00169E  C071  F079         	movff	?___awtoft,___ftmul@f1
  2905  0016A2  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2906  0016A6  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2907  0016AA  EC1B  F018         	call	___ftmul	;wreg free
  2908  0016AE  C079  F092         	movff	?___ftmul,___ftadd@f2
  2909  0016B2  C07A  F093         	movff	?___ftmul+1,___ftadd@f2+1
  2910  0016B6  C07B  F094         	movff	?___ftmul+2,___ftadd@f2+2
  2911  0016BA  C1AA  F08F         	movff	_util_getTemperature$2958,___ftadd@f1
  2912  0016BE  C1AB  F090         	movff	_util_getTemperature$2958+1,___ftadd@f1+1
  2913  0016C2  C1AC  F091         	movff	_util_getTemperature$2958+2,___ftadd@f1+2
  2914  0016C6  EC96  F014         	call	___ftadd	;wreg free
  2915  0016CA  C08F  F1AD         	movff	?___ftadd,_util_getTemperature$2959
  2916  0016CE  C090  F1AE         	movff	?___ftadd+1,_util_getTemperature$2959+1
  2917  0016D2  C091  F1AF         	movff	?___ftadd+2,_util_getTemperature$2959+2
  2918                           
  2919                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2920                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2921                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2922                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2923  0016D6  0E00               	movlw	0
  2924  0016D8  0100               	movlb	0	; () banked
  2925  0016DA  6F7C               	movwf	___ftmul@f2& (0+255),b
  2926  0016DC  0E80               	movlw	128
  2927  0016DE  0100               	movlb	0	; () banked
  2928  0016E0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  2929  0016E2  0E42               	movlw	66
  2930  0016E4  0100               	movlb	0	; () banked
  2931  0016E6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  2932  0016E8  C114  F071         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2933  0016EC  C115  F072         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2934  0016F0  EC7D  F022         	call	___awtoft	;wreg free
  2935  0016F4  C071  F079         	movff	?___awtoft,___ftmul@f1
  2936  0016F8  C072  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  2937  0016FC  C073  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  2938  001700  EC1B  F018         	call	___ftmul	;wreg free
  2939  001704  C079  F092         	movff	?___ftmul,___ftadd@f2
  2940  001708  C07A  F093         	movff	?___ftmul+1,___ftadd@f2+1
  2941  00170C  C07B  F094         	movff	?___ftmul+2,___ftadd@f2+2
  2942  001710  C1AD  F08F         	movff	_util_getTemperature$2959,___ftadd@f1
  2943  001714  C1AE  F090         	movff	_util_getTemperature$2959+1,___ftadd@f1+1
  2944  001718  C1AF  F091         	movff	_util_getTemperature$2959+2,___ftadd@f1+2
  2945  00171C  EC96  F014         	call	___ftadd	;wreg free
  2946  001720  C08F  F1B0         	movff	?___ftadd,_util_getTemperature$2960
  2947  001724  C090  F1B1         	movff	?___ftadd+1,_util_getTemperature$2960+1
  2948  001728  C091  F1B2         	movff	?___ftadd+2,_util_getTemperature$2960+2
  2949                           
  2950                           ;easat2_util_inputs.c: 263: temperature = temperature +
  2951                           ;easat2_util_inputs.c: 264: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2952                           ;easat2_util_inputs.c: 265: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2953                           ;easat2_util_inputs.c: 266: (float)bit_mem[10]*64.0;
  2954  00172C  C1B0  F08F         	movff	_util_getTemperature$2960,___ftadd@f1
  2955  001730  C1B1  F090         	movff	_util_getTemperature$2960+1,___ftadd@f1+1
  2956  001734  C1B2  F091         	movff	_util_getTemperature$2960+2,___ftadd@f1+2
  2957  001738  C1C9  F092         	movff	util_getTemperature@temperature,___ftadd@f2
  2958  00173C  C1CA  F093         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2959  001740  C1CB  F094         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2960  001744  EC96  F014         	call	___ftadd	;wreg free
  2961  001748  C08F  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2962  00174C  C090  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2963  001750  C091  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2964                           
  2965                           ;easat2_util_inputs.c: 268: temperature = temperature * sign;
  2966  001754  C1C9  F079         	movff	util_getTemperature@temperature,___ftmul@f1
  2967  001758  C1CA  F07A         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2968  00175C  C1CB  F07B         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2969  001760  C1A4  F07C         	movff	util_getTemperature@sign,___ftmul@f2
  2970  001764  C1A5  F07D         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2971  001768  C1A6  F07E         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2972  00176C  EC1B  F018         	call	___ftmul	;wreg free
  2973  001770  C079  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2974  001774  C07A  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2975  001778  C07B  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2976                           
  2977                           ;easat2_util_inputs.c: 270: return temperature;
  2978  00177C  C1C9  F09B         	movff	util_getTemperature@temperature,?_util_getTemperature
  2979  001780  C1CA  F09C         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2980  001784  C1CB  F09D         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2981  001788  0012               	return	
  2982  00178A                     __end_of_util_getTemperature:
  2983                           	opt stack 0
  2984                           tblptru	equ	0xFF8
  2985                           tblptrh	equ	0xFF7
  2986                           tblptrl	equ	0xFF6
  2987                           tablat	equ	0xFF5
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _util_waits_delay_secs *****************
  3001 ;; Defined at:
  3002 ;;		line 31 in file "easat2_util_waits.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  secs            2   17[BANK0 ] int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  j               2   35[COMRAM] int 
  3007 ;;  i               2   33[COMRAM] int 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3017 ;;      Params:         0       2       0       0       0       0       0
  3018 ;;      Locals:         4       0       0       0       0       0       0
  3019 ;;      Temps:          1       0       0       0       0       0       0
  3020 ;;      Totals:         5       2       0       0       0       0       0
  3021 ;;Total ram usage:        7 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    3
  3024 ;; This function calls:
  3025 ;;		_util_waits_delay_ms
  3026 ;; This function is called by:
  3027 ;;		_util_getTemperature
  3028 ;;		_util_waits_delay_mins
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text5
  3033  004334                     __ptext5:
  3034                           	opt stack 0
  3035  004334                     _util_waits_delay_secs:
  3036                           	opt stack 25
  3037                           
  3038                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  3039                           
  3040                           ;incstack = 0
  3041  004334  0E00               	movlw	0
  3042  004336  6E23               	movwf	util_waits_delay_secs@i+1,c
  3043  004338  0E00               	movlw	0
  3044  00433A  6E22               	movwf	util_waits_delay_secs@i,c
  3045  00433C  D017               	goto	l6417
  3046  00433E                     l6403:
  3047                           
  3048                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  3049  00433E  0E00               	movlw	0
  3050  004340  6E25               	movwf	util_waits_delay_secs@j+1,c
  3051  004342  0E00               	movlw	0
  3052  004344  6E24               	movwf	util_waits_delay_secs@j,c
  3053  004346                     l6405:
  3054  004346  BE25               	btfsc	util_waits_delay_secs@j+1,7,c
  3055  004348  D006               	goto	l6409
  3056  00434A  5025               	movf	util_waits_delay_secs@j+1,w,c
  3057  00434C  E10D               	bnz	l6415
  3058  00434E  0E0A               	movlw	10
  3059  004350  5C24               	subwf	util_waits_delay_secs@j,w,c
  3060  004352  B0D8               	btfsc	status,0,c
  3061  004354  D009               	goto	l6415
  3062  004356                     l6409:
  3063                           
  3064                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  3065  004356  0E00               	movlw	0
  3066  004358  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  3067  00435A  0E64               	movlw	100
  3068  00435C  6E1C               	movwf	util_waits_delay_ms@ms,c
  3069  00435E  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  3070  004362  4A24               	infsnz	util_waits_delay_secs@j,f,c
  3071  004364  2A25               	incf	util_waits_delay_secs@j+1,f,c
  3072  004366  D7EF               	goto	l6405
  3073  004368                     l6415:
  3074  004368  4A22               	infsnz	util_waits_delay_secs@i,f,c
  3075  00436A  2A23               	incf	util_waits_delay_secs@i+1,f,c
  3076  00436C                     l6417:
  3077  00436C  0100               	movlb	0	; () banked
  3078  00436E  5171               	movf	util_waits_delay_secs@secs& (0+255),w,b
  3079  004370  5C22               	subwf	util_waits_delay_secs@i,w,c
  3080  004372  5023               	movf	util_waits_delay_secs@i+1,w,c
  3081  004374  0A80               	xorlw	128
  3082  004376  6E21               	movwf	??_util_waits_delay_secs& (0+255),c
  3083  004378  0100               	movlb	0	; () banked
  3084  00437A  5172               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  3085  00437C  0A80               	xorlw	128
  3086  00437E  5821               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  3087  004380  B0D8               	btfsc	status,0,c
  3088  004382  0012               	return	
  3089  004384  D7DC               	goto	l6403
  3090  004386                     __end_of_util_waits_delay_secs:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           intcon	equ	0xFF2
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           postinc2	equ	0xFDE
  3103                           postdec2	equ	0xFDD
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _util_onewire_write_byte *****************
  3109 ;; Defined at:
  3110 ;;		line 62 in file "easat2_util_onewire.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  value           2   29[COMRAM] int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  bit7            2   31[BANK0 ] int 
  3115 ;;  bit6            2   29[BANK0 ] int 
  3116 ;;  bit5            2   27[BANK0 ] int 
  3117 ;;  bit4            2   25[BANK0 ] int 
  3118 ;;  bit3            2   23[BANK0 ] int 
  3119 ;;  bit2            2   21[BANK0 ] int 
  3120 ;;  bit1            2   19[BANK0 ] int 
  3121 ;;  bit0            2   17[BANK0 ] int 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3131 ;;      Params:         2       0       0       0       0       0       0
  3132 ;;      Locals:         0      16       0       0       0       0       0
  3133 ;;      Temps:          3       0       0       0       0       0       0
  3134 ;;      Totals:         5      16       0       0       0       0       0
  3135 ;;Total ram usage:       21 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    3
  3138 ;; This function calls:
  3139 ;;		_util_onewire_write_bit
  3140 ;; This function is called by:
  3141 ;;		_util_getTemperature
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text6
  3146  002EB4                     __ptext6:
  3147                           	opt stack 0
  3148  002EB4                     _util_onewire_write_byte:
  3149                           	opt stack 25
  3150                           
  3151                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3152                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;incstack = 0
  3156  002EB4  0E01               	movlw	1
  3157  002EB6  141E               	andwf	util_onewire_write_byte@value,w,c
  3158  002EB8  0100               	movlb	0	; () banked
  3159  002EBA  6F71               	movwf	util_onewire_write_byte@bit0& (0+255),b
  3160  002EBC  0100               	movlb	0	; () banked
  3161  002EBE  6B72               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  3162                           
  3163                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  3164  002EC0  341F               	rlcf	util_onewire_write_byte@value+1,w,c
  3165  002EC2  301F               	rrcf	util_onewire_write_byte@value+1,w,c
  3166  002EC4  6E21               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  3167  002EC6  301E               	rrcf	util_onewire_write_byte@value,w,c
  3168  002EC8  6E20               	movwf	??_util_onewire_write_byte& (0+255),c
  3169  002ECA  0E01               	movlw	1
  3170  002ECC  1420               	andwf	??_util_onewire_write_byte,w,c
  3171  002ECE  0100               	movlb	0	; () banked
  3172  002ED0  6F73               	movwf	util_onewire_write_byte@bit1& (0+255),b
  3173  002ED2  0100               	movlb	0	; () banked
  3174  002ED4  6B74               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  3175                           
  3176                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  3177  002ED6  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3178  002EDA  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3179  002EDE  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3180  002EE0  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3181  002EE2  3220               	rrcf	??_util_onewire_write_byte,f,c
  3182  002EE4  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3183  002EE6  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3184  002EE8  3220               	rrcf	??_util_onewire_write_byte,f,c
  3185  002EEA  0E01               	movlw	1
  3186  002EEC  1420               	andwf	??_util_onewire_write_byte,w,c
  3187  002EEE  0100               	movlb	0	; () banked
  3188  002EF0  6F75               	movwf	util_onewire_write_byte@bit2& (0+255),b
  3189  002EF2  0100               	movlb	0	; () banked
  3190  002EF4  6B76               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  3191                           
  3192                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  3193  002EF6  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3194  002EFA  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3195  002EFE  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3196  002F00  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3197  002F02  3220               	rrcf	??_util_onewire_write_byte,f,c
  3198  002F04  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3199  002F06  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3200  002F08  3220               	rrcf	??_util_onewire_write_byte,f,c
  3201  002F0A  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3202  002F0C  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3203  002F0E  3220               	rrcf	??_util_onewire_write_byte,f,c
  3204  002F10  0E01               	movlw	1
  3205  002F12  1420               	andwf	??_util_onewire_write_byte,w,c
  3206  002F14  0100               	movlb	0	; () banked
  3207  002F16  6F77               	movwf	util_onewire_write_byte@bit3& (0+255),b
  3208  002F18  0100               	movlb	0	; () banked
  3209  002F1A  6B78               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  3210                           
  3211                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  3212  002F1C  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3213  002F20  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3214  002F24  0E04               	movlw	4
  3215  002F26  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3216  002F28                     u7835:
  3217  002F28  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3218  002F2A  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3219  002F2C  3220               	rrcf	??_util_onewire_write_byte,f,c
  3220  002F2E  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3221  002F30  D7FB               	goto	u7835
  3222  002F32  0E01               	movlw	1
  3223  002F34  1420               	andwf	??_util_onewire_write_byte,w,c
  3224  002F36  0100               	movlb	0	; () banked
  3225  002F38  6F79               	movwf	util_onewire_write_byte@bit4& (0+255),b
  3226  002F3A  0100               	movlb	0	; () banked
  3227  002F3C  6B7A               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  3228                           
  3229                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  3230  002F3E  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3231  002F42  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3232  002F46  0E05               	movlw	5
  3233  002F48  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3234  002F4A                     u7845:
  3235  002F4A  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3236  002F4C  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3237  002F4E  3220               	rrcf	??_util_onewire_write_byte,f,c
  3238  002F50  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3239  002F52  D7FB               	goto	u7845
  3240  002F54  0E01               	movlw	1
  3241  002F56  1420               	andwf	??_util_onewire_write_byte,w,c
  3242  002F58  0100               	movlb	0	; () banked
  3243  002F5A  6F7B               	movwf	util_onewire_write_byte@bit5& (0+255),b
  3244  002F5C  0100               	movlb	0	; () banked
  3245  002F5E  6B7C               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  3246                           
  3247                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  3248  002F60  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3249  002F64  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3250  002F68  0E06               	movlw	6
  3251  002F6A  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3252  002F6C                     u7855:
  3253  002F6C  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3254  002F6E  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3255  002F70  3220               	rrcf	??_util_onewire_write_byte,f,c
  3256  002F72  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3257  002F74  D7FB               	goto	u7855
  3258  002F76  0E01               	movlw	1
  3259  002F78  1420               	andwf	??_util_onewire_write_byte,w,c
  3260  002F7A  0100               	movlb	0	; () banked
  3261  002F7C  6F7D               	movwf	util_onewire_write_byte@bit6& (0+255),b
  3262  002F7E  0100               	movlb	0	; () banked
  3263  002F80  6B7E               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  3264                           
  3265                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  3266  002F82  C01E  F020         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  3267  002F86  C01F  F021         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  3268  002F8A  0E07               	movlw	7
  3269  002F8C  6E22               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  3270  002F8E                     u7865:
  3271  002F8E  3421               	rlcf	??_util_onewire_write_byte+1,w,c
  3272  002F90  3221               	rrcf	??_util_onewire_write_byte+1,f,c
  3273  002F92  3220               	rrcf	??_util_onewire_write_byte,f,c
  3274  002F94  2E22               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  3275  002F96  D7FB               	goto	u7865
  3276  002F98  0E01               	movlw	1
  3277  002F9A  1420               	andwf	??_util_onewire_write_byte,w,c
  3278  002F9C  0100               	movlb	0	; () banked
  3279  002F9E  6F7F               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3280  002FA0  0100               	movlb	0	; () banked
  3281  002FA2  6B80               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3285  002FA4  C071  F01C         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3286  002FA8  C072  F01D         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3287  002FAC  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3288                           
  3289                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3290  002FB0  D000               	nop2		;2 cycle nop
  3291  002FB2  D000               	nop2		;2 cycle nop
  3292  002FB4  F000               	nop	
  3293                           
  3294                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3295  002FB6  C073  F01C         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3296  002FBA  C074  F01D         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3297  002FBE  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3298                           
  3299                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3300  002FC2  D000               	nop2		;2 cycle nop
  3301  002FC4  D000               	nop2		;2 cycle nop
  3302  002FC6  F000               	nop	
  3303                           
  3304                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3305  002FC8  C075  F01C         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3306  002FCC  C076  F01D         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3307  002FD0  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3308                           
  3309                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3310  002FD4  D000               	nop2		;2 cycle nop
  3311  002FD6  D000               	nop2		;2 cycle nop
  3312  002FD8  F000               	nop	
  3313                           
  3314                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3315  002FDA  C077  F01C         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3316  002FDE  C078  F01D         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3317  002FE2  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3318                           
  3319                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3320  002FE6  D000               	nop2		;2 cycle nop
  3321  002FE8  D000               	nop2		;2 cycle nop
  3322  002FEA  F000               	nop	
  3323                           
  3324                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3325  002FEC  C079  F01C         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3326  002FF0  C07A  F01D         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3327  002FF4  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3328                           
  3329                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3330  002FF8  D000               	nop2		;2 cycle nop
  3331  002FFA  D000               	nop2		;2 cycle nop
  3332  002FFC  F000               	nop	
  3333                           
  3334                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3335  002FFE  C07B  F01C         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3336  003002  C07C  F01D         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3337  003006  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3338                           
  3339                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3340  00300A  D000               	nop2		;2 cycle nop
  3341  00300C  D000               	nop2		;2 cycle nop
  3342  00300E  F000               	nop	
  3343                           
  3344                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3345  003010  C07D  F01C         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3346  003014  C07E  F01D         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3347  003018  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3348                           
  3349                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3350  00301C  D000               	nop2		;2 cycle nop
  3351  00301E  D000               	nop2		;2 cycle nop
  3352  003020  F000               	nop	
  3353                           
  3354                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3355  003022  C07F  F01C         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3356  003026  C080  F01D         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3357  00302A  EC38  F023         	call	_util_onewire_write_bit	;wreg free
  3358                           
  3359                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3360  00302E  D000               	nop2		;2 cycle nop
  3361  003030  D000               	nop2		;2 cycle nop
  3362  003032  F000               	nop	
  3363  003034  0012               	return		;funcret
  3364  003036                     __end_of_util_onewire_write_byte:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           intcon	equ	0xFF2
  3371                           postinc0	equ	0xFEE
  3372                           wreg	equ	0xFE8
  3373                           postdec1	equ	0xFE5
  3374                           fsr1h	equ	0xFE2
  3375                           fsr1l	equ	0xFE1
  3376                           postinc2	equ	0xFDE
  3377                           postdec2	equ	0xFDD
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _util_onewire_write_bit *****************
  3383 ;; Defined at:
  3384 ;;		line 121 in file "easat2_util_onewire.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  bit_in          2   27[COMRAM] int 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3398 ;;      Params:         2       0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0
  3401 ;;      Totals:         2       0       0       0       0       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    2
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_util_onewire_write_byte
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text7
  3413  004670                     __ptext7:
  3414                           	opt stack 0
  3415  004670                     _util_onewire_write_bit:
  3416                           	opt stack 25
  3417                           
  3418                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3419                           
  3420                           ;incstack = 0
  3421  004670  9692               	bcf	3986,3,c	;volatile
  3422                           
  3423                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3424  004672  501C               	movf	util_onewire_write_bit@bit_in,w,c
  3425  004674  101D               	iorwf	util_onewire_write_bit@bit_in+1,w,c
  3426  004676  B4D8               	btfsc	status,2,c
  3427  004678  D009               	goto	l216
  3428                           
  3429                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3430  00467A  9680               	bcf	3968,3,c	;volatile
  3431                           
  3432                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3433  00467C  D000               	nop2		;2 cycle nop
  3434  00467E  D000               	nop2		;2 cycle nop
  3435  004680  F000               	nop	
  3436                           
  3437                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3438  004682  8680               	bsf	3968,3,c	;volatile
  3439                           
  3440                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3441  004684  0E09               	movlw	9
  3442  004686                     u8277:
  3443  004686  2EE8               	decfsz	wreg,f,c
  3444  004688  D7FE               	bra	u8277
  3445                           
  3446                           ;easat2_util_onewire.c: 141: } else {
  3447  00468A  0012               	return	
  3448  00468C                     l216:
  3449                           
  3450                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3451  00468C  9680               	bcf	3968,3,c	;volatile
  3452                           
  3453                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3454  00468E  0E0B               	movlw	11
  3455  004690                     u8287:
  3456  004690  2EE8               	decfsz	wreg,f,c
  3457  004692  D7FE               	bra	u8287
  3458  004694  D000               	nop2	
  3459                           
  3460                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3461  004696  8680               	bsf	3968,3,c	;volatile
  3462                           
  3463                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3464  004698  D000               	nop2		;2 cycle nop
  3465  00469A  D000               	nop2		;2 cycle nop
  3466  00469C  F000               	nop	
  3467  00469E  0012               	return	
  3468  0046A0                     __end_of_util_onewire_write_bit:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           intcon	equ	0xFF2
  3475                           postinc0	equ	0xFEE
  3476                           wreg	equ	0xFE8
  3477                           postdec1	equ	0xFE5
  3478                           fsr1h	equ	0xFE2
  3479                           fsr1l	equ	0xFE1
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _util_onewire_reset *****************
  3487 ;; Defined at:
  3488 ;;		line 18 in file "easat2_util_onewire.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  presence        2   30[COMRAM] int 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  2   27[COMRAM] int 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3502 ;;      Params:         2       0       0       0       0       0       0
  3503 ;;      Locals:         2       0       0       0       0       0       0
  3504 ;;      Temps:          1       0       0       0       0       0       0
  3505 ;;      Totals:         5       0       0       0       0       0       0
  3506 ;;Total ram usage:        5 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    2
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_util_getTemperature
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text8
  3517  004476                     __ptext8:
  3518                           	opt stack 0
  3519  004476                     _util_onewire_reset:
  3520                           	opt stack 26
  3521                           
  3522                           ;easat2_util_onewire.c: 20: int presence = 1;
  3523                           
  3524                           ;incstack = 0
  3525  004476  0E00               	movlw	0
  3526  004478  6E20               	movwf	util_onewire_reset@presence+1,c
  3527  00447A  0E01               	movlw	1
  3528  00447C  6E1F               	movwf	util_onewire_reset@presence,c
  3529                           
  3530                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3531  00447E  9692               	bcf	3986,3,c	;volatile
  3532                           
  3533                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3534  004480  9680               	bcf	3968,3,c	;volatile
  3535                           
  3536                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3537  004482  0E5D               	movlw	93
  3538  004484                     u8297:
  3539  004484  2EE8               	decfsz	wreg,f,c
  3540  004486  D7FE               	bra	u8297
  3541  004488  F000               	nop	
  3542                           
  3543                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3544  00448A  8680               	bsf	3968,3,c	;volatile
  3545                           
  3546                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3547  00448C  0E0B               	movlw	11
  3548  00448E                     u8307:
  3549  00448E  2EE8               	decfsz	wreg,f,c
  3550  004490  D7FE               	bra	u8307
  3551  004492  D000               	nop2	
  3552                           
  3553                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3554  004494  8692               	bsf	3986,3,c	;volatile
  3555                           
  3556                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3557  004496  A680               	btfss	3968,3,c	;volatile
  3558  004498  D003               	goto	u7820
  3559  00449A  6A1E               	clrf	??_util_onewire_reset& (0+255),c
  3560  00449C  2A1E               	incf	??_util_onewire_reset& (0+255),f,c
  3561  00449E  D001               	goto	u7828
  3562  0044A0                     u7820:
  3563  0044A0  6A1E               	clrf	??_util_onewire_reset& (0+255),c
  3564  0044A2                     u7828:
  3565  0044A2  501E               	movf	??_util_onewire_reset,w,c
  3566  0044A4  6E1F               	movwf	util_onewire_reset@presence,c
  3567  0044A6  6A20               	clrf	util_onewire_reset@presence+1,c
  3568                           
  3569                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3570  0044A8  0E46               	movlw	70
  3571  0044AA                     u8317:
  3572  0044AA  2EE8               	decfsz	wreg,f,c
  3573  0044AC  D7FE               	bra	u8317
  3574                           
  3575                           ;easat2_util_onewire.c: 56: return presence;
  3576  0044AE  C01F  F01C         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3577  0044B2  C020  F01D         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3578  0044B6  0012               	return	
  3579  0044B8                     __end_of_util_onewire_reset:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           intcon	equ	0xFF2
  3586                           postinc0	equ	0xFEE
  3587                           wreg	equ	0xFE8
  3588                           postdec1	equ	0xFE5
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           postinc2	equ	0xFDE
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _util_onewire_read_byte *****************
  3598 ;; Defined at:
  3599 ;;		line 96 in file "easat2_util_onewire.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  value           2   49[BANK0 ] int 
  3604 ;;  bit7            2   47[BANK0 ] int 
  3605 ;;  bit6            2   45[BANK0 ] int 
  3606 ;;  bit5            2   43[BANK0 ] int 
  3607 ;;  bit4            2   41[BANK0 ] int 
  3608 ;;  bit3            2   39[BANK0 ] int 
  3609 ;;  bit2            2   37[BANK0 ] int 
  3610 ;;  bit1            2   35[BANK0 ] int 
  3611 ;;  bit0            2   33[BANK0 ] int 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2   17[BANK0 ] int 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         0       2       0       0       0       0       0
  3622 ;;      Locals:         0      18       0       0       0       0       0
  3623 ;;      Temps:          0      14       0       0       0       0       0
  3624 ;;      Totals:         0      34       0       0       0       0       0
  3625 ;;Total ram usage:       34 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    3
  3628 ;; This function calls:
  3629 ;;		_util_onewire_read_bit
  3630 ;; This function is called by:
  3631 ;;		_util_getTemperature
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text9
  3636  002B94                     __ptext9:
  3637                           	opt stack 0
  3638  002B94                     _util_onewire_read_byte:
  3639                           	opt stack 25
  3640                           
  3641                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3642                           ;easat2_util_onewire.c: 99: int value = 0;
  3643                           
  3644                           ;incstack = 0
  3645  002B94  0E00               	movlw	0
  3646  002B96  0100               	movlb	0	; () banked
  3647  002B98  6F92               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3648  002B9A  0E00               	movlw	0
  3649  002B9C  6F91               	movwf	util_onewire_read_byte@value& (0+255),b
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3653  002B9E  8692               	bsf	3986,3,c	;volatile
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3657  002BA0  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3658  002BA4  C01C  F081         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3659  002BA8  C01D  F082         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3660                           
  3661                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3662  002BAC  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3663  002BB0  C01C  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3664  002BB4  C01D  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3665                           
  3666                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3667  002BB8  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3668  002BBC  C01C  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3669  002BC0  C01D  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3670                           
  3671                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3672  002BC4  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3673  002BC8  C01C  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3674  002BCC  C01D  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3675                           
  3676                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3677  002BD0  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3678  002BD4  C01C  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3679  002BD8  C01D  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3680                           
  3681                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3682  002BDC  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3683  002BE0  C01C  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3684  002BE4  C01D  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3685                           
  3686                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3687  002BE8  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3688  002BEC  C01C  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3689  002BF0  C01D  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3690                           
  3691                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3692  002BF4  EC06  F023         	call	_util_onewire_read_bit	;wreg free
  3693  002BF8  C01C  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3694  002BFC  C01D  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3695                           
  3696                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3697                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3698  002C00  C08F  F073         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3699  002C04  C090  F074         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3700  002C08  0E07               	movlw	7
  3701  002C0A                     u7875:
  3702  002C0A  90D8               	bcf	status,0,c
  3703  002C0C  0100               	movlb	0	; () banked
  3704  002C0E  3773               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3705  002C10  3774               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3706  002C12  2EE8               	decfsz	wreg,f,c
  3707  002C14  D7FA               	goto	u7875
  3708  002C16  C08D  F075         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3709  002C1A  C08E  F076         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3710  002C1E  0E06               	movlw	6
  3711  002C20                     u7885:
  3712  002C20  90D8               	bcf	status,0,c
  3713  002C22  0100               	movlb	0	; () banked
  3714  002C24  3775               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3715  002C26  3776               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3716  002C28  2EE8               	decfsz	wreg,f,c
  3717  002C2A  D7FA               	goto	u7885
  3718  002C2C  C08B  F077         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3719  002C30  C08C  F078         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3720  002C34  0E05               	movlw	5
  3721  002C36                     u7895:
  3722  002C36  90D8               	bcf	status,0,c
  3723  002C38  0100               	movlb	0	; () banked
  3724  002C3A  3777               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3725  002C3C  3778               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3726  002C3E  2EE8               	decfsz	wreg,f,c
  3727  002C40  D7FA               	goto	u7895
  3728  002C42  C089  F079         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3729  002C46  C08A  F07A         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3730  002C4A  0100               	movlb	0	; () banked
  3731  002C4C  3B79               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3732  002C4E  3B7A               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3733  002C50  0EF0               	movlw	240
  3734  002C52  177A               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3735  002C54  5179               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3736  002C56  0B0F               	andlw	15
  3737  002C58  137A               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3738  002C5A  0EF0               	movlw	240
  3739  002C5C  1779               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3740  002C5E  C087  F07B         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3741  002C62  C088  F07C         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3742  002C66  0100               	movlb	0	; () banked
  3743  002C68  90D8               	bcf	status,0,c
  3744  002C6A  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3745  002C6C  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3746  002C6E  0100               	movlb	0	; () banked
  3747  002C70  90D8               	bcf	status,0,c
  3748  002C72  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3749  002C74  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3750  002C76  0100               	movlb	0	; () banked
  3751  002C78  90D8               	bcf	status,0,c
  3752  002C7A  377B               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3753  002C7C  377C               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3754  002C7E  C085  F07D         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3755  002C82  C086  F07E         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3756  002C86  0100               	movlb	0	; () banked
  3757  002C88  90D8               	bcf	status,0,c
  3758  002C8A  377D               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3759  002C8C  377E               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3760  002C8E  0100               	movlb	0	; () banked
  3761  002C90  90D8               	bcf	status,0,c
  3762  002C92  377D               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3763  002C94  377E               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3764  002C96  C083  F07F         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3765  002C9A  C084  F080         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3766  002C9E  90D8               	bcf	status,0,c
  3767  002CA0  0100               	movlb	0	; () banked
  3768  002CA2  377F               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3769  002CA4  3780               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3770  002CA6  0100               	movlb	0	; () banked
  3771  002CA8  517D               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3772  002CAA  0100               	movlb	0	; () banked
  3773  002CAC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3774  002CAE  0100               	movlb	0	; () banked
  3775  002CB0  517E               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3776  002CB2  0100               	movlb	0	; () banked
  3777  002CB4  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3778  002CB6  0100               	movlb	0	; () banked
  3779  002CB8  517B               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3780  002CBA  0100               	movlb	0	; () banked
  3781  002CBC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3782  002CBE  0100               	movlb	0	; () banked
  3783  002CC0  517C               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3784  002CC2  0100               	movlb	0	; () banked
  3785  002CC4  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3786  002CC6  0100               	movlb	0	; () banked
  3787  002CC8  5179               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3788  002CCA  0100               	movlb	0	; () banked
  3789  002CCC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3790  002CCE  0100               	movlb	0	; () banked
  3791  002CD0  517A               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3792  002CD2  0100               	movlb	0	; () banked
  3793  002CD4  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3794  002CD6  0100               	movlb	0	; () banked
  3795  002CD8  5177               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3796  002CDA  0100               	movlb	0	; () banked
  3797  002CDC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3798  002CDE  0100               	movlb	0	; () banked
  3799  002CE0  5178               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3800  002CE2  0100               	movlb	0	; () banked
  3801  002CE4  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3802  002CE6  0100               	movlb	0	; () banked
  3803  002CE8  5175               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3804  002CEA  0100               	movlb	0	; () banked
  3805  002CEC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3806  002CEE  0100               	movlb	0	; () banked
  3807  002CF0  5176               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3808  002CF2  0100               	movlb	0	; () banked
  3809  002CF4  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3810  002CF6  0100               	movlb	0	; () banked
  3811  002CF8  5173               	movf	??_util_onewire_read_byte& (0+255),w,b
  3812  002CFA  0100               	movlb	0	; () banked
  3813  002CFC  277F               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3814  002CFE  0100               	movlb	0	; () banked
  3815  002D00  5174               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3816  002D02  0100               	movlb	0	; () banked
  3817  002D04  2380               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3818  002D06  0100               	movlb	0	; () banked
  3819  002D08  5181               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3820  002D0A  0100               	movlb	0	; () banked
  3821  002D0C  257F               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3822  002D0E  0100               	movlb	0	; () banked
  3823  002D10  6F91               	movwf	util_onewire_read_byte@value& (0+255),b
  3824  002D12  0100               	movlb	0	; () banked
  3825  002D14  5182               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3826  002D16  0100               	movlb	0	; () banked
  3827  002D18  2180               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3828  002D1A  0100               	movlb	0	; () banked
  3829  002D1C  6F92               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;easat2_util_onewire.c: 116: return value;
  3833  002D1E  C091  F071         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3834  002D22  C092  F072         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3835  002D26  0012               	return	
  3836  002D28                     __end_of_util_onewire_read_byte:
  3837                           	opt stack 0
  3838                           tblptru	equ	0xFF8
  3839                           tblptrh	equ	0xFF7
  3840                           tblptrl	equ	0xFF6
  3841                           tablat	equ	0xFF5
  3842                           intcon	equ	0xFF2
  3843                           postinc0	equ	0xFEE
  3844                           wreg	equ	0xFE8
  3845                           postdec1	equ	0xFE5
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           postinc2	equ	0xFDE
  3849                           postdec2	equ	0xFDD
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function _util_onewire_read_bit *****************
  3855 ;; Defined at:
  3856 ;;		line 162 in file "easat2_util_onewire.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  value           2   30[COMRAM] int 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2   27[COMRAM] int 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3870 ;;      Params:         2       0       0       0       0       0       0
  3871 ;;      Locals:         2       0       0       0       0       0       0
  3872 ;;      Temps:          1       0       0       0       0       0       0
  3873 ;;      Totals:         5       0       0       0       0       0       0
  3874 ;;Total ram usage:        5 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    2
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_util_onewire_read_byte
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text10
  3885  00460C                     __ptext10:
  3886                           	opt stack 0
  3887  00460C                     _util_onewire_read_bit:
  3888                           	opt stack 25
  3889                           
  3890                           ;easat2_util_onewire.c: 164: int value = 0;
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;incstack = 0
  3894  00460C  0E00               	movlw	0
  3895  00460E  6E20               	movwf	util_onewire_read_bit@value+1,c
  3896  004610  0E00               	movlw	0
  3897  004612  6E1F               	movwf	util_onewire_read_bit@value,c
  3898                           
  3899                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3900  004614  9692               	bcf	3986,3,c	;volatile
  3901                           
  3902                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3903  004616  9680               	bcf	3968,3,c	;volatile
  3904                           
  3905                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3906                           
  3907                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3908  004618  8680               	bsf	3968,3,c	;volatile
  3909                           
  3910                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3911  00461A  D000               	nop2		;2 cycle nop
  3912                           
  3913                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3914  00461C  A680               	btfss	3968,3,c	;volatile
  3915  00461E  D003               	goto	u7710
  3916  004620  6A1E               	clrf	??_util_onewire_read_bit& (0+255),c
  3917  004622  2A1E               	incf	??_util_onewire_read_bit& (0+255),f,c
  3918  004624  D001               	goto	u7718
  3919  004626                     u7710:
  3920  004626  6A1E               	clrf	??_util_onewire_read_bit& (0+255),c
  3921  004628                     u7718:
  3922  004628  501E               	movf	??_util_onewire_read_bit,w,c
  3923  00462A  6E1F               	movwf	util_onewire_read_bit@value,c
  3924  00462C  6A20               	clrf	util_onewire_read_bit@value+1,c
  3925                           
  3926                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3927  00462E  0E0A               	movlw	10
  3928  004630                     u8327:
  3929  004630  2EE8               	decfsz	wreg,f,c
  3930  004632  D7FE               	bra	u8327
  3931                           
  3932                           ;easat2_util_onewire.c: 187: return value;
  3933  004634  C01F  F01C         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3934  004638  C020  F01D         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3935  00463C  0012               	return	
  3936  00463E                     __end_of_util_onewire_read_bit:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           intcon	equ	0xFF2
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           postdec1	equ	0xFE5
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           postinc2	equ	0xFDE
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function ___ftdiv *****************
  3955 ;; Defined at:
  3956 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  f1              3   20[BANK0 ] float 
  3959 ;;  f2              3   23[BANK0 ] float 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  f3              3   27[BANK0 ] float 
  3962 ;;  sign            1   31[BANK0 ] unsigned char 
  3963 ;;  exp             1   30[BANK0 ] unsigned char 
  3964 ;;  cntr            1   26[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  3   20[BANK0 ] float 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         0       6       0       0       0       0       0
  3975 ;;      Locals:         0       6       0       0       0       0       0
  3976 ;;      Temps:          3       0       0       0       0       0       0
  3977 ;;      Totals:         3      12       0       0       0       0       0
  3978 ;;Total ram usage:       15 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    3
  3981 ;; This function calls:
  3982 ;;		___ftpack
  3983 ;; This function is called by:
  3984 ;;		_util_getTemperature
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text11
  3989  0032CC                     __ptext11:
  3990                           	opt stack 0
  3991  0032CC                     ___ftdiv:
  3992                           	opt stack 25
  3993                           
  3994                           ;incstack = 0
  3995  0032CC  C076  F025         	movff	___ftdiv@f1+2,??___ftdiv
  3996  0032D0  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  3997  0032D2  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  3998  0032D4  0100               	movlb	0	; () banked
  3999  0032D6  3575               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4000  0032D8  3625               	rlcf	??___ftdiv& (0+255),f,c
  4001  0032DA  E301               	bnc	u7901
  4002  0032DC  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  4003  0032DE                     u7901:
  4004  0032DE  5025               	movf	??___ftdiv,w,c
  4005  0032E0  0100               	movlb	0	; () banked
  4006  0032E2  6F7E               	movwf	___ftdiv@exp& (0+255),b
  4007  0032E4  0100               	movlb	0	; () banked
  4008  0032E6  517E               	movf	___ftdiv@exp& (0+255),w,b
  4009  0032E8  A4D8               	btfss	status,2,c
  4010  0032EA  D00A               	goto	l6717
  4011                           
  4012                           ; BSR set to: 0
  4013  0032EC  0E00               	movlw	0
  4014  0032EE  0100               	movlb	0	; () banked
  4015  0032F0  6F74               	movwf	?___ftdiv& (0+255),b
  4016  0032F2  0E00               	movlw	0
  4017  0032F4  0100               	movlb	0	; () banked
  4018  0032F6  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  4019  0032F8  0E00               	movlw	0
  4020  0032FA  0100               	movlb	0	; () banked
  4021  0032FC  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  4022                           
  4023                           ; BSR set to: 0
  4024  0032FE  0012               	return	
  4025  003300                     l6717:
  4026                           
  4027                           ; BSR set to: 0
  4028  003300  C079  F025         	movff	___ftdiv@f2+2,??___ftdiv
  4029  003304  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  4030  003306  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  4031  003308  0100               	movlb	0	; () banked
  4032  00330A  3578               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4033  00330C  3625               	rlcf	??___ftdiv& (0+255),f,c
  4034  00330E  E301               	bnc	u7921
  4035  003310  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  4036  003312                     u7921:
  4037  003312  5025               	movf	??___ftdiv,w,c
  4038  003314  0100               	movlb	0	; () banked
  4039  003316  6F7F               	movwf	___ftdiv@sign& (0+255),b
  4040  003318  0100               	movlb	0	; () banked
  4041  00331A  517F               	movf	___ftdiv@sign& (0+255),w,b
  4042  00331C  A4D8               	btfss	status,2,c
  4043  00331E  D00A               	goto	l6723
  4044                           
  4045                           ; BSR set to: 0
  4046  003320  0E00               	movlw	0
  4047  003322  0100               	movlb	0	; () banked
  4048  003324  6F74               	movwf	?___ftdiv& (0+255),b
  4049  003326  0E00               	movlw	0
  4050  003328  0100               	movlb	0	; () banked
  4051  00332A  6F75               	movwf	(?___ftdiv+1)& (0+255),b
  4052  00332C  0E00               	movlw	0
  4053  00332E  0100               	movlb	0	; () banked
  4054  003330  6F76               	movwf	(?___ftdiv+2)& (0+255),b
  4055                           
  4056                           ; BSR set to: 0
  4057  003332  0012               	return	
  4058  003334                     l6723:
  4059                           
  4060                           ; BSR set to: 0
  4061  003334  0E00               	movlw	0
  4062  003336  0100               	movlb	0	; () banked
  4063  003338  6F7B               	movwf	___ftdiv@f3& (0+255),b
  4064  00333A  0E00               	movlw	0
  4065  00333C  0100               	movlb	0	; () banked
  4066  00333E  6F7C               	movwf	(___ftdiv@f3+1)& (0+255),b
  4067  003340  0E00               	movlw	0
  4068  003342  0100               	movlb	0	; () banked
  4069  003344  6F7D               	movwf	(___ftdiv@f3+2)& (0+255),b
  4070                           
  4071                           ; BSR set to: 0
  4072  003346  0100               	movlb	0	; () banked
  4073  003348  517F               	movf	___ftdiv@sign& (0+255),w,b
  4074  00334A  0F89               	addlw	137
  4075  00334C  0100               	movlb	0	; () banked
  4076  00334E  5F7E               	subwf	___ftdiv@exp& (0+255),f,b
  4077                           
  4078                           ; BSR set to: 0
  4079  003350  C076  F07F         	movff	___ftdiv@f1+2,___ftdiv@sign
  4080                           
  4081                           ; BSR set to: 0
  4082  003354  0100               	movlb	0	; () banked
  4083  003356  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4084  003358  0100               	movlb	0	; () banked
  4085  00335A  1B7F               	xorwf	___ftdiv@sign& (0+255),f,b
  4086                           
  4087                           ; BSR set to: 0
  4088  00335C  0E80               	movlw	128
  4089  00335E  0100               	movlb	0	; () banked
  4090  003360  177F               	andwf	___ftdiv@sign& (0+255),f,b
  4091                           
  4092                           ; BSR set to: 0
  4093  003362  0100               	movlb	0	; () banked
  4094  003364  8F75               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4095                           
  4096                           ; BSR set to: 0
  4097  003366  0EFF               	movlw	255
  4098  003368  0100               	movlb	0	; () banked
  4099  00336A  1774               	andwf	___ftdiv@f1& (0+255),f,b
  4100  00336C  0EFF               	movlw	255
  4101  00336E  0100               	movlb	0	; () banked
  4102  003370  1775               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4103  003372  0E00               	movlw	0
  4104  003374  0100               	movlb	0	; () banked
  4105  003376  1776               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4106                           
  4107                           ; BSR set to: 0
  4108  003378  0100               	movlb	0	; () banked
  4109  00337A  8F78               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4110                           
  4111                           ; BSR set to: 0
  4112  00337C  0EFF               	movlw	255
  4113  00337E  0100               	movlb	0	; () banked
  4114  003380  1777               	andwf	___ftdiv@f2& (0+255),f,b
  4115  003382  0EFF               	movlw	255
  4116  003384  0100               	movlb	0	; () banked
  4117  003386  1778               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4118  003388  0E00               	movlw	0
  4119  00338A  0100               	movlb	0	; () banked
  4120  00338C  1779               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4121                           
  4122                           ; BSR set to: 0
  4123  00338E  0E18               	movlw	24
  4124  003390  0100               	movlb	0	; () banked
  4125  003392  6F7A               	movwf	___ftdiv@cntr& (0+255),b
  4126  003394                     l6743:
  4127                           
  4128                           ; BSR set to: 0
  4129  003394  0100               	movlb	0	; () banked
  4130  003396  90D8               	bcf	status,0,c
  4131  003398  377B               	rlcf	___ftdiv@f3& (0+255),f,b
  4132  00339A  377C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4133  00339C  377D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4134                           
  4135                           ; BSR set to: 0
  4136  00339E  0100               	movlb	0	; () banked
  4137  0033A0  5177               	movf	___ftdiv@f2& (0+255),w,b
  4138  0033A2  0100               	movlb	0	; () banked
  4139  0033A4  5D74               	subwf	___ftdiv@f1& (0+255),w,b
  4140  0033A6  0100               	movlb	0	; () banked
  4141  0033A8  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4142  0033AA  0100               	movlb	0	; () banked
  4143  0033AC  5975               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4144  0033AE  0100               	movlb	0	; () banked
  4145  0033B0  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4146  0033B2  0100               	movlb	0	; () banked
  4147  0033B4  5976               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4148  0033B6  A0D8               	btfss	status,0,c
  4149  0033B8  D00E               	goto	l1022
  4150                           
  4151                           ; BSR set to: 0
  4152  0033BA  0100               	movlb	0	; () banked
  4153  0033BC  5177               	movf	___ftdiv@f2& (0+255),w,b
  4154  0033BE  0100               	movlb	0	; () banked
  4155  0033C0  5F74               	subwf	___ftdiv@f1& (0+255),f,b
  4156  0033C2  0100               	movlb	0	; () banked
  4157  0033C4  5178               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4158  0033C6  0100               	movlb	0	; () banked
  4159  0033C8  5B75               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4160  0033CA  0100               	movlb	0	; () banked
  4161  0033CC  5179               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4162  0033CE  0100               	movlb	0	; () banked
  4163  0033D0  5B76               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4164                           
  4165                           ; BSR set to: 0
  4166  0033D2  0100               	movlb	0	; () banked
  4167  0033D4  817B               	bsf	___ftdiv@f3& (0+255),0,b
  4168  0033D6                     l1022:
  4169                           
  4170                           ; BSR set to: 0
  4171  0033D6  0100               	movlb	0	; () banked
  4172  0033D8  90D8               	bcf	status,0,c
  4173  0033DA  3774               	rlcf	___ftdiv@f1& (0+255),f,b
  4174  0033DC  3775               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4175  0033DE  3776               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4176                           
  4177                           ; BSR set to: 0
  4178  0033E0  0100               	movlb	0	; () banked
  4179  0033E2  2F7A               	decfsz	___ftdiv@cntr& (0+255),f,b
  4180  0033E4  D7D7               	goto	l6743
  4181                           
  4182                           ; BSR set to: 0
  4183                           
  4184                           ; BSR set to: 0
  4185  0033E6  C07B  F01C         	movff	___ftdiv@f3,___ftpack@arg
  4186  0033EA  C07C  F01D         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4187  0033EE  C07D  F01E         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4188  0033F2  C07E  F01F         	movff	___ftdiv@exp,___ftpack@exp
  4189  0033F6  C07F  F020         	movff	___ftdiv@sign,___ftpack@sign
  4190  0033FA  ECF0  F01D         	call	___ftpack	;wreg free
  4191  0033FE  C01C  F074         	movff	?___ftpack,?___ftdiv
  4192  003402  C01D  F075         	movff	?___ftpack+1,?___ftdiv+1
  4193  003406  C01E  F076         	movff	?___ftpack+2,?___ftdiv+2
  4194  00340A  0012               	return	
  4195  00340C                     __end_of___ftdiv:
  4196                           	opt stack 0
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           intcon	equ	0xFF2
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           postdec1	equ	0xFE5
  4205                           fsr1h	equ	0xFE2
  4206                           fsr1l	equ	0xFE1
  4207                           postinc2	equ	0xFDE
  4208                           postdec2	equ	0xFDD
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function ___awtoft *****************
  4214 ;; Defined at:
  4215 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  c               2   17[BANK0 ] int 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  sign            1   35[COMRAM] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  3   17[BANK0 ] float 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4229 ;;      Params:         0       3       0       0       0       0       0
  4230 ;;      Locals:         1       0       0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0
  4232 ;;      Totals:         1       3       0       0       0       0       0
  4233 ;;Total ram usage:        4 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    3
  4236 ;; This function calls:
  4237 ;;		___ftpack
  4238 ;; This function is called by:
  4239 ;;		_util_getTemperature
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text12
  4244  0044FA                     __ptext12:
  4245                           	opt stack 0
  4246  0044FA                     ___awtoft:
  4247                           	opt stack 25
  4248                           
  4249                           ;incstack = 0
  4250  0044FA  0E00               	movlw	0
  4251  0044FC  6E24               	movwf	___awtoft@sign,c
  4252  0044FE  0100               	movlb	0	; () banked
  4253  004500  AF72               	btfss	(___awtoft@c+1)& (0+255),7,b
  4254  004502  D007               	goto	l6765
  4255                           
  4256                           ; BSR set to: 0
  4257  004504  0100               	movlb	0	; () banked
  4258  004506  6D71               	negf	___awtoft@c& (0+255),b
  4259  004508  1F72               	comf	(___awtoft@c+1)& (0+255),f,b
  4260  00450A  B0D8               	btfsc	status,0,c
  4261  00450C  2B72               	incf	(___awtoft@c+1)& (0+255),f,b
  4262                           
  4263                           ; BSR set to: 0
  4264  00450E  0E01               	movlw	1
  4265  004510  6E24               	movwf	___awtoft@sign,c
  4266  004512                     l6765:
  4267                           
  4268                           ; BSR set to: 0
  4269  004512  C071  F01C         	movff	___awtoft@c,___ftpack@arg
  4270  004516  C072  F01D         	movff	___awtoft@c+1,___ftpack@arg+1
  4271  00451A  6A1E               	clrf	___ftpack@arg+2,c
  4272  00451C  0E8E               	movlw	142
  4273  00451E  6E1F               	movwf	___ftpack@exp,c
  4274  004520  C024  F020         	movff	___awtoft@sign,___ftpack@sign
  4275  004524  ECF0  F01D         	call	___ftpack	;wreg free
  4276  004528  C01C  F071         	movff	?___ftpack,?___awtoft
  4277  00452C  C01D  F072         	movff	?___ftpack+1,?___awtoft+1
  4278  004530  C01E  F073         	movff	?___ftpack+2,?___awtoft+2
  4279  004534  0012               	return	
  4280  004536                     __end_of___awtoft:
  4281                           	opt stack 0
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           intcon	equ	0xFF2
  4287                           postinc0	equ	0xFEE
  4288                           wreg	equ	0xFE8
  4289                           postdec1	equ	0xFE5
  4290                           fsr1h	equ	0xFE2
  4291                           fsr1l	equ	0xFE1
  4292                           postinc2	equ	0xFDE
  4293                           postdec2	equ	0xFDD
  4294                           fsr2h	equ	0xFDA
  4295                           fsr2l	equ	0xFD9
  4296                           status	equ	0xFD8
  4297                           
  4298 ;; *************** function _util_getSolarCurrent *****************
  4299 ;; Defined at:
  4300 ;;		line 52 in file "easat2_util_inputs.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  solarCurrent    3   64[BANK0 ] float 
  4305 ;;  value           3   61[BANK0 ] float 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2   59[BANK0 ] int 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4315 ;;      Params:         0       2       0       0       0       0       0
  4316 ;;      Locals:         0       6       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0
  4318 ;;      Totals:         0       8       0       0       0       0       0
  4319 ;;Total ram usage:        8 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    4
  4322 ;; This function calls:
  4323 ;;		___ftmul
  4324 ;;		___fttol
  4325 ;;		___lwtoft
  4326 ;; This function is called by:
  4327 ;;		_main_loop
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text13
  4332  003822                     __ptext13:
  4333                           	opt stack 0
  4334  003822                     _util_getSolarCurrent:
  4335                           	opt stack 25
  4336                           
  4337                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4338                           
  4339                           ;incstack = 0
  4340  003822  0E00               	movlw	0
  4341  003824  0100               	movlb	0	; () banked
  4342  003826  6F9D               	movwf	util_getSolarCurrent@value& (0+255),b
  4343  003828  0E00               	movlw	0
  4344  00382A  0100               	movlb	0	; () banked
  4345  00382C  6F9E               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4346  00382E  0E00               	movlw	0
  4347  003830  0100               	movlb	0	; () banked
  4348  003832  6F9F               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4349  003834  0E00               	movlw	0
  4350  003836  0100               	movlb	0	; () banked
  4351  003838  6FA0               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4352  00383A  0E00               	movlw	0
  4353  00383C  0100               	movlb	0	; () banked
  4354  00383E  6FA1               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4355  003840  0E00               	movlw	0
  4356  003842  0100               	movlb	0	; () banked
  4357  003844  6FA2               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4361  003846  84C2               	bsf	4034,2,c	;volatile
  4362  003848  96C2               	bcf	4034,3,c	;volatile
  4363  00384A  98C2               	bcf	4034,4,c	;volatile
  4364  00384C  9AC2               	bcf	4034,5,c	;volatile
  4365  00384E  9CC2               	bcf	4034,6,c	;volatile
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4369  003850  80C2               	bsf	4034,0,c	;volatile
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4373  003852  9C9E               	bcf	3998,6,c	;volatile
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4377  003854  82C2               	bsf	4034,1,c	;volatile
  4378  003856                     l159:
  4379  003856  AC9E               	btfss	3998,6,c	;volatile
  4380  003858  D7FE               	goto	l159
  4381                           
  4382                           ;easat2_util_inputs.c: 63: value = ADRES;
  4383  00385A  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4384  00385E  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4385  003862  ECA7  F023         	call	___lwtoft	;wreg free
  4386  003866  C071  F09D         	movff	?___lwtoft,util_getSolarCurrent@value
  4387  00386A  C072  F09E         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4388  00386E  C073  F09F         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4389                           
  4390                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4391  003872  9C9E               	bcf	3998,6,c	;volatile
  4392                           
  4393                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4394  003874  90C2               	bcf	4034,0,c	;volatile
  4395                           
  4396                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4397  003876  C09D  F079         	movff	util_getSolarCurrent@value,___ftmul@f1
  4398  00387A  C09E  F07A         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4399  00387E  C09F  F07B         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4400  003882  0E33               	movlw	51
  4401  003884  0100               	movlb	0	; () banked
  4402  003886  6F7C               	movwf	___ftmul@f2& (0+255),b
  4403  003888  0E03               	movlw	3
  4404  00388A  0100               	movlb	0	; () banked
  4405  00388C  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4406  00388E  0E3B               	movlw	59
  4407  003890  0100               	movlb	0	; () banked
  4408  003892  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4409  003894  EC1B  F018         	call	___ftmul	;wreg free
  4410  003898  C079  F0A0         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4411  00389C  C07A  F0A1         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4412  0038A0  C07B  F0A2         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4413                           
  4414                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4415  0038A4  C0A0  F079         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4416  0038A8  C0A1  F07A         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4417  0038AC  C0A2  F07B         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4418  0038B0  0E00               	movlw	0
  4419  0038B2  0100               	movlb	0	; () banked
  4420  0038B4  6F7C               	movwf	___ftmul@f2& (0+255),b
  4421  0038B6  0E80               	movlw	128
  4422  0038B8  0100               	movlb	0	; () banked
  4423  0038BA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4424  0038BC  0E3F               	movlw	63
  4425  0038BE  0100               	movlb	0	; () banked
  4426  0038C0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4427  0038C2  EC1B  F018         	call	___ftmul	;wreg free
  4428  0038C6  C079  F0A0         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4429  0038CA  C07A  F0A1         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4430  0038CE  C07B  F0A2         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4431                           
  4432                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4433  0038D2  C0A0  F08C         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4434  0038D6  C0A1  F08D         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4435  0038DA  C0A2  F08E         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4436  0038DE  ECC4  F018         	call	___fttol	;wreg free
  4437  0038E2  C08C  F09B         	movff	?___fttol,?_util_getSolarCurrent
  4438  0038E6  C08D  F09C         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4439  0038EA  0012               	return	
  4440  0038EC                     __end_of_util_getSolarCurrent:
  4441                           	opt stack 0
  4442                           tblptru	equ	0xFF8
  4443                           tblptrh	equ	0xFF7
  4444                           tblptrl	equ	0xFF6
  4445                           tablat	equ	0xFF5
  4446                           intcon	equ	0xFF2
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           postdec1	equ	0xFE5
  4450                           fsr1h	equ	0xFE2
  4451                           fsr1l	equ	0xFE1
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _util_getBatteryVoltage *****************
  4459 ;; Defined at:
  4460 ;;		line 19 in file "easat2_util_inputs.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  voltage         3   43[BANK0 ] float 
  4465 ;;  value           3   40[BANK0 ] float 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  3   37[BANK0 ] float 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4475 ;;      Params:         0       3       0       0       0       0       0
  4476 ;;      Locals:         0       6       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0
  4478 ;;      Totals:         0       9       0       0       0       0       0
  4479 ;;Total ram usage:        9 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    4
  4482 ;; This function calls:
  4483 ;;		___ftmul
  4484 ;;		___lwtoft
  4485 ;; This function is called by:
  4486 ;;		_main_loop
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text14
  4491  0039B6                     __ptext14:
  4492                           	opt stack 0
  4493  0039B6                     _util_getBatteryVoltage:
  4494                           	opt stack 25
  4495                           
  4496                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4497                           
  4498                           ;incstack = 0
  4499  0039B6  0E00               	movlw	0
  4500  0039B8  0100               	movlb	0	; () banked
  4501  0039BA  6F88               	movwf	util_getBatteryVoltage@value& (0+255),b
  4502  0039BC  0E00               	movlw	0
  4503  0039BE  0100               	movlb	0	; () banked
  4504  0039C0  6F89               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4505  0039C2  0E00               	movlw	0
  4506  0039C4  0100               	movlb	0	; () banked
  4507  0039C6  6F8A               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4508  0039C8  0E00               	movlw	0
  4509  0039CA  0100               	movlb	0	; () banked
  4510  0039CC  6F8B               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4511  0039CE  0E00               	movlw	0
  4512  0039D0  0100               	movlb	0	; () banked
  4513  0039D2  6F8C               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4514  0039D4  0E00               	movlw	0
  4515  0039D6  0100               	movlb	0	; () banked
  4516  0039D8  6F8D               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4520  0039DA  94C2               	bcf	4034,2,c	;volatile
  4521  0039DC  96C2               	bcf	4034,3,c	;volatile
  4522  0039DE  98C2               	bcf	4034,4,c	;volatile
  4523  0039E0  9AC2               	bcf	4034,5,c	;volatile
  4524  0039E2  9CC2               	bcf	4034,6,c	;volatile
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4528  0039E4  80C2               	bsf	4034,0,c	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4532  0039E6  9C9E               	bcf	3998,6,c	;volatile
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4536  0039E8  82C2               	bsf	4034,1,c	;volatile
  4537  0039EA                     l153:
  4538  0039EA  AC9E               	btfss	3998,6,c	;volatile
  4539  0039EC  D7FE               	goto	l153
  4540                           
  4541                           ;easat2_util_inputs.c: 30: value = ADRES;
  4542  0039EE  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4543  0039F2  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4544  0039F6  ECA7  F023         	call	___lwtoft	;wreg free
  4545  0039FA  C071  F088         	movff	?___lwtoft,util_getBatteryVoltage@value
  4546  0039FE  C072  F089         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4547  003A02  C073  F08A         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4548                           
  4549                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4550  003A06  9C9E               	bcf	3998,6,c	;volatile
  4551                           
  4552                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4553  003A08  90C2               	bcf	4034,0,c	;volatile
  4554                           
  4555                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4556  003A0A  C088  F079         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4557  003A0E  C089  F07A         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4558  003A12  C08A  F07B         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4559  003A16  0E33               	movlw	51
  4560  003A18  0100               	movlb	0	; () banked
  4561  003A1A  6F7C               	movwf	___ftmul@f2& (0+255),b
  4562  003A1C  0E03               	movlw	3
  4563  003A1E  0100               	movlb	0	; () banked
  4564  003A20  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4565  003A22  0E3B               	movlw	59
  4566  003A24  0100               	movlb	0	; () banked
  4567  003A26  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4568  003A28  EC1B  F018         	call	___ftmul	;wreg free
  4569  003A2C  C079  F08B         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4570  003A30  C07A  F08C         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4571  003A34  C07B  F08D         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4572                           
  4573                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4574  003A38  C08B  F079         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4575  003A3C  C08C  F07A         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4576  003A40  C08D  F07B         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4577  003A44  0E66               	movlw	102
  4578  003A46  0100               	movlb	0	; () banked
  4579  003A48  6F7C               	movwf	___ftmul@f2& (0+255),b
  4580  003A4A  0EB6               	movlw	182
  4581  003A4C  0100               	movlb	0	; () banked
  4582  003A4E  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4583  003A50  0E40               	movlw	64
  4584  003A52  0100               	movlb	0	; () banked
  4585  003A54  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4586  003A56  EC1B  F018         	call	___ftmul	;wreg free
  4587  003A5A  C079  F08B         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4588  003A5E  C07A  F08C         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4589  003A62  C07B  F08D         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4590                           
  4591                           ;easat2_util_inputs.c: 46: return voltage;
  4592  003A66  C08B  F085         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4593  003A6A  C08C  F086         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4594  003A6E  C08D  F087         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4595  003A72  0012               	return	
  4596  003A74                     __end_of_util_getBatteryVoltage:
  4597                           	opt stack 0
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postdec1	equ	0xFE5
  4606                           fsr1h	equ	0xFE2
  4607                           fsr1l	equ	0xFE1
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _util_getBatteryCurrent *****************
  4615 ;; Defined at:
  4616 ;;		line 85 in file "easat2_util_inputs.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  batteryCurre    3   64[BANK0 ] float 
  4621 ;;  value           3   61[BANK0 ] float 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2   59[BANK0 ] int 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4631 ;;      Params:         0       2       0       0       0       0       0
  4632 ;;      Locals:         0       6       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0
  4634 ;;      Totals:         0       8       0       0       0       0       0
  4635 ;;Total ram usage:        8 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    4
  4638 ;; This function calls:
  4639 ;;		___ftmul
  4640 ;;		___fttol
  4641 ;;		___lwtoft
  4642 ;; This function is called by:
  4643 ;;		_main_loop
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text15
  4648  0038EC                     __ptext15:
  4649                           	opt stack 0
  4650  0038EC                     _util_getBatteryCurrent:
  4651                           	opt stack 25
  4652                           
  4653                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4654                           
  4655                           ;incstack = 0
  4656  0038EC  0E00               	movlw	0
  4657  0038EE  0100               	movlb	0	; () banked
  4658  0038F0  6F9D               	movwf	util_getBatteryCurrent@value& (0+255),b
  4659  0038F2  0E00               	movlw	0
  4660  0038F4  0100               	movlb	0	; () banked
  4661  0038F6  6F9E               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4662  0038F8  0E00               	movlw	0
  4663  0038FA  0100               	movlb	0	; () banked
  4664  0038FC  6F9F               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4665  0038FE  0E00               	movlw	0
  4666  003900  0100               	movlb	0	; () banked
  4667  003902  6FA0               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4668  003904  0E00               	movlw	0
  4669  003906  0100               	movlb	0	; () banked
  4670  003908  6FA1               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4671  00390A  0E00               	movlw	0
  4672  00390C  0100               	movlb	0	; () banked
  4673  00390E  6FA2               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4677  003910  94C2               	bcf	4034,2,c	;volatile
  4678  003912  96C2               	bcf	4034,3,c	;volatile
  4679  003914  88C2               	bsf	4034,4,c	;volatile
  4680  003916  8AC2               	bsf	4034,5,c	;volatile
  4681  003918  9CC2               	bcf	4034,6,c	;volatile
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4685  00391A  80C2               	bsf	4034,0,c	;volatile
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4689  00391C  9C9E               	bcf	3998,6,c	;volatile
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4693  00391E  82C2               	bsf	4034,1,c	;volatile
  4694  003920                     l165:
  4695  003920  AC9E               	btfss	3998,6,c	;volatile
  4696  003922  D7FE               	goto	l165
  4697                           
  4698                           ;easat2_util_inputs.c: 96: value = ADRES;
  4699  003924  CFC3 F071          	movff	4035,___lwtoft@c	;volatile
  4700  003928  CFC4 F072          	movff	4036,___lwtoft@c+1	;volatile
  4701  00392C  ECA7  F023         	call	___lwtoft	;wreg free
  4702  003930  C071  F09D         	movff	?___lwtoft,util_getBatteryCurrent@value
  4703  003934  C072  F09E         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4704  003938  C073  F09F         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4705                           
  4706                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4707  00393C  9C9E               	bcf	3998,6,c	;volatile
  4708                           
  4709                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4710  00393E  90C2               	bcf	4034,0,c	;volatile
  4711                           
  4712                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4713  003940  C09D  F079         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4714  003944  C09E  F07A         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4715  003948  C09F  F07B         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4716  00394C  0E33               	movlw	51
  4717  00394E  0100               	movlb	0	; () banked
  4718  003950  6F7C               	movwf	___ftmul@f2& (0+255),b
  4719  003952  0E03               	movlw	3
  4720  003954  0100               	movlb	0	; () banked
  4721  003956  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4722  003958  0E3B               	movlw	59
  4723  00395A  0100               	movlb	0	; () banked
  4724  00395C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4725  00395E  EC1B  F018         	call	___ftmul	;wreg free
  4726  003962  C079  F0A0         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4727  003966  C07A  F0A1         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4728  00396A  C07B  F0A2         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4729                           
  4730                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4731  00396E  C0A0  F079         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4732  003972  C0A1  F07A         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4733  003976  C0A2  F07B         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4734  00397A  0E00               	movlw	0
  4735  00397C  0100               	movlb	0	; () banked
  4736  00397E  6F7C               	movwf	___ftmul@f2& (0+255),b
  4737  003980  0E80               	movlw	128
  4738  003982  0100               	movlb	0	; () banked
  4739  003984  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  4740  003986  0E3F               	movlw	63
  4741  003988  0100               	movlb	0	; () banked
  4742  00398A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  4743  00398C  EC1B  F018         	call	___ftmul	;wreg free
  4744  003990  C079  F0A0         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4745  003994  C07A  F0A1         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4746  003998  C07B  F0A2         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4747                           
  4748                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4749  00399C  C0A0  F08C         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4750  0039A0  C0A1  F08D         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4751  0039A4  C0A2  F08E         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4752  0039A8  ECC4  F018         	call	___fttol	;wreg free
  4753  0039AC  C08C  F09B         	movff	?___fttol,?_util_getBatteryCurrent
  4754  0039B0  C08D  F09C         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4755  0039B4  0012               	return	
  4756  0039B6                     __end_of_util_getBatteryCurrent:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           intcon	equ	0xFF2
  4763                           postinc0	equ	0xFEE
  4764                           wreg	equ	0xFE8
  4765                           postdec1	equ	0xFE5
  4766                           fsr1h	equ	0xFE2
  4767                           fsr1l	equ	0xFE1
  4768                           postinc2	equ	0xFDE
  4769                           postdec2	equ	0xFDD
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function ___lwtoft *****************
  4775 ;; Defined at:
  4776 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  c               2   17[BANK0 ] unsigned int 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  3   17[BANK0 ] float 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4790 ;;      Params:         0       3       0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0
  4793 ;;      Totals:         0       3       0       0       0       0       0
  4794 ;;Total ram usage:        3 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    3
  4797 ;; This function calls:
  4798 ;;		___ftpack
  4799 ;; This function is called by:
  4800 ;;		_util_getBatteryVoltage
  4801 ;;		_util_getSolarCurrent
  4802 ;;		_util_getBatteryCurrent
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text16
  4807  00474E                     __ptext16:
  4808                           	opt stack 0
  4809  00474E                     ___lwtoft:
  4810                           	opt stack 25
  4811                           
  4812                           ;incstack = 0
  4813  00474E  C071  F01C         	movff	___lwtoft@c,___ftpack@arg
  4814  004752  C072  F01D         	movff	___lwtoft@c+1,___ftpack@arg+1
  4815  004756  6A1E               	clrf	___ftpack@arg+2,c
  4816  004758  0E8E               	movlw	142
  4817  00475A  6E1F               	movwf	___ftpack@exp,c
  4818  00475C  0E00               	movlw	0
  4819  00475E  6E20               	movwf	___ftpack@sign,c
  4820  004760  ECF0  F01D         	call	___ftpack	;wreg free
  4821  004764  C01C  F071         	movff	?___ftpack,?___lwtoft
  4822  004768  C01D  F072         	movff	?___ftpack+1,?___lwtoft+1
  4823  00476C  C01E  F073         	movff	?___ftpack+2,?___lwtoft+2
  4824  004770  0012               	return	
  4825  004772                     __end_of___lwtoft:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           intcon	equ	0xFF2
  4832                           postinc0	equ	0xFEE
  4833                           wreg	equ	0xFE8
  4834                           postdec1	equ	0xFE5
  4835                           fsr1h	equ	0xFE2
  4836                           fsr1l	equ	0xFE1
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function _util_beacon_transmission *****************
  4844 ;; Defined at:
  4845 ;;		line 22 in file "easat2_util_transmission.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  battery_volt    3  120[BANK0 ] float 
  4848 ;;  solar_curren    2  123[BANK0 ] int 
  4849 ;;  battery_curr    2  125[BANK0 ] int 
  4850 ;;  temperature     3  127[BANK0 ] float 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  i               2  192[BANK1 ] int 
  4853 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4854 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4864 ;;      Params:         0      10       0       0       0       0       0
  4865 ;;      Locals:         0       0     194       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0
  4867 ;;      Totals:         0      10     194       0       0       0       0
  4868 ;;Total ram usage:      204 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    7
  4871 ;; This function calls:
  4872 ;;		_memset
  4873 ;;		_sprintf
  4874 ;;		_strcat
  4875 ;;		_strcpy
  4876 ;;		_strlen
  4877 ;;		_util_transmit_letter
  4878 ;; This function is called by:
  4879 ;;		_main_loop
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text17
  4884  003666                     __ptext17:
  4885                           	opt stack 0
  4886  003666                     _util_beacon_transmission:
  4887                           	opt stack 22
  4888                           
  4889                           ;easat2_util_transmission.c: 25: char BEACON_MESSAGE[128];
  4890                           ;easat2_util_transmission.c: 26: char BEACON_BUFFER[64];
  4891                           ;easat2_util_transmission.c: 30: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4892                           
  4893                           ;incstack = 0
  4894  003666  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4895  003668  6E1C               	movwf	memset@p1,c
  4896  00366A  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4897  00366C  6E1D               	movwf	memset@p1+1,c
  4898  00366E  0E00               	movlw	0
  4899  003670  6E1F               	movwf	memset@c+1,c
  4900  003672  0E00               	movlw	0
  4901  003674  6E1E               	movwf	memset@c,c
  4902  003676  0E00               	movlw	0
  4903  003678  6E21               	movwf	memset@n+1,c
  4904  00367A  0E80               	movlw	128
  4905  00367C  6E20               	movwf	memset@n,c
  4906  00367E  EC7E  F023         	call	_memset	;wreg free
  4907                           
  4908                           ;easat2_util_transmission.c: 31: strcpy(BEACON_MESSAGE, "EASAT2");
  4909  003682  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4910  003684  6E1C               	movwf	strcpy@to,c
  4911  003686  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4912  003688  6E1D               	movwf	strcpy@to+1,c
  4913  00368A  0E99               	movlw	low STR_1
  4914  00368C  6E1E               	movwf	strcpy@from,c
  4915  00368E  0E7F               	movlw	high STR_1
  4916  003690  6E1F               	movwf	strcpy@from+1,c
  4917  003692  EC50  F023         	call	_strcpy	;wreg free
  4918                           
  4919                           ;easat2_util_transmission.c: 33: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4920  003696  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4921  003698  6E1C               	movwf	memset@p1,c
  4922  00369A  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4923  00369C  6E1D               	movwf	memset@p1+1,c
  4924  00369E  0E00               	movlw	0
  4925  0036A0  6E1F               	movwf	memset@c+1,c
  4926  0036A2  0E00               	movlw	0
  4927  0036A4  6E1E               	movwf	memset@c,c
  4928  0036A6  0E00               	movlw	0
  4929  0036A8  6E21               	movwf	memset@n+1,c
  4930  0036AA  0E40               	movlw	64
  4931  0036AC  6E20               	movwf	memset@n,c
  4932  0036AE  EC7E  F023         	call	_memset	;wreg free
  4933                           
  4934                           ;easat2_util_transmission.c: 34: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4935                           ;easat2_util_transmission.c: 35: solar_current, battery_current);
  4936  0036B2  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4937  0036B4  0100               	movlb	0	; () banked
  4938  0036B6  6FC4               	movwf	sprintf@wh& (0+255),b
  4939  0036B8  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4940  0036BA  0100               	movlb	0	; () banked
  4941  0036BC  6FC5               	movwf	(sprintf@wh+1)& (0+255),b
  4942  0036BE  0E5B               	movlw	low STR_2
  4943  0036C0  0100               	movlb	0	; () banked
  4944  0036C2  6FC6               	movwf	sprintf@f& (0+255),b
  4945  0036C4  0E7F               	movlw	high STR_2
  4946  0036C6  0100               	movlb	0	; () banked
  4947  0036C8  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  4948  0036CA  C0DF  F0C8         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4949  0036CE  C0E0  F0C9         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4950  0036D2  C0E1  F0CA         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4951  0036D6  C0D8  F0CB         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4952  0036DA  C0D9  F0CC         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4953  0036DE  C0DA  F0CD         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4954  0036E2  C0DB  F0CE         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4955  0036E6  C0DC  F0CF         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4956  0036EA  C0DD  F0D0         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4957  0036EE  C0DE  F0D1         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4958  0036F2  ECEC  F021         	call	_sprintf	;wreg free
  4959                           
  4960                           ;easat2_util_transmission.c: 37: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4961  0036F6  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4962  0036F8  6E1C               	movwf	strcat@to,c
  4963  0036FA  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4964  0036FC  6E1D               	movwf	strcat@to+1,c
  4965  0036FE  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4966  003700  6E1E               	movwf	strcat@from,c
  4967  003702  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4968  003704  6E1F               	movwf	strcat@from+1,c
  4969  003706  EC5C  F022         	call	_strcat	;wreg free
  4970                           
  4971                           ;easat2_util_transmission.c: 42: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4972  00370A  0E00               	movlw	0
  4973  00370C  0101               	movlb	1	; () banked
  4974  00370E  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4975  003710  0E00               	movlw	0
  4976  003712  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4977  003714  D00E               	goto	l7005
  4978  003716                     l7001:
  4979                           
  4980                           ; BSR set to: 1
  4981                           ;easat2_util_transmission.c: 43: util_transmit_letter(BEACON_MESSAGE[i]);
  4982  003716  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4983  003718  0101               	movlb	1	; () banked
  4984  00371A  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4985  00371C  6ED9               	movwf	fsr2l,c
  4986  00371E  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4987  003720  0101               	movlb	1	; () banked
  4988  003722  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4989  003724  6EDA               	movwf	fsr2h,c
  4990  003726  50DF               	movf	indf2,w,c
  4991  003728  EC10  F00E         	call	_util_transmit_letter
  4992  00372C  0101               	movlb	1	; () banked
  4993  00372E  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4994  003730  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4995  003732                     l7005:
  4996                           
  4997                           ; BSR set to: 1
  4998  003732  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4999  003734  6E1C               	movwf	strlen@s,c
  5000  003736  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  5001  003738  6E1D               	movwf	strlen@s+1,c
  5002  00373A  ECC3  F021         	call	_strlen	;wreg free
  5003  00373E  501C               	movf	?_strlen,w,c
  5004  003740  0101               	movlb	1	; () banked
  5005  003742  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  5006  003744  501D               	movf	?_strlen+1,w,c
  5007  003746  0101               	movlb	1	; () banked
  5008  003748  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  5009  00374A  B0D8               	btfsc	status,0,c
  5010  00374C  0012               	return	
  5011  00374E  D7E3               	goto	l7001
  5012  003750                     __end_of_util_beacon_transmission:
  5013                           	opt stack 0
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           intcon	equ	0xFF2
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           postdec1	equ	0xFE5
  5022                           fsr1h	equ	0xFE2
  5023                           fsr1l	equ	0xFE1
  5024                           indf2	equ	0xFDF
  5025                           postinc2	equ	0xFDE
  5026                           postdec2	equ	0xFDD
  5027                           fsr2h	equ	0xFDA
  5028                           fsr2l	equ	0xFD9
  5029                           status	equ	0xFD8
  5030                           
  5031 ;; *************** function _func_command_management *****************
  5032 ;; Defined at:
  5033 ;;		line 87 in file "easat2_func_commands.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  candidate_co    4  124[BANK0 ] unsigned long 
  5038 ;;  decoded_comm    2  130[BANK0 ] unsigned int 
  5039 ;;  decoded_comm    2  128[BANK0 ] unsigned int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5049 ;;      Params:         0       0       0       0       0       0       0
  5050 ;;      Locals:         0       8       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0
  5052 ;;      Totals:         0       8       0       0       0       0       0
  5053 ;;Total ram usage:        8 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    8
  5056 ;; This function calls:
  5057 ;;		_func_command_decode
  5058 ;;		_util_command_ack_transmission
  5059 ;; This function is called by:
  5060 ;;		_main_loop
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text18
  5065  003DD6                     __ptext18:
  5066                           	opt stack 0
  5067  003DD6                     _func_command_management:
  5068                           	opt stack 21
  5069                           
  5070                           ;easat2_func_commands.c: 89: unsigned int decoded_command = 0;
  5071                           
  5072                           ; BSR set to: 1
  5073                           ;incstack = 0
  5074  003DD6  0E00               	movlw	0
  5075  003DD8  0100               	movlb	0	; () banked
  5076  003DDA  6FE1               	movwf	(func_command_management@decoded_command+1)& (0+255),b
  5077  003DDC  0E00               	movlw	0
  5078  003DDE  6FE0               	movwf	func_command_management@decoded_command& (0+255),b
  5079                           
  5080                           ;easat2_func_commands.c: 90: unsigned int decoded_command_value = 0;
  5081  003DE0  0E00               	movlw	0
  5082  003DE2  0100               	movlb	0	; () banked
  5083  003DE4  6FE3               	movwf	(func_command_management@decoded_command_value+1)& (0+255),b
  5084  003DE6  0E00               	movlw	0
  5085  003DE8  6FE2               	movwf	func_command_management@decoded_command_value& (0+255),b
  5086                           
  5087                           ;easat2_func_commands.c: 92: unsigned long int candidate_command = 0;
  5088  003DEA  0E00               	movlw	0
  5089  003DEC  0100               	movlb	0	; () banked
  5090  003DEE  6FDC               	movwf	func_command_management@candidate_command& (0+255),b
  5091  003DF0  0E00               	movlw	0
  5092  003DF2  6FDD               	movwf	(func_command_management@candidate_command+1)& (0+255),b
  5093  003DF4  0E00               	movlw	0
  5094  003DF6  6FDE               	movwf	(func_command_management@candidate_command+2)& (0+255),b
  5095  003DF8  0E00               	movlw	0
  5096  003DFA  6FDF               	movwf	(func_command_management@candidate_command+3)& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;easat2_func_commands.c: 96: if (global_command_pending_check) {
  5100  003DFC  0100               	movlb	0	; () banked
  5101  003DFE  51E8               	movf	_global_command_pending_check& (0+255),w,b	;volatile
  5102  003E00  0100               	movlb	0	; () banked
  5103  003E02  11E9               	iorwf	(_global_command_pending_check+1)& (0+255),w,b	;volatile
  5104  003E04  B4D8               	btfsc	status,2,c
  5105  003E06  D02E               	goto	l6783
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;easat2_func_commands.c: 98: candidate_command = global_command_buffer;
  5109  003E08  C0E4  F0DC         	movff	_global_command_buffer,func_command_management@candidate_command	;volatile
  5110  003E0C  C0E5  F0DD         	movff	_global_command_buffer+1,func_command_management@candidate_command+1	;volatile
  5111  003E10  C0E6  F0DE         	movff	_global_command_buffer+2,func_command_management@candidate_command+2	;volatile
  5112  003E14  C0E7  F0DF         	movff	_global_command_buffer+3,func_command_management@candidate_command+3	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;easat2_func_commands.c: 100: if (func_command_decode(candidate_command, &decoded_comman
      +                          d, &decoded_command_value)) {
  5116  003E18  C0DC  F0A1         	movff	func_command_management@candidate_command,func_command_decode@candidate_command
  5117  003E1C  C0DD  F0A2         	movff	func_command_management@candidate_command+1,func_command_decode@candidate_command
      +                          +1
  5118  003E20  C0DE  F0A3         	movff	func_command_management@candidate_command+2,func_command_decode@candidate_command
      +                          +2
  5119  003E24  C0DF  F0A4         	movff	func_command_management@candidate_command+3,func_command_decode@candidate_command
      +                          +3
  5120  003E28  0EE0               	movlw	low func_command_management@decoded_command
  5121  003E2A  0100               	movlb	0	; () banked
  5122  003E2C  6FA5               	movwf	func_command_decode@decoded_command& (0+255),b
  5123  003E2E  0E00               	movlw	high func_command_management@decoded_command
  5124  003E30  0100               	movlb	0	; () banked
  5125  003E32  6FA6               	movwf	(func_command_decode@decoded_command+1)& (0+255),b
  5126  003E34  0EE2               	movlw	low func_command_management@decoded_command_value
  5127  003E36  0100               	movlb	0	; () banked
  5128  003E38  6FA7               	movwf	func_command_decode@decoded_value& (0+255),b
  5129  003E3A  0E00               	movlw	high func_command_management@decoded_command_value
  5130  003E3C  0100               	movlb	0	; () banked
  5131  003E3E  6FA8               	movwf	(func_command_decode@decoded_value+1)& (0+255),b
  5132  003E40  EC94  F016         	call	_func_command_decode	;wreg free
  5133  003E44  0100               	movlb	0	; () banked
  5134  003E46  51A1               	movf	?_func_command_decode& (0+255),w,b
  5135  003E48  0100               	movlb	0	; () banked
  5136  003E4A  11A2               	iorwf	(?_func_command_decode+1)& (0+255),w,b
  5137  003E4C  B4D8               	btfsc	status,2,c
  5138  003E4E  D00A               	goto	l6783
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;easat2_func_commands.c: 106: util_command_ack_transmission(decoded_command, decoded_com
      +                          mand_value);
  5142  003E50  C0E0  F0D8         	movff	func_command_management@decoded_command,util_command_ack_transmission@command
  5143  003E54  C0E1  F0D9         	movff	func_command_management@decoded_command+1,util_command_ack_transmission@command+1
  5144  003E58  C0E2  F0DA         	movff	func_command_management@decoded_command_value,util_command_ack_transmission@value
  5145  003E5C  C0E3  F0DB         	movff	func_command_management@decoded_command_value+1,util_command_ack_transmission@val
      +                          ue+1
  5146  003E60  ECA8  F01B         	call	_util_command_ack_transmission	;wreg free
  5147  003E64                     l6783:
  5148                           
  5149                           ;easat2_func_commands.c: 110: }
  5150                           ;easat2_func_commands.c: 113: }
  5151                           ;easat2_func_commands.c: 117: global_command_pending_check = 0;
  5152  003E64  0E00               	movlw	0
  5153  003E66  0100               	movlb	0	; () banked
  5154  003E68  6FE9               	movwf	(_global_command_pending_check+1)& (0+255),b	;volatile
  5155  003E6A  0E00               	movlw	0
  5156  003E6C  6FE8               	movwf	_global_command_pending_check& (0+255),b	;volatile
  5157                           
  5158                           ; BSR set to: 0
  5159  003E6E  0012               	return		;funcret
  5160  003E70                     __end_of_func_command_management:
  5161                           	opt stack 0
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           intcon	equ	0xFF2
  5167                           postinc0	equ	0xFEE
  5168                           wreg	equ	0xFE8
  5169                           postdec1	equ	0xFE5
  5170                           fsr1h	equ	0xFE2
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           fsr2h	equ	0xFDA
  5176                           fsr2l	equ	0xFD9
  5177                           status	equ	0xFD8
  5178                           
  5179 ;; *************** function _util_command_ack_transmission *****************
  5180 ;; Defined at:
  5181 ;;		line 51 in file "easat2_util_transmission.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  command         2  120[BANK0 ] unsigned int 
  5184 ;;  value           2  122[BANK0 ] unsigned int 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  i               2  192[BANK1 ] int 
  5187 ;;  BEACON_COMMA  128    0[BANK1 ] unsigned char [128]
  5188 ;;  BEACON_COMMA   64  128[BANK1 ] unsigned char [64]
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5198 ;;      Params:         0       4       0       0       0       0       0
  5199 ;;      Locals:         0       0     194       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0
  5201 ;;      Totals:         0       4     194       0       0       0       0
  5202 ;;Total ram usage:      198 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    7
  5205 ;; This function calls:
  5206 ;;		_memset
  5207 ;;		_sprintf
  5208 ;;		_strcat
  5209 ;;		_strcpy
  5210 ;;		_strlen
  5211 ;;		_util_transmit_letter
  5212 ;; This function is called by:
  5213 ;;		_func_command_management
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text19
  5218  003750                     __ptext19:
  5219                           	opt stack 0
  5220  003750                     _util_command_ack_transmission:
  5221                           	opt stack 21
  5222                           
  5223                           ;easat2_util_transmission.c: 53: char BEACON_COMMAND_MESSAGE[128];
  5224                           ;easat2_util_transmission.c: 54: char BEACON_COMMAND_BUFFER[64];
  5225                           ;easat2_util_transmission.c: 58: memset(BEACON_COMMAND_MESSAGE, 0, sizeof(BEACON_COMMAND
      +                          _MESSAGE));
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;incstack = 0
  5229  003750  0E00               	movlw	low util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5230  003752  6E1C               	movwf	memset@p1,c
  5231  003754  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5232  003756  6E1D               	movwf	memset@p1+1,c
  5233  003758  0E00               	movlw	0
  5234  00375A  6E1F               	movwf	memset@c+1,c
  5235  00375C  0E00               	movlw	0
  5236  00375E  6E1E               	movwf	memset@c,c
  5237  003760  0E00               	movlw	0
  5238  003762  6E21               	movwf	memset@n+1,c
  5239  003764  0E80               	movlw	128
  5240  003766  6E20               	movwf	memset@n,c
  5241  003768  EC7E  F023         	call	_memset	;wreg free
  5242                           
  5243                           ;easat2_util_transmission.c: 59: strcpy(BEACON_COMMAND_MESSAGE, "EASAT2 ACK");
  5244  00376C  0E00               	movlw	low util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5245  00376E  6E1C               	movwf	strcpy@to,c
  5246  003770  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5247  003772  6E1D               	movwf	strcpy@to+1,c
  5248  003774  0E72               	movlw	low STR_3
  5249  003776  6E1E               	movwf	strcpy@from,c
  5250  003778  0E7F               	movlw	high STR_3
  5251  00377A  6E1F               	movwf	strcpy@from+1,c
  5252  00377C  EC50  F023         	call	_strcpy	;wreg free
  5253                           
  5254                           ;easat2_util_transmission.c: 61: memset(BEACON_COMMAND_BUFFER, 0, sizeof(BEACON_COMMAND_
      +                          BUFFER));
  5255  003780  0E80               	movlw	low util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5256  003782  6E1C               	movwf	memset@p1,c
  5257  003784  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5258  003786  6E1D               	movwf	memset@p1+1,c
  5259  003788  0E00               	movlw	0
  5260  00378A  6E1F               	movwf	memset@c+1,c
  5261  00378C  0E00               	movlw	0
  5262  00378E  6E1E               	movwf	memset@c,c
  5263  003790  0E00               	movlw	0
  5264  003792  6E21               	movwf	memset@n+1,c
  5265  003794  0E40               	movlw	64
  5266  003796  6E20               	movwf	memset@n,c
  5267  003798  EC7E  F023         	call	_memset	;wreg free
  5268                           
  5269                           ;easat2_util_transmission.c: 62: sprintf(BEACON_COMMAND_BUFFER, " %3.0d %3.0d", command,
      +                           value);
  5270  00379C  0E80               	movlw	low util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5271  00379E  0100               	movlb	0	; () banked
  5272  0037A0  6FC4               	movwf	sprintf@wh& (0+255),b
  5273  0037A2  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5274  0037A4  0100               	movlb	0	; () banked
  5275  0037A6  6FC5               	movwf	(sprintf@wh+1)& (0+255),b
  5276  0037A8  0E65               	movlw	low (STR_2+10)
  5277  0037AA  0100               	movlb	0	; () banked
  5278  0037AC  6FC6               	movwf	sprintf@f& (0+255),b
  5279  0037AE  0E7F               	movlw	high (STR_2+10)
  5280  0037B0  0100               	movlb	0	; () banked
  5281  0037B2  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  5282  0037B4  C0D8  F0C8         	movff	util_command_ack_transmission@command,?_sprintf+4
  5283  0037B8  C0D9  F0C9         	movff	util_command_ack_transmission@command+1,?_sprintf+5
  5284  0037BC  C0DA  F0CA         	movff	util_command_ack_transmission@value,?_sprintf+6
  5285  0037C0  C0DB  F0CB         	movff	util_command_ack_transmission@value+1,?_sprintf+7
  5286  0037C4  ECEC  F021         	call	_sprintf	;wreg free
  5287                           
  5288                           ;easat2_util_transmission.c: 64: strcat(BEACON_COMMAND_MESSAGE, BEACON_COMMAND_BUFFER);
  5289  0037C8  0E00               	movlw	low util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5290  0037CA  6E1C               	movwf	strcat@to,c
  5291  0037CC  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5292  0037CE  6E1D               	movwf	strcat@to+1,c
  5293  0037D0  0E80               	movlw	low util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5294  0037D2  6E1E               	movwf	strcat@from,c
  5295  0037D4  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_BUFFER
  5296  0037D6  6E1F               	movwf	strcat@from+1,c
  5297  0037D8  EC5C  F022         	call	_strcat	;wreg free
  5298                           
  5299                           ;easat2_util_transmission.c: 69: for (int i = 0; i < strlen(BEACON_COMMAND_MESSAGE); i++
      +                          ) {
  5300  0037DC  0E00               	movlw	0
  5301  0037DE  0101               	movlb	1	; () banked
  5302  0037E0  6FC1               	movwf	(util_command_ack_transmission@i+1)& (0+255),b
  5303  0037E2  0E00               	movlw	0
  5304  0037E4  6FC0               	movwf	util_command_ack_transmission@i& (0+255),b
  5305  0037E6  D00E               	goto	l6621
  5306  0037E8                     l6617:
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;easat2_util_transmission.c: 70: util_transmit_letter(BEACON_COMMAND_MESSAGE[i]);
  5310  0037E8  0E00               	movlw	low util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5311  0037EA  0101               	movlb	1	; () banked
  5312  0037EC  25C0               	addwf	util_command_ack_transmission@i& (0+255),w,b
  5313  0037EE  6ED9               	movwf	fsr2l,c
  5314  0037F0  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5315  0037F2  0101               	movlb	1	; () banked
  5316  0037F4  21C1               	addwfc	(util_command_ack_transmission@i+1)& (0+255),w,b
  5317  0037F6  6EDA               	movwf	fsr2h,c
  5318  0037F8  50DF               	movf	indf2,w,c
  5319  0037FA  EC10  F00E         	call	_util_transmit_letter
  5320  0037FE  0101               	movlb	1	; () banked
  5321  003800  4BC0               	infsnz	util_command_ack_transmission@i& (0+255),f,b
  5322  003802  2BC1               	incf	(util_command_ack_transmission@i+1)& (0+255),f,b
  5323  003804                     l6621:
  5324                           
  5325                           ; BSR set to: 1
  5326  003804  0E00               	movlw	low util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5327  003806  6E1C               	movwf	strlen@s,c
  5328  003808  0E01               	movlw	high util_command_ack_transmission@BEACON_COMMAND_MESSAGE
  5329  00380A  6E1D               	movwf	strlen@s+1,c
  5330  00380C  ECC3  F021         	call	_strlen	;wreg free
  5331  003810  501C               	movf	?_strlen,w,c
  5332  003812  0101               	movlb	1	; () banked
  5333  003814  5DC0               	subwf	util_command_ack_transmission@i& (0+255),w,b
  5334  003816  501D               	movf	?_strlen+1,w,c
  5335  003818  0101               	movlb	1	; () banked
  5336  00381A  59C1               	subwfb	(util_command_ack_transmission@i+1)& (0+255),w,b
  5337  00381C  B0D8               	btfsc	status,0,c
  5338  00381E  0012               	return	
  5339  003820  D7E3               	goto	l6617
  5340  003822                     __end_of_util_command_ack_transmission:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           intcon	equ	0xFF2
  5347                           postinc0	equ	0xFEE
  5348                           wreg	equ	0xFE8
  5349                           postdec1	equ	0xFE5
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _util_transmit_letter *****************
  5360 ;; Defined at:
  5361 ;;		line 80 in file "easat2_util_transmission.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  letter          1    wreg     unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  letter          1   37[COMRAM] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5375 ;;      Params:         0       0       0       0       0       0       0
  5376 ;;      Locals:         1       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0
  5378 ;;      Totals:         1       0       0       0       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    5
  5382 ;; This function calls:
  5383 ;;		_util_transmit_morse_sequence
  5384 ;;		_util_transmit_space_between_letters
  5385 ;;		_util_transmit_space_between_words
  5386 ;; This function is called by:
  5387 ;;		_util_beacon_transmission
  5388 ;;		_util_command_ack_transmission
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text20
  5393  001C20                     __ptext20:
  5394                           	opt stack 0
  5395  001C20                     _util_transmit_letter:
  5396                           	opt stack 23
  5397                           
  5398                           ; BSR set to: 1
  5399                           ;incstack = 0
  5400                           ;util_transmit_letter@letter stored from wreg
  5401  001C20  6E26               	movwf	util_transmit_letter@letter,c
  5402                           
  5403                           ;easat2_util_transmission.c: 82: switch (letter) {
  5404  001C22  D174               	goto	l6571
  5405  001C24                     l6485:
  5406                           
  5407                           ;easat2_util_transmission.c: 88: util_transmit_morse_sequence((char*)".-");
  5408  001C24  0EE3               	movlw	low (STR_21+2)
  5409  001C26  0100               	movlb	0	; () banked
  5410  001C28  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5411  001C2A  0E7F               	movlw	high (STR_21+2)
  5412  001C2C  0100               	movlb	0	; () banked
  5413  001C2E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5414  001C30  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5415                           
  5416                           ;easat2_util_transmission.c: 89: break;
  5417  001C34  D1EA               	goto	l6573
  5418  001C36                     l6487:
  5419                           
  5420                           ;easat2_util_transmission.c: 91: util_transmit_morse_sequence((char*)"-...");
  5421  001C36  0ECB               	movlw	low (STR_38+1)
  5422  001C38  0100               	movlb	0	; () banked
  5423  001C3A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5424  001C3C  0E7F               	movlw	high (STR_38+1)
  5425  001C3E  0100               	movlb	0	; () banked
  5426  001C40  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5427  001C42  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5428                           
  5429                           ;easat2_util_transmission.c: 92: break;
  5430  001C46  D1E1               	goto	l6573
  5431  001C48                     l6489:
  5432                           
  5433                           ;easat2_util_transmission.c: 94: util_transmit_morse_sequence((char*)"-.-.");
  5434  001C48  0EF0               	movlw	low STR_7
  5435  001C4A  0100               	movlb	0	; () banked
  5436  001C4C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5437  001C4E  0E7F               	movlw	high STR_7
  5438  001C50  0100               	movlb	0	; () banked
  5439  001C52  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5440  001C54  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5441                           
  5442                           ;easat2_util_transmission.c: 95: break;
  5443  001C58  D1D8               	goto	l6573
  5444  001C5A                     l6491:
  5445                           
  5446                           ;easat2_util_transmission.c: 97: util_transmit_morse_sequence((char*)"-..");
  5447  001C5A  0EC6               	movlw	low (STR_39+2)
  5448  001C5C  0100               	movlb	0	; () banked
  5449  001C5E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5450  001C60  0E7F               	movlw	high (STR_39+2)
  5451  001C62  0100               	movlb	0	; () banked
  5452  001C64  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5453  001C66  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5454                           
  5455                           ;easat2_util_transmission.c: 98: break;
  5456  001C6A  D1CF               	goto	l6573
  5457  001C6C                     l6493:
  5458                           
  5459                           ;easat2_util_transmission.c: 100: util_transmit_morse_sequence((char*)".");
  5460  001C6C  0EBC               	movlw	low (STR_40+4)
  5461  001C6E  0100               	movlb	0	; () banked
  5462  001C70  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5463  001C72  0E7F               	movlw	high (STR_40+4)
  5464  001C74  0100               	movlb	0	; () banked
  5465  001C76  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5466  001C78  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5467                           
  5468                           ;easat2_util_transmission.c: 101: break;
  5469  001C7C  D1C6               	goto	l6573
  5470  001C7E                     l6495:
  5471                           
  5472                           ;easat2_util_transmission.c: 103: util_transmit_morse_sequence((char*)"..-.");
  5473  001C7E  0EBF               	movlw	low (STR_43+1)
  5474  001C80  0100               	movlb	0	; () banked
  5475  001C82  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5476  001C84  0E7F               	movlw	high (STR_43+1)
  5477  001C86  0100               	movlb	0	; () banked
  5478  001C88  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5479  001C8A  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5480                           
  5481                           ;easat2_util_transmission.c: 104: break;
  5482  001C8E  D1BD               	goto	l6573
  5483  001C90                     l6497:
  5484                           
  5485                           ;easat2_util_transmission.c: 106: util_transmit_morse_sequence((char*)"--.");
  5486  001C90  0EBA               	movlw	low (STR_40+2)
  5487  001C92  0100               	movlb	0	; () banked
  5488  001C94  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5489  001C96  0E7F               	movlw	high (STR_40+2)
  5490  001C98  0100               	movlb	0	; () banked
  5491  001C9A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5492  001C9C  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5493                           
  5494                           ;easat2_util_transmission.c: 107: break;
  5495  001CA0  D1B4               	goto	l6573
  5496  001CA2                     l6499:
  5497                           
  5498                           ;easat2_util_transmission.c: 109: util_transmit_morse_sequence((char*)"....");
  5499  001CA2  0ED1               	movlw	low (STR_37+1)
  5500  001CA4  0100               	movlb	0	; () banked
  5501  001CA6  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5502  001CA8  0E7F               	movlw	high (STR_37+1)
  5503  001CAA  0100               	movlb	0	; () banked
  5504  001CAC  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5505  001CAE  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5506                           
  5507                           ;easat2_util_transmission.c: 110: break;
  5508  001CB2  D1AB               	goto	l6573
  5509  001CB4                     l6501:
  5510                           
  5511                           ;easat2_util_transmission.c: 112: util_transmit_morse_sequence((char*)"..");
  5512  001CB4  0EC7               	movlw	low (STR_39+3)
  5513  001CB6  0100               	movlb	0	; () banked
  5514  001CB8  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5515  001CBA  0E7F               	movlw	high (STR_39+3)
  5516  001CBC  0100               	movlb	0	; () banked
  5517  001CBE  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5518  001CC0  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5519                           
  5520                           ;easat2_util_transmission.c: 113: break;
  5521  001CC4  D1A2               	goto	l6573
  5522  001CC6                     l6503:
  5523                           
  5524                           ;easat2_util_transmission.c: 115: util_transmit_morse_sequence((char*)".---");
  5525  001CC6  0EAD               	movlw	low (STR_33+1)
  5526  001CC8  0100               	movlb	0	; () banked
  5527  001CCA  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5528  001CCC  0E7F               	movlw	high (STR_33+1)
  5529  001CCE  0100               	movlb	0	; () banked
  5530  001CD0  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5531  001CD2  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5532                           
  5533                           ;easat2_util_transmission.c: 116: break;
  5534  001CD6  D199               	goto	l6573
  5535  001CD8                     l6505:
  5536                           
  5537                           ;easat2_util_transmission.c: 118: util_transmit_morse_sequence((char*)"-.-");
  5538  001CD8  0EE2               	movlw	low (STR_21+1)
  5539  001CDA  0100               	movlb	0	; () banked
  5540  001CDC  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5541  001CDE  0E7F               	movlw	high (STR_21+1)
  5542  001CE0  0100               	movlb	0	; () banked
  5543  001CE2  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5544  001CE4  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5545                           
  5546                           ;easat2_util_transmission.c: 119: break;
  5547  001CE8  D190               	goto	l6573
  5548  001CEA                     l6507:
  5549                           
  5550                           ;easat2_util_transmission.c: 121: util_transmit_morse_sequence((char*)".-..");
  5551  001CEA  0EF5               	movlw	low STR_16
  5552  001CEC  0100               	movlb	0	; () banked
  5553  001CEE  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5554  001CF0  0E7F               	movlw	high STR_16
  5555  001CF2  0100               	movlb	0	; () banked
  5556  001CF4  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5557  001CF6  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5558                           
  5559                           ;easat2_util_transmission.c: 122: break;
  5560  001CFA  D187               	goto	l6573
  5561  001CFC                     l6509:
  5562                           
  5563                           ;easat2_util_transmission.c: 124: util_transmit_morse_sequence((char*)"--");
  5564  001CFC  0EA3               	movlw	low (STR_31+3)
  5565  001CFE  0100               	movlb	0	; () banked
  5566  001D00  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5567  001D02  0E7F               	movlw	high (STR_31+3)
  5568  001D04  0100               	movlb	0	; () banked
  5569  001D06  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5570  001D08  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5571                           
  5572                           ;easat2_util_transmission.c: 125: break;
  5573  001D0C  D17E               	goto	l6573
  5574  001D0E                     l6511:
  5575                           
  5576                           ;easat2_util_transmission.c: 127: util_transmit_morse_sequence((char*)"-.");
  5577  001D0E  0EBB               	movlw	low (STR_40+3)
  5578  001D10  0100               	movlb	0	; () banked
  5579  001D12  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5580  001D14  0E7F               	movlw	high (STR_40+3)
  5581  001D16  0100               	movlb	0	; () banked
  5582  001D18  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5583  001D1A  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5584                           
  5585                           ;easat2_util_transmission.c: 128: break;
  5586  001D1E  D175               	goto	l6573
  5587  001D20                     l6513:
  5588                           
  5589                           ;easat2_util_transmission.c: 130: util_transmit_morse_sequence((char*)"---");
  5590  001D20  0EA2               	movlw	low (STR_31+2)
  5591  001D22  0100               	movlb	0	; () banked
  5592  001D24  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5593  001D26  0E7F               	movlw	high (STR_31+2)
  5594  001D28  0100               	movlb	0	; () banked
  5595  001D2A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5596  001D2C  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5597                           
  5598                           ;easat2_util_transmission.c: 131: break;
  5599  001D30  D16C               	goto	l6573
  5600  001D32                     l6515:
  5601                           
  5602                           ;easat2_util_transmission.c: 133: util_transmit_morse_sequence((char*)".--.");
  5603  001D32  0EEB               	movlw	low STR_20
  5604  001D34  0100               	movlb	0	; () banked
  5605  001D36  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5606  001D38  0E7F               	movlw	high STR_20
  5607  001D3A  0100               	movlb	0	; () banked
  5608  001D3C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5609  001D3E  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5610                           
  5611                           ;easat2_util_transmission.c: 134: break;
  5612  001D42  D163               	goto	l6573
  5613  001D44                     l6517:
  5614                           
  5615                           ;easat2_util_transmission.c: 136: util_transmit_morse_sequence((char*)"--.-");
  5616  001D44  0EE1               	movlw	low STR_21
  5617  001D46  0100               	movlb	0	; () banked
  5618  001D48  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5619  001D4A  0E7F               	movlw	high STR_21
  5620  001D4C  0100               	movlb	0	; () banked
  5621  001D4E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5622  001D50  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5623                           
  5624                           ;easat2_util_transmission.c: 137: break;
  5625  001D54  D15A               	goto	l6573
  5626  001D56                     l6519:
  5627                           
  5628                           ;easat2_util_transmission.c: 139: util_transmit_morse_sequence((char*)".-.");
  5629  001D56  0EF1               	movlw	low (STR_7+1)
  5630  001D58  0100               	movlb	0	; () banked
  5631  001D5A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5632  001D5C  0E7F               	movlw	high (STR_7+1)
  5633  001D5E  0100               	movlb	0	; () banked
  5634  001D60  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5635  001D62  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5636                           
  5637                           ;easat2_util_transmission.c: 140: break;
  5638  001D66  D151               	goto	l6573
  5639  001D68                     l6521:
  5640                           
  5641                           ;easat2_util_transmission.c: 142: util_transmit_morse_sequence((char*)"...");
  5642  001D68  0ECC               	movlw	low (STR_38+2)
  5643  001D6A  0100               	movlb	0	; () banked
  5644  001D6C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5645  001D6E  0E7F               	movlw	high (STR_38+2)
  5646  001D70  0100               	movlb	0	; () banked
  5647  001D72  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5648  001D74  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5649                           
  5650                           ;easat2_util_transmission.c: 143: break;
  5651  001D78  D148               	goto	l6573
  5652  001D7A                     l6523:
  5653                           
  5654                           ;easat2_util_transmission.c: 145: util_transmit_morse_sequence((char*)"-");
  5655  001D7A  0EA4               	movlw	low (STR_31+4)
  5656  001D7C  0100               	movlb	0	; () banked
  5657  001D7E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5658  001D80  0E7F               	movlw	high (STR_31+4)
  5659  001D82  0100               	movlb	0	; () banked
  5660  001D84  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5661  001D86  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5662                           
  5663                           ;easat2_util_transmission.c: 146: break;
  5664  001D8A  D13F               	goto	l6573
  5665  001D8C                     l6525:
  5666                           
  5667                           ;easat2_util_transmission.c: 148: util_transmit_morse_sequence((char*)"..-");
  5668  001D8C  0EE7               	movlw	low (STR_28+1)
  5669  001D8E  0100               	movlb	0	; () banked
  5670  001D90  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5671  001D92  0E7F               	movlw	high (STR_28+1)
  5672  001D94  0100               	movlb	0	; () banked
  5673  001D96  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5674  001D98  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5675                           
  5676                           ;easat2_util_transmission.c: 149: break;
  5677  001D9C  D136               	goto	l6573
  5678  001D9E                     l6527:
  5679                           
  5680                           ;easat2_util_transmission.c: 151: util_transmit_morse_sequence((char*)"...-");
  5681  001D9E  0E8D               	movlw	low (STR_45+2)
  5682  001DA0  0100               	movlb	0	; () banked
  5683  001DA2  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5684  001DA4  0E7F               	movlw	high (STR_45+2)
  5685  001DA6  0100               	movlb	0	; () banked
  5686  001DA8  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5687  001DAA  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5688                           
  5689                           ;easat2_util_transmission.c: 152: break;
  5690  001DAE  D12D               	goto	l6573
  5691  001DB0                     l6529:
  5692                           
  5693                           ;easat2_util_transmission.c: 154: util_transmit_morse_sequence((char*)".--");
  5694  001DB0  0EDD               	movlw	low (STR_29+1)
  5695  001DB2  0100               	movlb	0	; () banked
  5696  001DB4  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5697  001DB6  0E7F               	movlw	high (STR_29+1)
  5698  001DB8  0100               	movlb	0	; () banked
  5699  001DBA  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5700  001DBC  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5701                           
  5702                           ;easat2_util_transmission.c: 155: break;
  5703  001DC0  D124               	goto	l6573
  5704  001DC2                     l6531:
  5705                           
  5706                           ;easat2_util_transmission.c: 157: util_transmit_morse_sequence((char*)"-..-");
  5707  001DC2  0EE6               	movlw	low STR_28
  5708  001DC4  0100               	movlb	0	; () banked
  5709  001DC6  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5710  001DC8  0E7F               	movlw	high STR_28
  5711  001DCA  0100               	movlb	0	; () banked
  5712  001DCC  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5713  001DCE  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5714                           
  5715                           ;easat2_util_transmission.c: 158: break;
  5716  001DD2  D11B               	goto	l6573
  5717  001DD4                     l6533:
  5718                           
  5719                           ;easat2_util_transmission.c: 160: util_transmit_morse_sequence((char*)"-.--");
  5720  001DD4  0EDC               	movlw	low STR_29
  5721  001DD6  0100               	movlb	0	; () banked
  5722  001DD8  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5723  001DDA  0E7F               	movlw	high STR_29
  5724  001DDC  0100               	movlb	0	; () banked
  5725  001DDE  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5726  001DE0  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5727                           
  5728                           ;easat2_util_transmission.c: 161: break;
  5729  001DE4  D112               	goto	l6573
  5730  001DE6                     l6535:
  5731                           
  5732                           ;easat2_util_transmission.c: 163: util_transmit_morse_sequence((char*)"--..");
  5733  001DE6  0EC5               	movlw	low (STR_39+1)
  5734  001DE8  0100               	movlb	0	; () banked
  5735  001DEA  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5736  001DEC  0E7F               	movlw	high (STR_39+1)
  5737  001DEE  0100               	movlb	0	; () banked
  5738  001DF0  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5739  001DF2  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5740                           
  5741                           ;easat2_util_transmission.c: 164: break;
  5742  001DF6  D109               	goto	l6573
  5743  001DF8                     l6537:
  5744                           
  5745                           ;easat2_util_transmission.c: 166: util_transmit_morse_sequence((char*)"-----");
  5746  001DF8  0EA0               	movlw	low STR_31
  5747  001DFA  0100               	movlb	0	; () banked
  5748  001DFC  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5749  001DFE  0E7F               	movlw	high STR_31
  5750  001E00  0100               	movlb	0	; () banked
  5751  001E02  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5752  001E04  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5753                           
  5754                           ;easat2_util_transmission.c: 167: break;
  5755  001E08  D100               	goto	l6573
  5756  001E0A                     l6539:
  5757                           
  5758                           ;easat2_util_transmission.c: 169: util_transmit_morse_sequence((char*)".----");
  5759  001E0A  0EA6               	movlw	low STR_32
  5760  001E0C  0100               	movlb	0	; () banked
  5761  001E0E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5762  001E10  0E7F               	movlw	high STR_32
  5763  001E12  0100               	movlb	0	; () banked
  5764  001E14  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5765  001E16  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5766                           
  5767                           ;easat2_util_transmission.c: 170: break;
  5768  001E1A  D0F7               	goto	l6573
  5769  001E1C                     l6541:
  5770                           
  5771                           ;easat2_util_transmission.c: 172: util_transmit_morse_sequence((char*)"..---");
  5772  001E1C  0EAC               	movlw	low STR_33
  5773  001E1E  0100               	movlb	0	; () banked
  5774  001E20  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5775  001E22  0E7F               	movlw	high STR_33
  5776  001E24  0100               	movlb	0	; () banked
  5777  001E26  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5778  001E28  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5779                           
  5780                           ;easat2_util_transmission.c: 173: break;
  5781  001E2C  D0EE               	goto	l6573
  5782  001E2E                     l6543:
  5783                           
  5784                           ;easat2_util_transmission.c: 175: util_transmit_morse_sequence((char*)"...--");
  5785  001E2E  0EB2               	movlw	low STR_34
  5786  001E30  0100               	movlb	0	; () banked
  5787  001E32  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5788  001E34  0E7F               	movlw	high STR_34
  5789  001E36  0100               	movlb	0	; () banked
  5790  001E38  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5791  001E3A  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5792                           
  5793                           ;easat2_util_transmission.c: 176: break;
  5794  001E3E  D0E5               	goto	l6573
  5795  001E40                     l6545:
  5796                           
  5797                           ;easat2_util_transmission.c: 178: util_transmit_morse_sequence((char*)"....-");
  5798  001E40  0E8C               	movlw	low (STR_45+1)
  5799  001E42  0100               	movlb	0	; () banked
  5800  001E44  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5801  001E46  0E7F               	movlw	high (STR_45+1)
  5802  001E48  0100               	movlb	0	; () banked
  5803  001E4A  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5804  001E4C  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5805                           
  5806                           ;easat2_util_transmission.c: 179: break;
  5807  001E50  D0DC               	goto	l6573
  5808  001E52                     l6547:
  5809                           
  5810                           ;easat2_util_transmission.c: 181: util_transmit_morse_sequence((char*)".....");
  5811  001E52  0ED6               	movlw	low STR_36
  5812  001E54  0100               	movlb	0	; () banked
  5813  001E56  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5814  001E58  0E7F               	movlw	high STR_36
  5815  001E5A  0100               	movlb	0	; () banked
  5816  001E5C  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5817  001E5E  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5818                           
  5819                           ;easat2_util_transmission.c: 182: break;
  5820  001E62  D0D3               	goto	l6573
  5821  001E64                     l6549:
  5822                           
  5823                           ;easat2_util_transmission.c: 184: util_transmit_morse_sequence((char*)"-....");
  5824  001E64  0ED0               	movlw	low STR_37
  5825  001E66  0100               	movlb	0	; () banked
  5826  001E68  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5827  001E6A  0E7F               	movlw	high STR_37
  5828  001E6C  0100               	movlb	0	; () banked
  5829  001E6E  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5830  001E70  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5831                           
  5832                           ;easat2_util_transmission.c: 185: break;
  5833  001E74  D0CA               	goto	l6573
  5834  001E76                     l6551:
  5835                           
  5836                           ;easat2_util_transmission.c: 187: util_transmit_morse_sequence((char*)"--...");
  5837  001E76  0ECA               	movlw	low STR_38
  5838  001E78  0100               	movlb	0	; () banked
  5839  001E7A  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5840  001E7C  0E7F               	movlw	high STR_38
  5841  001E7E  0100               	movlb	0	; () banked
  5842  001E80  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5843  001E82  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5844                           
  5845                           ;easat2_util_transmission.c: 188: break;
  5846  001E86  D0C1               	goto	l6573
  5847  001E88                     l6553:
  5848                           
  5849                           ;easat2_util_transmission.c: 190: util_transmit_morse_sequence((char*)"---..");
  5850  001E88  0EC4               	movlw	low STR_39
  5851  001E8A  0100               	movlb	0	; () banked
  5852  001E8C  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5853  001E8E  0E7F               	movlw	high STR_39
  5854  001E90  0100               	movlb	0	; () banked
  5855  001E92  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5856  001E94  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5857                           
  5858                           ;easat2_util_transmission.c: 191: break;
  5859  001E98  D0B8               	goto	l6573
  5860  001E9A                     l6555:
  5861                           
  5862                           ;easat2_util_transmission.c: 193: util_transmit_morse_sequence((char*)"----.");
  5863  001E9A  0EB8               	movlw	low STR_40
  5864  001E9C  0100               	movlb	0	; () banked
  5865  001E9E  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5866  001EA0  0E7F               	movlw	high STR_40
  5867  001EA2  0100               	movlb	0	; () banked
  5868  001EA4  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5869  001EA6  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5870                           
  5871                           ;easat2_util_transmission.c: 194: break;
  5872  001EAA  D0AF               	goto	l6573
  5873  001EAC                     l6557:
  5874                           
  5875                           ;easat2_util_transmission.c: 196: util_transmit_morse_sequence((char*)"--..--");
  5876  001EAC  0E7D               	movlw	low STR_41
  5877  001EAE  0100               	movlb	0	; () banked
  5878  001EB0  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5879  001EB2  0E7F               	movlw	high STR_41
  5880  001EB4  0100               	movlb	0	; () banked
  5881  001EB6  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5882  001EB8  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5883                           
  5884                           ;easat2_util_transmission.c: 197: break;
  5885  001EBC  D0A6               	goto	l6573
  5886  001EBE                     l6559:
  5887                           
  5888                           ;easat2_util_transmission.c: 199: util_transmit_morse_sequence((char*)"..--..");
  5889  001EBE  0E92               	movlw	low STR_42
  5890  001EC0  0100               	movlb	0	; () banked
  5891  001EC2  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5892  001EC4  0E7F               	movlw	high STR_42
  5893  001EC6  0100               	movlb	0	; () banked
  5894  001EC8  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5895  001ECA  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5896                           
  5897                           ;easat2_util_transmission.c: 200: break;
  5898  001ECE  D09D               	goto	l6573
  5899  001ED0                     l6561:
  5900                           
  5901                           ;easat2_util_transmission.c: 202: util_transmit_morse_sequence((char*)"-..-.");
  5902  001ED0  0EBE               	movlw	low STR_43
  5903  001ED2  0100               	movlb	0	; () banked
  5904  001ED4  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5905  001ED6  0E7F               	movlw	high STR_43
  5906  001ED8  0100               	movlb	0	; () banked
  5907  001EDA  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5908  001EDC  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5909                           
  5910                           ;easat2_util_transmission.c: 203: break;
  5911  001EE0  D094               	goto	l6573
  5912  001EE2                     l6563:
  5913                           
  5914                           ;easat2_util_transmission.c: 205: util_transmit_morse_sequence((char*)".-.-.-");
  5915  001EE2  0E84               	movlw	low STR_44
  5916  001EE4  0100               	movlb	0	; () banked
  5917  001EE6  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5918  001EE8  0E7F               	movlw	high STR_44
  5919  001EEA  0100               	movlb	0	; () banked
  5920  001EEC  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5921  001EEE  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5922                           
  5923                           ;easat2_util_transmission.c: 206: break;
  5924  001EF2  D08B               	goto	l6573
  5925  001EF4                     l6565:
  5926                           
  5927                           ;easat2_util_transmission.c: 208: util_transmit_morse_sequence((char*)"-....-");
  5928  001EF4  0E8B               	movlw	low STR_45
  5929  001EF6  0100               	movlb	0	; () banked
  5930  001EF8  6F71               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5931  001EFA  0E7F               	movlw	high STR_45
  5932  001EFC  0100               	movlb	0	; () banked
  5933  001EFE  6F72               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5934  001F00  EC3C  F021         	call	_util_transmit_morse_sequence	;wreg free
  5935                           
  5936                           ;easat2_util_transmission.c: 209: break;
  5937  001F04  D082               	goto	l6573
  5938  001F06                     l6567:
  5939                           
  5940                           ;easat2_util_transmission.c: 211: util_transmit_space_between_words();
  5941  001F06  EC1B  F024         	call	_util_transmit_space_between_words	;wreg free
  5942                           
  5943                           ;easat2_util_transmission.c: 216: }
  5944                           
  5945                           ;easat2_util_transmission.c: 214: break;
  5946                           
  5947                           ;easat2_util_transmission.c: 213: default:
  5948                           
  5949                           ;easat2_util_transmission.c: 212: break;
  5950  001F0A  D07F               	goto	l6573
  5951  001F0C                     l6571:
  5952  001F0C  5026               	movf	util_transmit_letter@letter,w,c
  5953                           
  5954                           ; Switch size 1, requested type "space"
  5955                           ; Number of cases is 42, Range of values is 32 to 90
  5956                           ; switch strategies available:
  5957                           ; Name         Instructions Cycles
  5958                           ; simple_byte          127    64 (average)
  5959                           ;	Chosen strategy is simple_byte
  5960  001F0E  0A20               	xorlw	32	; case 32
  5961  001F10  B4D8               	btfsc	status,2,c
  5962  001F12  D7F9               	goto	l6567
  5963  001F14  0A0C               	xorlw	12	; case 44
  5964  001F16  B4D8               	btfsc	status,2,c
  5965  001F18  D7C9               	goto	l6557
  5966  001F1A  0A01               	xorlw	1	; case 45
  5967  001F1C  B4D8               	btfsc	status,2,c
  5968  001F1E  D7EA               	goto	l6565
  5969  001F20  0A03               	xorlw	3	; case 46
  5970  001F22  B4D8               	btfsc	status,2,c
  5971  001F24  D7DE               	goto	l6563
  5972  001F26  0A01               	xorlw	1	; case 47
  5973  001F28  B4D8               	btfsc	status,2,c
  5974  001F2A  D7D2               	goto	l6561
  5975  001F2C  0A1F               	xorlw	31	; case 48
  5976  001F2E  B4D8               	btfsc	status,2,c
  5977  001F30  D763               	goto	l6537
  5978  001F32  0A01               	xorlw	1	; case 49
  5979  001F34  B4D8               	btfsc	status,2,c
  5980  001F36  D769               	goto	l6539
  5981  001F38  0A03               	xorlw	3	; case 50
  5982  001F3A  B4D8               	btfsc	status,2,c
  5983  001F3C  D76F               	goto	l6541
  5984  001F3E  0A01               	xorlw	1	; case 51
  5985  001F40  B4D8               	btfsc	status,2,c
  5986  001F42  D775               	goto	l6543
  5987  001F44  0A07               	xorlw	7	; case 52
  5988  001F46  B4D8               	btfsc	status,2,c
  5989  001F48  D77B               	goto	l6545
  5990  001F4A  0A01               	xorlw	1	; case 53
  5991  001F4C  B4D8               	btfsc	status,2,c
  5992  001F4E  D781               	goto	l6547
  5993  001F50  0A03               	xorlw	3	; case 54
  5994  001F52  B4D8               	btfsc	status,2,c
  5995  001F54  D787               	goto	l6549
  5996  001F56  0A01               	xorlw	1	; case 55
  5997  001F58  B4D8               	btfsc	status,2,c
  5998  001F5A  D78D               	goto	l6551
  5999  001F5C  0A0F               	xorlw	15	; case 56
  6000  001F5E  B4D8               	btfsc	status,2,c
  6001  001F60  D793               	goto	l6553
  6002  001F62  0A01               	xorlw	1	; case 57
  6003  001F64  B4D8               	btfsc	status,2,c
  6004  001F66  D799               	goto	l6555
  6005  001F68  0A06               	xorlw	6	; case 63
  6006  001F6A  B4D8               	btfsc	status,2,c
  6007  001F6C  D7A8               	goto	l6559
  6008  001F6E  0A7E               	xorlw	126	; case 65
  6009  001F70  B4D8               	btfsc	status,2,c
  6010  001F72  D658               	goto	l6485
  6011  001F74  0A03               	xorlw	3	; case 66
  6012  001F76  B4D8               	btfsc	status,2,c
  6013  001F78  D65E               	goto	l6487
  6014  001F7A  0A01               	xorlw	1	; case 67
  6015  001F7C  B4D8               	btfsc	status,2,c
  6016  001F7E  D664               	goto	l6489
  6017  001F80  0A07               	xorlw	7	; case 68
  6018  001F82  B4D8               	btfsc	status,2,c
  6019  001F84  D66A               	goto	l6491
  6020  001F86  0A01               	xorlw	1	; case 69
  6021  001F88  B4D8               	btfsc	status,2,c
  6022  001F8A  D670               	goto	l6493
  6023  001F8C  0A03               	xorlw	3	; case 70
  6024  001F8E  B4D8               	btfsc	status,2,c
  6025  001F90  D676               	goto	l6495
  6026  001F92  0A01               	xorlw	1	; case 71
  6027  001F94  B4D8               	btfsc	status,2,c
  6028  001F96  D67C               	goto	l6497
  6029  001F98  0A0F               	xorlw	15	; case 72
  6030  001F9A  B4D8               	btfsc	status,2,c
  6031  001F9C  D682               	goto	l6499
  6032  001F9E  0A01               	xorlw	1	; case 73
  6033  001FA0  B4D8               	btfsc	status,2,c
  6034  001FA2  D688               	goto	l6501
  6035  001FA4  0A03               	xorlw	3	; case 74
  6036  001FA6  B4D8               	btfsc	status,2,c
  6037  001FA8  D68E               	goto	l6503
  6038  001FAA  0A01               	xorlw	1	; case 75
  6039  001FAC  B4D8               	btfsc	status,2,c
  6040  001FAE  D694               	goto	l6505
  6041  001FB0  0A07               	xorlw	7	; case 76
  6042  001FB2  B4D8               	btfsc	status,2,c
  6043  001FB4  D69A               	goto	l6507
  6044  001FB6  0A01               	xorlw	1	; case 77
  6045  001FB8  B4D8               	btfsc	status,2,c
  6046  001FBA  D6A0               	goto	l6509
  6047  001FBC  0A03               	xorlw	3	; case 78
  6048  001FBE  B4D8               	btfsc	status,2,c
  6049  001FC0  D6A6               	goto	l6511
  6050  001FC2  0A01               	xorlw	1	; case 79
  6051  001FC4  B4D8               	btfsc	status,2,c
  6052  001FC6  D6AC               	goto	l6513
  6053  001FC8  0A1F               	xorlw	31	; case 80
  6054  001FCA  B4D8               	btfsc	status,2,c
  6055  001FCC  D6B2               	goto	l6515
  6056  001FCE  0A01               	xorlw	1	; case 81
  6057  001FD0  B4D8               	btfsc	status,2,c
  6058  001FD2  D6B8               	goto	l6517
  6059  001FD4  0A03               	xorlw	3	; case 82
  6060  001FD6  B4D8               	btfsc	status,2,c
  6061  001FD8  D6BE               	goto	l6519
  6062  001FDA  0A01               	xorlw	1	; case 83
  6063  001FDC  B4D8               	btfsc	status,2,c
  6064  001FDE  D6C4               	goto	l6521
  6065  001FE0  0A07               	xorlw	7	; case 84
  6066  001FE2  B4D8               	btfsc	status,2,c
  6067  001FE4  D6CA               	goto	l6523
  6068  001FE6  0A01               	xorlw	1	; case 85
  6069  001FE8  B4D8               	btfsc	status,2,c
  6070  001FEA  D6D0               	goto	l6525
  6071  001FEC  0A03               	xorlw	3	; case 86
  6072  001FEE  B4D8               	btfsc	status,2,c
  6073  001FF0  D6D6               	goto	l6527
  6074  001FF2  0A01               	xorlw	1	; case 87
  6075  001FF4  B4D8               	btfsc	status,2,c
  6076  001FF6  D6DC               	goto	l6529
  6077  001FF8  0A0F               	xorlw	15	; case 88
  6078  001FFA  B4D8               	btfsc	status,2,c
  6079  001FFC  D6E2               	goto	l6531
  6080  001FFE  0A01               	xorlw	1	; case 89
  6081  002000  B4D8               	btfsc	status,2,c
  6082  002002  D6E8               	goto	l6533
  6083  002004  0A03               	xorlw	3	; case 90
  6084  002006  B4D8               	btfsc	status,2,c
  6085  002008  D6EE               	goto	l6535
  6086  00200A                     l6573:
  6087                           
  6088                           ;easat2_util_transmission.c: 219: util_transmit_space_between_letters();
  6089  00200A  EC22  F024         	call	_util_transmit_space_between_letters	;wreg free
  6090  00200E  0012               	return		;funcret
  6091  002010                     __end_of_util_transmit_letter:
  6092                           	opt stack 0
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           intcon	equ	0xFF2
  6098                           postinc0	equ	0xFEE
  6099                           wreg	equ	0xFE8
  6100                           postdec1	equ	0xFE5
  6101                           fsr1h	equ	0xFE2
  6102                           fsr1l	equ	0xFE1
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function _util_transmit_space_between_words *****************
  6111 ;; Defined at:
  6112 ;;		line 314 in file "easat2_util_transmission.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6126 ;;      Params:         0       0       0       0       0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0
  6129 ;;      Totals:         0       0       0       0       0       0       0
  6130 ;;Total ram usage:        0 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    3
  6133 ;; This function calls:
  6134 ;;		_util_waits_delay_ms
  6135 ;; This function is called by:
  6136 ;;		_util_transmit_letter
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text21
  6141  004836                     __ptext21:
  6142                           	opt stack 0
  6143  004836                     _util_transmit_space_between_words:
  6144                           	opt stack 24
  6145                           
  6146                           ;easat2_util_transmission.c: 315: util_waits_delay_ms(7*(int)(2400/32));
  6147                           
  6148                           ;incstack = 0
  6149  004836  0E02               	movlw	2
  6150  004838  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6151  00483A  0E0D               	movlw	13
  6152  00483C  6E1C               	movwf	util_waits_delay_ms@ms,c
  6153  00483E  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  6154  004842  0012               	return		;funcret
  6155  004844                     __end_of_util_transmit_space_between_words:
  6156                           	opt stack 0
  6157                           tblptru	equ	0xFF8
  6158                           tblptrh	equ	0xFF7
  6159                           tblptrl	equ	0xFF6
  6160                           tablat	equ	0xFF5
  6161                           intcon	equ	0xFF2
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           postdec1	equ	0xFE5
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           indf2	equ	0xFDF
  6168                           postinc2	equ	0xFDE
  6169                           postdec2	equ	0xFDD
  6170                           fsr2h	equ	0xFDA
  6171                           fsr2l	equ	0xFD9
  6172                           status	equ	0xFD8
  6173                           
  6174 ;; *************** function _util_transmit_space_between_letters *****************
  6175 ;; Defined at:
  6176 ;;		line 307 in file "easat2_util_transmission.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6190 ;;      Params:         0       0       0       0       0       0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0
  6193 ;;      Totals:         0       0       0       0       0       0       0
  6194 ;;Total ram usage:        0 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    3
  6197 ;; This function calls:
  6198 ;;		_util_waits_delay_ms
  6199 ;; This function is called by:
  6200 ;;		_util_transmit_letter
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text22
  6205  004844                     __ptext22:
  6206                           	opt stack 0
  6207  004844                     _util_transmit_space_between_letters:
  6208                           	opt stack 24
  6209                           
  6210                           ;easat2_util_transmission.c: 308: util_waits_delay_ms(3*(int)(2400/32));
  6211                           
  6212                           ;incstack = 0
  6213  004844  0E00               	movlw	0
  6214  004846  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6215  004848  0EE1               	movlw	225
  6216  00484A  6E1C               	movwf	util_waits_delay_ms@ms,c
  6217  00484C  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  6218  004850  0012               	return		;funcret
  6219  004852                     __end_of_util_transmit_space_between_letters:
  6220                           	opt stack 0
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           intcon	equ	0xFF2
  6226                           postinc0	equ	0xFEE
  6227                           wreg	equ	0xFE8
  6228                           postdec1	equ	0xFE5
  6229                           fsr1h	equ	0xFE2
  6230                           fsr1l	equ	0xFE1
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           
  6238 ;; *************** function _util_transmit_morse_sequence *****************
  6239 ;; Defined at:
  6240 ;;		line 229 in file "easat2_util_transmission.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  morse_sequen    2   17[BANK0 ] PTR unsigned char 
  6243 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  6244 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  6245 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  6246 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  6247 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  6248 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  6249 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  6250 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  6251 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  6252 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  6253 ;;		 -> STR_5(3), 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  i               2   35[COMRAM] int 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6265 ;;      Params:         0       2       0       0       0       0       0
  6266 ;;      Locals:         2       0       0       0       0       0       0
  6267 ;;      Temps:          2       0       0       0       0       0       0
  6268 ;;      Totals:         4       2       0       0       0       0       0
  6269 ;;Total ram usage:        6 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    4
  6272 ;; This function calls:
  6273 ;;		_strlen
  6274 ;;		_util_transmit_dash
  6275 ;;		_util_transmit_dot
  6276 ;;		_util_transmit_space_between_dots_dashes
  6277 ;; This function is called by:
  6278 ;;		_util_transmit_letter
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text23
  6283  004278                     __ptext23:
  6284                           	opt stack 0
  6285  004278                     _util_transmit_morse_sequence:
  6286                           	opt stack 23
  6287                           
  6288                           ;easat2_util_transmission.c: 233: for (int i = 0; i < strlen(morse_sequence); i++) {
  6289                           
  6290                           ;incstack = 0
  6291  004278  0E00               	movlw	0
  6292  00427A  6E25               	movwf	util_transmit_morse_sequence@i+1,c
  6293  00427C  0E00               	movlw	0
  6294  00427E  6E24               	movwf	util_transmit_morse_sequence@i,c
  6295  004280  D01E               	goto	l5961
  6296  004282                     l5949:
  6297                           
  6298                           ;easat2_util_transmission.c: 238: util_transmit_dot();
  6299  004282  ECE9  F023         	call	_util_transmit_dot	;wreg free
  6300                           
  6301                           ;easat2_util_transmission.c: 239: break;
  6302  004286  D017               	goto	l5957
  6303  004288                     l5951:
  6304                           
  6305                           ;easat2_util_transmission.c: 241: util_transmit_dash();
  6306  004288  ECF6  F023         	call	_util_transmit_dash	;wreg free
  6307                           
  6308                           ;easat2_util_transmission.c: 245: }
  6309                           
  6310                           ;easat2_util_transmission.c: 244: break;
  6311                           
  6312                           ;easat2_util_transmission.c: 243: default:
  6313                           
  6314                           ;easat2_util_transmission.c: 242: break;
  6315  00428C  D014               	goto	l5957
  6316  00428E                     l5955:
  6317  00428E  5024               	movf	util_transmit_morse_sequence@i,w,c
  6318  004290  0100               	movlb	0	; () banked
  6319  004292  2571               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  6320  004294  6E22               	movwf	??_util_transmit_morse_sequence& (0+255),c
  6321  004296  5025               	movf	util_transmit_morse_sequence@i+1,w,c
  6322  004298  0100               	movlb	0	; () banked
  6323  00429A  2172               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  6324  00429C  6E23               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  6325  00429E  C022  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  6326  0042A2  C023  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  6327  0042A6                     	if	0	;tblptru may be non-zero
  6328  0042A6                     	endif
  6329  0042A6                     	if	0	;tblptru may be non-zero
  6330  0042A6                     	endif
  6331  0042A6  0008               	tblrd		*
  6332  0042A8  50F5               	movf	tablat,w,c
  6333                           
  6334                           ; Switch size 1, requested type "space"
  6335                           ; Number of cases is 2, Range of values is 45 to 46
  6336                           ; switch strategies available:
  6337                           ; Name         Instructions Cycles
  6338                           ; simple_byte            7     4 (average)
  6339                           ;	Chosen strategy is simple_byte
  6340  0042AA  0A2D               	xorlw	45	; case 45
  6341  0042AC  B4D8               	btfsc	status,2,c
  6342  0042AE  D7EC               	goto	l5951
  6343  0042B0  0A03               	xorlw	3	; case 46
  6344  0042B2  B4D8               	btfsc	status,2,c
  6345  0042B4  D7E6               	goto	l5949
  6346  0042B6                     l5957:
  6347                           
  6348                           ;easat2_util_transmission.c: 248: util_transmit_space_between_dots_dashes();
  6349  0042B6  EC29  F024         	call	_util_transmit_space_between_dots_dashes	;wreg free
  6350  0042BA  4A24               	infsnz	util_transmit_morse_sequence@i,f,c
  6351  0042BC  2A25               	incf	util_transmit_morse_sequence@i+1,f,c
  6352  0042BE                     l5961:
  6353  0042BE  C071  F01C         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  6354  0042C2  C072  F01D         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  6355  0042C6  ECC3  F021         	call	_strlen	;wreg free
  6356  0042CA  501C               	movf	?_strlen,w,c
  6357  0042CC  5C24               	subwf	util_transmit_morse_sequence@i,w,c
  6358  0042CE  501D               	movf	?_strlen+1,w,c
  6359  0042D0  5825               	subwfb	util_transmit_morse_sequence@i+1,w,c
  6360  0042D2  B0D8               	btfsc	status,0,c
  6361  0042D4  0012               	return	
  6362  0042D6  D7DB               	goto	l5955
  6363  0042D8                     __end_of_util_transmit_morse_sequence:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           intcon	equ	0xFF2
  6370                           postinc0	equ	0xFEE
  6371                           wreg	equ	0xFE8
  6372                           postdec1	equ	0xFE5
  6373                           fsr1h	equ	0xFE2
  6374                           fsr1l	equ	0xFE1
  6375                           indf2	equ	0xFDF
  6376                           postinc2	equ	0xFDE
  6377                           postdec2	equ	0xFDD
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  6383 ;; Defined at:
  6384 ;;		line 299 in file "easat2_util_transmission.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    3
  6405 ;; This function calls:
  6406 ;;		_util_waits_delay_ms
  6407 ;; This function is called by:
  6408 ;;		_util_transmit_morse_sequence
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text24
  6413  004852                     __ptext24:
  6414                           	opt stack 0
  6415  004852                     _util_transmit_space_between_dots_dashes:
  6416                           	opt stack 23
  6417                           
  6418                           ;easat2_util_transmission.c: 300: util_waits_delay_ms((int)(2400/32));
  6419                           
  6420                           ;incstack = 0
  6421  004852  0E00               	movlw	0
  6422  004854  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6423  004856  0E4B               	movlw	75
  6424  004858  6E1C               	movwf	util_waits_delay_ms@ms,c
  6425  00485A  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  6426  00485E  0012               	return		;funcret
  6427  004860                     __end_of_util_transmit_space_between_dots_dashes:
  6428                           	opt stack 0
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           intcon	equ	0xFF2
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           postdec1	equ	0xFE5
  6437                           fsr1h	equ	0xFE2
  6438                           fsr1l	equ	0xFE1
  6439                           indf2	equ	0xFDF
  6440                           postinc2	equ	0xFDE
  6441                           postdec2	equ	0xFDD
  6442                           fsr2h	equ	0xFDA
  6443                           fsr2l	equ	0xFD9
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function _util_transmit_dot *****************
  6447 ;; Defined at:
  6448 ;;		line 259 in file "easat2_util_transmission.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6462 ;;      Params:         0       0       0       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0
  6465 ;;      Totals:         0       0       0       0       0       0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    3
  6469 ;; This function calls:
  6470 ;;		_util_pwm_start
  6471 ;;		_util_pwm_stop
  6472 ;;		_util_waits_delay_ms
  6473 ;; This function is called by:
  6474 ;;		_util_transmit_morse_sequence
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text25
  6479  0047D2                     __ptext25:
  6480                           	opt stack 0
  6481  0047D2                     _util_transmit_dot:
  6482                           	opt stack 23
  6483                           
  6484                           ;easat2_util_transmission.c: 263: (PORTDbits.RD1) = 1;
  6485                           
  6486                           ;incstack = 0
  6487  0047D2  8283               	bsf	3971,1,c	;volatile
  6488                           
  6489                           ;easat2_util_transmission.c: 266: util_pwm_start();
  6490  0047D4  EC3A  F024         	call	_util_pwm_start	;wreg free
  6491                           
  6492                           ;easat2_util_transmission.c: 267: util_waits_delay_ms((int)(2400/32));
  6493  0047D8  0E00               	movlw	0
  6494  0047DA  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6495  0047DC  0E4B               	movlw	75
  6496  0047DE  6E1C               	movwf	util_waits_delay_ms@ms,c
  6497  0047E0  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  6498                           
  6499                           ;easat2_util_transmission.c: 268: util_pwm_stop();
  6500  0047E4  EC36  F024         	call	_util_pwm_stop	;wreg free
  6501                           
  6502                           ;easat2_util_transmission.c: 270: (PORTDbits.RD1) = 0;
  6503  0047E8  9283               	bcf	3971,1,c	;volatile
  6504  0047EA  0012               	return		;funcret
  6505  0047EC                     __end_of_util_transmit_dot:
  6506                           	opt stack 0
  6507                           tblptru	equ	0xFF8
  6508                           tblptrh	equ	0xFF7
  6509                           tblptrl	equ	0xFF6
  6510                           tablat	equ	0xFF5
  6511                           intcon	equ	0xFF2
  6512                           postinc0	equ	0xFEE
  6513                           wreg	equ	0xFE8
  6514                           postdec1	equ	0xFE5
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _util_transmit_dash *****************
  6525 ;; Defined at:
  6526 ;;		line 281 in file "easat2_util_transmission.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6540 ;;      Params:         0       0       0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    3
  6547 ;; This function calls:
  6548 ;;		_util_pwm_start
  6549 ;;		_util_pwm_stop
  6550 ;;		_util_waits_delay_ms
  6551 ;; This function is called by:
  6552 ;;		_util_transmit_morse_sequence
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text26
  6557  0047EC                     __ptext26:
  6558                           	opt stack 0
  6559  0047EC                     _util_transmit_dash:
  6560                           	opt stack 23
  6561                           
  6562                           ;easat2_util_transmission.c: 285: (PORTDbits.RD1) = 1;
  6563                           
  6564                           ;incstack = 0
  6565  0047EC  8283               	bsf	3971,1,c	;volatile
  6566                           
  6567                           ;easat2_util_transmission.c: 288: util_pwm_start();
  6568  0047EE  EC3A  F024         	call	_util_pwm_start	;wreg free
  6569                           
  6570                           ;easat2_util_transmission.c: 289: util_waits_delay_ms(((int)(2400/32)*3));
  6571  0047F2  0E00               	movlw	0
  6572  0047F4  6E1D               	movwf	util_waits_delay_ms@ms+1,c
  6573  0047F6  0EE1               	movlw	225
  6574  0047F8  6E1C               	movwf	util_waits_delay_ms@ms,c
  6575  0047FA  EC68  F023         	call	_util_waits_delay_ms	;wreg free
  6576                           
  6577                           ;easat2_util_transmission.c: 290: util_pwm_stop();
  6578  0047FE  EC36  F024         	call	_util_pwm_stop	;wreg free
  6579                           
  6580                           ;easat2_util_transmission.c: 292: (PORTDbits.RD1) = 0;
  6581  004802  9283               	bcf	3971,1,c	;volatile
  6582  004804  0012               	return		;funcret
  6583  004806                     __end_of_util_transmit_dash:
  6584                           	opt stack 0
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           intcon	equ	0xFF2
  6590                           postinc0	equ	0xFEE
  6591                           wreg	equ	0xFE8
  6592                           postdec1	equ	0xFE5
  6593                           fsr1h	equ	0xFE2
  6594                           fsr1l	equ	0xFE1
  6595                           indf2	equ	0xFDF
  6596                           postinc2	equ	0xFDE
  6597                           postdec2	equ	0xFDD
  6598                           fsr2h	equ	0xFDA
  6599                           fsr2l	equ	0xFD9
  6600                           status	equ	0xFD8
  6601                           
  6602 ;; *************** function _util_waits_delay_ms *****************
  6603 ;; Defined at:
  6604 ;;		line 40 in file "easat2_util_waits.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  ms              2   27[COMRAM] int 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  i               2   30[COMRAM] int 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6618 ;;      Params:         2       0       0       0       0       0       0
  6619 ;;      Locals:         2       0       0       0       0       0       0
  6620 ;;      Temps:          1       0       0       0       0       0       0
  6621 ;;      Totals:         5       0       0       0       0       0       0
  6622 ;;Total ram usage:        5 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    2
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_util_transmit_dot
  6629 ;;		_util_transmit_dash
  6630 ;;		_util_transmit_space_between_dots_dashes
  6631 ;;		_util_transmit_space_between_letters
  6632 ;;		_util_transmit_space_between_words
  6633 ;;		_util_waits_delay_secs
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text27
  6638  0046D0                     __ptext27:
  6639                           	opt stack 0
  6640  0046D0                     _util_waits_delay_ms:
  6641                           	opt stack 25
  6642                           
  6643                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6644                           
  6645                           ;incstack = 0
  6646  0046D0  0E00               	movlw	0
  6647  0046D2  6E20               	movwf	util_waits_delay_ms@i+1,c
  6648  0046D4  0E00               	movlw	0
  6649  0046D6  6E1F               	movwf	util_waits_delay_ms@i,c
  6650  0046D8  D006               	goto	l403
  6651  0046DA                     l5377:
  6652                           
  6653                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6654  0046DA  0EA6               	movlw	166
  6655  0046DC                     u8337:
  6656  0046DC  2EE8               	decfsz	wreg,f,c
  6657  0046DE  D7FE               	bra	u8337
  6658  0046E0  D000               	nop2	
  6659  0046E2  4A1F               	infsnz	util_waits_delay_ms@i,f,c
  6660  0046E4  2A20               	incf	util_waits_delay_ms@i+1,f,c
  6661  0046E6                     l403:
  6662  0046E6  501C               	movf	util_waits_delay_ms@ms,w,c
  6663  0046E8  5C1F               	subwf	util_waits_delay_ms@i,w,c
  6664  0046EA  5020               	movf	util_waits_delay_ms@i+1,w,c
  6665  0046EC  0A80               	xorlw	128
  6666  0046EE  6E1E               	movwf	??_util_waits_delay_ms& (0+255),c
  6667  0046F0  501D               	movf	util_waits_delay_ms@ms+1,w,c
  6668  0046F2  0A80               	xorlw	128
  6669  0046F4  581E               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6670  0046F6  B0D8               	btfsc	status,0,c
  6671  0046F8  0012               	return	
  6672  0046FA  D7EF               	goto	l5377
  6673  0046FC                     __end_of_util_waits_delay_ms:
  6674                           	opt stack 0
  6675                           tblptru	equ	0xFF8
  6676                           tblptrh	equ	0xFF7
  6677                           tblptrl	equ	0xFF6
  6678                           tablat	equ	0xFF5
  6679                           intcon	equ	0xFF2
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           indf2	equ	0xFDF
  6686                           postinc2	equ	0xFDE
  6687                           postdec2	equ	0xFDD
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function _util_pwm_stop *****************
  6693 ;; Defined at:
  6694 ;;		line 95 in file "easat2_util_pwm.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		None
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6708 ;;      Params:         0       0       0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    2
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_util_transmit_dot
  6719 ;;		_util_transmit_dash
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text28
  6724  00486C                     __ptext28:
  6725                           	opt stack 0
  6726  00486C                     _util_pwm_stop:
  6727                           	opt stack 23
  6728                           
  6729                           ;easat2_util_pwm.c: 100: (TRISDbits.TRISD2) = 1;
  6730                           
  6731                           ;incstack = 0
  6732  00486C  8495               	bsf	3989,2,c	;volatile
  6733                           
  6734                           ;easat2_util_pwm.c: 101: (TRISDbits.TRISD3) = 1;
  6735  00486E  8695               	bsf	3989,3,c	;volatile
  6736                           
  6737                           ;easat2_util_pwm.c: 105: T2CONbits.TMR2ON = 0;
  6738  004870  94BA               	bcf	4026,2,c	;volatile
  6739  004872  0012               	return		;funcret
  6740  004874                     __end_of_util_pwm_stop:
  6741                           	opt stack 0
  6742                           tblptru	equ	0xFF8
  6743                           tblptrh	equ	0xFF7
  6744                           tblptrl	equ	0xFF6
  6745                           tablat	equ	0xFF5
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           postdec1	equ	0xFE5
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           indf2	equ	0xFDF
  6753                           postinc2	equ	0xFDE
  6754                           postdec2	equ	0xFDD
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _util_pwm_start *****************
  6760 ;; Defined at:
  6761 ;;		line 78 in file "easat2_util_pwm.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;		None
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		None
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6775 ;;      Params:         0       0       0       0       0       0       0
  6776 ;;      Locals:         0       0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0
  6778 ;;      Totals:         0       0       0       0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    2
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_util_transmit_dot
  6786 ;;		_util_transmit_dash
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text29
  6791  004874                     __ptext29:
  6792                           	opt stack 0
  6793  004874                     _util_pwm_start:
  6794                           	opt stack 23
  6795                           
  6796                           ;easat2_util_pwm.c: 83: (TRISDbits.TRISD2) = 0;
  6797                           
  6798                           ;incstack = 0
  6799  004874  9495               	bcf	3989,2,c	;volatile
  6800                           
  6801                           ;easat2_util_pwm.c: 84: (TRISDbits.TRISD3) = 0;
  6802  004876  9695               	bcf	3989,3,c	;volatile
  6803                           
  6804                           ;easat2_util_pwm.c: 88: T2CONbits.TMR2ON = 1;
  6805  004878  84BA               	bsf	4026,2,c	;volatile
  6806  00487A  0012               	return		;funcret
  6807  00487C                     __end_of_util_pwm_start:
  6808                           	opt stack 0
  6809                           tblptru	equ	0xFF8
  6810                           tblptrh	equ	0xFF7
  6811                           tblptrl	equ	0xFF6
  6812                           tablat	equ	0xFF5
  6813                           intcon	equ	0xFF2
  6814                           postinc0	equ	0xFEE
  6815                           wreg	equ	0xFE8
  6816                           postdec1	equ	0xFE5
  6817                           fsr1h	equ	0xFE2
  6818                           fsr1l	equ	0xFE1
  6819                           indf2	equ	0xFDF
  6820                           postinc2	equ	0xFDE
  6821                           postdec2	equ	0xFDD
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _strlen *****************
  6827 ;; Defined at:
  6828 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  s               2   27[COMRAM] PTR const unsigned char 
  6831 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  6832 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  6833 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  6834 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  6835 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  6836 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  6837 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  6838 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  6839 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  6840 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  6841 ;;		 -> STR_5(3), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128
      +), 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  cp              2   31[COMRAM] PTR const unsigned char 
  6844 ;;		 -> STR_45(7), STR_44(7), STR_43(6), STR_42(7), 
  6845 ;;		 -> STR_41(7), STR_40(6), STR_39(6), STR_38(6), 
  6846 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  6847 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(5), 
  6848 ;;		 -> STR_29(5), STR_28(5), STR_27(4), STR_26(5), 
  6849 ;;		 -> STR_25(4), STR_24(2), STR_23(4), STR_22(4), 
  6850 ;;		 -> STR_21(5), STR_20(5), STR_19(4), STR_18(3), 
  6851 ;;		 -> STR_17(3), STR_16(5), STR_15(4), STR_14(5), 
  6852 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  6853 ;;		 -> STR_9(2), STR_8(4), STR_7(5), STR_6(5), 
  6854 ;;		 -> STR_5(3), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128
      +), 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2   27[COMRAM] unsigned int 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6864 ;;      Params:         2       0       0       0       0       0       0
  6865 ;;      Locals:         2       0       0       0       0       0       0
  6866 ;;      Temps:          2       0       0       0       0       0       0
  6867 ;;      Totals:         6       0       0       0       0       0       0
  6868 ;;Total ram usage:        6 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    2
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_util_beacon_transmission
  6875 ;;		_util_command_ack_transmission
  6876 ;;		_util_transmit_morse_sequence
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text30
  6881  004386                     __ptext30:
  6882                           	opt stack 0
  6883  004386                     _strlen:
  6884                           	opt stack 24
  6885                           
  6886                           ;incstack = 0
  6887  004386  C01C  F020         	movff	strlen@s,strlen@cp
  6888  00438A  C01D  F021         	movff	strlen@s+1,strlen@cp+1
  6889  00438E  D002               	goto	l5589
  6890  004390                     l5587:
  6891  004390  4A20               	infsnz	strlen@cp,f,c
  6892  004392  2A21               	incf	strlen@cp+1,f,c
  6893  004394                     l5589:
  6894  004394  C020  FFF6         	movff	strlen@cp,tblptrl
  6895  004398  C021  FFF7         	movff	strlen@cp+1,tblptrh
  6896  00439C  6AF8               	clrf	tblptru,c
  6897  00439E  0E05               	movlw	(high __ramtop+-1)
  6898  0043A0  64F7               	cpfsgt	tblptrh,c
  6899  0043A2  D003               	bra	u6257
  6900  0043A4  0008               	tblrd		*
  6901  0043A6  50F5               	movf	tablat,w,c
  6902  0043A8  D005               	bra	u6250
  6903  0043AA                     u6257:
  6904  0043AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6905  0043AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6906  0043B2  50EF               	movf	indf0,w,c
  6907  0043B4                     u6250:
  6908  0043B4  0900               	iorlw	0
  6909  0043B6  A4D8               	btfss	status,2,c
  6910  0043B8  D7EB               	goto	l5587
  6911  0043BA  C01C  F01E         	movff	strlen@s,??_strlen
  6912  0043BE  C01D  F01F         	movff	strlen@s+1,??_strlen+1
  6913  0043C2  1E1E               	comf	??_strlen,f,c
  6914  0043C4  1E1F               	comf	??_strlen+1,f,c
  6915  0043C6  4A1E               	infsnz	??_strlen,f,c
  6916  0043C8  2A1F               	incf	??_strlen+1,f,c
  6917  0043CA  5020               	movf	strlen@cp,w,c
  6918  0043CC  241E               	addwf	??_strlen,w,c
  6919  0043CE  6E1C               	movwf	?_strlen,c
  6920  0043D0  5021               	movf	strlen@cp+1,w,c
  6921  0043D2  201F               	addwfc	??_strlen+1,w,c
  6922  0043D4  6E1D               	movwf	?_strlen+1,c
  6923  0043D6  0012               	return	
  6924  0043D8                     __end_of_strlen:
  6925                           	opt stack 0
  6926                           tblptru	equ	0xFF8
  6927                           tblptrh	equ	0xFF7
  6928                           tblptrl	equ	0xFF6
  6929                           tablat	equ	0xFF5
  6930                           intcon	equ	0xFF2
  6931                           indf0	equ	0xFEF
  6932                           postinc0	equ	0xFEE
  6933                           fsr0h	equ	0xFEA
  6934                           fsr0l	equ	0xFE9
  6935                           wreg	equ	0xFE8
  6936                           postdec1	equ	0xFE5
  6937                           fsr1h	equ	0xFE2
  6938                           fsr1l	equ	0xFE1
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _strcpy *****************
  6947 ;; Defined at:
  6948 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  to              2   27[COMRAM] PTR unsigned char 
  6951 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6952 ;;  from            2   29[COMRAM] PTR const unsigned char 
  6953 ;;		 -> STR_3(11), STR_1(7), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  cp              2   31[COMRAM] PTR unsigned char 
  6956 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2   27[COMRAM] PTR unsigned char 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6966 ;;      Params:         4       0       0       0       0       0       0
  6967 ;;      Locals:         2       0       0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0
  6969 ;;      Totals:         6       0       0       0       0       0       0
  6970 ;;Total ram usage:        6 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    2
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_util_beacon_transmission
  6977 ;;		_util_command_ack_transmission
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text31
  6982  0046A0                     __ptext31:
  6983                           	opt stack 0
  6984  0046A0                     _strcpy:
  6985                           	opt stack 26
  6986                           
  6987                           ;incstack = 0
  6988  0046A0  C01C  F020         	movff	strcpy@to,strcpy@cp
  6989  0046A4  C01D  F021         	movff	strcpy@to+1,strcpy@cp+1
  6990  0046A8  D004               	goto	l6463
  6991  0046AA                     l6461:
  6992  0046AA  4A20               	infsnz	strcpy@cp,f,c
  6993  0046AC  2A21               	incf	strcpy@cp+1,f,c
  6994  0046AE  4A1E               	infsnz	strcpy@from,f,c
  6995  0046B0  2A1F               	incf	strcpy@from+1,f,c
  6996  0046B2                     l6463:
  6997  0046B2  C01E  FFF6         	movff	strcpy@from,tblptrl
  6998  0046B6  C01F  FFF7         	movff	strcpy@from+1,tblptrh
  6999  0046BA                     	if	0	;tblptru may be non-zero
  7000  0046BA                     	endif
  7001  0046BA                     	if	0	;tblptru may be non-zero
  7002  0046BA                     	endif
  7003  0046BA  C020  FFD9         	movff	strcpy@cp,fsr2l
  7004  0046BE  C021  FFDA         	movff	strcpy@cp+1,fsr2h
  7005  0046C2  0008               	tblrd		*
  7006  0046C4  CFF5 FFDF          	movff	tablat,indf2
  7007  0046C8  50DF               	movf	indf2,w,c
  7008  0046CA  B4D8               	btfsc	status,2,c
  7009  0046CC  0012               	return	
  7010  0046CE  D7ED               	goto	l6461
  7011  0046D0                     __end_of_strcpy:
  7012                           	opt stack 0
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           intcon	equ	0xFF2
  7018                           indf0	equ	0xFEF
  7019                           postinc0	equ	0xFEE
  7020                           fsr0h	equ	0xFEA
  7021                           fsr0l	equ	0xFE9
  7022                           wreg	equ	0xFE8
  7023                           postdec1	equ	0xFE5
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           indf2	equ	0xFDF
  7027                           postinc2	equ	0xFDE
  7028                           postdec2	equ	0xFDD
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _strcat *****************
  7034 ;; Defined at:
  7035 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  to              2   27[COMRAM] PTR unsigned char 
  7038 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  7039 ;;  from            2   29[COMRAM] PTR const unsigned char 
  7040 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_beacon_transmission@BEACON_BUFFER(64), 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  cp              2   31[COMRAM] PTR unsigned char 
  7043 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(128), util_beacon_transmission@BEACON_MESSAGE(128), 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2   27[COMRAM] PTR unsigned char 
  7046 ;; Registers used:
  7047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7053 ;;      Params:         4       0       0       0       0       0       0
  7054 ;;      Locals:         2       0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0
  7056 ;;      Totals:         6       0       0       0       0       0       0
  7057 ;;Total ram usage:        6 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    2
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_util_beacon_transmission
  7064 ;;		_util_command_ack_transmission
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text32
  7069  0044B8                     __ptext32:
  7070                           	opt stack 0
  7071  0044B8                     _strcat:
  7072                           	opt stack 26
  7073                           
  7074                           ;incstack = 0
  7075  0044B8  C01C  F020         	movff	strcat@to,strcat@cp
  7076  0044BC  C01D  F021         	movff	strcat@to+1,strcat@cp+1
  7077  0044C0  D002               	goto	l6477
  7078  0044C2                     l6475:
  7079  0044C2  4A20               	infsnz	strcat@cp,f,c
  7080  0044C4  2A21               	incf	strcat@cp+1,f,c
  7081  0044C6                     l6477:
  7082  0044C6  C020  FFD9         	movff	strcat@cp,fsr2l
  7083  0044CA  C021  FFDA         	movff	strcat@cp+1,fsr2h
  7084  0044CE  50DF               	movf	indf2,w,c
  7085  0044D0  B4D8               	btfsc	status,2,c
  7086  0044D2  D005               	goto	l6481
  7087  0044D4  D7F6               	goto	l6475
  7088  0044D6                     l6479:
  7089  0044D6  4A20               	infsnz	strcat@cp,f,c
  7090  0044D8  2A21               	incf	strcat@cp+1,f,c
  7091  0044DA  4A1E               	infsnz	strcat@from,f,c
  7092  0044DC  2A1F               	incf	strcat@from+1,f,c
  7093  0044DE                     l6481:
  7094  0044DE  C01E  FFD9         	movff	strcat@from,fsr2l
  7095  0044E2  C01F  FFDA         	movff	strcat@from+1,fsr2h
  7096  0044E6  C020  FFE1         	movff	strcat@cp,fsr1l
  7097  0044EA  C021  FFE2         	movff	strcat@cp+1,fsr1h
  7098  0044EE  CFDF FFE7          	movff	indf2,indf1
  7099  0044F2  50E7               	movf	indf1,w,c
  7100  0044F4  B4D8               	btfsc	status,2,c
  7101  0044F6  0012               	return	
  7102  0044F8  D7EE               	goto	l6479
  7103  0044FA                     __end_of_strcat:
  7104                           	opt stack 0
  7105                           tblptru	equ	0xFF8
  7106                           tblptrh	equ	0xFF7
  7107                           tblptrl	equ	0xFF6
  7108                           tablat	equ	0xFF5
  7109                           intcon	equ	0xFF2
  7110                           indf0	equ	0xFEF
  7111                           postinc0	equ	0xFEE
  7112                           fsr0h	equ	0xFEA
  7113                           fsr0l	equ	0xFE9
  7114                           wreg	equ	0xFE8
  7115                           indf1	equ	0xFE7
  7116                           postdec1	equ	0xFE5
  7117                           fsr1h	equ	0xFE2
  7118                           fsr1l	equ	0xFE1
  7119                           indf2	equ	0xFDF
  7120                           postinc2	equ	0xFDE
  7121                           postdec2	equ	0xFDD
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function _sprintf *****************
  7127 ;; Defined at:
  7128 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprintf.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  wh              2  100[BANK0 ] PTR unsigned char 
  7131 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_beacon_transmission@BEACON_BUFFER(64), 
  7132 ;;  f               2  102[BANK0 ] PTR const unsigned char 
  7133 ;;		 -> STR_4(13), STR_2(23), 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  pb              4  116[BANK0 ] struct __prbuf
  7136 ;;  ap              2  114[BANK0 ] PTR void [1]
  7137 ;;		 -> ?_sprintf(2), ?_printf(2), 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2  100[BANK0 ] int 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7147 ;;      Params:         0      14       0       0       0       0       0
  7148 ;;      Locals:         0       6       0       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0
  7150 ;;      Totals:         0      20       0       0       0       0       0
  7151 ;;Total ram usage:       20 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    6
  7154 ;; This function calls:
  7155 ;;		__doprnt
  7156 ;; This function is called by:
  7157 ;;		_util_beacon_transmission
  7158 ;;		_util_command_ack_transmission
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text33
  7163  0043D8                     __ptext33:
  7164                           	opt stack 0
  7165  0043D8                     _sprintf:
  7166                           	opt stack 22
  7167                           
  7168                           ;incstack = 0
  7169  0043D8  C0C4  F0D4         	movff	sprintf@wh,sprintf@pb
  7170  0043DC  C0C5  F0D5         	movff	sprintf@wh+1,sprintf@pb+1
  7171  0043E0  0E00               	movlw	0
  7172  0043E2  0100               	movlb	0	; () banked
  7173  0043E4  6FD6               	movwf	(sprintf@pb+2)& (0+255),b
  7174  0043E6  0E00               	movlw	0
  7175  0043E8  0100               	movlb	0	; () banked
  7176  0043EA  6FD7               	movwf	(sprintf@pb+3)& (0+255),b
  7177  0043EC  0EC8               	movlw	low (?_sprintf+4)
  7178  0043EE  0100               	movlb	0	; () banked
  7179  0043F0  6FD2               	movwf	sprintf@ap& (0+255),b
  7180  0043F2  0E00               	movlw	high (?_sprintf+4)
  7181  0043F4  0100               	movlb	0	; () banked
  7182  0043F6  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  7183                           
  7184                           ; BSR set to: 0
  7185  0043F8  0ED4               	movlw	low sprintf@pb
  7186  0043FA  0100               	movlb	0	; () banked
  7187  0043FC  6FA1               	movwf	__doprnt@pb& (0+255),b
  7188  0043FE  0E00               	movlw	high sprintf@pb
  7189  004400  0100               	movlb	0	; () banked
  7190  004402  6FA2               	movwf	(__doprnt@pb+1)& (0+255),b
  7191  004404  C0C6  F0A3         	movff	sprintf@f,__doprnt@f
  7192  004408  C0C7  F0A4         	movff	sprintf@f+1,__doprnt@f+1
  7193  00440C  0ED2               	movlw	low sprintf@ap
  7194  00440E  0100               	movlb	0	; () banked
  7195  004410  6FA5               	movwf	__doprnt@ap& (0+255),b
  7196  004412  0E00               	movlw	high sprintf@ap
  7197  004414  0100               	movlb	0	; () banked
  7198  004416  6FA6               	movwf	(__doprnt@ap+1)& (0+255),b
  7199  004418  EC55  F000         	call	__doprnt	;wreg free
  7200  00441C  C0D4  FFD9         	movff	sprintf@pb,fsr2l
  7201  004420  C0D5  FFDA         	movff	sprintf@pb+1,fsr2h
  7202  004424  0E00               	movlw	0
  7203  004426  6EDF               	movwf	indf2,c
  7204  004428  0012               	return	
  7205  00442A                     __end_of_sprintf:
  7206                           	opt stack 0
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           intcon	equ	0xFF2
  7212                           indf0	equ	0xFEF
  7213                           postinc0	equ	0xFEE
  7214                           fsr0h	equ	0xFEA
  7215                           fsr0l	equ	0xFE9
  7216                           wreg	equ	0xFE8
  7217                           indf1	equ	0xFE7
  7218                           postdec1	equ	0xFE5
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function __doprnt *****************
  7229 ;; Defined at:
  7230 ;;		line 458 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  pb              2   65[BANK0 ] PTR struct __prbuf
  7233 ;;		 -> sprintf@pb(4), printf@pb(4), 
  7234 ;;  f               2   67[BANK0 ] PTR const unsigned char 
  7235 ;;		 -> STR_47(2), STR_46(2), STR_4(13), STR_2(23), 
  7236 ;;  ap              2   69[BANK0 ] PTR PTR void 
  7237 ;;		 -> sprintf@ap(2), printf@ap(2), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  tmpval          4   90[BANK0 ] struct .
  7240 ;;  val             4   84[BANK0 ] unsigned long 
  7241 ;;  fval            3   94[BANK0 ] unsigned long 
  7242 ;;  cp              3    0        PTR const unsigned char 
  7243 ;;  prec            2   97[BANK0 ] int 
  7244 ;;  exp             2   88[BANK0 ] int 
  7245 ;;  width           2   82[BANK0 ] int 
  7246 ;;  flag            2   80[BANK0 ] unsigned short 
  7247 ;;  len             2    0        unsigned int 
  7248 ;;  c               1   99[BANK0 ] char 
  7249 ;;  d               1    0        unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  2   65[BANK0 ] int 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7259 ;;      Params:         0       6       0       0       0       0       0
  7260 ;;      Locals:         0      23       0       0       0       0       0
  7261 ;;      Temps:          0       6       0       0       0       0       0
  7262 ;;      Totals:         0      35       0       0       0       0       0
  7263 ;;Total ram usage:       35 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    5
  7266 ;; This function calls:
  7267 ;;		Absolute function
  7268 ;;		___awdiv
  7269 ;;		___ftadd
  7270 ;;		___ftge
  7271 ;;		___ftmul
  7272 ;;		___ftneg
  7273 ;;		___ftsub
  7274 ;;		___fttol
  7275 ;;		___lldiv
  7276 ;;		___llmod
  7277 ;;		___lltoft
  7278 ;;		___wmul
  7279 ;;		__div_to_l_
  7280 ;;		__tdiv_to_l_
  7281 ;;		_fround
  7282 ;;		_isdigit
  7283 ;;		_putch
  7284 ;;		_scale
  7285 ;; This function is called by:
  7286 ;;		_sprintf
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text34
  7291  0000AA                     __ptext34:
  7292                           	opt stack 0
  7293  0000AA                     __doprnt:
  7294                           	opt stack 22
  7295                           
  7296                           ;doprnt.c: 499: signed char c;
  7297                           ;doprnt.c: 501: int width;
  7298                           ;doprnt.c: 504: int prec;
  7299                           ;doprnt.c: 508: unsigned short flag;
  7300                           ;doprnt.c: 515: char d;
  7301                           ;doprnt.c: 516: double fval;
  7302                           ;doprnt.c: 517: int exp;
  7303                           ;doprnt.c: 523: union {
  7304                           ;doprnt.c: 524: unsigned long vd;
  7305                           ;doprnt.c: 525: double integ;
  7306                           ;doprnt.c: 526: } tmpval;
  7307                           ;doprnt.c: 528: unsigned long val;
  7308                           ;doprnt.c: 529: unsigned len;
  7309                           ;doprnt.c: 530: const char * cp;
  7310                           ;doprnt.c: 536: while(c = *f++) {
  7311                           
  7312                           ;incstack = 0
  7313  0000AA  EFE3  F007         	goto	l6335
  7314  0000AE                     l6013:
  7315                           
  7316                           ;doprnt.c: 538: if(c != '%')
  7317  0000AE  0E25               	movlw	37
  7318  0000B0  0100               	movlb	0	; () banked
  7319  0000B2  19C3               	xorwf	__doprnt@c& (0+255),w,b
  7320  0000B4  B4D8               	btfsc	status,2,c
  7321  0000B6  D038               	goto	l6023
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;doprnt.c: 540: {
  7325                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  7326  0000B8  0100               	movlb	0	; () banked
  7327  0000BA  EE20 F002          	lfsr	2,2
  7328  0000BE  51A1               	movf	__doprnt@pb& (0+255),w,b
  7329  0000C0  26D9               	addwf	fsr2l,f,c
  7330  0000C2  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  7331  0000C4  22DA               	addwfc	fsr2h,f,c
  7332  0000C6  50DE               	movf	postinc2,w,c
  7333  0000C8  10DE               	iorwf	postinc2,w,c
  7334  0000CA  B4D8               	btfsc	status,2,c
  7335  0000CC  D016               	goto	l6019
  7336                           
  7337                           ; BSR set to: 0
  7338  0000CE  0100               	movlb	0	; () banked
  7339  0000D0  EE20 F002          	lfsr	2,2
  7340  0000D4  51A1               	movf	__doprnt@pb& (0+255),w,b
  7341  0000D6  26D9               	addwf	fsr2l,f,c
  7342  0000D8  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  7343  0000DA  22DA               	addwfc	fsr2h,f,c
  7344  0000DC  D802               	call	u6898
  7345  0000DE  EFE3  F007         	goto	l6335
  7346  0000E2                     u6898:
  7347  0000E2  0005               	push	
  7348  0000E4  6EFA               	movwf	pclath,c
  7349  0000E6  50DE               	movf	postinc2,w,c
  7350  0000E8  6EFD               	movwf	tosl,c
  7351  0000EA  50DE               	movf	postinc2,w,c
  7352  0000EC  6EFE               	movwf	tosh,c
  7353  0000EE  50F8               	movf	tblptru,w,c
  7354  0000F0  6EFF               	movwf	tosu,c
  7355  0000F2  50FA               	movf	pclath,w,c
  7356  0000F4  0100               	movlb	0	; () banked
  7357  0000F6  51C3               	movf	__doprnt@c& (0+255),w,b
  7358  0000F8  0012               	return		;indir
  7359  0000FA                     l6019:
  7360  0000FA  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  7361  0000FE  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  7362  000102  CFDE F0A7          	movff	postinc2,??__doprnt
  7363  000106  CFDD F0A8          	movff	postdec2,??__doprnt+1
  7364  00010A  C0A7  FFD9         	movff	??__doprnt,fsr2l
  7365  00010E  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  7366  000112  C0C3  FFDF         	movff	__doprnt@c,indf2
  7367  000116  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  7368  00011A  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  7369  00011E  2ADE               	incf	postinc2,f,c
  7370  000120  0E00               	movlw	0
  7371  000122  22DD               	addwfc	postdec2,f,c
  7372                           
  7373                           ;doprnt.c: 542: continue;
  7374  000124  EFE3  F007         	goto	l6335
  7375  000128                     l6023:
  7376                           
  7377                           ;doprnt.c: 543: }
  7378                           ;doprnt.c: 546: width = 0;
  7379  000128  0E00               	movlw	0
  7380  00012A  0100               	movlb	0	; () banked
  7381  00012C  6FB3               	movwf	(__doprnt@width+1)& (0+255),b
  7382  00012E  0E00               	movlw	0
  7383  000130  6FB2               	movwf	__doprnt@width& (0+255),b
  7384                           
  7385                           ;doprnt.c: 548: flag = 0;
  7386  000132  0E00               	movlw	0
  7387  000134  0100               	movlb	0	; () banked
  7388  000136  6FB1               	movwf	(__doprnt@flag+1)& (0+255),b
  7389  000138  0E00               	movlw	0
  7390  00013A  6FB0               	movwf	__doprnt@flag& (0+255),b
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7394  00013C  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7395  000140  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7396  000144                     	if	0	;tblptru may be non-zero
  7397  000144                     	endif
  7398  000144                     	if	0	;tblptru may be non-zero
  7399  000144                     	endif
  7400  000144  0008               	tblrd		*
  7401  000146  50F5               	movf	tablat,w,c
  7402  000148  ECCB  F023         	call	_isdigit
  7403  00014C  A0D8               	btfss	status,0,c
  7404  00014E  D040               	goto	l6037
  7405                           
  7406                           ;doprnt.c: 598: width = 0;
  7407  000150  0E00               	movlw	0
  7408  000152  0100               	movlb	0	; () banked
  7409  000154  6FB3               	movwf	(__doprnt@width+1)& (0+255),b
  7410  000156  0E00               	movlw	0
  7411  000158  6FB2               	movwf	__doprnt@width& (0+255),b
  7412  00015A                     l6029:
  7413                           
  7414                           ;doprnt.c: 600: width *= 10;
  7415  00015A  C0B2  F075         	movff	__doprnt@width,___wmul@multiplier
  7416  00015E  C0B3  F076         	movff	__doprnt@width+1,___wmul@multiplier+1
  7417  000162  0E00               	movlw	0
  7418  000164  0100               	movlb	0	; () banked
  7419  000166  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7420  000168  0E0A               	movlw	10
  7421  00016A  6F77               	movwf	___wmul@multiplicand& (0+255),b
  7422  00016C  EC1F  F023         	call	___wmul	;wreg free
  7423  000170  C075  F0B2         	movff	?___wmul,__doprnt@width
  7424  000174  C076  F0B3         	movff	?___wmul+1,__doprnt@width+1
  7425                           
  7426                           ;doprnt.c: 601: width += *f++ - '0';
  7427  000178  0ED0               	movlw	208
  7428  00017A  0100               	movlb	0	; () banked
  7429  00017C  6FA7               	movwf	??__doprnt& (0+255),b
  7430  00017E  0EFF               	movlw	255
  7431  000180  0100               	movlb	0	; () banked
  7432  000182  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  7433  000184  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7434  000188  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7435  00018C                     	if	0	;tblptru may be non-zero
  7436  00018C                     	endif
  7437  00018C                     	if	0	;tblptru may be non-zero
  7438  00018C                     	endif
  7439  00018C  0008               	tblrd		*
  7440  00018E  50F5               	movf	tablat,w,c
  7441  000190  0100               	movlb	0	; () banked
  7442  000192  6FA9               	movwf	(??__doprnt+2)& (0+255),b
  7443  000194  6BAA               	clrf	(??__doprnt+3)& (0+255),b
  7444  000196  0100               	movlb	0	; () banked
  7445  000198  51A7               	movf	??__doprnt& (0+255),w,b
  7446  00019A  0100               	movlb	0	; () banked
  7447  00019C  27A9               	addwf	(??__doprnt+2)& (0+255),f,b
  7448  00019E  0100               	movlb	0	; () banked
  7449  0001A0  51A8               	movf	(??__doprnt+1)& (0+255),w,b
  7450  0001A2  0100               	movlb	0	; () banked
  7451  0001A4  23AA               	addwfc	(??__doprnt+3)& (0+255),f,b
  7452  0001A6  0100               	movlb	0	; () banked
  7453  0001A8  51A9               	movf	(??__doprnt+2)& (0+255),w,b
  7454  0001AA  0100               	movlb	0	; () banked
  7455  0001AC  27B2               	addwf	__doprnt@width& (0+255),f,b
  7456  0001AE  0100               	movlb	0	; () banked
  7457  0001B0  51AA               	movf	(??__doprnt+3)& (0+255),w,b
  7458  0001B2  0100               	movlb	0	; () banked
  7459  0001B4  23B3               	addwfc	(__doprnt@width+1)& (0+255),f,b
  7460                           
  7461                           ; BSR set to: 0
  7462  0001B6  0100               	movlb	0	; () banked
  7463  0001B8  4BA3               	infsnz	__doprnt@f& (0+255),f,b
  7464  0001BA  2BA4               	incf	(__doprnt@f+1)& (0+255),f,b
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7468  0001BC  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7469  0001C0  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7470  0001C4                     	if	0	;tblptru may be non-zero
  7471  0001C4                     	endif
  7472  0001C4                     	if	0	;tblptru may be non-zero
  7473  0001C4                     	endif
  7474  0001C4  0008               	tblrd		*
  7475  0001C6  50F5               	movf	tablat,w,c
  7476  0001C8  ECCB  F023         	call	_isdigit
  7477  0001CC  B0D8               	btfsc	status,0,c
  7478  0001CE  D7C5               	goto	l6029
  7479  0001D0                     l6037:
  7480                           
  7481                           ;doprnt.c: 608: }
  7482                           ;doprnt.c: 611: if(*f == '.') {
  7483  0001D0  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7484  0001D4  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7485  0001D8                     	if	0	;tblptru may be non-zero
  7486  0001D8                     	endif
  7487  0001D8                     	if	0	;tblptru may be non-zero
  7488  0001D8                     	endif
  7489  0001D8  0008               	tblrd		*
  7490  0001DA  50F5               	movf	tablat,w,c
  7491  0001DC  0A2E               	xorlw	46
  7492  0001DE  A4D8               	btfss	status,2,c
  7493  0001E0  D039               	goto	l6049
  7494                           
  7495                           ;doprnt.c: 612: flag |= 0x4000;
  7496  0001E2  0100               	movlb	0	; () banked
  7497  0001E4  8DB1               	bsf	(__doprnt@flag+1)& (0+255),6,b
  7498                           
  7499                           ;doprnt.c: 613: f++;
  7500  0001E6  0100               	movlb	0	; () banked
  7501  0001E8  4BA3               	infsnz	__doprnt@f& (0+255),f,b
  7502  0001EA  2BA4               	incf	(__doprnt@f+1)& (0+255),f,b
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;doprnt.c: 620: {
  7506                           ;doprnt.c: 621: prec = 0;
  7507  0001EC  0E00               	movlw	0
  7508  0001EE  0100               	movlb	0	; () banked
  7509  0001F0  6FC2               	movwf	(__doprnt@prec+1)& (0+255),b
  7510  0001F2  0E00               	movlw	0
  7511  0001F4  6FC1               	movwf	__doprnt@prec& (0+255),b
  7512                           
  7513                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7514  0001F6  D023               	goto	l6047
  7515  0001F8                     l6043:
  7516                           
  7517                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7518  0001F8  C0C1  F075         	movff	__doprnt@prec,___wmul@multiplier
  7519  0001FC  C0C2  F076         	movff	__doprnt@prec+1,___wmul@multiplier+1
  7520  000200  0E00               	movlw	0
  7521  000202  0100               	movlb	0	; () banked
  7522  000204  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7523  000206  0E0A               	movlw	10
  7524  000208  6F77               	movwf	___wmul@multiplicand& (0+255),b
  7525  00020A  EC1F  F023         	call	___wmul	;wreg free
  7526  00020E  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7527  000212  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7528  000216                     	if	0	;tblptru may be non-zero
  7529  000216                     	endif
  7530  000216                     	if	0	;tblptru may be non-zero
  7531  000216                     	endif
  7532  000216  0008               	tblrd		*
  7533  000218  50F5               	movf	tablat,w,c
  7534  00021A  0100               	movlb	0	; () banked
  7535  00021C  2775               	addwf	?___wmul& (0+255),f,b
  7536  00021E  0E00               	movlw	0
  7537  000220  0100               	movlb	0	; () banked
  7538  000222  2376               	addwfc	(?___wmul+1)& (0+255),f,b
  7539  000224  0ED0               	movlw	208
  7540  000226  0100               	movlb	0	; () banked
  7541  000228  2575               	addwf	?___wmul& (0+255),w,b
  7542  00022A  0100               	movlb	0	; () banked
  7543  00022C  6FC1               	movwf	__doprnt@prec& (0+255),b
  7544  00022E  0EFF               	movlw	255
  7545  000230  0100               	movlb	0	; () banked
  7546  000232  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  7547  000234  0100               	movlb	0	; () banked
  7548  000236  6FC2               	movwf	(__doprnt@prec+1)& (0+255),b
  7549                           
  7550                           ; BSR set to: 0
  7551  000238  0100               	movlb	0	; () banked
  7552  00023A  4BA3               	infsnz	__doprnt@f& (0+255),f,b
  7553  00023C  2BA4               	incf	(__doprnt@f+1)& (0+255),f,b
  7554  00023E                     l6047:
  7555                           
  7556                           ; BSR set to: 0
  7557  00023E  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7558  000242  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7559  000246                     	if	0	;tblptru may be non-zero
  7560  000246                     	endif
  7561  000246                     	if	0	;tblptru may be non-zero
  7562  000246                     	endif
  7563  000246  0008               	tblrd		*
  7564  000248  50F5               	movf	tablat,w,c
  7565  00024A  ECCB  F023         	call	_isdigit
  7566  00024E  A0D8               	btfss	status,0,c
  7567  000250  D00C               	goto	l6057
  7568  000252  D7D2               	goto	l6043
  7569  000254                     l6049:
  7570                           
  7571                           ;doprnt.c: 626: prec = 0;
  7572  000254  0E00               	movlw	0
  7573  000256  0100               	movlb	0	; () banked
  7574  000258  6FC2               	movwf	(__doprnt@prec+1)& (0+255),b
  7575  00025A  0E00               	movlw	0
  7576  00025C  6FC1               	movwf	__doprnt@prec& (0+255),b
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;doprnt.c: 628: flag |= 0x1000;
  7580  00025E  0100               	movlb	0	; () banked
  7581  000260  89B1               	bsf	(__doprnt@flag+1)& (0+255),4,b
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;doprnt.c: 630: }
  7585                           ;doprnt.c: 635: switch(c = *f++) {
  7586  000262  D003               	goto	l6057
  7587  000264                     l6053:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;doprnt.c: 663: flag |= 0x400;
  7591  000264  0100               	movlb	0	; () banked
  7592  000266  85B1               	bsf	(__doprnt@flag+1)& (0+255),2,b
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;doprnt.c: 698: case 'i':
  7596                           ;doprnt.c: 699: break;
  7597                           
  7598                           ; BSR set to: 0
  7599                           
  7600                           ;doprnt.c: 697: case 'd':
  7601                           
  7602                           ;doprnt.c: 664: break;
  7603  000268  D01A               	goto	l6059
  7604  00026A                     l6057:
  7605  00026A  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  7606  00026E  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  7607  000272  0100               	movlb	0	; () banked
  7608  000274  4BA3               	infsnz	__doprnt@f& (0+255),f,b
  7609  000276  2BA4               	incf	(__doprnt@f+1)& (0+255),f,b
  7610  000278                     	if	0	;tblptru may be non-zero
  7611  000278                     	endif
  7612  000278                     	if	0	;tblptru may be non-zero
  7613  000278                     	endif
  7614  000278  0008               	tblrd		*
  7615  00027A  CFF5 F0C3          	movff	tablat,__doprnt@c
  7616  00027E  0100               	movlb	0	; () banked
  7617  000280  51C3               	movf	__doprnt@c& (0+255),w,b
  7618                           
  7619                           ; Switch size 1, requested type "space"
  7620                           ; Number of cases is 4, Range of values is 0 to 105
  7621                           ; switch strategies available:
  7622                           ; Name         Instructions Cycles
  7623                           ; simple_byte           13     7 (average)
  7624                           ;	Chosen strategy is simple_byte
  7625  000282  0A00               	xorlw	0	; case 0
  7626  000284  B4D8               	btfsc	status,2,c
  7627  000286  EFF2  F007         	goto	l6337
  7628  00028A  0A64               	xorlw	100	; case 100
  7629  00028C  B4D8               	btfsc	status,2,c
  7630  00028E  D007               	goto	l6059
  7631  000290  0A02               	xorlw	2	; case 102
  7632  000292  B4D8               	btfsc	status,2,c
  7633  000294  D7E7               	goto	l6053
  7634  000296  0A0F               	xorlw	15	; case 105
  7635  000298  A4D8               	btfss	status,2,c
  7636  00029A  EFE3  F007         	goto	l6335
  7637  00029E                     l6059:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;doprnt.c: 825: if(flag & (0x700)) {
  7641  00029E  0E07               	movlw	7
  7642  0002A0  0100               	movlb	0	; () banked
  7643  0002A2  15B1               	andwf	(__doprnt@flag+1)& (0+255),w,b
  7644  0002A4  B4D8               	btfsc	status,2,c
  7645  0002A6  EFF6  F005         	goto	l6245
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;doprnt.c: 827: if(flag & 0x1000)
  7649  0002AA  0100               	movlb	0	; () banked
  7650  0002AC  A9B1               	btfss	(__doprnt@flag+1)& (0+255),4,b
  7651  0002AE  D005               	goto	l6065
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;doprnt.c: 829: prec = 6;
  7655  0002B0  0E00               	movlw	0
  7656  0002B2  0100               	movlb	0	; () banked
  7657  0002B4  6FC2               	movwf	(__doprnt@prec+1)& (0+255),b
  7658  0002B6  0E06               	movlw	6
  7659  0002B8  6FC1               	movwf	__doprnt@prec& (0+255),b
  7660  0002BA                     l6065:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7664  0002BA  C0A5  FFD9         	movff	__doprnt@ap,fsr2l
  7665  0002BE  C0A6  FFDA         	movff	__doprnt@ap+1,fsr2h
  7666  0002C2  CFDF F0A7          	movff	indf2,??__doprnt
  7667  0002C6  0E03               	movlw	3
  7668  0002C8  26DE               	addwf	postinc2,f,c
  7669  0002CA  CFDF F0A8          	movff	indf2,??__doprnt+1
  7670  0002CE  0E00               	movlw	0
  7671  0002D0  22DD               	addwfc	postdec2,f,c
  7672  0002D2  C0A7  FFD9         	movff	??__doprnt,fsr2l
  7673  0002D6  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  7674  0002DA  CFDE F0BE          	movff	postinc2,__doprnt@fval
  7675  0002DE  CFDE F0BF          	movff	postinc2,__doprnt@fval+1
  7676  0002E2  CFDD F0C0          	movff	postdec2,__doprnt@fval+2
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;doprnt.c: 831: if(fval < 0.0) {
  7680  0002E6  0100               	movlb	0	; () banked
  7681  0002E8  AFC0               	btfss	(__doprnt@fval+2)& (0+255),7,b
  7682  0002EA  D011               	goto	l6073
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;doprnt.c: 832: fval = -fval;
  7686  0002EC  C0BE  F01C         	movff	__doprnt@fval,___ftneg@f1
  7687  0002F0  C0BF  F01D         	movff	__doprnt@fval+1,___ftneg@f1+1
  7688  0002F4  C0C0  F01E         	movff	__doprnt@fval+2,___ftneg@f1+2
  7689  0002F8  ECB9  F023         	call	___ftneg	;wreg free
  7690  0002FC  C01C  F0BE         	movff	?___ftneg,__doprnt@fval
  7691  000300  C01D  F0BF         	movff	?___ftneg+1,__doprnt@fval+1
  7692  000304  C01E  F0C0         	movff	?___ftneg+2,__doprnt@fval+2
  7693                           
  7694                           ;doprnt.c: 833: flag |= 0x03;
  7695  000308  0E03               	movlw	3
  7696  00030A  0100               	movlb	0	; () banked
  7697  00030C  13B0               	iorwf	__doprnt@flag& (0+255),f,b
  7698  00030E                     l6073:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;doprnt.c: 834: }
  7702                           ;doprnt.c: 835: exp = 0;
  7703  00030E  0E00               	movlw	0
  7704  000310  0100               	movlb	0	; () banked
  7705  000312  6FB9               	movwf	(__doprnt@exp+1)& (0+255),b
  7706  000314  0E00               	movlw	0
  7707  000316  6FB8               	movwf	__doprnt@exp& (0+255),b
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;doprnt.c: 836: if( fval!=0) {
  7711  000318  0100               	movlb	0	; () banked
  7712  00031A  51BE               	movf	__doprnt@fval& (0+255),w,b
  7713  00031C  0100               	movlb	0	; () banked
  7714  00031E  11BF               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  7715  000320  0100               	movlb	0	; () banked
  7716  000322  11C0               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  7717  000324  B4D8               	btfsc	status,2,c
  7718  000326  D093               	goto	l6101
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7722  000328  0E82               	movlw	130
  7723  00032A  0100               	movlb	0	; () banked
  7724  00032C  6FA7               	movwf	??__doprnt& (0+255),b
  7725  00032E  0EFF               	movlw	255
  7726  000330  0100               	movlb	0	; () banked
  7727  000332  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  7728  000334  C0BE  F0A9         	movff	__doprnt@fval,??__doprnt+2
  7729  000338  C0BF  F0AA         	movff	__doprnt@fval+1,??__doprnt+3
  7730  00033C  C0C0  F0AB         	movff	__doprnt@fval+2,??__doprnt+4
  7731  000340  C0C1  F0AC         	movff	__doprnt@fval+3,??__doprnt+5
  7732  000344  0E10               	movlw	16
  7733  000346  D006               	goto	u6980
  7734  000348                     u6985:
  7735  000348  0100               	movlb	0	; () banked
  7736  00034A  90D8               	bcf	status,0,c
  7737  00034C  33AC               	rrcf	(??__doprnt+5)& (0+255),f,b
  7738  00034E  33AB               	rrcf	(??__doprnt+4)& (0+255),f,b
  7739  000350  33AA               	rrcf	(??__doprnt+3)& (0+255),f,b
  7740  000352  33A9               	rrcf	(??__doprnt+2)& (0+255),f,b
  7741  000354                     u6980:
  7742  000354  2EE8               	decfsz	wreg,f,c
  7743  000356  D7F8               	goto	u6985
  7744  000358  0100               	movlb	0	; () banked
  7745  00035A  51A9               	movf	(??__doprnt+2)& (0+255),w,b
  7746  00035C  0100               	movlb	0	; () banked
  7747  00035E  25A7               	addwf	??__doprnt& (0+255),w,b
  7748  000360  0100               	movlb	0	; () banked
  7749  000362  6FB8               	movwf	__doprnt@exp& (0+255),b
  7750  000364  0E00               	movlw	0
  7751  000366  0100               	movlb	0	; () banked
  7752  000368  21A8               	addwfc	(??__doprnt+1)& (0+255),w,b
  7753  00036A  0100               	movlb	0	; () banked
  7754  00036C  6FB9               	movwf	(__doprnt@exp+1)& (0+255),b
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;doprnt.c: 838: exp--;
  7758  00036E  0100               	movlb	0	; () banked
  7759  000370  07B8               	decf	__doprnt@exp& (0+255),f,b
  7760  000372  A0D8               	btfss	status,0,c
  7761  000374  07B9               	decf	(__doprnt@exp+1)& (0+255),f,b
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;doprnt.c: 839: exp *= 3;
  7765  000376  C0B8  F075         	movff	__doprnt@exp,___wmul@multiplier
  7766  00037A  C0B9  F076         	movff	__doprnt@exp+1,___wmul@multiplier+1
  7767  00037E  0E00               	movlw	0
  7768  000380  0100               	movlb	0	; () banked
  7769  000382  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7770  000384  0E03               	movlw	3
  7771  000386  6F77               	movwf	___wmul@multiplicand& (0+255),b
  7772  000388  EC1F  F023         	call	___wmul	;wreg free
  7773  00038C  C075  F0B8         	movff	?___wmul,__doprnt@exp
  7774  000390  C076  F0B9         	movff	?___wmul+1,__doprnt@exp+1
  7775                           
  7776                           ;doprnt.c: 840: exp /= 10;
  7777  000394  C0B8  F071         	movff	__doprnt@exp,___awdiv@dividend
  7778  000398  C0B9  F072         	movff	__doprnt@exp+1,___awdiv@dividend+1
  7779  00039C  0E00               	movlw	0
  7780  00039E  0100               	movlb	0	; () banked
  7781  0003A0  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  7782  0003A2  0E0A               	movlw	10
  7783  0003A4  6F73               	movwf	___awdiv@divisor& (0+255),b
  7784  0003A6  EC47  F01E         	call	___awdiv	;wreg free
  7785  0003AA  C071  F0B8         	movff	?___awdiv,__doprnt@exp
  7786  0003AE  C072  F0B9         	movff	?___awdiv+1,__doprnt@exp+1
  7787                           
  7788                           ;doprnt.c: 841: if(exp < 0)
  7789  0003B2  0100               	movlb	0	; () banked
  7790  0003B4  AFB9               	btfss	(__doprnt@exp+1)& (0+255),7,b
  7791  0003B6  D004               	goto	l6089
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;doprnt.c: 842: exp--;
  7795  0003B8  0100               	movlb	0	; () banked
  7796  0003BA  07B8               	decf	__doprnt@exp& (0+255),f,b
  7797  0003BC  A0D8               	btfss	status,0,c
  7798  0003BE  07B9               	decf	(__doprnt@exp+1)& (0+255),f,b
  7799  0003C0                     l6089:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7803  0003C0  0100               	movlb	0	; () banked
  7804  0003C2  51B8               	movf	__doprnt@exp& (0+255),w,b
  7805  0003C4  0800               	sublw	0
  7806  0003C6  ECC5  F00B         	call	_scale
  7807  0003CA  C085  F0BA         	movff	?_scale,__doprnt@tmpval
  7808  0003CE  C086  F0BB         	movff	?_scale+1,__doprnt@tmpval+1
  7809  0003D2  C087  F0BC         	movff	?_scale+2,__doprnt@tmpval+2
  7810                           
  7811                           ;doprnt.c: 847: tmpval.integ *= fval;
  7812  0003D6  C0BA  F079         	movff	__doprnt@tmpval,___ftmul@f1
  7813  0003DA  C0BB  F07A         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  7814  0003DE  C0BC  F07B         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  7815  0003E2  C0BE  F07C         	movff	__doprnt@fval,___ftmul@f2
  7816  0003E6  C0BF  F07D         	movff	__doprnt@fval+1,___ftmul@f2+1
  7817  0003EA  C0C0  F07E         	movff	__doprnt@fval+2,___ftmul@f2+2
  7818  0003EE  EC1B  F018         	call	___ftmul	;wreg free
  7819  0003F2  C079  F0BA         	movff	?___ftmul,__doprnt@tmpval
  7820  0003F6  C07A  F0BB         	movff	?___ftmul+1,__doprnt@tmpval+1
  7821  0003FA  C07B  F0BC         	movff	?___ftmul+2,__doprnt@tmpval+2
  7822                           
  7823                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7824  0003FE  C0BA  F01C         	movff	__doprnt@tmpval,___ftge@ff1
  7825  000402  C0BB  F01D         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7826  000406  C0BC  F01E         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7827  00040A  0E00               	movlw	0
  7828  00040C  6E1F               	movwf	___ftge@ff2,c
  7829  00040E  0E80               	movlw	128
  7830  000410  6E20               	movwf	___ftge@ff2+1,c
  7831  000412  0E3F               	movlw	63
  7832  000414  6E21               	movwf	___ftge@ff2+2,c
  7833  000416  ECCB  F01F         	call	___ftge	;wreg free
  7834  00041A  B0D8               	btfsc	status,0,c
  7835  00041C  D005               	goto	l6097
  7836                           
  7837                           ;doprnt.c: 849: exp--;
  7838  00041E  0100               	movlb	0	; () banked
  7839  000420  07B8               	decf	__doprnt@exp& (0+255),f,b
  7840  000422  A0D8               	btfss	status,0,c
  7841  000424  07B9               	decf	(__doprnt@exp+1)& (0+255),f,b
  7842  000426  D013               	goto	l6101
  7843  000428                     l6097:
  7844                           
  7845                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7846  000428  C0BA  F01C         	movff	__doprnt@tmpval,___ftge@ff1
  7847  00042C  C0BB  F01D         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7848  000430  C0BC  F01E         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7849  000434  0E00               	movlw	0
  7850  000436  6E1F               	movwf	___ftge@ff2,c
  7851  000438  0E20               	movlw	32
  7852  00043A  6E20               	movwf	___ftge@ff2+1,c
  7853  00043C  0E41               	movlw	65
  7854  00043E  6E21               	movwf	___ftge@ff2+2,c
  7855  000440  ECCB  F01F         	call	___ftge	;wreg free
  7856  000444  A0D8               	btfss	status,0,c
  7857  000446  D003               	goto	l6101
  7858                           
  7859                           ;doprnt.c: 851: exp++;
  7860  000448  0100               	movlb	0	; () banked
  7861  00044A  4BB8               	infsnz	__doprnt@exp& (0+255),f,b
  7862  00044C  2BB9               	incf	(__doprnt@exp+1)& (0+255),f,b
  7863  00044E                     l6101:
  7864                           
  7865                           ;doprnt.c: 852: }
  7866                           ;doprnt.c: 1112: if(prec <= 12)
  7867  00044E  0100               	movlb	0	; () banked
  7868  000450  BFC2               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  7869  000452  D008               	goto	l6103
  7870  000454  0100               	movlb	0	; () banked
  7871  000456  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  7872  000458  E11D               	bnz	l6105
  7873  00045A  0E0D               	movlw	13
  7874  00045C  0100               	movlb	0	; () banked
  7875  00045E  5DC1               	subwf	__doprnt@prec& (0+255),w,b
  7876  000460  B0D8               	btfsc	status,0,c
  7877  000462  D018               	goto	l6105
  7878  000464                     l6103:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;doprnt.c: 1113: fval += fround(prec);
  7882  000464  C0BE  F08F         	movff	__doprnt@fval,___ftadd@f1
  7883  000468  C0BF  F090         	movff	__doprnt@fval+1,___ftadd@f1+1
  7884  00046C  C0C0  F091         	movff	__doprnt@fval+2,___ftadd@f1+2
  7885  000470  0100               	movlb	0	; () banked
  7886  000472  51C1               	movf	__doprnt@prec& (0+255),w,b
  7887  000474  EC46  F013         	call	_fround
  7888  000478  C085  F092         	movff	?_fround,___ftadd@f2
  7889  00047C  C086  F093         	movff	?_fround+1,___ftadd@f2+1
  7890  000480  C087  F094         	movff	?_fround+2,___ftadd@f2+2
  7891  000484  EC96  F014         	call	___ftadd	;wreg free
  7892  000488  C08F  F0BE         	movff	?___ftadd,__doprnt@fval
  7893  00048C  C090  F0BF         	movff	?___ftadd+1,__doprnt@fval+1
  7894  000490  C091  F0C0         	movff	?___ftadd+2,__doprnt@fval+2
  7895  000494                     l6105:
  7896                           
  7897                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7898  000494  0100               	movlb	0	; () banked
  7899  000496  BFB9               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  7900  000498  D008               	goto	l6107
  7901  00049A  0100               	movlb	0	; () banked
  7902  00049C  51B9               	movf	(__doprnt@exp+1)& (0+255),w,b
  7903  00049E  E12A               	bnz	l6113
  7904  0004A0  0E0A               	movlw	10
  7905  0004A2  0100               	movlb	0	; () banked
  7906  0004A4  5DB8               	subwf	__doprnt@exp& (0+255),w,b
  7907  0004A6  B0D8               	btfsc	status,0,c
  7908  0004A8  D025               	goto	l6113
  7909  0004AA                     l6107:
  7910                           
  7911                           ; BSR set to: 0
  7912  0004AA  0100               	movlb	0	; () banked
  7913  0004AC  51BE               	movf	__doprnt@fval& (0+255),w,b
  7914  0004AE  0100               	movlb	0	; () banked
  7915  0004B0  11BF               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  7916  0004B2  0100               	movlb	0	; () banked
  7917  0004B4  11C0               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  7918  0004B6  B4D8               	btfsc	status,2,c
  7919  0004B8  D05F               	goto	l6127
  7920                           
  7921                           ; BSR set to: 0
  7922  0004BA  C0BE  F08C         	movff	__doprnt@fval,___fttol@f1
  7923  0004BE  C0BF  F08D         	movff	__doprnt@fval+1,___fttol@f1+1
  7924  0004C2  C0C0  F08E         	movff	__doprnt@fval+2,___fttol@f1+2
  7925  0004C6  ECC4  F018         	call	___fttol	;wreg free
  7926  0004CA  0100               	movlb	0	; () banked
  7927  0004CC  518C               	movf	?___fttol& (0+255),w,b
  7928  0004CE  0100               	movlb	0	; () banked
  7929  0004D0  118D               	iorwf	(?___fttol+1)& (0+255),w,b
  7930  0004D2  0100               	movlb	0	; () banked
  7931  0004D4  118E               	iorwf	(?___fttol+2)& (0+255),w,b
  7932  0004D6  0100               	movlb	0	; () banked
  7933  0004D8  118F               	iorwf	(?___fttol+3)& (0+255),w,b
  7934  0004DA  A4D8               	btfss	status,2,c
  7935  0004DC  D04D               	goto	l6127
  7936                           
  7937                           ; BSR set to: 0
  7938  0004DE  0100               	movlb	0	; () banked
  7939  0004E0  BFB9               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  7940  0004E2  D04A               	goto	l6127
  7941  0004E4  0100               	movlb	0	; () banked
  7942  0004E6  51B9               	movf	(__doprnt@exp+1)& (0+255),w,b
  7943  0004E8  E105               	bnz	l6113
  7944  0004EA  0E02               	movlw	2
  7945  0004EC  0100               	movlb	0	; () banked
  7946  0004EE  5DB8               	subwf	__doprnt@exp& (0+255),w,b
  7947  0004F0  A0D8               	btfss	status,0,c
  7948  0004F2  D042               	goto	l6127
  7949  0004F4                     l6113:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7953  0004F4  C0BA  F01C         	movff	__doprnt@tmpval,___ftge@ff1
  7954  0004F8  C0BB  F01D         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  7955  0004FC  C0BC  F01E         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  7956  000500  0E70               	movlw	112
  7957  000502  6E1F               	movwf	___ftge@ff2,c
  7958  000504  0E89               	movlw	137
  7959  000506  6E20               	movwf	___ftge@ff2+1,c
  7960  000508  0E40               	movlw	64
  7961  00050A  6E21               	movwf	___ftge@ff2+2,c
  7962  00050C  ECCB  F01F         	call	___ftge	;wreg free
  7963  000510  B0D8               	btfsc	status,0,c
  7964  000512  D003               	goto	l6117
  7965                           
  7966                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7967  000514  0100               	movlb	0	; () banked
  7968  000516  0EF7               	movlw	247
  7969  000518  D002               	goto	L2
  7970  00051A                     l6117:
  7971                           
  7972                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7973  00051A  0100               	movlb	0	; () banked
  7974  00051C  0EF8               	movlw	248
  7975  00051E                     L2:
  7976  00051E  27B8               	addwf	__doprnt@exp& (0+255),f,b
  7977  000520  0EFF               	movlw	255
  7978  000522  23B9               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;doprnt.c: 1124: }
  7982                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7983                           
  7984                           ; BSR set to: 0
  7985  000524  0100               	movlb	0	; () banked
  7986  000526  51B8               	movf	__doprnt@exp& (0+255),w,b
  7987  000528  ECC5  F00B         	call	_scale
  7988  00052C  C085  F0BA         	movff	?_scale,__doprnt@tmpval
  7989  000530  C086  F0BB         	movff	?_scale+1,__doprnt@tmpval+1
  7990  000534  C087  F0BC         	movff	?_scale+2,__doprnt@tmpval+2
  7991                           
  7992                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7993  000538  C0BE  F01C         	movff	__doprnt@fval,__tdiv_to_l_@f1
  7994  00053C  C0BF  F01D         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  7995  000540  C0C0  F01E         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  7996  000544  C0BA  F01F         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  7997  000548  C0BB  F020         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  7998  00054C  C0BC  F021         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  7999  000550  EC06  F01A         	call	__tdiv_to_l_	;wreg free
  8000  000554  C01C  F0B4         	movff	?__tdiv_to_l_,__doprnt@val
  8001  000558  C01D  F0B5         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  8002  00055C  C01E  F0B6         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  8003  000560  C01F  F0B7         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  8004                           
  8005                           ;doprnt.c: 1129: fval = 0.0;
  8006  000564  0E00               	movlw	0
  8007  000566  0100               	movlb	0	; () banked
  8008  000568  6FBE               	movwf	__doprnt@fval& (0+255),b
  8009  00056A  0E00               	movlw	0
  8010  00056C  0100               	movlb	0	; () banked
  8011  00056E  6FBF               	movwf	(__doprnt@fval+1)& (0+255),b
  8012  000570  0E00               	movlw	0
  8013  000572  0100               	movlb	0	; () banked
  8014  000574  6FC0               	movwf	(__doprnt@fval+2)& (0+255),b
  8015                           
  8016                           ;doprnt.c: 1130: } else {
  8017  000576  D033               	goto	l6131
  8018  000578                     l6127:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8022  000578  C0BE  F08C         	movff	__doprnt@fval,___fttol@f1
  8023  00057C  C0BF  F08D         	movff	__doprnt@fval+1,___fttol@f1+1
  8024  000580  C0C0  F08E         	movff	__doprnt@fval+2,___fttol@f1+2
  8025  000584  ECC4  F018         	call	___fttol	;wreg free
  8026  000588  C08C  F0B4         	movff	?___fttol,__doprnt@val
  8027  00058C  C08D  F0B5         	movff	?___fttol+1,__doprnt@val+1
  8028  000590  C08E  F0B6         	movff	?___fttol+2,__doprnt@val+2
  8029  000594  C08F  F0B7         	movff	?___fttol+3,__doprnt@val+3
  8030                           
  8031                           ;doprnt.c: 1132: fval -= (double)val;
  8032  000598  C0BE  F09B         	movff	__doprnt@fval,___ftsub@f1
  8033  00059C  C0BF  F09C         	movff	__doprnt@fval+1,___ftsub@f1+1
  8034  0005A0  C0C0  F09D         	movff	__doprnt@fval+2,___ftsub@f1+2
  8035  0005A4  C0B4  F071         	movff	__doprnt@val,___lltoft@c
  8036  0005A8  C0B5  F072         	movff	__doprnt@val+1,___lltoft@c+1
  8037  0005AC  C0B6  F073         	movff	__doprnt@val+2,___lltoft@c+2
  8038  0005B0  C0B7  F074         	movff	__doprnt@val+3,___lltoft@c+3
  8039  0005B4  EC09  F021         	call	___lltoft	;wreg free
  8040  0005B8  C071  F09E         	movff	?___lltoft,___ftsub@f2
  8041  0005BC  C072  F09F         	movff	?___lltoft+1,___ftsub@f2+1
  8042  0005C0  C073  F0A0         	movff	?___lltoft+2,___ftsub@f2+2
  8043  0005C4  EC15  F022         	call	___ftsub	;wreg free
  8044  0005C8  C09B  F0BE         	movff	?___ftsub,__doprnt@fval
  8045  0005CC  C09C  F0BF         	movff	?___ftsub+1,__doprnt@fval+1
  8046  0005D0  C09D  F0C0         	movff	?___ftsub+2,__doprnt@fval+2
  8047                           
  8048                           ;doprnt.c: 1133: exp = 0;
  8049  0005D4  0E00               	movlw	0
  8050  0005D6  0100               	movlb	0	; () banked
  8051  0005D8  6FB9               	movwf	(__doprnt@exp+1)& (0+255),b
  8052  0005DA  0E00               	movlw	0
  8053  0005DC  6FB8               	movwf	__doprnt@exp& (0+255),b
  8054  0005DE                     l6131:
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;doprnt.c: 1134: }
  8058                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8059  0005DE  0E01               	movlw	1
  8060  0005E0  0100               	movlb	0	; () banked
  8061  0005E2  6FC3               	movwf	__doprnt@c& (0+255),b
  8062  0005E4                     l6133:
  8063                           
  8064                           ; BSR set to: 0
  8065  0005E4  0E0A               	movlw	10
  8066  0005E6  0100               	movlb	0	; () banked
  8067  0005E8  19C3               	xorwf	__doprnt@c& (0+255),w,b
  8068  0005EA  B4D8               	btfsc	status,2,c
  8069  0005EC  D01E               	goto	l6145
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;doprnt.c: 1137: if(val < dpowers[c])
  8073                           
  8074                           ; BSR set to: 0
  8075                           
  8076                           ; BSR set to: 0
  8077  0005EE  0100               	movlb	0	; () banked
  8078  0005F0  51C3               	movf	__doprnt@c& (0+255),w,b
  8079  0005F2  0D04               	mullw	4
  8080  0005F4  0ED5               	movlw	low _dpowers
  8081  0005F6  24F3               	addwf	prodl,w,c
  8082  0005F8  6EF6               	movwf	tblptrl,c
  8083  0005FA  0E7E               	movlw	high _dpowers
  8084  0005FC  20F4               	addwfc	prodh,w,c
  8085  0005FE  6EF7               	movwf	tblptrh,c
  8086  000600                     	if	0	;There are less than 3 active tblptr bytes
  8087  000600                     	endif
  8088  000600  0009               	tblrd		*+
  8089  000602  50F5               	movf	tablat,w,c
  8090  000604  0100               	movlb	0	; () banked
  8091  000606  5DB4               	subwf	__doprnt@val& (0+255),w,b
  8092  000608  0009               	tblrd		*+
  8093  00060A  50F5               	movf	tablat,w,c
  8094  00060C  0100               	movlb	0	; () banked
  8095  00060E  59B5               	subwfb	(__doprnt@val+1)& (0+255),w,b
  8096  000610  0009               	tblrd		*+
  8097  000612  50F5               	movf	tablat,w,c
  8098  000614  0100               	movlb	0	; () banked
  8099  000616  59B6               	subwfb	(__doprnt@val+2)& (0+255),w,b
  8100  000618  0009               	tblrd		*+
  8101  00061A  50F5               	movf	tablat,w,c
  8102  00061C  0100               	movlb	0	; () banked
  8103  00061E  59B7               	subwfb	(__doprnt@val+3)& (0+255),w,b
  8104  000620  A0D8               	btfss	status,0,c
  8105  000622  D003               	goto	l6145
  8106                           
  8107                           ; BSR set to: 0
  8108                           
  8109                           ; BSR set to: 0
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;doprnt.c: 1138: break;
  8113  000624  0100               	movlb	0	; () banked
  8114  000626  2BC3               	incf	__doprnt@c& (0+255),f,b
  8115  000628  D7DD               	goto	l6133
  8116  00062A                     l6145:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;doprnt.c: 1142: width -= prec + c + exp;
  8120  00062A  C0C3  F0A7         	movff	__doprnt@c,??__doprnt
  8121  00062E  0100               	movlb	0	; () banked
  8122  000630  6BA8               	clrf	(??__doprnt+1)& (0+255),b
  8123  000632  BFA7               	btfsc	??__doprnt& (0+255),7,b
  8124  000634  07A8               	decf	(??__doprnt+1)& (0+255),f,b
  8125  000636  0100               	movlb	0	; () banked
  8126  000638  51C1               	movf	__doprnt@prec& (0+255),w,b
  8127  00063A  0100               	movlb	0	; () banked
  8128  00063C  27A7               	addwf	??__doprnt& (0+255),f,b
  8129  00063E  0100               	movlb	0	; () banked
  8130  000640  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  8131  000642  0100               	movlb	0	; () banked
  8132  000644  23A8               	addwfc	(??__doprnt+1)& (0+255),f,b
  8133  000646  0100               	movlb	0	; () banked
  8134  000648  51B8               	movf	__doprnt@exp& (0+255),w,b
  8135  00064A  0100               	movlb	0	; () banked
  8136  00064C  27A7               	addwf	??__doprnt& (0+255),f,b
  8137  00064E  0100               	movlb	0	; () banked
  8138  000650  51B9               	movf	(__doprnt@exp+1)& (0+255),w,b
  8139  000652  0100               	movlb	0	; () banked
  8140  000654  23A8               	addwfc	(??__doprnt+1)& (0+255),f,b
  8141  000656  0100               	movlb	0	; () banked
  8142  000658  51A7               	movf	??__doprnt& (0+255),w,b
  8143  00065A  0100               	movlb	0	; () banked
  8144  00065C  5FB2               	subwf	__doprnt@width& (0+255),f,b
  8145  00065E  0100               	movlb	0	; () banked
  8146  000660  51A8               	movf	(??__doprnt+1)& (0+255),w,b
  8147  000662  0100               	movlb	0	; () banked
  8148  000664  5BB3               	subwfb	(__doprnt@width+1)& (0+255),f,b
  8149                           
  8150                           ;doprnt.c: 1143: if(
  8151                           ;doprnt.c: 1147: prec)
  8152  000666  0100               	movlb	0	; () banked
  8153  000668  51C1               	movf	__doprnt@prec& (0+255),w,b
  8154  00066A  0100               	movlb	0	; () banked
  8155  00066C  11C2               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  8156  00066E  B4D8               	btfsc	status,2,c
  8157  000670  D004               	goto	l6149
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;doprnt.c: 1148: width--;
  8161  000672  0100               	movlb	0	; () banked
  8162  000674  07B2               	decf	__doprnt@width& (0+255),f,b
  8163  000676  A0D8               	btfss	status,0,c
  8164  000678  07B3               	decf	(__doprnt@width+1)& (0+255),f,b
  8165  00067A                     l6149:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;doprnt.c: 1149: if(flag & 0x03)
  8169  00067A  0E03               	movlw	3
  8170  00067C  0100               	movlb	0	; () banked
  8171  00067E  15B0               	andwf	__doprnt@flag& (0+255),w,b
  8172  000680  0100               	movlb	0	; () banked
  8173  000682  6FA7               	movwf	??__doprnt& (0+255),b
  8174  000684  0E00               	movlw	0
  8175  000686  0100               	movlb	0	; () banked
  8176  000688  15B1               	andwf	(__doprnt@flag+1)& (0+255),w,b
  8177  00068A  0100               	movlb	0	; () banked
  8178  00068C  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  8179  00068E  0100               	movlb	0	; () banked
  8180  000690  51A7               	movf	??__doprnt& (0+255),w,b
  8181  000692  0100               	movlb	0	; () banked
  8182  000694  11A8               	iorwf	(??__doprnt+1)& (0+255),w,b
  8183  000696  B4D8               	btfsc	status,2,c
  8184  000698  D039               	goto	l6163
  8185  00069A  D034               	goto	l6161
  8186  00069C                     l6153:
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  8190  00069C  0100               	movlb	0	; () banked
  8191  00069E  EE20 F002          	lfsr	2,2
  8192  0006A2  51A1               	movf	__doprnt@pb& (0+255),w,b
  8193  0006A4  26D9               	addwf	fsr2l,f,c
  8194  0006A6  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8195  0006A8  22DA               	addwfc	fsr2h,f,c
  8196  0006AA  50DE               	movf	postinc2,w,c
  8197  0006AC  10DE               	iorwf	postinc2,w,c
  8198  0006AE  B4D8               	btfsc	status,2,c
  8199  0006B0  D014               	goto	l6157
  8200                           
  8201                           ; BSR set to: 0
  8202  0006B2  0100               	movlb	0	; () banked
  8203  0006B4  EE20 F002          	lfsr	2,2
  8204  0006B8  51A1               	movf	__doprnt@pb& (0+255),w,b
  8205  0006BA  26D9               	addwf	fsr2l,f,c
  8206  0006BC  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8207  0006BE  22DA               	addwfc	fsr2h,f,c
  8208  0006C0  D801               	call	u7148
  8209  0006C2  D020               	goto	l6161
  8210  0006C4                     u7148:
  8211  0006C4  0005               	push	
  8212  0006C6  6EFA               	movwf	pclath,c
  8213  0006C8  50DE               	movf	postinc2,w,c
  8214  0006CA  6EFD               	movwf	tosl,c
  8215  0006CC  50DE               	movf	postinc2,w,c
  8216  0006CE  6EFE               	movwf	tosh,c
  8217  0006D0  50F8               	movf	tblptru,w,c
  8218  0006D2  6EFF               	movwf	tosu,c
  8219  0006D4  50FA               	movf	pclath,w,c
  8220  0006D6  0E20               	movlw	32
  8221  0006D8  0012               	return		;indir
  8222  0006DA                     l6157:
  8223  0006DA  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8224  0006DE  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8225  0006E2  CFDE F0A7          	movff	postinc2,??__doprnt
  8226  0006E6  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8227  0006EA  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8228  0006EE  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8229  0006F2  0E20               	movlw	32
  8230  0006F4  6EDF               	movwf	indf2,c
  8231  0006F6  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8232  0006FA  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8233  0006FE  2ADE               	incf	postinc2,f,c
  8234  000700  0E00               	movlw	0
  8235  000702  22DD               	addwfc	postdec2,f,c
  8236  000704                     l6161:
  8237                           
  8238                           ;doprnt.c: 1182: width--;
  8239  000704  0100               	movlb	0	; () banked
  8240  000706  07B2               	decf	__doprnt@width& (0+255),f,b
  8241  000708  A0D8               	btfss	status,0,c
  8242  00070A  07B3               	decf	(__doprnt@width+1)& (0+255),f,b
  8243  00070C                     l6163:
  8244                           
  8245                           ; BSR set to: 0
  8246  00070C  0100               	movlb	0	; () banked
  8247  00070E  BFB3               	btfsc	(__doprnt@width+1)& (0+255),7,b
  8248  000710  D007               	goto	l6165
  8249  000712  0100               	movlb	0	; () banked
  8250  000714  51B3               	movf	(__doprnt@width+1)& (0+255),w,b
  8251  000716  E1C2               	bnz	l6153
  8252  000718  0100               	movlb	0	; () banked
  8253  00071A  05B2               	decf	__doprnt@width& (0+255),w,b
  8254  00071C  B0D8               	btfsc	status,0,c
  8255  00071E  D7BE               	goto	l6153
  8256  000720                     l6165:
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;doprnt.c: 1183: }
  8260                           ;doprnt.c: 1188: if(flag & 0x03)
  8261  000720  0E03               	movlw	3
  8262  000722  0100               	movlb	0	; () banked
  8263  000724  15B0               	andwf	__doprnt@flag& (0+255),w,b
  8264  000726  0100               	movlb	0	; () banked
  8265  000728  6FA7               	movwf	??__doprnt& (0+255),b
  8266  00072A  0E00               	movlw	0
  8267  00072C  0100               	movlb	0	; () banked
  8268  00072E  15B1               	andwf	(__doprnt@flag+1)& (0+255),w,b
  8269  000730  0100               	movlb	0	; () banked
  8270  000732  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  8271  000734  0100               	movlb	0	; () banked
  8272  000736  51A7               	movf	??__doprnt& (0+255),w,b
  8273  000738  0100               	movlb	0	; () banked
  8274  00073A  11A8               	iorwf	(??__doprnt+1)& (0+255),w,b
  8275  00073C  B4D8               	btfsc	status,2,c
  8276  00073E  D0A9               	goto	l6185
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  8280  000740  0100               	movlb	0	; () banked
  8281  000742  EE20 F002          	lfsr	2,2
  8282  000746  51A1               	movf	__doprnt@pb& (0+255),w,b
  8283  000748  26D9               	addwf	fsr2l,f,c
  8284  00074A  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8285  00074C  22DA               	addwfc	fsr2h,f,c
  8286  00074E  50DE               	movf	postinc2,w,c
  8287  000750  10DE               	iorwf	postinc2,w,c
  8288  000752  B4D8               	btfsc	status,2,c
  8289  000754  D014               	goto	l6171
  8290                           
  8291                           ; BSR set to: 0
  8292  000756  0100               	movlb	0	; () banked
  8293  000758  EE20 F002          	lfsr	2,2
  8294  00075C  51A1               	movf	__doprnt@pb& (0+255),w,b
  8295  00075E  26D9               	addwf	fsr2l,f,c
  8296  000760  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8297  000762  22DA               	addwfc	fsr2h,f,c
  8298  000764  D801               	call	u7188
  8299  000766  D095               	goto	l6185
  8300  000768                     u7188:
  8301  000768  0005               	push	
  8302  00076A  6EFA               	movwf	pclath,c
  8303  00076C  50DE               	movf	postinc2,w,c
  8304  00076E  6EFD               	movwf	tosl,c
  8305  000770  50DE               	movf	postinc2,w,c
  8306  000772  6EFE               	movwf	tosh,c
  8307  000774  50F8               	movf	tblptru,w,c
  8308  000776  6EFF               	movwf	tosu,c
  8309  000778  50FA               	movf	pclath,w,c
  8310  00077A  0E2D               	movlw	45
  8311  00077C  0012               	return		;indir
  8312  00077E                     l6171:
  8313  00077E  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8314  000782  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8315  000786  CFDE F0A7          	movff	postinc2,??__doprnt
  8316  00078A  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8317  00078E  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8318  000792  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8319  000796  0E2D               	movlw	45
  8320  000798  D07A               	goto	L3
  8321  00079A                     l6173:
  8322  00079A  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8323  00079E  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8324  0007A2  2ADE               	incf	postinc2,f,c
  8325  0007A4  0E00               	movlw	0
  8326  0007A6  22DD               	addwfc	postdec2,f,c
  8327                           
  8328                           ;doprnt.c: 1195: }
  8329                           ;doprnt.c: 1196: while(c--) {
  8330  0007A8  D074               	goto	l6185
  8331  0007AA                     l6175:
  8332                           
  8333                           ;doprnt.c: 1200: {
  8334                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8335  0007AA  C0B4  F071         	movff	__doprnt@val,___lldiv@dividend
  8336  0007AE  C0B5  F072         	movff	__doprnt@val+1,___lldiv@dividend+1
  8337  0007B2  C0B6  F073         	movff	__doprnt@val+2,___lldiv@dividend+2
  8338  0007B6  C0B7  F074         	movff	__doprnt@val+3,___lldiv@dividend+3
  8339  0007BA  0100               	movlb	0	; () banked
  8340  0007BC  51C3               	movf	__doprnt@c& (0+255),w,b
  8341  0007BE  0D04               	mullw	4
  8342  0007C0  0ED5               	movlw	low _dpowers
  8343  0007C2  24F3               	addwf	prodl,w,c
  8344  0007C4  6EF6               	movwf	tblptrl,c
  8345  0007C6  0E7E               	movlw	high _dpowers
  8346  0007C8  20F4               	addwfc	prodh,w,c
  8347  0007CA  6EF7               	movwf	tblptrh,c
  8348  0007CC                     	if	0	;There are less than 3 active tblptr bytes
  8349  0007CC                     	endif
  8350  0007CC  0009               	tblrd		*+
  8351  0007CE  CFF5 F075          	movff	tablat,___lldiv@divisor
  8352  0007D2  0009               	tblrd		*+
  8353  0007D4  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8354  0007D8  0009               	tblrd		*+
  8355  0007DA  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8356  0007DE  000A               	tblrd		*-
  8357  0007E0  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8358  0007E4  EC98  F01D         	call	___lldiv
  8359  0007E8  C071  F0BA         	movff	?___lldiv,__doprnt@tmpval
  8360  0007EC  C072  F0BB         	movff	?___lldiv+1,__doprnt@tmpval+1
  8361  0007F0  C073  F0BC         	movff	?___lldiv+2,__doprnt@tmpval+2
  8362  0007F4  C074  F0BD         	movff	?___lldiv+3,__doprnt@tmpval+3
  8363                           
  8364                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8365  0007F8  C0BA  F079         	movff	__doprnt@tmpval,___llmod@dividend
  8366  0007FC  C0BB  F07A         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  8367  000800  C0BC  F07B         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  8368  000804  C0BD  F07C         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  8369  000808  0E0A               	movlw	10
  8370  00080A  0100               	movlb	0	; () banked
  8371  00080C  6F7D               	movwf	___llmod@divisor& (0+255),b
  8372  00080E  0E00               	movlw	0
  8373  000810  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8374  000812  0E00               	movlw	0
  8375  000814  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8376  000816  0E00               	movlw	0
  8377  000818  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8378  00081A  EC38  F01F         	call	___llmod	;wreg free
  8379  00081E  C079  F0BA         	movff	?___llmod,__doprnt@tmpval
  8380  000822  C07A  F0BB         	movff	?___llmod+1,__doprnt@tmpval+1
  8381  000826  C07B  F0BC         	movff	?___llmod+2,__doprnt@tmpval+2
  8382  00082A  C07C  F0BD         	movff	?___llmod+3,__doprnt@tmpval+3
  8383                           
  8384                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  8385  00082E  0100               	movlb	0	; () banked
  8386  000830  EE20 F002          	lfsr	2,2
  8387  000834  51A1               	movf	__doprnt@pb& (0+255),w,b
  8388  000836  26D9               	addwf	fsr2l,f,c
  8389  000838  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8390  00083A  22DA               	addwfc	fsr2h,f,c
  8391  00083C  50DE               	movf	postinc2,w,c
  8392  00083E  10DE               	iorwf	postinc2,w,c
  8393  000840  B4D8               	btfsc	status,2,c
  8394  000842  D016               	goto	l6183
  8395                           
  8396                           ; BSR set to: 0
  8397  000844  0100               	movlb	0	; () banked
  8398  000846  EE20 F002          	lfsr	2,2
  8399  00084A  51A1               	movf	__doprnt@pb& (0+255),w,b
  8400  00084C  26D9               	addwf	fsr2l,f,c
  8401  00084E  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8402  000850  22DA               	addwfc	fsr2h,f,c
  8403  000852  D801               	call	u7208
  8404  000854  D01E               	goto	l6185
  8405  000856                     u7208:
  8406  000856  0005               	push	
  8407  000858  6EFA               	movwf	pclath,c
  8408  00085A  50DE               	movf	postinc2,w,c
  8409  00085C  6EFD               	movwf	tosl,c
  8410  00085E  50DE               	movf	postinc2,w,c
  8411  000860  6EFE               	movwf	tosh,c
  8412  000862  50F8               	movf	tblptru,w,c
  8413  000864  6EFF               	movwf	tosu,c
  8414  000866  50FA               	movf	pclath,w,c
  8415  000868  0100               	movlb	0	; () banked
  8416  00086A  51BA               	movf	__doprnt@tmpval& (0+255),w,b
  8417  00086C  0F30               	addlw	48
  8418  00086E  0012               	return		;indir
  8419  000870                     l6183:
  8420  000870  0100               	movlb	0	; () banked
  8421  000872  51BA               	movf	__doprnt@tmpval& (0+255),w,b
  8422  000874  0F30               	addlw	48
  8423  000876  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8424  00087A  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8425  00087E  CFDE F0A7          	movff	postinc2,??__doprnt
  8426  000882  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8427  000886  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8428  00088A  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8429  00088E                     L3:
  8430  00088E  6EDF               	movwf	indf2,c
  8431  000890  D784               	goto	l6173
  8432  000892                     l6185:
  8433  000892  0100               	movlb	0	; () banked
  8434  000894  07C3               	decf	__doprnt@c& (0+255),f,b
  8435  000896  0100               	movlb	0	; () banked
  8436  000898  29C3               	incf	__doprnt@c& (0+255),w,b
  8437  00089A  B4D8               	btfsc	status,2,c
  8438  00089C  D039               	goto	l6197
  8439  00089E  D785               	goto	l6175
  8440  0008A0                     l6187:
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8444  0008A0  0100               	movlb	0	; () banked
  8445  0008A2  EE20 F002          	lfsr	2,2
  8446  0008A6  51A1               	movf	__doprnt@pb& (0+255),w,b
  8447  0008A8  26D9               	addwf	fsr2l,f,c
  8448  0008AA  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8449  0008AC  22DA               	addwfc	fsr2h,f,c
  8450  0008AE  50DE               	movf	postinc2,w,c
  8451  0008B0  10DE               	iorwf	postinc2,w,c
  8452  0008B2  B4D8               	btfsc	status,2,c
  8453  0008B4  D014               	goto	l6191
  8454                           
  8455                           ; BSR set to: 0
  8456  0008B6  0100               	movlb	0	; () banked
  8457  0008B8  EE20 F002          	lfsr	2,2
  8458  0008BC  51A1               	movf	__doprnt@pb& (0+255),w,b
  8459  0008BE  26D9               	addwf	fsr2l,f,c
  8460  0008C0  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8461  0008C2  22DA               	addwfc	fsr2h,f,c
  8462  0008C4  D801               	call	u7238
  8463  0008C6  D020               	goto	l6195
  8464  0008C8                     u7238:
  8465  0008C8  0005               	push	
  8466  0008CA  6EFA               	movwf	pclath,c
  8467  0008CC  50DE               	movf	postinc2,w,c
  8468  0008CE  6EFD               	movwf	tosl,c
  8469  0008D0  50DE               	movf	postinc2,w,c
  8470  0008D2  6EFE               	movwf	tosh,c
  8471  0008D4  50F8               	movf	tblptru,w,c
  8472  0008D6  6EFF               	movwf	tosu,c
  8473  0008D8  50FA               	movf	pclath,w,c
  8474  0008DA  0E30               	movlw	48
  8475  0008DC  0012               	return		;indir
  8476  0008DE                     l6191:
  8477  0008DE  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8478  0008E2  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8479  0008E6  CFDE F0A7          	movff	postinc2,??__doprnt
  8480  0008EA  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8481  0008EE  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8482  0008F2  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8483  0008F6  0E30               	movlw	48
  8484  0008F8  6EDF               	movwf	indf2,c
  8485  0008FA  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8486  0008FE  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8487  000902  2ADE               	incf	postinc2,f,c
  8488  000904  0E00               	movlw	0
  8489  000906  22DD               	addwfc	postdec2,f,c
  8490  000908                     l6195:
  8491                           
  8492                           ;doprnt.c: 1209: exp--;
  8493  000908  0100               	movlb	0	; () banked
  8494  00090A  07B8               	decf	__doprnt@exp& (0+255),f,b
  8495  00090C  A0D8               	btfss	status,0,c
  8496  00090E  07B9               	decf	(__doprnt@exp+1)& (0+255),f,b
  8497  000910                     l6197:
  8498                           
  8499                           ; BSR set to: 0
  8500  000910  0100               	movlb	0	; () banked
  8501  000912  BFB9               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  8502  000914  D007               	goto	l6199
  8503  000916  0100               	movlb	0	; () banked
  8504  000918  51B9               	movf	(__doprnt@exp+1)& (0+255),w,b
  8505  00091A  E1C2               	bnz	l6187
  8506  00091C  0100               	movlb	0	; () banked
  8507  00091E  05B8               	decf	__doprnt@exp& (0+255),w,b
  8508  000920  B0D8               	btfsc	status,0,c
  8509  000922  D7BE               	goto	l6187
  8510  000924                     l6199:
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;doprnt.c: 1210: }
  8514                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8515  000924  0100               	movlb	0	; () banked
  8516  000926  BFC2               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  8517  000928  D00C               	goto	l679
  8518  00092A  0100               	movlb	0	; () banked
  8519  00092C  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  8520  00092E  E105               	bnz	u7250
  8521  000930  0E09               	movlw	9
  8522  000932  0100               	movlb	0	; () banked
  8523  000934  5DC1               	subwf	__doprnt@prec& (0+255),w,b
  8524  000936  A0D8               	btfss	status,0,c
  8525  000938  D004               	goto	l679
  8526  00093A                     u7250:
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8530  00093A  0E08               	movlw	8
  8531  00093C  0100               	movlb	0	; () banked
  8532  00093E  6FC3               	movwf	__doprnt@c& (0+255),b
  8533  000940  D002               	goto	l6203
  8534  000942                     l679:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;doprnt.c: 1213: else
  8538                           ;doprnt.c: 1214: c = prec;
  8539  000942  C0C1  F0C3         	movff	__doprnt@prec,__doprnt@c
  8540  000946                     l6203:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;doprnt.c: 1215: prec -= c;
  8544  000946  0100               	movlb	0	; () banked
  8545  000948  51C3               	movf	__doprnt@c& (0+255),w,b
  8546  00094A  0100               	movlb	0	; () banked
  8547  00094C  5FC1               	subwf	__doprnt@prec& (0+255),f,b
  8548  00094E  0E00               	movlw	0
  8549  000950  0100               	movlb	0	; () banked
  8550  000952  BFC3               	btfsc	__doprnt@c& (0+255),7,b
  8551  000954  0EFF               	movlw	255
  8552  000956  0100               	movlb	0	; () banked
  8553  000958  5BC2               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;doprnt.c: 1219: if(c)
  8557  00095A  0100               	movlb	0	; () banked
  8558  00095C  51C3               	movf	__doprnt@c& (0+255),w,b
  8559  00095E  0100               	movlb	0	; () banked
  8560  000960  B4D8               	btfsc	status,2,c
  8561  000962  D034               	goto	l6215
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  8565  000964  0100               	movlb	0	; () banked
  8566  000966  EE20 F002          	lfsr	2,2
  8567  00096A  51A1               	movf	__doprnt@pb& (0+255),w,b
  8568  00096C  26D9               	addwf	fsr2l,f,c
  8569  00096E  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8570  000970  22DA               	addwfc	fsr2h,f,c
  8571  000972  50DE               	movf	postinc2,w,c
  8572  000974  10DE               	iorwf	postinc2,w,c
  8573  000976  B4D8               	btfsc	status,2,c
  8574  000978  D014               	goto	l6211
  8575                           
  8576                           ; BSR set to: 0
  8577  00097A  0100               	movlb	0	; () banked
  8578  00097C  EE20 F002          	lfsr	2,2
  8579  000980  51A1               	movf	__doprnt@pb& (0+255),w,b
  8580  000982  26D9               	addwf	fsr2l,f,c
  8581  000984  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8582  000986  22DA               	addwfc	fsr2h,f,c
  8583  000988  D801               	call	u7288
  8584  00098A  D020               	goto	l6215
  8585  00098C                     u7288:
  8586  00098C  0005               	push	
  8587  00098E  6EFA               	movwf	pclath,c
  8588  000990  50DE               	movf	postinc2,w,c
  8589  000992  6EFD               	movwf	tosl,c
  8590  000994  50DE               	movf	postinc2,w,c
  8591  000996  6EFE               	movwf	tosh,c
  8592  000998  50F8               	movf	tblptru,w,c
  8593  00099A  6EFF               	movwf	tosu,c
  8594  00099C  50FA               	movf	pclath,w,c
  8595  00099E  0E2E               	movlw	46
  8596  0009A0  0012               	return		;indir
  8597  0009A2                     l6211:
  8598  0009A2  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8599  0009A6  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8600  0009AA  CFDE F0A7          	movff	postinc2,??__doprnt
  8601  0009AE  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8602  0009B2  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8603  0009B6  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8604  0009BA  0E2E               	movlw	46
  8605  0009BC  6EDF               	movwf	indf2,c
  8606  0009BE  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8607  0009C2  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8608  0009C6  2ADE               	incf	postinc2,f,c
  8609  0009C8  0E00               	movlw	0
  8610  0009CA  22DD               	addwfc	postdec2,f,c
  8611  0009CC                     l6215:
  8612                           
  8613                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8614  0009CC  0100               	movlb	0	; () banked
  8615  0009CE  51C3               	movf	__doprnt@c& (0+255),w,b
  8616  0009D0  ECC5  F00B         	call	_scale
  8617  0009D4  C085  F0AD         	movff	?_scale,__doprnt$2964
  8618  0009D8  C086  F0AE         	movff	?_scale+1,__doprnt$2964+1
  8619  0009DC  C087  F0AF         	movff	?_scale+2,__doprnt$2964+2
  8620                           
  8621                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8622  0009E0  C0BE  F07C         	movff	__doprnt@fval,___ftmul@f2
  8623  0009E4  C0BF  F07D         	movff	__doprnt@fval+1,___ftmul@f2+1
  8624  0009E8  C0C0  F07E         	movff	__doprnt@fval+2,___ftmul@f2+2
  8625  0009EC  C0AD  F079         	movff	__doprnt$2964,___ftmul@f1
  8626  0009F0  C0AE  F07A         	movff	__doprnt$2964+1,___ftmul@f1+1
  8627  0009F4  C0AF  F07B         	movff	__doprnt$2964+2,___ftmul@f1+2
  8628  0009F8  EC1B  F018         	call	___ftmul	;wreg free
  8629  0009FC  C079  F08C         	movff	?___ftmul,___fttol@f1
  8630  000A00  C07A  F08D         	movff	?___ftmul+1,___fttol@f1+1
  8631  000A04  C07B  F08E         	movff	?___ftmul+2,___fttol@f1+2
  8632  000A08  ECC4  F018         	call	___fttol	;wreg free
  8633  000A0C  C08C  F0B4         	movff	?___fttol,__doprnt@val
  8634  000A10  C08D  F0B5         	movff	?___fttol+1,__doprnt@val+1
  8635  000A14  C08E  F0B6         	movff	?___fttol+2,__doprnt@val+2
  8636  000A18  C08F  F0B7         	movff	?___fttol+3,__doprnt@val+3
  8637                           
  8638                           ;doprnt.c: 1228: while(c--) {
  8639  000A1C  D0A1               	goto	l6231
  8640  000A1E                     l6219:
  8641                           
  8642                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8643  000A1E  C0B4  F071         	movff	__doprnt@val,___lldiv@dividend
  8644  000A22  C0B5  F072         	movff	__doprnt@val+1,___lldiv@dividend+1
  8645  000A26  C0B6  F073         	movff	__doprnt@val+2,___lldiv@dividend+2
  8646  000A2A  C0B7  F074         	movff	__doprnt@val+3,___lldiv@dividend+3
  8647  000A2E  0100               	movlb	0	; () banked
  8648  000A30  51C3               	movf	__doprnt@c& (0+255),w,b
  8649  000A32  0D04               	mullw	4
  8650  000A34  0ED5               	movlw	low _dpowers
  8651  000A36  24F3               	addwf	prodl,w,c
  8652  000A38  6EF6               	movwf	tblptrl,c
  8653  000A3A  0E7E               	movlw	high _dpowers
  8654  000A3C  20F4               	addwfc	prodh,w,c
  8655  000A3E  6EF7               	movwf	tblptrh,c
  8656  000A40                     	if	0	;There are less than 3 active tblptr bytes
  8657  000A40                     	endif
  8658  000A40  0009               	tblrd		*+
  8659  000A42  CFF5 F075          	movff	tablat,___lldiv@divisor
  8660  000A46  0009               	tblrd		*+
  8661  000A48  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8662  000A4C  0009               	tblrd		*+
  8663  000A4E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8664  000A52  000A               	tblrd		*-
  8665  000A54  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8666  000A58  EC98  F01D         	call	___lldiv	;wreg free
  8667  000A5C  C071  F0BA         	movff	?___lldiv,__doprnt@tmpval
  8668  000A60  C072  F0BB         	movff	?___lldiv+1,__doprnt@tmpval+1
  8669  000A64  C073  F0BC         	movff	?___lldiv+2,__doprnt@tmpval+2
  8670  000A68  C074  F0BD         	movff	?___lldiv+3,__doprnt@tmpval+3
  8671                           
  8672                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8673  000A6C  C0BA  F079         	movff	__doprnt@tmpval,___llmod@dividend
  8674  000A70  C0BB  F07A         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  8675  000A74  C0BC  F07B         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  8676  000A78  C0BD  F07C         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  8677  000A7C  0E0A               	movlw	10
  8678  000A7E  0100               	movlb	0	; () banked
  8679  000A80  6F7D               	movwf	___llmod@divisor& (0+255),b
  8680  000A82  0E00               	movlw	0
  8681  000A84  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8682  000A86  0E00               	movlw	0
  8683  000A88  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8684  000A8A  0E00               	movlw	0
  8685  000A8C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8686  000A8E  EC38  F01F         	call	___llmod	;wreg free
  8687  000A92  C079  F0BA         	movff	?___llmod,__doprnt@tmpval
  8688  000A96  C07A  F0BB         	movff	?___llmod+1,__doprnt@tmpval+1
  8689  000A9A  C07B  F0BC         	movff	?___llmod+2,__doprnt@tmpval+2
  8690  000A9E  C07C  F0BD         	movff	?___llmod+3,__doprnt@tmpval+3
  8691                           
  8692                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  8693  000AA2  0100               	movlb	0	; () banked
  8694  000AA4  EE20 F002          	lfsr	2,2
  8695  000AA8  51A1               	movf	__doprnt@pb& (0+255),w,b
  8696  000AAA  26D9               	addwf	fsr2l,f,c
  8697  000AAC  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8698  000AAE  22DA               	addwfc	fsr2h,f,c
  8699  000AB0  50DE               	movf	postinc2,w,c
  8700  000AB2  10DE               	iorwf	postinc2,w,c
  8701  000AB4  B4D8               	btfsc	status,2,c
  8702  000AB6  D016               	goto	l6227
  8703                           
  8704                           ; BSR set to: 0
  8705  000AB8  0100               	movlb	0	; () banked
  8706  000ABA  EE20 F002          	lfsr	2,2
  8707  000ABE  51A1               	movf	__doprnt@pb& (0+255),w,b
  8708  000AC0  26D9               	addwf	fsr2l,f,c
  8709  000AC2  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8710  000AC4  22DA               	addwfc	fsr2h,f,c
  8711  000AC6  D801               	call	u7308
  8712  000AC8  D024               	goto	l6229
  8713  000ACA                     u7308:
  8714  000ACA  0005               	push	
  8715  000ACC  6EFA               	movwf	pclath,c
  8716  000ACE  50DE               	movf	postinc2,w,c
  8717  000AD0  6EFD               	movwf	tosl,c
  8718  000AD2  50DE               	movf	postinc2,w,c
  8719  000AD4  6EFE               	movwf	tosh,c
  8720  000AD6  50F8               	movf	tblptru,w,c
  8721  000AD8  6EFF               	movwf	tosu,c
  8722  000ADA  50FA               	movf	pclath,w,c
  8723  000ADC  0100               	movlb	0	; () banked
  8724  000ADE  51BA               	movf	__doprnt@tmpval& (0+255),w,b
  8725  000AE0  0F30               	addlw	48
  8726  000AE2  0012               	return		;indir
  8727  000AE4                     l6227:
  8728  000AE4  0100               	movlb	0	; () banked
  8729  000AE6  51BA               	movf	__doprnt@tmpval& (0+255),w,b
  8730  000AE8  0F30               	addlw	48
  8731  000AEA  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8732  000AEE  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8733  000AF2  CFDE F0A7          	movff	postinc2,??__doprnt
  8734  000AF6  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8735  000AFA  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8736  000AFE  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8737  000B02  6EDF               	movwf	indf2,c
  8738  000B04  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8739  000B08  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8740  000B0C  2ADE               	incf	postinc2,f,c
  8741  000B0E  0E00               	movlw	0
  8742  000B10  22DD               	addwfc	postdec2,f,c
  8743  000B12                     l6229:
  8744                           
  8745                           ;doprnt.c: 1232: val %= dpowers[c];
  8746  000B12  C0B4  F079         	movff	__doprnt@val,___llmod@dividend
  8747  000B16  C0B5  F07A         	movff	__doprnt@val+1,___llmod@dividend+1
  8748  000B1A  C0B6  F07B         	movff	__doprnt@val+2,___llmod@dividend+2
  8749  000B1E  C0B7  F07C         	movff	__doprnt@val+3,___llmod@dividend+3
  8750  000B22  0100               	movlb	0	; () banked
  8751  000B24  51C3               	movf	__doprnt@c& (0+255),w,b
  8752  000B26  0D04               	mullw	4
  8753  000B28  0ED5               	movlw	low _dpowers
  8754  000B2A  24F3               	addwf	prodl,w,c
  8755  000B2C  6EF6               	movwf	tblptrl,c
  8756  000B2E  0E7E               	movlw	high _dpowers
  8757  000B30  20F4               	addwfc	prodh,w,c
  8758  000B32  6EF7               	movwf	tblptrh,c
  8759  000B34                     	if	0	;There are less than 3 active tblptr bytes
  8760  000B34                     	endif
  8761  000B34  0009               	tblrd		*+
  8762  000B36  CFF5 F07D          	movff	tablat,___llmod@divisor
  8763  000B3A  0009               	tblrd		*+
  8764  000B3C  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  8765  000B40  0009               	tblrd		*+
  8766  000B42  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  8767  000B46  000A               	tblrd		*-
  8768  000B48  CFF5 F080          	movff	tablat,___llmod@divisor+3
  8769  000B4C  EC38  F01F         	call	___llmod
  8770  000B50  C079  F0B4         	movff	?___llmod,__doprnt@val
  8771  000B54  C07A  F0B5         	movff	?___llmod+1,__doprnt@val+1
  8772  000B58  C07B  F0B6         	movff	?___llmod+2,__doprnt@val+2
  8773  000B5C  C07C  F0B7         	movff	?___llmod+3,__doprnt@val+3
  8774  000B60                     l6231:
  8775  000B60  0100               	movlb	0	; () banked
  8776  000B62  07C3               	decf	__doprnt@c& (0+255),f,b
  8777  000B64  0100               	movlb	0	; () banked
  8778  000B66  29C3               	incf	__doprnt@c& (0+255),w,b
  8779  000B68  B4D8               	btfsc	status,2,c
  8780  000B6A  D039               	goto	l6243
  8781  000B6C  D758               	goto	l6219
  8782  000B6E                     l6233:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8786  000B6E  0100               	movlb	0	; () banked
  8787  000B70  EE20 F002          	lfsr	2,2
  8788  000B74  51A1               	movf	__doprnt@pb& (0+255),w,b
  8789  000B76  26D9               	addwf	fsr2l,f,c
  8790  000B78  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8791  000B7A  22DA               	addwfc	fsr2h,f,c
  8792  000B7C  50DE               	movf	postinc2,w,c
  8793  000B7E  10DE               	iorwf	postinc2,w,c
  8794  000B80  B4D8               	btfsc	status,2,c
  8795  000B82  D014               	goto	l6237
  8796                           
  8797                           ; BSR set to: 0
  8798  000B84  0100               	movlb	0	; () banked
  8799  000B86  EE20 F002          	lfsr	2,2
  8800  000B8A  51A1               	movf	__doprnt@pb& (0+255),w,b
  8801  000B8C  26D9               	addwf	fsr2l,f,c
  8802  000B8E  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  8803  000B90  22DA               	addwfc	fsr2h,f,c
  8804  000B92  D801               	call	u7338
  8805  000B94  D020               	goto	l6241
  8806  000B96                     u7338:
  8807  000B96  0005               	push	
  8808  000B98  6EFA               	movwf	pclath,c
  8809  000B9A  50DE               	movf	postinc2,w,c
  8810  000B9C  6EFD               	movwf	tosl,c
  8811  000B9E  50DE               	movf	postinc2,w,c
  8812  000BA0  6EFE               	movwf	tosh,c
  8813  000BA2  50F8               	movf	tblptru,w,c
  8814  000BA4  6EFF               	movwf	tosu,c
  8815  000BA6  50FA               	movf	pclath,w,c
  8816  000BA8  0E30               	movlw	48
  8817  000BAA  0012               	return		;indir
  8818  000BAC                     l6237:
  8819  000BAC  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8820  000BB0  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8821  000BB4  CFDE F0A7          	movff	postinc2,??__doprnt
  8822  000BB8  CFDD F0A8          	movff	postdec2,??__doprnt+1
  8823  000BBC  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8824  000BC0  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8825  000BC4  0E30               	movlw	48
  8826  000BC6  6EDF               	movwf	indf2,c
  8827  000BC8  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  8828  000BCC  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  8829  000BD0  2ADE               	incf	postinc2,f,c
  8830  000BD2  0E00               	movlw	0
  8831  000BD4  22DD               	addwfc	postdec2,f,c
  8832  000BD6                     l6241:
  8833                           
  8834                           ;doprnt.c: 1237: prec--;
  8835  000BD6  0100               	movlb	0	; () banked
  8836  000BD8  07C1               	decf	__doprnt@prec& (0+255),f,b
  8837  000BDA  A0D8               	btfss	status,0,c
  8838  000BDC  07C2               	decf	(__doprnt@prec+1)& (0+255),f,b
  8839  000BDE                     l6243:
  8840                           
  8841                           ; BSR set to: 0
  8842  000BDE  0100               	movlb	0	; () banked
  8843  000BE0  51C1               	movf	__doprnt@prec& (0+255),w,b
  8844  000BE2  0100               	movlb	0	; () banked
  8845  000BE4  11C2               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  8846  000BE6  B4D8               	btfsc	status,2,c
  8847  000BE8  D1EE               	goto	l6335
  8848  000BEA  D7C1               	goto	l6233
  8849  000BEC                     l6245:
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;doprnt.c: 1246: }
  8853                           ;doprnt.c: 1253: {
  8854                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8855  000BEC  C0A5  FFD9         	movff	__doprnt@ap,fsr2l
  8856  000BF0  C0A6  FFDA         	movff	__doprnt@ap+1,fsr2h
  8857  000BF4  CFDF F0A7          	movff	indf2,??__doprnt
  8858  000BF8  0E02               	movlw	2
  8859  000BFA  26DE               	addwf	postinc2,f,c
  8860  000BFC  CFDF F0A8          	movff	indf2,??__doprnt+1
  8861  000C00  0E00               	movlw	0
  8862  000C02  22DD               	addwfc	postdec2,f,c
  8863  000C04  C0A7  FFD9         	movff	??__doprnt,fsr2l
  8864  000C08  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  8865  000C0C  CFDE F0B4          	movff	postinc2,__doprnt@val
  8866  000C10  CFDD F0B5          	movff	postdec2,__doprnt@val+1
  8867  000C14  0100               	movlb	0	; () banked
  8868  000C16  0E00               	movlw	0
  8869  000C18  BFB5               	btfsc	(__doprnt@val+1)& (0+255),7,b
  8870  000C1A  0EFF               	movlw	-1
  8871  000C1C  6FB6               	movwf	(__doprnt@val+2)& (0+255),b
  8872  000C1E  6FB7               	movwf	(__doprnt@val+3)& (0+255),b
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;doprnt.c: 1261: if((long)val < 0) {
  8876  000C20  0100               	movlb	0	; () banked
  8877  000C22  AFB7               	btfss	(__doprnt@val+3)& (0+255),7,b
  8878  000C24  D00C               	goto	l6253
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;doprnt.c: 1262: flag |= 0x03;
  8882  000C26  0E03               	movlw	3
  8883  000C28  0100               	movlb	0	; () banked
  8884  000C2A  13B0               	iorwf	__doprnt@flag& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;doprnt.c: 1263: val = -val;
  8888  000C2C  0100               	movlb	0	; () banked
  8889  000C2E  1FB7               	comf	(__doprnt@val+3)& (0+255),f,b
  8890  000C30  1FB6               	comf	(__doprnt@val+2)& (0+255),f,b
  8891  000C32  1FB5               	comf	(__doprnt@val+1)& (0+255),f,b
  8892  000C34  6DB4               	negf	__doprnt@val& (0+255),b
  8893  000C36  0E00               	movlw	0
  8894  000C38  23B5               	addwfc	(__doprnt@val+1)& (0+255),f,b
  8895  000C3A  23B6               	addwfc	(__doprnt@val+2)& (0+255),f,b
  8896  000C3C  23B7               	addwfc	(__doprnt@val+3)& (0+255),f,b
  8897  000C3E                     l6253:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;doprnt.c: 1264: }
  8901                           ;doprnt.c: 1266: }
  8902                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8903  000C3E  0100               	movlb	0	; () banked
  8904  000C40  51C1               	movf	__doprnt@prec& (0+255),w,b
  8905  000C42  0100               	movlb	0	; () banked
  8906  000C44  11C2               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  8907  000C46  A4D8               	btfss	status,2,c
  8908  000C48  D00D               	goto	l6259
  8909                           
  8910                           ; BSR set to: 0
  8911  000C4A  0100               	movlb	0	; () banked
  8912  000C4C  51B4               	movf	__doprnt@val& (0+255),w,b
  8913  000C4E  0100               	movlb	0	; () banked
  8914  000C50  11B5               	iorwf	(__doprnt@val+1)& (0+255),w,b
  8915  000C52  0100               	movlb	0	; () banked
  8916  000C54  11B6               	iorwf	(__doprnt@val+2)& (0+255),w,b
  8917  000C56  0100               	movlb	0	; () banked
  8918  000C58  11B7               	iorwf	(__doprnt@val+3)& (0+255),w,b
  8919  000C5A  A4D8               	btfss	status,2,c
  8920  000C5C  D003               	goto	l6259
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;doprnt.c: 1291: prec++;
  8924  000C5E  0100               	movlb	0	; () banked
  8925  000C60  4BC1               	infsnz	__doprnt@prec& (0+255),f,b
  8926  000C62  2BC2               	incf	(__doprnt@prec+1)& (0+255),f,b
  8927  000C64                     l6259:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8931  000C64  0E01               	movlw	1
  8932  000C66  0100               	movlb	0	; () banked
  8933  000C68  6FC3               	movwf	__doprnt@c& (0+255),b
  8934  000C6A                     l6261:
  8935                           
  8936                           ; BSR set to: 0
  8937  000C6A  0E0A               	movlw	10
  8938  000C6C  0100               	movlb	0	; () banked
  8939  000C6E  19C3               	xorwf	__doprnt@c& (0+255),w,b
  8940  000C70  B4D8               	btfsc	status,2,c
  8941  000C72  D01E               	goto	l6273
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;doprnt.c: 1306: if(val < dpowers[c])
  8945                           
  8946                           ; BSR set to: 0
  8947                           
  8948                           ; BSR set to: 0
  8949  000C74  0100               	movlb	0	; () banked
  8950  000C76  51C3               	movf	__doprnt@c& (0+255),w,b
  8951  000C78  0D04               	mullw	4
  8952  000C7A  0ED5               	movlw	low _dpowers
  8953  000C7C  24F3               	addwf	prodl,w,c
  8954  000C7E  6EF6               	movwf	tblptrl,c
  8955  000C80  0E7E               	movlw	high _dpowers
  8956  000C82  20F4               	addwfc	prodh,w,c
  8957  000C84  6EF7               	movwf	tblptrh,c
  8958  000C86                     	if	0	;There are less than 3 active tblptr bytes
  8959  000C86                     	endif
  8960  000C86  0009               	tblrd		*+
  8961  000C88  50F5               	movf	tablat,w,c
  8962  000C8A  0100               	movlb	0	; () banked
  8963  000C8C  5DB4               	subwf	__doprnt@val& (0+255),w,b
  8964  000C8E  0009               	tblrd		*+
  8965  000C90  50F5               	movf	tablat,w,c
  8966  000C92  0100               	movlb	0	; () banked
  8967  000C94  59B5               	subwfb	(__doprnt@val+1)& (0+255),w,b
  8968  000C96  0009               	tblrd		*+
  8969  000C98  50F5               	movf	tablat,w,c
  8970  000C9A  0100               	movlb	0	; () banked
  8971  000C9C  59B6               	subwfb	(__doprnt@val+2)& (0+255),w,b
  8972  000C9E  0009               	tblrd		*+
  8973  000CA0  50F5               	movf	tablat,w,c
  8974  000CA2  0100               	movlb	0	; () banked
  8975  000CA4  59B7               	subwfb	(__doprnt@val+3)& (0+255),w,b
  8976  000CA6  A0D8               	btfss	status,0,c
  8977  000CA8  D003               	goto	l6273
  8978                           
  8979                           ; BSR set to: 0
  8980                           
  8981                           ; BSR set to: 0
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;doprnt.c: 1307: break;
  8985  000CAA  0100               	movlb	0	; () banked
  8986  000CAC  2BC3               	incf	__doprnt@c& (0+255),f,b
  8987  000CAE  D7DD               	goto	l6261
  8988  000CB0                     l6273:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;doprnt.c: 1339: if(c < prec)
  8992  000CB0  0E80               	movlw	128
  8993  000CB2  0100               	movlb	0	; () banked
  8994  000CB4  BFC3               	btfsc	__doprnt@c& (0+255),7,b
  8995  000CB6  0E7F               	movlw	127
  8996  000CB8  0100               	movlb	0	; () banked
  8997  000CBA  6FA7               	movwf	??__doprnt& (0+255),b
  8998  000CBC  0100               	movlb	0	; () banked
  8999  000CBE  51C1               	movf	__doprnt@prec& (0+255),w,b
  9000  000CC0  0100               	movlb	0	; () banked
  9001  000CC2  5DC3               	subwf	__doprnt@c& (0+255),w,b
  9002  000CC4  0100               	movlb	0	; () banked
  9003  000CC6  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  9004  000CC8  0A80               	xorlw	128
  9005  000CCA  0100               	movlb	0	; () banked
  9006  000CCC  59A7               	subwfb	??__doprnt& (0+255),w,b
  9007  000CCE  B0D8               	btfsc	status,0,c
  9008  000CD0  D003               	goto	l6277
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;doprnt.c: 1340: c = prec;
  9012  000CD2  C0C1  F0C3         	movff	__doprnt@prec,__doprnt@c
  9013  000CD6  D018               	goto	l6281
  9014  000CD8                     l6277:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;doprnt.c: 1341: else if(prec < c)
  9018  000CD8  0100               	movlb	0	; () banked
  9019  000CDA  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  9020  000CDC  0A80               	xorlw	128
  9021  000CDE  0100               	movlb	0	; () banked
  9022  000CE0  6FA7               	movwf	??__doprnt& (0+255),b
  9023  000CE2  0100               	movlb	0	; () banked
  9024  000CE4  51C3               	movf	__doprnt@c& (0+255),w,b
  9025  000CE6  0100               	movlb	0	; () banked
  9026  000CE8  5DC1               	subwf	__doprnt@prec& (0+255),w,b
  9027  000CEA  0E80               	movlw	128
  9028  000CEC  0100               	movlb	0	; () banked
  9029  000CEE  BFC3               	btfsc	__doprnt@c& (0+255),7,b
  9030  000CF0  0E7F               	movlw	127
  9031  000CF2  0100               	movlb	0	; () banked
  9032  000CF4  59A7               	subwfb	??__doprnt& (0+255),w,b
  9033  000CF6  B0D8               	btfsc	status,0,c
  9034  000CF8  D007               	goto	l6281
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;doprnt.c: 1342: prec = c;
  9038  000CFA  0100               	movlb	0	; () banked
  9039  000CFC  51C3               	movf	__doprnt@c& (0+255),w,b
  9040  000CFE  0100               	movlb	0	; () banked
  9041  000D00  6FC1               	movwf	__doprnt@prec& (0+255),b
  9042  000D02  6BC2               	clrf	(__doprnt@prec+1)& (0+255),b
  9043  000D04  BFC1               	btfsc	__doprnt@prec& (0+255),7,b
  9044  000D06  07C2               	decf	(__doprnt@prec+1)& (0+255),f,b
  9045  000D08                     l6281:
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9049  000D08  0100               	movlb	0	; () banked
  9050  000D0A  51B2               	movf	__doprnt@width& (0+255),w,b
  9051  000D0C  0100               	movlb	0	; () banked
  9052  000D0E  11B3               	iorwf	(__doprnt@width+1)& (0+255),w,b
  9053  000D10  B4D8               	btfsc	status,2,c
  9054  000D12  D014               	goto	l6287
  9055                           
  9056                           ; BSR set to: 0
  9057  000D14  0E03               	movlw	3
  9058  000D16  0100               	movlb	0	; () banked
  9059  000D18  15B0               	andwf	__doprnt@flag& (0+255),w,b
  9060  000D1A  0100               	movlb	0	; () banked
  9061  000D1C  6FA7               	movwf	??__doprnt& (0+255),b
  9062  000D1E  0E00               	movlw	0
  9063  000D20  0100               	movlb	0	; () banked
  9064  000D22  15B1               	andwf	(__doprnt@flag+1)& (0+255),w,b
  9065  000D24  0100               	movlb	0	; () banked
  9066  000D26  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  9067  000D28  0100               	movlb	0	; () banked
  9068  000D2A  51A7               	movf	??__doprnt& (0+255),w,b
  9069  000D2C  0100               	movlb	0	; () banked
  9070  000D2E  11A8               	iorwf	(??__doprnt+1)& (0+255),w,b
  9071  000D30  B4D8               	btfsc	status,2,c
  9072  000D32  D004               	goto	l6287
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;doprnt.c: 1346: width--;
  9076  000D34  0100               	movlb	0	; () banked
  9077  000D36  07B2               	decf	__doprnt@width& (0+255),f,b
  9078  000D38  A0D8               	btfss	status,0,c
  9079  000D3A  07B3               	decf	(__doprnt@width+1)& (0+255),f,b
  9080  000D3C                     l6287:
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9084  000D3C  0100               	movlb	0	; () banked
  9085  000D3E  ADB1               	btfss	(__doprnt@flag+1)& (0+255),6,b
  9086  000D40  D01E               	goto	l6295
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;doprnt.c: 1349: if(width > prec)
  9090  000D42  0100               	movlb	0	; () banked
  9091  000D44  51B2               	movf	__doprnt@width& (0+255),w,b
  9092  000D46  0100               	movlb	0	; () banked
  9093  000D48  5DC1               	subwf	__doprnt@prec& (0+255),w,b
  9094  000D4A  0100               	movlb	0	; () banked
  9095  000D4C  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  9096  000D4E  0A80               	xorlw	128
  9097  000D50  0100               	movlb	0	; () banked
  9098  000D52  6FA7               	movwf	??__doprnt& (0+255),b
  9099  000D54  0100               	movlb	0	; () banked
  9100  000D56  51B3               	movf	(__doprnt@width+1)& (0+255),w,b
  9101  000D58  0A80               	xorlw	128
  9102  000D5A  0100               	movlb	0	; () banked
  9103  000D5C  59A7               	subwfb	??__doprnt& (0+255),w,b
  9104  000D5E  B0D8               	btfsc	status,0,c
  9105  000D60  D009               	goto	l6293
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;doprnt.c: 1350: width -= prec;
  9109  000D62  0100               	movlb	0	; () banked
  9110  000D64  51C1               	movf	__doprnt@prec& (0+255),w,b
  9111  000D66  0100               	movlb	0	; () banked
  9112  000D68  5FB2               	subwf	__doprnt@width& (0+255),f,b
  9113  000D6A  0100               	movlb	0	; () banked
  9114  000D6C  51C2               	movf	(__doprnt@prec+1)& (0+255),w,b
  9115  000D6E  0100               	movlb	0	; () banked
  9116  000D70  5BB3               	subwfb	(__doprnt@width+1)& (0+255),f,b
  9117  000D72  D005               	goto	l6295
  9118  000D74                     l6293:
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;doprnt.c: 1351: else
  9122                           ;doprnt.c: 1352: width = 0;
  9123  000D74  0E00               	movlw	0
  9124  000D76  0100               	movlb	0	; () banked
  9125  000D78  6FB3               	movwf	(__doprnt@width+1)& (0+255),b
  9126  000D7A  0E00               	movlw	0
  9127  000D7C  6FB2               	movwf	__doprnt@width& (0+255),b
  9128  000D7E                     l6295:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;doprnt.c: 1353: }
  9132                           ;doprnt.c: 1381: if(width > c)
  9133  000D7E  0E80               	movlw	128
  9134  000D80  0100               	movlb	0	; () banked
  9135  000D82  BFC3               	btfsc	__doprnt@c& (0+255),7,b
  9136  000D84  0E7F               	movlw	127
  9137  000D86  0100               	movlb	0	; () banked
  9138  000D88  6FA7               	movwf	??__doprnt& (0+255),b
  9139  000D8A  0100               	movlb	0	; () banked
  9140  000D8C  51B2               	movf	__doprnt@width& (0+255),w,b
  9141  000D8E  0100               	movlb	0	; () banked
  9142  000D90  5DC3               	subwf	__doprnt@c& (0+255),w,b
  9143  000D92  0100               	movlb	0	; () banked
  9144  000D94  51B3               	movf	(__doprnt@width+1)& (0+255),w,b
  9145  000D96  0A80               	xorlw	128
  9146  000D98  0100               	movlb	0	; () banked
  9147  000D9A  59A7               	subwfb	??__doprnt& (0+255),w,b
  9148  000D9C  B0D8               	btfsc	status,0,c
  9149  000D9E  D00B               	goto	l6299
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;doprnt.c: 1382: width -= c;
  9153  000DA0  0100               	movlb	0	; () banked
  9154  000DA2  51C3               	movf	__doprnt@c& (0+255),w,b
  9155  000DA4  0100               	movlb	0	; () banked
  9156  000DA6  5FB2               	subwf	__doprnt@width& (0+255),f,b
  9157  000DA8  0E00               	movlw	0
  9158  000DAA  0100               	movlb	0	; () banked
  9159  000DAC  BFC3               	btfsc	__doprnt@c& (0+255),7,b
  9160  000DAE  0EFF               	movlw	255
  9161  000DB0  0100               	movlb	0	; () banked
  9162  000DB2  5BB3               	subwfb	(__doprnt@width+1)& (0+255),f,b
  9163  000DB4  D005               	goto	l6301
  9164  000DB6                     l6299:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;doprnt.c: 1383: else
  9168                           ;doprnt.c: 1384: width = 0;
  9169  000DB6  0E00               	movlw	0
  9170  000DB8  0100               	movlb	0	; () banked
  9171  000DBA  6FB3               	movwf	(__doprnt@width+1)& (0+255),b
  9172  000DBC  0E00               	movlw	0
  9173  000DBE  6FB2               	movwf	__doprnt@width& (0+255),b
  9174  000DC0                     l6301:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;doprnt.c: 1422: {
  9178                           ;doprnt.c: 1424: if(width
  9179                           ;doprnt.c: 1428: )
  9180  000DC0  0100               	movlb	0	; () banked
  9181  000DC2  51B2               	movf	__doprnt@width& (0+255),w,b
  9182  000DC4  0100               	movlb	0	; () banked
  9183  000DC6  11B3               	iorwf	(__doprnt@width+1)& (0+255),w,b
  9184  000DC8  B4D8               	btfsc	status,2,c
  9185  000DCA  D03E               	goto	l6313
  9186  000DCC                     l6303:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  9190  000DCC  0100               	movlb	0	; () banked
  9191  000DCE  EE20 F002          	lfsr	2,2
  9192  000DD2  51A1               	movf	__doprnt@pb& (0+255),w,b
  9193  000DD4  26D9               	addwf	fsr2l,f,c
  9194  000DD6  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9195  000DD8  22DA               	addwfc	fsr2h,f,c
  9196  000DDA  50DE               	movf	postinc2,w,c
  9197  000DDC  10DE               	iorwf	postinc2,w,c
  9198  000DDE  B4D8               	btfsc	status,2,c
  9199  000DE0  D014               	goto	l6307
  9200                           
  9201                           ; BSR set to: 0
  9202  000DE2  0100               	movlb	0	; () banked
  9203  000DE4  EE20 F002          	lfsr	2,2
  9204  000DE8  51A1               	movf	__doprnt@pb& (0+255),w,b
  9205  000DEA  26D9               	addwf	fsr2l,f,c
  9206  000DEC  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9207  000DEE  22DA               	addwfc	fsr2h,f,c
  9208  000DF0  D801               	call	u7508
  9209  000DF2  D020               	goto	l6311
  9210  000DF4                     u7508:
  9211  000DF4  0005               	push	
  9212  000DF6  6EFA               	movwf	pclath,c
  9213  000DF8  50DE               	movf	postinc2,w,c
  9214  000DFA  6EFD               	movwf	tosl,c
  9215  000DFC  50DE               	movf	postinc2,w,c
  9216  000DFE  6EFE               	movwf	tosh,c
  9217  000E00  50F8               	movf	tblptru,w,c
  9218  000E02  6EFF               	movwf	tosu,c
  9219  000E04  50FA               	movf	pclath,w,c
  9220  000E06  0E20               	movlw	32
  9221  000E08  0012               	return		;indir
  9222  000E0A                     l6307:
  9223  000E0A  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  9224  000E0E  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  9225  000E12  CFDE F0A7          	movff	postinc2,??__doprnt
  9226  000E16  CFDD F0A8          	movff	postdec2,??__doprnt+1
  9227  000E1A  C0A7  FFD9         	movff	??__doprnt,fsr2l
  9228  000E1E  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  9229  000E22  0E20               	movlw	32
  9230  000E24  6EDF               	movwf	indf2,c
  9231  000E26  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  9232  000E2A  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  9233  000E2E  2ADE               	incf	postinc2,f,c
  9234  000E30  0E00               	movlw	0
  9235  000E32  22DD               	addwfc	postdec2,f,c
  9236  000E34                     l6311:
  9237                           
  9238                           ;doprnt.c: 1431: while(--width);
  9239  000E34  0100               	movlb	0	; () banked
  9240  000E36  07B2               	decf	__doprnt@width& (0+255),f,b
  9241  000E38  A0D8               	btfss	status,0,c
  9242  000E3A  07B3               	decf	(__doprnt@width+1)& (0+255),f,b
  9243  000E3C  0100               	movlb	0	; () banked
  9244  000E3E  51B2               	movf	__doprnt@width& (0+255),w,b
  9245  000E40  0100               	movlb	0	; () banked
  9246  000E42  11B3               	iorwf	(__doprnt@width+1)& (0+255),w,b
  9247  000E44  A4D8               	btfss	status,2,c
  9248  000E46  D7C2               	goto	l6303
  9249  000E48                     l6313:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;doprnt.c: 1438: if(flag & 0x03)
  9253  000E48  0E03               	movlw	3
  9254  000E4A  0100               	movlb	0	; () banked
  9255  000E4C  15B0               	andwf	__doprnt@flag& (0+255),w,b
  9256  000E4E  0100               	movlb	0	; () banked
  9257  000E50  6FA7               	movwf	??__doprnt& (0+255),b
  9258  000E52  0E00               	movlw	0
  9259  000E54  0100               	movlb	0	; () banked
  9260  000E56  15B1               	andwf	(__doprnt@flag+1)& (0+255),w,b
  9261  000E58  0100               	movlb	0	; () banked
  9262  000E5A  6FA8               	movwf	(??__doprnt+1)& (0+255),b
  9263  000E5C  0100               	movlb	0	; () banked
  9264  000E5E  51A7               	movf	??__doprnt& (0+255),w,b
  9265  000E60  0100               	movlb	0	; () banked
  9266  000E62  11A8               	iorwf	(??__doprnt+1)& (0+255),w,b
  9267  000E64  B4D8               	btfsc	status,2,c
  9268  000E66  D0A4               	goto	l6333
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  9272  000E68  0100               	movlb	0	; () banked
  9273  000E6A  EE20 F002          	lfsr	2,2
  9274  000E6E  51A1               	movf	__doprnt@pb& (0+255),w,b
  9275  000E70  26D9               	addwf	fsr2l,f,c
  9276  000E72  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9277  000E74  22DA               	addwfc	fsr2h,f,c
  9278  000E76  50DE               	movf	postinc2,w,c
  9279  000E78  10DE               	iorwf	postinc2,w,c
  9280  000E7A  B4D8               	btfsc	status,2,c
  9281  000E7C  D014               	goto	l6319
  9282                           
  9283                           ; BSR set to: 0
  9284  000E7E  0100               	movlb	0	; () banked
  9285  000E80  EE20 F002          	lfsr	2,2
  9286  000E84  51A1               	movf	__doprnt@pb& (0+255),w,b
  9287  000E86  26D9               	addwf	fsr2l,f,c
  9288  000E88  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9289  000E8A  22DA               	addwfc	fsr2h,f,c
  9290  000E8C  D801               	call	u7548
  9291  000E8E  D090               	goto	l6333
  9292  000E90                     u7548:
  9293  000E90  0005               	push	
  9294  000E92  6EFA               	movwf	pclath,c
  9295  000E94  50DE               	movf	postinc2,w,c
  9296  000E96  6EFD               	movwf	tosl,c
  9297  000E98  50DE               	movf	postinc2,w,c
  9298  000E9A  6EFE               	movwf	tosh,c
  9299  000E9C  50F8               	movf	tblptru,w,c
  9300  000E9E  6EFF               	movwf	tosu,c
  9301  000EA0  50FA               	movf	pclath,w,c
  9302  000EA2  0E2D               	movlw	45
  9303  000EA4  0012               	return		;indir
  9304  000EA6                     l6319:
  9305  000EA6  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  9306  000EAA  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  9307  000EAE  CFDE F0A7          	movff	postinc2,??__doprnt
  9308  000EB2  CFDD F0A8          	movff	postdec2,??__doprnt+1
  9309  000EB6  C0A7  FFD9         	movff	??__doprnt,fsr2l
  9310  000EBA  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  9311  000EBE  0E2D               	movlw	45
  9312  000EC0  6EDF               	movwf	indf2,c
  9313  000EC2  D06F               	goto	l6331
  9314  000EC4                     l6323:
  9315                           
  9316                           ;doprnt.c: 1478: {
  9317                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9318  000EC4  C0C1  F0A7         	movff	__doprnt@prec,??__doprnt
  9319  000EC8  C0C2  F0A8         	movff	__doprnt@prec+1,??__doprnt+1
  9320  000ECC  0100               	movlb	0	; () banked
  9321  000ECE  90D8               	bcf	status,0,c
  9322  000ED0  37A7               	rlcf	??__doprnt& (0+255),f,b
  9323  000ED2  37A8               	rlcf	(??__doprnt+1)& (0+255),f,b
  9324  000ED4  0100               	movlb	0	; () banked
  9325  000ED6  90D8               	bcf	status,0,c
  9326  000ED8  37A7               	rlcf	??__doprnt& (0+255),f,b
  9327  000EDA  37A8               	rlcf	(??__doprnt+1)& (0+255),f,b
  9328  000EDC  0ED5               	movlw	low _dpowers
  9329  000EDE  0100               	movlb	0	; () banked
  9330  000EE0  25A7               	addwf	??__doprnt& (0+255),w,b
  9331  000EE2  6EF6               	movwf	tblptrl,c
  9332  000EE4  0E7E               	movlw	high _dpowers
  9333  000EE6  21A8               	addwfc	(??__doprnt+1)& (0+255),w,b
  9334  000EE8  6EF7               	movwf	tblptrh,c
  9335  000EEA                     	if	0	;There are less than 3 active tblptr bytes
  9336  000EEA                     	endif
  9337  000EEA  0009               	tblrd		*+
  9338  000EEC  CFF5 F075          	movff	tablat,___lldiv@divisor
  9339  000EF0  0009               	tblrd		*+
  9340  000EF2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  9341  000EF6  0009               	tblrd		*+
  9342  000EF8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  9343  000EFC  000A               	tblrd		*-
  9344  000EFE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  9345  000F02  C0B4  F071         	movff	__doprnt@val,___lldiv@dividend
  9346  000F06  C0B5  F072         	movff	__doprnt@val+1,___lldiv@dividend+1
  9347  000F0A  C0B6  F073         	movff	__doprnt@val+2,___lldiv@dividend+2
  9348  000F0E  C0B7  F074         	movff	__doprnt@val+3,___lldiv@dividend+3
  9349  000F12  EC98  F01D         	call	___lldiv
  9350  000F16  C071  F079         	movff	?___lldiv,___llmod@dividend
  9351  000F1A  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  9352  000F1E  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  9353  000F22  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  9354  000F26  0E0A               	movlw	10
  9355  000F28  0100               	movlb	0	; () banked
  9356  000F2A  6F7D               	movwf	___llmod@divisor& (0+255),b
  9357  000F2C  0E00               	movlw	0
  9358  000F2E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  9359  000F30  0E00               	movlw	0
  9360  000F32  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  9361  000F34  0E00               	movlw	0
  9362  000F36  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  9363  000F38  EC38  F01F         	call	___llmod	;wreg free
  9364  000F3C  0100               	movlb	0	; () banked
  9365  000F3E  5179               	movf	?___llmod& (0+255),w,b
  9366  000F40  0F30               	addlw	48
  9367  000F42  0100               	movlb	0	; () banked
  9368  000F44  6FC3               	movwf	__doprnt@c& (0+255),b
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;doprnt.c: 1523: }
  9372                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  9373  000F46  0100               	movlb	0	; () banked
  9374  000F48  EE20 F002          	lfsr	2,2
  9375  000F4C  51A1               	movf	__doprnt@pb& (0+255),w,b
  9376  000F4E  26D9               	addwf	fsr2l,f,c
  9377  000F50  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9378  000F52  22DA               	addwfc	fsr2h,f,c
  9379  000F54  50DE               	movf	postinc2,w,c
  9380  000F56  10DE               	iorwf	postinc2,w,c
  9381  000F58  B4D8               	btfsc	status,2,c
  9382  000F5A  D015               	goto	l6329
  9383                           
  9384                           ; BSR set to: 0
  9385  000F5C  0100               	movlb	0	; () banked
  9386  000F5E  EE20 F002          	lfsr	2,2
  9387  000F62  51A1               	movf	__doprnt@pb& (0+255),w,b
  9388  000F64  26D9               	addwf	fsr2l,f,c
  9389  000F66  51A2               	movf	(__doprnt@pb+1)& (0+255),w,b
  9390  000F68  22DA               	addwfc	fsr2h,f,c
  9391  000F6A  D801               	call	u7568
  9392  000F6C  D021               	goto	l6333
  9393  000F6E                     u7568:
  9394  000F6E  0005               	push	
  9395  000F70  6EFA               	movwf	pclath,c
  9396  000F72  50DE               	movf	postinc2,w,c
  9397  000F74  6EFD               	movwf	tosl,c
  9398  000F76  50DE               	movf	postinc2,w,c
  9399  000F78  6EFE               	movwf	tosh,c
  9400  000F7A  50F8               	movf	tblptru,w,c
  9401  000F7C  6EFF               	movwf	tosu,c
  9402  000F7E  50FA               	movf	pclath,w,c
  9403  000F80  0100               	movlb	0	; () banked
  9404  000F82  51C3               	movf	__doprnt@c& (0+255),w,b
  9405  000F84  0012               	return		;indir
  9406  000F86                     l6329:
  9407  000F86  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  9408  000F8A  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  9409  000F8E  CFDE F0A7          	movff	postinc2,??__doprnt
  9410  000F92  CFDD F0A8          	movff	postdec2,??__doprnt+1
  9411  000F96  C0A7  FFD9         	movff	??__doprnt,fsr2l
  9412  000F9A  C0A8  FFDA         	movff	??__doprnt+1,fsr2h
  9413  000F9E  C0C3  FFDF         	movff	__doprnt@c,indf2
  9414  000FA2                     l6331:
  9415  000FA2  C0A1  FFD9         	movff	__doprnt@pb,fsr2l
  9416  000FA6  C0A2  FFDA         	movff	__doprnt@pb+1,fsr2h
  9417  000FAA  2ADE               	incf	postinc2,f,c
  9418  000FAC  0E00               	movlw	0
  9419  000FAE  22DD               	addwfc	postdec2,f,c
  9420  000FB0                     l6333:
  9421  000FB0  0100               	movlb	0	; () banked
  9422  000FB2  07C1               	decf	__doprnt@prec& (0+255),f,b
  9423  000FB4  A0D8               	btfss	status,0,c
  9424  000FB6  07C2               	decf	(__doprnt@prec+1)& (0+255),f,b
  9425  000FB8  0100               	movlb	0	; () banked
  9426  000FBA  29C1               	incf	__doprnt@prec& (0+255),w,b
  9427  000FBC  E183               	bnz	l6323
  9428  000FBE  0100               	movlb	0	; () banked
  9429  000FC0  29C2               	incf	(__doprnt@prec+1)& (0+255),w,b
  9430  000FC2  A4D8               	btfss	status,2,c
  9431  000FC4  D77F               	goto	l6323
  9432  000FC6                     l6335:
  9433  000FC6  C0A3  FFF6         	movff	__doprnt@f,tblptrl
  9434  000FCA  C0A4  FFF7         	movff	__doprnt@f+1,tblptrh
  9435  000FCE  0100               	movlb	0	; () banked
  9436  000FD0  4BA3               	infsnz	__doprnt@f& (0+255),f,b
  9437  000FD2  2BA4               	incf	(__doprnt@f+1)& (0+255),f,b
  9438  000FD4                     	if	0	;tblptru may be non-zero
  9439  000FD4                     	endif
  9440  000FD4                     	if	0	;tblptru may be non-zero
  9441  000FD4                     	endif
  9442  000FD4  0008               	tblrd		*
  9443  000FD6  CFF5 F0C3          	movff	tablat,__doprnt@c
  9444  000FDA  0100               	movlb	0	; () banked
  9445  000FDC  51C3               	movf	__doprnt@c& (0+255),w,b
  9446  000FDE  A4D8               	btfss	status,2,c
  9447  000FE0  EF57  F000         	goto	l6013
  9448  000FE4                     l6337:
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;doprnt.c: 1540: return 0;
  9452  000FE4  0E00               	movlw	0
  9453  000FE6  0100               	movlb	0	; () banked
  9454  000FE8  6FA2               	movwf	(?__doprnt+1)& (0+255),b
  9455  000FEA  0E00               	movlw	0
  9456  000FEC  6FA1               	movwf	?__doprnt& (0+255),b
  9457  000FEE  0012               	return	
  9458  000FF0                     __end_of__doprnt:
  9459                           	opt stack 0
  9460                           tosu	equ	0xFFF
  9461                           tosh	equ	0xFFE
  9462                           tosl	equ	0xFFD
  9463                           pclath	equ	0xFFA
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           indf0	equ	0xFEF
  9472                           postinc0	equ	0xFEE
  9473                           fsr0h	equ	0xFEA
  9474                           fsr0l	equ	0xFE9
  9475                           wreg	equ	0xFE8
  9476                           indf1	equ	0xFE7
  9477                           postdec1	equ	0xFE5
  9478                           fsr1h	equ	0xFE2
  9479                           fsr1l	equ	0xFE1
  9480                           indf2	equ	0xFDF
  9481                           postinc2	equ	0xFDE
  9482                           postdec2	equ	0xFDD
  9483                           fsr2h	equ	0xFDA
  9484                           fsr2l	equ	0xFD9
  9485                           status	equ	0xFD8
  9486                           
  9487 ;; *************** function _scale *****************
  9488 ;; Defined at:
  9489 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  scl             1    wreg     char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  scl             1   43[BANK0 ] char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  3   37[BANK0 ] char 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9503 ;;      Params:         0       3       0       0       0       0       0
  9504 ;;      Locals:         0       4       0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0
  9506 ;;      Totals:         0       7       0       0       0       0       0
  9507 ;;Total ram usage:        7 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    4
  9510 ;; This function calls:
  9511 ;;		___awdiv
  9512 ;;		___awmod
  9513 ;;		___ftmul
  9514 ;;		___wmul
  9515 ;; This function is called by:
  9516 ;;		__doprnt
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text35
  9521  00178A                     __ptext35:
  9522                           	opt stack 0
  9523  00178A                     _scale:
  9524                           	opt stack 22
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;incstack = 0
  9528                           ;scale@scl stored from wreg
  9529  00178A  0100               	movlb	0	; () banked
  9530  00178C  6F8B               	movwf	scale@scl& (0+255),b
  9531                           
  9532                           ;doprnt.c: 428: if(scl < 0) {
  9533  00178E  0100               	movlb	0	; () banked
  9534  001790  AF8B               	btfss	scale@scl& (0+255),7,b
  9535  001792  D124               	goto	l5659
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;doprnt.c: 429: scl = -scl;
  9539  001794  0100               	movlb	0	; () banked
  9540  001796  6D8B               	negf	scale@scl& (0+255),b
  9541                           
  9542                           ;doprnt.c: 430: if(scl>=110)
  9543  001798  0100               	movlb	0	; () banked
  9544  00179A  518B               	movf	scale@scl& (0+255),w,b
  9545  00179C  0A80               	xorlw	128
  9546  00179E  0F12               	addlw	-238
  9547  0017A0  A0D8               	btfss	status,0,c
  9548  0017A2  D0A8               	goto	l5649
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9552  0017A4  0E00               	movlw	0
  9553  0017A6  0100               	movlb	0	; () banked
  9554  0017A8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9555  0017AA  0E03               	movlw	3
  9556  0017AC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9557  0017AE  0E00               	movlw	0
  9558  0017B0  0100               	movlb	0	; () banked
  9559  0017B2  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9560  0017B4  0E0A               	movlw	10
  9561  0017B6  6F73               	movwf	___awdiv@divisor& (0+255),b
  9562  0017B8  0E00               	movlw	0
  9563  0017BA  6E1F               	movwf	___awmod@divisor+1,c
  9564  0017BC  0E64               	movlw	100
  9565  0017BE  6E1E               	movwf	___awmod@divisor,c
  9566  0017C0  0100               	movlb	0	; () banked
  9567  0017C2  518B               	movf	scale@scl& (0+255),w,b
  9568  0017C4  6E1C               	movwf	___awmod@dividend,c
  9569  0017C6  6A1D               	clrf	___awmod@dividend+1,c
  9570  0017C8  BE1C               	btfsc	___awmod@dividend,7,c
  9571  0017CA  061D               	decf	___awmod@dividend+1,f,c
  9572  0017CC  ECD1  F020         	call	___awmod
  9573  0017D0  C01C  F071         	movff	?___awmod,___awdiv@dividend
  9574  0017D4  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9575  0017D8  EC47  F01E         	call	___awdiv	;wreg free
  9576  0017DC  0E09               	movlw	9
  9577  0017DE  0100               	movlb	0	; () banked
  9578  0017E0  2571               	addwf	?___awdiv& (0+255),w,b
  9579  0017E2  0100               	movlb	0	; () banked
  9580  0017E4  6F75               	movwf	___wmul@multiplier& (0+255),b
  9581  0017E6  0E00               	movlw	0
  9582  0017E8  0100               	movlb	0	; () banked
  9583  0017EA  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9584  0017EC  0100               	movlb	0	; () banked
  9585  0017EE  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9586  0017F0  EC1F  F023         	call	___wmul	;wreg free
  9587  0017F4  0E24               	movlw	low __npowers_
  9588  0017F6  0100               	movlb	0	; () banked
  9589  0017F8  2575               	addwf	?___wmul& (0+255),w,b
  9590  0017FA  6EF6               	movwf	tblptrl,c
  9591  0017FC  0E7F               	movlw	high __npowers_
  9592  0017FE  0100               	movlb	0	; () banked
  9593  001800  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9594  001802  6EF7               	movwf	tblptrh,c
  9595  001804                     	if	0	;There are less than 3 active tblptr bytes
  9596  001804                     	endif
  9597  001804  0009               	tblrd		*+
  9598  001806  CFF5 F07C          	movff	tablat,___ftmul@f2
  9599  00180A  0009               	tblrd		*+
  9600  00180C  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9601  001810  000A               	tblrd		*-
  9602  001812  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9603  001816  0E00               	movlw	0
  9604  001818  0100               	movlb	0	; () banked
  9605  00181A  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9606  00181C  0E64               	movlw	100
  9607  00181E  6F73               	movwf	___awdiv@divisor& (0+255),b
  9608  001820  0100               	movlb	0	; () banked
  9609  001822  518B               	movf	scale@scl& (0+255),w,b
  9610  001824  0100               	movlb	0	; () banked
  9611  001826  6F71               	movwf	___awdiv@dividend& (0+255),b
  9612  001828  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9613  00182A  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9614  00182C  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9615  00182E  EC47  F01E         	call	___awdiv	;wreg free
  9616  001832  0E12               	movlw	18
  9617  001834  0100               	movlb	0	; () banked
  9618  001836  2571               	addwf	?___awdiv& (0+255),w,b
  9619  001838  0100               	movlb	0	; () banked
  9620  00183A  6F75               	movwf	___wmul@multiplier& (0+255),b
  9621  00183C  0E00               	movlw	0
  9622  00183E  0100               	movlb	0	; () banked
  9623  001840  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9624  001842  0100               	movlb	0	; () banked
  9625  001844  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9626  001846  0E00               	movlw	0
  9627  001848  0100               	movlb	0	; () banked
  9628  00184A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9629  00184C  0E03               	movlw	3
  9630  00184E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9631  001850  EC1F  F023         	call	___wmul	;wreg free
  9632  001854  0E24               	movlw	low __npowers_
  9633  001856  0100               	movlb	0	; () banked
  9634  001858  2575               	addwf	?___wmul& (0+255),w,b
  9635  00185A  6EF6               	movwf	tblptrl,c
  9636  00185C  0E7F               	movlw	high __npowers_
  9637  00185E  0100               	movlb	0	; () banked
  9638  001860  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9639  001862  6EF7               	movwf	tblptrh,c
  9640  001864                     	if	0	;There are less than 3 active tblptr bytes
  9641  001864                     	endif
  9642  001864  0009               	tblrd		*+
  9643  001866  CFF5 F079          	movff	tablat,___ftmul@f1
  9644  00186A  0009               	tblrd		*+
  9645  00186C  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9646  001870  000A               	tblrd		*-
  9647  001872  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9648  001876  EC1B  F018         	call	___ftmul	;wreg free
  9649  00187A  C079  F088         	movff	?___ftmul,_scale$2963
  9650  00187E  C07A  F089         	movff	?___ftmul+1,_scale$2963+1
  9651  001882  C07B  F08A         	movff	?___ftmul+2,_scale$2963+2
  9652                           
  9653                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9654  001886  C088  F079         	movff	_scale$2963,___ftmul@f1
  9655  00188A  C089  F07A         	movff	_scale$2963+1,___ftmul@f1+1
  9656  00188E  C08A  F07B         	movff	_scale$2963+2,___ftmul@f1+2
  9657  001892  0E00               	movlw	0
  9658  001894  0100               	movlb	0	; () banked
  9659  001896  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9660  001898  0E03               	movlw	3
  9661  00189A  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9662  00189C  0E00               	movlw	0
  9663  00189E  6E1F               	movwf	___awmod@divisor+1,c
  9664  0018A0  0E0A               	movlw	10
  9665  0018A2  6E1E               	movwf	___awmod@divisor,c
  9666  0018A4  0100               	movlb	0	; () banked
  9667  0018A6  518B               	movf	scale@scl& (0+255),w,b
  9668  0018A8  6E1C               	movwf	___awmod@dividend,c
  9669  0018AA  6A1D               	clrf	___awmod@dividend+1,c
  9670  0018AC  BE1C               	btfsc	___awmod@dividend,7,c
  9671  0018AE  061D               	decf	___awmod@dividend+1,f,c
  9672  0018B0  ECD1  F020         	call	___awmod	;wreg free
  9673  0018B4  C01C  F075         	movff	?___awmod,___wmul@multiplier
  9674  0018B8  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  9675  0018BC  EC1F  F023         	call	___wmul	;wreg free
  9676  0018C0  0E24               	movlw	low __npowers_
  9677  0018C2  0100               	movlb	0	; () banked
  9678  0018C4  2575               	addwf	?___wmul& (0+255),w,b
  9679  0018C6  6EF6               	movwf	tblptrl,c
  9680  0018C8  0E7F               	movlw	high __npowers_
  9681  0018CA  0100               	movlb	0	; () banked
  9682  0018CC  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9683  0018CE  6EF7               	movwf	tblptrh,c
  9684  0018D0                     	if	0	;There are less than 3 active tblptr bytes
  9685  0018D0                     	endif
  9686  0018D0  0009               	tblrd		*+
  9687  0018D2  CFF5 F07C          	movff	tablat,___ftmul@f2
  9688  0018D6  0009               	tblrd		*+
  9689  0018D8  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9690  0018DC  000A               	tblrd		*-
  9691  0018DE  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9692  0018E2  EC1B  F018         	call	___ftmul	;wreg free
  9693  0018E6  C079  F085         	movff	?___ftmul,?_scale
  9694  0018EA  C07A  F086         	movff	?___ftmul+1,?_scale+1
  9695  0018EE  C07B  F087         	movff	?___ftmul+2,?_scale+2
  9696  0018F2  0012               	return	
  9697  0018F4                     l5649:
  9698                           
  9699                           ;doprnt.c: 432: else if(scl > 10)
  9700  0018F4  0100               	movlb	0	; () banked
  9701  0018F6  518B               	movf	scale@scl& (0+255),w,b
  9702  0018F8  0A80               	xorlw	128
  9703  0018FA  0F75               	addlw	-139
  9704  0018FC  A0D8               	btfss	status,0,c
  9705  0018FE  D05B               	goto	l5655
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9709  001900  0E00               	movlw	0
  9710  001902  0100               	movlb	0	; () banked
  9711  001904  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9712  001906  0E0A               	movlw	10
  9713  001908  6F73               	movwf	___awdiv@divisor& (0+255),b
  9714  00190A  0100               	movlb	0	; () banked
  9715  00190C  518B               	movf	scale@scl& (0+255),w,b
  9716  00190E  0100               	movlb	0	; () banked
  9717  001910  6F71               	movwf	___awdiv@dividend& (0+255),b
  9718  001912  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9719  001914  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9720  001916  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9721  001918  EC47  F01E         	call	___awdiv	;wreg free
  9722  00191C  0E09               	movlw	9
  9723  00191E  0100               	movlb	0	; () banked
  9724  001920  2571               	addwf	?___awdiv& (0+255),w,b
  9725  001922  0100               	movlb	0	; () banked
  9726  001924  6F75               	movwf	___wmul@multiplier& (0+255),b
  9727  001926  0E00               	movlw	0
  9728  001928  0100               	movlb	0	; () banked
  9729  00192A  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9730  00192C  0100               	movlb	0	; () banked
  9731  00192E  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9732  001930  0E00               	movlw	0
  9733  001932  0100               	movlb	0	; () banked
  9734  001934  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9735  001936  0E03               	movlw	3
  9736  001938  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9737  00193A  EC1F  F023         	call	___wmul	;wreg free
  9738  00193E  0E24               	movlw	low __npowers_
  9739  001940  0100               	movlb	0	; () banked
  9740  001942  2575               	addwf	?___wmul& (0+255),w,b
  9741  001944  6EF6               	movwf	tblptrl,c
  9742  001946  0E7F               	movlw	high __npowers_
  9743  001948  0100               	movlb	0	; () banked
  9744  00194A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9745  00194C  6EF7               	movwf	tblptrh,c
  9746  00194E                     	if	0	;There are less than 3 active tblptr bytes
  9747  00194E                     	endif
  9748  00194E  0009               	tblrd		*+
  9749  001950  CFF5 F079          	movff	tablat,___ftmul@f1
  9750  001954  0009               	tblrd		*+
  9751  001956  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9752  00195A  000A               	tblrd		*-
  9753  00195C  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9754  001960  0E00               	movlw	0
  9755  001962  0100               	movlb	0	; () banked
  9756  001964  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9757  001966  0E03               	movlw	3
  9758  001968  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9759  00196A  0E00               	movlw	0
  9760  00196C  6E1F               	movwf	___awmod@divisor+1,c
  9761  00196E  0E0A               	movlw	10
  9762  001970  6E1E               	movwf	___awmod@divisor,c
  9763  001972  0100               	movlb	0	; () banked
  9764  001974  518B               	movf	scale@scl& (0+255),w,b
  9765  001976  6E1C               	movwf	___awmod@dividend,c
  9766  001978  6A1D               	clrf	___awmod@dividend+1,c
  9767  00197A  BE1C               	btfsc	___awmod@dividend,7,c
  9768  00197C  061D               	decf	___awmod@dividend+1,f,c
  9769  00197E  ECD1  F020         	call	___awmod	;wreg free
  9770  001982  C01C  F075         	movff	?___awmod,___wmul@multiplier
  9771  001986  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  9772  00198A  EC1F  F023         	call	___wmul	;wreg free
  9773  00198E  0E24               	movlw	low __npowers_
  9774  001990  0100               	movlb	0	; () banked
  9775  001992  2575               	addwf	?___wmul& (0+255),w,b
  9776  001994  6EF6               	movwf	tblptrl,c
  9777  001996  0E7F               	movlw	high __npowers_
  9778  001998  0100               	movlb	0	; () banked
  9779  00199A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9780  00199C  6EF7               	movwf	tblptrh,c
  9781  00199E                     	if	0	;There are less than 3 active tblptr bytes
  9782  00199E                     	endif
  9783  00199E  0009               	tblrd		*+
  9784  0019A0  CFF5 F07C          	movff	tablat,___ftmul@f2
  9785  0019A4  0009               	tblrd		*+
  9786  0019A6  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9787  0019AA  000A               	tblrd		*-
  9788  0019AC  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9789  0019B0  EC1B  F018         	call	___ftmul	;wreg free
  9790  0019B4  D798               	goto	L4
  9791  0019B6                     l5655:
  9792                           
  9793                           ;doprnt.c: 434: return _npowers_[scl];
  9794  0019B6  0100               	movlb	0	; () banked
  9795  0019B8  518B               	movf	scale@scl& (0+255),w,b
  9796  0019BA  0D03               	mullw	3
  9797  0019BC  0E24               	movlw	low __npowers_
  9798  0019BE  24F3               	addwf	prodl,w,c
  9799  0019C0  6EF6               	movwf	tblptrl,c
  9800  0019C2  0E7F               	movlw	high __npowers_
  9801  0019C4  20F4               	addwfc	prodh,w,c
  9802  0019C6  6EF7               	movwf	tblptrh,c
  9803  0019C8                     	if	0	;There are less than 3 active tblptr bytes
  9804  0019C8                     	endif
  9805  0019C8  0009               	tblrd		*+
  9806  0019CA  CFF5 F085          	movff	tablat,?_scale
  9807  0019CE  0009               	tblrd		*+
  9808  0019D0  CFF5 F086          	movff	tablat,?_scale+1
  9809  0019D4  000A               	tblrd		*-
  9810  0019D6  CFF5 F087          	movff	tablat,?_scale+2
  9811                           
  9812                           ; BSR set to: 0
  9813  0019DA  0012               	return	
  9814  0019DC                     l5659:
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;doprnt.c: 435: }
  9818                           ;doprnt.c: 436: if(scl>=110)
  9819  0019DC  0100               	movlb	0	; () banked
  9820  0019DE  518B               	movf	scale@scl& (0+255),w,b
  9821  0019E0  0A80               	xorlw	128
  9822  0019E2  0F12               	addlw	-238
  9823  0019E4  A0D8               	btfss	status,0,c
  9824  0019E6  D0A8               	goto	l5667
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9828  0019E8  0E00               	movlw	0
  9829  0019EA  0100               	movlb	0	; () banked
  9830  0019EC  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9831  0019EE  0E03               	movlw	3
  9832  0019F0  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9833  0019F2  0E00               	movlw	0
  9834  0019F4  0100               	movlb	0	; () banked
  9835  0019F6  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9836  0019F8  0E0A               	movlw	10
  9837  0019FA  6F73               	movwf	___awdiv@divisor& (0+255),b
  9838  0019FC  0E00               	movlw	0
  9839  0019FE  6E1F               	movwf	___awmod@divisor+1,c
  9840  001A00  0E64               	movlw	100
  9841  001A02  6E1E               	movwf	___awmod@divisor,c
  9842  001A04  0100               	movlb	0	; () banked
  9843  001A06  518B               	movf	scale@scl& (0+255),w,b
  9844  001A08  6E1C               	movwf	___awmod@dividend,c
  9845  001A0A  6A1D               	clrf	___awmod@dividend+1,c
  9846  001A0C  BE1C               	btfsc	___awmod@dividend,7,c
  9847  001A0E  061D               	decf	___awmod@dividend+1,f,c
  9848  001A10  ECD1  F020         	call	___awmod	;wreg free
  9849  001A14  C01C  F071         	movff	?___awmod,___awdiv@dividend
  9850  001A18  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
  9851  001A1C  EC47  F01E         	call	___awdiv	;wreg free
  9852  001A20  0E09               	movlw	9
  9853  001A22  0100               	movlb	0	; () banked
  9854  001A24  2571               	addwf	?___awdiv& (0+255),w,b
  9855  001A26  0100               	movlb	0	; () banked
  9856  001A28  6F75               	movwf	___wmul@multiplier& (0+255),b
  9857  001A2A  0E00               	movlw	0
  9858  001A2C  0100               	movlb	0	; () banked
  9859  001A2E  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9860  001A30  0100               	movlb	0	; () banked
  9861  001A32  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9862  001A34  EC1F  F023         	call	___wmul	;wreg free
  9863  001A38  0EFD               	movlw	low __powers_
  9864  001A3A  0100               	movlb	0	; () banked
  9865  001A3C  2575               	addwf	?___wmul& (0+255),w,b
  9866  001A3E  6EF6               	movwf	tblptrl,c
  9867  001A40  0E7E               	movlw	high __powers_
  9868  001A42  0100               	movlb	0	; () banked
  9869  001A44  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9870  001A46  6EF7               	movwf	tblptrh,c
  9871  001A48                     	if	0	;There are less than 3 active tblptr bytes
  9872  001A48                     	endif
  9873  001A48  0009               	tblrd		*+
  9874  001A4A  CFF5 F07C          	movff	tablat,___ftmul@f2
  9875  001A4E  0009               	tblrd		*+
  9876  001A50  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9877  001A54  000A               	tblrd		*-
  9878  001A56  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9879  001A5A  0E00               	movlw	0
  9880  001A5C  0100               	movlb	0	; () banked
  9881  001A5E  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9882  001A60  0E64               	movlw	100
  9883  001A62  6F73               	movwf	___awdiv@divisor& (0+255),b
  9884  001A64  0100               	movlb	0	; () banked
  9885  001A66  518B               	movf	scale@scl& (0+255),w,b
  9886  001A68  0100               	movlb	0	; () banked
  9887  001A6A  6F71               	movwf	___awdiv@dividend& (0+255),b
  9888  001A6C  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9889  001A6E  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9890  001A70  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9891  001A72  EC47  F01E         	call	___awdiv	;wreg free
  9892  001A76  0E12               	movlw	18
  9893  001A78  0100               	movlb	0	; () banked
  9894  001A7A  2571               	addwf	?___awdiv& (0+255),w,b
  9895  001A7C  0100               	movlb	0	; () banked
  9896  001A7E  6F75               	movwf	___wmul@multiplier& (0+255),b
  9897  001A80  0E00               	movlw	0
  9898  001A82  0100               	movlb	0	; () banked
  9899  001A84  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
  9900  001A86  0100               	movlb	0	; () banked
  9901  001A88  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
  9902  001A8A  0E00               	movlw	0
  9903  001A8C  0100               	movlb	0	; () banked
  9904  001A8E  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9905  001A90  0E03               	movlw	3
  9906  001A92  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9907  001A94  EC1F  F023         	call	___wmul	;wreg free
  9908  001A98  0EFD               	movlw	low __powers_
  9909  001A9A  0100               	movlb	0	; () banked
  9910  001A9C  2575               	addwf	?___wmul& (0+255),w,b
  9911  001A9E  6EF6               	movwf	tblptrl,c
  9912  001AA0  0E7E               	movlw	high __powers_
  9913  001AA2  0100               	movlb	0	; () banked
  9914  001AA4  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9915  001AA6  6EF7               	movwf	tblptrh,c
  9916  001AA8                     	if	0	;There are less than 3 active tblptr bytes
  9917  001AA8                     	endif
  9918  001AA8  0009               	tblrd		*+
  9919  001AAA  CFF5 F079          	movff	tablat,___ftmul@f1
  9920  001AAE  0009               	tblrd		*+
  9921  001AB0  CFF5 F07A          	movff	tablat,___ftmul@f1+1
  9922  001AB4  000A               	tblrd		*-
  9923  001AB6  CFF5 F07B          	movff	tablat,___ftmul@f1+2
  9924  001ABA  EC1B  F018         	call	___ftmul	;wreg free
  9925  001ABE  C079  F088         	movff	?___ftmul,_scale$2963
  9926  001AC2  C07A  F089         	movff	?___ftmul+1,_scale$2963+1
  9927  001AC6  C07B  F08A         	movff	?___ftmul+2,_scale$2963+2
  9928                           
  9929                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9930  001ACA  C088  F079         	movff	_scale$2963,___ftmul@f1
  9931  001ACE  C089  F07A         	movff	_scale$2963+1,___ftmul@f1+1
  9932  001AD2  C08A  F07B         	movff	_scale$2963+2,___ftmul@f1+2
  9933  001AD6  0E00               	movlw	0
  9934  001AD8  0100               	movlb	0	; () banked
  9935  001ADA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9936  001ADC  0E03               	movlw	3
  9937  001ADE  6F77               	movwf	___wmul@multiplicand& (0+255),b
  9938  001AE0  0E00               	movlw	0
  9939  001AE2  6E1F               	movwf	___awmod@divisor+1,c
  9940  001AE4  0E0A               	movlw	10
  9941  001AE6  6E1E               	movwf	___awmod@divisor,c
  9942  001AE8  0100               	movlb	0	; () banked
  9943  001AEA  518B               	movf	scale@scl& (0+255),w,b
  9944  001AEC  6E1C               	movwf	___awmod@dividend,c
  9945  001AEE  6A1D               	clrf	___awmod@dividend+1,c
  9946  001AF0  BE1C               	btfsc	___awmod@dividend,7,c
  9947  001AF2  061D               	decf	___awmod@dividend+1,f,c
  9948  001AF4  ECD1  F020         	call	___awmod	;wreg free
  9949  001AF8  C01C  F075         	movff	?___awmod,___wmul@multiplier
  9950  001AFC  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
  9951  001B00  EC1F  F023         	call	___wmul	;wreg free
  9952  001B04  0EFD               	movlw	low __powers_
  9953  001B06  0100               	movlb	0	; () banked
  9954  001B08  2575               	addwf	?___wmul& (0+255),w,b
  9955  001B0A  6EF6               	movwf	tblptrl,c
  9956  001B0C  0E7E               	movlw	high __powers_
  9957  001B0E  0100               	movlb	0	; () banked
  9958  001B10  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  9959  001B12  6EF7               	movwf	tblptrh,c
  9960  001B14                     	if	0	;There are less than 3 active tblptr bytes
  9961  001B14                     	endif
  9962  001B14  0009               	tblrd		*+
  9963  001B16  CFF5 F07C          	movff	tablat,___ftmul@f2
  9964  001B1A  0009               	tblrd		*+
  9965  001B1C  CFF5 F07D          	movff	tablat,___ftmul@f2+1
  9966  001B20  000A               	tblrd		*-
  9967  001B22  CFF5 F07E          	movff	tablat,___ftmul@f2+2
  9968  001B26  EC1B  F018         	call	___ftmul	;wreg free
  9969  001B2A  C079  F085         	movff	?___ftmul,?_scale
  9970  001B2E  C07A  F086         	movff	?___ftmul+1,?_scale+1
  9971  001B32  C07B  F087         	movff	?___ftmul+2,?_scale+2
  9972  001B36  0012               	return	
  9973  001B38                     l5667:
  9974                           
  9975                           ;doprnt.c: 438: else if(scl > 10)
  9976  001B38  0100               	movlb	0	; () banked
  9977  001B3A  518B               	movf	scale@scl& (0+255),w,b
  9978  001B3C  0A80               	xorlw	128
  9979  001B3E  0F75               	addlw	-139
  9980  001B40  A0D8               	btfss	status,0,c
  9981  001B42  D05B               	goto	l5673
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9985  001B44  0E00               	movlw	0
  9986  001B46  0100               	movlb	0	; () banked
  9987  001B48  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  9988  001B4A  0E0A               	movlw	10
  9989  001B4C  6F73               	movwf	___awdiv@divisor& (0+255),b
  9990  001B4E  0100               	movlb	0	; () banked
  9991  001B50  518B               	movf	scale@scl& (0+255),w,b
  9992  001B52  0100               	movlb	0	; () banked
  9993  001B54  6F71               	movwf	___awdiv@dividend& (0+255),b
  9994  001B56  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
  9995  001B58  BF71               	btfsc	___awdiv@dividend& (0+255),7,b
  9996  001B5A  0772               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9997  001B5C  EC47  F01E         	call	___awdiv	;wreg free
  9998  001B60  0E09               	movlw	9
  9999  001B62  0100               	movlb	0	; () banked
 10000  001B64  2571               	addwf	?___awdiv& (0+255),w,b
 10001  001B66  0100               	movlb	0	; () banked
 10002  001B68  6F75               	movwf	___wmul@multiplier& (0+255),b
 10003  001B6A  0E00               	movlw	0
 10004  001B6C  0100               	movlb	0	; () banked
 10005  001B6E  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
 10006  001B70  0100               	movlb	0	; () banked
 10007  001B72  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
 10008  001B74  0E00               	movlw	0
 10009  001B76  0100               	movlb	0	; () banked
 10010  001B78  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10011  001B7A  0E03               	movlw	3
 10012  001B7C  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10013  001B7E  EC1F  F023         	call	___wmul	;wreg free
 10014  001B82  0EFD               	movlw	low __powers_
 10015  001B84  0100               	movlb	0	; () banked
 10016  001B86  2575               	addwf	?___wmul& (0+255),w,b
 10017  001B88  6EF6               	movwf	tblptrl,c
 10018  001B8A  0E7E               	movlw	high __powers_
 10019  001B8C  0100               	movlb	0	; () banked
 10020  001B8E  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10021  001B90  6EF7               	movwf	tblptrh,c
 10022  001B92                     	if	0	;There are less than 3 active tblptr bytes
 10023  001B92                     	endif
 10024  001B92  0009               	tblrd		*+
 10025  001B94  CFF5 F079          	movff	tablat,___ftmul@f1
 10026  001B98  0009               	tblrd		*+
 10027  001B9A  CFF5 F07A          	movff	tablat,___ftmul@f1+1
 10028  001B9E  000A               	tblrd		*-
 10029  001BA0  CFF5 F07B          	movff	tablat,___ftmul@f1+2
 10030  001BA4  0E00               	movlw	0
 10031  001BA6  0100               	movlb	0	; () banked
 10032  001BA8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10033  001BAA  0E03               	movlw	3
 10034  001BAC  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10035  001BAE  0E00               	movlw	0
 10036  001BB0  6E1F               	movwf	___awmod@divisor+1,c
 10037  001BB2  0E0A               	movlw	10
 10038  001BB4  6E1E               	movwf	___awmod@divisor,c
 10039  001BB6  0100               	movlb	0	; () banked
 10040  001BB8  518B               	movf	scale@scl& (0+255),w,b
 10041  001BBA  6E1C               	movwf	___awmod@dividend,c
 10042  001BBC  6A1D               	clrf	___awmod@dividend+1,c
 10043  001BBE  BE1C               	btfsc	___awmod@dividend,7,c
 10044  001BC0  061D               	decf	___awmod@dividend+1,f,c
 10045  001BC2  ECD1  F020         	call	___awmod	;wreg free
 10046  001BC6  C01C  F075         	movff	?___awmod,___wmul@multiplier
 10047  001BCA  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
 10048  001BCE  EC1F  F023         	call	___wmul	;wreg free
 10049  001BD2  0EFD               	movlw	low __powers_
 10050  001BD4  0100               	movlb	0	; () banked
 10051  001BD6  2575               	addwf	?___wmul& (0+255),w,b
 10052  001BD8  6EF6               	movwf	tblptrl,c
 10053  001BDA  0E7E               	movlw	high __powers_
 10054  001BDC  0100               	movlb	0	; () banked
 10055  001BDE  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10056  001BE0  6EF7               	movwf	tblptrh,c
 10057  001BE2                     	if	0	;There are less than 3 active tblptr bytes
 10058  001BE2                     	endif
 10059  001BE2  0009               	tblrd		*+
 10060  001BE4  CFF5 F07C          	movff	tablat,___ftmul@f2
 10061  001BE8  0009               	tblrd		*+
 10062  001BEA  CFF5 F07D          	movff	tablat,___ftmul@f2+1
 10063  001BEE  000A               	tblrd		*-
 10064  001BF0  CFF5 F07E          	movff	tablat,___ftmul@f2+2
 10065  001BF4  EC1B  F018         	call	___ftmul	;wreg free
 10066  001BF8  D798               	goto	L5
 10067  001BFA                     l5673:
 10068                           
 10069                           ;doprnt.c: 440: return _powers_[scl];
 10070  001BFA  0100               	movlb	0	; () banked
 10071  001BFC  518B               	movf	scale@scl& (0+255),w,b
 10072  001BFE  0D03               	mullw	3
 10073  001C00  0EFD               	movlw	low __powers_
 10074  001C02  24F3               	addwf	prodl,w,c
 10075  001C04  6EF6               	movwf	tblptrl,c
 10076  001C06  0E7E               	movlw	high __powers_
 10077  001C08  20F4               	addwfc	prodh,w,c
 10078  001C0A  6EF7               	movwf	tblptrh,c
 10079  001C0C                     	if	0	;There are less than 3 active tblptr bytes
 10080  001C0C                     	endif
 10081  001C0C  0009               	tblrd		*+
 10082  001C0E  CFF5 F085          	movff	tablat,?_scale
 10083  001C12  0009               	tblrd		*+
 10084  001C14  CFF5 F086          	movff	tablat,?_scale+1
 10085  001C18  000A               	tblrd		*-
 10086  001C1A  CFF5 F087          	movff	tablat,?_scale+2
 10087  001C1E  0012               	return	
 10088  001C20                     __end_of_scale:
 10089                           	opt stack 0
 10090                           tosu	equ	0xFFF
 10091                           tosh	equ	0xFFE
 10092                           tosl	equ	0xFFD
 10093                           pclath	equ	0xFFA
 10094                           tblptru	equ	0xFF8
 10095                           tblptrh	equ	0xFF7
 10096                           tblptrl	equ	0xFF6
 10097                           tablat	equ	0xFF5
 10098                           prodh	equ	0xFF4
 10099                           prodl	equ	0xFF3
 10100                           intcon	equ	0xFF2
 10101                           indf0	equ	0xFEF
 10102                           postinc0	equ	0xFEE
 10103                           fsr0h	equ	0xFEA
 10104                           fsr0l	equ	0xFE9
 10105                           wreg	equ	0xFE8
 10106                           indf1	equ	0xFE7
 10107                           postdec1	equ	0xFE5
 10108                           fsr1h	equ	0xFE2
 10109                           fsr1l	equ	0xFE1
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           postdec2	equ	0xFDD
 10113                           fsr2h	equ	0xFDA
 10114                           fsr2l	equ	0xFD9
 10115                           status	equ	0xFD8
 10116                           
 10117 ;; *************** function _putch *****************
 10118 ;; Defined at:
 10119 ;;		line 7 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\putch.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  c               1    wreg     unsigned char 
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;  c               1    0[COMRAM] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10133 ;;      Params:         0       0       0       0       0       0       0
 10134 ;;      Locals:         0       0       0       0       0       0       0
 10135 ;;      Temps:          0       0       0       0       0       0       0
 10136 ;;      Totals:         0       0       0       0       0       0       0
 10137 ;;Total ram usage:        0 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    2
 10140 ;; This function calls:
 10141 ;;		Nothing
 10142 ;; This function is called by:
 10143 ;;		__doprnt
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text36
 10148  004882                     __ptext36:
 10149                           	opt stack 0
 10150  004882                     _putch:
 10151                           	opt stack 24
 10152                           
 10153                           ;incstack = 0
 10154  004882  0012               	return		;funcret
 10155  004884                     __end_of_putch:
 10156                           	opt stack 0
 10157                           tosu	equ	0xFFF
 10158                           tosh	equ	0xFFE
 10159                           tosl	equ	0xFFD
 10160                           pclath	equ	0xFFA
 10161                           tblptru	equ	0xFF8
 10162                           tblptrh	equ	0xFF7
 10163                           tblptrl	equ	0xFF6
 10164                           tablat	equ	0xFF5
 10165                           prodh	equ	0xFF4
 10166                           prodl	equ	0xFF3
 10167                           intcon	equ	0xFF2
 10168                           indf0	equ	0xFEF
 10169                           postinc0	equ	0xFEE
 10170                           fsr0h	equ	0xFEA
 10171                           fsr0l	equ	0xFE9
 10172                           wreg	equ	0xFE8
 10173                           indf1	equ	0xFE7
 10174                           postdec1	equ	0xFE5
 10175                           fsr1h	equ	0xFE2
 10176                           fsr1l	equ	0xFE1
 10177                           indf2	equ	0xFDF
 10178                           postinc2	equ	0xFDE
 10179                           postdec2	equ	0xFDD
 10180                           fsr2h	equ	0xFDA
 10181                           fsr2l	equ	0xFD9
 10182                           status	equ	0xFD8
 10183                           
 10184 ;; *************** function _isdigit *****************
 10185 ;; Defined at:
 10186 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  c               1    wreg     unsigned char 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  c               1   29[COMRAM] unsigned char 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;		None               void
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10200 ;;      Params:         0       0       0       0       0       0       0
 10201 ;;      Locals:         2       0       0       0       0       0       0
 10202 ;;      Temps:          1       0       0       0       0       0       0
 10203 ;;      Totals:         3       0       0       0       0       0       0
 10204 ;;Total ram usage:        3 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    2
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		__doprnt
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text37
 10215  004796                     __ptext37:
 10216                           	opt stack 0
 10217  004796                     _isdigit:
 10218                           	opt stack 24
 10219                           
 10220                           ;incstack = 0
 10221                           ;isdigit@c stored from wreg
 10222  004796  6E1E               	movwf	isdigit@c,c
 10223  004798  0E00               	movlw	0
 10224  00479A  6E1D               	movwf	_isdigit$2527,c
 10225  00479C  0E3A               	movlw	58
 10226  00479E  601E               	cpfslt	isdigit@c,c
 10227  0047A0  D005               	goto	l5685
 10228  0047A2  0E2F               	movlw	47
 10229  0047A4  641E               	cpfsgt	isdigit@c,c
 10230  0047A6  D002               	goto	l5685
 10231  0047A8  0E01               	movlw	1
 10232  0047AA  6E1D               	movwf	_isdigit$2527,c
 10233  0047AC                     l5685:
 10234  0047AC  C01D  F01C         	movff	_isdigit$2527,??_isdigit
 10235  0047B0  301C               	rrcf	??_isdigit,w,c
 10236  0047B2  0012               	return	
 10237  0047B4                     __end_of_isdigit:
 10238                           	opt stack 0
 10239                           tosu	equ	0xFFF
 10240                           tosh	equ	0xFFE
 10241                           tosl	equ	0xFFD
 10242                           pclath	equ	0xFFA
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodh	equ	0xFF4
 10248                           prodl	equ	0xFF3
 10249                           intcon	equ	0xFF2
 10250                           indf0	equ	0xFEF
 10251                           postinc0	equ	0xFEE
 10252                           fsr0h	equ	0xFEA
 10253                           fsr0l	equ	0xFE9
 10254                           wreg	equ	0xFE8
 10255                           indf1	equ	0xFE7
 10256                           postdec1	equ	0xFE5
 10257                           fsr1h	equ	0xFE2
 10258                           fsr1l	equ	0xFE1
 10259                           indf2	equ	0xFDF
 10260                           postinc2	equ	0xFDE
 10261                           postdec2	equ	0xFDD
 10262                           fsr2h	equ	0xFDA
 10263                           fsr2l	equ	0xFD9
 10264                           status	equ	0xFD8
 10265                           
 10266 ;; *************** function _fround *****************
 10267 ;; Defined at:
 10268 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  prec            1    wreg     unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  prec            1   46[BANK0 ] unsigned char 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  3   37[BANK0 ] unsigned char 
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10282 ;;      Params:         0       3       0       0       0       0       0
 10283 ;;      Locals:         0       7       0       0       0       0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0
 10285 ;;      Totals:         0      10       0       0       0       0       0
 10286 ;;Total ram usage:       10 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    4
 10289 ;; This function calls:
 10290 ;;		___awdiv
 10291 ;;		___awmod
 10292 ;;		___ftmul
 10293 ;;		___wmul
 10294 ;; This function is called by:
 10295 ;;		__doprnt
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text38
 10300  00268C                     __ptext38:
 10301                           	opt stack 0
 10302  00268C                     _fround:
 10303                           	opt stack 22
 10304                           
 10305                           ;incstack = 0
 10306                           ;fround@prec stored from wreg
 10307  00268C  0100               	movlb	0	; () banked
 10308  00268E  6F8E               	movwf	fround@prec& (0+255),b
 10309                           
 10310                           ;doprnt.c: 413: if(prec>=110)
 10311  002690  0E6D               	movlw	109
 10312  002692  0100               	movlb	0	; () banked
 10313  002694  658E               	cpfsgt	fround@prec& (0+255),b
 10314  002696  D0B6               	goto	l5627
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10318  002698  0E00               	movlw	0
 10319  00269A  0100               	movlb	0	; () banked
 10320  00269C  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10321  00269E  0E03               	movlw	3
 10322  0026A0  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10323  0026A2  0E00               	movlw	0
 10324  0026A4  0100               	movlb	0	; () banked
 10325  0026A6  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
 10326  0026A8  0E0A               	movlw	10
 10327  0026AA  6F73               	movwf	___awdiv@divisor& (0+255),b
 10328  0026AC  0E00               	movlw	0
 10329  0026AE  6E1F               	movwf	___awmod@divisor+1,c
 10330  0026B0  0E64               	movlw	100
 10331  0026B2  6E1E               	movwf	___awmod@divisor,c
 10332  0026B4  C08E  F01C         	movff	fround@prec,___awmod@dividend
 10333  0026B8  6A1D               	clrf	___awmod@dividend+1,c
 10334  0026BA  ECD1  F020         	call	___awmod	;wreg free
 10335  0026BE  C01C  F071         	movff	?___awmod,___awdiv@dividend
 10336  0026C2  C01D  F072         	movff	?___awmod+1,___awdiv@dividend+1
 10337  0026C6  EC47  F01E         	call	___awdiv	;wreg free
 10338  0026CA  0E09               	movlw	9
 10339  0026CC  0100               	movlb	0	; () banked
 10340  0026CE  2571               	addwf	?___awdiv& (0+255),w,b
 10341  0026D0  0100               	movlb	0	; () banked
 10342  0026D2  6F75               	movwf	___wmul@multiplier& (0+255),b
 10343  0026D4  0E00               	movlw	0
 10344  0026D6  0100               	movlb	0	; () banked
 10345  0026D8  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
 10346  0026DA  0100               	movlb	0	; () banked
 10347  0026DC  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
 10348  0026DE  EC1F  F023         	call	___wmul	;wreg free
 10349  0026E2  0E24               	movlw	low __npowers_
 10350  0026E4  0100               	movlb	0	; () banked
 10351  0026E6  2575               	addwf	?___wmul& (0+255),w,b
 10352  0026E8  6EF6               	movwf	tblptrl,c
 10353  0026EA  0E7F               	movlw	high __npowers_
 10354  0026EC  0100               	movlb	0	; () banked
 10355  0026EE  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10356  0026F0  6EF7               	movwf	tblptrh,c
 10357  0026F2                     	if	0	;There are less than 3 active tblptr bytes
 10358  0026F2                     	endif
 10359  0026F2  0009               	tblrd		*+
 10360  0026F4  CFF5 F07C          	movff	tablat,___ftmul@f2
 10361  0026F8  0009               	tblrd		*+
 10362  0026FA  CFF5 F07D          	movff	tablat,___ftmul@f2+1
 10363  0026FE  000A               	tblrd		*-
 10364  002700  CFF5 F07E          	movff	tablat,___ftmul@f2+2
 10365  002704  0E00               	movlw	0
 10366  002706  0100               	movlb	0	; () banked
 10367  002708  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
 10368  00270A  0E64               	movlw	100
 10369  00270C  6F73               	movwf	___awdiv@divisor& (0+255),b
 10370  00270E  C08E  F071         	movff	fround@prec,___awdiv@dividend
 10371  002712  0100               	movlb	0	; () banked
 10372  002714  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
 10373  002716  EC47  F01E         	call	___awdiv	;wreg free
 10374  00271A  0E12               	movlw	18
 10375  00271C  0100               	movlb	0	; () banked
 10376  00271E  2571               	addwf	?___awdiv& (0+255),w,b
 10377  002720  0100               	movlb	0	; () banked
 10378  002722  6F75               	movwf	___wmul@multiplier& (0+255),b
 10379  002724  0E00               	movlw	0
 10380  002726  0100               	movlb	0	; () banked
 10381  002728  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
 10382  00272A  0100               	movlb	0	; () banked
 10383  00272C  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
 10384  00272E  0E00               	movlw	0
 10385  002730  0100               	movlb	0	; () banked
 10386  002732  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10387  002734  0E03               	movlw	3
 10388  002736  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10389  002738  EC1F  F023         	call	___wmul	;wreg free
 10390  00273C  0E24               	movlw	low __npowers_
 10391  00273E  0100               	movlb	0	; () banked
 10392  002740  2575               	addwf	?___wmul& (0+255),w,b
 10393  002742  6EF6               	movwf	tblptrl,c
 10394  002744  0E7F               	movlw	high __npowers_
 10395  002746  0100               	movlb	0	; () banked
 10396  002748  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10397  00274A  6EF7               	movwf	tblptrh,c
 10398  00274C                     	if	0	;There are less than 3 active tblptr bytes
 10399  00274C                     	endif
 10400  00274C  0009               	tblrd		*+
 10401  00274E  CFF5 F079          	movff	tablat,___ftmul@f1
 10402  002752  0009               	tblrd		*+
 10403  002754  CFF5 F07A          	movff	tablat,___ftmul@f1+1
 10404  002758  000A               	tblrd		*-
 10405  00275A  CFF5 F07B          	movff	tablat,___ftmul@f1+2
 10406  00275E  EC1B  F018         	call	___ftmul	;wreg free
 10407  002762  C079  F08B         	movff	?___ftmul,_fround$2961
 10408  002766  C07A  F08C         	movff	?___ftmul+1,_fround$2961+1
 10409  00276A  C07B  F08D         	movff	?___ftmul+2,_fround$2961+2
 10410                           
 10411                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10412  00276E  0E00               	movlw	0
 10413  002770  0100               	movlb	0	; () banked
 10414  002772  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10415  002774  0E03               	movlw	3
 10416  002776  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10417  002778  0E00               	movlw	0
 10418  00277A  6E1F               	movwf	___awmod@divisor+1,c
 10419  00277C  0E0A               	movlw	10
 10420  00277E  6E1E               	movwf	___awmod@divisor,c
 10421  002780  C08E  F01C         	movff	fround@prec,___awmod@dividend
 10422  002784  6A1D               	clrf	___awmod@dividend+1,c
 10423  002786  ECD1  F020         	call	___awmod	;wreg free
 10424  00278A  C01C  F075         	movff	?___awmod,___wmul@multiplier
 10425  00278E  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
 10426  002792  EC1F  F023         	call	___wmul	;wreg free
 10427  002796  0E24               	movlw	low __npowers_
 10428  002798  0100               	movlb	0	; () banked
 10429  00279A  2575               	addwf	?___wmul& (0+255),w,b
 10430  00279C  6EF6               	movwf	tblptrl,c
 10431  00279E  0E7F               	movlw	high __npowers_
 10432  0027A0  0100               	movlb	0	; () banked
 10433  0027A2  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10434  0027A4  6EF7               	movwf	tblptrh,c
 10435  0027A6                     	if	0	;There are less than 3 active tblptr bytes
 10436  0027A6                     	endif
 10437  0027A6  0009               	tblrd		*+
 10438  0027A8  CFF5 F07C          	movff	tablat,___ftmul@f2
 10439  0027AC  0009               	tblrd		*+
 10440  0027AE  CFF5 F07D          	movff	tablat,___ftmul@f2+1
 10441  0027B2  000A               	tblrd		*-
 10442  0027B4  CFF5 F07E          	movff	tablat,___ftmul@f2+2
 10443  0027B8  C08B  F079         	movff	_fround$2961,___ftmul@f1
 10444  0027BC  C08C  F07A         	movff	_fround$2961+1,___ftmul@f1+1
 10445  0027C0  C08D  F07B         	movff	_fround$2961+2,___ftmul@f1+2
 10446  0027C4  EC1B  F018         	call	___ftmul	;wreg free
 10447  0027C8  C079  F088         	movff	?___ftmul,_fround$2962
 10448  0027CC  C07A  F089         	movff	?___ftmul+1,_fround$2962+1
 10449  0027D0  C07B  F08A         	movff	?___ftmul+2,_fround$2962+2
 10450                           
 10451                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10452  0027D4  C088  F079         	movff	_fround$2962,___ftmul@f1
 10453  0027D8  C089  F07A         	movff	_fround$2962+1,___ftmul@f1+1
 10454  0027DC  C08A  F07B         	movff	_fround$2962+2,___ftmul@f1+2
 10455  0027E0  0E00               	movlw	0
 10456  0027E2  0100               	movlb	0	; () banked
 10457  0027E4  6F7C               	movwf	___ftmul@f2& (0+255),b
 10458  0027E6  0E00               	movlw	0
 10459  0027E8  0100               	movlb	0	; () banked
 10460  0027EA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
 10461  0027EC  0E3F               	movlw	63
 10462  0027EE  0100               	movlb	0	; () banked
 10463  0027F0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
 10464  0027F2  EC1B  F018         	call	___ftmul	;wreg free
 10465  0027F6  C079  F085         	movff	?___ftmul,?_fround
 10466  0027FA  C07A  F086         	movff	?___ftmul+1,?_fround+1
 10467  0027FE  C07B  F087         	movff	?___ftmul+2,?_fround+2
 10468  002802  0012               	return	
 10469  002804                     l5627:
 10470                           
 10471                           ;doprnt.c: 415: else if(prec > 10)
 10472  002804  0E0A               	movlw	10
 10473  002806  0100               	movlb	0	; () banked
 10474  002808  658E               	cpfsgt	fround@prec& (0+255),b
 10475  00280A  D06C               	goto	l5635
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10479  00280C  0E00               	movlw	0
 10480  00280E  0100               	movlb	0	; () banked
 10481  002810  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10482  002812  0E03               	movlw	3
 10483  002814  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10484  002816  0E00               	movlw	0
 10485  002818  6E1F               	movwf	___awmod@divisor+1,c
 10486  00281A  0E0A               	movlw	10
 10487  00281C  6E1E               	movwf	___awmod@divisor,c
 10488  00281E  C08E  F01C         	movff	fround@prec,___awmod@dividend
 10489  002822  6A1D               	clrf	___awmod@dividend+1,c
 10490  002824  ECD1  F020         	call	___awmod	;wreg free
 10491  002828  C01C  F075         	movff	?___awmod,___wmul@multiplier
 10492  00282C  C01D  F076         	movff	?___awmod+1,___wmul@multiplier+1
 10493  002830  EC1F  F023         	call	___wmul	;wreg free
 10494  002834  0E24               	movlw	low __npowers_
 10495  002836  0100               	movlb	0	; () banked
 10496  002838  2575               	addwf	?___wmul& (0+255),w,b
 10497  00283A  6EF6               	movwf	tblptrl,c
 10498  00283C  0E7F               	movlw	high __npowers_
 10499  00283E  0100               	movlb	0	; () banked
 10500  002840  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10501  002842  6EF7               	movwf	tblptrh,c
 10502  002844                     	if	0	;There are less than 3 active tblptr bytes
 10503  002844                     	endif
 10504  002844  0009               	tblrd		*+
 10505  002846  CFF5 F07C          	movff	tablat,___ftmul@f2
 10506  00284A  0009               	tblrd		*+
 10507  00284C  CFF5 F07D          	movff	tablat,___ftmul@f2+1
 10508  002850  000A               	tblrd		*-
 10509  002852  CFF5 F07E          	movff	tablat,___ftmul@f2+2
 10510  002856  0E00               	movlw	0
 10511  002858  0100               	movlb	0	; () banked
 10512  00285A  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
 10513  00285C  0E0A               	movlw	10
 10514  00285E  6F73               	movwf	___awdiv@divisor& (0+255),b
 10515  002860  C08E  F071         	movff	fround@prec,___awdiv@dividend
 10516  002864  0100               	movlb	0	; () banked
 10517  002866  6B72               	clrf	(___awdiv@dividend+1)& (0+255),b
 10518  002868  EC47  F01E         	call	___awdiv	;wreg free
 10519  00286C  0E09               	movlw	9
 10520  00286E  0100               	movlb	0	; () banked
 10521  002870  2571               	addwf	?___awdiv& (0+255),w,b
 10522  002872  0100               	movlb	0	; () banked
 10523  002874  6F75               	movwf	___wmul@multiplier& (0+255),b
 10524  002876  0E00               	movlw	0
 10525  002878  0100               	movlb	0	; () banked
 10526  00287A  2172               	addwfc	(?___awdiv+1)& (0+255),w,b
 10527  00287C  0100               	movlb	0	; () banked
 10528  00287E  6F76               	movwf	(___wmul@multiplier+1)& (0+255),b
 10529  002880  0E00               	movlw	0
 10530  002882  0100               	movlb	0	; () banked
 10531  002884  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10532  002886  0E03               	movlw	3
 10533  002888  6F77               	movwf	___wmul@multiplicand& (0+255),b
 10534  00288A  EC1F  F023         	call	___wmul	;wreg free
 10535  00288E  0E24               	movlw	low __npowers_
 10536  002890  0100               	movlb	0	; () banked
 10537  002892  2575               	addwf	?___wmul& (0+255),w,b
 10538  002894  6EF6               	movwf	tblptrl,c
 10539  002896  0E7F               	movlw	high __npowers_
 10540  002898  0100               	movlb	0	; () banked
 10541  00289A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 10542  00289C  6EF7               	movwf	tblptrh,c
 10543  00289E                     	if	0	;There are less than 3 active tblptr bytes
 10544  00289E                     	endif
 10545  00289E  0009               	tblrd		*+
 10546  0028A0  CFF5 F079          	movff	tablat,___ftmul@f1
 10547  0028A4  0009               	tblrd		*+
 10548  0028A6  CFF5 F07A          	movff	tablat,___ftmul@f1+1
 10549  0028AA  000A               	tblrd		*-
 10550  0028AC  CFF5 F07B          	movff	tablat,___ftmul@f1+2
 10551  0028B0  EC1B  F018         	call	___ftmul	;wreg free
 10552  0028B4  C079  F08B         	movff	?___ftmul,_fround$2961
 10553  0028B8  C07A  F08C         	movff	?___ftmul+1,_fround$2961+1
 10554  0028BC  C07B  F08D         	movff	?___ftmul+2,_fround$2961+2
 10555                           
 10556                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10557  0028C0  C08B  F079         	movff	_fround$2961,___ftmul@f1
 10558  0028C4  C08C  F07A         	movff	_fround$2961+1,___ftmul@f1+1
 10559  0028C8  C08D  F07B         	movff	_fround$2961+2,___ftmul@f1+2
 10560  0028CC  0E00               	movlw	0
 10561  0028CE  0100               	movlb	0	; () banked
 10562  0028D0  6F7C               	movwf	___ftmul@f2& (0+255),b
 10563  0028D2  0E00               	movlw	0
 10564  0028D4  0100               	movlb	0	; () banked
 10565  0028D6  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
 10566  0028D8  0E3F               	movlw	63
 10567  0028DA  0100               	movlb	0	; () banked
 10568  0028DC  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
 10569  0028DE  EC1B  F018         	call	___ftmul	;wreg free
 10570  0028E2  D789               	goto	L6
 10571  0028E4                     l5635:
 10572                           
 10573                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10574  0028E4  0100               	movlb	0	; () banked
 10575  0028E6  518E               	movf	fround@prec& (0+255),w,b
 10576  0028E8  0D03               	mullw	3
 10577  0028EA  0E24               	movlw	low __npowers_
 10578  0028EC  24F3               	addwf	prodl,w,c
 10579  0028EE  6EF6               	movwf	tblptrl,c
 10580  0028F0  0E7F               	movlw	high __npowers_
 10581  0028F2  20F4               	addwfc	prodh,w,c
 10582  0028F4  6EF7               	movwf	tblptrh,c
 10583  0028F6                     	if	0	;There are less than 3 active tblptr bytes
 10584  0028F6                     	endif
 10585  0028F6  0009               	tblrd		*+
 10586  0028F8  CFF5 F079          	movff	tablat,___ftmul@f1
 10587  0028FC  0009               	tblrd		*+
 10588  0028FE  CFF5 F07A          	movff	tablat,___ftmul@f1+1
 10589  002902  000A               	tblrd		*-
 10590  002904  CFF5 F07B          	movff	tablat,___ftmul@f1+2
 10591  002908  0E00               	movlw	0
 10592  00290A  0100               	movlb	0	; () banked
 10593  00290C  6F7C               	movwf	___ftmul@f2& (0+255),b
 10594  00290E  0E00               	movlw	0
 10595  002910  0100               	movlb	0	; () banked
 10596  002912  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
 10597  002914  0E3F               	movlw	63
 10598  002916  0100               	movlb	0	; () banked
 10599  002918  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
 10600  00291A  EC1B  F018         	call	___ftmul	;wreg free
 10601  00291E  C079  F085         	movff	?___ftmul,?_fround
 10602  002922  C07A  F086         	movff	?___ftmul+1,?_fround+1
 10603  002926  C07B  F087         	movff	?___ftmul+2,?_fround+2
 10604  00292A  0012               	return	
 10605  00292C                     __end_of_fround:
 10606                           	opt stack 0
 10607                           tosu	equ	0xFFF
 10608                           tosh	equ	0xFFE
 10609                           tosl	equ	0xFFD
 10610                           pclath	equ	0xFFA
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           intcon	equ	0xFF2
 10618                           indf0	equ	0xFEF
 10619                           postinc0	equ	0xFEE
 10620                           fsr0h	equ	0xFEA
 10621                           fsr0l	equ	0xFE9
 10622                           wreg	equ	0xFE8
 10623                           indf1	equ	0xFE7
 10624                           postdec1	equ	0xFE5
 10625                           fsr1h	equ	0xFE2
 10626                           fsr1l	equ	0xFE1
 10627                           indf2	equ	0xFDF
 10628                           postinc2	equ	0xFDE
 10629                           postdec2	equ	0xFDD
 10630                           fsr2h	equ	0xFDA
 10631                           fsr2l	equ	0xFD9
 10632                           status	equ	0xFD8
 10633                           
 10634 ;; *************** function ___wmul *****************
 10635 ;; Defined at:
 10636 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  multiplier      2   21[BANK0 ] unsigned int 
 10639 ;;  multiplicand    2   23[BANK0 ] unsigned int 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;  product         2   37[COMRAM] unsigned int 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  2   21[BANK0 ] unsigned int 
 10644 ;; Registers used:
 10645 ;;		wreg, status,2, status,0, prodl, prodh
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10651 ;;      Params:         0       4       0       0       0       0       0
 10652 ;;      Locals:         2       0       0       0       0       0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0
 10654 ;;      Totals:         2       4       0       0       0       0       0
 10655 ;;Total ram usage:        6 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    2
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_fround
 10662 ;;		_scale
 10663 ;;		__doprnt
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text39
 10668  00463E                     __ptext39:
 10669                           	opt stack 0
 10670  00463E                     ___wmul:
 10671                           	opt stack 23
 10672                           
 10673                           ;incstack = 0
 10674  00463E  0100               	movlb	0	; () banked
 10675  004640  5175               	movf	___wmul@multiplier& (0+255),w,b
 10676  004642  0100               	movlb	0	; () banked
 10677  004644  0377               	mulwf	___wmul@multiplicand& (0+255),b
 10678  004646  CFF3 F026          	movff	prodl,___wmul@product
 10679  00464A  CFF4 F027          	movff	prodh,___wmul@product+1
 10680  00464E  0100               	movlb	0	; () banked
 10681  004650  5175               	movf	___wmul@multiplier& (0+255),w,b
 10682  004652  0100               	movlb	0	; () banked
 10683  004654  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10684  004656  50F3               	movf	prodl,w,c
 10685  004658  2627               	addwf	___wmul@product+1,f,c
 10686  00465A  0100               	movlb	0	; () banked
 10687  00465C  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10688  00465E  0100               	movlb	0	; () banked
 10689  004660  0377               	mulwf	___wmul@multiplicand& (0+255),b
 10690  004662  50F3               	movf	prodl,w,c
 10691  004664  2627               	addwf	___wmul@product+1,f,c
 10692                           
 10693                           ; BSR set to: 0
 10694  004666  C026  F075         	movff	___wmul@product,?___wmul
 10695  00466A  C027  F076         	movff	___wmul@product+1,?___wmul+1
 10696  00466E  0012               	return	
 10697  004670                     __end_of___wmul:
 10698                           	opt stack 0
 10699                           tosu	equ	0xFFF
 10700                           tosh	equ	0xFFE
 10701                           tosl	equ	0xFFD
 10702                           pclath	equ	0xFFA
 10703                           tblptru	equ	0xFF8
 10704                           tblptrh	equ	0xFF7
 10705                           tblptrl	equ	0xFF6
 10706                           tablat	equ	0xFF5
 10707                           prodh	equ	0xFF4
 10708                           prodl	equ	0xFF3
 10709                           intcon	equ	0xFF2
 10710                           indf0	equ	0xFEF
 10711                           postinc0	equ	0xFEE
 10712                           fsr0h	equ	0xFEA
 10713                           fsr0l	equ	0xFE9
 10714                           wreg	equ	0xFE8
 10715                           indf1	equ	0xFE7
 10716                           postdec1	equ	0xFE5
 10717                           fsr1h	equ	0xFE2
 10718                           fsr1l	equ	0xFE1
 10719                           indf2	equ	0xFDF
 10720                           postinc2	equ	0xFDE
 10721                           postdec2	equ	0xFDD
 10722                           fsr2h	equ	0xFDA
 10723                           fsr2l	equ	0xFD9
 10724                           status	equ	0xFD8
 10725                           
 10726 ;; *************** function ___ftmul *****************
 10727 ;; Defined at:
 10728 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  f1              3   25[BANK0 ] float 
 10731 ;;  f2              3   28[BANK0 ] float 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
 10734 ;;  sign            1   36[BANK0 ] unsigned char 
 10735 ;;  cntr            1   35[BANK0 ] unsigned char 
 10736 ;;  exp             1   31[BANK0 ] unsigned char 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  3   25[BANK0 ] float 
 10739 ;; Registers used:
 10740 ;;		wreg, status,2, status,0, cstack
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10746 ;;      Params:         0       6       0       0       0       0       0
 10747 ;;      Locals:         0       6       0       0       0       0       0
 10748 ;;      Temps:          3       0       0       0       0       0       0
 10749 ;;      Totals:         3      12       0       0       0       0       0
 10750 ;;Total ram usage:       15 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:    3
 10753 ;; This function calls:
 10754 ;;		___ftpack
 10755 ;; This function is called by:
 10756 ;;		_util_getBatteryVoltage
 10757 ;;		_util_getSolarCurrent
 10758 ;;		_util_getBatteryCurrent
 10759 ;;		_util_getTemperature
 10760 ;;		_fround
 10761 ;;		_scale
 10762 ;;		__doprnt
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text40
 10767  003036                     __ptext40:
 10768                           	opt stack 0
 10769  003036                     ___ftmul:
 10770                           	opt stack 25
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;incstack = 0
 10774  003036  C07B  F028         	movff	___ftmul@f1+2,??___ftmul
 10775  00303A  6A29               	clrf	(??___ftmul+1)& (0+255),c
 10776  00303C  6A2A               	clrf	(??___ftmul+2)& (0+255),c
 10777  00303E  0100               	movlb	0	; () banked
 10778  003040  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10779  003042  3628               	rlcf	??___ftmul& (0+255),f,c
 10780  003044  E301               	bnc	u6071
 10781  003046  8029               	bsf	(??___ftmul+1)& (0+255),0,c
 10782  003048                     u6071:
 10783  003048  5028               	movf	??___ftmul,w,c
 10784  00304A  0100               	movlb	0	; () banked
 10785  00304C  6F7F               	movwf	___ftmul@exp& (0+255),b
 10786  00304E  0100               	movlb	0	; () banked
 10787  003050  517F               	movf	___ftmul@exp& (0+255),w,b
 10788  003052  A4D8               	btfss	status,2,c
 10789  003054  D00A               	goto	l5463
 10790                           
 10791                           ; BSR set to: 0
 10792  003056  0E00               	movlw	0
 10793  003058  0100               	movlb	0	; () banked
 10794  00305A  6F79               	movwf	?___ftmul& (0+255),b
 10795  00305C  0E00               	movlw	0
 10796  00305E  0100               	movlb	0	; () banked
 10797  003060  6F7A               	movwf	(?___ftmul+1)& (0+255),b
 10798  003062  0E00               	movlw	0
 10799  003064  0100               	movlb	0	; () banked
 10800  003066  6F7B               	movwf	(?___ftmul+2)& (0+255),b
 10801                           
 10802                           ; BSR set to: 0
 10803  003068  0012               	return	
 10804  00306A                     l5463:
 10805                           
 10806                           ; BSR set to: 0
 10807  00306A  C07E  F028         	movff	___ftmul@f2+2,??___ftmul
 10808  00306E  6A29               	clrf	(??___ftmul+1)& (0+255),c
 10809  003070  6A2A               	clrf	(??___ftmul+2)& (0+255),c
 10810  003072  0100               	movlb	0	; () banked
 10811  003074  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10812  003076  3628               	rlcf	??___ftmul& (0+255),f,c
 10813  003078  E301               	bnc	u6091
 10814  00307A  8029               	bsf	(??___ftmul+1)& (0+255),0,c
 10815  00307C                     u6091:
 10816  00307C  5028               	movf	??___ftmul,w,c
 10817  00307E  0100               	movlb	0	; () banked
 10818  003080  6F84               	movwf	___ftmul@sign& (0+255),b
 10819  003082  0100               	movlb	0	; () banked
 10820  003084  5184               	movf	___ftmul@sign& (0+255),w,b
 10821  003086  A4D8               	btfss	status,2,c
 10822  003088  D00A               	goto	l5469
 10823                           
 10824                           ; BSR set to: 0
 10825  00308A  0E00               	movlw	0
 10826  00308C  0100               	movlb	0	; () banked
 10827  00308E  6F79               	movwf	?___ftmul& (0+255),b
 10828  003090  0E00               	movlw	0
 10829  003092  0100               	movlb	0	; () banked
 10830  003094  6F7A               	movwf	(?___ftmul+1)& (0+255),b
 10831  003096  0E00               	movlw	0
 10832  003098  0100               	movlb	0	; () banked
 10833  00309A  6F7B               	movwf	(?___ftmul+2)& (0+255),b
 10834                           
 10835                           ; BSR set to: 0
 10836  00309C  0012               	return	
 10837  00309E                     l5469:
 10838                           
 10839                           ; BSR set to: 0
 10840  00309E  0100               	movlb	0	; () banked
 10841  0030A0  5184               	movf	___ftmul@sign& (0+255),w,b
 10842  0030A2  0F7B               	addlw	123
 10843  0030A4  0100               	movlb	0	; () banked
 10844  0030A6  277F               	addwf	___ftmul@exp& (0+255),f,b
 10845                           
 10846                           ; BSR set to: 0
 10847  0030A8  C07B  F084         	movff	___ftmul@f1+2,___ftmul@sign
 10848  0030AC  0100               	movlb	0	; () banked
 10849  0030AE  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10850  0030B0  0100               	movlb	0	; () banked
 10851  0030B2  1B84               	xorwf	___ftmul@sign& (0+255),f,b
 10852  0030B4  0E80               	movlw	128
 10853  0030B6  0100               	movlb	0	; () banked
 10854  0030B8  1784               	andwf	___ftmul@sign& (0+255),f,b
 10855                           
 10856                           ; BSR set to: 0
 10857  0030BA  0100               	movlb	0	; () banked
 10858  0030BC  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10859                           
 10860                           ; BSR set to: 0
 10861  0030BE  0100               	movlb	0	; () banked
 10862  0030C0  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10863                           
 10864                           ; BSR set to: 0
 10865  0030C2  0EFF               	movlw	255
 10866  0030C4  0100               	movlb	0	; () banked
 10867  0030C6  177C               	andwf	___ftmul@f2& (0+255),f,b
 10868  0030C8  0EFF               	movlw	255
 10869  0030CA  0100               	movlb	0	; () banked
 10870  0030CC  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10871  0030CE  0E00               	movlw	0
 10872  0030D0  0100               	movlb	0	; () banked
 10873  0030D2  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10874                           
 10875                           ; BSR set to: 0
 10876  0030D4  0E00               	movlw	0
 10877  0030D6  0100               	movlb	0	; () banked
 10878  0030D8  6F80               	movwf	___ftmul@f3_as_product& (0+255),b
 10879  0030DA  0E00               	movlw	0
 10880  0030DC  0100               	movlb	0	; () banked
 10881  0030DE  6F81               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10882  0030E0  0E00               	movlw	0
 10883  0030E2  0100               	movlb	0	; () banked
 10884  0030E4  6F82               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10885                           
 10886                           ; BSR set to: 0
 10887  0030E6  0E07               	movlw	7
 10888  0030E8  0100               	movlb	0	; () banked
 10889  0030EA  6F83               	movwf	___ftmul@cntr& (0+255),b
 10890  0030EC                     l5483:
 10891                           
 10892                           ; BSR set to: 0
 10893  0030EC  0100               	movlb	0	; () banked
 10894  0030EE  A179               	btfss	___ftmul@f1& (0+255),0,b
 10895  0030F0  D00C               	goto	l5487
 10896                           
 10897                           ; BSR set to: 0
 10898  0030F2  0100               	movlb	0	; () banked
 10899  0030F4  517C               	movf	___ftmul@f2& (0+255),w,b
 10900  0030F6  0100               	movlb	0	; () banked
 10901  0030F8  2780               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10902  0030FA  0100               	movlb	0	; () banked
 10903  0030FC  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
 10904  0030FE  0100               	movlb	0	; () banked
 10905  003100  2381               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10906  003102  0100               	movlb	0	; () banked
 10907  003104  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10908  003106  0100               	movlb	0	; () banked
 10909  003108  2382               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10910  00310A                     l5487:
 10911                           
 10912                           ; BSR set to: 0
 10913  00310A  0100               	movlb	0	; () banked
 10914  00310C  90D8               	bcf	status,0,c
 10915  00310E  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10916  003110  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10917  003112  3379               	rrcf	___ftmul@f1& (0+255),f,b
 10918  003114  0100               	movlb	0	; () banked
 10919  003116  90D8               	bcf	status,0,c
 10920  003118  377C               	rlcf	___ftmul@f2& (0+255),f,b
 10921  00311A  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10922  00311C  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 0
 10925  00311E  0100               	movlb	0	; () banked
 10926  003120  2F83               	decfsz	___ftmul@cntr& (0+255),f,b
 10927  003122  D7E4               	goto	l5483
 10928                           
 10929                           ; BSR set to: 0
 10930                           
 10931                           ; BSR set to: 0
 10932  003124  0E09               	movlw	9
 10933  003126  0100               	movlb	0	; () banked
 10934  003128  6F83               	movwf	___ftmul@cntr& (0+255),b
 10935  00312A                     l5493:
 10936                           
 10937                           ; BSR set to: 0
 10938  00312A  0100               	movlb	0	; () banked
 10939  00312C  A179               	btfss	___ftmul@f1& (0+255),0,b
 10940  00312E  D00C               	goto	l5497
 10941                           
 10942                           ; BSR set to: 0
 10943  003130  0100               	movlb	0	; () banked
 10944  003132  517C               	movf	___ftmul@f2& (0+255),w,b
 10945  003134  0100               	movlb	0	; () banked
 10946  003136  2780               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10947  003138  0100               	movlb	0	; () banked
 10948  00313A  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
 10949  00313C  0100               	movlb	0	; () banked
 10950  00313E  2381               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10951  003140  0100               	movlb	0	; () banked
 10952  003142  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10953  003144  0100               	movlb	0	; () banked
 10954  003146  2382               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10955  003148                     l5497:
 10956                           
 10957                           ; BSR set to: 0
 10958  003148  0100               	movlb	0	; () banked
 10959  00314A  90D8               	bcf	status,0,c
 10960  00314C  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10961  00314E  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10962  003150  3379               	rrcf	___ftmul@f1& (0+255),f,b
 10963  003152  0100               	movlb	0	; () banked
 10964  003154  90D8               	bcf	status,0,c
 10965  003156  3382               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10966  003158  3381               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10967  00315A  3380               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10968                           
 10969                           ; BSR set to: 0
 10970  00315C  0100               	movlb	0	; () banked
 10971  00315E  2F83               	decfsz	___ftmul@cntr& (0+255),f,b
 10972  003160  D7E4               	goto	l5493
 10973                           
 10974                           ; BSR set to: 0
 10975                           
 10976                           ; BSR set to: 0
 10977  003162  C080  F01C         	movff	___ftmul@f3_as_product,___ftpack@arg
 10978  003166  C081  F01D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10979  00316A  C082  F01E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10980  00316E  C07F  F01F         	movff	___ftmul@exp,___ftpack@exp
 10981  003172  C084  F020         	movff	___ftmul@sign,___ftpack@sign
 10982  003176  ECF0  F01D         	call	___ftpack	;wreg free
 10983  00317A  C01C  F079         	movff	?___ftpack,?___ftmul
 10984  00317E  C01D  F07A         	movff	?___ftpack+1,?___ftmul+1
 10985  003182  C01E  F07B         	movff	?___ftpack+2,?___ftmul+2
 10986  003186  0012               	return	
 10987  003188                     __end_of___ftmul:
 10988                           	opt stack 0
 10989                           tosu	equ	0xFFF
 10990                           tosh	equ	0xFFE
 10991                           tosl	equ	0xFFD
 10992                           pclath	equ	0xFFA
 10993                           tblptru	equ	0xFF8
 10994                           tblptrh	equ	0xFF7
 10995                           tblptrl	equ	0xFF6
 10996                           tablat	equ	0xFF5
 10997                           prodh	equ	0xFF4
 10998                           prodl	equ	0xFF3
 10999                           intcon	equ	0xFF2
 11000                           indf0	equ	0xFEF
 11001                           postinc0	equ	0xFEE
 11002                           fsr0h	equ	0xFEA
 11003                           fsr0l	equ	0xFE9
 11004                           wreg	equ	0xFE8
 11005                           indf1	equ	0xFE7
 11006                           postdec1	equ	0xFE5
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           indf2	equ	0xFDF
 11010                           postinc2	equ	0xFDE
 11011                           postdec2	equ	0xFDD
 11012                           fsr2h	equ	0xFDA
 11013                           fsr2l	equ	0xFD9
 11014                           status	equ	0xFD8
 11015                           
 11016 ;; *************** function ___awmod *****************
 11017 ;; Defined at:
 11018 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  dividend        2   27[COMRAM] int 
 11021 ;;  divisor         2   29[COMRAM] int 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  sign            1   32[COMRAM] unsigned char 
 11024 ;;  counter         1   31[COMRAM] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2   27[COMRAM] int 
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11034 ;;      Params:         4       0       0       0       0       0       0
 11035 ;;      Locals:         2       0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0
 11037 ;;      Totals:         6       0       0       0       0       0       0
 11038 ;;Total ram usage:        6 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    2
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_fround
 11045 ;;		_scale
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text41
 11050  0041A2                     __ptext41:
 11051                           	opt stack 0
 11052  0041A2                     ___awmod:
 11053                           	opt stack 23
 11054                           
 11055                           ;incstack = 0
 11056  0041A2  0E00               	movlw	0
 11057  0041A4  6E21               	movwf	___awmod@sign,c
 11058  0041A6  AE1D               	btfss	___awmod@dividend+1,7,c
 11059  0041A8  D006               	goto	l5557
 11060  0041AA  6C1C               	negf	___awmod@dividend,c
 11061  0041AC  1E1D               	comf	___awmod@dividend+1,f,c
 11062  0041AE  B0D8               	btfsc	status,0,c
 11063  0041B0  2A1D               	incf	___awmod@dividend+1,f,c
 11064  0041B2  0E01               	movlw	1
 11065  0041B4  6E21               	movwf	___awmod@sign,c
 11066  0041B6                     l5557:
 11067  0041B6  AE1F               	btfss	___awmod@divisor+1,7,c
 11068  0041B8  D004               	goto	l5561
 11069  0041BA  6C1E               	negf	___awmod@divisor,c
 11070  0041BC  1E1F               	comf	___awmod@divisor+1,f,c
 11071  0041BE  B0D8               	btfsc	status,0,c
 11072  0041C0  2A1F               	incf	___awmod@divisor+1,f,c
 11073  0041C2                     l5561:
 11074  0041C2  501E               	movf	___awmod@divisor,w,c
 11075  0041C4  101F               	iorwf	___awmod@divisor+1,w,c
 11076  0041C6  B4D8               	btfsc	status,2,c
 11077  0041C8  D018               	goto	l5577
 11078  0041CA  0E01               	movlw	1
 11079  0041CC  6E20               	movwf	___awmod@counter,c
 11080  0041CE  D004               	goto	l5567
 11081  0041D0                     l5565:
 11082  0041D0  90D8               	bcf	status,0,c
 11083  0041D2  361E               	rlcf	___awmod@divisor,f,c
 11084  0041D4  361F               	rlcf	___awmod@divisor+1,f,c
 11085  0041D6  2A20               	incf	___awmod@counter,f,c
 11086  0041D8                     l5567:
 11087  0041D8  AE1F               	btfss	___awmod@divisor+1,7,c
 11088  0041DA  D7FA               	goto	l5565
 11089  0041DC                     l5569:
 11090  0041DC  501E               	movf	___awmod@divisor,w,c
 11091  0041DE  5C1C               	subwf	___awmod@dividend,w,c
 11092  0041E0  501F               	movf	___awmod@divisor+1,w,c
 11093  0041E2  581D               	subwfb	___awmod@dividend+1,w,c
 11094  0041E4  A0D8               	btfss	status,0,c
 11095  0041E6  D004               	goto	l5573
 11096  0041E8  501E               	movf	___awmod@divisor,w,c
 11097  0041EA  5E1C               	subwf	___awmod@dividend,f,c
 11098  0041EC  501F               	movf	___awmod@divisor+1,w,c
 11099  0041EE  5A1D               	subwfb	___awmod@dividend+1,f,c
 11100  0041F0                     l5573:
 11101  0041F0  90D8               	bcf	status,0,c
 11102  0041F2  321F               	rrcf	___awmod@divisor+1,f,c
 11103  0041F4  321E               	rrcf	___awmod@divisor,f,c
 11104  0041F6  2E20               	decfsz	___awmod@counter,f,c
 11105  0041F8  D7F1               	goto	l5569
 11106  0041FA                     l5577:
 11107  0041FA  5021               	movf	___awmod@sign,w,c
 11108  0041FC  B4D8               	btfsc	status,2,c
 11109  0041FE  D004               	goto	l5581
 11110  004200  6C1C               	negf	___awmod@dividend,c
 11111  004202  1E1D               	comf	___awmod@dividend+1,f,c
 11112  004204  B0D8               	btfsc	status,0,c
 11113  004206  2A1D               	incf	___awmod@dividend+1,f,c
 11114  004208                     l5581:
 11115  004208  C01C  F01C         	movff	___awmod@dividend,?___awmod
 11116  00420C  C01D  F01D         	movff	___awmod@dividend+1,?___awmod+1
 11117  004210  0012               	return	
 11118  004212                     __end_of___awmod:
 11119                           	opt stack 0
 11120                           tosu	equ	0xFFF
 11121                           tosh	equ	0xFFE
 11122                           tosl	equ	0xFFD
 11123                           pclath	equ	0xFFA
 11124                           tblptru	equ	0xFF8
 11125                           tblptrh	equ	0xFF7
 11126                           tblptrl	equ	0xFF6
 11127                           tablat	equ	0xFF5
 11128                           prodh	equ	0xFF4
 11129                           prodl	equ	0xFF3
 11130                           intcon	equ	0xFF2
 11131                           indf0	equ	0xFEF
 11132                           postinc0	equ	0xFEE
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           indf1	equ	0xFE7
 11137                           postdec1	equ	0xFE5
 11138                           fsr1h	equ	0xFE2
 11139                           fsr1l	equ	0xFE1
 11140                           indf2	equ	0xFDF
 11141                           postinc2	equ	0xFDE
 11142                           postdec2	equ	0xFDD
 11143                           fsr2h	equ	0xFDA
 11144                           fsr2l	equ	0xFD9
 11145                           status	equ	0xFD8
 11146                           
 11147 ;; *************** function ___awdiv *****************
 11148 ;; Defined at:
 11149 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  dividend        2   17[BANK0 ] int 
 11152 ;;  divisor         2   19[BANK0 ] int 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  quotient        2   35[COMRAM] int 
 11155 ;;  sign            1   34[COMRAM] unsigned char 
 11156 ;;  counter         1   33[COMRAM] unsigned char 
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  2   17[BANK0 ] int 
 11159 ;; Registers used:
 11160 ;;		wreg, status,2, status,0
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11166 ;;      Params:         0       4       0       0       0       0       0
 11167 ;;      Locals:         4       0       0       0       0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0
 11169 ;;      Totals:         4       4       0       0       0       0       0
 11170 ;;Total ram usage:        8 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:    2
 11173 ;; This function calls:
 11174 ;;		Nothing
 11175 ;; This function is called by:
 11176 ;;		_fround
 11177 ;;		_scale
 11178 ;;		__doprnt
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text42
 11183  003C8E                     __ptext42:
 11184                           	opt stack 0
 11185  003C8E                     ___awdiv:
 11186                           	opt stack 23
 11187                           
 11188                           ;incstack = 0
 11189  003C8E  0E00               	movlw	0
 11190  003C90  6E23               	movwf	___awdiv@sign,c
 11191  003C92  0100               	movlb	0	; () banked
 11192  003C94  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11193  003C96  D007               	goto	l5513
 11194                           
 11195                           ; BSR set to: 0
 11196  003C98  0100               	movlb	0	; () banked
 11197  003C9A  6D73               	negf	___awdiv@divisor& (0+255),b
 11198  003C9C  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11199  003C9E  B0D8               	btfsc	status,0,c
 11200  003CA0  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11201                           
 11202                           ; BSR set to: 0
 11203  003CA2  0E01               	movlw	1
 11204  003CA4  6E23               	movwf	___awdiv@sign,c
 11205  003CA6                     l5513:
 11206                           
 11207                           ; BSR set to: 0
 11208  003CA6  0100               	movlb	0	; () banked
 11209  003CA8  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11210  003CAA  D007               	goto	l5519
 11211                           
 11212                           ; BSR set to: 0
 11213  003CAC  0100               	movlb	0	; () banked
 11214  003CAE  6D71               	negf	___awdiv@dividend& (0+255),b
 11215  003CB0  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11216  003CB2  B0D8               	btfsc	status,0,c
 11217  003CB4  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11218                           
 11219                           ; BSR set to: 0
 11220  003CB6  0E01               	movlw	1
 11221  003CB8  1A23               	xorwf	___awdiv@sign,f,c
 11222  003CBA                     l5519:
 11223                           
 11224                           ; BSR set to: 0
 11225  003CBA  0E00               	movlw	0
 11226  003CBC  6E25               	movwf	___awdiv@quotient+1,c
 11227  003CBE  0E00               	movlw	0
 11228  003CC0  6E24               	movwf	___awdiv@quotient,c
 11229                           
 11230                           ; BSR set to: 0
 11231  003CC2  0100               	movlb	0	; () banked
 11232  003CC4  5173               	movf	___awdiv@divisor& (0+255),w,b
 11233  003CC6  0100               	movlb	0	; () banked
 11234  003CC8  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11235  003CCA  B4D8               	btfsc	status,2,c
 11236  003CCC  D027               	goto	l5541
 11237                           
 11238                           ; BSR set to: 0
 11239  003CCE  0E01               	movlw	1
 11240  003CD0  6E22               	movwf	___awdiv@counter,c
 11241  003CD2  D005               	goto	l5527
 11242  003CD4                     l5525:
 11243                           
 11244                           ; BSR set to: 0
 11245  003CD4  0100               	movlb	0	; () banked
 11246  003CD6  90D8               	bcf	status,0,c
 11247  003CD8  3773               	rlcf	___awdiv@divisor& (0+255),f,b
 11248  003CDA  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11249  003CDC  2A22               	incf	___awdiv@counter,f,c
 11250  003CDE                     l5527:
 11251                           
 11252                           ; BSR set to: 0
 11253  003CDE  0100               	movlb	0	; () banked
 11254  003CE0  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11255  003CE2  D7F8               	goto	l5525
 11256  003CE4                     l5529:
 11257                           
 11258                           ; BSR set to: 0
 11259  003CE4  90D8               	bcf	status,0,c
 11260  003CE6  3624               	rlcf	___awdiv@quotient,f,c
 11261  003CE8  3625               	rlcf	___awdiv@quotient+1,f,c
 11262                           
 11263                           ; BSR set to: 0
 11264  003CEA  0100               	movlb	0	; () banked
 11265  003CEC  5173               	movf	___awdiv@divisor& (0+255),w,b
 11266  003CEE  0100               	movlb	0	; () banked
 11267  003CF0  5D71               	subwf	___awdiv@dividend& (0+255),w,b
 11268  003CF2  0100               	movlb	0	; () banked
 11269  003CF4  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11270  003CF6  0100               	movlb	0	; () banked
 11271  003CF8  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11272  003CFA  A0D8               	btfss	status,0,c
 11273  003CFC  D009               	goto	l5537
 11274                           
 11275                           ; BSR set to: 0
 11276  003CFE  0100               	movlb	0	; () banked
 11277  003D00  5173               	movf	___awdiv@divisor& (0+255),w,b
 11278  003D02  0100               	movlb	0	; () banked
 11279  003D04  5F71               	subwf	___awdiv@dividend& (0+255),f,b
 11280  003D06  0100               	movlb	0	; () banked
 11281  003D08  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11282  003D0A  0100               	movlb	0	; () banked
 11283  003D0C  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11284                           
 11285                           ; BSR set to: 0
 11286  003D0E  8024               	bsf	___awdiv@quotient,0,c
 11287  003D10                     l5537:
 11288                           
 11289                           ; BSR set to: 0
 11290  003D10  0100               	movlb	0	; () banked
 11291  003D12  90D8               	bcf	status,0,c
 11292  003D14  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11293  003D16  3373               	rrcf	___awdiv@divisor& (0+255),f,b
 11294                           
 11295                           ; BSR set to: 0
 11296  003D18  2E22               	decfsz	___awdiv@counter,f,c
 11297  003D1A  D7E4               	goto	l5529
 11298  003D1C                     l5541:
 11299                           
 11300                           ; BSR set to: 0
 11301  003D1C  5023               	movf	___awdiv@sign,w,c
 11302  003D1E  B4D8               	btfsc	status,2,c
 11303  003D20  D004               	goto	l5545
 11304                           
 11305                           ; BSR set to: 0
 11306  003D22  6C24               	negf	___awdiv@quotient,c
 11307  003D24  1E25               	comf	___awdiv@quotient+1,f,c
 11308  003D26  B0D8               	btfsc	status,0,c
 11309  003D28  2A25               	incf	___awdiv@quotient+1,f,c
 11310  003D2A                     l5545:
 11311                           
 11312                           ; BSR set to: 0
 11313  003D2A  C024  F071         	movff	___awdiv@quotient,?___awdiv
 11314  003D2E  C025  F072         	movff	___awdiv@quotient+1,?___awdiv+1
 11315  003D32  0012               	return	
 11316  003D34                     __end_of___awdiv:
 11317                           	opt stack 0
 11318                           tosu	equ	0xFFF
 11319                           tosh	equ	0xFFE
 11320                           tosl	equ	0xFFD
 11321                           pclath	equ	0xFFA
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           indf0	equ	0xFEF
 11330                           postinc0	equ	0xFEE
 11331                           fsr0h	equ	0xFEA
 11332                           fsr0l	equ	0xFE9
 11333                           wreg	equ	0xFE8
 11334                           indf1	equ	0xFE7
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           fsr2h	equ	0xFDA
 11342                           fsr2l	equ	0xFD9
 11343                           status	equ	0xFD8
 11344                           
 11345 ;; *************** function __tdiv_to_l_ *****************
 11346 ;; Defined at:
 11347 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;  f1              3   27[COMRAM] float 
 11350 ;;  f2              3   30[COMRAM] float 
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;  quot            4   36[COMRAM] unsigned long 
 11353 ;;  exp1            1   41[COMRAM] unsigned char 
 11354 ;;  cntr            1   40[COMRAM] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  4   27[COMRAM] unsigned long 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11364 ;;      Params:         6       0       0       0       0       0       0
 11365 ;;      Locals:         6       0       0       0       0       0       0
 11366 ;;      Temps:          3       0       0       0       0       0       0
 11367 ;;      Totals:        15       0       0       0       0       0       0
 11368 ;;Total ram usage:       15 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    2
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		__doprnt
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text43
 11379  00340C                     __ptext43:
 11380                           	opt stack 0
 11381  00340C                     __tdiv_to_l_:
 11382                           	opt stack 24
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;incstack = 0
 11386  00340C  C01E  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11387  003410  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 11388  003412  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 11389  003414  341D               	rlcf	__tdiv_to_l_@f1+1,w,c
 11390  003416  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 11391  003418  E301               	bnc	u6361
 11392  00341A  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 11393  00341C                     u6361:
 11394  00341C  5022               	movf	??__tdiv_to_l_,w,c
 11395  00341E  6E2A               	movwf	__tdiv_to_l_@exp1,c
 11396  003420  502A               	movf	__tdiv_to_l_@exp1,w,c
 11397  003422  A4D8               	btfss	status,2,c
 11398  003424  D009               	goto	l5695
 11399  003426  0E00               	movlw	0
 11400  003428  6E1C               	movwf	?__tdiv_to_l_,c
 11401  00342A  0E00               	movlw	0
 11402  00342C  6E1D               	movwf	?__tdiv_to_l_+1,c
 11403  00342E  0E00               	movlw	0
 11404  003430  6E1E               	movwf	?__tdiv_to_l_+2,c
 11405  003432  0E00               	movlw	0
 11406  003434  6E1F               	movwf	?__tdiv_to_l_+3,c
 11407  003436  0012               	return	
 11408  003438                     l5695:
 11409  003438  C021  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11410  00343C  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 11411  00343E  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 11412  003440  3420               	rlcf	__tdiv_to_l_@f2+1,w,c
 11413  003442  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 11414  003444  E301               	bnc	u6381
 11415  003446  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 11416  003448                     u6381:
 11417  003448  5022               	movf	??__tdiv_to_l_,w,c
 11418  00344A  6E29               	movwf	__tdiv_to_l_@cntr,c
 11419  00344C  5029               	movf	__tdiv_to_l_@cntr,w,c
 11420  00344E  A4D8               	btfss	status,2,c
 11421  003450  D009               	goto	l5701
 11422  003452  0E00               	movlw	0
 11423  003454  6E1C               	movwf	?__tdiv_to_l_,c
 11424  003456  0E00               	movlw	0
 11425  003458  6E1D               	movwf	?__tdiv_to_l_+1,c
 11426  00345A  0E00               	movlw	0
 11427  00345C  6E1E               	movwf	?__tdiv_to_l_+2,c
 11428  00345E  0E00               	movlw	0
 11429  003460  6E1F               	movwf	?__tdiv_to_l_+3,c
 11430  003462  0012               	return	
 11431  003464                     l5701:
 11432  003464  8E1D               	bsf	__tdiv_to_l_@f1+1,7,c
 11433  003466  0EFF               	movlw	255
 11434  003468  161C               	andwf	__tdiv_to_l_@f1,f,c
 11435  00346A  0EFF               	movlw	255
 11436  00346C  161D               	andwf	__tdiv_to_l_@f1+1,f,c
 11437  00346E  0E00               	movlw	0
 11438  003470  161E               	andwf	__tdiv_to_l_@f1+2,f,c
 11439  003472  8E20               	bsf	__tdiv_to_l_@f2+1,7,c
 11440  003474  0EFF               	movlw	255
 11441  003476  161F               	andwf	__tdiv_to_l_@f2,f,c
 11442  003478  0EFF               	movlw	255
 11443  00347A  1620               	andwf	__tdiv_to_l_@f2+1,f,c
 11444  00347C  0E00               	movlw	0
 11445  00347E  1621               	andwf	__tdiv_to_l_@f2+2,f,c
 11446  003480  0E00               	movlw	0
 11447  003482  6E25               	movwf	__tdiv_to_l_@quot,c
 11448  003484  0E00               	movlw	0
 11449  003486  6E26               	movwf	__tdiv_to_l_@quot+1,c
 11450  003488  0E00               	movlw	0
 11451  00348A  6E27               	movwf	__tdiv_to_l_@quot+2,c
 11452  00348C  0E00               	movlw	0
 11453  00348E  6E28               	movwf	__tdiv_to_l_@quot+3,c
 11454  003490  0E7F               	movlw	127
 11455  003492  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 11456  003494  5029               	movf	__tdiv_to_l_@cntr,w,c
 11457  003496  0F98               	addlw	152
 11458  003498  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 11459  00349A  0E18               	movlw	24
 11460  00349C  6E29               	movwf	__tdiv_to_l_@cntr,c
 11461  00349E                     l1029:
 11462  00349E  90D8               	bcf	status,0,c
 11463  0034A0  3625               	rlcf	__tdiv_to_l_@quot,f,c
 11464  0034A2  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 11465  0034A4  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 11466  0034A6  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 11467  0034A8  501F               	movf	__tdiv_to_l_@f2,w,c
 11468  0034AA  5C1C               	subwf	__tdiv_to_l_@f1,w,c
 11469  0034AC  5020               	movf	__tdiv_to_l_@f2+1,w,c
 11470  0034AE  581D               	subwfb	__tdiv_to_l_@f1+1,w,c
 11471  0034B0  5021               	movf	__tdiv_to_l_@f2+2,w,c
 11472  0034B2  581E               	subwfb	__tdiv_to_l_@f1+2,w,c
 11473  0034B4  A0D8               	btfss	status,0,c
 11474  0034B6  D007               	goto	l1030
 11475  0034B8  501F               	movf	__tdiv_to_l_@f2,w,c
 11476  0034BA  5E1C               	subwf	__tdiv_to_l_@f1,f,c
 11477  0034BC  5020               	movf	__tdiv_to_l_@f2+1,w,c
 11478  0034BE  5A1D               	subwfb	__tdiv_to_l_@f1+1,f,c
 11479  0034C0  5021               	movf	__tdiv_to_l_@f2+2,w,c
 11480  0034C2  5A1E               	subwfb	__tdiv_to_l_@f1+2,f,c
 11481  0034C4  8025               	bsf	__tdiv_to_l_@quot,0,c
 11482  0034C6                     l1030:
 11483  0034C6  90D8               	bcf	status,0,c
 11484  0034C8  361C               	rlcf	__tdiv_to_l_@f1,f,c
 11485  0034CA  361D               	rlcf	__tdiv_to_l_@f1+1,f,c
 11486  0034CC  361E               	rlcf	__tdiv_to_l_@f1+2,f,c
 11487  0034CE  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 11488  0034D0  D7E6               	goto	l1029
 11489  0034D2  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 11490  0034D4  D016               	goto	l5735
 11491  0034D6  502A               	movf	__tdiv_to_l_@exp1,w,c
 11492  0034D8  0A80               	xorlw	128
 11493  0034DA  0F97               	addlw	151
 11494  0034DC  B0D8               	btfsc	status,0,c
 11495  0034DE  D009               	goto	l5731
 11496  0034E0  0E00               	movlw	0
 11497  0034E2  6E1C               	movwf	?__tdiv_to_l_,c
 11498  0034E4  0E00               	movlw	0
 11499  0034E6  6E1D               	movwf	?__tdiv_to_l_+1,c
 11500  0034E8  0E00               	movlw	0
 11501  0034EA  6E1E               	movwf	?__tdiv_to_l_+2,c
 11502  0034EC  0E00               	movlw	0
 11503  0034EE  6E1F               	movwf	?__tdiv_to_l_+3,c
 11504  0034F0  0012               	return	
 11505  0034F2                     l5731:
 11506  0034F2  90D8               	bcf	status,0,c
 11507  0034F4  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 11508  0034F6  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 11509  0034F8  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 11510  0034FA  3225               	rrcf	__tdiv_to_l_@quot,f,c
 11511  0034FC  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 11512  0034FE  D7F9               	goto	l5731
 11513  003500  D015               	goto	l1036
 11514  003502                     l5735:
 11515  003502  0E17               	movlw	23
 11516  003504  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 11517  003506  D00F               	goto	l5743
 11518  003508  0E00               	movlw	0
 11519  00350A  6E1C               	movwf	?__tdiv_to_l_,c
 11520  00350C  0E00               	movlw	0
 11521  00350E  6E1D               	movwf	?__tdiv_to_l_+1,c
 11522  003510  0E00               	movlw	0
 11523  003512  6E1E               	movwf	?__tdiv_to_l_+2,c
 11524  003514  0E00               	movlw	0
 11525  003516  6E1F               	movwf	?__tdiv_to_l_+3,c
 11526  003518  0012               	return	
 11527  00351A                     l5741:
 11528  00351A  90D8               	bcf	status,0,c
 11529  00351C  3625               	rlcf	__tdiv_to_l_@quot,f,c
 11530  00351E  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 11531  003520  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 11532  003522  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 11533  003524  062A               	decf	__tdiv_to_l_@exp1,f,c
 11534  003526                     l5743:
 11535  003526  502A               	movf	__tdiv_to_l_@exp1,w,c
 11536  003528  A4D8               	btfss	status,2,c
 11537  00352A  D7F7               	goto	l5741
 11538  00352C                     l1036:
 11539  00352C  C025  F01C         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11540  003530  C026  F01D         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11541  003534  C027  F01E         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11542  003538  C028  F01F         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11543  00353C  0012               	return		;funcret
 11544  00353E                     __end_of__tdiv_to_l_:
 11545                           	opt stack 0
 11546                           tosu	equ	0xFFF
 11547                           tosh	equ	0xFFE
 11548                           tosl	equ	0xFFD
 11549                           pclath	equ	0xFFA
 11550                           tblptru	equ	0xFF8
 11551                           tblptrh	equ	0xFF7
 11552                           tblptrl	equ	0xFF6
 11553                           tablat	equ	0xFF5
 11554                           prodh	equ	0xFF4
 11555                           prodl	equ	0xFF3
 11556                           intcon	equ	0xFF2
 11557                           indf0	equ	0xFEF
 11558                           postinc0	equ	0xFEE
 11559                           fsr0h	equ	0xFEA
 11560                           fsr0l	equ	0xFE9
 11561                           wreg	equ	0xFE8
 11562                           indf1	equ	0xFE7
 11563                           postdec1	equ	0xFE5
 11564                           fsr1h	equ	0xFE2
 11565                           fsr1l	equ	0xFE1
 11566                           indf2	equ	0xFDF
 11567                           postinc2	equ	0xFDE
 11568                           postdec2	equ	0xFDD
 11569                           fsr2h	equ	0xFDA
 11570                           fsr2l	equ	0xFD9
 11571                           status	equ	0xFD8
 11572                           
 11573 ;; *************** function __div_to_l_ *****************
 11574 ;; Defined at:
 11575 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;  f1              3   27[COMRAM] unsigned long 
 11578 ;;  f2              3   30[COMRAM] unsigned long 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;  quot            4   33[COMRAM] unsigned long 
 11581 ;;  exp1            1   38[COMRAM] unsigned char 
 11582 ;;  cntr            1   37[COMRAM] unsigned char 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  4   27[COMRAM] unsigned long 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11592 ;;      Params:         6       0       0       0       0       0       0
 11593 ;;      Locals:         6       0       0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0
 11595 ;;      Totals:        12       0       0       0       0       0       0
 11596 ;;Total ram usage:       12 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:    2
 11599 ;; This function calls:
 11600 ;;		Nothing
 11601 ;; This function is called by:
 11602 ;;		__doprnt
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text44
 11607  00353E                     __ptext44:
 11608                           	opt stack 0
 11609  00353E                     __div_to_l_:
 11610                           	opt stack 24
 11611                           
 11612                           ;incstack = 0
 11613  00353E  341E               	rlcf	__div_to_l_@f1+2,w,c
 11614  003540  341F               	rlcf	__div_to_l_@f1+3,w,c
 11615  003542  6E27               	movwf	__div_to_l_@exp1,c
 11616  003544  5027               	movf	__div_to_l_@exp1,w,c
 11617  003546  A4D8               	btfss	status,2,c
 11618  003548  D009               	goto	l5751
 11619  00354A  0E00               	movlw	0
 11620  00354C  6E1C               	movwf	?__div_to_l_,c
 11621  00354E  0E00               	movlw	0
 11622  003550  6E1D               	movwf	?__div_to_l_+1,c
 11623  003552  0E00               	movlw	0
 11624  003554  6E1E               	movwf	?__div_to_l_+2,c
 11625  003556  0E00               	movlw	0
 11626  003558  6E1F               	movwf	?__div_to_l_+3,c
 11627  00355A  0012               	return	
 11628  00355C                     l5751:
 11629  00355C  3421               	rlcf	__div_to_l_@f2+2,w,c
 11630  00355E  3422               	rlcf	__div_to_l_@f2+3,w,c
 11631  003560  6E26               	movwf	__div_to_l_@cntr,c
 11632  003562  5026               	movf	__div_to_l_@cntr,w,c
 11633  003564  A4D8               	btfss	status,2,c
 11634  003566  D009               	goto	l5757
 11635  003568  0E00               	movlw	0
 11636  00356A  6E1C               	movwf	?__div_to_l_,c
 11637  00356C  0E00               	movlw	0
 11638  00356E  6E1D               	movwf	?__div_to_l_+1,c
 11639  003570  0E00               	movlw	0
 11640  003572  6E1E               	movwf	?__div_to_l_+2,c
 11641  003574  0E00               	movlw	0
 11642  003576  6E1F               	movwf	?__div_to_l_+3,c
 11643  003578  0012               	return	
 11644  00357A                     l5757:
 11645  00357A  8E1E               	bsf	__div_to_l_@f1+2,7,c
 11646  00357C  0EFF               	movlw	255
 11647  00357E  161C               	andwf	__div_to_l_@f1,f,c
 11648  003580  0EFF               	movlw	255
 11649  003582  161D               	andwf	__div_to_l_@f1+1,f,c
 11650  003584  0EFF               	movlw	255
 11651  003586  161E               	andwf	__div_to_l_@f1+2,f,c
 11652  003588  0E00               	movlw	0
 11653  00358A  161F               	andwf	__div_to_l_@f1+3,f,c
 11654  00358C  8E21               	bsf	__div_to_l_@f2+2,7,c
 11655  00358E  0EFF               	movlw	255
 11656  003590  161F               	andwf	__div_to_l_@f2,f,c
 11657  003592  0EFF               	movlw	255
 11658  003594  1620               	andwf	__div_to_l_@f2+1,f,c
 11659  003596  0EFF               	movlw	255
 11660  003598  1621               	andwf	__div_to_l_@f2+2,f,c
 11661  00359A  0E00               	movlw	0
 11662  00359C  1622               	andwf	__div_to_l_@f2+3,f,c
 11663  00359E  0E00               	movlw	0
 11664  0035A0  6E22               	movwf	__div_to_l_@quot,c
 11665  0035A2  0E00               	movlw	0
 11666  0035A4  6E23               	movwf	__div_to_l_@quot+1,c
 11667  0035A6  0E00               	movlw	0
 11668  0035A8  6E24               	movwf	__div_to_l_@quot+2,c
 11669  0035AA  0E00               	movlw	0
 11670  0035AC  6E25               	movwf	__div_to_l_@quot+3,c
 11671  0035AE  0E7F               	movlw	127
 11672  0035B0  5E27               	subwf	__div_to_l_@exp1,f,c
 11673  0035B2  5026               	movf	__div_to_l_@cntr,w,c
 11674  0035B4  0FA0               	addlw	160
 11675  0035B6  5E27               	subwf	__div_to_l_@exp1,f,c
 11676  0035B8  0E20               	movlw	32
 11677  0035BA  6E26               	movwf	__div_to_l_@cntr,c
 11678  0035BC                     l5771:
 11679  0035BC  90D8               	bcf	status,0,c
 11680  0035BE  3622               	rlcf	__div_to_l_@quot,f,c
 11681  0035C0  3623               	rlcf	__div_to_l_@quot+1,f,c
 11682  0035C2  3624               	rlcf	__div_to_l_@quot+2,f,c
 11683  0035C4  3625               	rlcf	__div_to_l_@quot+3,f,c
 11684  0035C6  501F               	movf	__div_to_l_@f2,w,c
 11685  0035C8  5C1C               	subwf	__div_to_l_@f1,w,c
 11686  0035CA  5020               	movf	__div_to_l_@f2+1,w,c
 11687  0035CC  581D               	subwfb	__div_to_l_@f1+1,w,c
 11688  0035CE  5021               	movf	__div_to_l_@f2+2,w,c
 11689  0035D0  581E               	subwfb	__div_to_l_@f1+2,w,c
 11690  0035D2  5022               	movf	__div_to_l_@f2+3,w,c
 11691  0035D4  581F               	subwfb	__div_to_l_@f1+3,w,c
 11692  0035D6  A0D8               	btfss	status,0,c
 11693  0035D8  D009               	goto	l5779
 11694  0035DA  501F               	movf	__div_to_l_@f2,w,c
 11695  0035DC  5E1C               	subwf	__div_to_l_@f1,f,c
 11696  0035DE  5020               	movf	__div_to_l_@f2+1,w,c
 11697  0035E0  5A1D               	subwfb	__div_to_l_@f1+1,f,c
 11698  0035E2  5021               	movf	__div_to_l_@f2+2,w,c
 11699  0035E4  5A1E               	subwfb	__div_to_l_@f1+2,f,c
 11700  0035E6  5022               	movf	__div_to_l_@f2+3,w,c
 11701  0035E8  5A1F               	subwfb	__div_to_l_@f1+3,f,c
 11702  0035EA  8022               	bsf	__div_to_l_@quot,0,c
 11703  0035EC                     l5779:
 11704  0035EC  90D8               	bcf	status,0,c
 11705  0035EE  361C               	rlcf	__div_to_l_@f1,f,c
 11706  0035F0  361D               	rlcf	__div_to_l_@f1+1,f,c
 11707  0035F2  361E               	rlcf	__div_to_l_@f1+2,f,c
 11708  0035F4  361F               	rlcf	__div_to_l_@f1+3,f,c
 11709  0035F6  2E26               	decfsz	__div_to_l_@cntr,f,c
 11710  0035F8  D7E1               	goto	l5771
 11711  0035FA  AE27               	btfss	__div_to_l_@exp1,7,c
 11712  0035FC  D016               	goto	l5795
 11713  0035FE  5027               	movf	__div_to_l_@exp1,w,c
 11714  003600  0A80               	xorlw	128
 11715  003602  0F9F               	addlw	159
 11716  003604  B0D8               	btfsc	status,0,c
 11717  003606  D009               	goto	l5791
 11718  003608  0E00               	movlw	0
 11719  00360A  6E1C               	movwf	?__div_to_l_,c
 11720  00360C  0E00               	movlw	0
 11721  00360E  6E1D               	movwf	?__div_to_l_+1,c
 11722  003610  0E00               	movlw	0
 11723  003612  6E1E               	movwf	?__div_to_l_+2,c
 11724  003614  0E00               	movlw	0
 11725  003616  6E1F               	movwf	?__div_to_l_+3,c
 11726  003618  0012               	return	
 11727  00361A                     l5791:
 11728  00361A  90D8               	bcf	status,0,c
 11729  00361C  3225               	rrcf	__div_to_l_@quot+3,f,c
 11730  00361E  3224               	rrcf	__div_to_l_@quot+2,f,c
 11731  003620  3223               	rrcf	__div_to_l_@quot+1,f,c
 11732  003622  3222               	rrcf	__div_to_l_@quot,f,c
 11733  003624  3E27               	incfsz	__div_to_l_@exp1,f,c
 11734  003626  D7F9               	goto	l5791
 11735  003628  D015               	goto	l932
 11736  00362A                     l5795:
 11737  00362A  0E1F               	movlw	31
 11738  00362C  6427               	cpfsgt	__div_to_l_@exp1,c
 11739  00362E  D00F               	goto	l5803
 11740  003630  0E00               	movlw	0
 11741  003632  6E1C               	movwf	?__div_to_l_,c
 11742  003634  0E00               	movlw	0
 11743  003636  6E1D               	movwf	?__div_to_l_+1,c
 11744  003638  0E00               	movlw	0
 11745  00363A  6E1E               	movwf	?__div_to_l_+2,c
 11746  00363C  0E00               	movlw	0
 11747  00363E  6E1F               	movwf	?__div_to_l_+3,c
 11748  003640  0012               	return	
 11749  003642                     l5801:
 11750  003642  90D8               	bcf	status,0,c
 11751  003644  3622               	rlcf	__div_to_l_@quot,f,c
 11752  003646  3623               	rlcf	__div_to_l_@quot+1,f,c
 11753  003648  3624               	rlcf	__div_to_l_@quot+2,f,c
 11754  00364A  3625               	rlcf	__div_to_l_@quot+3,f,c
 11755  00364C  0627               	decf	__div_to_l_@exp1,f,c
 11756  00364E                     l5803:
 11757  00364E  5027               	movf	__div_to_l_@exp1,w,c
 11758  003650  A4D8               	btfss	status,2,c
 11759  003652  D7F7               	goto	l5801
 11760  003654                     l932:
 11761  003654  C022  F01C         	movff	__div_to_l_@quot,?__div_to_l_
 11762  003658  C023  F01D         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11763  00365C  C024  F01E         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11764  003660  C025  F01F         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11765  003664  0012               	return		;funcret
 11766  003666                     __end_of__div_to_l_:
 11767                           	opt stack 0
 11768                           tosu	equ	0xFFF
 11769                           tosh	equ	0xFFE
 11770                           tosl	equ	0xFFD
 11771                           pclath	equ	0xFFA
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           indf0	equ	0xFEF
 11780                           postinc0	equ	0xFEE
 11781                           fsr0h	equ	0xFEA
 11782                           fsr0l	equ	0xFE9
 11783                           wreg	equ	0xFE8
 11784                           indf1	equ	0xFE7
 11785                           postdec1	equ	0xFE5
 11786                           fsr1h	equ	0xFE2
 11787                           fsr1l	equ	0xFE1
 11788                           indf2	equ	0xFDF
 11789                           postinc2	equ	0xFDE
 11790                           postdec2	equ	0xFDD
 11791                           fsr2h	equ	0xFDA
 11792                           fsr2l	equ	0xFD9
 11793                           status	equ	0xFD8
 11794                           
 11795 ;; *************** function ___lltoft *****************
 11796 ;; Defined at:
 11797 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  c               4   17[BANK0 ] unsigned long 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  exp             1   39[COMRAM] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  3   17[BANK0 ] float 
 11804 ;; Registers used:
 11805 ;;		wreg, status,2, status,0, cstack
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11811 ;;      Params:         0       4       0       0       0       0       0
 11812 ;;      Locals:         1       0       0       0       0       0       0
 11813 ;;      Temps:          4       0       0       0       0       0       0
 11814 ;;      Totals:         5       4       0       0       0       0       0
 11815 ;;Total ram usage:        9 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:    3
 11818 ;; This function calls:
 11819 ;;		___ftpack
 11820 ;; This function is called by:
 11821 ;;		__doprnt
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	text45
 11826  004212                     __ptext45:
 11827                           	opt stack 0
 11828  004212                     ___lltoft:
 11829                           	opt stack 23
 11830                           
 11831                           ;incstack = 0
 11832  004212  0E8E               	movlw	142
 11833  004214  6E28               	movwf	___lltoft@exp,c
 11834  004216  D007               	goto	l5923
 11835  004218                     l5921:
 11836  004218  0100               	movlb	0	; () banked
 11837  00421A  90D8               	bcf	status,0,c
 11838  00421C  3374               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11839  00421E  3373               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11840  004220  3372               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11841  004222  3371               	rrcf	___lltoft@c& (0+255),f,b
 11842  004224  2A28               	incf	___lltoft@exp,f,c
 11843  004226                     l5923:
 11844  004226  0E00               	movlw	0
 11845  004228  0100               	movlb	0	; () banked
 11846  00422A  1571               	andwf	___lltoft@c& (0+255),w,b
 11847  00422C  6E24               	movwf	??___lltoft& (0+255),c
 11848  00422E  0E00               	movlw	0
 11849  004230  0100               	movlb	0	; () banked
 11850  004232  1572               	andwf	(___lltoft@c+1)& (0+255),w,b
 11851  004234  6E25               	movwf	(??___lltoft+1)& (0+255),c
 11852  004236  0E00               	movlw	0
 11853  004238  0100               	movlb	0	; () banked
 11854  00423A  1573               	andwf	(___lltoft@c+2)& (0+255),w,b
 11855  00423C  6E26               	movwf	(??___lltoft+2)& (0+255),c
 11856  00423E  0EFF               	movlw	255
 11857  004240  0100               	movlb	0	; () banked
 11858  004242  1574               	andwf	(___lltoft@c+3)& (0+255),w,b
 11859  004244  6E27               	movwf	(??___lltoft+3)& (0+255),c
 11860  004246  5024               	movf	??___lltoft,w,c
 11861  004248  1025               	iorwf	??___lltoft+1,w,c
 11862  00424A  1026               	iorwf	??___lltoft+2,w,c
 11863  00424C  1027               	iorwf	??___lltoft+3,w,c
 11864  00424E  A4D8               	btfss	status,2,c
 11865  004250  D7E3               	goto	l5921
 11866                           
 11867                           ; BSR set to: 0
 11868                           
 11869                           ; BSR set to: 0
 11870  004252  C071  F01C         	movff	___lltoft@c,___ftpack@arg
 11871  004256  C072  F01D         	movff	___lltoft@c+1,___ftpack@arg+1
 11872  00425A  C073  F01E         	movff	___lltoft@c+2,___ftpack@arg+2
 11873  00425E  C028  F01F         	movff	___lltoft@exp,___ftpack@exp
 11874  004262  0E00               	movlw	0
 11875  004264  6E20               	movwf	___ftpack@sign,c
 11876  004266  ECF0  F01D         	call	___ftpack	;wreg free
 11877  00426A  C01C  F071         	movff	?___ftpack,?___lltoft
 11878  00426E  C01D  F072         	movff	?___ftpack+1,?___lltoft+1
 11879  004272  C01E  F073         	movff	?___ftpack+2,?___lltoft+2
 11880  004276  0012               	return	
 11881  004278                     __end_of___lltoft:
 11882                           	opt stack 0
 11883                           tosu	equ	0xFFF
 11884                           tosh	equ	0xFFE
 11885                           tosl	equ	0xFFD
 11886                           pclath	equ	0xFFA
 11887                           tblptru	equ	0xFF8
 11888                           tblptrh	equ	0xFF7
 11889                           tblptrl	equ	0xFF6
 11890                           tablat	equ	0xFF5
 11891                           prodh	equ	0xFF4
 11892                           prodl	equ	0xFF3
 11893                           intcon	equ	0xFF2
 11894                           indf0	equ	0xFEF
 11895                           postinc0	equ	0xFEE
 11896                           fsr0h	equ	0xFEA
 11897                           fsr0l	equ	0xFE9
 11898                           wreg	equ	0xFE8
 11899                           indf1	equ	0xFE7
 11900                           postdec1	equ	0xFE5
 11901                           fsr1h	equ	0xFE2
 11902                           fsr1l	equ	0xFE1
 11903                           indf2	equ	0xFDF
 11904                           postinc2	equ	0xFDE
 11905                           postdec2	equ	0xFDD
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8
 11909                           
 11910 ;; *************** function ___llmod *****************
 11911 ;; Defined at:
 11912 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  dividend        4   25[BANK0 ] unsigned long 
 11915 ;;  divisor         4   29[BANK0 ] unsigned long 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  counter         1   32[COMRAM] unsigned char 
 11918 ;; Return value:  Size  Location     Type
 11919 ;;                  4   25[BANK0 ] unsigned long 
 11920 ;; Registers used:
 11921 ;;		wreg, status,2, status,0
 11922 ;; Tracked objects:
 11923 ;;		On entry : 0/0
 11924 ;;		On exit  : 0/0
 11925 ;;		Unchanged: 0/0
 11926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11927 ;;      Params:         0       8       0       0       0       0       0
 11928 ;;      Locals:         1       0       0       0       0       0       0
 11929 ;;      Temps:          0       0       0       0       0       0       0
 11930 ;;      Totals:         1       8       0       0       0       0       0
 11931 ;;Total ram usage:        9 bytes
 11932 ;; Hardware stack levels used:    1
 11933 ;; Hardware stack levels required when called:    2
 11934 ;; This function calls:
 11935 ;;		Nothing
 11936 ;; This function is called by:
 11937 ;;		__doprnt
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           	psect	text46
 11942  003E70                     __ptext46:
 11943                           	opt stack 0
 11944  003E70                     ___llmod:
 11945                           	opt stack 24
 11946                           
 11947                           ;incstack = 0
 11948  003E70  0100               	movlb	0	; () banked
 11949  003E72  517D               	movf	___llmod@divisor& (0+255),w,b
 11950  003E74  0100               	movlb	0	; () banked
 11951  003E76  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11952  003E78  0100               	movlb	0	; () banked
 11953  003E7A  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11954  003E7C  0100               	movlb	0	; () banked
 11955  003E7E  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11956  003E80  B4D8               	btfsc	status,2,c
 11957  003E82  D037               	goto	l1121
 11958                           
 11959                           ; BSR set to: 0
 11960  003E84  0E01               	movlw	1
 11961  003E86  6E21               	movwf	___llmod@counter,c
 11962  003E88  D007               	goto	l5909
 11963  003E8A                     l5907:
 11964                           
 11965                           ; BSR set to: 0
 11966  003E8A  0100               	movlb	0	; () banked
 11967  003E8C  90D8               	bcf	status,0,c
 11968  003E8E  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11969  003E90  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11970  003E92  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11971  003E94  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11972  003E96  2A21               	incf	___llmod@counter,f,c
 11973  003E98                     l5909:
 11974                           
 11975                           ; BSR set to: 0
 11976  003E98  0100               	movlb	0	; () banked
 11977  003E9A  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11978  003E9C  D7F6               	goto	l5907
 11979  003E9E                     l5911:
 11980                           
 11981                           ; BSR set to: 0
 11982  003E9E  0100               	movlb	0	; () banked
 11983  003EA0  517D               	movf	___llmod@divisor& (0+255),w,b
 11984  003EA2  0100               	movlb	0	; () banked
 11985  003EA4  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11986  003EA6  0100               	movlb	0	; () banked
 11987  003EA8  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11988  003EAA  0100               	movlb	0	; () banked
 11989  003EAC  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11990  003EAE  0100               	movlb	0	; () banked
 11991  003EB0  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11992  003EB2  0100               	movlb	0	; () banked
 11993  003EB4  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11994  003EB6  0100               	movlb	0	; () banked
 11995  003EB8  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11996  003EBA  0100               	movlb	0	; () banked
 11997  003EBC  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11998  003EBE  A0D8               	btfss	status,0,c
 11999  003EC0  D010               	goto	l5915
 12000                           
 12001                           ; BSR set to: 0
 12002  003EC2  0100               	movlb	0	; () banked
 12003  003EC4  517D               	movf	___llmod@divisor& (0+255),w,b
 12004  003EC6  0100               	movlb	0	; () banked
 12005  003EC8  5F79               	subwf	___llmod@dividend& (0+255),f,b
 12006  003ECA  0100               	movlb	0	; () banked
 12007  003ECC  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 12008  003ECE  0100               	movlb	0	; () banked
 12009  003ED0  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12010  003ED2  0100               	movlb	0	; () banked
 12011  003ED4  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 12012  003ED6  0100               	movlb	0	; () banked
 12013  003ED8  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12014  003EDA  0100               	movlb	0	; () banked
 12015  003EDC  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 12016  003EDE  0100               	movlb	0	; () banked
 12017  003EE0  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12018  003EE2                     l5915:
 12019                           
 12020                           ; BSR set to: 0
 12021  003EE2  0100               	movlb	0	; () banked
 12022  003EE4  90D8               	bcf	status,0,c
 12023  003EE6  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12024  003EE8  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12025  003EEA  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12026  003EEC  337D               	rrcf	___llmod@divisor& (0+255),f,b
 12027                           
 12028                           ; BSR set to: 0
 12029  003EEE  2E21               	decfsz	___llmod@counter,f,c
 12030  003EF0  D7D6               	goto	l5911
 12031  003EF2                     l1121:
 12032                           
 12033                           ; BSR set to: 0
 12034  003EF2  C079  F079         	movff	___llmod@dividend,?___llmod
 12035  003EF6  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 12036  003EFA  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 12037  003EFE  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 12038                           
 12039                           ; BSR set to: 0
 12040  003F02  0012               	return		;funcret
 12041  003F04                     __end_of___llmod:
 12042                           	opt stack 0
 12043                           tosu	equ	0xFFF
 12044                           tosh	equ	0xFFE
 12045                           tosl	equ	0xFFD
 12046                           pclath	equ	0xFFA
 12047                           tblptru	equ	0xFF8
 12048                           tblptrh	equ	0xFF7
 12049                           tblptrl	equ	0xFF6
 12050                           tablat	equ	0xFF5
 12051                           prodh	equ	0xFF4
 12052                           prodl	equ	0xFF3
 12053                           intcon	equ	0xFF2
 12054                           indf0	equ	0xFEF
 12055                           postinc0	equ	0xFEE
 12056                           fsr0h	equ	0xFEA
 12057                           fsr0l	equ	0xFE9
 12058                           wreg	equ	0xFE8
 12059                           indf1	equ	0xFE7
 12060                           postdec1	equ	0xFE5
 12061                           fsr1h	equ	0xFE2
 12062                           fsr1l	equ	0xFE1
 12063                           indf2	equ	0xFDF
 12064                           postinc2	equ	0xFDE
 12065                           postdec2	equ	0xFDD
 12066                           fsr2h	equ	0xFDA
 12067                           fsr2l	equ	0xFD9
 12068                           status	equ	0xFD8
 12069                           
 12070 ;; *************** function ___lldiv *****************
 12071 ;; Defined at:
 12072 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;  dividend        4   17[BANK0 ] unsigned long 
 12075 ;;  divisor         4   21[BANK0 ] unsigned long 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  quotient        4   27[COMRAM] unsigned long 
 12078 ;;  counter         1   31[COMRAM] unsigned char 
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  4   17[BANK0 ] unsigned long 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2, status,0
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12088 ;;      Params:         0       8       0       0       0       0       0
 12089 ;;      Locals:         5       0       0       0       0       0       0
 12090 ;;      Temps:          0       0       0       0       0       0       0
 12091 ;;      Totals:         5       8       0       0       0       0       0
 12092 ;;Total ram usage:       13 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:    2
 12095 ;; This function calls:
 12096 ;;		Nothing
 12097 ;; This function is called by:
 12098 ;;		__doprnt
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text47
 12103  003B30                     __ptext47:
 12104                           	opt stack 0
 12105  003B30                     ___lldiv:
 12106                           	opt stack 24
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;incstack = 0
 12110  003B30  0E00               	movlw	0
 12111  003B32  6E1C               	movwf	___lldiv@quotient,c
 12112  003B34  0E00               	movlw	0
 12113  003B36  6E1D               	movwf	___lldiv@quotient+1,c
 12114  003B38  0E00               	movlw	0
 12115  003B3A  6E1E               	movwf	___lldiv@quotient+2,c
 12116  003B3C  0E00               	movlw	0
 12117  003B3E  6E1F               	movwf	___lldiv@quotient+3,c
 12118  003B40  0100               	movlb	0	; () banked
 12119  003B42  5175               	movf	___lldiv@divisor& (0+255),w,b
 12120  003B44  0100               	movlb	0	; () banked
 12121  003B46  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12122  003B48  0100               	movlb	0	; () banked
 12123  003B4A  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12124  003B4C  0100               	movlb	0	; () banked
 12125  003B4E  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12126  003B50  B4D8               	btfsc	status,2,c
 12127  003B52  D03D               	goto	l1111
 12128                           
 12129                           ; BSR set to: 0
 12130  003B54  0E01               	movlw	1
 12131  003B56  6E20               	movwf	___lldiv@counter,c
 12132  003B58  D007               	goto	l5889
 12133  003B5A                     l5887:
 12134                           
 12135                           ; BSR set to: 0
 12136  003B5A  0100               	movlb	0	; () banked
 12137  003B5C  90D8               	bcf	status,0,c
 12138  003B5E  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 12139  003B60  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12140  003B62  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12141  003B64  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12142  003B66  2A20               	incf	___lldiv@counter,f,c
 12143  003B68                     l5889:
 12144                           
 12145                           ; BSR set to: 0
 12146  003B68  0100               	movlb	0	; () banked
 12147  003B6A  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12148  003B6C  D7F6               	goto	l5887
 12149  003B6E                     l5891:
 12150                           
 12151                           ; BSR set to: 0
 12152  003B6E  90D8               	bcf	status,0,c
 12153  003B70  361C               	rlcf	___lldiv@quotient,f,c
 12154  003B72  361D               	rlcf	___lldiv@quotient+1,f,c
 12155  003B74  361E               	rlcf	___lldiv@quotient+2,f,c
 12156  003B76  361F               	rlcf	___lldiv@quotient+3,f,c
 12157                           
 12158                           ; BSR set to: 0
 12159  003B78  0100               	movlb	0	; () banked
 12160  003B7A  5175               	movf	___lldiv@divisor& (0+255),w,b
 12161  003B7C  0100               	movlb	0	; () banked
 12162  003B7E  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 12163  003B80  0100               	movlb	0	; () banked
 12164  003B82  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12165  003B84  0100               	movlb	0	; () banked
 12166  003B86  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12167  003B88  0100               	movlb	0	; () banked
 12168  003B8A  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12169  003B8C  0100               	movlb	0	; () banked
 12170  003B8E  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12171  003B90  0100               	movlb	0	; () banked
 12172  003B92  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12173  003B94  0100               	movlb	0	; () banked
 12174  003B96  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12175  003B98  A0D8               	btfss	status,0,c
 12176  003B9A  D011               	goto	l5899
 12177                           
 12178                           ; BSR set to: 0
 12179  003B9C  0100               	movlb	0	; () banked
 12180  003B9E  5175               	movf	___lldiv@divisor& (0+255),w,b
 12181  003BA0  0100               	movlb	0	; () banked
 12182  003BA2  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 12183  003BA4  0100               	movlb	0	; () banked
 12184  003BA6  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12185  003BA8  0100               	movlb	0	; () banked
 12186  003BAA  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12187  003BAC  0100               	movlb	0	; () banked
 12188  003BAE  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12189  003BB0  0100               	movlb	0	; () banked
 12190  003BB2  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12191  003BB4  0100               	movlb	0	; () banked
 12192  003BB6  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12193  003BB8  0100               	movlb	0	; () banked
 12194  003BBA  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12195                           
 12196                           ; BSR set to: 0
 12197  003BBC  801C               	bsf	___lldiv@quotient,0,c
 12198  003BBE                     l5899:
 12199                           
 12200                           ; BSR set to: 0
 12201  003BBE  0100               	movlb	0	; () banked
 12202  003BC0  90D8               	bcf	status,0,c
 12203  003BC2  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12204  003BC4  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12205  003BC6  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12206  003BC8  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 12207                           
 12208                           ; BSR set to: 0
 12209  003BCA  2E20               	decfsz	___lldiv@counter,f,c
 12210  003BCC  D7D0               	goto	l5891
 12211  003BCE                     l1111:
 12212                           
 12213                           ; BSR set to: 0
 12214  003BCE  C01C  F071         	movff	___lldiv@quotient,?___lldiv
 12215  003BD2  C01D  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 12216  003BD6  C01E  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 12217  003BDA  C01F  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 12218                           
 12219                           ; BSR set to: 0
 12220  003BDE  0012               	return		;funcret
 12221  003BE0                     __end_of___lldiv:
 12222                           	opt stack 0
 12223                           tosu	equ	0xFFF
 12224                           tosh	equ	0xFFE
 12225                           tosl	equ	0xFFD
 12226                           pclath	equ	0xFFA
 12227                           tblptru	equ	0xFF8
 12228                           tblptrh	equ	0xFF7
 12229                           tblptrl	equ	0xFF6
 12230                           tablat	equ	0xFF5
 12231                           prodh	equ	0xFF4
 12232                           prodl	equ	0xFF3
 12233                           intcon	equ	0xFF2
 12234                           indf0	equ	0xFEF
 12235                           postinc0	equ	0xFEE
 12236                           fsr0h	equ	0xFEA
 12237                           fsr0l	equ	0xFE9
 12238                           wreg	equ	0xFE8
 12239                           indf1	equ	0xFE7
 12240                           postdec1	equ	0xFE5
 12241                           fsr1h	equ	0xFE2
 12242                           fsr1l	equ	0xFE1
 12243                           indf2	equ	0xFDF
 12244                           postinc2	equ	0xFDE
 12245                           postdec2	equ	0xFDD
 12246                           fsr2h	equ	0xFDA
 12247                           fsr2l	equ	0xFD9
 12248                           status	equ	0xFD8
 12249                           
 12250 ;; *************** function ___fttol *****************
 12251 ;; Defined at:
 12252 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  f1              3   44[BANK0 ] float 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  lval            4   54[BANK0 ] unsigned long 
 12257 ;;  exp1            1   58[BANK0 ] unsigned char 
 12258 ;;  sign1           1   53[BANK0 ] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  4   44[BANK0 ] long 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12268 ;;      Params:         0       4       0       0       0       0       0
 12269 ;;      Locals:         0       6       0       0       0       0       0
 12270 ;;      Temps:          0       5       0       0       0       0       0
 12271 ;;      Totals:         0      15       0       0       0       0       0
 12272 ;;Total ram usage:       15 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    2
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_util_getSolarCurrent
 12279 ;;		_util_getBatteryCurrent
 12280 ;;		__doprnt
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text48
 12285  003188                     __ptext48:
 12286                           	opt stack 0
 12287  003188                     ___fttol:
 12288                           	opt stack 26
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;incstack = 0
 12292  003188  C08E  F090         	movff	___fttol@f1+2,??___fttol
 12293  00318C  0100               	movlb	0	; () banked
 12294  00318E  6B91               	clrf	(??___fttol+1)& (0+255),b
 12295  003190  6B92               	clrf	(??___fttol+2)& (0+255),b
 12296  003192  0100               	movlb	0	; () banked
 12297  003194  358D               	rlcf	(___fttol@f1+1)& (0+255),w,b
 12298  003196  0100               	movlb	0	; () banked
 12299  003198  3790               	rlcf	??___fttol& (0+255),f,b
 12300  00319A  E301               	bnc	u6571
 12301  00319C  8191               	bsf	(??___fttol+1)& (0+255),0,b
 12302  00319E                     u6571:
 12303  00319E  0100               	movlb	0	; () banked
 12304  0031A0  5190               	movf	??___fttol& (0+255),w,b
 12305  0031A2  0100               	movlb	0	; () banked
 12306  0031A4  6F9A               	movwf	___fttol@exp1& (0+255),b
 12307  0031A6  0100               	movlb	0	; () banked
 12308  0031A8  519A               	movf	___fttol@exp1& (0+255),w,b
 12309  0031AA  A4D8               	btfss	status,2,c
 12310  0031AC  D00A               	goto	l5841
 12311                           
 12312                           ; BSR set to: 0
 12313  0031AE  0E00               	movlw	0
 12314  0031B0  0100               	movlb	0	; () banked
 12315  0031B2  6F8C               	movwf	?___fttol& (0+255),b
 12316  0031B4  0E00               	movlw	0
 12317  0031B6  6F8D               	movwf	(?___fttol+1)& (0+255),b
 12318  0031B8  0E00               	movlw	0
 12319  0031BA  6F8E               	movwf	(?___fttol+2)& (0+255),b
 12320  0031BC  0E00               	movlw	0
 12321  0031BE  6F8F               	movwf	(?___fttol+3)& (0+255),b
 12322                           
 12323                           ; BSR set to: 0
 12324  0031C0  0012               	return	
 12325  0031C2                     l5841:
 12326                           
 12327                           ; BSR set to: 0
 12328  0031C2  0E17               	movlw	23
 12329  0031C4  0100               	movlb	0	; () banked
 12330  0031C6  6F90               	movwf	??___fttol& (0+255),b
 12331  0031C8  C08C  F091         	movff	___fttol@f1,??___fttol+1
 12332  0031CC  C08D  F092         	movff	___fttol@f1+1,??___fttol+2
 12333  0031D0  C08E  F093         	movff	___fttol@f1+2,??___fttol+3
 12334  0031D4  0100               	movlb	0	; () banked
 12335  0031D6  2990               	incf	??___fttol& (0+255),w,b
 12336  0031D8  0100               	movlb	0	; () banked
 12337  0031DA  6F94               	movwf	(??___fttol+4)& (0+255),b
 12338  0031DC  D005               	goto	u6590
 12339  0031DE                     u6595:
 12340  0031DE  0100               	movlb	0	; () banked
 12341  0031E0  90D8               	bcf	status,0,c
 12342  0031E2  3393               	rrcf	(??___fttol+3)& (0+255),f,b
 12343  0031E4  3392               	rrcf	(??___fttol+2)& (0+255),f,b
 12344  0031E6  3391               	rrcf	(??___fttol+1)& (0+255),f,b
 12345  0031E8                     u6590:
 12346  0031E8  0100               	movlb	0	; () banked
 12347  0031EA  2F94               	decfsz	(??___fttol+4)& (0+255),f,b
 12348  0031EC  D7F8               	goto	u6595
 12349  0031EE  0100               	movlb	0	; () banked
 12350  0031F0  5191               	movf	(??___fttol+1)& (0+255),w,b
 12351  0031F2  0100               	movlb	0	; () banked
 12352  0031F4  6F95               	movwf	___fttol@sign1& (0+255),b
 12353                           
 12354                           ; BSR set to: 0
 12355  0031F6  0100               	movlb	0	; () banked
 12356  0031F8  8F8D               	bsf	(___fttol@f1+1)& (0+255),7,b
 12357                           
 12358                           ; BSR set to: 0
 12359  0031FA  0EFF               	movlw	255
 12360  0031FC  0100               	movlb	0	; () banked
 12361  0031FE  178C               	andwf	___fttol@f1& (0+255),f,b
 12362  003200  0EFF               	movlw	255
 12363  003202  0100               	movlb	0	; () banked
 12364  003204  178D               	andwf	(___fttol@f1+1)& (0+255),f,b
 12365  003206  0E00               	movlw	0
 12366  003208  0100               	movlb	0	; () banked
 12367  00320A  178E               	andwf	(___fttol@f1+2)& (0+255),f,b
 12368                           
 12369                           ; BSR set to: 0
 12370  00320C  0100               	movlb	0	; () banked
 12371  00320E  518C               	movf	___fttol@f1& (0+255),w,b
 12372  003210  0100               	movlb	0	; () banked
 12373  003212  6F96               	movwf	___fttol@lval& (0+255),b
 12374  003214  0100               	movlb	0	; () banked
 12375  003216  518D               	movf	(___fttol@f1+1)& (0+255),w,b
 12376  003218  0100               	movlb	0	; () banked
 12377  00321A  6F97               	movwf	(___fttol@lval+1)& (0+255),b
 12378  00321C  0100               	movlb	0	; () banked
 12379  00321E  518E               	movf	(___fttol@f1+2)& (0+255),w,b
 12380  003220  0100               	movlb	0	; () banked
 12381  003222  6F98               	movwf	(___fttol@lval+2)& (0+255),b
 12382  003224  0100               	movlb	0	; () banked
 12383  003226  6B99               	clrf	(___fttol@lval+3)& (0+255),b
 12384                           
 12385                           ; BSR set to: 0
 12386  003228  0E8E               	movlw	142
 12387  00322A  0100               	movlb	0	; () banked
 12388  00322C  5F9A               	subwf	___fttol@exp1& (0+255),f,b
 12389                           
 12390                           ; BSR set to: 0
 12391  00322E  0100               	movlb	0	; () banked
 12392  003230  AF9A               	btfss	___fttol@exp1& (0+255),7,b
 12393  003232  D01A               	goto	l5863
 12394                           
 12395                           ; BSR set to: 0
 12396  003234  0100               	movlb	0	; () banked
 12397  003236  519A               	movf	___fttol@exp1& (0+255),w,b
 12398  003238  0A80               	xorlw	128
 12399  00323A  0F8F               	addlw	143
 12400  00323C  B0D8               	btfsc	status,0,c
 12401  00323E  D00A               	goto	l5859
 12402                           
 12403                           ; BSR set to: 0
 12404  003240  0E00               	movlw	0
 12405  003242  0100               	movlb	0	; () banked
 12406  003244  6F8C               	movwf	?___fttol& (0+255),b
 12407  003246  0E00               	movlw	0
 12408  003248  6F8D               	movwf	(?___fttol+1)& (0+255),b
 12409  00324A  0E00               	movlw	0
 12410  00324C  6F8E               	movwf	(?___fttol+2)& (0+255),b
 12411  00324E  0E00               	movlw	0
 12412  003250  6F8F               	movwf	(?___fttol+3)& (0+255),b
 12413                           
 12414                           ; BSR set to: 0
 12415  003252  0012               	return	
 12416  003254                     l5859:
 12417                           
 12418                           ; BSR set to: 0
 12419  003254  0100               	movlb	0	; () banked
 12420  003256  90D8               	bcf	status,0,c
 12421  003258  3399               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12422  00325A  3398               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12423  00325C  3397               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12424  00325E  3396               	rrcf	___fttol@lval& (0+255),f,b
 12425                           
 12426                           ; BSR set to: 0
 12427  003260  0100               	movlb	0	; () banked
 12428  003262  3F9A               	incfsz	___fttol@exp1& (0+255),f,b
 12429  003264  D7F7               	goto	l5859
 12430                           
 12431                           ; BSR set to: 0
 12432  003266  D01B               	goto	l5873
 12433  003268                     l5863:
 12434                           
 12435                           ; BSR set to: 0
 12436  003268  0E17               	movlw	23
 12437  00326A  0100               	movlb	0	; () banked
 12438  00326C  659A               	cpfsgt	___fttol@exp1& (0+255),b
 12439  00326E  D012               	goto	l5871
 12440                           
 12441                           ; BSR set to: 0
 12442  003270  0E00               	movlw	0
 12443  003272  0100               	movlb	0	; () banked
 12444  003274  6F8C               	movwf	?___fttol& (0+255),b
 12445  003276  0E00               	movlw	0
 12446  003278  6F8D               	movwf	(?___fttol+1)& (0+255),b
 12447  00327A  0E00               	movlw	0
 12448  00327C  6F8E               	movwf	(?___fttol+2)& (0+255),b
 12449  00327E  0E00               	movlw	0
 12450  003280  6F8F               	movwf	(?___fttol+3)& (0+255),b
 12451                           
 12452                           ; BSR set to: 0
 12453  003282  0012               	return	
 12454  003284                     l5869:
 12455                           
 12456                           ; BSR set to: 0
 12457  003284  0100               	movlb	0	; () banked
 12458  003286  90D8               	bcf	status,0,c
 12459  003288  3796               	rlcf	___fttol@lval& (0+255),f,b
 12460  00328A  3797               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12461  00328C  3798               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12462  00328E  3799               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12463  003290  0100               	movlb	0	; () banked
 12464  003292  079A               	decf	___fttol@exp1& (0+255),f,b
 12465  003294                     l5871:
 12466                           
 12467                           ; BSR set to: 0
 12468  003294  0100               	movlb	0	; () banked
 12469  003296  519A               	movf	___fttol@exp1& (0+255),w,b
 12470  003298  0100               	movlb	0	; () banked
 12471  00329A  A4D8               	btfss	status,2,c
 12472  00329C  D7F3               	goto	l5869
 12473  00329E                     l5873:
 12474                           
 12475                           ; BSR set to: 0
 12476  00329E  0100               	movlb	0	; () banked
 12477  0032A0  5195               	movf	___fttol@sign1& (0+255),w,b
 12478  0032A2  0100               	movlb	0	; () banked
 12479  0032A4  B4D8               	btfsc	status,2,c
 12480  0032A6  D009               	goto	l5877
 12481                           
 12482                           ; BSR set to: 0
 12483  0032A8  0100               	movlb	0	; () banked
 12484  0032AA  1F99               	comf	(___fttol@lval+3)& (0+255),f,b
 12485  0032AC  1F98               	comf	(___fttol@lval+2)& (0+255),f,b
 12486  0032AE  1F97               	comf	(___fttol@lval+1)& (0+255),f,b
 12487  0032B0  6D96               	negf	___fttol@lval& (0+255),b
 12488  0032B2  0E00               	movlw	0
 12489  0032B4  2397               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12490  0032B6  2398               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12491  0032B8  2399               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12492  0032BA                     l5877:
 12493                           
 12494                           ; BSR set to: 0
 12495  0032BA  C096  F08C         	movff	___fttol@lval,?___fttol
 12496  0032BE  C097  F08D         	movff	___fttol@lval+1,?___fttol+1
 12497  0032C2  C098  F08E         	movff	___fttol@lval+2,?___fttol+2
 12498  0032C6  C099  F08F         	movff	___fttol@lval+3,?___fttol+3
 12499  0032CA  0012               	return	
 12500  0032CC                     __end_of___fttol:
 12501                           	opt stack 0
 12502                           tosu	equ	0xFFF
 12503                           tosh	equ	0xFFE
 12504                           tosl	equ	0xFFD
 12505                           pclath	equ	0xFFA
 12506                           tblptru	equ	0xFF8
 12507                           tblptrh	equ	0xFF7
 12508                           tblptrl	equ	0xFF6
 12509                           tablat	equ	0xFF5
 12510                           prodh	equ	0xFF4
 12511                           prodl	equ	0xFF3
 12512                           intcon	equ	0xFF2
 12513                           indf0	equ	0xFEF
 12514                           postinc0	equ	0xFEE
 12515                           fsr0h	equ	0xFEA
 12516                           fsr0l	equ	0xFE9
 12517                           wreg	equ	0xFE8
 12518                           indf1	equ	0xFE7
 12519                           postdec1	equ	0xFE5
 12520                           fsr1h	equ	0xFE2
 12521                           fsr1l	equ	0xFE1
 12522                           indf2	equ	0xFDF
 12523                           postinc2	equ	0xFDE
 12524                           postdec2	equ	0xFDD
 12525                           fsr2h	equ	0xFDA
 12526                           fsr2l	equ	0xFD9
 12527                           status	equ	0xFD8
 12528                           
 12529 ;; *************** function ___ftsub *****************
 12530 ;; Defined at:
 12531 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;  f1              3   59[BANK0 ] float 
 12534 ;;  f2              3   62[BANK0 ] float 
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  3   59[BANK0 ] float 
 12539 ;; Registers used:
 12540 ;;		wreg, status,2, status,0, cstack
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12546 ;;      Params:         0       6       0       0       0       0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0
 12549 ;;      Totals:         0       6       0       0       0       0       0
 12550 ;;Total ram usage:        6 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:    4
 12553 ;; This function calls:
 12554 ;;		___ftadd
 12555 ;; This function is called by:
 12556 ;;		__doprnt
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           	psect	text49
 12561  00442A                     __ptext49:
 12562                           	opt stack 0
 12563  00442A                     ___ftsub:
 12564                           	opt stack 22
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;incstack = 0
 12568  00442A  0100               	movlb	0	; () banked
 12569  00442C  519E               	movf	___ftsub@f2& (0+255),w,b
 12570  00442E  0100               	movlb	0	; () banked
 12571  004430  119F               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 12572  004432  0100               	movlb	0	; () banked
 12573  004434  11A0               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 12574  004436  B4D8               	btfsc	status,2,c
 12575  004438  D009               	goto	l5809
 12576                           
 12577                           ; BSR set to: 0
 12578  00443A  0E00               	movlw	0
 12579  00443C  0100               	movlb	0	; () banked
 12580  00443E  1B9E               	xorwf	___ftsub@f2& (0+255),f,b
 12581  004440  0E00               	movlw	0
 12582  004442  0100               	movlb	0	; () banked
 12583  004444  1B9F               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 12584  004446  0E80               	movlw	128
 12585  004448  0100               	movlb	0	; () banked
 12586  00444A  1BA0               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 12587  00444C                     l5809:
 12588                           
 12589                           ; BSR set to: 0
 12590  00444C  C09B  F08F         	movff	___ftsub@f1,___ftadd@f1
 12591  004450  C09C  F090         	movff	___ftsub@f1+1,___ftadd@f1+1
 12592  004454  C09D  F091         	movff	___ftsub@f1+2,___ftadd@f1+2
 12593  004458  C09E  F092         	movff	___ftsub@f2,___ftadd@f2
 12594  00445C  C09F  F093         	movff	___ftsub@f2+1,___ftadd@f2+1
 12595  004460  C0A0  F094         	movff	___ftsub@f2+2,___ftadd@f2+2
 12596  004464  EC96  F014         	call	___ftadd	;wreg free
 12597  004468  C08F  F09B         	movff	?___ftadd,?___ftsub
 12598  00446C  C090  F09C         	movff	?___ftadd+1,?___ftsub+1
 12599  004470  C091  F09D         	movff	?___ftadd+2,?___ftsub+2
 12600  004474  0012               	return	
 12601  004476                     __end_of___ftsub:
 12602                           	opt stack 0
 12603                           tosu	equ	0xFFF
 12604                           tosh	equ	0xFFE
 12605                           tosl	equ	0xFFD
 12606                           pclath	equ	0xFFA
 12607                           tblptru	equ	0xFF8
 12608                           tblptrh	equ	0xFF7
 12609                           tblptrl	equ	0xFF6
 12610                           tablat	equ	0xFF5
 12611                           prodh	equ	0xFF4
 12612                           prodl	equ	0xFF3
 12613                           intcon	equ	0xFF2
 12614                           indf0	equ	0xFEF
 12615                           postinc0	equ	0xFEE
 12616                           fsr0h	equ	0xFEA
 12617                           fsr0l	equ	0xFE9
 12618                           wreg	equ	0xFE8
 12619                           indf1	equ	0xFE7
 12620                           postdec1	equ	0xFE5
 12621                           fsr1h	equ	0xFE2
 12622                           fsr1l	equ	0xFE1
 12623                           indf2	equ	0xFDF
 12624                           postinc2	equ	0xFDE
 12625                           postdec2	equ	0xFDD
 12626                           fsr2h	equ	0xFDA
 12627                           fsr2l	equ	0xFD9
 12628                           status	equ	0xFD8
 12629                           
 12630 ;; *************** function ___ftadd *****************
 12631 ;; Defined at:
 12632 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  f1              3   47[BANK0 ] float 
 12635 ;;  f2              3   50[BANK0 ] float 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  exp1            1   58[BANK0 ] unsigned char 
 12638 ;;  exp2            1   57[BANK0 ] unsigned char 
 12639 ;;  sign            1   56[BANK0 ] unsigned char 
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  3   47[BANK0 ] float 
 12642 ;; Registers used:
 12643 ;;		wreg, status,2, status,0, cstack
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12649 ;;      Params:         0       6       0       0       0       0       0
 12650 ;;      Locals:         0       3       0       0       0       0       0
 12651 ;;      Temps:          0       3       0       0       0       0       0
 12652 ;;      Totals:         0      12       0       0       0       0       0
 12653 ;;Total ram usage:       12 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    3
 12656 ;; This function calls:
 12657 ;;		___ftpack
 12658 ;; This function is called by:
 12659 ;;		_util_getTemperature
 12660 ;;		__doprnt
 12661 ;;		___ftsub
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           
 12665                           	psect	text50
 12666  00292C                     __ptext50:
 12667                           	opt stack 0
 12668  00292C                     ___ftadd:
 12669                           	opt stack 25
 12670                           
 12671                           ;incstack = 0
 12672  00292C  C091  F095         	movff	___ftadd@f1+2,??___ftadd
 12673  002930  0100               	movlb	0	; () banked
 12674  002932  6B96               	clrf	(??___ftadd+1)& (0+255),b
 12675  002934  6B97               	clrf	(??___ftadd+2)& (0+255),b
 12676  002936  0100               	movlb	0	; () banked
 12677  002938  3590               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 12678  00293A  0100               	movlb	0	; () banked
 12679  00293C  3795               	rlcf	??___ftadd& (0+255),f,b
 12680  00293E  E301               	bnc	u5861
 12681  002940  8196               	bsf	(??___ftadd+1)& (0+255),0,b
 12682  002942                     u5861:
 12683  002942  0100               	movlb	0	; () banked
 12684  002944  5195               	movf	??___ftadd& (0+255),w,b
 12685  002946  0100               	movlb	0	; () banked
 12686  002948  6F9A               	movwf	___ftadd@exp1& (0+255),b
 12687  00294A  C094  F095         	movff	___ftadd@f2+2,??___ftadd
 12688  00294E  0100               	movlb	0	; () banked
 12689  002950  6B96               	clrf	(??___ftadd+1)& (0+255),b
 12690  002952  6B97               	clrf	(??___ftadd+2)& (0+255),b
 12691  002954  0100               	movlb	0	; () banked
 12692  002956  3593               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 12693  002958  0100               	movlb	0	; () banked
 12694  00295A  3795               	rlcf	??___ftadd& (0+255),f,b
 12695  00295C  E301               	bnc	u5871
 12696  00295E  8196               	bsf	(??___ftadd+1)& (0+255),0,b
 12697  002960                     u5871:
 12698  002960  0100               	movlb	0	; () banked
 12699  002962  5195               	movf	??___ftadd& (0+255),w,b
 12700  002964  0100               	movlb	0	; () banked
 12701  002966  6F99               	movwf	___ftadd@exp2& (0+255),b
 12702                           
 12703                           ; BSR set to: 0
 12704  002968  0100               	movlb	0	; () banked
 12705  00296A  519A               	movf	___ftadd@exp1& (0+255),w,b
 12706  00296C  0100               	movlb	0	; () banked
 12707  00296E  B4D8               	btfsc	status,2,c
 12708  002970  D011               	goto	l987
 12709                           
 12710                           ; BSR set to: 0
 12711  002972  0100               	movlb	0	; () banked
 12712  002974  5199               	movf	___ftadd@exp2& (0+255),w,b
 12713  002976  0100               	movlb	0	; () banked
 12714  002978  5D9A               	subwf	___ftadd@exp1& (0+255),w,b
 12715  00297A  B0D8               	btfsc	status,0,c
 12716  00297C  D012               	goto	l5395
 12717                           
 12718                           ; BSR set to: 0
 12719  00297E  0100               	movlb	0	; () banked
 12720  002980  519A               	movf	___ftadd@exp1& (0+255),w,b
 12721  002982  0800               	sublw	0
 12722  002984  0100               	movlb	0	; () banked
 12723  002986  2599               	addwf	___ftadd@exp2& (0+255),w,b
 12724  002988  0100               	movlb	0	; () banked
 12725  00298A  6F95               	movwf	??___ftadd& (0+255),b
 12726  00298C  0E18               	movlw	24
 12727  00298E  0100               	movlb	0	; () banked
 12728  002990  6595               	cpfsgt	??___ftadd& (0+255),b
 12729  002992  D007               	goto	l5395
 12730  002994                     l987:
 12731                           
 12732                           ; BSR set to: 0
 12733  002994  C092  F08F         	movff	___ftadd@f2,?___ftadd
 12734  002998  C093  F090         	movff	___ftadd@f2+1,?___ftadd+1
 12735  00299C  C094  F091         	movff	___ftadd@f2+2,?___ftadd+2
 12736  0029A0  0012               	return	
 12737  0029A2                     l5395:
 12738                           
 12739                           ; BSR set to: 0
 12740  0029A2  0100               	movlb	0	; () banked
 12741  0029A4  5199               	movf	___ftadd@exp2& (0+255),w,b
 12742  0029A6  0100               	movlb	0	; () banked
 12743  0029A8  B4D8               	btfsc	status,2,c
 12744  0029AA  D011               	goto	l991
 12745                           
 12746                           ; BSR set to: 0
 12747  0029AC  0100               	movlb	0	; () banked
 12748  0029AE  519A               	movf	___ftadd@exp1& (0+255),w,b
 12749  0029B0  0100               	movlb	0	; () banked
 12750  0029B2  5D99               	subwf	___ftadd@exp2& (0+255),w,b
 12751  0029B4  B0D8               	btfsc	status,0,c
 12752  0029B6  D012               	goto	l5401
 12753                           
 12754                           ; BSR set to: 0
 12755  0029B8  0100               	movlb	0	; () banked
 12756  0029BA  5199               	movf	___ftadd@exp2& (0+255),w,b
 12757  0029BC  0800               	sublw	0
 12758  0029BE  0100               	movlb	0	; () banked
 12759  0029C0  259A               	addwf	___ftadd@exp1& (0+255),w,b
 12760  0029C2  0100               	movlb	0	; () banked
 12761  0029C4  6F95               	movwf	??___ftadd& (0+255),b
 12762  0029C6  0E18               	movlw	24
 12763  0029C8  0100               	movlb	0	; () banked
 12764  0029CA  6595               	cpfsgt	??___ftadd& (0+255),b
 12765  0029CC  D007               	goto	l5401
 12766  0029CE                     l991:
 12767                           
 12768                           ; BSR set to: 0
 12769  0029CE  C08F  F08F         	movff	___ftadd@f1,?___ftadd
 12770  0029D2  C090  F090         	movff	___ftadd@f1+1,?___ftadd+1
 12771  0029D6  C091  F091         	movff	___ftadd@f1+2,?___ftadd+2
 12772  0029DA  0012               	return	
 12773  0029DC                     l5401:
 12774                           
 12775                           ; BSR set to: 0
 12776  0029DC  0E06               	movlw	6
 12777  0029DE  0100               	movlb	0	; () banked
 12778  0029E0  6F98               	movwf	___ftadd@sign& (0+255),b
 12779                           
 12780                           ; BSR set to: 0
 12781  0029E2  0100               	movlb	0	; () banked
 12782  0029E4  AF91               	btfss	(___ftadd@f1+2)& (0+255),7,b
 12783  0029E6  D002               	goto	l5407
 12784                           
 12785                           ; BSR set to: 0
 12786  0029E8  0100               	movlb	0	; () banked
 12787  0029EA  8F98               	bsf	___ftadd@sign& (0+255),7,b
 12788  0029EC                     l5407:
 12789                           
 12790                           ; BSR set to: 0
 12791  0029EC  0100               	movlb	0	; () banked
 12792  0029EE  AF94               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12793  0029F0  D002               	goto	l993
 12794                           
 12795                           ; BSR set to: 0
 12796  0029F2  0100               	movlb	0	; () banked
 12797  0029F4  8D98               	bsf	___ftadd@sign& (0+255),6,b
 12798  0029F6                     l993:
 12799                           
 12800                           ; BSR set to: 0
 12801  0029F6  0100               	movlb	0	; () banked
 12802  0029F8  8F90               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12803                           
 12804                           ; BSR set to: 0
 12805  0029FA  0EFF               	movlw	255
 12806  0029FC  0100               	movlb	0	; () banked
 12807  0029FE  178F               	andwf	___ftadd@f1& (0+255),f,b
 12808  002A00  0EFF               	movlw	255
 12809  002A02  0100               	movlb	0	; () banked
 12810  002A04  1790               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12811  002A06  0E00               	movlw	0
 12812  002A08  0100               	movlb	0	; () banked
 12813  002A0A  1791               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12814  002A0C  0100               	movlb	0	; () banked
 12815  002A0E  8F93               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12816                           
 12817                           ; BSR set to: 0
 12818  002A10  0EFF               	movlw	255
 12819  002A12  0100               	movlb	0	; () banked
 12820  002A14  1792               	andwf	___ftadd@f2& (0+255),f,b
 12821  002A16  0EFF               	movlw	255
 12822  002A18  0100               	movlb	0	; () banked
 12823  002A1A  1793               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12824  002A1C  0E00               	movlw	0
 12825  002A1E  0100               	movlb	0	; () banked
 12826  002A20  1794               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12827                           
 12828                           ; BSR set to: 0
 12829  002A22  0100               	movlb	0	; () banked
 12830  002A24  5199               	movf	___ftadd@exp2& (0+255),w,b
 12831  002A26  0100               	movlb	0	; () banked
 12832  002A28  5D9A               	subwf	___ftadd@exp1& (0+255),w,b
 12833  002A2A  B0D8               	btfsc	status,0,c
 12834  002A2C  D025               	goto	l5427
 12835  002A2E                     l5417:
 12836                           
 12837                           ; BSR set to: 0
 12838  002A2E  0100               	movlb	0	; () banked
 12839  002A30  90D8               	bcf	status,0,c
 12840  002A32  3792               	rlcf	___ftadd@f2& (0+255),f,b
 12841  002A34  3793               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12842  002A36  3794               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12843  002A38  0100               	movlb	0	; () banked
 12844  002A3A  0799               	decf	___ftadd@exp2& (0+255),f,b
 12845                           
 12846                           ; BSR set to: 0
 12847  002A3C  0100               	movlb	0	; () banked
 12848  002A3E  519A               	movf	___ftadd@exp1& (0+255),w,b
 12849  002A40  0100               	movlb	0	; () banked
 12850  002A42  1999               	xorwf	___ftadd@exp2& (0+255),w,b
 12851  002A44  B4D8               	btfsc	status,2,c
 12852  002A46  D011               	goto	l5425
 12853                           
 12854                           ; BSR set to: 0
 12855  002A48  0100               	movlb	0	; () banked
 12856  002A4A  0798               	decf	___ftadd@sign& (0+255),f,b
 12857  002A4C  C098  F095         	movff	___ftadd@sign,??___ftadd
 12858  002A50  0E07               	movlw	7
 12859  002A52  0100               	movlb	0	; () banked
 12860  002A54  1795               	andwf	??___ftadd& (0+255),f,b
 12861  002A56  B4D8               	btfsc	status,2,c
 12862  002A58  D008               	goto	l5425
 12863  002A5A  D7E9               	goto	l5417
 12864  002A5C                     l5423:
 12865                           
 12866                           ; BSR set to: 0
 12867  002A5C  0100               	movlb	0	; () banked
 12868  002A5E  90D8               	bcf	status,0,c
 12869  002A60  3391               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12870  002A62  3390               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12871  002A64  338F               	rrcf	___ftadd@f1& (0+255),f,b
 12872  002A66  0100               	movlb	0	; () banked
 12873  002A68  2B9A               	incf	___ftadd@exp1& (0+255),f,b
 12874  002A6A                     l5425:
 12875                           
 12876                           ; BSR set to: 0
 12877  002A6A  0100               	movlb	0	; () banked
 12878  002A6C  5199               	movf	___ftadd@exp2& (0+255),w,b
 12879  002A6E  0100               	movlb	0	; () banked
 12880  002A70  199A               	xorwf	___ftadd@exp1& (0+255),w,b
 12881  002A72  B4D8               	btfsc	status,2,c
 12882  002A74  D02B               	goto	l1002
 12883  002A76  D7F2               	goto	l5423
 12884  002A78                     l5427:
 12885                           
 12886                           ; BSR set to: 0
 12887  002A78  0100               	movlb	0	; () banked
 12888  002A7A  519A               	movf	___ftadd@exp1& (0+255),w,b
 12889  002A7C  0100               	movlb	0	; () banked
 12890  002A7E  5D99               	subwf	___ftadd@exp2& (0+255),w,b
 12891  002A80  B0D8               	btfsc	status,0,c
 12892  002A82  D024               	goto	l1002
 12893  002A84                     l5429:
 12894                           
 12895                           ; BSR set to: 0
 12896  002A84  0100               	movlb	0	; () banked
 12897  002A86  90D8               	bcf	status,0,c
 12898  002A88  378F               	rlcf	___ftadd@f1& (0+255),f,b
 12899  002A8A  3790               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12900  002A8C  3791               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12901  002A8E  0100               	movlb	0	; () banked
 12902  002A90  079A               	decf	___ftadd@exp1& (0+255),f,b
 12903                           
 12904                           ; BSR set to: 0
 12905  002A92  0100               	movlb	0	; () banked
 12906  002A94  519A               	movf	___ftadd@exp1& (0+255),w,b
 12907  002A96  0100               	movlb	0	; () banked
 12908  002A98  1999               	xorwf	___ftadd@exp2& (0+255),w,b
 12909  002A9A  B4D8               	btfsc	status,2,c
 12910  002A9C  D011               	goto	l5437
 12911                           
 12912                           ; BSR set to: 0
 12913  002A9E  0100               	movlb	0	; () banked
 12914  002AA0  0798               	decf	___ftadd@sign& (0+255),f,b
 12915  002AA2  C098  F095         	movff	___ftadd@sign,??___ftadd
 12916  002AA6  0E07               	movlw	7
 12917  002AA8  0100               	movlb	0	; () banked
 12918  002AAA  1795               	andwf	??___ftadd& (0+255),f,b
 12919  002AAC  B4D8               	btfsc	status,2,c
 12920  002AAE  D008               	goto	l5437
 12921  002AB0  D7E9               	goto	l5429
 12922  002AB2                     l5435:
 12923                           
 12924                           ; BSR set to: 0
 12925  002AB2  0100               	movlb	0	; () banked
 12926  002AB4  90D8               	bcf	status,0,c
 12927  002AB6  3394               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12928  002AB8  3393               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12929  002ABA  3392               	rrcf	___ftadd@f2& (0+255),f,b
 12930  002ABC  0100               	movlb	0	; () banked
 12931  002ABE  2B99               	incf	___ftadd@exp2& (0+255),f,b
 12932  002AC0                     l5437:
 12933                           
 12934                           ; BSR set to: 0
 12935  002AC0  0100               	movlb	0	; () banked
 12936  002AC2  5199               	movf	___ftadd@exp2& (0+255),w,b
 12937  002AC4  0100               	movlb	0	; () banked
 12938  002AC6  199A               	xorwf	___ftadd@exp1& (0+255),w,b
 12939  002AC8  A4D8               	btfss	status,2,c
 12940  002ACA  D7F3               	goto	l5435
 12941  002ACC                     l1002:
 12942                           
 12943                           ; BSR set to: 0
 12944  002ACC  0100               	movlb	0	; () banked
 12945  002ACE  AF98               	btfss	___ftadd@sign& (0+255),7,b
 12946  002AD0  D012               	goto	l1011
 12947                           
 12948                           ; BSR set to: 0
 12949  002AD2  0EFF               	movlw	255
 12950  002AD4  0100               	movlb	0	; () banked
 12951  002AD6  1B8F               	xorwf	___ftadd@f1& (0+255),f,b
 12952  002AD8  0EFF               	movlw	255
 12953  002ADA  0100               	movlb	0	; () banked
 12954  002ADC  1B90               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12955  002ADE  0EFF               	movlw	255
 12956  002AE0  0100               	movlb	0	; () banked
 12957  002AE2  1B91               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12958  002AE4  0E01               	movlw	1
 12959  002AE6  0100               	movlb	0	; () banked
 12960  002AE8  278F               	addwf	___ftadd@f1& (0+255),f,b
 12961  002AEA  0E00               	movlw	0
 12962  002AEC  0100               	movlb	0	; () banked
 12963  002AEE  2390               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12964  002AF0  0E00               	movlw	0
 12965  002AF2  0100               	movlb	0	; () banked
 12966  002AF4  2391               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12967  002AF6                     l1011:
 12968                           
 12969                           ; BSR set to: 0
 12970  002AF6  0100               	movlb	0	; () banked
 12971  002AF8  AD98               	btfss	___ftadd@sign& (0+255),6,b
 12972  002AFA  D012               	goto	l5443
 12973                           
 12974                           ; BSR set to: 0
 12975  002AFC  0EFF               	movlw	255
 12976  002AFE  0100               	movlb	0	; () banked
 12977  002B00  1B92               	xorwf	___ftadd@f2& (0+255),f,b
 12978  002B02  0EFF               	movlw	255
 12979  002B04  0100               	movlb	0	; () banked
 12980  002B06  1B93               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12981  002B08  0EFF               	movlw	255
 12982  002B0A  0100               	movlb	0	; () banked
 12983  002B0C  1B94               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12984  002B0E  0E01               	movlw	1
 12985  002B10  0100               	movlb	0	; () banked
 12986  002B12  2792               	addwf	___ftadd@f2& (0+255),f,b
 12987  002B14  0E00               	movlw	0
 12988  002B16  0100               	movlb	0	; () banked
 12989  002B18  2393               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12990  002B1A  0E00               	movlw	0
 12991  002B1C  0100               	movlb	0	; () banked
 12992  002B1E  2394               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12993  002B20                     l5443:
 12994                           
 12995                           ; BSR set to: 0
 12996  002B20  0E00               	movlw	0
 12997  002B22  0100               	movlb	0	; () banked
 12998  002B24  6F98               	movwf	___ftadd@sign& (0+255),b
 12999                           
 13000                           ; BSR set to: 0
 13001  002B26  0100               	movlb	0	; () banked
 13002  002B28  518F               	movf	___ftadd@f1& (0+255),w,b
 13003  002B2A  0100               	movlb	0	; () banked
 13004  002B2C  2792               	addwf	___ftadd@f2& (0+255),f,b
 13005  002B2E  0100               	movlb	0	; () banked
 13006  002B30  5190               	movf	(___ftadd@f1+1)& (0+255),w,b
 13007  002B32  0100               	movlb	0	; () banked
 13008  002B34  2393               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13009  002B36  0100               	movlb	0	; () banked
 13010  002B38  5191               	movf	(___ftadd@f1+2)& (0+255),w,b
 13011  002B3A  0100               	movlb	0	; () banked
 13012  002B3C  2394               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13013                           
 13014                           ; BSR set to: 0
 13015  002B3E  0100               	movlb	0	; () banked
 13016  002B40  AF94               	btfss	(___ftadd@f2+2)& (0+255),7,b
 13017  002B42  D015               	goto	l5453
 13018                           
 13019                           ; BSR set to: 0
 13020  002B44  0EFF               	movlw	255
 13021  002B46  0100               	movlb	0	; () banked
 13022  002B48  1B92               	xorwf	___ftadd@f2& (0+255),f,b
 13023  002B4A  0EFF               	movlw	255
 13024  002B4C  0100               	movlb	0	; () banked
 13025  002B4E  1B93               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13026  002B50  0EFF               	movlw	255
 13027  002B52  0100               	movlb	0	; () banked
 13028  002B54  1B94               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13029  002B56  0E01               	movlw	1
 13030  002B58  0100               	movlb	0	; () banked
 13031  002B5A  2792               	addwf	___ftadd@f2& (0+255),f,b
 13032  002B5C  0E00               	movlw	0
 13033  002B5E  0100               	movlb	0	; () banked
 13034  002B60  2393               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13035  002B62  0E00               	movlw	0
 13036  002B64  0100               	movlb	0	; () banked
 13037  002B66  2394               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13038                           
 13039                           ; BSR set to: 0
 13040  002B68  0E01               	movlw	1
 13041  002B6A  0100               	movlb	0	; () banked
 13042  002B6C  6F98               	movwf	___ftadd@sign& (0+255),b
 13043  002B6E                     l5453:
 13044                           
 13045                           ; BSR set to: 0
 13046  002B6E  C092  F01C         	movff	___ftadd@f2,___ftpack@arg
 13047  002B72  C093  F01D         	movff	___ftadd@f2+1,___ftpack@arg+1
 13048  002B76  C094  F01E         	movff	___ftadd@f2+2,___ftpack@arg+2
 13049  002B7A  C09A  F01F         	movff	___ftadd@exp1,___ftpack@exp
 13050  002B7E  C098  F020         	movff	___ftadd@sign,___ftpack@sign
 13051  002B82  ECF0  F01D         	call	___ftpack	;wreg free
 13052  002B86  C01C  F08F         	movff	?___ftpack,?___ftadd
 13053  002B8A  C01D  F090         	movff	?___ftpack+1,?___ftadd+1
 13054  002B8E  C01E  F091         	movff	?___ftpack+2,?___ftadd+2
 13055  002B92  0012               	return	
 13056  002B94                     __end_of___ftadd:
 13057                           	opt stack 0
 13058                           tosu	equ	0xFFF
 13059                           tosh	equ	0xFFE
 13060                           tosl	equ	0xFFD
 13061                           pclath	equ	0xFFA
 13062                           tblptru	equ	0xFF8
 13063                           tblptrh	equ	0xFF7
 13064                           tblptrl	equ	0xFF6
 13065                           tablat	equ	0xFF5
 13066                           prodh	equ	0xFF4
 13067                           prodl	equ	0xFF3
 13068                           intcon	equ	0xFF2
 13069                           indf0	equ	0xFEF
 13070                           postinc0	equ	0xFEE
 13071                           fsr0h	equ	0xFEA
 13072                           fsr0l	equ	0xFE9
 13073                           wreg	equ	0xFE8
 13074                           indf1	equ	0xFE7
 13075                           postdec1	equ	0xFE5
 13076                           fsr1h	equ	0xFE2
 13077                           fsr1l	equ	0xFE1
 13078                           indf2	equ	0xFDF
 13079                           postinc2	equ	0xFDE
 13080                           postdec2	equ	0xFDD
 13081                           fsr2h	equ	0xFDA
 13082                           fsr2l	equ	0xFD9
 13083                           status	equ	0xFD8
 13084                           
 13085 ;; *************** function ___ftpack *****************
 13086 ;; Defined at:
 13087 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  arg             3   27[COMRAM] unsigned um
 13090 ;;  exp             1   30[COMRAM] unsigned char 
 13091 ;;  sign            1   31[COMRAM] unsigned char 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;		None
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  3   27[COMRAM] float 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13103 ;;      Params:         5       0       0       0       0       0       0
 13104 ;;      Locals:         0       0       0       0       0       0       0
 13105 ;;      Temps:          3       0       0       0       0       0       0
 13106 ;;      Totals:         8       0       0       0       0       0       0
 13107 ;;Total ram usage:        8 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    2
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		___awtoft
 13114 ;;		___ftadd
 13115 ;;		___ftdiv
 13116 ;;		___ftmul
 13117 ;;		___lltoft
 13118 ;;		___lwtoft
 13119 ;; This function uses a non-reentrant model
 13120 ;;
 13121                           
 13122                           	psect	text51
 13123  003BE0                     __ptext51:
 13124                           	opt stack 0
 13125  003BE0                     ___ftpack:
 13126                           	opt stack 25
 13127                           
 13128                           ;incstack = 0
 13129  003BE0  501F               	movf	___ftpack@exp,w,c
 13130  003BE2  B4D8               	btfsc	status,2,c
 13131  003BE4  D005               	goto	l5339
 13132  003BE6  501C               	movf	___ftpack@arg,w,c
 13133  003BE8  101D               	iorwf	___ftpack@arg+1,w,c
 13134  003BEA  101E               	iorwf	___ftpack@arg+2,w,c
 13135  003BEC  A4D8               	btfss	status,2,c
 13136  003BEE  D00C               	goto	l5345
 13137  003BF0                     l5339:
 13138  003BF0  0E00               	movlw	0
 13139  003BF2  6E1C               	movwf	?___ftpack,c
 13140  003BF4  0E00               	movlw	0
 13141  003BF6  6E1D               	movwf	?___ftpack+1,c
 13142  003BF8  0E00               	movlw	0
 13143  003BFA  6E1E               	movwf	?___ftpack+2,c
 13144  003BFC  0012               	return	
 13145  003BFE                     l5343:
 13146  003BFE  2A1F               	incf	___ftpack@exp,f,c
 13147  003C00  90D8               	bcf	status,0,c
 13148  003C02  321E               	rrcf	___ftpack@arg+2,f,c
 13149  003C04  321D               	rrcf	___ftpack@arg+1,f,c
 13150  003C06  321C               	rrcf	___ftpack@arg,f,c
 13151  003C08                     l5345:
 13152  003C08  0E00               	movlw	0
 13153  003C0A  141C               	andwf	___ftpack@arg,w,c
 13154  003C0C  6E21               	movwf	??___ftpack& (0+255),c
 13155  003C0E  0E00               	movlw	0
 13156  003C10  141D               	andwf	___ftpack@arg+1,w,c
 13157  003C12  6E22               	movwf	(??___ftpack+1)& (0+255),c
 13158  003C14  0EFE               	movlw	254
 13159  003C16  141E               	andwf	___ftpack@arg+2,w,c
 13160  003C18  6E23               	movwf	(??___ftpack+2)& (0+255),c
 13161  003C1A  5021               	movf	??___ftpack,w,c
 13162  003C1C  1022               	iorwf	??___ftpack+1,w,c
 13163  003C1E  1023               	iorwf	??___ftpack+2,w,c
 13164  003C20  B4D8               	btfsc	status,2,c
 13165  003C22  D00C               	goto	l5351
 13166  003C24  D7EC               	goto	l5343
 13167  003C26                     l5347:
 13168  003C26  2A1F               	incf	___ftpack@exp,f,c
 13169  003C28  0E01               	movlw	1
 13170  003C2A  261C               	addwf	___ftpack@arg,f,c
 13171  003C2C  0E00               	movlw	0
 13172  003C2E  221D               	addwfc	___ftpack@arg+1,f,c
 13173  003C30  0E00               	movlw	0
 13174  003C32  221E               	addwfc	___ftpack@arg+2,f,c
 13175  003C34  90D8               	bcf	status,0,c
 13176  003C36  321E               	rrcf	___ftpack@arg+2,f,c
 13177  003C38  321D               	rrcf	___ftpack@arg+1,f,c
 13178  003C3A  321C               	rrcf	___ftpack@arg,f,c
 13179  003C3C                     l5351:
 13180  003C3C  0E00               	movlw	0
 13181  003C3E  141C               	andwf	___ftpack@arg,w,c
 13182  003C40  6E21               	movwf	??___ftpack& (0+255),c
 13183  003C42  0E00               	movlw	0
 13184  003C44  141D               	andwf	___ftpack@arg+1,w,c
 13185  003C46  6E22               	movwf	(??___ftpack+1)& (0+255),c
 13186  003C48  0EFF               	movlw	255
 13187  003C4A  141E               	andwf	___ftpack@arg+2,w,c
 13188  003C4C  6E23               	movwf	(??___ftpack+2)& (0+255),c
 13189  003C4E  5021               	movf	??___ftpack,w,c
 13190  003C50  1022               	iorwf	??___ftpack+1,w,c
 13191  003C52  1023               	iorwf	??___ftpack+2,w,c
 13192  003C54  B4D8               	btfsc	status,2,c
 13193  003C56  D006               	goto	l5355
 13194  003C58  D7E6               	goto	l5347
 13195  003C5A                     l5353:
 13196  003C5A  061F               	decf	___ftpack@exp,f,c
 13197  003C5C  90D8               	bcf	status,0,c
 13198  003C5E  361C               	rlcf	___ftpack@arg,f,c
 13199  003C60  361D               	rlcf	___ftpack@arg+1,f,c
 13200  003C62  361E               	rlcf	___ftpack@arg+2,f,c
 13201  003C64                     l5355:
 13202  003C64  BE1D               	btfsc	___ftpack@arg+1,7,c
 13203  003C66  D003               	goto	l964
 13204  003C68  0E02               	movlw	2
 13205  003C6A  601F               	cpfslt	___ftpack@exp,c
 13206  003C6C  D7F6               	goto	l5353
 13207  003C6E                     l964:
 13208  003C6E  A01F               	btfss	___ftpack@exp,0,c
 13209  003C70  9E1D               	bcf	___ftpack@arg+1,7,c
 13210  003C72  90D8               	bcf	status,0,c
 13211  003C74  321F               	rrcf	___ftpack@exp,f,c
 13212  003C76  501F               	movf	___ftpack@exp,w,c
 13213  003C78  121E               	iorwf	___ftpack@arg+2,f,c
 13214  003C7A  5020               	movf	___ftpack@sign,w,c
 13215  003C7C  A4D8               	btfss	status,2,c
 13216  003C7E  8E1E               	bsf	___ftpack@arg+2,7,c
 13217  003C80  C01C  F01C         	movff	___ftpack@arg,?___ftpack
 13218  003C84  C01D  F01D         	movff	___ftpack@arg+1,?___ftpack+1
 13219  003C88  C01E  F01E         	movff	___ftpack@arg+2,?___ftpack+2
 13220  003C8C  0012               	return	
 13221  003C8E                     __end_of___ftpack:
 13222                           	opt stack 0
 13223                           tosu	equ	0xFFF
 13224                           tosh	equ	0xFFE
 13225                           tosl	equ	0xFFD
 13226                           pclath	equ	0xFFA
 13227                           tblptru	equ	0xFF8
 13228                           tblptrh	equ	0xFF7
 13229                           tblptrl	equ	0xFF6
 13230                           tablat	equ	0xFF5
 13231                           prodh	equ	0xFF4
 13232                           prodl	equ	0xFF3
 13233                           intcon	equ	0xFF2
 13234                           indf0	equ	0xFEF
 13235                           postinc0	equ	0xFEE
 13236                           fsr0h	equ	0xFEA
 13237                           fsr0l	equ	0xFE9
 13238                           wreg	equ	0xFE8
 13239                           indf1	equ	0xFE7
 13240                           postdec1	equ	0xFE5
 13241                           fsr1h	equ	0xFE2
 13242                           fsr1l	equ	0xFE1
 13243                           indf2	equ	0xFDF
 13244                           postinc2	equ	0xFDE
 13245                           postdec2	equ	0xFDD
 13246                           fsr2h	equ	0xFDA
 13247                           fsr2l	equ	0xFD9
 13248                           status	equ	0xFD8
 13249                           
 13250 ;; *************** function ___ftneg *****************
 13251 ;; Defined at:
 13252 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  f1              3   27[COMRAM] float 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  3   27[COMRAM] float 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13266 ;;      Params:         3       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0
 13269 ;;      Totals:         3       0       0       0       0       0       0
 13270 ;;Total ram usage:        3 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    2
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		__doprnt
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text52
 13281  004772                     __ptext52:
 13282                           	opt stack 0
 13283  004772                     ___ftneg:
 13284                           	opt stack 24
 13285                           
 13286                           ;incstack = 0
 13287  004772  501C               	movf	___ftneg@f1,w,c
 13288  004774  101D               	iorwf	___ftneg@f1+1,w,c
 13289  004776  101E               	iorwf	___ftneg@f1+2,w,c
 13290  004778  B4D8               	btfsc	status,2,c
 13291  00477A  D006               	goto	l1061
 13292  00477C  0E00               	movlw	0
 13293  00477E  1A1C               	xorwf	___ftneg@f1,f,c
 13294  004780  0E00               	movlw	0
 13295  004782  1A1D               	xorwf	___ftneg@f1+1,f,c
 13296  004784  0E80               	movlw	128
 13297  004786  1A1E               	xorwf	___ftneg@f1+2,f,c
 13298  004788                     l1061:
 13299  004788  C01C  F01C         	movff	___ftneg@f1,?___ftneg
 13300  00478C  C01D  F01D         	movff	___ftneg@f1+1,?___ftneg+1
 13301  004790  C01E  F01E         	movff	___ftneg@f1+2,?___ftneg+2
 13302  004794  0012               	return		;funcret
 13303  004796                     __end_of___ftneg:
 13304                           	opt stack 0
 13305                           tosu	equ	0xFFF
 13306                           tosh	equ	0xFFE
 13307                           tosl	equ	0xFFD
 13308                           pclath	equ	0xFFA
 13309                           tblptru	equ	0xFF8
 13310                           tblptrh	equ	0xFF7
 13311                           tblptrl	equ	0xFF6
 13312                           tablat	equ	0xFF5
 13313                           prodh	equ	0xFF4
 13314                           prodl	equ	0xFF3
 13315                           intcon	equ	0xFF2
 13316                           indf0	equ	0xFEF
 13317                           postinc0	equ	0xFEE
 13318                           fsr0h	equ	0xFEA
 13319                           fsr0l	equ	0xFE9
 13320                           wreg	equ	0xFE8
 13321                           indf1	equ	0xFE7
 13322                           postdec1	equ	0xFE5
 13323                           fsr1h	equ	0xFE2
 13324                           fsr1l	equ	0xFE1
 13325                           indf2	equ	0xFDF
 13326                           postinc2	equ	0xFDE
 13327                           postdec2	equ	0xFDD
 13328                           fsr2h	equ	0xFDA
 13329                           fsr2l	equ	0xFD9
 13330                           status	equ	0xFD8
 13331                           
 13332 ;; *************** function ___ftge *****************
 13333 ;; Defined at:
 13334 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  ff1             3   27[COMRAM] float 
 13337 ;;  ff2             3   30[COMRAM] float 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;		None
 13340 ;; Return value:  Size  Location     Type
 13341 ;;		None               void
 13342 ;; Registers used:
 13343 ;;		wreg, status,2, status,0
 13344 ;; Tracked objects:
 13345 ;;		On entry : 0/0
 13346 ;;		On exit  : 0/0
 13347 ;;		Unchanged: 0/0
 13348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13349 ;;      Params:         6       0       0       0       0       0       0
 13350 ;;      Locals:         0       0       0       0       0       0       0
 13351 ;;      Temps:          3       0       0       0       0       0       0
 13352 ;;      Totals:         9       0       0       0       0       0       0
 13353 ;;Total ram usage:        9 bytes
 13354 ;; Hardware stack levels used:    1
 13355 ;; Hardware stack levels required when called:    2
 13356 ;; This function calls:
 13357 ;;		Nothing
 13358 ;; This function is called by:
 13359 ;;		__doprnt
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           	psect	text53
 13364  003F96                     __ptext53:
 13365                           	opt stack 0
 13366  003F96                     ___ftge:
 13367                           	opt stack 24
 13368                           
 13369                           ;incstack = 0
 13370  003F96  AE1E               	btfss	___ftge@ff1+2,7,c
 13371  003F98  D016               	goto	l5817
 13372  003F9A  C01C  F022         	movff	___ftge@ff1,??___ftge
 13373  003F9E  C01D  F023         	movff	___ftge@ff1+1,??___ftge+1
 13374  003FA2  C01E  F024         	movff	___ftge@ff1+2,??___ftge+2
 13375  003FA6  1E22               	comf	??___ftge,f,c
 13376  003FA8  1E23               	comf	??___ftge+1,f,c
 13377  003FAA  1E24               	comf	??___ftge+2,f,c
 13378  003FAC  2A22               	incf	??___ftge,f,c
 13379  003FAE  0E00               	movlw	0
 13380  003FB0  2223               	addwfc	??___ftge+1,f,c
 13381  003FB2  2224               	addwfc	??___ftge+2,f,c
 13382  003FB4  0E00               	movlw	0
 13383  003FB6  2422               	addwf	??___ftge,w,c
 13384  003FB8  6E1C               	movwf	___ftge@ff1,c
 13385  003FBA  0E00               	movlw	0
 13386  003FBC  2023               	addwfc	??___ftge+1,w,c
 13387  003FBE  6E1D               	movwf	___ftge@ff1+1,c
 13388  003FC0  0E80               	movlw	128
 13389  003FC2  2024               	addwfc	??___ftge+2,w,c
 13390  003FC4  6E1E               	movwf	___ftge@ff1+2,c
 13391  003FC6                     l5817:
 13392  003FC6  AE21               	btfss	___ftge@ff2+2,7,c
 13393  003FC8  D016               	goto	l5821
 13394  003FCA  C01F  F022         	movff	___ftge@ff2,??___ftge
 13395  003FCE  C020  F023         	movff	___ftge@ff2+1,??___ftge+1
 13396  003FD2  C021  F024         	movff	___ftge@ff2+2,??___ftge+2
 13397  003FD6  1E22               	comf	??___ftge,f,c
 13398  003FD8  1E23               	comf	??___ftge+1,f,c
 13399  003FDA  1E24               	comf	??___ftge+2,f,c
 13400  003FDC  2A22               	incf	??___ftge,f,c
 13401  003FDE  0E00               	movlw	0
 13402  003FE0  2223               	addwfc	??___ftge+1,f,c
 13403  003FE2  2224               	addwfc	??___ftge+2,f,c
 13404  003FE4  0E00               	movlw	0
 13405  003FE6  2422               	addwf	??___ftge,w,c
 13406  003FE8  6E1F               	movwf	___ftge@ff2,c
 13407  003FEA  0E00               	movlw	0
 13408  003FEC  2023               	addwfc	??___ftge+1,w,c
 13409  003FEE  6E20               	movwf	___ftge@ff2+1,c
 13410  003FF0  0E80               	movlw	128
 13411  003FF2  2024               	addwfc	??___ftge+2,w,c
 13412  003FF4  6E21               	movwf	___ftge@ff2+2,c
 13413  003FF6                     l5821:
 13414  003FF6  0E00               	movlw	0
 13415  003FF8  1A1C               	xorwf	___ftge@ff1,f,c
 13416  003FFA  0E00               	movlw	0
 13417  003FFC  1A1D               	xorwf	___ftge@ff1+1,f,c
 13418  003FFE  0E80               	movlw	128
 13419  004000  1A1E               	xorwf	___ftge@ff1+2,f,c
 13420  004002  0E00               	movlw	0
 13421  004004  1A1F               	xorwf	___ftge@ff2,f,c
 13422  004006  0E00               	movlw	0
 13423  004008  1A20               	xorwf	___ftge@ff2+1,f,c
 13424  00400A  0E80               	movlw	128
 13425  00400C  1A21               	xorwf	___ftge@ff2+2,f,c
 13426  00400E  501F               	movf	___ftge@ff2,w,c
 13427  004010  5C1C               	subwf	___ftge@ff1,w,c
 13428  004012  5020               	movf	___ftge@ff2+1,w,c
 13429  004014  581D               	subwfb	___ftge@ff1+1,w,c
 13430  004016  5021               	movf	___ftge@ff2+2,w,c
 13431  004018  581E               	subwfb	___ftge@ff1+2,w,c
 13432  00401A  B0D8               	btfsc	status,0,c
 13433  00401C  D002               	goto	l5827
 13434  00401E  90D8               	bcf	status,0,c
 13435  004020  0012               	return	
 13436  004022                     l5827:
 13437  004022  80D8               	bsf	status,0,c
 13438  004024  0012               	return	
 13439  004026                     __end_of___ftge:
 13440                           	opt stack 0
 13441                           tosu	equ	0xFFF
 13442                           tosh	equ	0xFFE
 13443                           tosl	equ	0xFFD
 13444                           pclath	equ	0xFFA
 13445                           tblptru	equ	0xFF8
 13446                           tblptrh	equ	0xFF7
 13447                           tblptrl	equ	0xFF6
 13448                           tablat	equ	0xFF5
 13449                           prodh	equ	0xFF4
 13450                           prodl	equ	0xFF3
 13451                           intcon	equ	0xFF2
 13452                           indf0	equ	0xFEF
 13453                           postinc0	equ	0xFEE
 13454                           fsr0h	equ	0xFEA
 13455                           fsr0l	equ	0xFE9
 13456                           wreg	equ	0xFE8
 13457                           indf1	equ	0xFE7
 13458                           postdec1	equ	0xFE5
 13459                           fsr1h	equ	0xFE2
 13460                           fsr1l	equ	0xFE1
 13461                           indf2	equ	0xFDF
 13462                           postinc2	equ	0xFDE
 13463                           postdec2	equ	0xFDD
 13464                           fsr2h	equ	0xFDA
 13465                           fsr2l	equ	0xFD9
 13466                           status	equ	0xFD8
 13467                           
 13468 ;; *************** function _memset *****************
 13469 ;; Defined at:
 13470 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;  p1              2   27[COMRAM] PTR void 
 13473 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(12
      +8), util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 13474 ;;  c               2   29[COMRAM] int 
 13475 ;;  n               2   31[COMRAM] unsigned int 
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;  p               2   33[COMRAM] PTR unsigned char 
 13478 ;;		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(64), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(12
      +8), util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  2   27[COMRAM] PTR void 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13488 ;;      Params:         6       0       0       0       0       0       0
 13489 ;;      Locals:         2       0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0
 13491 ;;      Totals:         8       0       0       0       0       0       0
 13492 ;;Total ram usage:        8 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:    2
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_util_beacon_transmission
 13499 ;;		_util_command_ack_transmission
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text54
 13504  0046FC                     __ptext54:
 13505                           	opt stack 0
 13506  0046FC                     _memset:
 13507                           	opt stack 26
 13508                           
 13509                           ;incstack = 0
 13510  0046FC  C01C  F022         	movff	memset@p1,memset@p
 13511  004700  C01D  F023         	movff	memset@p1+1,memset@p+1
 13512  004704  D008               	goto	l6457
 13513  004706                     l6453:
 13514  004706  C022  FFD9         	movff	memset@p,fsr2l
 13515  00470A  C023  FFDA         	movff	memset@p+1,fsr2h
 13516  00470E  C01E  FFDF         	movff	memset@c,indf2
 13517  004712  4A22               	infsnz	memset@p,f,c
 13518  004714  2A23               	incf	memset@p+1,f,c
 13519  004716                     l6457:
 13520  004716  0620               	decf	memset@n,f,c
 13521  004718  A0D8               	btfss	status,0,c
 13522  00471A  0621               	decf	memset@n+1,f,c
 13523  00471C  2820               	incf	memset@n,w,c
 13524  00471E  E1F3               	bnz	l6453
 13525  004720  2821               	incf	memset@n+1,w,c
 13526  004722  B4D8               	btfsc	status,2,c
 13527  004724  0012               	return	
 13528  004726  D7EF               	goto	l6453
 13529  004728                     __end_of_memset:
 13530                           	opt stack 0
 13531                           tosu	equ	0xFFF
 13532                           tosh	equ	0xFFE
 13533                           tosl	equ	0xFFD
 13534                           pclath	equ	0xFFA
 13535                           tblptru	equ	0xFF8
 13536                           tblptrh	equ	0xFF7
 13537                           tblptrl	equ	0xFF6
 13538                           tablat	equ	0xFF5
 13539                           prodh	equ	0xFF4
 13540                           prodl	equ	0xFF3
 13541                           intcon	equ	0xFF2
 13542                           indf0	equ	0xFEF
 13543                           postinc0	equ	0xFEE
 13544                           fsr0h	equ	0xFEA
 13545                           fsr0l	equ	0xFE9
 13546                           wreg	equ	0xFE8
 13547                           indf1	equ	0xFE7
 13548                           postdec1	equ	0xFE5
 13549                           fsr1h	equ	0xFE2
 13550                           fsr1l	equ	0xFE1
 13551                           indf2	equ	0xFDF
 13552                           postinc2	equ	0xFDE
 13553                           postdec2	equ	0xFDD
 13554                           fsr2h	equ	0xFDA
 13555                           fsr2l	equ	0xFD9
 13556                           status	equ	0xFD8
 13557                           
 13558 ;; *************** function _func_command_decode *****************
 13559 ;; Defined at:
 13560 ;;		line 27 in file "easat2_func_commands.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  candidate_co    4   65[BANK0 ] unsigned long 
 13563 ;;  decoded_comm    2   69[BANK0 ] PTR unsigned int 
 13564 ;;		 -> func_command_management@decoded_command(2), 
 13565 ;;  decoded_valu    2   71[BANK0 ] PTR unsigned int 
 13566 ;;		 -> func_command_management@decoded_command_value(2), 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  body_data       4   85[BANK0 ] unsigned long 
 13569 ;;  body            4   81[BANK0 ] unsigned long 
 13570 ;;  fixed_comman    4   75[BANK0 ] unsigned long 
 13571 ;;  golay_errors    2   79[BANK0 ] int 
 13572 ;;  header          2   73[BANK0 ] unsigned int 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  2   65[BANK0 ] int 
 13575 ;; Registers used:
 13576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13582 ;;      Params:         0       8       0       0       0       0       0
 13583 ;;      Locals:         0      16       0       0       0       0       0
 13584 ;;      Temps:          4       0       0       0       0       0       0
 13585 ;;      Totals:         4      24       0       0       0       0       0
 13586 ;;Total ram usage:       28 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:    4
 13589 ;; This function calls:
 13590 ;;		_golay_correct
 13591 ;;		_golay_parity
 13592 ;;		_golay_syndrome
 13593 ;; This function is called by:
 13594 ;;		_func_command_management
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text55
 13599  002D28                     __ptext55:
 13600                           	opt stack 0
 13601  002D28                     _func_command_decode:
 13602                           	opt stack 24
 13603                           
 13604                           ;easat2_func_commands.c: 29: unsigned int header;
 13605                           ;easat2_func_commands.c: 30: unsigned long body;
 13606                           ;easat2_func_commands.c: 31: unsigned long body_data, fixed_command;
 13607                           ;easat2_func_commands.c: 32: int golay_errors;
 13608                           ;easat2_func_commands.c: 38: header = (candidate_command & 0x55000000) >> 24;
 13609                           
 13610                           ;incstack = 0
 13611  002D28  C0A1  F028         	movff	func_command_decode@candidate_command,??_func_command_decode
 13612  002D2C  C0A2  F029         	movff	func_command_decode@candidate_command+1,??_func_command_decode+1
 13613  002D30  C0A3  F02A         	movff	func_command_decode@candidate_command+2,??_func_command_decode+2
 13614  002D34  C0A4  F02B         	movff	func_command_decode@candidate_command+3,??_func_command_decode+3
 13615  002D38  0E19               	movlw	25
 13616  002D3A  D005               	goto	u7760
 13617  002D3C                     u7765:
 13618  002D3C  90D8               	bcf	status,0,c
 13619  002D3E  322B               	rrcf	??_func_command_decode+3,f,c
 13620  002D40  322A               	rrcf	??_func_command_decode+2,f,c
 13621  002D42  3229               	rrcf	??_func_command_decode+1,f,c
 13622  002D44  3228               	rrcf	??_func_command_decode,f,c
 13623  002D46                     u7760:
 13624  002D46  2EE8               	decfsz	wreg,f,c
 13625  002D48  D7F9               	goto	u7765
 13626  002D4A  0E55               	movlw	85
 13627  002D4C  1428               	andwf	??_func_command_decode,w,c
 13628  002D4E  0100               	movlb	0	; () banked
 13629  002D50  6FA9               	movwf	func_command_decode@header& (0+255),b
 13630  002D52  0100               	movlb	0	; () banked
 13631  002D54  6BAA               	clrf	(func_command_decode@header+1)& (0+255),b
 13632                           
 13633                           ;easat2_func_commands.c: 42: if (header != 0x55) return 0;
 13634  002D56  0E55               	movlw	85
 13635  002D58  0100               	movlb	0	; () banked
 13636  002D5A  19A9               	xorwf	func_command_decode@header& (0+255),w,b
 13637  002D5C  0100               	movlb	0	; () banked
 13638  002D5E  11AA               	iorwf	(func_command_decode@header+1)& (0+255),w,b
 13639  002D60  B4D8               	btfsc	status,2,c
 13640  002D62  D006               	goto	l6581
 13641                           
 13642                           ; BSR set to: 0
 13643  002D64  0E00               	movlw	0
 13644  002D66  0100               	movlb	0	; () banked
 13645  002D68  6FA2               	movwf	(?_func_command_decode+1)& (0+255),b
 13646  002D6A  0E00               	movlw	0
 13647  002D6C  6FA1               	movwf	?_func_command_decode& (0+255),b
 13648                           
 13649                           ; BSR set to: 0
 13650  002D6E  0012               	return	
 13651  002D70                     l6581:
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;easat2_func_commands.c: 46: body = candidate_command & 0x00FFFFFF;
 13655  002D70  0EFF               	movlw	255
 13656  002D72  0100               	movlb	0	; () banked
 13657  002D74  15A1               	andwf	func_command_decode@candidate_command& (0+255),w,b
 13658  002D76  0100               	movlb	0	; () banked
 13659  002D78  6FB1               	movwf	func_command_decode@body& (0+255),b
 13660  002D7A  0EFF               	movlw	255
 13661  002D7C  0100               	movlb	0	; () banked
 13662  002D7E  15A2               	andwf	(func_command_decode@candidate_command+1)& (0+255),w,b
 13663  002D80  0100               	movlb	0	; () banked
 13664  002D82  6FB2               	movwf	(func_command_decode@body+1)& (0+255),b
 13665  002D84  0EFF               	movlw	255
 13666  002D86  0100               	movlb	0	; () banked
 13667  002D88  15A3               	andwf	(func_command_decode@candidate_command+2)& (0+255),w,b
 13668  002D8A  0100               	movlb	0	; () banked
 13669  002D8C  6FB3               	movwf	(func_command_decode@body+2)& (0+255),b
 13670  002D8E  0E00               	movlw	0
 13671  002D90  0100               	movlb	0	; () banked
 13672  002D92  15A4               	andwf	(func_command_decode@candidate_command+3)& (0+255),w,b
 13673  002D94  0100               	movlb	0	; () banked
 13674  002D96  6FB4               	movwf	(func_command_decode@body+3)& (0+255),b
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;easat2_func_commands.c: 48: if (golay_syndrome(body) == 0) {
 13678  002D98  C0B1  F01C         	movff	func_command_decode@body,golay_syndrome@cw
 13679  002D9C  C0B2  F01D         	movff	func_command_decode@body+1,golay_syndrome@cw+1
 13680  002DA0  C0B3  F01E         	movff	func_command_decode@body+2,golay_syndrome@cw+2
 13681  002DA4  C0B4  F01F         	movff	func_command_decode@body+3,golay_syndrome@cw+3
 13682  002DA8  EC56  F020         	call	_golay_syndrome	;wreg free
 13683  002DAC  501C               	movf	?_golay_syndrome,w,c
 13684  002DAE  101D               	iorwf	?_golay_syndrome+1,w,c
 13685  002DB0  101E               	iorwf	?_golay_syndrome+2,w,c
 13686  002DB2  101F               	iorwf	?_golay_syndrome+3,w,c
 13687  002DB4  A4D8               	btfss	status,2,c
 13688  002DB6  D024               	goto	l6591
 13689                           
 13690                           ;easat2_func_commands.c: 55: body_data = body & 0x000FFF;
 13691  002DB8  0EFF               	movlw	255
 13692  002DBA  0100               	movlb	0	; () banked
 13693  002DBC  15B1               	andwf	func_command_decode@body& (0+255),w,b
 13694  002DBE  0100               	movlb	0	; () banked
 13695  002DC0  6FB5               	movwf	func_command_decode@body_data& (0+255),b
 13696  002DC2  0E0F               	movlw	15
 13697  002DC4  0100               	movlb	0	; () banked
 13698  002DC6  15B2               	andwf	(func_command_decode@body+1)& (0+255),w,b
 13699  002DC8  0100               	movlb	0	; () banked
 13700  002DCA  6FB6               	movwf	(func_command_decode@body_data+1)& (0+255),b
 13701  002DCC  0E00               	movlw	0
 13702  002DCE  0100               	movlb	0	; () banked
 13703  002DD0  15B3               	andwf	(func_command_decode@body+2)& (0+255),w,b
 13704  002DD2  0100               	movlb	0	; () banked
 13705  002DD4  6FB7               	movwf	(func_command_decode@body_data+2)& (0+255),b
 13706  002DD6  0E00               	movlw	0
 13707  002DD8  0100               	movlb	0	; () banked
 13708  002DDA  15B4               	andwf	(func_command_decode@body+3)& (0+255),w,b
 13709  002DDC  D052               	goto	L7
 13710  002DDE                     l6587:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;easat2_func_commands.c: 57: *decoded_command = body_data & 0xF00 >> 8;
 13714  002DDE  0E0F               	movlw	15
 13715  002DE0  0100               	movlb	0	; () banked
 13716  002DE2  15B5               	andwf	func_command_decode@body_data& (0+255),w,b
 13717  002DE4  6E28               	movwf	??_func_command_decode& (0+255),c
 13718  002DE6  0E00               	movlw	0
 13719  002DE8  0100               	movlb	0	; () banked
 13720  002DEA  15B6               	andwf	(func_command_decode@body_data+1)& (0+255),w,b
 13721  002DEC  6E29               	movwf	(??_func_command_decode+1)& (0+255),c
 13722  002DEE  C0A5  FFD9         	movff	func_command_decode@decoded_command,fsr2l
 13723  002DF2  C0A6  FFDA         	movff	func_command_decode@decoded_command+1,fsr2h
 13724  002DF6  C028  FFDE         	movff	??_func_command_decode,postinc2
 13725  002DFA  C029  FFDD         	movff	??_func_command_decode+1,postdec2
 13726  002DFE  D044               	goto	l6599
 13727  002E00                     l6591:
 13728                           
 13729                           ;easat2_func_commands.c: 64: fixed_command = golay_correct(body, &golay_errors);
 13730  002E00  C0B1  F085         	movff	func_command_decode@body,golay_correct@cw
 13731  002E04  C0B2  F086         	movff	func_command_decode@body+1,golay_correct@cw+1
 13732  002E08  C0B3  F087         	movff	func_command_decode@body+2,golay_correct@cw+2
 13733  002E0C  C0B4  F088         	movff	func_command_decode@body+3,golay_correct@cw+3
 13734  002E10  0EAF               	movlw	low func_command_decode@golay_errors
 13735  002E12  0100               	movlb	0	; () banked
 13736  002E14  6F89               	movwf	golay_correct@errs& (0+255),b
 13737  002E16  0E00               	movlw	high func_command_decode@golay_errors
 13738  002E18  0100               	movlb	0	; () banked
 13739  002E1A  6F8A               	movwf	(golay_correct@errs+1)& (0+255),b
 13740  002E1C  ECD5  F011         	call	_golay_correct	;wreg free
 13741  002E20  C085  F0AB         	movff	?_golay_correct,func_command_decode@fixed_command
 13742  002E24  C086  F0AC         	movff	?_golay_correct+1,func_command_decode@fixed_command+1
 13743  002E28  C087  F0AD         	movff	?_golay_correct+2,func_command_decode@fixed_command+2
 13744  002E2C  C088  F0AE         	movff	?_golay_correct+3,func_command_decode@fixed_command+3
 13745                           
 13746                           ;easat2_func_commands.c: 66: if (golay_parity(fixed_command)) {
 13747  002E30  C0AB  F01C         	movff	func_command_decode@fixed_command,golay_parity@cw
 13748  002E34  C0AC  F01D         	movff	func_command_decode@fixed_command+1,golay_parity@cw+1
 13749  002E38  C0AD  F01E         	movff	func_command_decode@fixed_command+2,golay_parity@cw+2
 13750  002E3C  C0AE  F01F         	movff	func_command_decode@fixed_command+3,golay_parity@cw+3
 13751  002E40  ECD1  F022         	call	_golay_parity	;wreg free
 13752  002E44  501C               	movf	?_golay_parity,w,c
 13753  002E46  101D               	iorwf	?_golay_parity+1,w,c
 13754  002E48  B4D8               	btfsc	status,2,c
 13755  002E4A  D02E               	goto	l6601
 13756                           
 13757                           ;easat2_func_commands.c: 68: fixed_command += 0x800000;
 13758  002E4C  0E00               	movlw	0
 13759  002E4E  0100               	movlb	0	; () banked
 13760  002E50  27AB               	addwf	func_command_decode@fixed_command& (0+255),f,b
 13761  002E52  0E00               	movlw	0
 13762  002E54  23AC               	addwfc	(func_command_decode@fixed_command+1)& (0+255),f,b
 13763  002E56  0E80               	movlw	128
 13764  002E58  23AD               	addwfc	(func_command_decode@fixed_command+2)& (0+255),f,b
 13765  002E5A  0E00               	movlw	0
 13766  002E5C  23AE               	addwfc	(func_command_decode@fixed_command+3)& (0+255),f,b
 13767                           
 13768                           ;easat2_func_commands.c: 70: body_data = fixed_command & 0x000FFF;
 13769  002E5E  0EFF               	movlw	255
 13770  002E60  0100               	movlb	0	; () banked
 13771  002E62  15AB               	andwf	func_command_decode@fixed_command& (0+255),w,b
 13772  002E64  0100               	movlb	0	; () banked
 13773  002E66  6FB5               	movwf	func_command_decode@body_data& (0+255),b
 13774  002E68  0E0F               	movlw	15
 13775  002E6A  0100               	movlb	0	; () banked
 13776  002E6C  15AC               	andwf	(func_command_decode@fixed_command+1)& (0+255),w,b
 13777  002E6E  0100               	movlb	0	; () banked
 13778  002E70  6FB6               	movwf	(func_command_decode@body_data+1)& (0+255),b
 13779  002E72  0E00               	movlw	0
 13780  002E74  0100               	movlb	0	; () banked
 13781  002E76  15AD               	andwf	(func_command_decode@fixed_command+2)& (0+255),w,b
 13782  002E78  0100               	movlb	0	; () banked
 13783  002E7A  6FB7               	movwf	(func_command_decode@body_data+2)& (0+255),b
 13784  002E7C  0E00               	movlw	0
 13785  002E7E  0100               	movlb	0	; () banked
 13786  002E80  15AE               	andwf	(func_command_decode@fixed_command+3)& (0+255),w,b
 13787  002E82                     L7:
 13788  002E82  0100               	movlb	0	; () banked
 13789  002E84  6FB8               	movwf	(func_command_decode@body_data+3)& (0+255),b
 13790  002E86  D7AB               	goto	l6587
 13791  002E88                     l6599:
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;easat2_func_commands.c: 73: *decoded_value = body_data & 0x0FF;
 13795  002E88  0EFF               	movlw	255
 13796  002E8A  0100               	movlb	0	; () banked
 13797  002E8C  15B5               	andwf	func_command_decode@body_data& (0+255),w,b
 13798  002E8E  6E28               	movwf	??_func_command_decode& (0+255),c
 13799  002E90  0E00               	movlw	0
 13800  002E92  0100               	movlb	0	; () banked
 13801  002E94  15B6               	andwf	(func_command_decode@body_data+1)& (0+255),w,b
 13802  002E96  6E29               	movwf	(??_func_command_decode+1)& (0+255),c
 13803  002E98  C0A7  FFD9         	movff	func_command_decode@decoded_value,fsr2l
 13804  002E9C  C0A8  FFDA         	movff	func_command_decode@decoded_value+1,fsr2h
 13805  002EA0  C028  FFDE         	movff	??_func_command_decode,postinc2
 13806  002EA4  C029  FFDD         	movff	??_func_command_decode+1,postdec2
 13807  002EA8                     l6601:
 13808                           
 13809                           ;easat2_func_commands.c: 75: }
 13810                           ;easat2_func_commands.c: 77: }
 13811                           ;easat2_func_commands.c: 79: return 1;
 13812  002EA8  0E00               	movlw	0
 13813  002EAA  0100               	movlb	0	; () banked
 13814  002EAC  6FA2               	movwf	(?_func_command_decode+1)& (0+255),b
 13815  002EAE  0E01               	movlw	1
 13816  002EB0  6FA1               	movwf	?_func_command_decode& (0+255),b
 13817  002EB2  0012               	return	
 13818  002EB4                     __end_of_func_command_decode:
 13819                           	opt stack 0
 13820                           tosu	equ	0xFFF
 13821                           tosh	equ	0xFFE
 13822                           tosl	equ	0xFFD
 13823                           pclath	equ	0xFFA
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           indf0	equ	0xFEF
 13832                           postinc0	equ	0xFEE
 13833                           fsr0h	equ	0xFEA
 13834                           fsr0l	equ	0xFE9
 13835                           wreg	equ	0xFE8
 13836                           indf1	equ	0xFE7
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           fsr2h	equ	0xFDA
 13844                           fsr2l	equ	0xFD9
 13845                           status	equ	0xFD8
 13846                           
 13847 ;; *************** function _golay_parity *****************
 13848 ;; Defined at:
 13849 ;;		line 32 in file "easat2_golay_CRCGcod.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;  cw              4   27[COMRAM] unsigned long 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  p               1   32[COMRAM] unsigned char 
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  2   27[COMRAM] int 
 13856 ;; Registers used:
 13857 ;;		wreg, status,2, status,0
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13863 ;;      Params:         4       0       0       0       0       0       0
 13864 ;;      Locals:         1       0       0       0       0       0       0
 13865 ;;      Temps:          1       0       0       0       0       0       0
 13866 ;;      Totals:         6       0       0       0       0       0       0
 13867 ;;Total ram usage:        6 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:    2
 13870 ;; This function calls:
 13871 ;;		Nothing
 13872 ;; This function is called by:
 13873 ;;		_func_command_decode
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           	psect	text56
 13878  0045A2                     __ptext56:
 13879                           	opt stack 0
 13880  0045A2                     _golay_parity:
 13881                           	opt stack 25
 13882                           
 13883                           ;easat2_golay_CRCGcod.c: 36: unsigned char p;
 13884                           ;easat2_golay_CRCGcod.c: 39: p=*(unsigned char*)&cw;
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;incstack = 0
 13888  0045A2  C01C  F021         	movff	golay_parity@cw,golay_parity@p
 13889                           
 13890                           ;easat2_golay_CRCGcod.c: 40: p^=*((unsigned char*)&cw+1);
 13891  0045A6  501D               	movf	golay_parity@cw+1,w,c
 13892  0045A8  1A21               	xorwf	golay_parity@p,f,c
 13893                           
 13894                           ;easat2_golay_CRCGcod.c: 41: p^=*((unsigned char*)&cw+2);
 13895  0045AA  501E               	movf	golay_parity@cw+2,w,c
 13896  0045AC  1A21               	xorwf	golay_parity@p,f,c
 13897                           
 13898                           ;easat2_golay_CRCGcod.c: 44: p=p ^ (p>>4);
 13899  0045AE  3821               	swapf	golay_parity@p,w,c
 13900  0045B0  0B0F               	andlw	15
 13901  0045B2  1821               	xorwf	golay_parity@p,w,c
 13902  0045B4  6E21               	movwf	golay_parity@p,c
 13903                           
 13904                           ;easat2_golay_CRCGcod.c: 45: p=p ^ (p>>2);
 13905  0045B6  4021               	rrncf	golay_parity@p,w,c
 13906  0045B8  42E8               	rrncf	wreg,f,c
 13907  0045BA  0B3F               	andlw	63
 13908  0045BC  1821               	xorwf	golay_parity@p,w,c
 13909  0045BE  6E21               	movwf	golay_parity@p,c
 13910                           
 13911                           ;easat2_golay_CRCGcod.c: 46: p=p ^ (p>>1);
 13912  0045C0  90D8               	bcf	status,0,c
 13913  0045C2  3021               	rrcf	golay_parity@p,w,c
 13914  0045C4  1821               	xorwf	golay_parity@p,w,c
 13915  0045C6  6E21               	movwf	golay_parity@p,c
 13916                           
 13917                           ;easat2_golay_CRCGcod.c: 49: return(p & 1);
 13918  0045C8  C021  F020         	movff	golay_parity@p,??_golay_parity
 13919  0045CC  0E01               	movlw	1
 13920  0045CE  1620               	andwf	??_golay_parity,f,c
 13921  0045D0  5020               	movf	??_golay_parity,w,c
 13922  0045D2  6E1C               	movwf	?_golay_parity,c
 13923  0045D4  6A1D               	clrf	?_golay_parity+1,c
 13924  0045D6  0012               	return	
 13925  0045D8                     __end_of_golay_parity:
 13926                           	opt stack 0
 13927                           tosu	equ	0xFFF
 13928                           tosh	equ	0xFFE
 13929                           tosl	equ	0xFFD
 13930                           pclath	equ	0xFFA
 13931                           tblptru	equ	0xFF8
 13932                           tblptrh	equ	0xFF7
 13933                           tblptrl	equ	0xFF6
 13934                           tablat	equ	0xFF5
 13935                           prodh	equ	0xFF4
 13936                           prodl	equ	0xFF3
 13937                           intcon	equ	0xFF2
 13938                           indf0	equ	0xFEF
 13939                           postinc0	equ	0xFEE
 13940                           fsr0h	equ	0xFEA
 13941                           fsr0l	equ	0xFE9
 13942                           wreg	equ	0xFE8
 13943                           indf1	equ	0xFE7
 13944                           postdec1	equ	0xFE5
 13945                           fsr1h	equ	0xFE2
 13946                           fsr1l	equ	0xFE1
 13947                           indf2	equ	0xFDF
 13948                           postinc2	equ	0xFDE
 13949                           postdec2	equ	0xFDD
 13950                           fsr2h	equ	0xFDA
 13951                           fsr2l	equ	0xFD9
 13952                           status	equ	0xFD8
 13953                           
 13954 ;; *************** function _golay_correct *****************
 13955 ;; Defined at:
 13956 ;;		line 80 in file "easat2_golay_CRCGcor.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  cw              4   37[BANK0 ] unsigned long 
 13959 ;;  errs            2   41[BANK0 ] PTR int 
 13960 ;;		 -> func_command_decode@golay_errors(2), 
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;  s               4   59[BANK0 ] unsigned long 
 13963 ;;  mask            4   53[BANK0 ] unsigned long 
 13964 ;;  cwsaver         4   49[BANK0 ] unsigned long 
 13965 ;;  j               2   63[BANK0 ] int 
 13966 ;;  i               2   57[BANK0 ] int 
 13967 ;;  w               1   48[BANK0 ] unsigned char 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  4   37[BANK0 ] unsigned long 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13977 ;;      Params:         0       6       0       0       0       0       0
 13978 ;;      Locals:         0      17       0       0       0       0       0
 13979 ;;      Temps:          0       5       0       0       0       0       0
 13980 ;;      Totals:         0      28       0       0       0       0       0
 13981 ;;Total ram usage:       28 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    3
 13984 ;; This function calls:
 13985 ;;		_golay_rotate_left
 13986 ;;		_golay_rotate_right
 13987 ;;		_golay_syndrome
 13988 ;;		_golay_weight
 13989 ;; This function is called by:
 13990 ;;		_func_command_decode
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text57
 13995  0023AA                     __ptext57:
 13996                           	opt stack 0
 13997  0023AA                     _golay_correct:
 13998                           	opt stack 24
 13999                           
 14000                           ;easat2_golay_CRCGcor.c: 87: unsigned char
 14001                           ;easat2_golay_CRCGcor.c: 88: w;
 14002                           ;easat2_golay_CRCGcor.c: 89: unsigned long
 14003                           ;easat2_golay_CRCGcor.c: 90: mask;
 14004                           ;easat2_golay_CRCGcor.c: 91: int
 14005                           ;easat2_golay_CRCGcor.c: 92: i,j;
 14006                           ;easat2_golay_CRCGcor.c: 93: unsigned long
 14007                           ;easat2_golay_CRCGcor.c: 94: s,
 14008                           ;easat2_golay_CRCGcor.c: 95: cwsaver;
 14009                           ;easat2_golay_CRCGcor.c: 97: cwsaver=cw;
 14010                           
 14011                           ;incstack = 0
 14012  0023AA  C085  F091         	movff	golay_correct@cw,golay_correct@cwsaver
 14013  0023AE  C086  F092         	movff	golay_correct@cw+1,golay_correct@cwsaver+1
 14014  0023B2  C087  F093         	movff	golay_correct@cw+2,golay_correct@cwsaver+2
 14015  0023B6  C088  F094         	movff	golay_correct@cw+3,golay_correct@cwsaver+3
 14016                           
 14017                           ;easat2_golay_CRCGcor.c: 98: *errs=0;
 14018  0023BA  C089  FFD9         	movff	golay_correct@errs,fsr2l
 14019  0023BE  C08A  FFDA         	movff	golay_correct@errs+1,fsr2h
 14020  0023C2  0E00               	movlw	0
 14021  0023C4  6EDE               	movwf	postinc2,c
 14022  0023C6  0E00               	movlw	0
 14023  0023C8  6EDD               	movwf	postdec2,c
 14024                           
 14025                           ;easat2_golay_CRCGcor.c: 99: w=3;
 14026  0023CA  0E03               	movlw	3
 14027  0023CC  0100               	movlb	0	; () banked
 14028  0023CE  6F90               	movwf	golay_correct@w& (0+255),b
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;easat2_golay_CRCGcor.c: 100: j=-1;
 14032  0023D0  0100               	movlb	0	; () banked
 14033  0023D2  699F               	setf	golay_correct@j& (0+255),b
 14034  0023D4  69A0               	setf	(golay_correct@j+1)& (0+255),b
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;easat2_golay_CRCGcor.c: 101: mask=1;
 14038  0023D6  0E01               	movlw	1
 14039  0023D8  0100               	movlb	0	; () banked
 14040  0023DA  6F95               	movwf	golay_correct@mask& (0+255),b
 14041  0023DC  0E00               	movlw	0
 14042  0023DE  6F96               	movwf	(golay_correct@mask+1)& (0+255),b
 14043  0023E0  0E00               	movlw	0
 14044  0023E2  6F97               	movwf	(golay_correct@mask+2)& (0+255),b
 14045  0023E4  0E00               	movlw	0
 14046  0023E6  6F98               	movwf	(golay_correct@mask+3)& (0+255),b
 14047                           
 14048                           ;easat2_golay_CRCGcor.c: 102: while (j<23)
 14049  0023E8  D13D               	goto	l6393
 14050  0023EA                     l6351:
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;easat2_golay_CRCGcor.c: 103: {
 14054                           ;easat2_golay_CRCGcor.c: 104: if (j != -1)
 14055  0023EA  0100               	movlb	0	; () banked
 14056  0023EC  299F               	incf	golay_correct@j& (0+255),w,b
 14057  0023EE  E104               	bnz	u7590
 14058  0023F0  0100               	movlb	0	; () banked
 14059  0023F2  29A0               	incf	(golay_correct@j+1)& (0+255),w,b
 14060  0023F4  B4D8               	btfsc	status,2,c
 14061  0023F6  D04D               	goto	l6359
 14062  0023F8                     u7590:
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;easat2_golay_CRCGcor.c: 105: {
 14066                           ;easat2_golay_CRCGcor.c: 106: if (j>0)
 14067  0023F8  0100               	movlb	0	; () banked
 14068  0023FA  BFA0               	btfsc	(golay_correct@j+1)& (0+255),7,b
 14069  0023FC  D02F               	goto	l574
 14070  0023FE  0100               	movlb	0	; () banked
 14071  002400  51A0               	movf	(golay_correct@j+1)& (0+255),w,b
 14072  002402  E104               	bnz	u7600
 14073  002404  0100               	movlb	0	; () banked
 14074  002406  059F               	decf	golay_correct@j& (0+255),w,b
 14075  002408  A0D8               	btfss	status,0,c
 14076  00240A  D028               	goto	l574
 14077  00240C                     u7600:
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;easat2_golay_CRCGcor.c: 107: {
 14081                           ;easat2_golay_CRCGcor.c: 108: cw=cwsaver ^ mask;
 14082  00240C  0100               	movlb	0	; () banked
 14083  00240E  5195               	movf	golay_correct@mask& (0+255),w,b
 14084  002410  0100               	movlb	0	; () banked
 14085  002412  1991               	xorwf	golay_correct@cwsaver& (0+255),w,b
 14086  002414  0100               	movlb	0	; () banked
 14087  002416  6F85               	movwf	golay_correct@cw& (0+255),b
 14088  002418  0100               	movlb	0	; () banked
 14089  00241A  5196               	movf	(golay_correct@mask+1)& (0+255),w,b
 14090  00241C  0100               	movlb	0	; () banked
 14091  00241E  1992               	xorwf	(golay_correct@cwsaver+1)& (0+255),w,b
 14092  002420  0100               	movlb	0	; () banked
 14093  002422  6F86               	movwf	(golay_correct@cw+1)& (0+255),b
 14094  002424  0100               	movlb	0	; () banked
 14095  002426  5197               	movf	(golay_correct@mask+2)& (0+255),w,b
 14096  002428  0100               	movlb	0	; () banked
 14097  00242A  1993               	xorwf	(golay_correct@cwsaver+2)& (0+255),w,b
 14098  00242C  0100               	movlb	0	; () banked
 14099  00242E  6F87               	movwf	(golay_correct@cw+2)& (0+255),b
 14100  002430  0100               	movlb	0	; () banked
 14101  002432  5198               	movf	(golay_correct@mask+3)& (0+255),w,b
 14102  002434  0100               	movlb	0	; () banked
 14103  002436  1994               	xorwf	(golay_correct@cwsaver+3)& (0+255),w,b
 14104  002438  0100               	movlb	0	; () banked
 14105  00243A  6F88               	movwf	(golay_correct@cw+3)& (0+255),b
 14106                           
 14107                           ;easat2_golay_CRCGcor.c: 109: mask+=mask;
 14108  00243C  0100               	movlb	0	; () banked
 14109  00243E  5195               	movf	golay_correct@mask& (0+255),w,b
 14110  002440  0100               	movlb	0	; () banked
 14111  002442  2795               	addwf	golay_correct@mask& (0+255),f,b
 14112  002444  0100               	movlb	0	; () banked
 14113  002446  5196               	movf	(golay_correct@mask+1)& (0+255),w,b
 14114  002448  0100               	movlb	0	; () banked
 14115  00244A  2396               	addwfc	(golay_correct@mask+1)& (0+255),f,b
 14116  00244C  0100               	movlb	0	; () banked
 14117  00244E  5197               	movf	(golay_correct@mask+2)& (0+255),w,b
 14118  002450  0100               	movlb	0	; () banked
 14119  002452  2397               	addwfc	(golay_correct@mask+2)& (0+255),f,b
 14120  002454  0100               	movlb	0	; () banked
 14121  002456  5198               	movf	(golay_correct@mask+3)& (0+255),w,b
 14122  002458  0100               	movlb	0	; () banked
 14123  00245A  2398               	addwfc	(golay_correct@mask+3)& (0+255),f,b
 14124  00245C                     l574:
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;easat2_golay_CRCGcor.c: 110: }
 14128                           ;easat2_golay_CRCGcor.c: 111: cw=cwsaver ^ mask;
 14129  00245C  0100               	movlb	0	; () banked
 14130  00245E  5195               	movf	golay_correct@mask& (0+255),w,b
 14131  002460  0100               	movlb	0	; () banked
 14132  002462  1991               	xorwf	golay_correct@cwsaver& (0+255),w,b
 14133  002464  0100               	movlb	0	; () banked
 14134  002466  6F85               	movwf	golay_correct@cw& (0+255),b
 14135  002468  0100               	movlb	0	; () banked
 14136  00246A  5196               	movf	(golay_correct@mask+1)& (0+255),w,b
 14137  00246C  0100               	movlb	0	; () banked
 14138  00246E  1992               	xorwf	(golay_correct@cwsaver+1)& (0+255),w,b
 14139  002470  0100               	movlb	0	; () banked
 14140  002472  6F86               	movwf	(golay_correct@cw+1)& (0+255),b
 14141  002474  0100               	movlb	0	; () banked
 14142  002476  5197               	movf	(golay_correct@mask+2)& (0+255),w,b
 14143  002478  0100               	movlb	0	; () banked
 14144  00247A  1993               	xorwf	(golay_correct@cwsaver+2)& (0+255),w,b
 14145  00247C  0100               	movlb	0	; () banked
 14146  00247E  6F87               	movwf	(golay_correct@cw+2)& (0+255),b
 14147  002480  0100               	movlb	0	; () banked
 14148  002482  5198               	movf	(golay_correct@mask+3)& (0+255),w,b
 14149  002484  0100               	movlb	0	; () banked
 14150  002486  1994               	xorwf	(golay_correct@cwsaver+3)& (0+255),w,b
 14151  002488  0100               	movlb	0	; () banked
 14152  00248A  6F88               	movwf	(golay_correct@cw+3)& (0+255),b
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;easat2_golay_CRCGcor.c: 112: w=2;
 14156  00248C  0E02               	movlw	2
 14157  00248E  0100               	movlb	0	; () banked
 14158  002490  6F90               	movwf	golay_correct@w& (0+255),b
 14159  002492                     l6359:
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;easat2_golay_CRCGcor.c: 113: }
 14163                           ;easat2_golay_CRCGcor.c: 115: s=golay_syndrome(cw);
 14164  002492  C085  F01C         	movff	golay_correct@cw,golay_syndrome@cw
 14165  002496  C086  F01D         	movff	golay_correct@cw+1,golay_syndrome@cw+1
 14166  00249A  C087  F01E         	movff	golay_correct@cw+2,golay_syndrome@cw+2
 14167  00249E  C088  F01F         	movff	golay_correct@cw+3,golay_syndrome@cw+3
 14168  0024A2  EC56  F020         	call	_golay_syndrome	;wreg free
 14169  0024A6  C01C  F09B         	movff	?_golay_syndrome,golay_correct@s
 14170  0024AA  C01D  F09C         	movff	?_golay_syndrome+1,golay_correct@s+1
 14171  0024AE  C01E  F09D         	movff	?_golay_syndrome+2,golay_correct@s+2
 14172  0024B2  C01F  F09E         	movff	?_golay_syndrome+3,golay_correct@s+3
 14173                           
 14174                           ;easat2_golay_CRCGcor.c: 116: if (s)
 14175  0024B6  0100               	movlb	0	; () banked
 14176  0024B8  519B               	movf	golay_correct@s& (0+255),w,b
 14177  0024BA  0100               	movlb	0	; () banked
 14178  0024BC  119C               	iorwf	(golay_correct@s+1)& (0+255),w,b
 14179  0024BE  0100               	movlb	0	; () banked
 14180  0024C0  119D               	iorwf	(golay_correct@s+2)& (0+255),w,b
 14181  0024C2  0100               	movlb	0	; () banked
 14182  0024C4  119E               	iorwf	(golay_correct@s+3)& (0+255),w,b
 14183  0024C6  B4D8               	btfsc	status,2,c
 14184  0024C8  D0C4               	goto	l575
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;easat2_golay_CRCGcor.c: 117: {
 14188                           ;easat2_golay_CRCGcor.c: 118: for (i=0; i<23; i++)
 14189  0024CA  0E00               	movlw	0
 14190  0024CC  0100               	movlb	0	; () banked
 14191  0024CE  6F9A               	movwf	(golay_correct@i+1)& (0+255),b
 14192  0024D0  0E00               	movlw	0
 14193  0024D2  6F99               	movwf	golay_correct@i& (0+255),b
 14194                           
 14195                           ; BSR set to: 0
 14196  0024D4  0100               	movlb	0	; () banked
 14197  0024D6  BF9A               	btfsc	(golay_correct@i+1)& (0+255),7,b
 14198  0024D8  D00A               	goto	l6369
 14199  0024DA  0100               	movlb	0	; () banked
 14200  0024DC  519A               	movf	(golay_correct@i+1)& (0+255),w,b
 14201  0024DE  E106               	bnz	u7620
 14202  0024E0  0E17               	movlw	23
 14203  0024E2  0100               	movlb	0	; () banked
 14204  0024E4  5D99               	subwf	golay_correct@i& (0+255),w,b
 14205  0024E6  B0D8               	btfsc	status,0,c
 14206  0024E8  D0B0               	goto	l6391
 14207  0024EA  D001               	goto	l6369
 14208  0024EC                     u7620:
 14209                           
 14210                           ; BSR set to: 0
 14211  0024EC  D0AE               	goto	l6391
 14212  0024EE                     l6369:
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;easat2_golay_CRCGcor.c: 119: {
 14216                           ;easat2_golay_CRCGcor.c: 120: if ((*errs=golay_weight(s)) <= w)
 14217  0024EE  C09B  F01C         	movff	golay_correct@s,golay_weight@cw
 14218  0024F2  C09C  F01D         	movff	golay_correct@s+1,golay_weight@cw+1
 14219  0024F6  C09D  F01E         	movff	golay_correct@s+2,golay_weight@cw+2
 14220  0024FA  C09E  F01F         	movff	golay_correct@s+3,golay_weight@cw+3
 14221  0024FE  EC9A  F01E         	call	_golay_weight	;wreg free
 14222  002502  C089  FFD9         	movff	golay_correct@errs,fsr2l
 14223  002506  C08A  FFDA         	movff	golay_correct@errs+1,fsr2h
 14224  00250A  C01C  FFDE         	movff	?_golay_weight,postinc2
 14225  00250E  C01D  FFDD         	movff	?_golay_weight+1,postdec2
 14226  002512  0100               	movlb	0	; () banked
 14227  002514  5190               	movf	golay_correct@w& (0+255),w,b
 14228  002516  0100               	movlb	0	; () banked
 14229  002518  6F8D               	movwf	(??_golay_correct+2)& (0+255),b
 14230  00251A  6B8E               	clrf	(??_golay_correct+3)& (0+255),b
 14231  00251C  50DE               	movf	postinc2,w,c
 14232  00251E  0100               	movlb	0	; () banked
 14233  002520  5D8D               	subwf	(??_golay_correct+2)& (0+255),w,b
 14234  002522  0100               	movlb	0	; () banked
 14235  002524  518E               	movf	(??_golay_correct+3)& (0+255),w,b
 14236  002526  0A80               	xorlw	128
 14237  002528  0100               	movlb	0	; () banked
 14238  00252A  6F8F               	movwf	(??_golay_correct+4)& (0+255),b
 14239  00252C  50DE               	movf	postinc2,w,c
 14240  00252E  0A80               	xorlw	128
 14241  002530  0100               	movlb	0	; () banked
 14242  002532  598F               	subwfb	(??_golay_correct+4)& (0+255),w,b
 14243  002534  A0D8               	btfss	status,0,c
 14244  002536  D057               	goto	l6385
 14245                           
 14246                           ; BSR set to: 0
 14247                           ;easat2_golay_CRCGcor.c: 121: {
 14248                           ;easat2_golay_CRCGcor.c: 122: cw=cw ^ s;
 14249  002538  0100               	movlb	0	; () banked
 14250  00253A  519B               	movf	golay_correct@s& (0+255),w,b
 14251  00253C  0100               	movlb	0	; () banked
 14252  00253E  1985               	xorwf	golay_correct@cw& (0+255),w,b
 14253  002540  0100               	movlb	0	; () banked
 14254  002542  6F85               	movwf	golay_correct@cw& (0+255),b
 14255  002544  0100               	movlb	0	; () banked
 14256  002546  519C               	movf	(golay_correct@s+1)& (0+255),w,b
 14257  002548  0100               	movlb	0	; () banked
 14258  00254A  1986               	xorwf	(golay_correct@cw+1)& (0+255),w,b
 14259  00254C  0100               	movlb	0	; () banked
 14260  00254E  6F86               	movwf	(golay_correct@cw+1)& (0+255),b
 14261  002550  0100               	movlb	0	; () banked
 14262  002552  519D               	movf	(golay_correct@s+2)& (0+255),w,b
 14263  002554  0100               	movlb	0	; () banked
 14264  002556  1987               	xorwf	(golay_correct@cw+2)& (0+255),w,b
 14265  002558  0100               	movlb	0	; () banked
 14266  00255A  6F87               	movwf	(golay_correct@cw+2)& (0+255),b
 14267  00255C  0100               	movlb	0	; () banked
 14268  00255E  519E               	movf	(golay_correct@s+3)& (0+255),w,b
 14269  002560  0100               	movlb	0	; () banked
 14270  002562  1988               	xorwf	(golay_correct@cw+3)& (0+255),w,b
 14271  002564  0100               	movlb	0	; () banked
 14272  002566  6F88               	movwf	(golay_correct@cw+3)& (0+255),b
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;easat2_golay_CRCGcor.c: 123: cw=golay_rotate_right(cw,i);
 14276  002568  C085  F01C         	movff	golay_correct@cw,golay_rotate_right@cw
 14277  00256C  C086  F01D         	movff	golay_correct@cw+1,golay_rotate_right@cw+1
 14278  002570  C087  F01E         	movff	golay_correct@cw+2,golay_rotate_right@cw+2
 14279  002574  C088  F01F         	movff	golay_correct@cw+3,golay_rotate_right@cw+3
 14280  002578  C099  F020         	movff	golay_correct@i,golay_rotate_right@n
 14281  00257C  C09A  F021         	movff	golay_correct@i+1,golay_rotate_right@n+1
 14282  002580  EC13  F020         	call	_golay_rotate_right	;wreg free
 14283  002584  C01C  F085         	movff	?_golay_rotate_right,golay_correct@cw
 14284  002588  C01D  F086         	movff	?_golay_rotate_right+1,golay_correct@cw+1
 14285  00258C  C01E  F087         	movff	?_golay_rotate_right+2,golay_correct@cw+2
 14286  002590  C01F  F088         	movff	?_golay_rotate_right+3,golay_correct@cw+3
 14287                           
 14288                           ;easat2_golay_CRCGcor.c: 125: if (j >= 0)
 14289  002594  0100               	movlb	0	; () banked
 14290  002596  BFA0               	btfsc	(golay_correct@j+1)& (0+255),7,b
 14291  002598  D015               	goto	l6379
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;easat2_golay_CRCGcor.c: 126: *errs=*errs+1;
 14295  00259A  C089  FFD9         	movff	golay_correct@errs,fsr2l
 14296  00259E  C08A  FFDA         	movff	golay_correct@errs+1,fsr2h
 14297  0025A2  CFDE F08B          	movff	postinc2,??_golay_correct
 14298  0025A6  CFDD F08C          	movff	postdec2,??_golay_correct+1
 14299  0025AA  0E01               	movlw	1
 14300  0025AC  0100               	movlb	0	; () banked
 14301  0025AE  278B               	addwf	??_golay_correct& (0+255),f,b
 14302  0025B0  0E00               	movlw	0
 14303  0025B2  238C               	addwfc	(??_golay_correct+1)& (0+255),f,b
 14304  0025B4  C089  FFD9         	movff	golay_correct@errs,fsr2l
 14305  0025B8  C08A  FFDA         	movff	golay_correct@errs+1,fsr2h
 14306  0025BC  C08B  FFDE         	movff	??_golay_correct,postinc2
 14307  0025C0  C08C  FFDD         	movff	??_golay_correct+1,postdec2
 14308  0025C4                     l6379:
 14309                           
 14310                           ; BSR set to: 0
 14311                           ;easat2_golay_CRCGcor.c: 128: return(s=cw);
 14312  0025C4  C085  F09B         	movff	golay_correct@cw,golay_correct@s
 14313  0025C8  C086  F09C         	movff	golay_correct@cw+1,golay_correct@s+1
 14314  0025CC  C087  F09D         	movff	golay_correct@cw+2,golay_correct@s+2
 14315  0025D0  C088  F09E         	movff	golay_correct@cw+3,golay_correct@s+3
 14316  0025D4  C09B  F085         	movff	golay_correct@s,?_golay_correct
 14317  0025D8  C09C  F086         	movff	golay_correct@s+1,?_golay_correct+1
 14318  0025DC  C09D  F087         	movff	golay_correct@s+2,?_golay_correct+2
 14319  0025E0  C09E  F088         	movff	golay_correct@s+3,?_golay_correct+3
 14320                           
 14321                           ; BSR set to: 0
 14322  0025E4  0012               	return	
 14323  0025E6                     l6385:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;easat2_golay_CRCGcor.c: 130: else
 14327                           ;easat2_golay_CRCGcor.c: 131: {
 14328                           ;easat2_golay_CRCGcor.c: 132: cw=golay_rotate_left(cw,1);
 14329  0025E6  C085  F01C         	movff	golay_correct@cw,golay_rotate_left@cw
 14330  0025EA  C086  F01D         	movff	golay_correct@cw+1,golay_rotate_left@cw+1
 14331  0025EE  C087  F01E         	movff	golay_correct@cw+2,golay_rotate_left@cw+2
 14332  0025F2  C088  F01F         	movff	golay_correct@cw+3,golay_rotate_left@cw+3
 14333  0025F6  0E00               	movlw	0
 14334  0025F8  6E21               	movwf	golay_rotate_left@n+1,c
 14335  0025FA  0E01               	movlw	1
 14336  0025FC  6E20               	movwf	golay_rotate_left@n,c
 14337  0025FE  EC95  F020         	call	_golay_rotate_left	;wreg free
 14338  002602  C01C  F085         	movff	?_golay_rotate_left,golay_correct@cw
 14339  002606  C01D  F086         	movff	?_golay_rotate_left+1,golay_correct@cw+1
 14340  00260A  C01E  F087         	movff	?_golay_rotate_left+2,golay_correct@cw+2
 14341  00260E  C01F  F088         	movff	?_golay_rotate_left+3,golay_correct@cw+3
 14342                           
 14343                           ;easat2_golay_CRCGcor.c: 133: s=golay_syndrome(cw);
 14344  002612  C085  F01C         	movff	golay_correct@cw,golay_syndrome@cw
 14345  002616  C086  F01D         	movff	golay_correct@cw+1,golay_syndrome@cw+1
 14346  00261A  C087  F01E         	movff	golay_correct@cw+2,golay_syndrome@cw+2
 14347  00261E  C088  F01F         	movff	golay_correct@cw+3,golay_syndrome@cw+3
 14348  002622  EC56  F020         	call	_golay_syndrome	;wreg free
 14349  002626  C01C  F09B         	movff	?_golay_syndrome,golay_correct@s
 14350  00262A  C01D  F09C         	movff	?_golay_syndrome+1,golay_correct@s+1
 14351  00262E  C01E  F09D         	movff	?_golay_syndrome+2,golay_correct@s+2
 14352  002632  C01F  F09E         	movff	?_golay_syndrome+3,golay_correct@s+3
 14353  002636  0100               	movlb	0	; () banked
 14354  002638  4B99               	infsnz	golay_correct@i& (0+255),f,b
 14355  00263A  2B9A               	incf	(golay_correct@i+1)& (0+255),f,b
 14356                           
 14357                           ; BSR set to: 0
 14358  00263C  0100               	movlb	0	; () banked
 14359  00263E  BF9A               	btfsc	(golay_correct@i+1)& (0+255),7,b
 14360  002640  D756               	goto	l6369
 14361  002642  0100               	movlb	0	; () banked
 14362  002644  519A               	movf	(golay_correct@i+1)& (0+255),w,b
 14363  002646  E101               	bnz	l6391
 14364  002648  D74B               	goto	L8
 14365  00264A                     l6391:
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;easat2_golay_CRCGcor.c: 134: }
 14369                           ;easat2_golay_CRCGcor.c: 135: }
 14370                           ;easat2_golay_CRCGcor.c: 136: j++;
 14371  00264A  0100               	movlb	0	; () banked
 14372  00264C  4B9F               	infsnz	golay_correct@j& (0+255),f,b
 14373  00264E  2BA0               	incf	(golay_correct@j+1)& (0+255),f,b
 14374                           
 14375                           ;easat2_golay_CRCGcor.c: 137: }
 14376  002650  D009               	goto	l6393
 14377  002652                     l575:
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;easat2_golay_CRCGcor.c: 138: else
 14381                           ;easat2_golay_CRCGcor.c: 139: return(cw);
 14382  002652  C085  F085         	movff	golay_correct@cw,?_golay_correct
 14383  002656  C086  F086         	movff	golay_correct@cw+1,?_golay_correct+1
 14384  00265A  C087  F087         	movff	golay_correct@cw+2,?_golay_correct+2
 14385  00265E  C088  F088         	movff	golay_correct@cw+3,?_golay_correct+3
 14386  002662  0012               	return	
 14387  002664                     l6393:
 14388                           
 14389                           ; BSR set to: 0
 14390  002664  0100               	movlb	0	; () banked
 14391  002666  BFA0               	btfsc	(golay_correct@j+1)& (0+255),7,b
 14392  002668  D6C0               	goto	l6351
 14393  00266A  0100               	movlb	0	; () banked
 14394  00266C  51A0               	movf	(golay_correct@j+1)& (0+255),w,b
 14395  00266E  E105               	bnz	u7660
 14396  002670  0E17               	movlw	23
 14397  002672  0100               	movlb	0	; () banked
 14398  002674  5D9F               	subwf	golay_correct@j& (0+255),w,b
 14399  002676  A0D8               	btfss	status,0,c
 14400  002678  D6B8               	goto	l6351
 14401  00267A                     u7660:
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;easat2_golay_CRCGcor.c: 140: }
 14405                           ;easat2_golay_CRCGcor.c: 142: return(cwsaver);
 14406  00267A  C091  F085         	movff	golay_correct@cwsaver,?_golay_correct
 14407  00267E  C092  F086         	movff	golay_correct@cwsaver+1,?_golay_correct+1
 14408  002682  C093  F087         	movff	golay_correct@cwsaver+2,?_golay_correct+2
 14409  002686  C094  F088         	movff	golay_correct@cwsaver+3,?_golay_correct+3
 14410                           
 14411                           ; BSR set to: 0
 14412  00268A  0012               	return		;funcret
 14413  00268C                     __end_of_golay_correct:
 14414                           	opt stack 0
 14415                           tosu	equ	0xFFF
 14416                           tosh	equ	0xFFE
 14417                           tosl	equ	0xFFD
 14418                           pclath	equ	0xFFA
 14419                           tblptru	equ	0xFF8
 14420                           tblptrh	equ	0xFF7
 14421                           tblptrl	equ	0xFF6
 14422                           tablat	equ	0xFF5
 14423                           prodh	equ	0xFF4
 14424                           prodl	equ	0xFF3
 14425                           intcon	equ	0xFF2
 14426                           indf0	equ	0xFEF
 14427                           postinc0	equ	0xFEE
 14428                           fsr0h	equ	0xFEA
 14429                           fsr0l	equ	0xFE9
 14430                           wreg	equ	0xFE8
 14431                           indf1	equ	0xFE7
 14432                           postdec1	equ	0xFE5
 14433                           fsr1h	equ	0xFE2
 14434                           fsr1l	equ	0xFE1
 14435                           indf2	equ	0xFDF
 14436                           postinc2	equ	0xFDE
 14437                           postdec2	equ	0xFDD
 14438                           fsr2h	equ	0xFDA
 14439                           fsr2l	equ	0xFD9
 14440                           status	equ	0xFD8
 14441                           
 14442 ;; *************** function _golay_weight *****************
 14443 ;; Defined at:
 14444 ;;		line 13 in file "easat2_golay_CRCGcor.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  cw              4   27[COMRAM] unsigned long 
 14447 ;; Auto vars:     Size  Location     Type
 14448 ;;  wgt            16   17[BANK0 ] const unsigned char [16]
 14449 ;;  bits            2   35[BANK0 ] int 
 14450 ;;  k               2   33[BANK0 ] int 
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  2   27[COMRAM] int 
 14453 ;; Registers used:
 14454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14460 ;;      Params:         4       0       0       0       0       0       0
 14461 ;;      Locals:         0      20       0       0       0       0       0
 14462 ;;      Temps:          3       0       0       0       0       0       0
 14463 ;;      Totals:         7      20       0       0       0       0       0
 14464 ;;Total ram usage:       27 bytes
 14465 ;; Hardware stack levels used:    1
 14466 ;; Hardware stack levels required when called:    2
 14467 ;; This function calls:
 14468 ;;		Nothing
 14469 ;; This function is called by:
 14470 ;;		_golay_correct
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           	psect	text58
 14475  003D34                     __ptext58:
 14476                           	opt stack 0
 14477  003D34                     _golay_weight:
 14478                           	opt stack 24
 14479                           
 14480                           ;easat2_golay_CRCGcor.c: 17: int bits,k;
 14481                           ;easat2_golay_CRCGcor.c: 20: const char wgt[16] = {0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4};
 14482                           
 14483                           ; BSR set to: 0
 14484                           ;incstack = 0
 14485  003D34  0E4B               	movlw	low golay_weight@F87
 14486  003D36  6EF6               	movwf	tblptrl,c
 14487  003D38                     	if	1	;There is more than 1 active tblptr byte
 14488  003D38  0E7F               	movlw	high golay_weight@F87
 14489  003D3A  6EF7               	movwf	tblptrh,c
 14490  003D3C                     	endif
 14491  003D3C                     	if	0	;There are less than 3 active tblptr bytes
 14492  003D3C                     	endif
 14493  003D3C  EE20  F071         	lfsr	2,golay_weight@wgt
 14494  003D40  0E0F               	movlw	15
 14495  003D42                     u6770:
 14496  003D42  0009               	tblrd		*+
 14497  003D44  CFF5 FFDE          	movff	tablat,postinc2
 14498  003D48  06E8               	decf	wreg,f,c
 14499  003D4A  E2FB               	bc	u6770
 14500                           
 14501                           ;easat2_golay_CRCGcor.c: 22: bits=0;
 14502  003D4C  0E00               	movlw	0
 14503  003D4E  0100               	movlb	0	; () banked
 14504  003D50  6F84               	movwf	(golay_weight@bits+1)& (0+255),b
 14505  003D52  0E00               	movlw	0
 14506  003D54  6F83               	movwf	golay_weight@bits& (0+255),b
 14507                           
 14508                           ; BSR set to: 0
 14509                           ;easat2_golay_CRCGcor.c: 23: k=0;
 14510  003D56  0E00               	movlw	0
 14511  003D58  0100               	movlb	0	; () banked
 14512  003D5A  6F82               	movwf	(golay_weight@k+1)& (0+255),b
 14513  003D5C  0E00               	movlw	0
 14514  003D5E  6F81               	movwf	golay_weight@k& (0+255),b
 14515                           
 14516                           ;easat2_golay_CRCGcor.c: 25: while ((k<6) && (cw))
 14517  003D60  D024               	goto	l5979
 14518  003D62                     l5973:
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;easat2_golay_CRCGcor.c: 26: {
 14522                           ;easat2_golay_CRCGcor.c: 27: bits=bits+wgt[cw & 0xf];
 14523  003D62  0E0F               	movlw	15
 14524  003D64  141C               	andwf	golay_weight@cw,w,c
 14525  003D66  6E20               	movwf	??_golay_weight& (0+255),c
 14526  003D68  0E00               	movlw	0
 14527  003D6A  141D               	andwf	golay_weight@cw+1,w,c
 14528  003D6C  6E21               	movwf	(??_golay_weight+1)& (0+255),c
 14529  003D6E  0E71               	movlw	low golay_weight@wgt
 14530  003D70  2420               	addwf	??_golay_weight,w,c
 14531  003D72  6ED9               	movwf	fsr2l,c
 14532  003D74  0E00               	movlw	high golay_weight@wgt
 14533  003D76  2021               	addwfc	??_golay_weight+1,w,c
 14534  003D78  6EDA               	movwf	fsr2h,c
 14535  003D7A  50DF               	movf	indf2,w,c
 14536  003D7C  6E22               	movwf	(??_golay_weight+2)& (0+255),c
 14537  003D7E  5022               	movf	??_golay_weight+2,w,c
 14538  003D80  0100               	movlb	0	; () banked
 14539  003D82  2583               	addwf	golay_weight@bits& (0+255),w,b
 14540  003D84  0100               	movlb	0	; () banked
 14541  003D86  6F83               	movwf	golay_weight@bits& (0+255),b
 14542  003D88  0E00               	movlw	0
 14543  003D8A  0100               	movlb	0	; () banked
 14544  003D8C  2184               	addwfc	(golay_weight@bits+1)& (0+255),w,b
 14545  003D8E  0100               	movlb	0	; () banked
 14546  003D90  6F84               	movwf	(golay_weight@bits+1)& (0+255),b
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;easat2_golay_CRCGcor.c: 28: cw>>=4;
 14550  003D92  0E04               	movlw	4
 14551  003D94  6E20               	movwf	??_golay_weight& (0+255),c
 14552  003D96                     u6785:
 14553  003D96  90D8               	bcf	status,0,c
 14554  003D98  321F               	rrcf	golay_weight@cw+3,f,c
 14555  003D9A  321E               	rrcf	golay_weight@cw+2,f,c
 14556  003D9C  321D               	rrcf	golay_weight@cw+1,f,c
 14557  003D9E  321C               	rrcf	golay_weight@cw,f,c
 14558  003DA0  2E20               	decfsz	??_golay_weight& (0+255),f,c
 14559  003DA2  D7F9               	goto	u6785
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;easat2_golay_CRCGcor.c: 29: k++;
 14563  003DA4  0100               	movlb	0	; () banked
 14564  003DA6  4B81               	infsnz	golay_weight@k& (0+255),f,b
 14565  003DA8  2B82               	incf	(golay_weight@k+1)& (0+255),f,b
 14566  003DAA                     l5979:
 14567                           
 14568                           ; BSR set to: 0
 14569  003DAA  0100               	movlb	0	; () banked
 14570  003DAC  BF82               	btfsc	(golay_weight@k+1)& (0+255),7,b
 14571  003DAE  D008               	goto	l5981
 14572  003DB0  0100               	movlb	0	; () banked
 14573  003DB2  5182               	movf	(golay_weight@k+1)& (0+255),w,b
 14574  003DB4  E10B               	bnz	l549
 14575  003DB6  0E06               	movlw	6
 14576  003DB8  0100               	movlb	0	; () banked
 14577  003DBA  5D81               	subwf	golay_weight@k& (0+255),w,b
 14578  003DBC  B0D8               	btfsc	status,0,c
 14579  003DBE  D006               	goto	l549
 14580  003DC0                     l5981:
 14581                           
 14582                           ; BSR set to: 0
 14583  003DC0  501C               	movf	golay_weight@cw,w,c
 14584  003DC2  101D               	iorwf	golay_weight@cw+1,w,c
 14585  003DC4  101E               	iorwf	golay_weight@cw+2,w,c
 14586  003DC6  101F               	iorwf	golay_weight@cw+3,w,c
 14587  003DC8  A4D8               	btfss	status,2,c
 14588  003DCA  D7CB               	goto	l5973
 14589  003DCC                     l549:
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;easat2_golay_CRCGcor.c: 30: }
 14593                           ;easat2_golay_CRCGcor.c: 32: return(bits);
 14594  003DCC  C083  F01C         	movff	golay_weight@bits,?_golay_weight
 14595  003DD0  C084  F01D         	movff	golay_weight@bits+1,?_golay_weight+1
 14596                           
 14597                           ; BSR set to: 0
 14598  003DD4  0012               	return		;funcret
 14599  003DD6                     __end_of_golay_weight:
 14600                           	opt stack 0
 14601                           tosu	equ	0xFFF
 14602                           tosh	equ	0xFFE
 14603                           tosl	equ	0xFFD
 14604                           pclath	equ	0xFFA
 14605                           tblptru	equ	0xFF8
 14606                           tblptrh	equ	0xFF7
 14607                           tblptrl	equ	0xFF6
 14608                           tablat	equ	0xFF5
 14609                           prodh	equ	0xFF4
 14610                           prodl	equ	0xFF3
 14611                           intcon	equ	0xFF2
 14612                           indf0	equ	0xFEF
 14613                           postinc0	equ	0xFEE
 14614                           fsr0h	equ	0xFEA
 14615                           fsr0l	equ	0xFE9
 14616                           wreg	equ	0xFE8
 14617                           indf1	equ	0xFE7
 14618                           postdec1	equ	0xFE5
 14619                           fsr1h	equ	0xFE2
 14620                           fsr1l	equ	0xFE1
 14621                           indf2	equ	0xFDF
 14622                           postinc2	equ	0xFDE
 14623                           postdec2	equ	0xFDD
 14624                           fsr2h	equ	0xFDA
 14625                           fsr2l	equ	0xFD9
 14626                           status	equ	0xFD8
 14627                           
 14628 ;; *************** function _golay_syndrome *****************
 14629 ;; Defined at:
 14630 ;;		line 57 in file "easat2_golay_CRCGcod.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  cw              4   27[COMRAM] unsigned long 
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  i               2   35[COMRAM] int 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  4   27[COMRAM] unsigned long 
 14637 ;; Registers used:
 14638 ;;		wreg, status,2, status,0
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14644 ;;      Params:         4       0       0       0       0       0       0
 14645 ;;      Locals:         2       0       0       0       0       0       0
 14646 ;;      Temps:          4       0       0       0       0       0       0
 14647 ;;      Totals:        10       0       0       0       0       0       0
 14648 ;;Total ram usage:       10 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:    2
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_func_command_decode
 14655 ;;		_golay_correct
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659                           	psect	text59
 14660  0040AC                     __ptext59:
 14661                           	opt stack 0
 14662  0040AC                     _golay_syndrome:
 14663                           	opt stack 25
 14664                           
 14665                           ;easat2_golay_CRCGcod.c: 61: int i;
 14666                           ;easat2_golay_CRCGcod.c: 62: cw&=0x7fffffl;
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;incstack = 0
 14670  0040AC  0EFF               	movlw	255
 14671  0040AE  161C               	andwf	golay_syndrome@cw,f,c
 14672  0040B0  0EFF               	movlw	255
 14673  0040B2  161D               	andwf	golay_syndrome@cw+1,f,c
 14674  0040B4  0E7F               	movlw	127
 14675  0040B6  161E               	andwf	golay_syndrome@cw+2,f,c
 14676  0040B8  0E00               	movlw	0
 14677  0040BA  161F               	andwf	golay_syndrome@cw+3,f,c
 14678                           
 14679                           ;easat2_golay_CRCGcod.c: 63: for (i=1; i<=12; i++)
 14680  0040BC  0E00               	movlw	0
 14681  0040BE  6E25               	movwf	golay_syndrome@i+1,c
 14682  0040C0  0E01               	movlw	1
 14683  0040C2  6E24               	movwf	golay_syndrome@i,c
 14684  0040C4                     l5933:
 14685  0040C4  BE25               	btfsc	golay_syndrome@i+1,7,c
 14686  0040C6  D006               	goto	l528
 14687  0040C8  5025               	movf	golay_syndrome@i+1,w,c
 14688  0040CA  E116               	bnz	l5943
 14689  0040CC  0E0D               	movlw	13
 14690  0040CE  5C24               	subwf	golay_syndrome@i,w,c
 14691  0040D0  B0D8               	btfsc	status,0,c
 14692  0040D2  D012               	goto	l5943
 14693  0040D4                     l528:
 14694                           
 14695                           ;easat2_golay_CRCGcod.c: 64: {
 14696                           ;easat2_golay_CRCGcod.c: 65: if (cw & 1)
 14697  0040D4  A01C               	btfss	golay_syndrome@cw,0,c
 14698  0040D6  D008               	goto	l5939
 14699                           
 14700                           ;easat2_golay_CRCGcod.c: 66: cw^=0xAE3;
 14701  0040D8  0EE3               	movlw	227
 14702  0040DA  1A1C               	xorwf	golay_syndrome@cw,f,c
 14703  0040DC  0E0A               	movlw	10
 14704  0040DE  1A1D               	xorwf	golay_syndrome@cw+1,f,c
 14705  0040E0  0E00               	movlw	0
 14706  0040E2  1A1E               	xorwf	golay_syndrome@cw+2,f,c
 14707  0040E4  0E00               	movlw	0
 14708  0040E6  1A1F               	xorwf	golay_syndrome@cw+3,f,c
 14709  0040E8                     l5939:
 14710                           
 14711                           ;easat2_golay_CRCGcod.c: 67: cw>>=1;
 14712  0040E8  90D8               	bcf	status,0,c
 14713  0040EA  321F               	rrcf	golay_syndrome@cw+3,f,c
 14714  0040EC  321E               	rrcf	golay_syndrome@cw+2,f,c
 14715  0040EE  321D               	rrcf	golay_syndrome@cw+1,f,c
 14716  0040F0  321C               	rrcf	golay_syndrome@cw,f,c
 14717  0040F2  4A24               	infsnz	golay_syndrome@i,f,c
 14718  0040F4  2A25               	incf	golay_syndrome@i+1,f,c
 14719  0040F6  D7E6               	goto	l5933
 14720  0040F8                     l5943:
 14721                           
 14722                           ;easat2_golay_CRCGcod.c: 68: }
 14723                           ;easat2_golay_CRCGcod.c: 69: return(cw<<12);
 14724  0040F8  C01C  F020         	movff	golay_syndrome@cw,??_golay_syndrome
 14725  0040FC  C01D  F021         	movff	golay_syndrome@cw+1,??_golay_syndrome+1
 14726  004100  C01E  F022         	movff	golay_syndrome@cw+2,??_golay_syndrome+2
 14727  004104  C01F  F023         	movff	golay_syndrome@cw+3,??_golay_syndrome+3
 14728  004108  0E0C               	movlw	12
 14729  00410A                     u6755:
 14730  00410A  90D8               	bcf	status,0,c
 14731  00410C  3620               	rlcf	??_golay_syndrome,f,c
 14732  00410E  3621               	rlcf	??_golay_syndrome+1,f,c
 14733  004110  3622               	rlcf	??_golay_syndrome+2,f,c
 14734  004112  3623               	rlcf	??_golay_syndrome+3,f,c
 14735  004114  2EE8               	decfsz	wreg,f,c
 14736  004116  D7F9               	goto	u6755
 14737  004118  C020  F01C         	movff	??_golay_syndrome,?_golay_syndrome
 14738  00411C  C021  F01D         	movff	??_golay_syndrome+1,?_golay_syndrome+1
 14739  004120  C022  F01E         	movff	??_golay_syndrome+2,?_golay_syndrome+2
 14740  004124  C023  F01F         	movff	??_golay_syndrome+3,?_golay_syndrome+3
 14741  004128  0012               	return	
 14742  00412A                     __end_of_golay_syndrome:
 14743                           	opt stack 0
 14744                           tosu	equ	0xFFF
 14745                           tosh	equ	0xFFE
 14746                           tosl	equ	0xFFD
 14747                           pclath	equ	0xFFA
 14748                           tblptru	equ	0xFF8
 14749                           tblptrh	equ	0xFF7
 14750                           tblptrl	equ	0xFF6
 14751                           tablat	equ	0xFF5
 14752                           prodh	equ	0xFF4
 14753                           prodl	equ	0xFF3
 14754                           intcon	equ	0xFF2
 14755                           indf0	equ	0xFEF
 14756                           postinc0	equ	0xFEE
 14757                           fsr0h	equ	0xFEA
 14758                           fsr0l	equ	0xFE9
 14759                           wreg	equ	0xFE8
 14760                           indf1	equ	0xFE7
 14761                           postdec1	equ	0xFE5
 14762                           fsr1h	equ	0xFE2
 14763                           fsr1l	equ	0xFE1
 14764                           indf2	equ	0xFDF
 14765                           postinc2	equ	0xFDE
 14766                           postdec2	equ	0xFDD
 14767                           fsr2h	equ	0xFDA
 14768                           fsr2l	equ	0xFD9
 14769                           status	equ	0xFD8
 14770                           
 14771 ;; *************** function _golay_rotate_right *****************
 14772 ;; Defined at:
 14773 ;;		line 58 in file "easat2_golay_CRCGcor.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;  cw              4   27[COMRAM] unsigned long 
 14776 ;;  n               2   31[COMRAM] int 
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;  i               2   37[COMRAM] int 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  4   27[COMRAM] unsigned long 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2, status,0
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14788 ;;      Params:         6       0       0       0       0       0       0
 14789 ;;      Locals:         2       0       0       0       0       0       0
 14790 ;;      Temps:          4       0       0       0       0       0       0
 14791 ;;      Totals:        12       0       0       0       0       0       0
 14792 ;;Total ram usage:       12 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    2
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_golay_correct
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text60
 14803  004026                     __ptext60:
 14804                           	opt stack 0
 14805  004026                     _golay_rotate_right:
 14806                           	opt stack 24
 14807                           
 14808                           ;easat2_golay_CRCGcor.c: 61: int i;
 14809                           ;easat2_golay_CRCGcor.c: 63: if (n != 0)
 14810                           
 14811                           ;incstack = 0
 14812  004026  5020               	movf	golay_rotate_right@n,w,c
 14813  004028  1021               	iorwf	golay_rotate_right@n+1,w,c
 14814  00402A  B4D8               	btfsc	status,2,c
 14815  00402C  D032               	goto	l6007
 14816                           
 14817                           ;easat2_golay_CRCGcor.c: 64: {
 14818                           ;easat2_golay_CRCGcor.c: 65: for (i=1; i<=n; i++)
 14819  00402E  0E00               	movlw	0
 14820  004030  6E27               	movwf	golay_rotate_right@i+1,c
 14821  004032  0E01               	movlw	1
 14822  004034  6E26               	movwf	golay_rotate_right@i,c
 14823  004036  D023               	goto	l6005
 14824  004038                     l564:
 14825                           
 14826                           ;easat2_golay_CRCGcor.c: 66: {
 14827                           ;easat2_golay_CRCGcor.c: 67: if ((cw & 1) != 0)
 14828  004038  A01C               	btfss	golay_rotate_right@cw,0,c
 14829  00403A  D01A               	goto	l6003
 14830                           
 14831                           ;easat2_golay_CRCGcor.c: 68: cw=(cw >> 1) | 0x400000l;
 14832  00403C  C01C  F022         	movff	golay_rotate_right@cw,??_golay_rotate_right
 14833  004040  C01D  F023         	movff	golay_rotate_right@cw+1,??_golay_rotate_right+1
 14834  004044  C01E  F024         	movff	golay_rotate_right@cw+2,??_golay_rotate_right+2
 14835  004048  C01F  F025         	movff	golay_rotate_right@cw+3,??_golay_rotate_right+3
 14836  00404C  90D8               	bcf	status,0,c
 14837  00404E  3225               	rrcf	??_golay_rotate_right+3,f,c
 14838  004050  3224               	rrcf	??_golay_rotate_right+2,f,c
 14839  004052  3223               	rrcf	??_golay_rotate_right+1,f,c
 14840  004054  3222               	rrcf	??_golay_rotate_right,f,c
 14841  004056  0E00               	movlw	0
 14842  004058  1022               	iorwf	??_golay_rotate_right,w,c
 14843  00405A  6E1C               	movwf	golay_rotate_right@cw,c
 14844  00405C  0E00               	movlw	0
 14845  00405E  1023               	iorwf	??_golay_rotate_right+1,w,c
 14846  004060  6E1D               	movwf	golay_rotate_right@cw+1,c
 14847  004062  0E40               	movlw	64
 14848  004064  1024               	iorwf	??_golay_rotate_right+2,w,c
 14849  004066  6E1E               	movwf	golay_rotate_right@cw+2,c
 14850  004068  0E00               	movlw	0
 14851  00406A  1025               	iorwf	??_golay_rotate_right+3,w,c
 14852  00406C  6E1F               	movwf	golay_rotate_right@cw+3,c
 14853  00406E  D005               	goto	l566
 14854  004070                     l6003:
 14855                           
 14856                           ;easat2_golay_CRCGcor.c: 69: else
 14857                           ;easat2_golay_CRCGcor.c: 70: cw>>=1;
 14858  004070  90D8               	bcf	status,0,c
 14859  004072  321F               	rrcf	golay_rotate_right@cw+3,f,c
 14860  004074  321E               	rrcf	golay_rotate_right@cw+2,f,c
 14861  004076  321D               	rrcf	golay_rotate_right@cw+1,f,c
 14862  004078  321C               	rrcf	golay_rotate_right@cw,f,c
 14863  00407A                     l566:
 14864  00407A  4A26               	infsnz	golay_rotate_right@i,f,c
 14865  00407C  2A27               	incf	golay_rotate_right@i+1,f,c
 14866  00407E                     l6005:
 14867  00407E  5026               	movf	golay_rotate_right@i,w,c
 14868  004080  5C20               	subwf	golay_rotate_right@n,w,c
 14869  004082  5021               	movf	golay_rotate_right@n+1,w,c
 14870  004084  0A80               	xorlw	128
 14871  004086  6E22               	movwf	??_golay_rotate_right& (0+255),c
 14872  004088  5027               	movf	golay_rotate_right@i+1,w,c
 14873  00408A  0A80               	xorlw	128
 14874  00408C  5822               	subwfb	??_golay_rotate_right& (0+255),w,c
 14875  00408E  B0D8               	btfsc	status,0,c
 14876  004090  D7D3               	goto	l564
 14877  004092                     l6007:
 14878                           
 14879                           ;easat2_golay_CRCGcor.c: 71: }
 14880                           ;easat2_golay_CRCGcor.c: 72: }
 14881                           ;easat2_golay_CRCGcor.c: 74: return(cw & 0x7fffffl);
 14882  004092  0EFF               	movlw	255
 14883  004094  141C               	andwf	golay_rotate_right@cw,w,c
 14884  004096  6E1C               	movwf	?_golay_rotate_right,c
 14885  004098  0EFF               	movlw	255
 14886  00409A  141D               	andwf	golay_rotate_right@cw+1,w,c
 14887  00409C  6E1D               	movwf	?_golay_rotate_right+1,c
 14888  00409E  0E7F               	movlw	127
 14889  0040A0  141E               	andwf	golay_rotate_right@cw+2,w,c
 14890  0040A2  6E1E               	movwf	?_golay_rotate_right+2,c
 14891  0040A4  0E00               	movlw	0
 14892  0040A6  141F               	andwf	golay_rotate_right@cw+3,w,c
 14893  0040A8  6E1F               	movwf	?_golay_rotate_right+3,c
 14894  0040AA  0012               	return	
 14895  0040AC                     __end_of_golay_rotate_right:
 14896                           	opt stack 0
 14897                           tosu	equ	0xFFF
 14898                           tosh	equ	0xFFE
 14899                           tosl	equ	0xFFD
 14900                           pclath	equ	0xFFA
 14901                           tblptru	equ	0xFF8
 14902                           tblptrh	equ	0xFF7
 14903                           tblptrl	equ	0xFF6
 14904                           tablat	equ	0xFF5
 14905                           prodh	equ	0xFF4
 14906                           prodl	equ	0xFF3
 14907                           intcon	equ	0xFF2
 14908                           indf0	equ	0xFEF
 14909                           postinc0	equ	0xFEE
 14910                           fsr0h	equ	0xFEA
 14911                           fsr0l	equ	0xFE9
 14912                           wreg	equ	0xFE8
 14913                           indf1	equ	0xFE7
 14914                           postdec1	equ	0xFE5
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           indf2	equ	0xFDF
 14918                           postinc2	equ	0xFDE
 14919                           postdec2	equ	0xFDD
 14920                           fsr2h	equ	0xFDA
 14921                           fsr2l	equ	0xFD9
 14922                           status	equ	0xFD8
 14923                           
 14924 ;; *************** function _golay_rotate_left *****************
 14925 ;; Defined at:
 14926 ;;		line 39 in file "easat2_golay_CRCGcor.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;  cw              4   27[COMRAM] unsigned long 
 14929 ;;  n               2   31[COMRAM] int 
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  i               2   37[COMRAM] int 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  4   27[COMRAM] unsigned long 
 14934 ;; Registers used:
 14935 ;;		wreg, status,2, status,0
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14941 ;;      Params:         6       0       0       0       0       0       0
 14942 ;;      Locals:         2       0       0       0       0       0       0
 14943 ;;      Temps:          4       0       0       0       0       0       0
 14944 ;;      Totals:        12       0       0       0       0       0       0
 14945 ;;Total ram usage:       12 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:    2
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_golay_correct
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           	psect	text61
 14956  00412A                     __ptext61:
 14957                           	opt stack 0
 14958  00412A                     _golay_rotate_left:
 14959                           	opt stack 24
 14960                           
 14961                           ;easat2_golay_CRCGcor.c: 42: int i;
 14962                           ;easat2_golay_CRCGcor.c: 44: if (n != 0)
 14963                           
 14964                           ;incstack = 0
 14965  00412A  5020               	movf	golay_rotate_left@n,w,c
 14966  00412C  1021               	iorwf	golay_rotate_left@n+1,w,c
 14967  00412E  B4D8               	btfsc	status,2,c
 14968  004130  D02B               	goto	l5993
 14969                           
 14970                           ;easat2_golay_CRCGcor.c: 45: {
 14971                           ;easat2_golay_CRCGcor.c: 46: for (i=1; i<=n; i++)
 14972  004132  0E00               	movlw	0
 14973  004134  6E27               	movwf	golay_rotate_left@i+1,c
 14974  004136  0E01               	movlw	1
 14975  004138  6E26               	movwf	golay_rotate_left@i,c
 14976  00413A  D01C               	goto	l5991
 14977  00413C                     l555:
 14978                           
 14979                           ;easat2_golay_CRCGcor.c: 47: {
 14980                           ;easat2_golay_CRCGcor.c: 48: if ((cw & 0x400000l) != 0)
 14981  00413C  AC1E               	btfss	golay_rotate_left@cw+2,6,c
 14982  00413E  D013               	goto	l5989
 14983                           
 14984                           ;easat2_golay_CRCGcor.c: 49: cw=(cw << 1) | 1;
 14985  004140  90D8               	bcf	status,0,c
 14986  004142  341C               	rlcf	golay_rotate_left@cw,w,c
 14987  004144  6E22               	movwf	??_golay_rotate_left& (0+255),c
 14988  004146  341D               	rlcf	golay_rotate_left@cw+1,w,c
 14989  004148  6E23               	movwf	(??_golay_rotate_left+1)& (0+255),c
 14990  00414A  341E               	rlcf	golay_rotate_left@cw+2,w,c
 14991  00414C  6E24               	movwf	(??_golay_rotate_left+2)& (0+255),c
 14992  00414E  341F               	rlcf	golay_rotate_left@cw+3,w,c
 14993  004150  6E25               	movwf	(??_golay_rotate_left+3)& (0+255),c
 14994  004152  0E01               	movlw	1
 14995  004154  1022               	iorwf	??_golay_rotate_left,w,c
 14996  004156  6E1C               	movwf	golay_rotate_left@cw,c
 14997  004158  5023               	movf	??_golay_rotate_left+1,w,c
 14998  00415A  6E1D               	movwf	golay_rotate_left@cw+1,c
 14999  00415C  5024               	movf	??_golay_rotate_left+2,w,c
 15000  00415E  6E1E               	movwf	golay_rotate_left@cw+2,c
 15001  004160  5025               	movf	??_golay_rotate_left+3,w,c
 15002  004162  6E1F               	movwf	golay_rotate_left@cw+3,c
 15003  004164  D005               	goto	l557
 15004  004166                     l5989:
 15005                           
 15006                           ;easat2_golay_CRCGcor.c: 50: else
 15007                           ;easat2_golay_CRCGcor.c: 51: cw<<=1;
 15008  004166  90D8               	bcf	status,0,c
 15009  004168  361C               	rlcf	golay_rotate_left@cw,f,c
 15010  00416A  361D               	rlcf	golay_rotate_left@cw+1,f,c
 15011  00416C  361E               	rlcf	golay_rotate_left@cw+2,f,c
 15012  00416E  361F               	rlcf	golay_rotate_left@cw+3,f,c
 15013  004170                     l557:
 15014  004170  4A26               	infsnz	golay_rotate_left@i,f,c
 15015  004172  2A27               	incf	golay_rotate_left@i+1,f,c
 15016  004174                     l5991:
 15017  004174  5026               	movf	golay_rotate_left@i,w,c
 15018  004176  5C20               	subwf	golay_rotate_left@n,w,c
 15019  004178  5021               	movf	golay_rotate_left@n+1,w,c
 15020  00417A  0A80               	xorlw	128
 15021  00417C  6E22               	movwf	??_golay_rotate_left& (0+255),c
 15022  00417E  5027               	movf	golay_rotate_left@i+1,w,c
 15023  004180  0A80               	xorlw	128
 15024  004182  5822               	subwfb	??_golay_rotate_left& (0+255),w,c
 15025  004184  B0D8               	btfsc	status,0,c
 15026  004186  D7DA               	goto	l555
 15027  004188                     l5993:
 15028                           
 15029                           ;easat2_golay_CRCGcor.c: 52: }
 15030                           ;easat2_golay_CRCGcor.c: 53: }
 15031                           ;easat2_golay_CRCGcor.c: 55: return(cw & 0x7fffffl);
 15032  004188  0EFF               	movlw	255
 15033  00418A  141C               	andwf	golay_rotate_left@cw,w,c
 15034  00418C  6E1C               	movwf	?_golay_rotate_left,c
 15035  00418E  0EFF               	movlw	255
 15036  004190  141D               	andwf	golay_rotate_left@cw+1,w,c
 15037  004192  6E1D               	movwf	?_golay_rotate_left+1,c
 15038  004194  0E7F               	movlw	127
 15039  004196  141E               	andwf	golay_rotate_left@cw+2,w,c
 15040  004198  6E1E               	movwf	?_golay_rotate_left+2,c
 15041  00419A  0E00               	movlw	0
 15042  00419C  141F               	andwf	golay_rotate_left@cw+3,w,c
 15043  00419E  6E1F               	movwf	?_golay_rotate_left+3,c
 15044  0041A0  0012               	return	
 15045  0041A2                     __end_of_golay_rotate_left:
 15046                           	opt stack 0
 15047                           tosu	equ	0xFFF
 15048                           tosh	equ	0xFFE
 15049                           tosl	equ	0xFFD
 15050                           pclath	equ	0xFFA
 15051                           tblptru	equ	0xFF8
 15052                           tblptrh	equ	0xFF7
 15053                           tblptrl	equ	0xFF6
 15054                           tablat	equ	0xFF5
 15055                           prodh	equ	0xFF4
 15056                           prodl	equ	0xFF3
 15057                           intcon	equ	0xFF2
 15058                           indf0	equ	0xFEF
 15059                           postinc0	equ	0xFEE
 15060                           fsr0h	equ	0xFEA
 15061                           fsr0l	equ	0xFE9
 15062                           wreg	equ	0xFE8
 15063                           indf1	equ	0xFE7
 15064                           postdec1	equ	0xFE5
 15065                           fsr1h	equ	0xFE2
 15066                           fsr1l	equ	0xFE1
 15067                           indf2	equ	0xFDF
 15068                           postinc2	equ	0xFDE
 15069                           postdec2	equ	0xFDD
 15070                           fsr2h	equ	0xFDA
 15071                           fsr2l	equ	0xFD9
 15072                           status	equ	0xFD8
 15073                           
 15074 ;; *************** function _init_initialize *****************
 15075 ;; Defined at:
 15076 ;;		line 18 in file "easat2_init_initialize.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;		None
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;		None
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      void 
 15083 ;; Registers used:
 15084 ;;		wreg, status,2, status,0, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15090 ;;      Params:         0       0       0       0       0       0       0
 15091 ;;      Locals:         0       0       0       0       0       0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0
 15093 ;;      Totals:         0       0       0       0       0       0       0
 15094 ;;Total ram usage:        0 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:    3
 15097 ;; This function calls:
 15098 ;;		_init_io_initialize
 15099 ;;		_init_timer1_initialize
 15100 ;;		_init_timer2_initialize
 15101 ;;		_init_watchdogs_initialize
 15102 ;;		_util_pwm_initialize
 15103 ;; This function is called by:
 15104 ;;		_main
 15105 ;; This function uses a non-reentrant model
 15106 ;;
 15107                           
 15108                           	psect	text62
 15109  004820                     __ptext62:
 15110                           	opt stack 0
 15111  004820                     _init_initialize:
 15112                           	opt stack 27
 15113                           
 15114                           ;easat2_init_initialize.c: 21: init_watchdogs_initialize();
 15115                           
 15116                           ;incstack = 0
 15117  004820  ECDA  F023         	call	_init_watchdogs_initialize	;wreg free
 15118                           
 15119                           ;easat2_init_initialize.c: 24: init_io_initialize();
 15120  004824  EC3A  F01D         	call	_init_io_initialize	;wreg free
 15121                           
 15122                           ;easat2_init_initialize.c: 27: init_timer1_initialize();
 15123  004828  EC94  F023         	call	_init_timer1_initialize	;wreg free
 15124                           
 15125                           ;easat2_init_initialize.c: 28: init_timer2_initialize();
 15126  00482C  EC03  F024         	call	_init_timer2_initialize	;wreg free
 15127                           
 15128                           ;easat2_init_initialize.c: 31: util_pwm_initialize();
 15129  004830  ECEC  F022         	call	_util_pwm_initialize	;wreg free
 15130  004834  0012               	return		;funcret
 15131  004836                     __end_of_init_initialize:
 15132                           	opt stack 0
 15133                           tosu	equ	0xFFF
 15134                           tosh	equ	0xFFE
 15135                           tosl	equ	0xFFD
 15136                           pclath	equ	0xFFA
 15137                           tblptru	equ	0xFF8
 15138                           tblptrh	equ	0xFF7
 15139                           tblptrl	equ	0xFF6
 15140                           tablat	equ	0xFF5
 15141                           prodh	equ	0xFF4
 15142                           prodl	equ	0xFF3
 15143                           intcon	equ	0xFF2
 15144                           indf0	equ	0xFEF
 15145                           postinc0	equ	0xFEE
 15146                           fsr0h	equ	0xFEA
 15147                           fsr0l	equ	0xFE9
 15148                           wreg	equ	0xFE8
 15149                           indf1	equ	0xFE7
 15150                           postdec1	equ	0xFE5
 15151                           fsr1h	equ	0xFE2
 15152                           fsr1l	equ	0xFE1
 15153                           indf2	equ	0xFDF
 15154                           postinc2	equ	0xFDE
 15155                           postdec2	equ	0xFDD
 15156                           fsr2h	equ	0xFDA
 15157                           fsr2l	equ	0xFD9
 15158                           status	equ	0xFD8
 15159                           
 15160 ;; *************** function _util_pwm_initialize *****************
 15161 ;; Defined at:
 15162 ;;		line 24 in file "easat2_util_pwm.c"
 15163 ;; Parameters:    Size  Location     Type
 15164 ;;		None
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;		None
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1    wreg      void 
 15169 ;; Registers used:
 15170 ;;		wreg, status,2
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15176 ;;      Params:         0       0       0       0       0       0       0
 15177 ;;      Locals:         0       0       0       0       0       0       0
 15178 ;;      Temps:          0       0       0       0       0       0       0
 15179 ;;      Totals:         0       0       0       0       0       0       0
 15180 ;;Total ram usage:        0 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    2
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_init_initialize
 15187 ;; This function uses a non-reentrant model
 15188 ;;
 15189                           
 15190                           	psect	text63
 15191  0045D8                     __ptext63:
 15192                           	opt stack 0
 15193  0045D8                     _util_pwm_initialize:
 15194                           	opt stack 27
 15195                           
 15196                           ;easat2_util_pwm.c: 31: (TRISDbits.TRISD2) = 1;
 15197                           
 15198                           ;incstack = 0
 15199  0045D8  8495               	bsf	3989,2,c	;volatile
 15200                           
 15201                           ;easat2_util_pwm.c: 32: (TRISDbits.TRISD3) = 1;
 15202  0045DA  8695               	bsf	3989,3,c	;volatile
 15203                           
 15204                           ;easat2_util_pwm.c: 36: CCPTMRS0bits.C2TSEL = 0;
 15205  0045DC  0EE7               	movlw	-25
 15206  0045DE  010F               	movlb	15	; () banked
 15207  0045E0  1749               	andwf	73,f,b	;volatile
 15208                           
 15209                           ;easat2_util_pwm.c: 40: PR2 = (2000000 / (4 * 1000 * 4)) - 1;
 15210  0045E2  0E7C               	movlw	124
 15211  0045E4  6EBB               	movwf	4027,c	;volatile
 15212                           
 15213                           ;easat2_util_pwm.c: 49: CCP2CONbits.P2M = 0b00;
 15214  0045E6  0E3F               	movlw	-193
 15215  0045E8  1666               	andwf	3942,f,c	;volatile
 15216                           
 15217                           ;easat2_util_pwm.c: 50: CCP2CONbits.CCP2M = 0b1100;
 15218  0045EA  5066               	movf	3942,w,c	;volatile
 15219  0045EC  0BF0               	andlw	-16
 15220  0045EE  090C               	iorlw	12
 15221  0045F0  6E66               	movwf	3942,c	;volatile
 15222                           
 15223                           ; BSR set to: 15
 15224                           ;easat2_util_pwm.c: 54: PSTR2CONbits.STR2A = 0;
 15225  0045F2  9063               	bcf	3939,0,c	;volatile
 15226                           
 15227                           ; BSR set to: 15
 15228                           ;easat2_util_pwm.c: 55: PSTR2CONbits.STR2B = 1;
 15229  0045F4  8263               	bsf	3939,1,c	;volatile
 15230                           
 15231                           ; BSR set to: 15
 15232                           ;easat2_util_pwm.c: 56: PSTR2CONbits.STR2C = 1;
 15233  0045F6  8463               	bsf	3939,2,c	;volatile
 15234                           
 15235                           ; BSR set to: 15
 15236                           ;easat2_util_pwm.c: 57: PSTR2CONbits.STR2D = 0;
 15237  0045F8  9663               	bcf	3939,3,c	;volatile
 15238                           
 15239                           ;easat2_util_pwm.c: 61: CCPR2L = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1) >> 2) & 0xFF;
 15240  0045FA  0E3E               	movlw	62
 15241  0045FC  6E67               	movwf	3943,c	;volatile
 15242                           
 15243                           ;easat2_util_pwm.c: 62: CCP2CONbits.DC2B = (2*((2000000 / (4 * 1000 * 4)) - 1 + 1)) & 0x
      +                          03;
 15244  0045FE  5066               	movf	3942,w,c	;volatile
 15245  004600  0BCF               	andlw	-49
 15246  004602  0920               	iorlw	32
 15247  004604  6E66               	movwf	3942,c	;volatile
 15248                           
 15249                           ; BSR set to: 15
 15250                           ;easat2_util_pwm.c: 66: T2CONbits.TMR2ON = 0b0;
 15251  004606  94BA               	bcf	4026,2,c	;volatile
 15252                           
 15253                           ; BSR set to: 15
 15254                           ;easat2_util_pwm.c: 70: PIR1bits.TMR2IF = 0;
 15255  004608  929E               	bcf	3998,1,c	;volatile
 15256                           
 15257                           ; BSR set to: 15
 15258  00460A  0012               	return		;funcret
 15259  00460C                     __end_of_util_pwm_initialize:
 15260                           	opt stack 0
 15261                           tosu	equ	0xFFF
 15262                           tosh	equ	0xFFE
 15263                           tosl	equ	0xFFD
 15264                           pclath	equ	0xFFA
 15265                           tblptru	equ	0xFF8
 15266                           tblptrh	equ	0xFF7
 15267                           tblptrl	equ	0xFF6
 15268                           tablat	equ	0xFF5
 15269                           prodh	equ	0xFF4
 15270                           prodl	equ	0xFF3
 15271                           intcon	equ	0xFF2
 15272                           indf0	equ	0xFEF
 15273                           postinc0	equ	0xFEE
 15274                           fsr0h	equ	0xFEA
 15275                           fsr0l	equ	0xFE9
 15276                           wreg	equ	0xFE8
 15277                           indf1	equ	0xFE7
 15278                           postdec1	equ	0xFE5
 15279                           fsr1h	equ	0xFE2
 15280                           fsr1l	equ	0xFE1
 15281                           indf2	equ	0xFDF
 15282                           postinc2	equ	0xFDE
 15283                           postdec2	equ	0xFDD
 15284                           fsr2h	equ	0xFDA
 15285                           fsr2l	equ	0xFD9
 15286                           status	equ	0xFD8
 15287                           
 15288 ;; *************** function _init_watchdogs_initialize *****************
 15289 ;; Defined at:
 15290 ;;		line 36 in file "easat2_init_initialize.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;		None
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;		None
 15295 ;; Return value:  Size  Location     Type
 15296 ;;                  1    wreg      void 
 15297 ;; Registers used:
 15298 ;;		wreg, status,2, status,0
 15299 ;; Tracked objects:
 15300 ;;		On entry : 0/0
 15301 ;;		On exit  : 0/0
 15302 ;;		Unchanged: 0/0
 15303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15304 ;;      Params:         0       0       0       0       0       0       0
 15305 ;;      Locals:         0       0       0       0       0       0       0
 15306 ;;      Temps:          1       0       0       0       0       0       0
 15307 ;;      Totals:         1       0       0       0       0       0       0
 15308 ;;Total ram usage:        1 bytes
 15309 ;; Hardware stack levels used:    1
 15310 ;; Hardware stack levels required when called:    2
 15311 ;; This function calls:
 15312 ;;		Nothing
 15313 ;; This function is called by:
 15314 ;;		_init_initialize
 15315 ;;		_main_loop
 15316 ;; This function uses a non-reentrant model
 15317 ;;
 15318                           
 15319                           	psect	text64
 15320  0047B4                     __ptext64:
 15321                           	opt stack 0
 15322  0047B4                     _init_watchdogs_initialize:
 15323                           	opt stack 27
 15324                           
 15325                           ;easat2_init_initialize.c: 39: (PORTDbits.RD5) = !(PORTDbits.RD5);
 15326                           
 15327                           ; BSR set to: 15
 15328                           ;incstack = 0
 15329  0047B4  BA83               	btfsc	3971,5,c	;volatile
 15330  0047B6  D003               	goto	u7980
 15331  0047B8  6A1C               	clrf	??_init_watchdogs_initialize& (0+255),c
 15332  0047BA  2A1C               	incf	??_init_watchdogs_initialize& (0+255),f,c
 15333  0047BC  D001               	goto	u7998
 15334  0047BE                     u7980:
 15335  0047BE  6A1C               	clrf	??_init_watchdogs_initialize& (0+255),c
 15336  0047C0                     u7998:
 15337  0047C0  3A1C               	swapf	??_init_watchdogs_initialize,f,c
 15338  0047C2  461C               	rlncf	??_init_watchdogs_initialize,f,c
 15339  0047C4  5083               	movf	3971,w,c	;volatile
 15340  0047C6  181C               	xorwf	??_init_watchdogs_initialize,w,c
 15341  0047C8  0BDF               	andlw	-33
 15342  0047CA  181C               	xorwf	??_init_watchdogs_initialize,w,c
 15343  0047CC  6E83               	movwf	3971,c	;volatile
 15344  0047CE  0004               	clrwdt		;# 
 15345  0047D0  0012               	return		;funcret
 15346  0047D2                     __end_of_init_watchdogs_initialize:
 15347                           	opt stack 0
 15348                           tosu	equ	0xFFF
 15349                           tosh	equ	0xFFE
 15350                           tosl	equ	0xFFD
 15351                           pclath	equ	0xFFA
 15352                           tblptru	equ	0xFF8
 15353                           tblptrh	equ	0xFF7
 15354                           tblptrl	equ	0xFF6
 15355                           tablat	equ	0xFF5
 15356                           prodh	equ	0xFF4
 15357                           prodl	equ	0xFF3
 15358                           intcon	equ	0xFF2
 15359                           indf0	equ	0xFEF
 15360                           postinc0	equ	0xFEE
 15361                           fsr0h	equ	0xFEA
 15362                           fsr0l	equ	0xFE9
 15363                           wreg	equ	0xFE8
 15364                           indf1	equ	0xFE7
 15365                           postdec1	equ	0xFE5
 15366                           fsr1h	equ	0xFE2
 15367                           fsr1l	equ	0xFE1
 15368                           indf2	equ	0xFDF
 15369                           postinc2	equ	0xFDE
 15370                           postdec2	equ	0xFDD
 15371                           fsr2h	equ	0xFDA
 15372                           fsr2l	equ	0xFD9
 15373                           status	equ	0xFD8
 15374                           
 15375 ;; *************** function _init_timer2_initialize *****************
 15376 ;; Defined at:
 15377 ;;		line 70 in file "easat2_init_timer.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;		None
 15380 ;; Auto vars:     Size  Location     Type
 15381 ;;		None
 15382 ;; Return value:  Size  Location     Type
 15383 ;;                  1    wreg      void 
 15384 ;; Registers used:
 15385 ;;		wreg, status,2
 15386 ;; Tracked objects:
 15387 ;;		On entry : 0/0
 15388 ;;		On exit  : 0/0
 15389 ;;		Unchanged: 0/0
 15390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15391 ;;      Params:         0       0       0       0       0       0       0
 15392 ;;      Locals:         0       0       0       0       0       0       0
 15393 ;;      Temps:          0       0       0       0       0       0       0
 15394 ;;      Totals:         0       0       0       0       0       0       0
 15395 ;;Total ram usage:        0 bytes
 15396 ;; Hardware stack levels used:    1
 15397 ;; Hardware stack levels required when called:    2
 15398 ;; This function calls:
 15399 ;;		Nothing
 15400 ;; This function is called by:
 15401 ;;		_init_initialize
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text65
 15406  004806                     __ptext65:
 15407                           	opt stack 0
 15408  004806                     _init_timer2_initialize:
 15409                           	opt stack 27
 15410                           
 15411                           ;easat2_init_timer.c: 77: T2CONbits.TMR2ON = 0;
 15412                           
 15413                           ;incstack = 0
 15414  004806  94BA               	bcf	4026,2,c	;volatile
 15415                           
 15416                           ;easat2_init_timer.c: 82: T2CONbits.T2CKPS0 = 1;
 15417  004808  80BA               	bsf	4026,0,c	;volatile
 15418                           
 15419                           ;easat2_init_timer.c: 83: T2CONbits.T2CKPS1 = 0;
 15420  00480A  92BA               	bcf	4026,1,c	;volatile
 15421                           
 15422                           ;easat2_init_timer.c: 86: T2CONbits.T2OUTPS = 0b0000;
 15423  00480C  96BA               	bcf	4026,3,c	;volatile
 15424  00480E  98BA               	bcf	4026,4,c	;volatile
 15425  004810  9ABA               	bcf	4026,5,c	;volatile
 15426  004812  9CBA               	bcf	4026,6,c	;volatile
 15427                           
 15428                           ;easat2_init_timer.c: 93: TMR2 = 0;
 15429  004814  0E00               	movlw	0
 15430  004816  6EBC               	movwf	4028,c	;volatile
 15431                           
 15432                           ;easat2_init_timer.c: 96: PIE1bits.TMR2IE = 1;
 15433  004818  829D               	bsf	3997,1,c	;volatile
 15434                           
 15435                           ;easat2_init_timer.c: 97: IPR1bits.TMR2IP = 0;
 15436  00481A  929F               	bcf	3999,1,c	;volatile
 15437                           
 15438                           ;easat2_init_timer.c: 98: PIR1bits.TMR2IF = 0;
 15439  00481C  929E               	bcf	3998,1,c	;volatile
 15440  00481E  0012               	return		;funcret
 15441  004820                     __end_of_init_timer2_initialize:
 15442                           	opt stack 0
 15443                           tosu	equ	0xFFF
 15444                           tosh	equ	0xFFE
 15445                           tosl	equ	0xFFD
 15446                           pclath	equ	0xFFA
 15447                           tblptru	equ	0xFF8
 15448                           tblptrh	equ	0xFF7
 15449                           tblptrl	equ	0xFF6
 15450                           tablat	equ	0xFF5
 15451                           prodh	equ	0xFF4
 15452                           prodl	equ	0xFF3
 15453                           intcon	equ	0xFF2
 15454                           indf0	equ	0xFEF
 15455                           postinc0	equ	0xFEE
 15456                           fsr0h	equ	0xFEA
 15457                           fsr0l	equ	0xFE9
 15458                           wreg	equ	0xFE8
 15459                           indf1	equ	0xFE7
 15460                           postdec1	equ	0xFE5
 15461                           fsr1h	equ	0xFE2
 15462                           fsr1l	equ	0xFE1
 15463                           indf2	equ	0xFDF
 15464                           postinc2	equ	0xFDE
 15465                           postdec2	equ	0xFDD
 15466                           fsr2h	equ	0xFDA
 15467                           fsr2l	equ	0xFD9
 15468                           status	equ	0xFD8
 15469                           
 15470 ;; *************** function _init_timer1_initialize *****************
 15471 ;; Defined at:
 15472 ;;		line 17 in file "easat2_init_timer.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;		None
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;		None
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  1    wreg      void 
 15479 ;; Registers used:
 15480 ;;		wreg, status,2
 15481 ;; Tracked objects:
 15482 ;;		On entry : 0/0
 15483 ;;		On exit  : 0/0
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15486 ;;      Params:         0       0       0       0       0       0       0
 15487 ;;      Locals:         0       0       0       0       0       0       0
 15488 ;;      Temps:          0       0       0       0       0       0       0
 15489 ;;      Totals:         0       0       0       0       0       0       0
 15490 ;;Total ram usage:        0 bytes
 15491 ;; Hardware stack levels used:    1
 15492 ;; Hardware stack levels required when called:    2
 15493 ;; This function calls:
 15494 ;;		Nothing
 15495 ;; This function is called by:
 15496 ;;		_init_initialize
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500                           	psect	text66
 15501  004728                     __ptext66:
 15502                           	opt stack 0
 15503  004728                     _init_timer1_initialize:
 15504                           	opt stack 27
 15505                           
 15506                           ;easat2_init_timer.c: 30: RCONbits.IPEN = 1;
 15507                           
 15508                           ;incstack = 0
 15509  004728  8ED0               	bsf	4048,7,c	;volatile
 15510                           
 15511                           ;easat2_init_timer.c: 34: T1CONbits.TMR1ON = 0;
 15512  00472A  90CD               	bcf	4045,0,c	;volatile
 15513                           
 15514                           ;easat2_init_timer.c: 37: T1CONbits.TMR1CS0 = 0;
 15515  00472C  9CCD               	bcf	4045,6,c	;volatile
 15516                           
 15517                           ;easat2_init_timer.c: 38: T1CONbits.TMR1CS1 = 0;
 15518  00472E  9ECD               	bcf	4045,7,c	;volatile
 15519                           
 15520                           ;easat2_init_timer.c: 41: T1CONbits.T1CKPS1 = 0;
 15521  004730  9ACD               	bcf	4045,5,c	;volatile
 15522                           
 15523                           ;easat2_init_timer.c: 42: T1CONbits.T1CKPS0 = 0;
 15524  004732  98CD               	bcf	4045,4,c	;volatile
 15525                           
 15526                           ;easat2_init_timer.c: 45: T1CONbits.T1OSCEN = 0;
 15527  004734  96CD               	bcf	4045,3,c	;volatile
 15528                           
 15529                           ;easat2_init_timer.c: 48: T1CONbits.RD16 = 1;
 15530  004736  82CD               	bsf	4045,1,c	;volatile
 15531                           
 15532                           ;easat2_init_timer.c: 51: TMR1H = 0xEC;
 15533  004738  0EEC               	movlw	236
 15534  00473A  6ECF               	movwf	4047,c	;volatile
 15535                           
 15536                           ;easat2_init_timer.c: 52: TMR1L = 0x77 ; 60535;
 15537  00473C  0E77               	movlw	119
 15538  00473E  6ECE               	movwf	4046,c	;volatile
 15539                           
 15540                           ;easat2_init_timer.c: 55: PIE1bits.TMR1IE = 1;
 15541  004740  809D               	bsf	3997,0,c	;volatile
 15542                           
 15543                           ;easat2_init_timer.c: 56: IPR1bits.TMR1IP = 1;
 15544  004742  809F               	bsf	3999,0,c	;volatile
 15545                           
 15546                           ;easat2_init_timer.c: 57: PIR1bits.TMR1IF = 0;
 15547  004744  909E               	bcf	3998,0,c	;volatile
 15548                           
 15549                           ;easat2_init_timer.c: 59: T1CONbits.TMR1ON = 1;
 15550  004746  80CD               	bsf	4045,0,c	;volatile
 15551                           
 15552                           ;easat2_init_timer.c: 61: INTCONbits.PEIE = 0;
 15553  004748  9CF2               	bcf	intcon,6,c	;volatile
 15554                           
 15555                           ;easat2_init_timer.c: 62: INTCONbits.GIE = 1;
 15556  00474A  8EF2               	bsf	intcon,7,c	;volatile
 15557  00474C  0012               	return		;funcret
 15558  00474E                     __end_of_init_timer1_initialize:
 15559                           	opt stack 0
 15560                           tosu	equ	0xFFF
 15561                           tosh	equ	0xFFE
 15562                           tosl	equ	0xFFD
 15563                           pclath	equ	0xFFA
 15564                           tblptru	equ	0xFF8
 15565                           tblptrh	equ	0xFF7
 15566                           tblptrl	equ	0xFF6
 15567                           tablat	equ	0xFF5
 15568                           prodh	equ	0xFF4
 15569                           prodl	equ	0xFF3
 15570                           intcon	equ	0xFF2
 15571                           indf0	equ	0xFEF
 15572                           postinc0	equ	0xFEE
 15573                           fsr0h	equ	0xFEA
 15574                           fsr0l	equ	0xFE9
 15575                           wreg	equ	0xFE8
 15576                           indf1	equ	0xFE7
 15577                           postdec1	equ	0xFE5
 15578                           fsr1h	equ	0xFE2
 15579                           fsr1l	equ	0xFE1
 15580                           indf2	equ	0xFDF
 15581                           postinc2	equ	0xFDE
 15582                           postdec2	equ	0xFDD
 15583                           fsr2h	equ	0xFDA
 15584                           fsr2l	equ	0xFD9
 15585                           status	equ	0xFD8
 15586                           
 15587 ;; *************** function _init_io_initialize *****************
 15588 ;; Defined at:
 15589 ;;		line 49 in file "easat2_init_initialize.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;		None
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1    wreg      void 
 15596 ;; Registers used:
 15597 ;;		wreg, status,2
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15603 ;;      Params:         0       0       0       0       0       0       0
 15604 ;;      Locals:         0       0       0       0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0
 15606 ;;      Totals:         0       0       0       0       0       0       0
 15607 ;;Total ram usage:        0 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; Hardware stack levels required when called:    2
 15610 ;; This function calls:
 15611 ;;		Nothing
 15612 ;; This function is called by:
 15613 ;;		_init_initialize
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text67
 15618  003A74                     __ptext67:
 15619                           	opt stack 0
 15620  003A74                     _init_io_initialize:
 15621                           	opt stack 27
 15622                           
 15623                           ;easat2_init_initialize.c: 58: VREFCON0bits.FVREN = 1;
 15624                           
 15625                           ;incstack = 0
 15626  003A74  010F               	movlb	15	; () banked
 15627  003A76  8F42               	bsf	66,7,b	;volatile
 15628                           
 15629                           ;easat2_init_initialize.c: 59: VREFCON0bits.FVRS0 = 0;
 15630  003A78  010F               	movlb	15	; () banked
 15631  003A7A  9942               	bcf	66,4,b	;volatile
 15632                           
 15633                           ;easat2_init_initialize.c: 60: VREFCON0bits.FVRS1 = 1;
 15634  003A7C  010F               	movlb	15	; () banked
 15635  003A7E  8B42               	bsf	66,5,b	;volatile
 15636                           
 15637                           ;easat2_init_initialize.c: 62: VREFCON0bits.FVRST = 1;
 15638  003A80  010F               	movlb	15	; () banked
 15639  003A82  8D42               	bsf	66,6,b	;volatile
 15640                           
 15641                           ; BSR set to: 15
 15642                           ;easat2_init_initialize.c: 67: ADCON1 = 0x08;
 15643  003A84  0E08               	movlw	8
 15644  003A86  6EC1               	movwf	4033,c	;volatile
 15645                           
 15646                           ;easat2_init_initialize.c: 68: ADCON2 = 0xAF;
 15647  003A88  0EAF               	movlw	175
 15648  003A8A  6EC0               	movwf	4032,c	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;easat2_init_initialize.c: 72: TRISAbits.TRISA0 = 1;
 15652  003A8C  8092               	bsf	3986,0,c	;volatile
 15653                           
 15654                           ; BSR set to: 15
 15655                           ;easat2_init_initialize.c: 73: TRISAbits.TRISA1 = 1;
 15656  003A8E  8292               	bsf	3986,1,c	;volatile
 15657                           
 15658                           ; BSR set to: 15
 15659                           ;easat2_init_initialize.c: 74: TRISAbits.TRISA2 = 0;
 15660  003A90  9492               	bcf	3986,2,c	;volatile
 15661                           
 15662                           ; BSR set to: 15
 15663                           ;easat2_init_initialize.c: 75: TRISAbits.TRISA3 = 1;
 15664  003A92  8692               	bsf	3986,3,c	;volatile
 15665                           
 15666                           ; BSR set to: 15
 15667                           ;easat2_init_initialize.c: 76: TRISAbits.TRISA4 = 1;
 15668  003A94  8892               	bsf	3986,4,c	;volatile
 15669                           
 15670                           ; BSR set to: 15
 15671                           ;easat2_init_initialize.c: 77: TRISAbits.TRISA5 = 1;
 15672  003A96  8A92               	bsf	3986,5,c	;volatile
 15673                           
 15674                           ; BSR set to: 15
 15675                           ;easat2_init_initialize.c: 84: ANSELAbits.ANSA0 = 1;
 15676  003A98  010F               	movlb	15	; () banked
 15677  003A9A  8138               	bsf	56,0,b	;volatile
 15678                           
 15679                           ; BSR set to: 15
 15680                           ;easat2_init_initialize.c: 85: ANSELAbits.ANSA1 = 1;
 15681  003A9C  010F               	movlb	15	; () banked
 15682  003A9E  8338               	bsf	56,1,b	;volatile
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;easat2_init_initialize.c: 86: ANSELAbits.ANSA2 = 1;
 15686  003AA0  010F               	movlb	15	; () banked
 15687  003AA2  8538               	bsf	56,2,b	;volatile
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;easat2_init_initialize.c: 87: ANSELAbits.ANSA3 = 0;
 15691  003AA4  010F               	movlb	15	; () banked
 15692  003AA6  9738               	bcf	56,3,b	;volatile
 15693                           
 15694                           ; BSR set to: 15
 15695                           ;easat2_init_initialize.c: 89: ANSELAbits.ANSA5 = 1;
 15696  003AA8  010F               	movlb	15	; () banked
 15697  003AAA  8B38               	bsf	56,5,b	;volatile
 15698                           
 15699                           ; BSR set to: 15
 15700                           ;easat2_init_initialize.c: 93: LATAbits.LATA0 = 0;
 15701  003AAC  9089               	bcf	3977,0,c	;volatile
 15702                           
 15703                           ; BSR set to: 15
 15704                           ;easat2_init_initialize.c: 94: LATAbits.LATA1 = 0;
 15705  003AAE  9289               	bcf	3977,1,c	;volatile
 15706                           
 15707                           ; BSR set to: 15
 15708                           ;easat2_init_initialize.c: 95: LATAbits.LATA2 = 0;
 15709  003AB0  9489               	bcf	3977,2,c	;volatile
 15710                           
 15711                           ; BSR set to: 15
 15712                           ;easat2_init_initialize.c: 96: LATAbits.LATA3 = 0;
 15713  003AB2  9689               	bcf	3977,3,c	;volatile
 15714                           
 15715                           ; BSR set to: 15
 15716                           ;easat2_init_initialize.c: 97: LATAbits.LATA4 = 0;
 15717  003AB4  9889               	bcf	3977,4,c	;volatile
 15718                           
 15719                           ; BSR set to: 15
 15720                           ;easat2_init_initialize.c: 98: LATAbits.LATA5 = 0;
 15721  003AB6  9A89               	bcf	3977,5,c	;volatile
 15722                           
 15723                           ;easat2_init_initialize.c: 106: WPUB = 0b00000000;
 15724  003AB8  0E00               	movlw	0
 15725  003ABA  6E61               	movwf	3937,c	;volatile
 15726                           
 15727                           ; BSR set to: 15
 15728                           ;easat2_init_initialize.c: 107: RBPU = 0b11111111;
 15729  003ABC  8EF1               	bsf	intcon2,7,c	;volatile
 15730                           
 15731                           ; BSR set to: 15
 15732                           ;easat2_init_initialize.c: 111: TRISBbits.TRISB0 = 1;
 15733  003ABE  8093               	bsf	3987,0,c	;volatile
 15734                           
 15735                           ; BSR set to: 15
 15736                           ;easat2_init_initialize.c: 112: TRISBbits.TRISB1 = 0;
 15737  003AC0  9293               	bcf	3987,1,c	;volatile
 15738                           
 15739                           ; BSR set to: 15
 15740                           ;easat2_init_initialize.c: 113: TRISBbits.TRISB2 = 0;
 15741  003AC2  9493               	bcf	3987,2,c	;volatile
 15742                           
 15743                           ; BSR set to: 15
 15744                           ;easat2_init_initialize.c: 114: TRISBbits.TRISB3 = 0;
 15745  003AC4  9693               	bcf	3987,3,c	;volatile
 15746                           
 15747                           ; BSR set to: 15
 15748                           ;easat2_init_initialize.c: 115: TRISBbits.TRISB4 = 0;
 15749  003AC6  9893               	bcf	3987,4,c	;volatile
 15750                           
 15751                           ; BSR set to: 15
 15752                           ;easat2_init_initialize.c: 116: TRISBbits.TRISB5 = 0;
 15753  003AC8  9A93               	bcf	3987,5,c	;volatile
 15754                           
 15755                           ; BSR set to: 15
 15756                           ;easat2_init_initialize.c: 117: TRISBbits.TRISB6 = 0;
 15757  003ACA  9C93               	bcf	3987,6,c	;volatile
 15758                           
 15759                           ; BSR set to: 15
 15760                           ;easat2_init_initialize.c: 118: TRISBbits.TRISB7 = 0;
 15761  003ACC  9E93               	bcf	3987,7,c	;volatile
 15762                           
 15763                           ; BSR set to: 15
 15764                           ;easat2_init_initialize.c: 122: ANSELBbits.ANSB0 = 1;
 15765  003ACE  010F               	movlb	15	; () banked
 15766  003AD0  8139               	bsf	57,0,b	;volatile
 15767                           
 15768                           ; BSR set to: 15
 15769                           ;easat2_init_initialize.c: 123: ANSELBbits.ANSB1 = 0;
 15770  003AD2  010F               	movlb	15	; () banked
 15771  003AD4  9339               	bcf	57,1,b	;volatile
 15772                           
 15773                           ; BSR set to: 15
 15774                           ;easat2_init_initialize.c: 124: ANSELBbits.ANSB2 = 0;
 15775  003AD6  010F               	movlb	15	; () banked
 15776  003AD8  9539               	bcf	57,2,b	;volatile
 15777                           
 15778                           ; BSR set to: 15
 15779                           ;easat2_init_initialize.c: 125: ANSELBbits.ANSB3 = 0;
 15780  003ADA  010F               	movlb	15	; () banked
 15781  003ADC  9739               	bcf	57,3,b	;volatile
 15782                           
 15783                           ; BSR set to: 15
 15784                           ;easat2_init_initialize.c: 127: ANSELBbits.ANSB5 = 0;
 15785  003ADE  010F               	movlb	15	; () banked
 15786  003AE0  9B39               	bcf	57,5,b	;volatile
 15787                           
 15788                           ; BSR set to: 15
 15789                           ;easat2_init_initialize.c: 131: LATBbits.LATB0 = 0;
 15790  003AE2  908A               	bcf	3978,0,c	;volatile
 15791                           
 15792                           ; BSR set to: 15
 15793                           ;easat2_init_initialize.c: 132: LATBbits.LATB1 = 0;
 15794  003AE4  928A               	bcf	3978,1,c	;volatile
 15795                           
 15796                           ; BSR set to: 15
 15797                           ;easat2_init_initialize.c: 133: LATBbits.LATB2 = 0;
 15798  003AE6  948A               	bcf	3978,2,c	;volatile
 15799                           
 15800                           ; BSR set to: 15
 15801                           ;easat2_init_initialize.c: 134: LATBbits.LATB3 = 0;
 15802  003AE8  968A               	bcf	3978,3,c	;volatile
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;easat2_init_initialize.c: 135: LATBbits.LATB4 = 0;
 15806  003AEA  988A               	bcf	3978,4,c	;volatile
 15807                           
 15808                           ; BSR set to: 15
 15809                           ;easat2_init_initialize.c: 136: LATBbits.LATB5 = 0;
 15810  003AEC  9A8A               	bcf	3978,5,c	;volatile
 15811                           
 15812                           ; BSR set to: 15
 15813                           ;easat2_init_initialize.c: 140: TRISDbits.TRISD0 = 0;
 15814  003AEE  9095               	bcf	3989,0,c	;volatile
 15815                           
 15816                           ; BSR set to: 15
 15817                           ;easat2_init_initialize.c: 141: TRISDbits.TRISD1 = 0;
 15818  003AF0  9295               	bcf	3989,1,c	;volatile
 15819                           
 15820                           ; BSR set to: 15
 15821                           ;easat2_init_initialize.c: 142: TRISDbits.TRISD2 = 0;
 15822  003AF2  9495               	bcf	3989,2,c	;volatile
 15823                           
 15824                           ; BSR set to: 15
 15825                           ;easat2_init_initialize.c: 143: TRISDbits.TRISD3 = 0;
 15826  003AF4  9695               	bcf	3989,3,c	;volatile
 15827                           
 15828                           ; BSR set to: 15
 15829                           ;easat2_init_initialize.c: 144: TRISDbits.TRISD4 = 0;
 15830  003AF6  9895               	bcf	3989,4,c	;volatile
 15831                           
 15832                           ; BSR set to: 15
 15833                           ;easat2_init_initialize.c: 145: TRISDbits.TRISD5 = 0;
 15834  003AF8  9A95               	bcf	3989,5,c	;volatile
 15835                           
 15836                           ; BSR set to: 15
 15837                           ;easat2_init_initialize.c: 146: TRISDbits.TRISD6 = 0;
 15838  003AFA  9C95               	bcf	3989,6,c	;volatile
 15839                           
 15840                           ; BSR set to: 15
 15841                           ;easat2_init_initialize.c: 147: TRISDbits.TRISD7 = 0;
 15842  003AFC  9E95               	bcf	3989,7,c	;volatile
 15843                           
 15844                           ; BSR set to: 15
 15845                           ;easat2_init_initialize.c: 151: ANSELDbits.ANSD0 = 0;
 15846  003AFE  010F               	movlb	15	; () banked
 15847  003B00  913B               	bcf	59,0,b	;volatile
 15848                           
 15849                           ; BSR set to: 15
 15850                           ;easat2_init_initialize.c: 152: ANSELDbits.ANSD1 = 0;
 15851  003B02  010F               	movlb	15	; () banked
 15852  003B04  933B               	bcf	59,1,b	;volatile
 15853                           
 15854                           ; BSR set to: 15
 15855                           ;easat2_init_initialize.c: 153: ANSELDbits.ANSD2 = 0;
 15856  003B06  010F               	movlb	15	; () banked
 15857  003B08  953B               	bcf	59,2,b	;volatile
 15858                           
 15859                           ; BSR set to: 15
 15860                           ;easat2_init_initialize.c: 154: ANSELDbits.ANSD3 = 0;
 15861  003B0A  010F               	movlb	15	; () banked
 15862  003B0C  973B               	bcf	59,3,b	;volatile
 15863                           
 15864                           ; BSR set to: 15
 15865                           ;easat2_init_initialize.c: 155: ANSELDbits.ANSD4 = 0;
 15866  003B0E  010F               	movlb	15	; () banked
 15867  003B10  993B               	bcf	59,4,b	;volatile
 15868                           
 15869                           ; BSR set to: 15
 15870                           ;easat2_init_initialize.c: 156: ANSELDbits.ANSD5 = 0;
 15871  003B12  010F               	movlb	15	; () banked
 15872  003B14  9B3B               	bcf	59,5,b	;volatile
 15873                           
 15874                           ; BSR set to: 15
 15875                           ;easat2_init_initialize.c: 157: ANSELDbits.ANSD6 = 0;
 15876  003B16  010F               	movlb	15	; () banked
 15877  003B18  9D3B               	bcf	59,6,b	;volatile
 15878                           
 15879                           ; BSR set to: 15
 15880                           ;easat2_init_initialize.c: 158: ANSELDbits.ANSD7 = 0;
 15881  003B1A  010F               	movlb	15	; () banked
 15882  003B1C  9F3B               	bcf	59,7,b	;volatile
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;easat2_init_initialize.c: 162: LATDbits.LATD0 = 0;
 15886  003B1E  908C               	bcf	3980,0,c	;volatile
 15887                           
 15888                           ; BSR set to: 15
 15889                           ;easat2_init_initialize.c: 163: LATDbits.LATD1 = 0;
 15890  003B20  928C               	bcf	3980,1,c	;volatile
 15891                           
 15892                           ; BSR set to: 15
 15893                           ;easat2_init_initialize.c: 164: LATDbits.LATD2 = 0;
 15894  003B22  948C               	bcf	3980,2,c	;volatile
 15895                           
 15896                           ; BSR set to: 15
 15897                           ;easat2_init_initialize.c: 165: LATDbits.LATD3 = 0;
 15898  003B24  968C               	bcf	3980,3,c	;volatile
 15899                           
 15900                           ; BSR set to: 15
 15901                           ;easat2_init_initialize.c: 166: LATDbits.LATD4 = 0;
 15902  003B26  988C               	bcf	3980,4,c	;volatile
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;easat2_init_initialize.c: 167: LATDbits.LATD5 = 0;
 15906  003B28  9A8C               	bcf	3980,5,c	;volatile
 15907                           
 15908                           ; BSR set to: 15
 15909                           ;easat2_init_initialize.c: 168: LATDbits.LATD6 = 0;
 15910  003B2A  9C8C               	bcf	3980,6,c	;volatile
 15911                           
 15912                           ; BSR set to: 15
 15913                           ;easat2_init_initialize.c: 169: LATDbits.LATD7 = 0;
 15914  003B2C  9E8C               	bcf	3980,7,c	;volatile
 15915                           
 15916                           ; BSR set to: 15
 15917  003B2E  0012               	return		;funcret
 15918  003B30                     __end_of_init_io_initialize:
 15919                           	opt stack 0
 15920                           tosu	equ	0xFFF
 15921                           tosh	equ	0xFFE
 15922                           tosl	equ	0xFFD
 15923                           pclath	equ	0xFFA
 15924                           tblptru	equ	0xFF8
 15925                           tblptrh	equ	0xFF7
 15926                           tblptrl	equ	0xFF6
 15927                           tablat	equ	0xFF5
 15928                           prodh	equ	0xFF4
 15929                           prodl	equ	0xFF3
 15930                           intcon	equ	0xFF2
 15931                           intcon2	equ	0xFF1
 15932                           indf0	equ	0xFEF
 15933                           postinc0	equ	0xFEE
 15934                           fsr0h	equ	0xFEA
 15935                           fsr0l	equ	0xFE9
 15936                           wreg	equ	0xFE8
 15937                           indf1	equ	0xFE7
 15938                           postdec1	equ	0xFE5
 15939                           fsr1h	equ	0xFE2
 15940                           fsr1l	equ	0xFE1
 15941                           indf2	equ	0xFDF
 15942                           postinc2	equ	0xFDE
 15943                           postdec2	equ	0xFDD
 15944                           fsr2h	equ	0xFDA
 15945                           fsr2l	equ	0xFD9
 15946                           status	equ	0xFD8
 15947                           
 15948 ;; *************** function _low_priority_int *****************
 15949 ;; Defined at:
 15950 ;;		line 266 in file "easat2_func_interrupts.c"
 15951 ;; Parameters:    Size  Location     Type
 15952 ;;		None
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;		None
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      void 
 15957 ;; Registers used:
 15958 ;;		None
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15964 ;;      Params:         0       0       0       0       0       0       0
 15965 ;;      Locals:         0       0       0       0       0       0       0
 15966 ;;      Temps:          0      17       0       0       0       0       0
 15967 ;;      Totals:         0      17       0       0       0       0       0
 15968 ;;Total ram usage:       17 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:    1
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		Interrupt level 1
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	intcodelo
 15979  000018                     __pintcodelo:
 15980                           	opt stack 0
 15981  000018                     _low_priority_int:
 15982                           	opt stack 21
 15983                           
 15984                           ; BSR set to: 15
 15985                           ;incstack = 0
 15986  000018  8044               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 15987  00001A  CFD8 F060          	movff	status,??_low_priority_int
 15988  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 15989  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 15990  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 15991  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 15992  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 15993  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 15994  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 15995  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 15996  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 15997  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 15998  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 15999  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 16000  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 16001  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 16002  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 16003  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 16004  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 16005  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 16006  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 16007  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 16008  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 16009  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 16010  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 16011  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 16012  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 16013  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 16014  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 16015  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 16016  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 16017  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 16018  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 16019  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 16020  00009E  C060  FFD8         	movff	??_low_priority_int,status
 16021  0000A2  9044               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16022  0000A4  0010               	retfie	
 16023  0000A6                     __end_of_low_priority_int:
 16024                           	opt stack 0
 16025                           tosu	equ	0xFFF
 16026                           tosh	equ	0xFFE
 16027                           tosl	equ	0xFFD
 16028                           pclatu	equ	0xFFB
 16029                           pclath	equ	0xFFA
 16030                           tblptru	equ	0xFF8
 16031                           tblptrh	equ	0xFF7
 16032                           tblptrl	equ	0xFF6
 16033                           tablat	equ	0xFF5
 16034                           prodh	equ	0xFF4
 16035                           prodl	equ	0xFF3
 16036                           intcon	equ	0xFF2
 16037                           intcon2	equ	0xFF1
 16038                           indf0	equ	0xFEF
 16039                           postinc0	equ	0xFEE
 16040                           fsr0h	equ	0xFEA
 16041                           fsr0l	equ	0xFE9
 16042                           wreg	equ	0xFE8
 16043                           indf1	equ	0xFE7
 16044                           postdec1	equ	0xFE5
 16045                           fsr1h	equ	0xFE2
 16046                           fsr1l	equ	0xFE1
 16047                           bsr	equ	0xFE0
 16048                           indf2	equ	0xFDF
 16049                           postinc2	equ	0xFDE
 16050                           postdec2	equ	0xFDD
 16051                           fsr2h	equ	0xFDA
 16052                           fsr2l	equ	0xFD9
 16053                           status	equ	0xFD8
 16054                           
 16055 ;; *************** function _high_priority_int *****************
 16056 ;; Defined at:
 16057 ;;		line 19 in file "easat2_func_interrupts.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;		None
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;  received_bit    2   25[COMRAM] unsigned int 
 16062 ;;  sample          2   23[COMRAM] unsigned int 
 16063 ;;  current_sign    2   21[COMRAM] unsigned int 
 16064 ;;  oldest_sampl    2   19[COMRAM] unsigned int 
 16065 ;; Return value:  Size  Location     Type
 16066 ;;                  1    wreg      void 
 16067 ;; Registers used:
 16068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16074 ;;      Params:         0       0       0       0       0       0       0
 16075 ;;      Locals:         8       0       0       0       0       0       0
 16076 ;;      Temps:         19       0       0       0       0       0       0
 16077 ;;      Totals:        27       0       0       0       0       0       0
 16078 ;;Total ram usage:       27 bytes
 16079 ;; Hardware stack levels used:    1
 16080 ;; This function calls:
 16081 ;;		Nothing
 16082 ;; This function is called by:
 16083 ;;		Interrupt level 2
 16084 ;; This function uses a non-reentrant model
 16085 ;;
 16086                           
 16087                           	psect	intcode
 16088  000008                     __pintcode:
 16089                           	opt stack 0
 16090  000008                     _high_priority_int:
 16091                           	opt stack 21
 16092                           
 16093                           ;incstack = 0
 16094  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16095  00000A  EF08  F010         	goto	int_func
 16096                           tosu	equ	0xFFF
 16097                           tosh	equ	0xFFE
 16098                           tosl	equ	0xFFD
 16099                           pclatu	equ	0xFFB
 16100                           pclath	equ	0xFFA
 16101                           tblptru	equ	0xFF8
 16102                           tblptrh	equ	0xFF7
 16103                           tblptrl	equ	0xFF6
 16104                           tablat	equ	0xFF5
 16105                           prodh	equ	0xFF4
 16106                           prodl	equ	0xFF3
 16107                           intcon	equ	0xFF2
 16108                           intcon2	equ	0xFF1
 16109                           indf0	equ	0xFEF
 16110                           postinc0	equ	0xFEE
 16111                           fsr0h	equ	0xFEA
 16112                           fsr0l	equ	0xFE9
 16113                           wreg	equ	0xFE8
 16114                           indf1	equ	0xFE7
 16115                           postdec1	equ	0xFE5
 16116                           fsr1h	equ	0xFE2
 16117                           fsr1l	equ	0xFE1
 16118                           bsr	equ	0xFE0
 16119                           indf2	equ	0xFDF
 16120                           postinc2	equ	0xFDE
 16121                           postdec2	equ	0xFDD
 16122                           fsr2h	equ	0xFDA
 16123                           fsr2l	equ	0xFD9
 16124                           status	equ	0xFD8
 16125                           
 16126                           	psect	intcode_body
 16127  002010                     __pintcode_body:
 16128                           	opt stack 21
 16129  002010                     int_func:
 16130                           	opt stack 21
 16131  002010  CFFA F006          	movff	pclath,??_high_priority_int+5
 16132  002014  CFFB F007          	movff	pclatu,??_high_priority_int+6
 16133  002018  CFE9 F008          	movff	fsr0l,??_high_priority_int+7
 16134  00201C  CFEA F009          	movff	fsr0h,??_high_priority_int+8
 16135  002020  CFE1 F00A          	movff	fsr1l,??_high_priority_int+9
 16136  002024  CFE2 F00B          	movff	fsr1h,??_high_priority_int+10
 16137  002028  CFD9 F00C          	movff	fsr2l,??_high_priority_int+11
 16138  00202C  CFDA F00D          	movff	fsr2h,??_high_priority_int+12
 16139  002030  CFF3 F00E          	movff	prodl,??_high_priority_int+13
 16140  002034  CFF4 F00F          	movff	prodh,??_high_priority_int+14
 16141  002038  CFF6 F010          	movff	tblptrl,??_high_priority_int+15
 16142  00203C  CFF7 F011          	movff	tblptrh,??_high_priority_int+16
 16143  002040  CFF8 F012          	movff	tblptru,??_high_priority_int+17
 16144  002044  CFF5 F013          	movff	tablat,??_high_priority_int+18
 16145                           
 16146                           ;easat2_func_interrupts.c: 21: static int tmr1_interrupt_number = 0;
 16147                           ;easat2_func_interrupts.c: 23: static unsigned int samples[128];
 16148                           ;easat2_func_interrupts.c: 24: static unsigned int sample_position = 0;
 16149                           ;easat2_func_interrupts.c: 25: static unsigned short long noise_avg_value = 32000;
 16150                           ;easat2_func_interrupts.c: 26: static unsigned int activation_threshold = 32000;
 16151                           ;easat2_func_interrupts.c: 27: static unsigned int times_threshold_exceeded = 0;
 16152                           ;easat2_func_interrupts.c: 28: static unsigned int cycles_transmitter_active = 0;
 16153  002048  0E00               	movlw	0
 16154  00204A  6E19               	movwf	high_priority_int@sample+1,c
 16155  00204C  0E00               	movlw	0
 16156  00204E  6E18               	movwf	high_priority_int@sample,c
 16157  002050  0E00               	movlw	0
 16158  002052  6E15               	movwf	high_priority_int@oldest_sample+1,c
 16159  002054  0E00               	movlw	0
 16160  002056  6E14               	movwf	high_priority_int@oldest_sample,c
 16161                           
 16162                           ;easat2_func_interrupts.c: 37: static unsigned int previous_signal_level = 0;
 16163                           ;easat2_func_interrupts.c: 38: unsigned int current_signal_level = 0;
 16164  002058  0E00               	movlw	0
 16165  00205A  6E17               	movwf	high_priority_int@current_signal_level+1,c
 16166  00205C  0E00               	movlw	0
 16167  00205E  6E16               	movwf	high_priority_int@current_signal_level,c
 16168                           
 16169                           ;easat2_func_interrupts.c: 40: unsigned int received_bit = 0;
 16170  002060  0E00               	movlw	0
 16171  002062  6E1B               	movwf	high_priority_int@received_bit+1,c
 16172  002064  0E00               	movlw	0
 16173  002066  6E1A               	movwf	high_priority_int@received_bit,c
 16174                           
 16175                           ;easat2_func_interrupts.c: 41: static unsigned int previous_received_bit = 0;
 16176                           ;easat2_func_interrupts.c: 43: static unsigned int num_received_bits = 0;
 16177                           ;easat2_func_interrupts.c: 46: if (PIR1bits.TMR2IF) {
 16178  002068  A29E               	btfss	3998,1,c	;volatile
 16179  00206A  D002               	goto	i2l485
 16180                           
 16181                           ;easat2_func_interrupts.c: 50: PIR1bits.TMR2IF = 0;
 16182  00206C  929E               	bcf	3998,1,c	;volatile
 16183                           
 16184                           ;easat2_func_interrupts.c: 52: } else {
 16185  00206E  D17F               	goto	i2l511
 16186  002070                     i2l485:
 16187                           
 16188                           ;easat2_func_interrupts.c: 56: if (PIR1bits.TMR1IF) {
 16189  002070  A09E               	btfss	3998,0,c	;volatile
 16190  002072  D17D               	goto	i2l511
 16191                           
 16192                           ;easat2_func_interrupts.c: 60: TMR1H = 0xEC;
 16193  002074  0EEC               	movlw	236
 16194  002076  6ECF               	movwf	4047,c	;volatile
 16195                           
 16196                           ;easat2_func_interrupts.c: 61: TMR1L = 0x77 ; 60535;
 16197  002078  0E77               	movlw	119
 16198  00207A  6ECE               	movwf	4046,c	;volatile
 16199                           
 16200                           ;easat2_func_interrupts.c: 65: (PORTDbits.RD5) = !(PORTDbits.RD5);
 16201  00207C  BA83               	btfsc	3971,5,c	;volatile
 16202  00207E  D003               	goto	i2u545_40
 16203  002080  6A01               	clrf	??_high_priority_int& (0+255),c
 16204  002082  2A01               	incf	??_high_priority_int& (0+255),f,c
 16205  002084  D001               	goto	i2u546_48
 16206  002086                     i2u545_40:
 16207  002086  6A01               	clrf	??_high_priority_int& (0+255),c
 16208  002088                     i2u546_48:
 16209  002088  3A01               	swapf	??_high_priority_int,f,c
 16210  00208A  4601               	rlncf	??_high_priority_int,f,c
 16211  00208C  5083               	movf	3971,w,c	;volatile
 16212  00208E  1801               	xorwf	??_high_priority_int,w,c
 16213  002090  0BDF               	andlw	-33
 16214  002092  1801               	xorwf	??_high_priority_int,w,c
 16215  002094  6E83               	movwf	3971,c	;volatile
 16216                           
 16217                           ;easat2_func_interrupts.c: 69: tmr1_interrupt_number++;
 16218  002096  4A3C               	infsnz	high_priority_int@tmr1_interrupt_number,f,c
 16219  002098  2A3D               	incf	high_priority_int@tmr1_interrupt_number+1,f,c
 16220                           
 16221                           ;easat2_func_interrupts.c: 73: if (tmr1_interrupt_number == 50) {
 16222  00209A  0E32               	movlw	50
 16223  00209C  183C               	xorwf	high_priority_int@tmr1_interrupt_number,w,c
 16224  00209E  103D               	iorwf	high_priority_int@tmr1_interrupt_number+1,w,c
 16225  0020A0  A4D8               	btfss	status,2,c
 16226  0020A2  D011               	goto	i2l5223
 16227                           
 16228                           ;easat2_func_interrupts.c: 76: (PORTDbits.RD4) = !(PORTDbits.RD4);
 16229  0020A4  B883               	btfsc	3971,4,c	;volatile
 16230  0020A6  D003               	goto	i2u548_40
 16231  0020A8  6A01               	clrf	??_high_priority_int& (0+255),c
 16232  0020AA  2A01               	incf	??_high_priority_int& (0+255),f,c
 16233  0020AC  D001               	goto	i2u549_48
 16234  0020AE                     i2u548_40:
 16235  0020AE  6A01               	clrf	??_high_priority_int& (0+255),c
 16236  0020B0                     i2u549_48:
 16237  0020B0  3A01               	swapf	??_high_priority_int,f,c
 16238  0020B2  5083               	movf	3971,w,c	;volatile
 16239  0020B4  1801               	xorwf	??_high_priority_int,w,c
 16240  0020B6  0BEF               	andlw	-17
 16241  0020B8  1801               	xorwf	??_high_priority_int,w,c
 16242  0020BA  6E83               	movwf	3971,c	;volatile
 16243  0020BC  0004               	clrwdt		;# 
 16244                           
 16245                           ;easat2_func_interrupts.c: 85: tmr1_interrupt_number = 0;
 16246  0020BE  0E00               	movlw	0
 16247  0020C0  6E3D               	movwf	high_priority_int@tmr1_interrupt_number+1,c
 16248  0020C2  0E00               	movlw	0
 16249  0020C4  6E3C               	movwf	high_priority_int@tmr1_interrupt_number,c
 16250  0020C6                     i2l5223:
 16251                           
 16252                           ;easat2_func_interrupts.c: 87: }
 16253                           ;easat2_func_interrupts.c: 100: ADCON0bits.CHS = 4;
 16254  0020C6  94C2               	bcf	4034,2,c	;volatile
 16255  0020C8  96C2               	bcf	4034,3,c	;volatile
 16256  0020CA  88C2               	bsf	4034,4,c	;volatile
 16257  0020CC  9AC2               	bcf	4034,5,c	;volatile
 16258  0020CE  9CC2               	bcf	4034,6,c	;volatile
 16259                           
 16260                           ;easat2_func_interrupts.c: 101: ADCON0bits.ADON = 1;
 16261  0020D0  80C2               	bsf	4034,0,c	;volatile
 16262                           
 16263                           ;easat2_func_interrupts.c: 102: PIR1bits.ADIF = 0;
 16264  0020D2  9C9E               	bcf	3998,6,c	;volatile
 16265                           
 16266                           ;easat2_func_interrupts.c: 104: ADCON0bits.GO = 1;
 16267  0020D4  82C2               	bsf	4034,1,c	;volatile
 16268  0020D6                     i2l489:
 16269  0020D6  AC9E               	btfss	3998,6,c	;volatile
 16270  0020D8  D7FE               	goto	i2l489
 16271                           
 16272                           ;easat2_func_interrupts.c: 107: sample = ADRES;
 16273  0020DA  CFC3 F018          	movff	4035,high_priority_int@sample	;volatile
 16274  0020DE  CFC4 F019          	movff	4036,high_priority_int@sample+1	;volatile
 16275                           
 16276                           ;easat2_func_interrupts.c: 109: PIR1bits.ADIF = 0;
 16277  0020E2  9C9E               	bcf	3998,6,c	;volatile
 16278                           
 16279                           ;easat2_func_interrupts.c: 110: ADCON0bits.ADON = 0;
 16280  0020E4  90C2               	bcf	4034,0,c	;volatile
 16281                           
 16282                           ;easat2_func_interrupts.c: 112: if (is_transmitter_active) cycles_transmitter_active++;
 16283  0020E6  503E               	movf	high_priority_int@is_transmitter_active,w,c
 16284  0020E8  B4D8               	btfsc	status,2,c
 16285  0020EA  D002               	goto	i2l5235
 16286  0020EC  4A36               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 16287  0020EE  2A37               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 16288  0020F0                     i2l5235:
 16289                           
 16290                           ;easat2_func_interrupts.c: 117: if (sample > 128 && sample > activation_threshold) {
 16291  0020F0  5019               	movf	high_priority_int@sample+1,w,c
 16292  0020F2  E104               	bnz	i2u552_40
 16293  0020F4  0E81               	movlw	129
 16294  0020F6  5C18               	subwf	high_priority_int@sample,w,c
 16295  0020F8  A0D8               	btfss	status,0,c
 16296  0020FA  D01E               	goto	i2l5249
 16297  0020FC                     i2u552_40:
 16298  0020FC  5018               	movf	high_priority_int@sample,w,c
 16299  0020FE  5C42               	subwf	high_priority_int@activation_threshold,w,c
 16300  002100  5019               	movf	high_priority_int@sample+1,w,c
 16301  002102  5843               	subwfb	high_priority_int@activation_threshold+1,w,c
 16302  002104  B0D8               	btfsc	status,0,c
 16303  002106  D018               	goto	i2l5249
 16304                           
 16305                           ;easat2_func_interrupts.c: 120: current_signal_level = 1;
 16306  002108  0E00               	movlw	0
 16307  00210A  6E17               	movwf	high_priority_int@current_signal_level+1,c
 16308  00210C  0E01               	movlw	1
 16309  00210E  6E16               	movwf	high_priority_int@current_signal_level,c
 16310                           
 16311                           ;easat2_func_interrupts.c: 123: times_threshold_exceeded++;
 16312  002110  4A38               	infsnz	high_priority_int@times_threshold_exceeded,f,c
 16313  002112  2A39               	incf	high_priority_int@times_threshold_exceeded+1,f,c
 16314                           
 16315                           ;easat2_func_interrupts.c: 125: if (times_threshold_exceeded >= 200) {
 16316  002114  5039               	movf	high_priority_int@times_threshold_exceeded+1,w,c
 16317  002116  E104               	bnz	i2u554_40
 16318  002118  0EC8               	movlw	200
 16319  00211A  5C38               	subwf	high_priority_int@times_threshold_exceeded,w,c
 16320  00211C  A0D8               	btfss	status,0,c
 16321  00211E  D08C               	goto	i2l5283
 16322  002120                     i2u554_40:
 16323                           
 16324                           ;easat2_func_interrupts.c: 128: (PORTBbits.RB1) = 1;
 16325  002120  8281               	bsf	3969,1,c	;volatile
 16326                           
 16327                           ;easat2_func_interrupts.c: 130: is_transmitter_active = 1;
 16328  002122  0E01               	movlw	1
 16329  002124  6E3E               	movwf	high_priority_int@is_transmitter_active,c
 16330                           
 16331                           ;easat2_func_interrupts.c: 131: cycles_transmitter_active = 0;
 16332  002126  0E00               	movlw	0
 16333  002128  6E37               	movwf	high_priority_int@cycles_transmitter_active+1,c
 16334  00212A  0E00               	movlw	0
 16335  00212C  6E36               	movwf	high_priority_int@cycles_transmitter_active,c
 16336                           
 16337                           ;easat2_func_interrupts.c: 133: times_threshold_exceeded = 0;
 16338  00212E  0E00               	movlw	0
 16339  002130  6E39               	movwf	high_priority_int@times_threshold_exceeded+1,c
 16340  002132  0E00               	movlw	0
 16341  002134  6E38               	movwf	high_priority_int@times_threshold_exceeded,c
 16342                           
 16343                           ;easat2_func_interrupts.c: 135: }
 16344                           ;easat2_func_interrupts.c: 137: } else {
 16345  002136  D080               	goto	i2l5283
 16346  002138                     i2l5249:
 16347                           
 16348                           ;easat2_func_interrupts.c: 140: current_signal_level = 0;
 16349  002138  0E00               	movlw	0
 16350  00213A  6E17               	movwf	high_priority_int@current_signal_level+1,c
 16351  00213C  0E00               	movlw	0
 16352  00213E  6E16               	movwf	high_priority_int@current_signal_level,c
 16353                           
 16354                           ;easat2_func_interrupts.c: 143: times_threshold_exceeded = 0;
 16355  002140  0E00               	movlw	0
 16356  002142  6E39               	movwf	high_priority_int@times_threshold_exceeded+1,c
 16357  002144  0E00               	movlw	0
 16358  002146  6E38               	movwf	high_priority_int@times_threshold_exceeded,c
 16359                           
 16360                           ;easat2_func_interrupts.c: 145: if (cycles_transmitter_active >= 12000) {
 16361  002148  0EE0               	movlw	224
 16362  00214A  5C36               	subwf	high_priority_int@cycles_transmitter_active,w,c
 16363  00214C  0E2E               	movlw	46
 16364  00214E  5837               	subwfb	high_priority_int@cycles_transmitter_active+1,w,c
 16365  002150  A0D8               	btfss	status,0,c
 16366  002152  D003               	goto	i2l5257
 16367                           
 16368                           ;easat2_func_interrupts.c: 147: (PORTBbits.RB1) = 0;
 16369  002154  9281               	bcf	3969,1,c	;volatile
 16370                           
 16371                           ;easat2_func_interrupts.c: 148: is_transmitter_active = 0;
 16372  002156  0E00               	movlw	0
 16373  002158  6E3E               	movwf	high_priority_int@is_transmitter_active,c
 16374  00215A                     i2l5257:
 16375                           
 16376                           ;easat2_func_interrupts.c: 149: }
 16377                           ;easat2_func_interrupts.c: 151: if (valid_samples == 128) oldest_sample = samples[sample
      +                          _position];
 16378  00215A  0E80               	movlw	128
 16379  00215C  1832               	xorwf	high_priority_int@valid_samples,w,c
 16380  00215E  1033               	iorwf	high_priority_int@valid_samples+1,w,c
 16381  002160  A4D8               	btfss	status,2,c
 16382  002162  D00E               	goto	i2l5261
 16383  002164  90D8               	bcf	status,0,c
 16384  002166  343A               	rlcf	high_priority_int@sample_position,w,c
 16385  002168  6ED9               	movwf	fsr2l,c
 16386  00216A  343B               	rlcf	high_priority_int@sample_position+1,w,c
 16387  00216C  6EDA               	movwf	fsr2h,c
 16388  00216E  0E00               	movlw	low high_priority_int@samples
 16389  002170  26D9               	addwf	fsr2l,f,c
 16390  002172  0E02               	movlw	high high_priority_int@samples
 16391  002174  22DA               	addwfc	fsr2h,f,c
 16392  002176  CFDE F014          	movff	postinc2,high_priority_int@oldest_sample
 16393  00217A  CFDD F015          	movff	postdec2,high_priority_int@oldest_sample+1
 16394  00217E  D004               	goto	i2l5263
 16395  002180                     i2l5261:
 16396                           
 16397                           ;easat2_func_interrupts.c: 152: else oldest_sample = 0;
 16398  002180  0E00               	movlw	0
 16399  002182  6E15               	movwf	high_priority_int@oldest_sample+1,c
 16400  002184  0E00               	movlw	0
 16401  002186  6E14               	movwf	high_priority_int@oldest_sample,c
 16402  002188                     i2l5263:
 16403                           
 16404                           ;easat2_func_interrupts.c: 154: samples[sample_position] = sample;
 16405  002188  90D8               	bcf	status,0,c
 16406  00218A  343A               	rlcf	high_priority_int@sample_position,w,c
 16407  00218C  6ED9               	movwf	fsr2l,c
 16408  00218E  343B               	rlcf	high_priority_int@sample_position+1,w,c
 16409  002190  6EDA               	movwf	fsr2h,c
 16410  002192  0E00               	movlw	low high_priority_int@samples
 16411  002194  26D9               	addwf	fsr2l,f,c
 16412  002196  0E02               	movlw	high high_priority_int@samples
 16413  002198  22DA               	addwfc	fsr2h,f,c
 16414  00219A  C018  FFDE         	movff	high_priority_int@sample,postinc2
 16415  00219E  C019  FFDD         	movff	high_priority_int@sample+1,postdec2
 16416                           
 16417                           ;easat2_func_interrupts.c: 157: if (valid_samples < 128) valid_samples++;
 16418  0021A2  5033               	movf	high_priority_int@valid_samples+1,w,c
 16419  0021A4  E106               	bnz	i2l499
 16420  0021A6  0E80               	movlw	128
 16421  0021A8  5C32               	subwf	high_priority_int@valid_samples,w,c
 16422  0021AA  B0D8               	btfsc	status,0,c
 16423  0021AC  D002               	goto	i2l499
 16424  0021AE  4A32               	infsnz	high_priority_int@valid_samples,f,c
 16425  0021B0  2A33               	incf	high_priority_int@valid_samples+1,f,c
 16426  0021B2                     i2l499:
 16427                           
 16428                           ;easat2_func_interrupts.c: 160: sample_position++;
 16429  0021B2  4A3A               	infsnz	high_priority_int@sample_position,f,c
 16430  0021B4  2A3B               	incf	high_priority_int@sample_position+1,f,c
 16431                           
 16432                           ;easat2_func_interrupts.c: 163: if (sample_position == 128) sample_position = 0;
 16433  0021B6  0E80               	movlw	128
 16434  0021B8  183A               	xorwf	high_priority_int@sample_position,w,c
 16435  0021BA  103B               	iorwf	high_priority_int@sample_position+1,w,c
 16436  0021BC  A4D8               	btfss	status,2,c
 16437  0021BE  D004               	goto	i2l5273
 16438  0021C0  0E00               	movlw	0
 16439  0021C2  6E3B               	movwf	high_priority_int@sample_position+1,c
 16440  0021C4  0E00               	movlw	0
 16441  0021C6  6E3A               	movwf	high_priority_int@sample_position,c
 16442  0021C8                     i2l5273:
 16443                           
 16444                           ;easat2_func_interrupts.c: 166: total_add = total_add + sample - oldest_sample;
 16445  0021C8  C014  F001         	movff	high_priority_int@oldest_sample,??_high_priority_int
 16446  0021CC  C015  F002         	movff	high_priority_int@oldest_sample+1,??_high_priority_int+1
 16447  0021D0  1E01               	comf	??_high_priority_int,f,c
 16448  0021D2  1E02               	comf	??_high_priority_int+1,f,c
 16449  0021D4  4A01               	infsnz	??_high_priority_int,f,c
 16450  0021D6  2A02               	incf	??_high_priority_int+1,f,c
 16451  0021D8  5034               	movf	high_priority_int@total_add,w,c
 16452  0021DA  2601               	addwf	??_high_priority_int,f,c
 16453  0021DC  5035               	movf	high_priority_int@total_add+1,w,c
 16454  0021DE  2202               	addwfc	??_high_priority_int+1,f,c
 16455  0021E0  5018               	movf	high_priority_int@sample,w,c
 16456  0021E2  2401               	addwf	??_high_priority_int,w,c
 16457  0021E4  6E34               	movwf	high_priority_int@total_add,c
 16458  0021E6  5019               	movf	high_priority_int@sample+1,w,c
 16459  0021E8  2002               	addwfc	??_high_priority_int+1,w,c
 16460  0021EA  6E35               	movwf	high_priority_int@total_add+1,c
 16461                           
 16462                           ;easat2_func_interrupts.c: 169: if (valid_samples == 128) {
 16463  0021EC  0E80               	movlw	128
 16464  0021EE  1832               	xorwf	high_priority_int@valid_samples,w,c
 16465  0021F0  1033               	iorwf	high_priority_int@valid_samples+1,w,c
 16466  0021F2  A4D8               	btfss	status,2,c
 16467  0021F4  D021               	goto	i2l5283
 16468                           
 16469                           ;easat2_func_interrupts.c: 172: noise_avg_value = total_add;
 16470  0021F6  C034  F03F         	movff	high_priority_int@total_add,high_priority_int@noise_avg_value
 16471  0021FA  C035  F040         	movff	high_priority_int@total_add+1,high_priority_int@noise_avg_value+1
 16472  0021FE  6A41               	clrf	high_priority_int@noise_avg_value+2,c
 16473                           
 16474                           ;easat2_func_interrupts.c: 174: noise_avg_value = noise_avg_value >> 7;
 16475  002200  0E07               	movlw	7
 16476  002202  6E01               	movwf	??_high_priority_int& (0+255),c
 16477  002204  C03F  F002         	movff	high_priority_int@noise_avg_value,??_high_priority_int+1
 16478  002208  C040  F003         	movff	high_priority_int@noise_avg_value+1,??_high_priority_int+2
 16479  00220C  C041  F004         	movff	high_priority_int@noise_avg_value+2,??_high_priority_int+3
 16480  002210  2801               	incf	??_high_priority_int,w,c
 16481  002212  6E05               	movwf	(??_high_priority_int+4)& (0+255),c
 16482  002214  D004               	goto	i2u560_40
 16483  002216                     i2u560_45:
 16484  002216  90D8               	bcf	status,0,c
 16485  002218  3204               	rrcf	??_high_priority_int+3,f,c
 16486  00221A  3203               	rrcf	??_high_priority_int+2,f,c
 16487  00221C  3202               	rrcf	??_high_priority_int+1,f,c
 16488  00221E                     i2u560_40:
 16489  00221E  2E05               	decfsz	(??_high_priority_int+4)& (0+255),f,c
 16490  002220  D7FA               	goto	i2u560_45
 16491  002222  C002  F03F         	movff	??_high_priority_int+1,high_priority_int@noise_avg_value
 16492  002226  C003  F040         	movff	??_high_priority_int+2,high_priority_int@noise_avg_value+1
 16493  00222A  C004  F041         	movff	??_high_priority_int+3,high_priority_int@noise_avg_value+2
 16494                           
 16495                           ;easat2_func_interrupts.c: 177: activation_threshold = noise_avg_value << 1;
 16496  00222E  90D8               	bcf	status,0,c
 16497  002230  343F               	rlcf	high_priority_int@noise_avg_value,w,c
 16498  002232  6E42               	movwf	high_priority_int@activation_threshold,c
 16499  002234  3440               	rlcf	high_priority_int@noise_avg_value+1,w,c
 16500  002236  6E43               	movwf	high_priority_int@activation_threshold+1,c
 16501  002238                     i2l5283:
 16502                           
 16503                           ;easat2_func_interrupts.c: 179: }
 16504                           ;easat2_func_interrupts.c: 181: }
 16505                           ;easat2_func_interrupts.c: 189: if (previous_signal_level == 0 && current_signal_level =
      +                          = 1) {
 16506  002238  5030               	movf	high_priority_int@previous_signal_level,w,c
 16507  00223A  1031               	iorwf	high_priority_int@previous_signal_level+1,w,c
 16508  00223C  A4D8               	btfss	status,2,c
 16509  00223E  D009               	goto	i2l5293
 16510  002240  0416               	decf	high_priority_int@current_signal_level,w,c
 16511  002242  1017               	iorwf	high_priority_int@current_signal_level+1,w,c
 16512  002244  A4D8               	btfss	status,2,c
 16513  002246  D005               	goto	i2l5293
 16514                           
 16515                           ;easat2_func_interrupts.c: 192: received_bit = 1;
 16516  002248  0E00               	movlw	0
 16517  00224A  6E1B               	movwf	high_priority_int@received_bit+1,c
 16518  00224C  0E01               	movlw	1
 16519  00224E  6E1A               	movwf	high_priority_int@received_bit,c
 16520  002250  D00C               	goto	i2l5299
 16521  002252                     i2l5293:
 16522                           
 16523                           ;easat2_func_interrupts.c: 199: if (previous_signal_level == 1 && current_signal_level =
      +                          = 0) {
 16524  002252  0430               	decf	high_priority_int@previous_signal_level,w,c
 16525  002254  1031               	iorwf	high_priority_int@previous_signal_level+1,w,c
 16526  002256  A4D8               	btfss	status,2,c
 16527  002258  D011               	goto	i2l5303
 16528  00225A  5016               	movf	high_priority_int@current_signal_level,w,c
 16529  00225C  1017               	iorwf	high_priority_int@current_signal_level+1,w,c
 16530  00225E  A4D8               	btfss	status,2,c
 16531  002260  D00D               	goto	i2l5303
 16532                           
 16533                           ;easat2_func_interrupts.c: 202: received_bit = 0;
 16534  002262  0E00               	movlw	0
 16535  002264  6E1B               	movwf	high_priority_int@received_bit+1,c
 16536  002266  0E00               	movlw	0
 16537  002268  D7F2               	goto	L9
 16538  00226A                     i2l5299:
 16539                           
 16540                           ;easat2_func_interrupts.c: 205: if (num_received_bits < 32) num_received_bits++;
 16541  00226A  502D               	movf	high_priority_int@num_received_bits+1,w,c
 16542  00226C  E10F               	bnz	i2l5305
 16543  00226E  0E20               	movlw	32
 16544  002270  5C2C               	subwf	high_priority_int@num_received_bits,w,c
 16545  002272  B0D8               	btfsc	status,0,c
 16546  002274  D00B               	goto	i2l5305
 16547  002276  4A2C               	infsnz	high_priority_int@num_received_bits,f,c
 16548  002278  2A2D               	incf	high_priority_int@num_received_bits+1,f,c
 16549                           
 16550                           ;easat2_func_interrupts.c: 207: } else {
 16551  00227A  D008               	goto	i2l5305
 16552  00227C                     i2l5303:
 16553                           
 16554                           ;easat2_func_interrupts.c: 210: received_bit = 2;
 16555  00227C  0E00               	movlw	0
 16556  00227E  6E1B               	movwf	high_priority_int@received_bit+1,c
 16557  002280  0E02               	movlw	2
 16558  002282  6E1A               	movwf	high_priority_int@received_bit,c
 16559                           
 16560                           ;easat2_func_interrupts.c: 213: num_received_bits = 0;
 16561  002284  0E00               	movlw	0
 16562  002286  6E2D               	movwf	high_priority_int@num_received_bits+1,c
 16563  002288  0E00               	movlw	0
 16564  00228A  6E2C               	movwf	high_priority_int@num_received_bits,c
 16565  00228C                     i2l5305:
 16566                           
 16567                           ;easat2_func_interrupts.c: 214: }
 16568                           ;easat2_func_interrupts.c: 215: }
 16569                           ;easat2_func_interrupts.c: 221: if (received_bit != 2 && num_received_bits <= 32
 16570                           ;easat2_func_interrupts.c: 222: && !global_command_pending_check) {
 16571  00228C  0E02               	movlw	2
 16572  00228E  181A               	xorwf	high_priority_int@received_bit,w,c
 16573  002290  101B               	iorwf	high_priority_int@received_bit+1,w,c
 16574  002292  B4D8               	btfsc	status,2,c
 16575  002294  D034               	goto	i2l508
 16576  002296  502D               	movf	high_priority_int@num_received_bits+1,w,c
 16577  002298  E132               	bnz	i2l508
 16578  00229A  0E21               	movlw	33
 16579  00229C  5C2C               	subwf	high_priority_int@num_received_bits,w,c
 16580  00229E  B0D8               	btfsc	status,0,c
 16581  0022A0  D02E               	goto	i2l508
 16582  0022A2  0100               	movlb	0	; () banked
 16583  0022A4  51E8               	movf	_global_command_pending_check& (0+255),w,b	;volatile
 16584  0022A6  0100               	movlb	0	; () banked
 16585  0022A8  11E9               	iorwf	(_global_command_pending_check+1)& (0+255),w,b	;volatile
 16586  0022AA  A4D8               	btfss	status,2,c
 16587  0022AC  D028               	goto	i2l508
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;easat2_func_interrupts.c: 225: global_command_buffer = global_command_buffer & 0xfffffe
      +                          ;
 16591  0022AE  0EFE               	movlw	254
 16592  0022B0  0100               	movlb	0	; () banked
 16593  0022B2  15E4               	andwf	_global_command_buffer& (0+255),w,b	;volatile
 16594  0022B4  0100               	movlb	0	; () banked
 16595  0022B6  6FE4               	movwf	_global_command_buffer& (0+255),b	;volatile
 16596  0022B8  0EFF               	movlw	255
 16597  0022BA  0100               	movlb	0	; () banked
 16598  0022BC  15E5               	andwf	(_global_command_buffer+1)& (0+255),w,b	;volatile
 16599  0022BE  0100               	movlb	0	; () banked
 16600  0022C0  6FE5               	movwf	(_global_command_buffer+1)& (0+255),b	;volatile
 16601  0022C2  0EFF               	movlw	255
 16602  0022C4  0100               	movlb	0	; () banked
 16603  0022C6  15E6               	andwf	(_global_command_buffer+2)& (0+255),w,b	;volatile
 16604  0022C8  0100               	movlb	0	; () banked
 16605  0022CA  6FE6               	movwf	(_global_command_buffer+2)& (0+255),b	;volatile
 16606  0022CC  0E00               	movlw	0
 16607  0022CE  0100               	movlb	0	; () banked
 16608  0022D0  15E7               	andwf	(_global_command_buffer+3)& (0+255),w,b	;volatile
 16609  0022D2  0100               	movlb	0	; () banked
 16610  0022D4  6FE7               	movwf	(_global_command_buffer+3)& (0+255),b	;volatile
 16611                           
 16612                           ;easat2_func_interrupts.c: 226: global_command_buffer = global_command_buffer | received
      +                          _bit;
 16613  0022D6  501A               	movf	high_priority_int@received_bit,w,c
 16614  0022D8  0100               	movlb	0	; () banked
 16615  0022DA  11E4               	iorwf	_global_command_buffer& (0+255),w,b	;volatile
 16616  0022DC  0100               	movlb	0	; () banked
 16617  0022DE  6FE4               	movwf	_global_command_buffer& (0+255),b	;volatile
 16618  0022E0  501B               	movf	high_priority_int@received_bit+1,w,c
 16619  0022E2  0100               	movlb	0	; () banked
 16620  0022E4  11E5               	iorwf	(_global_command_buffer+1)& (0+255),w,b	;volatile
 16621  0022E6  0100               	movlb	0	; () banked
 16622  0022E8  6FE5               	movwf	(_global_command_buffer+1)& (0+255),b	;volatile
 16623  0022EA  0E00               	movlw	0
 16624  0022EC  0100               	movlb	0	; () banked
 16625  0022EE  11E6               	iorwf	(_global_command_buffer+2)& (0+255),w,b	;volatile
 16626  0022F0  0100               	movlb	0	; () banked
 16627  0022F2  6FE6               	movwf	(_global_command_buffer+2)& (0+255),b	;volatile
 16628  0022F4  0E00               	movlw	0
 16629  0022F6  0100               	movlb	0	; () banked
 16630  0022F8  11E7               	iorwf	(_global_command_buffer+3)& (0+255),w,b	;volatile
 16631  0022FA  0100               	movlb	0	; () banked
 16632  0022FC  6FE7               	movwf	(_global_command_buffer+3)& (0+255),b	;volatile
 16633  0022FE                     i2l508:
 16634                           
 16635                           ;easat2_func_interrupts.c: 228: }
 16636                           ;easat2_func_interrupts.c: 231: if (received_bit == 2 && previous_received_bit != 2 && !
      +                          global_command_pending_check
 16637                           ;easat2_func_interrupts.c: 232: && num_received_bits == 32) {
 16638  0022FE  0E02               	movlw	2
 16639  002300  181A               	xorwf	high_priority_int@received_bit,w,c
 16640  002302  101B               	iorwf	high_priority_int@received_bit+1,w,c
 16641  002304  A4D8               	btfss	status,2,c
 16642  002306  D015               	goto	i2l5321
 16643  002308  0E02               	movlw	2
 16644  00230A  182E               	xorwf	high_priority_int@previous_received_bit,w,c
 16645  00230C  102F               	iorwf	high_priority_int@previous_received_bit+1,w,c
 16646  00230E  B4D8               	btfsc	status,2,c
 16647  002310  D010               	goto	i2l5321
 16648  002312  0100               	movlb	0	; () banked
 16649  002314  51E8               	movf	_global_command_pending_check& (0+255),w,b	;volatile
 16650  002316  0100               	movlb	0	; () banked
 16651  002318  11E9               	iorwf	(_global_command_pending_check+1)& (0+255),w,b	;volatile
 16652  00231A  A4D8               	btfss	status,2,c
 16653  00231C  D00A               	goto	i2l5321
 16654                           
 16655                           ; BSR set to: 0
 16656  00231E  0E20               	movlw	32
 16657  002320  182C               	xorwf	high_priority_int@num_received_bits,w,c
 16658  002322  102D               	iorwf	high_priority_int@num_received_bits+1,w,c
 16659  002324  A4D8               	btfss	status,2,c
 16660  002326  D005               	goto	i2l5321
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;easat2_func_interrupts.c: 237: global_command_pending_check = 1;
 16664  002328  0E00               	movlw	0
 16665  00232A  0100               	movlb	0	; () banked
 16666  00232C  6FE9               	movwf	(_global_command_pending_check+1)& (0+255),b	;volatile
 16667  00232E  0E01               	movlw	1
 16668  002330  6FE8               	movwf	_global_command_pending_check& (0+255),b	;volatile
 16669  002332                     i2l5321:
 16670                           
 16671                           ;easat2_func_interrupts.c: 239: }
 16672                           ;easat2_func_interrupts.c: 241: if (received_bit == 2 && previous_received_bit == 2 && !
      +                          global_command_pending_check) {
 16673  002332  0E02               	movlw	2
 16674  002334  181A               	xorwf	high_priority_int@received_bit,w,c
 16675  002336  101B               	iorwf	high_priority_int@received_bit+1,w,c
 16676  002338  A4D8               	btfss	status,2,c
 16677  00233A  D018               	goto	i2l5329
 16678  00233C  0E02               	movlw	2
 16679  00233E  182E               	xorwf	high_priority_int@previous_received_bit,w,c
 16680  002340  102F               	iorwf	high_priority_int@previous_received_bit+1,w,c
 16681  002342  A4D8               	btfss	status,2,c
 16682  002344  D013               	goto	i2l5329
 16683  002346  0100               	movlb	0	; () banked
 16684  002348  51E8               	movf	_global_command_pending_check& (0+255),w,b	;volatile
 16685  00234A  0100               	movlb	0	; () banked
 16686  00234C  11E9               	iorwf	(_global_command_pending_check+1)& (0+255),w,b	;volatile
 16687  00234E  A4D8               	btfss	status,2,c
 16688  002350  D00D               	goto	i2l5329
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;easat2_func_interrupts.c: 245: global_command_buffer = 0;
 16692  002352  0E00               	movlw	0
 16693  002354  0100               	movlb	0	; () banked
 16694  002356  6FE4               	movwf	_global_command_buffer& (0+255),b	;volatile
 16695  002358  0E00               	movlw	0
 16696  00235A  6FE5               	movwf	(_global_command_buffer+1)& (0+255),b	;volatile
 16697  00235C  0E00               	movlw	0
 16698  00235E  6FE6               	movwf	(_global_command_buffer+2)& (0+255),b	;volatile
 16699  002360  0E00               	movlw	0
 16700  002362  6FE7               	movwf	(_global_command_buffer+3)& (0+255),b	;volatile
 16701                           
 16702                           ;easat2_func_interrupts.c: 246: num_received_bits = 0;
 16703  002364  0E00               	movlw	0
 16704  002366  6E2D               	movwf	high_priority_int@num_received_bits+1,c
 16705  002368  0E00               	movlw	0
 16706  00236A  6E2C               	movwf	high_priority_int@num_received_bits,c
 16707  00236C                     i2l5329:
 16708                           
 16709                           ;easat2_func_interrupts.c: 248: }
 16710                           ;easat2_func_interrupts.c: 256: PIR1bits.TMR1IF = 0;
 16711  00236C  909E               	bcf	3998,0,c	;volatile
 16712  00236E                     i2l511:
 16713  00236E  C013  FFF5         	movff	??_high_priority_int+18,tablat
 16714  002372  C012  FFF8         	movff	??_high_priority_int+17,tblptru
 16715  002376  C011  FFF7         	movff	??_high_priority_int+16,tblptrh
 16716  00237A  C010  FFF6         	movff	??_high_priority_int+15,tblptrl
 16717  00237E  C00F  FFF4         	movff	??_high_priority_int+14,prodh
 16718  002382  C00E  FFF3         	movff	??_high_priority_int+13,prodl
 16719  002386  C00D  FFDA         	movff	??_high_priority_int+12,fsr2h
 16720  00238A  C00C  FFD9         	movff	??_high_priority_int+11,fsr2l
 16721  00238E  C00B  FFE2         	movff	??_high_priority_int+10,fsr1h
 16722  002392  C00A  FFE1         	movff	??_high_priority_int+9,fsr1l
 16723  002396  C009  FFEA         	movff	??_high_priority_int+8,fsr0h
 16724  00239A  C008  FFE9         	movff	??_high_priority_int+7,fsr0l
 16725  00239E  C007  FFFB         	movff	??_high_priority_int+6,pclatu
 16726  0023A2  C006  FFFA         	movff	??_high_priority_int+5,pclath
 16727  0023A6  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16728  0023A8  0011               	retfie		f
 16729  0023AA                     __end_of_high_priority_int:
 16730                           	opt stack 0
 16731                           tosu	equ	0xFFF
 16732                           tosh	equ	0xFFE
 16733                           tosl	equ	0xFFD
 16734                           pclatu	equ	0xFFB
 16735                           pclath	equ	0xFFA
 16736                           tblptru	equ	0xFF8
 16737                           tblptrh	equ	0xFF7
 16738                           tblptrl	equ	0xFF6
 16739                           tablat	equ	0xFF5
 16740                           prodh	equ	0xFF4
 16741                           prodl	equ	0xFF3
 16742                           intcon	equ	0xFF2
 16743                           intcon2	equ	0xFF1
 16744                           indf0	equ	0xFEF
 16745                           postinc0	equ	0xFEE
 16746                           fsr0h	equ	0xFEA
 16747                           fsr0l	equ	0xFE9
 16748                           wreg	equ	0xFE8
 16749                           indf1	equ	0xFE7
 16750                           postdec1	equ	0xFE5
 16751                           fsr1h	equ	0xFE2
 16752                           fsr1l	equ	0xFE1
 16753                           bsr	equ	0xFE0
 16754                           indf2	equ	0xFDF
 16755                           postinc2	equ	0xFDE
 16756                           postdec2	equ	0xFDD
 16757                           fsr2h	equ	0xFDA
 16758                           fsr2l	equ	0xFD9
 16759                           status	equ	0xFD8
 16760                           tosu	equ	0xFFF
 16761                           tosh	equ	0xFFE
 16762                           tosl	equ	0xFFD
 16763                           pclatu	equ	0xFFB
 16764                           pclath	equ	0xFFA
 16765                           tblptru	equ	0xFF8
 16766                           tblptrh	equ	0xFF7
 16767                           tblptrl	equ	0xFF6
 16768                           tablat	equ	0xFF5
 16769                           prodh	equ	0xFF4
 16770                           prodl	equ	0xFF3
 16771                           intcon	equ	0xFF2
 16772                           intcon2	equ	0xFF1
 16773                           indf0	equ	0xFEF
 16774                           postinc0	equ	0xFEE
 16775                           fsr0h	equ	0xFEA
 16776                           fsr0l	equ	0xFE9
 16777                           wreg	equ	0xFE8
 16778                           indf1	equ	0xFE7
 16779                           postdec1	equ	0xFE5
 16780                           fsr1h	equ	0xFE2
 16781                           fsr1l	equ	0xFE1
 16782                           bsr	equ	0xFE0
 16783                           indf2	equ	0xFDF
 16784                           postinc2	equ	0xFDE
 16785                           postdec2	equ	0xFDD
 16786                           fsr2h	equ	0xFDA
 16787                           fsr2l	equ	0xFD9
 16788                           status	equ	0xFD8
 16789                           
 16790                           	psect	rparam
 16791  0000                     tosu	equ	0xFFF
 16792                           tosh	equ	0xFFE
 16793                           tosl	equ	0xFFD
 16794                           pclatu	equ	0xFFB
 16795                           pclath	equ	0xFFA
 16796                           tblptru	equ	0xFF8
 16797                           tblptrh	equ	0xFF7
 16798                           tblptrl	equ	0xFF6
 16799                           tablat	equ	0xFF5
 16800                           prodh	equ	0xFF4
 16801                           prodl	equ	0xFF3
 16802                           intcon	equ	0xFF2
 16803                           intcon2	equ	0xFF1
 16804                           indf0	equ	0xFEF
 16805                           postinc0	equ	0xFEE
 16806                           fsr0h	equ	0xFEA
 16807                           fsr0l	equ	0xFE9
 16808                           wreg	equ	0xFE8
 16809                           indf1	equ	0xFE7
 16810                           postdec1	equ	0xFE5
 16811                           fsr1h	equ	0xFE2
 16812                           fsr1l	equ	0xFE1
 16813                           bsr	equ	0xFE0
 16814                           indf2	equ	0xFDF
 16815                           postinc2	equ	0xFDE
 16816                           postdec2	equ	0xFDD
 16817                           fsr2h	equ	0xFDA
 16818                           fsr2l	equ	0xFD9
 16819                           status	equ	0xFD8
 16820                           
 16821                           	psect	temp
 16822  000044                     btemp:
 16823                           	opt stack 0
 16824  000044                     	ds	1
 16825  0000                     int$flags	set	btemp
 16826                           tosu	equ	0xFFF
 16827                           tosh	equ	0xFFE
 16828                           tosl	equ	0xFFD
 16829                           pclatu	equ	0xFFB
 16830                           pclath	equ	0xFFA
 16831                           tblptru	equ	0xFF8
 16832                           tblptrh	equ	0xFF7
 16833                           tblptrl	equ	0xFF6
 16834                           tablat	equ	0xFF5
 16835                           prodh	equ	0xFF4
 16836                           prodl	equ	0xFF3
 16837                           intcon	equ	0xFF2
 16838                           intcon2	equ	0xFF1
 16839                           indf0	equ	0xFEF
 16840                           postinc0	equ	0xFEE
 16841                           fsr0h	equ	0xFEA
 16842                           fsr0l	equ	0xFE9
 16843                           wreg	equ	0xFE8
 16844                           indf1	equ	0xFE7
 16845                           postdec1	equ	0xFE5
 16846                           fsr1h	equ	0xFE2
 16847                           fsr1l	equ	0xFE1
 16848                           bsr	equ	0xFE0
 16849                           indf2	equ	0xFDF
 16850                           postinc2	equ	0xFDE
 16851                           postdec2	equ	0xFDD
 16852                           fsr2h	equ	0xFDA
 16853                           fsr2l	equ	0xFD9
 16854                           status	equ	0xFD8


Data Sizes:
    Strings     163
    Constant    134
    Data        5
    BSS         281
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      67
    BANK0           160    132     138
    BANK1           256    216     216
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[13]), STR_2(CODE[23]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 64
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_4(CODE[13]), STR_2(CODE[23]), 

    S2239__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S2239__prbuf$ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(COMRAM[4]), 

    golay_correct@errs	PTR int  size(2) Largest target is 2
		 -> func_command_decode@golay_errors(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[4]), STR_26(CODE[5]), 
		 -> STR_25(CODE[4]), STR_24(CODE[2]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_command_ack_transmission@BEACON_COMMAND_BUFFER(BANK1[64]), util_command_ack_transmission@BEACON_COMMAND_MESSAGE(BANK1[128]), util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    func_command_decode@decoded_value	PTR unsigned int  size(2) Largest target is 2
		 -> func_command_management@decoded_command_value(BANK0[2]), 

    func_command_decode@decoded_command	PTR unsigned int  size(2) Largest target is 2
		 -> func_command_management@decoded_command(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_hours
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _func_command_management->_func_command_decode
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    __doprnt->___ftmul
    __doprnt->__tdiv_to_l_
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul
    _golay_correct->_golay_rotate_left
    _golay_correct->_golay_rotate_right
    _init_initialize->_init_watchdogs_initialize

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main_loop->_func_command_management
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    ___ftdiv->___awtoft
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    _util_beacon_transmission->_sprintf
    _func_command_management->_util_command_ack_transmission
    _util_command_ack_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _sprintf->__doprnt
    __doprnt->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _func_command_decode->_golay_correct
    _golay_correct->_golay_weight

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_loop
    _main_loop->_util_getTemperature
    _func_command_management->_util_command_ack_transmission

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  217722
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  217722
                                            206 BANK1     10    10      0
            _func_command_management
          _init_watchdogs_initialize
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             40 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             37 COMRAM     3     3      0
                                             19 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             59 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             32 COMRAM     5     5      0
                                             17 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             29 COMRAM     5     3      2
                                             17 BANK0     16    16      0
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             17 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             36 COMRAM     3     3      0
                                             20 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             35 COMRAM     1     1      0
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   11054
                                             59 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             37 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   11054
                                             59 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             17 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   76631
                                            120 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (2) _func_command_management                              8     8      0   80646
                                            124 BANK0      8     8      0
                _func_command_decode
      _util_command_ack_transmission
 ---------------------------------------------------------------------------------
 (3) _util_command_ack_transmission                      198   194      4   76415
                                            120 BANK0      4     0      4
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6329
                                             37 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5238
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   0     0      0     530
                     _util_pwm_start
                      _util_pwm_stop
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _util_pwm_stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _util_pwm_start                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     361
                                             27 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     417
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     451
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20     6     14   67156
                                            100 BANK0     20     6     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             41    35      6   66459
                                             65 BANK0     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                               10     7      3   14849
                                             37 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             27 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13    10      3   14570
                                             37 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3004
                                             37 COMRAM     2     2      0
                                             21 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             39 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1819
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1985
                                             33 COMRAM     4     4      0
                                             17 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     608
                                             27 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          12     6      6     827
                                             27 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) ___lltoft                                             9     5      4    2763
                                             35 COMRAM     5     5      0
                                             17 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     848
                                             32 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     703
                                             27 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             44 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    6135
                                             59 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             47 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             27 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     142
                                             27 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     660
                                             27 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1061
                                             27 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _func_command_decode                                 28    20      8    4040
                                             39 COMRAM     4     4      0
                                             65 BANK0     24    16      8
                      _golay_correct
                       _golay_parity
                     _golay_syndrome
 ---------------------------------------------------------------------------------
 (4) _golay_parity                                         6     2      4     411
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _golay_correct                                       28    22      6    2462
                                             37 BANK0     28    22      6
                  _golay_rotate_left
                 _golay_rotate_right
                     _golay_syndrome
                       _golay_weight
 ---------------------------------------------------------------------------------
 (5) _golay_weight                                        27    23      4     284
                                             27 COMRAM     7     3      4
                                             17 BANK0     20    20      0
 ---------------------------------------------------------------------------------
 (4) _golay_syndrome                                      10     6      4     370
                                             27 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _golay_rotate_right                                  12     6      6     352
                                             27 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _golay_rotate_left                                   12     6      6     352
                                             27 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _init_timer1_initialize
             _init_timer2_initialize
          _init_watchdogs_initialize
                _util_pwm_initialize
 ---------------------------------------------------------------------------------
 (2) _util_pwm_initialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_watchdogs_initialize                            1     1      0       0
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer2_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_priority_int                                  27    27      0     254
                                              0 COMRAM    27    27      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _init_timer1_initialize
     _init_timer2_initialize
     _init_watchdogs_initialize
     _util_pwm_initialize
   _main_loop
     _func_command_management
       _func_command_decode
         _golay_correct
           _golay_rotate_left
           _golay_rotate_right
           _golay_syndrome
           _golay_weight
         _golay_parity
         _golay_syndrome
       _util_command_ack_transmission
         _memset
         _sprintf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___ftadd *
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge *
             ___ftmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg *
             ___ftsub *
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol *
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___lltoft *
               ___ftpack
             ___wmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit *
             _putch *
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _strcat
         _strcpy
         _strlen
         _util_transmit_letter
           _util_transmit_morse_sequence
             _strlen
             _util_transmit_dash
               _util_pwm_start
               _util_pwm_stop
               _util_waits_delay_ms
             _util_transmit_dot
               _util_pwm_start
               _util_pwm_stop
               _util_waits_delay_ms
             _util_transmit_space_between_dots_dashes
               _util_waits_delay_ms
           _util_transmit_space_between_letters
             _util_waits_delay_ms
           _util_transmit_space_between_words
             _util_waits_delay_ms
     _init_watchdogs_initialize
     _util_beacon_transmission
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___ftadd *
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge *
           ___ftmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg *
           ___ftsub *
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol *
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___lltoft *
             ___ftpack
           ___wmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit *
           _putch *
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_dot
             _util_pwm_start
             _util_pwm_stop
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     D8      D8       6       84.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     84      8A       4       86.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      43       1       71.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A5       9        0.0%
DATA                 0      0     2A5      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 14 19:35:28 2017

                                  ??_init_initialize 001D                          util_onewire_read_byte@value 0091  
                               util_getTemperature@i 01CC                                         ___awdiv@sign 0023  
                                                 bsr 000FE0                                  ___wmul@multiplicand 0077  
                   __end_of_util_beacon_transmission 3750                                         __CFG_CP0$OFF 000000  
                                       __CFG_CP1$OFF 000000                                         __CFG_CP2$OFF 000000  
                                       __CFG_CP3$OFF 000000                                         ___ftadd@exp1 009A  
                                       ___ftadd@exp2 0099                                         ___ftadd@sign 0098  
                                                l107 3F86                                                  l216 468C  
                                                l153 39EA                                                  l403 46E6  
                                                l165 3920                                                  l159 3856  
                                                l178 1130                                                  l528 40D4  
                                                l555 413C                                                  l564 4038  
                                                l557 4170                                                  l549 3DCC  
                                                l566 407A                                                  l574 245C  
                                                l575 2652                                                  l932 3654  
                                                l679 0942                                                  l964 3C6E  
                                                l991 29CE                              ??_util_onewire_read_bit 001E  
                                                l993 29F6                                                  l987 2994  
                                       __CFG_CPB$OFF 000000                                                  _PR2 000FBB  
                                       __CFG_CPD$OFF 000000                          __end_of_util_getTemperature 178A  
                                       ___awmod@sign 0021                       ??_util_transmit_morse_sequence 0022  
                                _util_pwm_initialize 45D8                                                  tosl 000FFD  
                                                wreg 000FE8                                         __CFG_FOSC$XT 000000  
                            ?_init_timer1_initialize 0001                                         __CFG_LVP$OFF 000000  
         util_transmit_morse_sequence@morse_sequence 0071                                         ___ftdiv@cntr 007A  
                                       ___ftdiv@sign 007F                                                 l1002 2ACC  
                                               l1011 2AF6                                                 l1030 34C6  
                                               l1022 33D6                                                 l1111 3BCE  
                                               l1121 3EF2                                                 l1036 352C  
                                               l1061 4788                                                 l1029 349E  
                                               l6003 4070                                                 l6005 407E  
                                               l6101 044E                                                 l6013 00AE  
                                               l6007 4092                                                 l6103 0464  
                                               l6023 0128                                                 l5401 29DC  
                                               l6113 04F4                                                 l6105 0494  
                                               l7001 3716                                                 l6211 09A2  
                                               l6203 0946                                                 l6131 05DE  
                                               l6107 04AA                                                 l6043 01F8  
                                               l6019 00FA                                                 l6301 0DC0  
                                               l6133 05E4                                                 l6117 051A  
                                               l6053 0264                                                 l6029 015A  
                                               l6037 01D0                                                 l7005 3732  
                                               l7013 4552                                                 l5351 3C3C  
                                               l5343 3BFE                                                 l5423 2A5C  
                                               l5407 29EC                                                 l6311 0E34  
                                               l6303 0DCC                                                 l6231 0B60  
                                               l6215 09CC                                                 l6127 0578  
                                               l6047 023E                                                 l5353 3C5A  
                                               l5345 3C08                                                 l5425 2A6A  
                                               l5417 2A2E                                                 l5513 3CA6  
                                               l6313 0E48                                                 l6241 0BD6  
                                               l6233 0B6E                                                 l6161 0704  
                                               l6153 069C                                                 l6145 062A  
                                               l6073 030E                                                 l6065 02BA  
                                               l6057 026A                                                 l6049 0254  
                                               l7009 4540                                                 l7041 3F78  
                                               l7025 3F04                                                 l5355 3C64  
                                               l5347 3C26                                                 l5339 3BF0  
                                               l5443 2B20                                                 l5435 2AB2  
                                               l5427 2A78                                                 l6331 0FA2  
                                               l6323 0EC4                                                 l6307 0E0A  
                                               l6243 0BDE                                                 l6227 0AE4  
                                               l6219 0A1E                                                 l6171 077E  
                                               l6163 070C                                                 l6059 029E  
                                               l6403 433E                                                 l5453 2B6E  
                                               l5437 2AC0                                                 l5429 2A84  
                                               l5701 3464                                                 l5525 3CD4  
                                               l5541 3D1C                                                 l6333 0FB0  
                                               l6261 0C6A                                                 l6253 0C3E  
                                               l6237 0BAC                                                 l6229 0B12  
                                               l6173 079A                                                 l6165 0720  
                                               l6157 06DA                                                 l6149 067A  
                                               l6245 0BEC                                                 l6501 1CB4  
                                               l6405 4346                                                 l6351 23EA  
                                               l5527 3CDE                                                 l5519 3CBA  
                                               l5463 306A                                                 l6319 0EA6  
                                               l6191 08DE                                                 l6183 0870  
                                               l6175 07AA                                                 l6335 0FC6  
                                               l6511 1D0E                                                 l6503 1CC6  
                                               l6415 4368                                                 l6601 2EA8  
                                               l5801 3642                                                 l5545 3D2A  
                                               l5537 3D10                                                 l5529 3CE4  
                                               l5561 41C2                                                 l6329 0F86  
                                               l6281 0D08                                                 l6273 0CB0  
                                               l6185 0892                                                 l6097 0428  
                                               l6089 03C0                                                 l6337 0FE4  
                                               l5377 46DA                                                 l6521 1D68  
                                               l6513 1D20                                                 l6505 1CD8  
                                               l6409 4356                                                 l6417 436C  
                                               l5395 29A2                                                 l5803 364E  
                                               l5731 34F2                                                 l5483 30EC  
                                               l5635 28E4                                                 l5627 2804  
                                               l6259 0C64                                                 l6195 0908  
                                               l6187 08A0                                                 l6531 1DC2  
                                               l6523 1D7A                                                 l6515 1D32  
                                               l6507 1CEA                                                 l6453 4706  
                                               l5821 3FF6                                                 l5741 351A  
                                               l5581 4208                                                 l5573 41F0  
                                               l5565 41D0                                                 l5557 41B6  
                                               l5493 312A                                                 l5469 309E  
                                               l6293 0D74                                                 l6277 0CD8  
                                               l6197 0910                                                 l6461 46AA  
                                               l6541 1E1C                                                 l6533 1DD4  
                                               l6525 1D8C                                                 l6517 1D44  
                                               l6509 1CFC                                                 l6621 3804  
                                               l6391 264A                                                 l6359 2492  
                                               l5911 3E9E                                                 l5751 355C  
                                               l5743 3526                                                 l5735 3502  
                                               l5567 41D8                                                 l5487 310A  
                                               l5655 19B6                                                 l6295 0D7E  
                                               l6287 0D3C                                                 l6199 0924  
                                               l6463 46B2                                                 l6551 1E76  
                                               l6543 1E2E                                                 l6535 1DE6  
                                               l6527 1D9E                                                 l6519 1D56  
                                               l6385 25E6                                                 l6369 24EE  
                                               l6393 2664                                                 l6457 4716  
                                               l5817 3FC6                                                 l5809 444C  
                                               l5841 31C2                                                 l5921 4218  
                                               l5569 41DC                                                 l5577 41FA  
                                               l5497 3148                                                 l5673 1BFA  
                                               l5649 18F4                                                 l6481 44DE  
                                               l6561 1ED0                                                 l6553 1E88  
                                               l6545 1E40                                                 l6537 1DF8  
                                               l6529 1DB0                                                 l6617 37E8  
                                               l6625 4576                                                 l6379 25C4  
                                               l5827 4022                                                 l5915 3EE2  
                                               l5907 3E8A                                                 l5923 4226  
                                               l5771 35BC                                                 l5667 1B38  
                                               l5659 19DC                                                 l6299 0DB6  
                                               l6475 44C2                                                 l5587 4390  
                                               l6563 1EE2                                                 l6555 1E9A  
                                               l6547 1E52                                                 l6539 1E0A  
                                               l6491 1C5A                                                 l6571 1F0C  
                                               l6723 3334                                                 l5933 40C4  
                                               l6581 2D70                                                 l5909 3E98  
                                               l5757 357A                                                 l5685 47AC  
                                               l6477 44C6                                                 l5589 4394  
                                               l6565 1EF4                                                 l6557 1EAC  
                                               l6549 1E64                                                 l6493 1C6C  
                                               l6573 200A                                                 l6485 1C24  
                                               l6717 3300                                                 l6629 4588  
                                               l5943 40F8                                                 l6591 2E00  
                                               l5871 3294                                                 l5863 3268  
                                               l5791 361A                                                 l5695 3438  
                                               l6479 44D6                                                 l5951 4288  
                                               l6567 1F06                                                 l6559 1EBE  
                                               l6495 1C7E                                                 l6487 1C36  
                                               l6743 3394                                                 l6911 1296  
                                               l5873 329E                                                 l5961 42BE  
                                               l6497 1C90                                                 l6489 1C48  
                                               l6905 1284                                                 l5939 40E8  
                                               l6587 2DDE                                                 l5859 3254  
                                               l5891 3B6E                                                 l5795 362A  
                                               l5779 35EC                                                 l5955 428E  
                                               l6499 1CA2                                                 l6915 12AC  
                                               l5981 3DC0                                                 l5973 3D62  
                                               l5877 32BA                                                 l5869 3284  
                                               l5957 42B6                                                 l5949 4282  
                                               l6765 4512                                                 l6909 128C  
                                               l6861 10E0                                                 l6853 10B8  
                                               l5991 4174                                                 l6599 2E88  
                                               l5887 3B5A                                                 l6783 3E64  
                                               l6951 139E                                                 l5993 4188  
                                               l5889 3B68                                                 l6961 13DA  
                                               l6945 137A                                                 l6953 13AA  
                                               l6937 134A                                                 l6881 1152  
                                               l6865 10F4                                                 l5979 3DAA  
                                               l5899 3BBE                                                 l6891 11F8  
                                               l6867 110A                                                 l5989 4166  
                                               l6957 13BE                                                 l6893 1202  
                                               l6869 110E                                                 l6887 11E2  
                                               l6897 1218                                                 STR_1 7F99  
                                               STR_2 7F5B                                                 STR_3 7F72  
                                               STR_4 7F65                                                 STR_5 7FE3  
                                               STR_6 7FCB                                                 STR_7 7FF0  
                                               STR_8 7FC6                                                 STR_9 7FBC  
                                               u6071 3048                                                 u6250 43B4  
                                               u6091 307C                                                 u7208 0856  
                                               u8104 1248                                                 u6361 341C  
                                               u6257 43AA                                                 u8105 1240  
                                               u7250 093A                                                 u7308 0ACA  
                                               u7148 06C4                                                 u6381 3448  
                                               u7238 08C8                                                 u7600 240C  
                                               u7338 0B96                                                 u6571 319E  
                                               u8307 448E                                                 u7620 24EC  
                                               u7508 0DF4                                                 u7188 0768  
                                               u5861 2942                                                 u8317 44AA  
                           ??_util_onewire_read_byte 0073                                                 u6590 31E8  
                                               u7710 4626                                                 u5871 2960  
                                               u8327 4630                                                 u7288 098C  
                                               u8337 46DC                                                 u6770 3D42  
                                               u6755 410A                                                 u6595 31DE  
                                               u7660 267A                                                 u7548 0E90  
                                               u7820 44A0                                                 u7901 32DE  
                                               u8277 4686                                                 _RBPU 007F8F  
                                               u7590 23F8                                                 u7718 4628  
                                               u8287 4690                                                 u7760 2D46  
                                               u7568 0F6E                                                 u6785 3D96  
                                               u7921 3312                                                 u8297 4484  
                                               u7835 2F28                                                 u6980 0354  
                                               u7828 44A2                                                 u7765 2D3C  
                                               u7845 2F4A                                                 u7855 2F6C  
                                               u6985 0348                                                 u7865 2F8E  
                                               u6898 00E2                                                 u7875 2C0A  
                                               u7980 47BE                                                 u7885 2C20  
                                               u7895 2C36                                                 u7998 47C0  
                                               _TMR2 000FBC                                                 _WPUB 000F61  
                                       __CFG_WRTC$ON 000000                                         __CFG_WRTD$ON 000000  
                                               _main 4860                                         ___ftpack@arg 001C  
                                       ___ftpack@exp 001F                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 indf0 000FEF  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 0044                                        __CFG_BORV$190 000000  
              high_priority_int@current_signal_level 0016                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00A6  
                                      __CFG_IESO$OFF 000000                                 ?_util_pwm_initialize 0001  
    __end_of_util_transmit_space_between_dots_dashes 4860     __size_of_util_transmit_space_between_dots_dashes 000E  
          ??_util_transmit_space_between_dots_dashes 0021             ?_util_transmit_space_between_dots_dashes 0001  
            _util_transmit_space_between_dots_dashes 4852                              ?_init_timer2_initialize 0001  
                                       ___ftmul@cntr 0083                                         ___param_bank 000000  
                                       ___ftmul@sign 0084                                         ___fttol@exp1 009A  
                                       ___fttol@lval 0096                                   _util_transmit_dash 47EC  
                            util_getTemperature@sign 01A4                               __size_of_golay_correct 02E2  
                                              ?_main 0001                                      __end_of___awdiv 3D34  
                                              _ADRES 000FC3                                      __end_of___ftadd 2B94  
                                              STR_10 7FBF                                                STR_11 7FBA  
                                              STR_12 7FD1                                                STR_20 7FEB  
                                              STR_13 7FC7                                                STR_21 7FE1  
                                              STR_14 7FAD                                                STR_22 7FF1  
                                              STR_30 7FC5                                                STR_15 7FE2  
                                              STR_23 7FCC                                                STR_31 7FA0  
                                              STR_24 7FA4                                                STR_16 7FF5  
                                              STR_40 7FB8                                                STR_32 7FA6  
                                              STR_17 7FA3                                                STR_25 7FE7  
                                              STR_33 7FAC                                                STR_41 7F7D  
                                              STR_26 7F8D                                                STR_18 7FBB  
                                              STR_34 7FB2                                                STR_42 7F92  
                                              STR_19 7FA2                                                STR_27 7FDD  
                                              STR_35 7F8C                                                STR_43 7FBE  
                                              STR_28 7FE6                                                STR_36 7FD6  
                                              STR_44 7F84                                      __end_of___awmod 4212  
                                              STR_29 7FDC                                                STR_37 7FD0  
                                              STR_45 7F8B                                                STR_46 7FFC  
                                              STR_38 7FCA                                                STR_47 7FFA  
                                              STR_39 7FC4                                      __end_of___ftdiv 340C  
                                    __end_of___ftneg 4796                                      __end_of___lldiv 3BE0  
                                  ?_low_priority_int 0001                                      __end_of___ftmul 3188  
                                    ___awdiv@divisor 0073                                      __end_of___llmod 3F04  
                                    __end_of___ftsub 4476                                      __end_of___fttol 32CC  
                        __size_of_util_onewire_reset 0042                                        __CFG_WDTEN$ON 000000  
                                              i2l511 236E                                                i2l508 22FE  
                                              i2l485 2070                                                i2l489 20D6  
                                              i2l499 21B2                                      ___awdiv@counter 0022  
                     __end_of_init_timer1_initialize 474E                                                _TMR1H 000FCF  
                                              _TMR1L 000FCE                                      __end_of__doprnt 0FF0  
                                ?_util_transmit_dash 0001             func_command_management@candidate_command 00DC  
                                 ??_low_priority_int 0060                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                      __CFG_WRT3$OFF 000000                                         ___lltoft@exp 0028  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                         __end_of_util_getSolarCurrent 38EC  
                                      __CFG_WRTB$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                      ___awtoft@sign 0024                                      __end_of_dpowers 7EFD  
                                              _scale 178A                                      __end_of_isdigit 47B4  
                                 __CFG_MCLRE$EXTMCLR 000000                                        ___ftpack@sign 0020  
                                              _putch 4882                             ??_util_onewire_write_bit 001E  
                          util_waits_delay_secs@secs 0071                                       __CFG_BOREN$OFF 000000  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                          __end_of_util_waits_delay_ms 46FC  
util_command_ack_transmission@BEACON_COMMAND_MESSAGE 0100                                      __end_of_sprintf 442A  
                                  golay_correct@mask 0095                                    golay_correct@errs 0089  
                               ??_util_transmit_dash 0021                                        ?_golay_parity 001C  
                              ??_util_pwm_initialize 001C                       __end_of_init_timer2_initialize 4820  
                                      ?_golay_weight 001C                              util_waits_delay_hours@i 002A  
                     util_getTemperature@bit_in_byte 01C7                                      __initialization 42D8  
                          util_beacon_transmission@i 01C0                                         __end_of_main 486C  
                                  _golay_rotate_left 412A                         __end_of_util_transmit_letter 2010  
                         ?_init_watchdogs_initialize 0001                              _func_command_management 3DD6  
                                 ?_golay_rotate_left 001C                                               ??_main 002C  
                                      ___fttol@sign1 0095                                        __activetblptr 000002  
                               __size_of__tdiv_to_l_ 0132                           util_onewire_read_bit@value 001F  
                          util_getSolarCurrent@value 009D                                  ??_golay_rotate_left 0022  
                                             _ADCON1 000FC1                                               _ADCON2 000FC0  
                                   ___llmod@dividend 0079                                               ?_scale 0085  
                                             _CCPR2L 000F67                                     ___awdiv@dividend 0071  
                                   __end_of___awtoft 4536                                               ?_putch 0001  
                                   __end_of___ftpack 3C8E                       high_priority_int@valid_samples 0032  
                                   __end_of___lltoft 4278                                               i2l5303 227C  
                                             i2l5223 20C6                                               i2l5321 2332  
                                             i2l5305 228C                                               i2l5235 20F0  
                                             i2l5261 2180                                               i2l5263 2188  
                                             i2l5329 236C                                               i2l5273 21C8  
                                             i2l5257 215A                                               i2l5249 2138  
                                             i2l5283 2238                                               i2l5293 2252  
                                             i2l5299 226A                                        _golay_correct 23AA  
                                   __end_of___lwtoft 4772                      __size_of_util_onewire_read_byte 0194  
                        __size_of_init_io_initialize 00BC                    __size_of_util_beacon_transmission 00EA  
                             __size_of_util_pwm_stop 0008                            ?_util_beacon_transmission 00D8  
                     ?_util_command_ack_transmission 00D8                                       ??_golay_parity 0020  
                                     ??_golay_weight 0020                                       __CFG_XINST$OFF 000000  
                                       __doprnt$2964 00AD                                     __end_of__powers_ 7F24  
                                       _CCPTMRS0bits 000F49                             ?_util_onewire_write_byte 001E  
                          __end_of_golay_rotate_left 41A2                                               ___ftge 3F96  
                         util_onewire_read_byte@bit0 0081                           util_onewire_read_byte@bit1 0083  
                         util_onewire_read_byte@bit2 0085                           util_onewire_read_byte@bit3 0087  
                         util_onewire_read_byte@bit4 0089                           util_onewire_read_byte@bit5 008B  
                         util_onewire_read_byte@bit6 008D                           util_onewire_read_byte@bit7 008F  
                            ??_util_waits_delay_mins 0026                              ??_util_waits_delay_secs 0021  
                                             ___wmul 463E                              __size_of_golay_syndrome 007E  
                                          ??___awdiv 0022                                            ??___ftadd 0095  
                                     __CFG_STVREN$ON 000000                                            ??___awmod 0020  
                                          ??___ftdiv 0025                                            ??___ftneg 001F  
                                          ??___lldiv 001C                                            ??___ftmul 0028  
                                          ??___llmod 0021                                            ??___ftsub 002B  
                                          ??___fttol 0090                          util_onewire_write_byte@bit0 0071  
                        util_onewire_write_byte@bit1 0073                          util_onewire_write_byte@bit2 0075  
                        util_onewire_write_byte@bit3 0077                          util_onewire_write_byte@bit4 0079  
                        util_onewire_write_byte@bit5 007B                          util_onewire_write_byte@bit6 007D  
                        util_onewire_write_byte@bit7 007F                                            ??__doprnt 00A7  
                                             _memset 46FC                                   golay_rotate_left@i 0026  
                                             _fround 268C                                   golay_rotate_left@n 0020  
                                             clear_0 4300                                               clear_1 4320  
                                   ___awdiv@quotient 0024                                      ___awmod@divisor 001E  
                                       __doprnt@flag 00B0                                      ___awmod@counter 0020  
                                       __doprnt@fval 00BE                          util_waits_delay_hours@hours 0075  
                                       __doprnt@prec 00C1                                               _strcat 44B8  
                                             _strcpy 46A0                                               _strlen 4386  
                              ___ftmul@f3_as_product 0080                       util_command_ack_transmission@i 01C0  
                                       __pdataCOMRAM 003F                                            ??_isdigit 001C  
                                       __mediumconst 7ED4                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             putch@c 0001                                            ??_sprintf 002B  
                                    __CFG_HFOFST$OFF 000000                                       ?_golay_correct 0085  
                           ??_util_getBatteryCurrent 002B                      __size_of_util_onewire_write_bit 0030  
                                    _init_initialize 4820                                           __accesstop 0060  
                            __end_of__initialization 4326                                      __CFG_PBADEN$OFF 000000  
                                         ___ftadd@f1 008F                                           ___ftadd@f2 0092  
                                         ___ftge@ff1 001C                                           ___ftge@ff2 001F  
                                   golay_weight@bits 0083                                        ___rparam_used 000001  
                                         ___ftdiv@f1 0074                                           ___ftdiv@f2 0077  
                                         ___ftdiv@f3 007B                             ??_util_getBatteryVoltage 002B  
 util_command_ack_transmission@BEACON_COMMAND_BUFFER 0180                                           ___ftneg@f1 001C  
                                         ___awtoft@c 0071                                       golay_correct@i 0099  
                                     golay_correct@j 009F                                       golay_correct@s 009B  
                                     golay_correct@w 0090                                           ___ftmul@f1 0079  
                                         ___ftmul@f2 007C                                           ___ftsub@f1 009B  
                                         ___ftsub@f2 009E                                           ___fttol@f1 008C  
                                     __pcstackCOMRAM 0001                                 _util_getSolarCurrent 3822  
       func_command_management@decoded_command_value 00E2                            ??_func_command_management 002C  
                                         ___lltoft@c 0071                             main_loop@battery_current 01D3  
                                      __end_of_scale 1C20                               _util_onewire_read_byte 2B94  
                                      __end_of_putch 4884                                        _util_pwm_stop 486C  
                                         ___lwtoft@c 0071                                   _golay_rotate_right 4026  
                                     golay_parity@cw 001C                                           __div_to_l_ 353E  
                           main_loop@battery_voltage 01D5                       __size_of_util_onewire_read_bit 0032  
                      __end_of_util_onewire_read_bit 463E                                  ?_golay_rotate_right 001C  
                                         __doprnt@ap 00A5                                           __doprnt@pb 00A1  
                    func_command_decode@golay_errors 00AF                                      __div_to_l_@exp1 0027  
                                    __div_to_l_@cntr 0026                                              ??_scale 002B  
                                    __div_to_l_@quot 0022            __end_of_util_transmit_space_between_words 4844  
         __size_of_util_transmit_space_between_words 000E                  ??_util_transmit_space_between_words 0021  
                 ?_util_transmit_space_between_words 0001                    _util_transmit_space_between_words 4836  
                                            ??_putch 001C               high_priority_int@tmr1_interrupt_number 003C  
                                         __pbssBANK0 00E4                                           __pbssBANK2 0200  
                                 __size_of_main_loop 0092                                       golay_weight@cw 001C  
          high_priority_int@times_threshold_exceeded 0038                                      __CFG_PLLCFG$OFF 000000  
                               _util_transmit_letter 1C20                                        __div_to_l_@f1 001C  
                                      __div_to_l_@f2 001F                                   __CFG_CCP2MX$PORTC1 000000  
                       __size_of_func_command_decode 018C                           __size_of_golay_rotate_left 0078  
                              ?_util_getSolarCurrent 009B                                 ??_golay_rotate_right 0022  
                                            ?___ftge 001C                         util_onewire_write_bit@bit_in 001C  
                                            ?___wmul 0075                     high_priority_int@sample_position 003A  
                                 __CFG_CCP3MX$PORTB5 000000                               _util_onewire_write_bit 4670  
                                     ?_util_pwm_stop 0001                                              ?_memset 001C  
                                            ?_fround 0085                                            ?___awtoft 0071  
                                          ?___ftpack 001C                                    _high_priority_int 0008  
                                          ?___lltoft 0071                                              ?_strcat 001C  
                                            ?_strcpy 001C                                              ?_strlen 001C  
                                          ?___lwtoft 0071                                 __end_of_golay_parity 45D8  
                                 ?_high_priority_int 0001                                 __end_of_golay_weight 3DD6  
                            __end_of_init_initialize 4836                              __size_of_util_pwm_start 0008  
                                    ??_golay_correct 008B                      __end_of_func_command_management 3E70  
                                ??_high_priority_int 0001                         __size_of_util_getTemperature 079A  
                              ?_util_transmit_letter 0001                      __size_of_util_getBatteryCurrent 00CA  
                          __size_of_low_priority_int 008E                                     golay_syndrome@cw 001C  
                               util_waits_delay_ms@i 001F                         util_waits_delay_mins@minutes 0073  
                                    __CFG_PWRTEN$OFF 000000                                    __end_of__npowers_ 7F4B  
                                            __Hparam 0000                      __size_of_util_getBatteryVoltage 00BE  
                                         _scale$2963 0088                 __end_of_util_transmit_morse_sequence 42D8  
              __size_of_util_transmit_morse_sequence 0060                         _util_transmit_morse_sequence 4278  
                                            __Lparam 0000                           util_getTemperature@bit_mem 0100  
        __end_of_util_transmit_space_between_letters 4852         __size_of_util_transmit_space_between_letters 000E  
              ??_util_transmit_space_between_letters 0021                 ?_util_transmit_space_between_letters 0001  
                _util_transmit_space_between_letters 4844                                       _golay_syndrome 40AC  
                                    __size_of___ftge 0090                                              ___awdiv 3C8E  
                                            ___ftadd 292C                                              ___awmod 41A2  
                                            ___ftdiv 32CC                                              ___ftneg 4772  
                                            ___lldiv 3B30                                      __size_of___wmul 0032  
                                            ___ftmul 3036                             ??_util_waits_delay_hours 0029  
                                            ___llmod 3E70                                              ___ftsub 442A  
                        util_getTemperature@byte_mem 0190                                              ___fttol 3188  
                          __end_of_high_priority_int 23AA                       util_getTemperature@temperature 01C9  
                                            __doprnt 00AA                           __end_of_util_onewire_reset 44B8  
                                  __end_of_main_loop 3F96                                              __pcinit 42D8  
                        ??_init_watchdogs_initialize 001C                                           ??___awtoft 0024  
                                         ??___ftpack 0021                                      __size_of_memset 002C  
                                    __size_of_fround 02A0                                              __ramtop 0600  
                         util_getTemperature@num_bit 01A2                                           ??___lltoft 0024  
                                            __ptext0 4860                                              __ptext1 3F04  
                                            __ptext2 4536                                              __ptext3 456C  
                                            __ptext4 0FF0                                              __ptext5 4334  
                                            __ptext6 2EB4                                              __ptext7 4670  
                                            __ptext8 4476                                              __ptext9 2B94  
                                         ??___lwtoft 0024                                      __size_of_strcat 0042  
                                    __size_of_strcpy 0030                                      __size_of_strlen 0052  
                                          _T1CONbits 000FCD                                          ?__div_to_l_ 001C  
                                            _dpowers 7ED5                                            _T2CONbits 000FBA  
                        util_getTemperature@num_byte 01C5                                              _isdigit 4796  
                                golay_rotate_left@cw 001C                                     ___awmod@dividend 001C  
                       util_onewire_write_byte@value 001E                                  golay_rotate_right@i 0026  
                                golay_rotate_right@n 0020                                 main_loop@temperature 01CE  
                                            _sprintf 43D8                                        __doprnt@width 00B2  
                      util_transmit_morse_sequence@i 0024                            func_command_decode@header 00A9  
                                     __pintcode_body 2010                                 end_of_initialization 4326  
                        __end_of_util_pwm_initialize 460C                                              memset@c 001E  
                                            memset@n 0020                                              memset@p 0022  
                                      __Lmediumconst 7ED4                                              int_func 2010  
                      high_priority_int@received_bit 001A                          __size_of_util_transmit_dash 001A  
                                    ___lldiv@divisor 0075                               __end_of_golay_syndrome 412A  
                             ??_util_getSolarCurrent 002B                                      ___lldiv@counter 0020  
                                            postdec1 000FE5                                              postdec2 000FDD  
                       __size_of_util_waits_delay_ms 002C                                      ??_util_pwm_stop 001C  
                                            postinc0 000FEE                                              postinc2 000FDE  
              util_beacon_transmission@solar_current 00DB                       __size_of_util_waits_delay_mins 0036  
                                     __tdiv_to_l_@f1 001C                                       __tdiv_to_l_@f2 001F  
                     __size_of_util_waits_delay_secs 0052                        __end_of_util_waits_delay_mins 45A2  
                             _util_getBatteryCurrent 38EC                        __end_of_util_waits_delay_secs 4386  
                   func_command_decode@fixed_command 00AB                                              strlen@s 001C  
                                      ??__tdiv_to_l_ 0022                      ??_util_command_ack_transmission 002B  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTDbits 000F83                              high_priority_int@sample 0018  
             high_priority_int@previous_received_bit 002E                         func_command_decode@body_data 00B5  
                             _util_getBatteryVoltage 39B6                     __size_of_util_onewire_write_byte 0182  
                           _util_getTemperature$2960 01B0                             _util_getTemperature$2957 01A7  
                           _util_getTemperature$2958 01AA                             _util_getTemperature$2959 01AD  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISDbits 000F95                                     ?_init_initialize 0001  
                         __end_of_init_io_initialize 3B30                               ??_util_transmit_letter 0026  
                          _init_watchdogs_initialize 47B4                                          ___ftdiv@exp 007E  
                                        _CCP2CONbits 000F66                util_beacon_transmission@BEACON_BUFFER 0180  
                                __size_of__div_to_l_ 0128                                      ?_golay_syndrome 001C  
                                    golay_correct@cw 0085                                          ___ftmul@exp 007F  
                            ?_util_onewire_read_byte 0071                                    _util_transmit_dot 47D2  
                 func_command_decode@decoded_command 00A5                           __size_of_high_priority_int 23A2  
                           ??_init_timer1_initialize 001C                                       __end_of___ftge 4026  
                              __size_of_golay_parity 0036                      __size_of_util_waits_delay_hours 0036  
                   high_priority_int@noise_avg_value 003F                                       __end_of___wmul 4670  
                                 ?_util_transmit_dot 0001                                __size_of_golay_weight 00A2  
                                      __pidataCOMRAM 487C                                       __end_of_memset 4728  
                                     __end_of_fround 292C                                       __end_of_strcat 44FA  
                                     __end_of_strcpy 46D0                                       __end_of_strlen 43D8  
                                start_initialization 42D8                                  ??_util_transmit_dot 0021  
                             util_waits_delay_mins@i 0027                               util_waits_delay_secs@i 0022  
                             util_waits_delay_secs@j 0024                                       _util_pwm_start 4874  
                                __end_of__tdiv_to_l_ 353E                                  _func_command_decode 2D28  
                           _util_beacon_transmission 3666                             ??_init_timer2_initialize 001C  
                util_beacon_transmission@temperature 00DF                                     _low_priority_int 0018  
                                    ___llmod@divisor 007D                                      ___llmod@counter 0021  
                                       _golay_parity 45A2                       __end_of_util_onewire_read_byte 2D28  
                                       _golay_weight 3D34                            __end_of_util_transmit_dot 47EC  
                               ?_func_command_decode 00A1                              ?_util_onewire_write_bit 001C  
              high_priority_int@activation_threshold 0042                                             ??___ftge 0022  
                                           ??___wmul 0026                                          __doprnt@exp 00B8  
                                        __doprnt@val 00B4                                  _util_getTemperature 0FF0  
             func_command_management@decoded_command 00E0                                             ??_memset 0022  
                                           ??_fround 002B                                             ??_strcat 0020  
                                           ??_strcpy 0020                                             ??_strlen 001E  
                                    golay_weight@F87 7F4B                                           fround@prec 008E  
                             __end_of_util_pwm_start 487C                                    __size_of___awtoft 003C  
                                  __size_of___ftpack 00AE                                    __size_of___lltoft 0066  
                                        __pbssCOMRAM 002C                                      golay_weight@wgt 0071  
              __end_of_util_command_ack_transmission 3822               __size_of_util_command_ack_transmission 00D2  
                      _util_command_ack_transmission 3750                                    __size_of___lwtoft 0024  
                                      __pcstackBANK0 0060                                        __pcstackBANK1 0100  
             high_priority_int@previous_signal_level 0030                                         _isdigit$2527 001D  
                              _util_onewire_read_bit 460C                                 ?_util_getTemperature 009B  
                             _util_waits_delay_hours 4536                    util_getTemperature@shift_reg_bit0 01B3  
                  util_getTemperature@shift_reg_bit1 01B5                    util_getTemperature@shift_reg_bit2 01B7  
                  util_getTemperature@shift_reg_bit3 01B9                    util_getTemperature@shift_reg_bit4 01BB  
                  util_getTemperature@shift_reg_bit5 01BD                    util_getTemperature@shift_reg_bit6 01BF  
                  util_getTemperature@shift_reg_bit7 01C1               util_beacon_transmission@BEACON_MESSAGE 0100  
                                      golay_parity@p 0021                                            __doprnt@c 00C3  
                                          __doprnt@f 00A3                util_getTemperature@shift_reg_bit_temp 01C3  
                                      golay_weight@k 0081                       __end_of_util_onewire_write_bit 46A0  
                           ?_func_command_management 0001                                ??_func_command_decode 0028  
                                          __pintcode 0008                                        __pmediumconst 7ED4  
                        __size_of_golay_rotate_right 0086                                             ?___awdiv 0071  
                                           ?___ftadd 008F                                             ?___awmod 001C  
                                           ?___ftdiv 0074                                             ?___ftneg 001C  
                                           ?___lldiv 0071                                             ?___ftmul 0079  
                                           ?___llmod 0079                                             ?___ftsub 009B  
                                          __npowers_ 7F24                                             ?___fttol 008C  
                    __size_of_init_timer1_initialize 0026                                             ?__doprnt 00A1  
                              _global_command_buffer 00E4                                          __pintcodelo 0018  
                                   __CFG_PRICLKEN$ON 000000                                          __tdiv_to_l_ 340C  
                                       ??__div_to_l_ 0022                              _util_onewire_write_byte 2EB4  
                                    ?_util_pwm_start 0001                                             ?_isdigit 0001  
                                          _main_loop 3F04                                      golay_syndrome@i 0024  
                 util_command_ack_transmission@value 00DA                           high_priority_int@total_add 0034  
         high_priority_int@cycles_transmitter_active 0036                                  _util_waits_delay_ms 46D0  
                              ??_util_getTemperature 009E                                   _util_onewire_reset 4476  
                                           ?_sprintf 00C4                                       __size_of_scale 0496  
                              __end_of_golay_correct 268C                                       __size_of_putch 0002  
                    __size_of_init_timer2_initialize 001A                              func_command_decode@body 00B1  
                        util_getBatteryVoltage@value 0088                                       ___wmul@product 0026  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATDbits 000F8C                                  ?_util_onewire_reset 001C  
                       _global_command_pending_check 00E8                                             _IPR1bits 000F9F  
                                           _PIE1bits 000F9D                           __size_of_util_transmit_dot 001A  
                                           _PIR1bits 000F9E                                   __end_of__div_to_l_ 3666  
                                           i2u560_40 221E                                             i2u552_40 20FC  
                                           i2u560_45 2216                                             i2u545_40 2086  
                                           i2u554_40 2120                                             i2u546_48 2088  
                                           i2u548_40 20AE                                             i2u549_48 20B0  
                 __size_of_init_watchdogs_initialize 001E                              ?_util_getBatteryCurrent 009B  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                               ?_util_waits_delay_ms 001C                              __end_ofgolay_weight@F87 7F5B  
            util_beacon_transmission@battery_current 00DD                              ?_util_getBatteryVoltage 0085  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0075  
                               ??_util_onewire_reset 001E                           util_transmit_letter@letter 0026  
                                         ?_main_loop 0001              util_beacon_transmission@battery_voltage 00D8  
                             ?_util_onewire_read_bit 001C                          util_getBatteryCurrent@value 009D  
                                          copy_data0 42EC                               _init_timer1_initialize 4728  
                              util_waits_delay_ms@ms 001C                                     ??_golay_syndrome 0020  
                         __end_of_util_transmit_dash 4806               high_priority_int@is_transmitter_active 003E  
                     __end_of_util_getBatteryCurrent 39B6                                             __Hrparam 0000  
                       __size_of_util_pwm_initialize 0034                 func_command_decode@candidate_command 00A1  
                                 _init_io_initialize 3A74                                             __Lrparam 0000  
                              ??_util_waits_delay_ms 001E                        __size_of_util_getSolarCurrent 00CA  
                                  __CFG_P2BMX$PORTC0 000000                    __end_of_init_watchdogs_initialize 47D2  
                     __end_of_util_getBatteryVoltage 3A74                               _init_timer2_initialize 4806  
                                   __size_of___awdiv 00A6                                     __size_of___ftadd 0268  
                                   __size_of___awmod 0070                                     __size_of___ftdiv 0140  
                                   __size_of___ftneg 0024                                __end_of_util_pwm_stop 4874  
                                   __size_of___lldiv 00B0                                     __size_of___ftmul 0152  
                          ??_util_onewire_write_byte 0020                                     __size_of___llmod 0094  
                                   __size_of___ftsub 004C                                     __size_of___fttol 0144  
                                ?_init_io_initialize 0001                                             ___awtoft 44FA  
                                           ___ftpack 3BE0                                     __size_of__doprnt 0F46  
                 high_priority_int@num_received_bits 002C                                          _fround$2961 008B  
                                        _fround$2962 0088                             __end_of_low_priority_int 00A6  
                                           ___lltoft 4212                           ??_util_beacon_transmission 002B  
                              _util_waits_delay_mins 456C                                _util_waits_delay_secs 4334  
                                         _ANSELAbits 000F38                                             ___lwtoft 474E  
                                         _ANSELBbits 000F39                                           _ANSELDbits 000F3B  
                                         strcat@from 001E                                     __size_of_isdigit 001E  
                                           __ptext10 460C                                             __ptext11 32CC  
                                           __ptext20 1C20                                             __ptext12 44FA  
                                           __ptext21 4836                                             __ptext13 3822  
                                           __ptext30 4386                                             __ptext22 4844  
                                           __ptext14 39B6                                             __ptext31 46A0  
                                           __ptext23 4278                                             __ptext15 38EC  
                                           __ptext40 3036                                             __ptext32 44B8  
                                           __ptext24 4852                                             __ptext16 474E  
                                           __ptext41 41A2                                             __ptext33 43D8  
                                           __ptext25 47D2                                             __ptext17 3666  
                                           __ptext50 292C                                             __ptext42 3C8E  
                                           __ptext34 00AA                                             __ptext26 47EC  
                                           __ptext18 3DD6                                             __ptext51 3BE0  
                                           __ptext43 340C                                             __ptext35 178A  
                                           __ptext27 46D0                                             __ptext19 3750  
                                           __ptext60 4026                                             __ptext52 4772  
                                           __ptext44 353E                                             __ptext36 4882  
                                           __ptext28 486C                                             __ptext61 412A  
                                           __ptext53 3F96                                             __ptext45 4212  
                                           __ptext37 4796                                             __ptext29 4874  
                                           __ptext62 4820                                             __ptext54 46FC  
                                           __ptext46 3E70                                             __ptext38 268C  
                                           __ptext63 45D8                                             __ptext55 2D28  
                                           __ptext47 3B30                                             __ptext39 463E  
                                           __ptext64 47B4                                             __ptext56 45A2  
                                           __ptext48 3188                                             __ptext65 4806  
                                           __ptext57 23AA                                             __ptext49 442A  
                                           __ptext66 4728                                             __ptext58 3D34  
                                           __ptext67 3A74                                             __ptext59 40AC  
                                           __powers_ 7EFD                                     __size_of_sprintf 0052  
                               ??_init_io_initialize 001C                                           strcpy@from 001E  
                      __size_of_util_transmit_letter 03F0                     util_getSolarCurrent@solarCurrent 00A0  
                           __size_of_init_initialize 0016                                        __size_of_main 000C  
                         util_onewire_reset@presence 001F                                         _PSTR2CONbits 000F63  
                                           int$flags 0044                                 golay_rotate_right@cw 001C  
                      ?_util_transmit_morse_sequence 0071                        util_getBatteryVoltage@voltage 008B  
                                     __doprnt@tmpval 00BA                                          ??_main_loop 002C  
                                         _INTCONbits 000FF2                              ?_util_waits_delay_hours 0075  
                                           isdigit@c 001E                                             memset@p1 001C  
                             main_loop@solar_current 01D1                                             scale@scl 008B  
                    __end_of_util_onewire_write_byte 3036                                             intlevel1 0000  
                                           intlevel2 0000                                            sprintf@ap 00D2  
                                          sprintf@pb 00D4                                     __tdiv_to_l_@exp1 002A  
                                   __tdiv_to_l_@cntr 0029                                            sprintf@wh 00C4  
                                   __tdiv_to_l_@quot 0025                                         _VREFCON0bits 000F42  
                                   ___lldiv@dividend 0071                                     ??_util_pwm_start 001C  
                   func_command_decode@decoded_value 00A7                 util_command_ack_transmission@command 00D8  
                             ?_util_waits_delay_mins 0073                               ?_util_waits_delay_secs 0071  
                                       ?__tdiv_to_l_ 001C                     __size_of_func_command_management 009A  
                                           sprintf@f 00C6                                             strcat@cp 0020  
                                           strcat@to 001C                       __end_of_util_waits_delay_hours 456C  
                                   ___lldiv@quotient 001C                                             strcpy@cp 0020  
                                           strlen@cp 0020                                             strcpy@to 001C  
                                  __CFG_T3CMX$PORTB5 000000                                 golay_correct@cwsaver 0091  
                           high_priority_int@samples 0200                          __end_of_func_command_decode 2EB4  
               util_getBatteryCurrent@batteryCurrent 00A0                           __end_of_golay_rotate_right 40AC  
                     high_priority_int@oldest_sample 0014  
